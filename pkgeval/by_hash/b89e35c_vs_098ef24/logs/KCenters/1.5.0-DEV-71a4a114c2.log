Julia Version 1.5.0-DEV.668
Commit 71a4a114c2 (2020-04-23 08:01 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed LearnBase ─────────────────── v0.2.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed TableTraits ───────────────── v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MLDataUtils ───────────────── v0.5.1
  Installed MLDataPattern ─────────────── v0.5.1
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Compat ────────────────────── v3.8.0
  Installed Missings ──────────────────── v0.4.3
  Installed MappedArrays ──────────────── v0.2.2
  Installed PooledArrays ──────────────── v0.5.3
  Installed JSON ──────────────────────── v0.21.0
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed StatsBase ─────────────────── v0.32.2
  Installed OrderedCollections ────────── v1.1.0
  Installed DataAPI ───────────────────── v1.2.0
  Installed Tables ────────────────────── v1.0.4
  Installed SimilaritySearch ──────────── v0.3.19
  Installed DataFrames ────────────────── v0.20.2
  Installed Parsers ───────────────────── v1.0.2
  Installed Reexport ──────────────────── v0.2.0
  Installed DataStructures ────────────── v0.17.13
  Installed InvertedIndices ───────────── v1.0.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.8.0
  [9a962f9c] + DataAPI v1.2.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.13
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.1
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.2
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_GORBlM/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_GORBlM/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.8.0
  [9a962f9c] DataAPI v1.2.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.13
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.1
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.2
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9326678744951884
[ Info: 0.8302954188982645
[ Info: 0.5548888477186362
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32082008394102257
mean(cdnet.distances) = 0.35173678532242775
mean(crand.distances) = 0.34049862327675023
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5263671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5263671875,"f1":null,"seconds":3.885477781295776e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.6953125,"distances_sum":1394.4467561896188}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1611328125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1611328125,"f1":null,"seconds":3.259629011154175e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":4.7890625,"distances_sum":410.1584219621344}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5263671875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5263671875,"f1":null,"seconds":3.885477781295776e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.6953125,"distances_sum":1394.4467561896188}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.902455357142858,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.421875,"distances_sum":2303.392108389532}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8310546875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8310546875,"f1":0.902455357142858,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.421875,"distances_sum":2303.392108389532}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9092662545787552,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.296875,"distances_sum":2406.4897737152037}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9044890873015881,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.390625,"distances_sum":2404.6844657991132}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8466796875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8466796875,"f1":0.9092662545787552,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.296875,"distances_sum":2406.4897737152037}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8466796875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8466796875,"f1":0.9092662545787552,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.296875,"distances_sum":2406.4897737152037}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1728515625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1728515625,"f1":null,"seconds":2.859160304069519e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":4.90625,"distances_sum":482.8781009802094}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5205078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5205078125,"f1":0.6689518814518819,"seconds":4.20399010181427e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.921875,"distances_sum":1315.416888905477}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5205078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5205078125,"f1":0.6689518814518819,"seconds":4.20399010181427e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.921875,"distances_sum":1315.416888905477}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8600623334998344,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.2890625,"distances_sum":2088.686506851416}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7754420926295934,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.796875,"distances_sum":1667.913663346808}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8600623334998344,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.2890625,"distances_sum":2088.686506851416}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9419871794871799,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8828125,"distances_sum":2510.8311728709386}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9365873709623713,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8671875,"distances_sum":2460.683394517007}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8992934149184155,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.6328125,"distances_sum":2264.3059687991104}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8661120129870139,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.421875,"distances_sum":2121.6504948211727}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9419871794871799,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8828125,"distances_sum":2510.8311728709386}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9013671875,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9419871794871799,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8828125,"distances_sum":2510.8311728709386}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5517578125,"f1":null,"seconds":4.542991518974304e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.265625,"distances_sum":1369.7519275514421}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5517578125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5517578125,"f1":null,"seconds":4.542991518974304e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.265625,"distances_sum":1369.7519275514421}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8429955461205471,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.0078125,"distances_sum":2070.8291875297646}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8429955461205471,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.0078125,"distances_sum":2070.8291875297646}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9379953379953386,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.75,"distances_sum":2584.791544037998}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9379953379953386,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.75,"distances_sum":2584.791544037998}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.892578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9379953379953386,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.75,"distances_sum":2584.791544037998}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7099609375,"f1":0.8210378163503171,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.828125,"distances_sum":1800.6097289329737}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.6638230085372925e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.140625,"distances_sum":902.2346807599027}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7099609375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7099609375,"f1":0.8210378163503171,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.828125,"distances_sum":1800.6097289329737}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9514022435897441,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7734375,"distances_sum":2584.963657368387}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9032540376290383,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.46875,"distances_sum":2229.801753928128}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9514022435897441,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7734375,"distances_sum":2584.963657368387}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9541723901098906,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.78125,"distances_sum":2574.5227105791027}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9614468864468866,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.765625,"distances_sum":2676.929198146859}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.965086996336997,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8515625,"distances_sum":2688.402214804694}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9528533966033971,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.765625,"distances_sum":2609.149433594656}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.965086996336997,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8515625,"distances_sum":2688.402214804694}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.965086996336997,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8515625,"distances_sum":2688.402214804694}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4375,"f1":0.5854541292041292,"seconds":3.982335329055786e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.8125,"distances_sum":1007.0435337162502}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8062097624597633,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.7890625,"distances_sum":1652.4600405191086}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6884765625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6884765625,"f1":0.8062097624597633,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.7890625,"distances_sum":1652.4600405191086}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8988787254412262,"seconds":8.73953104019165e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.234375,"distances_sum":2159.811095552299}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.8988787254412262,"seconds":8.73953104019165e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.234375,"distances_sum":2159.811095552299}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9098443223443231,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.375,"distances_sum":2194.6319384471335}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9098443223443231,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.375,"distances_sum":2194.6319384471335}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8447265625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9098443223443231,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.375,"distances_sum":2194.6319384471335}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.7989453255078264,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.9140625,"distances_sum":1768.2265730696543}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6845703125,"f1":0.7989453255078264,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.9140625,"distances_sum":1768.2265730696543}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8634880744255753,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.25,"distances_sum":2073.5259623523166}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8634880744255753,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.25,"distances_sum":2073.5259623523166}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.957875457875458,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.875,"distances_sum":2665.996442941283}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9127976190476196,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.71875,"distances_sum":2355.455474578385}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9479624542124547,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8046875,"distances_sum":2586.0440595338923}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9403159340659345,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.78125,"distances_sum":2519.9574849676937}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.957875457875458,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.875,"distances_sum":2665.996442941283}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.957875457875458,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.875,"distances_sum":2665.996442941283}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5537109375,"f1":null,"seconds":4.133209586143494e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.109375,"distances_sum":840.4786817977083}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5537109375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5537109375,"f1":null,"seconds":4.133209586143494e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.109375,"distances_sum":840.4786817977083}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9238043206793214,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.703125,"distances_sum":1405.555531555045}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9238043206793214,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.703125,"distances_sum":1405.555531555045}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9602335164835172,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8359375,"distances_sum":1527.2843015297633}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9602335164835172,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8359375,"distances_sum":1527.2843015297633}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9602335164835172,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8359375,"distances_sum":1527.2843015297633}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8776676448551456,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.0703125,"distances_sum":1346.5031379037919}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5673828125,"f1":0.7049188658563664,"seconds":4.24310564994812e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.2578125,"distances_sum":943.7759935173503}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.794921875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.794921875,"f1":0.8776676448551456,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.0703125,"distances_sum":1346.5031379037919}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9583161630036635,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8515625,"distances_sum":1666.0482310010823}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.926931922244423,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.640625,"distances_sum":1589.3463735615576}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9583161630036635,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8515625,"distances_sum":1666.0482310010823}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9770661630036633,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.890625,"distances_sum":1810.0973079814512}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9597699175824181,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7734375,"distances_sum":1719.2128776776585}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9770661630036633,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.890625,"distances_sum":1810.0973079814512}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9770661630036633,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.890625,"distances_sum":1810.0973079814512}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.603515625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.603515625,"f1":0.7392293470418478,"seconds":4.4424086809158325e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.7421875,"distances_sum":1091.5056666129979}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8667395104895113,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.140625,"distances_sum":1416.3918904482903}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8667395104895113,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.140625,"distances_sum":1416.3918904482903}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9298649267399276,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.6875,"distances_sum":1698.2737270153548}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8881098068598077,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.234375,"distances_sum":1560.367773439787}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9298649267399276,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.6875,"distances_sum":1698.2737270153548}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9440190018315024,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.765625,"distances_sum":1787.7319748085515}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9644001831501835,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.90625,"distances_sum":1911.0078080373628}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9644001831501835,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.90625,"distances_sum":1911.0078080373628}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9644001831501835,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.90625,"distances_sum":1911.0078080373628}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7841271575646585,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":7.59375,"distances_sum":1075.8605849671856}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5791015625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5791015625,"f1":0.7194676850926858,"seconds":4.695728421211243e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":7.421875,"distances_sum":993.8995494277381}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8773726273726282,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.2109375,"distances_sum":1361.2620967061207}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7900390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7900390625,"f1":0.8773726273726282,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.2109375,"distances_sum":1361.2620967061207}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.933396291208792,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.6953125,"distances_sum":1624.084747781894}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9168269230769238,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.4609375,"distances_sum":1590.6270644499864}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9581501831501839,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.8515625,"distances_sum":1733.9417728056585}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9170875999001005,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.5234375,"distances_sum":1534.310698626803}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9407654845154851,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.734375,"distances_sum":1660.0957038023466}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9320054945054951,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.703125,"distances_sum":1631.5249338861418}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9581501831501839,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.8515625,"distances_sum":1733.9417728056585}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720810439560443,"seconds":6.549060344696045e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.9375,"distances_sum":1815.8825590387762}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9638424075924081,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.859375,"distances_sum":1801.8044521060967}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.969700091575092,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.890625,"distances_sum":1810.4460904883642}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9707620504495508,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.9140625,"distances_sum":1820.9215333526142}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9777529761904766,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.9453125,"distances_sum":1850.3095162222007}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9777529761904766,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.9453125,"distances_sum":1850.3095162222007}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9777529761904766,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":3.4775584936141968e-6,"evaluations":8.9453125,"distances_sum":1850.3095162222007}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.881991446053947,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.25,"distances_sum":1292.0163286800334}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7998046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7998046875,"f1":0.881991446053947,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.25,"distances_sum":1292.0163286800334}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9524038461538469,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8203125,"distances_sum":1602.942921030541}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9524038461538469,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8203125,"distances_sum":1602.942921030541}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.980133928571429,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9921875,"distances_sum":1755.1376348271017}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.980133928571429,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9921875,"distances_sum":1755.1376348271017}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.980133928571429,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9921875,"distances_sum":1755.1376348271017}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.611328125, conf: {"ssize":2,"bsize":4}, perf: {"precision":0.9781249999999999,"recall":0.611328125,"f1":0.7412313381063387,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.65625,"distances_sum":1454.6280403446237}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6005859375, conf: {"ssize":5,"bsize":4}, perf: {"precision":0.9782552083333332,"recall":0.6005859375,"f1":0.7345818244255748,"seconds":4.591420292854309e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.5234375,"distances_sum":1408.4717259431438}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.611328125,"state":{"ssize":2,"bsize":4},"perf":{"precision":0.9781249999999999,"recall":0.611328125,"f1":0.7412313381063387,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.65625,"distances_sum":1454.6280403446237}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.984877232142857,"recall":0.76171875,"f1":0.8518363147269403,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.40625,"distances_sum":2047.6179574838475}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":0.9792317708333335,"recall":0.7705078125,"f1":0.8545453895063275,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.4921875,"distances_sum":2086.5406683559854}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":6,"bsize":6}, perf: {"precision":0.9849051339285714,"recall":0.7783203125,"f1":0.8619549070720952,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.4453125,"distances_sum":2135.6071022745564}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":6,"bsize":6},"perf":{"precision":0.9849051339285714,"recall":0.7783203125,"f1":0.8619549070720952,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.4453125,"distances_sum":2135.6071022745564}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":0.9833519345238095,"recall":0.912109375,"f1":0.9436226533882787,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8671875,"distances_sum":2698.412729086183}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":9,"bsize":6}, perf: {"precision":0.9850818452380952,"recall":0.8017578125,"f1":0.8793641254578759,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.5390625,"distances_sum":2201.9765243883894}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.9822358630952381,"recall":0.9189453125,"f1":0.9468950320512822,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9140625,"distances_sum":2740.1929266970837}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":4,"bsize":9}, perf: {"precision":0.9826543898809524,"recall":0.9111328125,"f1":0.9420952094780223,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.7890625,"distances_sum":2766.3516498577383}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.9822358630952381,"recall":0.9189453125,"f1":0.9468950320512822,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9140625,"distances_sum":2740.1929266970837}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.9822358630952381,"recall":0.9189453125,"f1":0.9468950320512822,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9140625,"distances_sum":2740.1929266970837}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.16796875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.16796875,"f1":null,"seconds":2.7604401111602783e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.390625,"distances_sum":407.69257118347775}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.16796875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.16796875,"f1":null,"seconds":2.7604401111602783e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.390625,"distances_sum":407.69257118347775}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.16796875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.16796875,"f1":null,"seconds":2.7604401111602783e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.390625,"distances_sum":407.69257118347775}}, n: 9
mean(cfft.distances) = 0.3208200833983815
mean(cdnet.distances) = 0.3623786587547606
mean(crand.distances) = 0.712295424391979
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8755555555555555
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8755555555555555
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8822222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8822222222222224
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8755555555555555
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9444444444444443
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8955555555555555
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8777777777777778
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.94
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9133333333333332
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9177777777777777
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8777777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.88
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9088888888888889
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8799999999999999
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9066666666666667
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8955555555555555
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9066666666666666
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 2, 3, 3, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 2, 3, 3, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 2, 3, 3, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 2, 3, 3, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 2, 3, 3, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 2, 3, 3, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 2, 3, 3, 3, 1]
acc = 0.9466666666666667
*** finished computation of 12 references, err: [Inf, 0.4934854018688202] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 1, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 18, 4]]
** centroid: 6, normalized-entropy: 0.6840384356390419, [(2, 18), (3, 4)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 10: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 2, 4]]
** centroid: 12, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 4)]
finished with 14 centroids; started with 12
acc = 0.98
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.23999713684289573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23999713684289573, 0.1994697118664647] ***
*** starting iteration: 2; err: [Inf, 0.23999713684289573, 0.1994697118664647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23999713684289573, 0.1994697118664647, 0.19021590956551088] ***
*** starting iteration: 3; err: [Inf, 0.23999713684289573, 0.1994697118664647, 0.19021590956551088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23999713684289573, 0.1994697118664647, 0.19021590956551088, 0.17918950528488145] ***
*** finished computation of 7 references, err: [Inf, 0.23999713684289573, 0.1994697118664647, 0.19021590956551088, 0.17918950528488145] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [10, 13, 0]]
** centroid: 1, normalized-entropy: 0.9876925088958032, [(1, 10), (2, 13)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [144, 3, 0]]
** centroid: 2, normalized-entropy: 0.14372616993938164, [(1, 144), (2, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [159, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [42, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 101, 16]]
** centroid: 5, normalized-entropy: 0.5756693370369834, [(2, 101), (3, 16)]
*** center 6: selecting labels [1, 2, 3] (freq >= 2) [from [10, 103, 8]]
** centroid: 6, normalized-entropy: 0.47582332021939155, [(1, 10), (2, 103), (3, 8)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [30, 27, 0]]
** centroid: 7, normalized-entropy: 0.9980008838722993, [(1, 30), (2, 27)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41543160754258746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41543160754258746, 0.3068678631299027] ***
*** starting iteration: 2; err: [Inf, 0.41543160754258746, 0.3068678631299027] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41543160754258746, 0.3068678631299027, 0.3007932742652078] ***
*** starting iteration: 3; err: [Inf, 0.41543160754258746, 0.3068678631299027, 0.3007932742652078] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41543160754258746, 0.3068678631299027, 0.3007932742652078, 0.3000702173519018] ***
*** finished computation of 3 references, err: [Inf, 0.41543160754258746, 0.3068678631299027, 0.3007932742652078, 0.3000702173519018] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [248, 15, 0]]
** centroid: 1, normalized-entropy: 0.3155576056038126, [(1, 248), (2, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [147, 42, 0]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(1, 147), (2, 42)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 190, 24]]
** centroid: 3, normalized-entropy: 0.5063657452787739, [(2, 190), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2074820023334433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2074820023334433, 0.1624311325656923] ***
*** starting iteration: 2; err: [Inf, 0.2074820023334433, 0.1624311325656923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2074820023334433, 0.1624311325656923, 0.15229218838962613] ***
*** starting iteration: 3; err: [Inf, 0.2074820023334433, 0.1624311325656923, 0.15229218838962613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2074820023334433, 0.1624311325656923, 0.15229218838962613, 0.14785438084575547] ***
*** finished computation of 7 references, err: [Inf, 0.2074820023334433, 0.1624311325656923, 0.15229218838962613, 0.14785438084575547] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [75, 25, 0]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(1, 75), (2, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [18, 88, 0]]
** centroid: 3, normalized-entropy: 0.6572729784684466, [(1, 18), (2, 88)]
*** center 4: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 106, 27]]
** centroid: 6, normalized-entropy: 0.7279025051093644, [(2, 106), (3, 27)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [47, 26, 0]]
** centroid: 7, normalized-entropy: 0.9394532068181357, [(1, 47), (2, 26)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3050453057652269] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3050453057652269, 0.1978173184849467] ***
*** starting iteration: 2; err: [Inf, 0.3050453057652269, 0.1978173184849467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3050453057652269, 0.1978173184849467, 0.16612180191297446] ***
*** starting iteration: 3; err: [Inf, 0.3050453057652269, 0.1978173184849467, 0.16612180191297446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3050453057652269, 0.1978173184849467, 0.16612180191297446, 0.16043016427326418] ***
*** finished computation of 7 references, err: [Inf, 0.3050453057652269, 0.1978173184849467, 0.16612180191297446, 0.16043016427326418] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [119, 26, 0]]
** centroid: 1, normalized-entropy: 0.6785660106679434, [(1, 119), (2, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [54, 2, 0]]
** centroid: 2, normalized-entropy: 0.2222848306856879, [(1, 54), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [148, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 71, 23]]
** centroid: 4, normalized-entropy: 0.8027381019527042, [(2, 71), (3, 23)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 68, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [58, 13, 0]]
** centroid: 6, normalized-entropy: 0.6868088934028034, [(1, 58), (2, 13)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [23, 62, 0]]
** centroid: 7, normalized-entropy: 0.8423074510400833, [(1, 23), (2, 62)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23088718900336763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23088718900336763, 0.16847359347394905] ***
*** starting iteration: 2; err: [Inf, 0.23088718900336763, 0.16847359347394905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23088718900336763, 0.16847359347394905, 0.15967121581874183] ***
*** starting iteration: 3; err: [Inf, 0.23088718900336763, 0.16847359347394905, 0.15967121581874183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23088718900336763, 0.16847359347394905, 0.15967121581874183, 0.15715661068802123] ***
*** starting iteration: 4; err: [Inf, 0.23088718900336763, 0.16847359347394905, 0.15967121581874183, 0.15715661068802123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23088718900336763, 0.16847359347394905, 0.15967121581874183, 0.15715661068802123, 0.15491222048265016] ***
*** starting iteration: 5; err: [Inf, 0.23088718900336763, 0.16847359347394905, 0.15967121581874183, 0.15715661068802123, 0.15491222048265016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23088718900336763, 0.16847359347394905, 0.15967121581874183, 0.15715661068802123, 0.15491222048265016, 0.15356349245317885] ***
*** starting iteration: 6; err: [Inf, 0.23088718900336763, 0.16847359347394905, 0.15967121581874183, 0.15715661068802123, 0.15491222048265016, 0.15356349245317885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23088718900336763, 0.16847359347394905, 0.15967121581874183, 0.15715661068802123, 0.15491222048265016, 0.15356349245317885, 0.1528458885566049] ***
*** finished computation of 7 references, err: [Inf, 0.23088718900336763, 0.16847359347394905, 0.15967121581874183, 0.15715661068802123, 0.15491222048265016, 0.15356349245317885, 0.1528458885566049] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 100, 23]]
** centroid: 1, normalized-entropy: 0.6951360991052256, [(2, 100), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [68, 23, 0]]
** centroid: 2, normalized-entropy: 0.8156034512499668, [(1, 68), (2, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [93, 37, 0]]
** centroid: 3, normalized-entropy: 0.8616636287106234, [(1, 93), (2, 37)]
*** center 4: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [39, 21, 0]]
** centroid: 5, normalized-entropy: 0.9340680553754911, [(1, 39), (2, 21)]
*** center 6: selecting labels [1] (freq >= 2) [from [126, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 66, 1]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20182159017754728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20182159017754728, 0.15581224794810947] ***
*** starting iteration: 2; err: [Inf, 0.20182159017754728, 0.15581224794810947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20182159017754728, 0.15581224794810947, 0.15089194592775435] ***
*** starting iteration: 3; err: [Inf, 0.20182159017754728, 0.15581224794810947, 0.15089194592775435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20182159017754728, 0.15581224794810947, 0.15089194592775435, 0.14869175810887683] ***
*** starting iteration: 4; err: [Inf, 0.20182159017754728, 0.15581224794810947, 0.15089194592775435, 0.14869175810887683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20182159017754728, 0.15581224794810947, 0.15089194592775435, 0.14869175810887683, 0.14704918450706622] ***
*** starting iteration: 5; err: [Inf, 0.20182159017754728, 0.15581224794810947, 0.15089194592775435, 0.14869175810887683, 0.14704918450706622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20182159017754728, 0.15581224794810947, 0.15089194592775435, 0.14869175810887683, 0.14704918450706622, 0.1460315296873227] ***
*** starting iteration: 6; err: [Inf, 0.20182159017754728, 0.15581224794810947, 0.15089194592775435, 0.14869175810887683, 0.14704918450706622, 0.1460315296873227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20182159017754728, 0.15581224794810947, 0.15089194592775435, 0.14869175810887683, 0.14704918450706622, 0.1460315296873227, 0.14534003589570388] ***
*** finished computation of 7 references, err: [Inf, 0.20182159017754728, 0.15581224794810947, 0.15089194592775435, 0.14869175810887683, 0.14704918450706622, 0.1460315296873227, 0.14534003589570388] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [59, 12, 0]]
** centroid: 1, normalized-entropy: 0.6554444445609846, [(1, 59), (2, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [63, 48, 0]]
** centroid: 3, normalized-entropy: 0.9867867202680318, [(1, 63), (2, 48)]
*** center 4: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [9, 101, 0]]
** centroid: 6, normalized-entropy: 0.4085534883345499, [(1, 9), (2, 101)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 84, 27]]
** centroid: 7, normalized-entropy: 0.8003922080453356, [(2, 84), (3, 27)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2078366360558697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2078366360558697, 0.17141186254939575] ***
*** starting iteration: 2; err: [Inf, 0.2078366360558697, 0.17141186254939575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2078366360558697, 0.17141186254939575, 0.16008630283093123] ***
*** starting iteration: 3; err: [Inf, 0.2078366360558697, 0.17141186254939575, 0.16008630283093123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2078366360558697, 0.17141186254939575, 0.16008630283093123, 0.15211220868343747] ***
*** starting iteration: 4; err: [Inf, 0.2078366360558697, 0.17141186254939575, 0.16008630283093123, 0.15211220868343747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2078366360558697, 0.17141186254939575, 0.16008630283093123, 0.15211220868343747, 0.1491927739206249] ***
*** starting iteration: 5; err: [Inf, 0.2078366360558697, 0.17141186254939575, 0.16008630283093123, 0.15211220868343747, 0.1491927739206249] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2078366360558697, 0.17141186254939575, 0.16008630283093123, 0.15211220868343747, 0.1491927739206249, 0.14763940223059832] ***
*** starting iteration: 6; err: [Inf, 0.2078366360558697, 0.17141186254939575, 0.16008630283093123, 0.15211220868343747, 0.1491927739206249, 0.14763940223059832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2078366360558697, 0.17141186254939575, 0.16008630283093123, 0.15211220868343747, 0.1491927739206249, 0.14763940223059832, 0.14664961367348459] ***
*** finished computation of 7 references, err: [Inf, 0.2078366360558697, 0.17141186254939575, 0.16008630283093123, 0.15211220868343747, 0.1491927739206249, 0.14763940223059832, 0.14664961367348459] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [69, 48, 0]]
** centroid: 1, normalized-entropy: 0.9766349114440099, [(1, 69), (2, 48)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [21, 84, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(1, 21), (2, 84)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [70, 7, 0]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(1, 70), (2, 7)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 98, 23]]
** centroid: 4, normalized-entropy: 0.7016443140299524, [(2, 98), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [90, 5, 0]]
** centroid: 5, normalized-entropy: 0.2974722489192896, [(1, 90), (2, 5)]
*** center 6: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48300279596017803] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48300279596017803, 0.3499240347075167] ***
*** starting iteration: 2; err: [Inf, 0.48300279596017803, 0.3499240347075167] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273] ***
*** starting iteration: 3; err: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703] ***
*** starting iteration: 4; err: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703, 0.33562668136044127] ***
*** starting iteration: 5; err: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703, 0.33562668136044127] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703, 0.33562668136044127, 0.330405234766134] ***
*** starting iteration: 6; err: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703, 0.33562668136044127, 0.330405234766134] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703, 0.33562668136044127, 0.330405234766134, 0.32387311105821254] ***
*** starting iteration: 7; err: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703, 0.33562668136044127, 0.330405234766134, 0.32387311105821254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703, 0.33562668136044127, 0.330405234766134, 0.32387311105821254, 0.3105565778765682] ***
*** starting iteration: 8; err: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703, 0.33562668136044127, 0.330405234766134, 0.32387311105821254, 0.3105565778765682] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703, 0.33562668136044127, 0.330405234766134, 0.32387311105821254, 0.3105565778765682, 0.29617285184763575] ***
*** starting iteration: 9; err: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703, 0.33562668136044127, 0.330405234766134, 0.32387311105821254, 0.3105565778765682, 0.29617285184763575] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703, 0.33562668136044127, 0.330405234766134, 0.32387311105821254, 0.3105565778765682, 0.29617285184763575, 0.2948771674544676] ***
*** starting iteration: 10; err: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703, 0.33562668136044127, 0.330405234766134, 0.32387311105821254, 0.3105565778765682, 0.29617285184763575, 0.2948771674544676] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703, 0.33562668136044127, 0.330405234766134, 0.32387311105821254, 0.3105565778765682, 0.29617285184763575, 0.2948771674544676, 0.2944056167065896] ***
*** finished computation of 3 references, err: [Inf, 0.48300279596017803, 0.3499240347075167, 0.34341602562437273, 0.3396720028546703, 0.33562668136044127, 0.330405234766134, 0.32387311105821254, 0.3105565778765682, 0.29617285184763575, 0.2948771674544676, 0.2944056167065896] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [8, 186, 24]]
** centroid: 1, normalized-entropy: 0.45479484211010157, [(1, 8), (2, 186), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [130, 57, 0]]
** centroid: 2, normalized-entropy: 0.8870947459780679, [(1, 130), (2, 57)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [257, 4, 0]]
** centroid: 3, normalized-entropy: 0.11432167035215768, [(1, 257), (2, 4)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3987088893397782] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3987088893397782, 0.3115298564125528] ***
*** starting iteration: 2; err: [Inf, 0.3987088893397782, 0.3115298564125528] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3987088893397782, 0.3115298564125528, 0.30156861623467085] ***
*** starting iteration: 3; err: [Inf, 0.3987088893397782, 0.3115298564125528, 0.30156861623467085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3987088893397782, 0.3115298564125528, 0.30156861623467085, 0.30041918018344105] ***
*** starting iteration: 4; err: [Inf, 0.3987088893397782, 0.3115298564125528, 0.30156861623467085, 0.30041918018344105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3987088893397782, 0.3115298564125528, 0.30156861623467085, 0.30041918018344105, 0.300205336623955] ***
*** finished computation of 3 references, err: [Inf, 0.3987088893397782, 0.3115298564125528, 0.30156861623467085, 0.30041918018344105, 0.300205336623955] ***
*** center 1: selecting labels [1] (freq >= 1) [from [213, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [56, 169, 27]]
** centroid: 2, normalized-entropy: 0.7659589303723989, [(1, 56), (2, 169), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [126, 76, 0]]
** centroid: 3, normalized-entropy: 0.9553413768968346, [(1, 126), (2, 76)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4892072162613261] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4892072162613261, 0.35821223533202684] ***
*** starting iteration: 2; err: [Inf, 0.4892072162613261, 0.35821223533202684] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4892072162613261, 0.35821223533202684, 0.3530969995910349] ***
*** starting iteration: 3; err: [Inf, 0.4892072162613261, 0.35821223533202684, 0.3530969995910349] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4892072162613261, 0.35821223533202684, 0.3530969995910349, 0.3491634202079437] ***
*** starting iteration: 4; err: [Inf, 0.4892072162613261, 0.35821223533202684, 0.3530969995910349, 0.3491634202079437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4892072162613261, 0.35821223533202684, 0.3530969995910349, 0.3491634202079437, 0.34458308225718215] ***
*** starting iteration: 5; err: [Inf, 0.4892072162613261, 0.35821223533202684, 0.3530969995910349, 0.3491634202079437, 0.34458308225718215] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4892072162613261, 0.35821223533202684, 0.3530969995910349, 0.3491634202079437, 0.34458308225718215, 0.3378926263605503] ***
*** starting iteration: 6; err: [Inf, 0.4892072162613261, 0.35821223533202684, 0.3530969995910349, 0.3491634202079437, 0.34458308225718215, 0.3378926263605503] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4892072162613261, 0.35821223533202684, 0.3530969995910349, 0.3491634202079437, 0.34458308225718215, 0.3378926263605503, 0.32523145661947656] ***
*** starting iteration: 7; err: [Inf, 0.4892072162613261, 0.35821223533202684, 0.3530969995910349, 0.3491634202079437, 0.34458308225718215, 0.3378926263605503, 0.32523145661947656] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4892072162613261, 0.35821223533202684, 0.3530969995910349, 0.3491634202079437, 0.34458308225718215, 0.3378926263605503, 0.32523145661947656, 0.3038810480782564] ***
*** starting iteration: 8; err: [Inf, 0.4892072162613261, 0.35821223533202684, 0.3530969995910349, 0.3491634202079437, 0.34458308225718215, 0.3378926263605503, 0.32523145661947656, 0.3038810480782564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4892072162613261, 0.35821223533202684, 0.3530969995910349, 0.3491634202079437, 0.34458308225718215, 0.3378926263605503, 0.32523145661947656, 0.3038810480782564, 0.30308581702411175] ***
*** finished computation of 3 references, err: [Inf, 0.4892072162613261, 0.35821223533202684, 0.3530969995910349, 0.3491634202079437, 0.34458308225718215, 0.3378926263605503, 0.32523145661947656, 0.3038810480782564, 0.30308581702411175] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [13, 177, 23]]
** centroid: 1, normalized-entropy: 0.5141613193016306, [(1, 13), (2, 177), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [245, 1, 0]]
** centroid: 2, normalized-entropy: 0.03813932218627333, [(1, 245), (2, 1)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [144, 64, 0]]
** centroid: 3, normalized-entropy: 0.8904916402194913, [(1, 144), (2, 64)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.27246924231595193] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27246924231595193, 0.2439537920944348] ***
*** finished computation of 3 references, err: [Inf, 0.27246924231595193, 0.2439537920944348] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [126, 144, 12]]
** centroid: 1, normalized-entropy: 0.7623230243865934, [(1, 126), (2, 144), (3, 12)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [103, 103, 12]]
** centroid: 2, normalized-entropy: 0.7901831499898645, [(1, 103), (2, 103), (3, 12)]
*** center 3: selecting labels [1] (freq >= 2) [from [166, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4367025588929508] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4367025588929508, 0.269345465747324] ***
*** finished computation of 3 references, err: [Inf, 0.4367025588929508, 0.269345465747324] ***
*** center 1: selecting labels [1] (freq >= 2) [from [176, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [144, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [75, 245, 27]]
** centroid: 3, normalized-entropy: 0.7059160519630159, [(1, 75), (2, 245), (3, 27)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3163119868865457] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3163119868865457, 0.24657004046207784] ***
*** finished computation of 3 references, err: [Inf, 0.3163119868865457, 0.24657004046207784] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [128, 157, 21]]
** centroid: 1, normalized-entropy: 0.8108613448477521, [(1, 128), (2, 157), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [188, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [86, 85, 2]]
** centroid: 3, normalized-entropy: 0.6810164034719358, [(1, 86), (2, 85), (3, 2)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2982682576472941] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2982682576472941, 0.25417090961625716] ***
*** starting iteration: 2; err: [Inf, 0.2982682576472941, 0.25417090961625716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2982682576472941, 0.25417090961625716, 0.2423592663926629] ***
*** starting iteration: 3; err: [Inf, 0.2982682576472941, 0.25417090961625716, 0.2423592663926629] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2982682576472941, 0.25417090961625716, 0.2423592663926629, 0.2391053186030359] ***
*** finished computation of 3 references, err: [Inf, 0.2982682576472941, 0.25417090961625716, 0.2423592663926629, 0.2391053186030359] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [8, 186, 24]]
** centroid: 1, normalized-entropy: 0.45479484211010157, [(1, 8), (2, 186), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [146, 61, 0]]
** centroid: 2, normalized-entropy: 0.874697763355274, [(1, 146), (2, 61)]
*** center 3: selecting labels [1] (freq >= 1) [from [241, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2524912640559899] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2524912640559899, 0.2383065812779811] ***
*** starting iteration: 2; err: [Inf, 0.2524912640559899, 0.2383065812779811] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2524912640559899, 0.2383065812779811, 0.23694864543492736] ***
*** starting iteration: 3; err: [Inf, 0.2524912640559899, 0.2383065812779811, 0.23694864543492736] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2524912640559899, 0.2383065812779811, 0.23694864543492736, 0.23679668125884978] ***
*** finished computation of 3 references, err: [Inf, 0.2524912640559899, 0.2383065812779811, 0.23694864543492736, 0.23679668125884978] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [250, 3, 0]]
** centroid: 1, normalized-entropy: 0.09287120841887445, [(1, 250), (2, 3)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [4, 190, 27]]
** centroid: 2, normalized-entropy: 0.4181606489685439, [(1, 4), (2, 190), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [141, 52, 0]]
** centroid: 3, normalized-entropy: 0.8406456070527091, [(1, 141), (2, 52)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2955884588491367] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2955884588491367, 0.24131183547834897] ***
*** starting iteration: 2; err: [Inf, 0.2955884588491367, 0.24131183547834897] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2955884588491367, 0.24131183547834897, 0.23609604917863186] ***
*** starting iteration: 3; err: [Inf, 0.2955884588491367, 0.24131183547834897, 0.23609604917863186] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2955884588491367, 0.24131183547834897, 0.23609604917863186, 0.23506777159830575] ***
*** finished computation of 3 references, err: [Inf, 0.2955884588491367, 0.24131183547834897, 0.23609604917863186, 0.23506777159830575] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [89, 157, 23]]
** centroid: 1, normalized-entropy: 0.8105587793577601, [(1, 89), (2, 157), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [113, 85, 0]]
** centroid: 2, normalized-entropy: 0.9855260527835448, [(1, 113), (2, 85)]
*** center 3: selecting labels [1] (freq >= 1) [from [200, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4248251636056705] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4248251636056705, 0.3420577095499872] ***
*** starting iteration: 2; err: [Inf, 0.4248251636056705, 0.3420577095499872] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4248251636056705, 0.3420577095499872, 0.33184589325749614] ***
*** starting iteration: 3; err: [Inf, 0.4248251636056705, 0.3420577095499872, 0.33184589325749614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4248251636056705, 0.3420577095499872, 0.33184589325749614, 0.32879646956031255] ***
*** finished computation of 3 references, err: [Inf, 0.4248251636056705, 0.3420577095499872, 0.33184589325749614, 0.32879646956031255] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [116, 93, 0]]
** centroid: 1, normalized-entropy: 0.9912463815170297, [(1, 116), (2, 93)]
*** center 2: selecting labels [1] (freq >= 2) [from [179, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [100, 154, 24]]
** centroid: 3, normalized-entropy: 0.8251012719757684, [(1, 100), (2, 154), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4953999893385163] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4953999893385163, 0.3469516099563268] ***
*** starting iteration: 2; err: [Inf, 0.4953999893385163, 0.3469516099563268] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4953999893385163, 0.3469516099563268, 0.34043076324431615] ***
*** starting iteration: 3; err: [Inf, 0.4953999893385163, 0.3469516099563268, 0.34043076324431615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4953999893385163, 0.3469516099563268, 0.34043076324431615, 0.3382368775690603] ***
*** finished computation of 3 references, err: [Inf, 0.4953999893385163, 0.3469516099563268, 0.34043076324431615, 0.3382368775690603] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [229, 14, 0]]
** centroid: 1, normalized-entropy: 0.3178963044987577, [(1, 229), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [122, 101, 0]]
** centroid: 2, normalized-entropy: 0.9935935548951775, [(1, 122), (2, 101)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [44, 130, 27]]
** centroid: 3, normalized-entropy: 0.8046916386565445, [(1, 44), (2, 130), (3, 27)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4598826452121215] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4598826452121215, 0.3309962396709614] ***
*** starting iteration: 2; err: [Inf, 0.4598826452121215, 0.3309962396709614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4598826452121215, 0.3309962396709614, 0.32824342951843183] ***
*** starting iteration: 3; err: [Inf, 0.4598826452121215, 0.3309962396709614, 0.32824342951843183] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4598826452121215, 0.3309962396709614, 0.32824342951843183, 0.3279588558942197] ***
*** finished computation of 3 references, err: [Inf, 0.4598826452121215, 0.3309962396709614, 0.32824342951843183, 0.3279588558942197] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [92, 113, 23]]
** centroid: 1, normalized-entropy: 0.8606354358889713, [(1, 92), (2, 113), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [224, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [86, 129, 0]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(1, 86), (2, 129)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34665364675942595] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34665364675942595, 0.2608718525369403] ***
*** finished computation of 3 references, err: [Inf, 0.34665364675942595, 0.2608718525369403] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 93, 24]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 93), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [104, 110, 0]]
** centroid: 2, normalized-entropy: 0.9994328781096228, [(1, 104), (2, 110)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [291, 44, 0]]
** centroid: 3, normalized-entropy: 0.5611106704008013, [(1, 291), (2, 44)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3281623732251139] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3281623732251139, 0.25910563877681786] ***
*** finished computation of 3 references, err: [Inf, 0.3281623732251139, 0.25910563877681786] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [120, 6, 0]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(1, 120), (2, 6)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [25, 211, 27]]
** centroid: 2, normalized-entropy: 0.5772057205642767, [(1, 25), (2, 211), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [250, 28, 0]]
** centroid: 3, normalized-entropy: 0.471271975661872, [(1, 250), (2, 28)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3314789577360744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3314789577360744, 0.24365770928785094] ***
*** finished computation of 3 references, err: [Inf, 0.3314789577360744, 0.24365770928785094] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [2, 165, 23]]
** centroid: 1, normalized-entropy: 0.3878141735542341, [(1, 2), (2, 165), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [252, 10, 0]]
** centroid: 2, normalized-entropy: 0.23382826233572301, [(1, 252), (2, 10)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [148, 67, 0]]
** centroid: 3, normalized-entropy: 0.895043668781296, [(1, 148), (2, 67)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3443776436678663] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3443776436678663, 0.30173614566625506] ***
*** starting iteration: 2; err: [Inf, 0.3443776436678663, 0.30173614566625506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3443776436678663, 0.30173614566625506, 0.29981144477037136] ***
*** starting iteration: 3; err: [Inf, 0.3443776436678663, 0.30173614566625506, 0.29981144477037136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3443776436678663, 0.30173614566625506, 0.29981144477037136, 0.2991168991391276] ***
*** finished computation of 3 references, err: [Inf, 0.3443776436678663, 0.30173614566625506, 0.29981144477037136, 0.2991168991391276] ***
*** center 1: selecting labels [1] (freq >= 1) [from [204, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [87, 149, 24]]
** centroid: 2, normalized-entropy: 0.8240533172718317, [(1, 87), (2, 149), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [104, 98, 0]]
** centroid: 3, normalized-entropy: 0.999363485672765, [(1, 104), (2, 98)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4096457984862567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4096457984862567, 0.3114456196358871] ***
*** starting iteration: 2; err: [Inf, 0.4096457984862567, 0.3114456196358871] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4096457984862567, 0.3114456196358871, 0.300561161184016] ***
*** starting iteration: 3; err: [Inf, 0.4096457984862567, 0.3114456196358871, 0.300561161184016] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4096457984862567, 0.3114456196358871, 0.300561161184016, 0.2990651659575337] ***
*** finished computation of 3 references, err: [Inf, 0.4096457984862567, 0.3114456196358871, 0.300561161184016, 0.2990651659575337] ***
*** center 1: selecting labels [1] (freq >= 1) [from [216, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [111, 90, 0]]
** centroid: 2, normalized-entropy: 0.9921116920021501, [(1, 111), (2, 90)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [68, 155, 27]]
** centroid: 3, normalized-entropy: 0.8109147123376841, [(1, 68), (2, 155), (3, 27)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.43962193510845593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43962193510845593, 0.35341463889088903] ***
*** starting iteration: 2; err: [Inf, 0.43962193510845593, 0.35341463889088903] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43962193510845593, 0.35341463889088903, 0.3200565337271861] ***
*** starting iteration: 3; err: [Inf, 0.43962193510845593, 0.35341463889088903, 0.3200565337271861] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43962193510845593, 0.35341463889088903, 0.3200565337271861, 0.30710351352078624] ***
*** finished computation of 3 references, err: [Inf, 0.43962193510845593, 0.35341463889088903, 0.3200565337271861, 0.30710351352078624] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [11, 179, 23]]
** centroid: 1, normalized-entropy: 0.49110165661801813, [(1, 11), (2, 179), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [208, 2, 0]]
** centroid: 2, normalized-entropy: 0.07761951112637416, [(1, 208), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [183, 61, 0]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(1, 183), (2, 61)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.39796931646077305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39796931646077305, 0.3133170405972464] ***
*** starting iteration: 2; err: [Inf, 0.39796931646077305, 0.3133170405972464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39796931646077305, 0.3133170405972464, 0.30209631156846545] ***
*** starting iteration: 3; err: [Inf, 0.39796931646077305, 0.3133170405972464, 0.30209631156846545] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39796931646077305, 0.3133170405972464, 0.30209631156846545, 0.2994806296604014] ***
*** starting iteration: 4; err: [Inf, 0.39796931646077305, 0.3133170405972464, 0.30209631156846545, 0.2994806296604014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39796931646077305, 0.3133170405972464, 0.30209631156846545, 0.2994806296604014, 0.2989462584726976] ***
*** finished computation of 3 references, err: [Inf, 0.39796931646077305, 0.3133170405972464, 0.30209631156846545, 0.2994806296604014, 0.2989462584726976] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [69, 160, 27]]
** centroid: 1, normalized-entropy: 0.8049809799159837, [(1, 69), (2, 160), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [104, 85, 0]]
** centroid: 2, normalized-entropy: 0.9926976609492303, [(1, 104), (2, 85)]
*** center 3: selecting labels [1] (freq >= 1) [from [222, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38781833122840437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38781833122840437, 0.31364267726597755] ***
*** starting iteration: 2; err: [Inf, 0.38781833122840437, 0.31364267726597755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38781833122840437, 0.31364267726597755, 0.30493784702565896] ***
*** starting iteration: 3; err: [Inf, 0.38781833122840437, 0.31364267726597755, 0.30493784702565896] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38781833122840437, 0.31364267726597755, 0.30493784702565896, 0.3045764460606777] ***
*** finished computation of 3 references, err: [Inf, 0.38781833122840437, 0.31364267726597755, 0.30493784702565896, 0.3045764460606777] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [253, 16, 0]]
** centroid: 1, normalized-entropy: 0.325375468885024, [(1, 253), (2, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [149, 44, 0]]
** centroid: 2, normalized-entropy: 0.774472059190862, [(1, 149), (2, 44)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 182, 23]]
** centroid: 3, normalized-entropy: 0.506501809234841, [(2, 182), (3, 23)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.48119448370358964] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48119448370358964, 0.3044658186712635] ***
*** finished computation of 3 references, err: [Inf, 0.48119448370358964, 0.3044658186712635] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [271, 5, 0]]
** centroid: 1, normalized-entropy: 0.1307272441646328, [(1, 271), (2, 5)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [5, 188, 24]]
** centroid: 2, normalized-entropy: 0.4138700682848287, [(1, 5), (2, 188), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [119, 54, 0]]
** centroid: 3, normalized-entropy: 0.8956268464201201, [(1, 119), (2, 54)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.37008256949044516] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37008256949044516, 0.30774303403650893] ***
*** finished computation of 3 references, err: [Inf, 0.37008256949044516, 0.30774303403650893] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [103, 193, 27]]
** centroid: 1, normalized-entropy: 0.8006661862815921, [(1, 103), (2, 193), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [100, 52, 0]]
** centroid: 2, normalized-entropy: 0.9268190639645774, [(1, 100), (2, 52)]
*** center 3: selecting labels [1] (freq >= 2) [from [192, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39385382118711676] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39385382118711676, 0.2999470356919536] ***
*** finished computation of 3 references, err: [Inf, 0.39385382118711676, 0.2999470356919536] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [86, 168, 23]]
** centroid: 1, normalized-entropy: 0.7946903250512035, [(1, 86), (2, 168), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [117, 74, 0]]
** centroid: 2, normalized-entropy: 0.9631240047488345, [(1, 117), (2, 74)]
*** center 3: selecting labels [1] (freq >= 2) [from [199, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 12)
[0.9279728830627034, 0.9209868551185917, 0.9139858421295548, 0.9119778461095827, 0.9089988191784598, 0.893989798181415, 0.8769697841554129, 0.8680297063530595, 0.86397475319631, 0.8489657321992651, 0.8389916862970755, 0.792996589403775]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9279728830627034
finished with 14
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.3626236782546292] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3626236782546292, 0.2544771996312761] ***
*** starting iteration: 2; err: [Inf, 0.3626236782546292, 0.2544771996312761] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3626236782546292, 0.2544771996312761, 0.2397413538299031] ***
*** starting iteration: 3; err: [Inf, 0.3626236782546292, 0.2544771996312761, 0.2397413538299031] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3626236782546292, 0.2544771996312761, 0.2397413538299031, 0.238076846817279] ***
*** finished computation of 3 references, err: [Inf, 0.3626236782546292, 0.2544771996312761, 0.2397413538299031, 0.238076846817279] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 191, 24]]
** centroid: 1, normalized-entropy: 0.5048067743702243, [(2, 191), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [209, 33, 0]]
** centroid: 2, normalized-entropy: 0.5746356978376794, [(1, 209), (2, 33)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [186, 23, 0]]
** centroid: 3, normalized-entropy: 0.500060261959327, [(1, 186), (2, 23)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.29277708416461184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29277708416461184, 0.23964138530024412] ***
*** starting iteration: 2; err: [Inf, 0.29277708416461184, 0.23964138530024412] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29277708416461184, 0.23964138530024412, 0.23791455458347005] ***
*** starting iteration: 3; err: [Inf, 0.29277708416461184, 0.23964138530024412, 0.23791455458347005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29277708416461184, 0.23964138530024412, 0.23791455458347005, 0.23775344736304418] ***
*** finished computation of 3 references, err: [Inf, 0.29277708416461184, 0.23964138530024412, 0.23791455458347005, 0.23775344736304418] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [230, 14, 0]]
** centroid: 1, normalized-entropy: 0.3169435645054571, [(1, 230), (2, 14)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 193, 27]]
** centroid: 2, normalized-entropy: 0.5371498464739634, [(2, 193), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [165, 38, 0]]
** centroid: 3, normalized-entropy: 0.6955604942225365, [(1, 165), (2, 38)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33557363579851174] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33557363579851174, 0.2587675071939982] ***
*** starting iteration: 2; err: [Inf, 0.33557363579851174, 0.2587675071939982] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33557363579851174, 0.2587675071939982, 0.24619319803336973] ***
*** starting iteration: 3; err: [Inf, 0.33557363579851174, 0.2587675071939982, 0.24619319803336973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33557363579851174, 0.2587675071939982, 0.24619319803336973, 0.24185302275382373] ***
*** finished computation of 3 references, err: [Inf, 0.33557363579851174, 0.2587675071939982, 0.24619319803336973, 0.24185302275382373] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 184, 23]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 184), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [197, 41, 0]]
** centroid: 2, normalized-entropy: 0.6628688531304328, [(1, 197), (2, 41)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [205, 17, 0]]
** centroid: 3, normalized-entropy: 0.3900001514858168, [(1, 205), (2, 17)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35234868261045793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35234868261045793, 0.30224019278598774] ***
*** starting iteration: 2; err: [Inf, 0.35234868261045793, 0.30224019278598774] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35234868261045793, 0.30224019278598774, 0.29977733627739206] ***
*** starting iteration: 3; err: [Inf, 0.35234868261045793, 0.30224019278598774, 0.29977733627739206] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35234868261045793, 0.30224019278598774, 0.29977733627739206, 0.2998679183708789] ***
*** finished computation of 3 references, err: [Inf, 0.35234868261045793, 0.30224019278598774, 0.29977733627739206, 0.2998679183708789] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [163, 40, 0]]
** centroid: 1, normalized-entropy: 0.7159772327755203, [(1, 163), (2, 40)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 193, 24]]
** centroid: 2, normalized-entropy: 0.5017203190341232, [(2, 193), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [232, 14, 0]]
** centroid: 3, normalized-entropy: 0.3150569452644301, [(1, 232), (2, 14)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3601322993765288] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3601322993765288, 0.30104796007984896] ***
*** starting iteration: 2; err: [Inf, 0.3601322993765288, 0.30104796007984896] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3601322993765288, 0.30104796007984896, 0.29912202194475496] ***
*** starting iteration: 3; err: [Inf, 0.3601322993765288, 0.30104796007984896, 0.29912202194475496] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3601322993765288, 0.30104796007984896, 0.29912202194475496, 0.29884347525834365] ***
*** finished computation of 3 references, err: [Inf, 0.3601322993765288, 0.30104796007984896, 0.29912202194475496, 0.29884347525834365] ***
*** center 1: selecting labels [1] (freq >= 1) [from [223, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [67, 160, 27]]
** centroid: 2, normalized-entropy: 0.801845834158228, [(1, 67), (2, 160), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [105, 85, 0]]
** centroid: 3, normalized-entropy: 0.9919924034538556, [(1, 105), (2, 85)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5069061178362173] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5069061178362173, 0.345691025518216] ***
*** starting iteration: 2; err: [Inf, 0.5069061178362173, 0.345691025518216] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5069061178362173, 0.345691025518216, 0.3394828215436912] ***
*** starting iteration: 3; err: [Inf, 0.5069061178362173, 0.345691025518216, 0.3394828215436912] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5069061178362173, 0.345691025518216, 0.3394828215436912, 0.3361762150189374] ***
*** finished computation of 3 references, err: [Inf, 0.5069061178362173, 0.345691025518216, 0.3394828215436912, 0.3361762150189374] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [95, 149, 23]]
** centroid: 1, normalized-entropy: 0.8232132673951597, [(1, 95), (2, 149), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [130, 93, 0]]
** centroid: 2, normalized-entropy: 0.9800497424012644, [(1, 130), (2, 93)]
*** center 3: selecting labels [1] (freq >= 1) [from [177, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 14)
[0.9279728830627034, 0.9209868551185917, 0.9139858421295548, 0.9119778461095827, 0.9089988191784598, 0.893989798181415, 0.8780157402911893, 0.876987766209323, 0.8769697841554129, 0.8680297063530595, 0.86397475319631, 0.8489657321992651, 0.8389916862970755, 0.792996589403775]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9279728830627034
finished with 15
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.346487191721081] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.346487191721081, 0.23685472516773698] ***
*** finished computation of 3 references, err: [Inf, 0.346487191721081, 0.23685472516773698] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [90, 185, 24]]
** centroid: 1, normalized-entropy: 0.7836296339660853, [(1, 90), (2, 185), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [117, 62, 0]]
** centroid: 2, normalized-entropy: 0.9307831323746218, [(1, 117), (2, 62)]
*** center 3: selecting labels [1] (freq >= 2) [from [188, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3436974502340339] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3436974502340339, 0.24080683375712947] ***
*** finished computation of 3 references, err: [Inf, 0.3436974502340339, 0.24080683375712947] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [276, 19, 0]]
** centroid: 1, normalized-entropy: 0.34469530416038074, [(1, 276), (2, 19)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [1, 178, 27]]
** centroid: 2, normalized-entropy: 0.5621019859911415, [(2, 178), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [118, 48, 0]]
** centroid: 3, normalized-entropy: 0.8676293117125105, [(1, 118), (2, 48)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3897373809840815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3897373809840815, 0.23846630763256926] ***
*** finished computation of 3 references, err: [Inf, 0.3897373809840815, 0.23846630763256926] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [115, 138, 18]]
** centroid: 1, normalized-entropy: 0.8078601720652866, [(1, 115), (2, 138), (3, 18)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [102, 104, 5]]
** centroid: 2, normalized-entropy: 0.7179716644985097, [(1, 102), (2, 104), (3, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [185, 0, 0]]
finished with 7 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 15)
[0.9279728830627034, 0.9209868551185917, 0.9139858421295548, 0.9119778461095827, 0.9089988191784598, 0.9079918241594888, 0.893989798181415, 0.8780157402911893, 0.876987766209323, 0.8769697841554129, 0.8680297063530595, 0.86397475319631, 0.8489657321992651, 0.8389916862970755, 0.792996589403775]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9279728830627034
finished with 15
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9279728830627034, 0.9209868551185917, 0.9139858421295548, 0.9119778461095827, 0.9089988191784598, 0.9079918241594888, 0.893989798181415, 0.8780157402911893, 0.876987766209323, 0.8769697841554129, 0.8680297063530595, 0.86397475319631, 0.8489657321992651, 0.8389916862970755, 0.792996589403775]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9279728830627034
finished with 15
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9279728830627034, 0.9209868551185917, 0.9139858421295548, 0.9119778461095827, 0.9089988191784598, 0.9079918241594888, 0.893989798181415, 0.8780157402911893, 0.876987766209323, 0.8769697841554129, 0.8680297063530595, 0.86397475319631, 0.8489657321992651, 0.8389916862970755, 0.792996589403775]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9279728830627034
finished with 15
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9279728830627034, 0.9209868551185917, 0.9139858421295548, 0.9119778461095827, 0.9089988191784598, 0.9079918241594888, 0.893989798181415, 0.8780157402911893, 0.876987766209323, 0.8769697841554129, 0.8680297063530595, 0.86397475319631, 0.8489657321992651, 0.8389916862970755, 0.792996589403775]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9279728830627034
finished with 16
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.2300581522090165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2300581522090165, 0.19424857211218136] ***
*** starting iteration: 2; err: [Inf, 0.2300581522090165, 0.19424857211218136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2300581522090165, 0.19424857211218136, 0.18889135317443437] ***
*** starting iteration: 3; err: [Inf, 0.2300581522090165, 0.19424857211218136, 0.18889135317443437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2300581522090165, 0.19424857211218136, 0.18889135317443437, 0.18517587432643404] ***
*** finished computation of 7 references, err: [Inf, 0.2300581522090165, 0.19424857211218136, 0.18889135317443437, 0.18517587432643404] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [68, 15, 0]]
** centroid: 1, normalized-entropy: 0.6816559115981193, [(1, 68), (2, 15)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 88, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 63, 24]]
** centroid: 3, normalized-entropy: 0.8497511372532974, [(2, 63), (3, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [101, 10, 0]]
** centroid: 4, normalized-entropy: 0.436770454577089, [(1, 101), (2, 10)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [32, 71, 0]]
** centroid: 5, normalized-entropy: 0.8939563962625153, [(1, 32), (2, 71)]
*** center 6: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23806922744702677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23806922744702677, 0.20501311175173326] ***
*** starting iteration: 2; err: [Inf, 0.23806922744702677, 0.20501311175173326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23806922744702677, 0.20501311175173326, 0.19404001215701808] ***
*** starting iteration: 3; err: [Inf, 0.23806922744702677, 0.20501311175173326, 0.19404001215701808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23806922744702677, 0.20501311175173326, 0.19404001215701808, 0.1924283420317981] ***
*** finished computation of 7 references, err: [Inf, 0.23806922744702677, 0.20501311175173326, 0.19404001215701808, 0.1924283420317981] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 93, 27]]
** centroid: 1, normalized-entropy: 0.7691928290130138, [(2, 93), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [71, 35, 0]]
** centroid: 2, normalized-entropy: 0.9151190292999326, [(1, 71), (2, 35)]
*** center 3: selecting labels [2] (freq >= 2) [from [1, 97, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [100, 2, 0]]
** centroid: 6, normalized-entropy: 0.13923299905509884, [(1, 100), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [60, 18, 0]]
** centroid: 7, normalized-entropy: 0.7793498372920851, [(1, 60), (2, 18)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2621877247375482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2621877247375482, 0.21113469191537848] ***
*** starting iteration: 2; err: [Inf, 0.2621877247375482, 0.21113469191537848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2621877247375482, 0.21113469191537848, 0.19699050907626459] ***
*** starting iteration: 3; err: [Inf, 0.2621877247375482, 0.21113469191537848, 0.19699050907626459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2621877247375482, 0.21113469191537848, 0.19699050907626459, 0.19468439636386184] ***
*** finished computation of 7 references, err: [Inf, 0.2621877247375482, 0.21113469191537848, 0.19699050907626459, 0.19468439636386184] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [85, 40, 0]]
** centroid: 1, normalized-entropy: 0.9043814577244941, [(1, 85), (2, 40)]
*** center 2: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [30, 37, 0]]
** centroid: 3, normalized-entropy: 0.9921116920021501, [(1, 30), (2, 37)]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 85, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [85, 2, 0]]
** centroid: 5, normalized-entropy: 0.15790637433488164, [(1, 85), (2, 2)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 78, 23]]
** centroid: 6, normalized-entropy: 0.7740204128451942, [(2, 78), (3, 23)]
*** center 7: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.9279728830627034, 0.9209868551185917, 0.9199888511265756, 0.9139858421295548, 0.9119778461095827, 0.9089988191784598, 0.9079918241594888, 0.893989798181415, 0.8780157402911893, 0.876987766209323, 0.8769697841554129, 0.8680297063530595, 0.86397475319631, 0.8489657321992651, 0.8389916862970755, 0.792996589403775]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9279728830627034
finished with 16
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9279728830627034, 0.9209868551185917, 0.9199888511265756, 0.9139858421295548, 0.9119778461095827, 0.9089988191784598, 0.9079918241594888, 0.893989798181415, 0.8780157402911893, 0.876987766209323, 0.8769697841554129, 0.8680297063530595, 0.86397475319631, 0.8489657321992651, 0.8389916862970755, 0.792996589403775]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9279728830627034
finished with 17
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.43191492287358185] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43191492287358185, 0.33314549231443097] ***
*** finished computation of 3 references, err: [Inf, 0.43191492287358185, 0.33314549231443097] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [88, 89, 0]]
** centroid: 1, normalized-entropy: 0.9999769749638362, [(1, 88), (2, 89)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [140, 158, 24]]
** centroid: 2, normalized-entropy: 0.8237731469733346, [(1, 140), (2, 158), (3, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [167, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4034412009292457] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4034412009292457, 0.3364093264137608] ***
*** finished computation of 3 references, err: [Inf, 0.4034412009292457, 0.3364093264137608] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [80, 162, 10]]
** centroid: 1, normalized-entropy: 0.7066546228846129, [(1, 80), (2, 162), (3, 10)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [44, 83, 17]]
** centroid: 2, normalized-entropy: 0.8484211762655435, [(1, 44), (2, 83), (3, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [271, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.45731584548201787] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45731584548201787, 0.3245168917193154] ***
*** finished computation of 3 references, err: [Inf, 0.45731584548201787, 0.3245168917193154] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [11, 140, 23]]
** centroid: 1, normalized-entropy: 0.5615886631372422, [(1, 11), (2, 140), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [165, 100, 0]]
** centroid: 2, normalized-entropy: 0.9561550236844027, [(1, 165), (2, 100)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [226, 2, 0]]
** centroid: 3, normalized-entropy: 0.07253718299881001, [(1, 226), (2, 2)]
finished with 6 centroids; started with 3
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.21875846129842103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21875846129842103, 0.16164005783083848] ***
*** starting iteration: 2; err: [Inf, 0.21875846129842103, 0.16164005783083848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21875846129842103, 0.16164005783083848, 0.15557736948051024] ***
*** starting iteration: 3; err: [Inf, 0.21875846129842103, 0.16164005783083848, 0.15557736948051024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21875846129842103, 0.16164005783083848, 0.15557736948051024, 0.15213366917334498] ***
*** starting iteration: 4; err: [Inf, 0.21875846129842103, 0.16164005783083848, 0.15557736948051024, 0.15213366917334498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21875846129842103, 0.16164005783083848, 0.15557736948051024, 0.15213366917334498, 0.15003372076340019] ***
*** starting iteration: 5; err: [Inf, 0.21875846129842103, 0.16164005783083848, 0.15557736948051024, 0.15213366917334498, 0.15003372076340019] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21875846129842103, 0.16164005783083848, 0.15557736948051024, 0.15213366917334498, 0.15003372076340019, 0.1485956780645065] ***
*** starting iteration: 6; err: [Inf, 0.21875846129842103, 0.16164005783083848, 0.15557736948051024, 0.15213366917334498, 0.15003372076340019, 0.1485956780645065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21875846129842103, 0.16164005783083848, 0.15557736948051024, 0.15213366917334498, 0.15003372076340019, 0.1485956780645065, 0.14765368124563247] ***
*** finished computation of 7 references, err: [Inf, 0.21875846129842103, 0.16164005783083848, 0.15557736948051024, 0.15213366917334498, 0.15003372076340019, 0.1485956780645065, 0.14765368124563247] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [150, 10, 0]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(1, 150), (2, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [175, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 92, 37]]
** centroid: 3, normalized-entropy: 0.8645801663882439, [(2, 92), (3, 37)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [19, 131, 0]]
** centroid: 4, normalized-entropy: 0.54822511745032, [(1, 19), (2, 131)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [96, 20, 0]]
** centroid: 5, normalized-entropy: 0.6631968402398286, [(1, 96), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [11, 114, 0]]
** centroid: 6, normalized-entropy: 0.4297586093037606, [(1, 11), (2, 114)]
*** center 7: selecting labels [1] (freq >= 2) [from [145, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1982986877063522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1982986877063522, 0.15413911632914096] ***
*** starting iteration: 2; err: [Inf, 0.1982986877063522, 0.15413911632914096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1982986877063522, 0.15413911632914096, 0.15008142996393145] ***
*** starting iteration: 3; err: [Inf, 0.1982986877063522, 0.15413911632914096, 0.15008142996393145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1982986877063522, 0.15413911632914096, 0.15008142996393145, 0.14798203051229938] ***
*** starting iteration: 4; err: [Inf, 0.1982986877063522, 0.15413911632914096, 0.15008142996393145, 0.14798203051229938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1982986877063522, 0.15413911632914096, 0.15008142996393145, 0.14798203051229938, 0.1476790382936597] ***
*** finished computation of 7 references, err: [Inf, 0.1982986877063522, 0.15413911632914096, 0.15008142996393145, 0.14798203051229938, 0.1476790382936597] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [57, 11, 0]]
** centroid: 1, normalized-entropy: 0.6385146263620961, [(1, 57), (2, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [108, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [15, 54, 0]]
** centroid: 4, normalized-entropy: 0.7553754125614286, [(1, 15), (2, 54)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 44, 22]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 44), (3, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [48, 1, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 64, 0]]
** centroid: 7, normalized-entropy: 0.26377743669413856, [(1, 3), (2, 64)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23422477360814808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23422477360814808, 0.16408931383490563] ***
*** starting iteration: 2; err: [Inf, 0.23422477360814808, 0.16408931383490563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23422477360814808, 0.16408931383490563, 0.15521269906684756] ***
*** starting iteration: 3; err: [Inf, 0.23422477360814808, 0.16408931383490563, 0.15521269906684756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23422477360814808, 0.16408931383490563, 0.15521269906684756, 0.15031593538820742] ***
*** starting iteration: 4; err: [Inf, 0.23422477360814808, 0.16408931383490563, 0.15521269906684756, 0.15031593538820742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23422477360814808, 0.16408931383490563, 0.15521269906684756, 0.15031593538820742, 0.14825011661462487] ***
*** starting iteration: 5; err: [Inf, 0.23422477360814808, 0.16408931383490563, 0.15521269906684756, 0.15031593538820742, 0.14825011661462487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23422477360814808, 0.16408931383490563, 0.15521269906684756, 0.15031593538820742, 0.14825011661462487, 0.1477574305869639] ***
*** finished computation of 7 references, err: [Inf, 0.23422477360814808, 0.16408931383490563, 0.15521269906684756, 0.15031593538820742, 0.14825011661462487, 0.1477574305869639] ***
*** center 1: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [4, 54, 0]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(1, 4), (2, 54)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 78, 14]]
** centroid: 4, normalized-entropy: 0.6152538910563409, [(2, 78), (3, 14)]
*** center 5: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [47, 11, 0]]
** centroid: 6, normalized-entropy: 0.7007495497162061, [(1, 47), (2, 11)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [56, 43, 0]]
** centroid: 7, normalized-entropy: 0.9875257101057102, [(1, 56), (2, 43)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2579817689713091] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2579817689713091, 0.16843210181314497] ***
*** starting iteration: 2; err: [Inf, 0.2579817689713091, 0.16843210181314497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2579817689713091, 0.16843210181314497, 0.15663640581909566] ***
*** starting iteration: 3; err: [Inf, 0.2579817689713091, 0.16843210181314497, 0.15663640581909566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2579817689713091, 0.16843210181314497, 0.15663640581909566, 0.15408848362788558] ***
*** starting iteration: 4; err: [Inf, 0.2579817689713091, 0.16843210181314497, 0.15663640581909566, 0.15408848362788558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2579817689713091, 0.16843210181314497, 0.15663640581909566, 0.15408848362788558, 0.15203522080928086] ***
*** starting iteration: 5; err: [Inf, 0.2579817689713091, 0.16843210181314497, 0.15663640581909566, 0.15408848362788558, 0.15203522080928086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2579817689713091, 0.16843210181314497, 0.15663640581909566, 0.15408848362788558, 0.15203522080928086, 0.15020632914826273] ***
*** starting iteration: 6; err: [Inf, 0.2579817689713091, 0.16843210181314497, 0.15663640581909566, 0.15408848362788558, 0.15203522080928086, 0.15020632914826273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2579817689713091, 0.16843210181314497, 0.15663640581909566, 0.15408848362788558, 0.15203522080928086, 0.15020632914826273, 0.14832376683689655] ***
*** starting iteration: 7; err: [Inf, 0.2579817689713091, 0.16843210181314497, 0.15663640581909566, 0.15408848362788558, 0.15203522080928086, 0.15020632914826273, 0.14832376683689655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2579817689713091, 0.16843210181314497, 0.15663640581909566, 0.15408848362788558, 0.15203522080928086, 0.15020632914826273, 0.14832376683689655, 0.1469359382353723] ***
*** starting iteration: 8; err: [Inf, 0.2579817689713091, 0.16843210181314497, 0.15663640581909566, 0.15408848362788558, 0.15203522080928086, 0.15020632914826273, 0.14832376683689655, 0.1469359382353723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2579817689713091, 0.16843210181314497, 0.15663640581909566, 0.15408848362788558, 0.15203522080928086, 0.15020632914826273, 0.14832376683689655, 0.1469359382353723, 0.14610557458363474] ***
*** finished computation of 7 references, err: [Inf, 0.2579817689713091, 0.16843210181314497, 0.15663640581909566, 0.15408848362788558, 0.15203522080928086, 0.15020632914826273, 0.14832376683689655, 0.1469359382353723, 0.14610557458363474] ***
*** center 1: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [59, 4, 0]]
** centroid: 2, normalized-entropy: 0.3411538931451763, [(1, 59), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [5, 66, 0]]
** centroid: 4, normalized-entropy: 0.3674984948272913, [(1, 5), (2, 66)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 54, 17]]
** centroid: 5, normalized-entropy: 0.7941021417852022, [(2, 54), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [47, 14, 0]]
** centroid: 6, normalized-entropy: 0.7771529943226336, [(1, 47), (2, 14)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 56, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21087838802486658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21087838802486658, 0.16315209617977963] ***
*** starting iteration: 2; err: [Inf, 0.21087838802486658, 0.16315209617977963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21087838802486658, 0.16315209617977963, 0.15721151591464877] ***
*** starting iteration: 3; err: [Inf, 0.21087838802486658, 0.16315209617977963, 0.15721151591464877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21087838802486658, 0.16315209617977963, 0.15721151591464877, 0.15514861271390692] ***
*** starting iteration: 4; err: [Inf, 0.21087838802486658, 0.16315209617977963, 0.15721151591464877, 0.15514861271390692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21087838802486658, 0.16315209617977963, 0.15721151591464877, 0.15514861271390692, 0.1538905088920146] ***
*** starting iteration: 5; err: [Inf, 0.21087838802486658, 0.16315209617977963, 0.15721151591464877, 0.15514861271390692, 0.1538905088920146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21087838802486658, 0.16315209617977963, 0.15721151591464877, 0.15514861271390692, 0.1538905088920146, 0.15325302151031792] ***
*** finished computation of 7 references, err: [Inf, 0.21087838802486658, 0.16315209617977963, 0.15721151591464877, 0.15514861271390692, 0.1538905088920146, 0.15325302151031792] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [53, 3, 0]]
** centroid: 1, normalized-entropy: 0.3013786435930858, [(1, 53), (2, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [46, 33, 0]]
** centroid: 3, normalized-entropy: 0.980377508715691, [(1, 46), (2, 33)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 3, 0]]
** centroid: 4, normalized-entropy: 0.2729708579140699, [(1, 61), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [61, 40, 0]]
** centroid: 5, normalized-entropy: 0.9685867165455515, [(1, 61), (2, 40)]
*** center 6: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 104, 13]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(2, 104), (3, 13)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22022365637030453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22022365637030453, 0.16464870633650572] ***
*** starting iteration: 2; err: [Inf, 0.22022365637030453, 0.16464870633650572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22022365637030453, 0.16464870633650572, 0.15493591819796712] ***
*** starting iteration: 3; err: [Inf, 0.22022365637030453, 0.16464870633650572, 0.15493591819796712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22022365637030453, 0.16464870633650572, 0.15493591819796712, 0.15346346978098155] ***
*** starting iteration: 4; err: [Inf, 0.22022365637030453, 0.16464870633650572, 0.15493591819796712, 0.15346346978098155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22022365637030453, 0.16464870633650572, 0.15493591819796712, 0.15346346978098155, 0.15251229467522354] ***
*** finished computation of 7 references, err: [Inf, 0.22022365637030453, 0.16464870633650572, 0.15493591819796712, 0.15346346978098155, 0.15251229467522354] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 46, 15]]
** centroid: 1, normalized-entropy: 0.8047175193210769, [(2, 46), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [43, 19, 0]]
** centroid: 2, normalized-entropy: 0.8890349038123858, [(1, 43), (2, 19)]
*** center 3: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [17, 48, 0]]
** centroid: 5, normalized-entropy: 0.829059069399666, [(1, 17), (2, 48)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [68, 18, 0]]
** centroid: 6, normalized-entropy: 0.7401470427139037, [(1, 68), (2, 18)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 53, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20616695588640868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20616695588640868, 0.17375411093607546] ***
*** starting iteration: 2; err: [Inf, 0.20616695588640868, 0.17375411093607546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20616695588640868, 0.17375411093607546, 0.1605471228673123] ***
*** starting iteration: 3; err: [Inf, 0.20616695588640868, 0.17375411093607546, 0.1605471228673123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20616695588640868, 0.17375411093607546, 0.1605471228673123, 0.1538678875658661] ***
*** starting iteration: 4; err: [Inf, 0.20616695588640868, 0.17375411093607546, 0.1605471228673123, 0.1538678875658661] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20616695588640868, 0.17375411093607546, 0.1605471228673123, 0.1538678875658661, 0.1514227130236104] ***
*** starting iteration: 5; err: [Inf, 0.20616695588640868, 0.17375411093607546, 0.1605471228673123, 0.1538678875658661, 0.1514227130236104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20616695588640868, 0.17375411093607546, 0.1605471228673123, 0.1538678875658661, 0.1514227130236104, 0.14832959182094782] ***
*** starting iteration: 6; err: [Inf, 0.20616695588640868, 0.17375411093607546, 0.1605471228673123, 0.1538678875658661, 0.1514227130236104, 0.14832959182094782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20616695588640868, 0.17375411093607546, 0.1605471228673123, 0.1538678875658661, 0.1514227130236104, 0.14832959182094782, 0.14740047293808312] ***
*** finished computation of 7 references, err: [Inf, 0.20616695588640868, 0.17375411093607546, 0.1605471228673123, 0.1538678875658661, 0.1514227130236104, 0.14832959182094782, 0.14740047293808312] ***
*** center 1: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [14, 74, 0]]
** centroid: 2, normalized-entropy: 0.6321302781219708, [(1, 14), (2, 74)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 50, 18]]
** centroid: 3, normalized-entropy: 0.8337649072106652, [(2, 50), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [69, 2, 0]]
** centroid: 4, normalized-entropy: 0.18512476010054582, [(1, 69), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [7, 53, 0]]
** centroid: 5, normalized-entropy: 0.5197027865043053, [(1, 7), (2, 53)]
*** center 6: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [71, 3, 0]]
** centroid: 7, normalized-entropy: 0.2447650820208971, [(1, 71), (2, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21550019186735153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21550019186735153, 0.1765913124550134] ***
*** starting iteration: 2; err: [Inf, 0.21550019186735153, 0.1765913124550134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21550019186735153, 0.1765913124550134, 0.16791610967740417] ***
*** starting iteration: 3; err: [Inf, 0.21550019186735153, 0.1765913124550134, 0.16791610967740417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21550019186735153, 0.1765913124550134, 0.16791610967740417, 0.16212456826493143] ***
*** starting iteration: 4; err: [Inf, 0.21550019186735153, 0.1765913124550134, 0.16791610967740417, 0.16212456826493143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21550019186735153, 0.1765913124550134, 0.16791610967740417, 0.16212456826493143, 0.159594580296427] ***
*** starting iteration: 5; err: [Inf, 0.21550019186735153, 0.1765913124550134, 0.16791610967740417, 0.16212456826493143, 0.159594580296427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21550019186735153, 0.1765913124550134, 0.16791610967740417, 0.16212456826493143, 0.159594580296427, 0.15780117631889878] ***
*** starting iteration: 6; err: [Inf, 0.21550019186735153, 0.1765913124550134, 0.16791610967740417, 0.16212456826493143, 0.159594580296427, 0.15780117631889878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21550019186735153, 0.1765913124550134, 0.16791610967740417, 0.16212456826493143, 0.159594580296427, 0.15780117631889878, 0.1569083388140425] ***
*** finished computation of 7 references, err: [Inf, 0.21550019186735153, 0.1765913124550134, 0.16791610967740417, 0.16212456826493143, 0.159594580296427, 0.15780117631889878, 0.1569083388140425] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [3, 64, 0]]
** centroid: 1, normalized-entropy: 0.26377743669413856, [(1, 3), (2, 64)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 13]]
** centroid: 2, normalized-entropy: 0.9097361225311661, [(2, 27), (3, 13)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 7]]
** centroid: 3, normalized-entropy: 0.6789538995185759, [(2, 32), (3, 7)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [8, 58, 0]]
** centroid: 4, normalized-entropy: 0.5328350630342235, [(1, 8), (2, 58)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [82, 2, 0]]
** centroid: 5, normalized-entropy: 0.1623261801753929, [(1, 82), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [77, 4, 0]]
** centroid: 6, normalized-entropy: 0.2837689703721877, [(1, 77), (2, 4)]
*** center 7: selecting labels [1] (freq >= 2) [from [123, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18453047677967696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18453047677967696, 0.1627795800138265] ***
*** starting iteration: 2; err: [Inf, 0.18453047677967696, 0.1627795800138265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18453047677967696, 0.1627795800138265, 0.15680712566431612] ***
*** starting iteration: 3; err: [Inf, 0.18453047677967696, 0.1627795800138265, 0.15680712566431612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18453047677967696, 0.1627795800138265, 0.15680712566431612, 0.15333408846426755] ***
*** starting iteration: 4; err: [Inf, 0.18453047677967696, 0.1627795800138265, 0.15680712566431612, 0.15333408846426755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18453047677967696, 0.1627795800138265, 0.15680712566431612, 0.15333408846426755, 0.1507433210411109] ***
*** starting iteration: 5; err: [Inf, 0.18453047677967696, 0.1627795800138265, 0.15680712566431612, 0.15333408846426755, 0.1507433210411109] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18453047677967696, 0.1627795800138265, 0.15680712566431612, 0.15333408846426755, 0.1507433210411109, 0.14926249580271542] ***
*** starting iteration: 6; err: [Inf, 0.18453047677967696, 0.1627795800138265, 0.15680712566431612, 0.15333408846426755, 0.1507433210411109, 0.14926249580271542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18453047677967696, 0.1627795800138265, 0.15680712566431612, 0.15333408846426755, 0.1507433210411109, 0.14926249580271542, 0.14886761257983744] ***
*** finished computation of 7 references, err: [Inf, 0.18453047677967696, 0.1627795800138265, 0.15680712566431612, 0.15333408846426755, 0.1507433210411109, 0.14926249580271542, 0.14886761257983744] ***
*** center 1: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [51, 2, 0]]
** centroid: 3, normalized-entropy: 0.23181305002459035, [(1, 51), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [43, 43, 0]]
** centroid: 4, normalized-entropy: 1.0, [(1, 43), (2, 43)]
*** center 5: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 79, 21]]
** centroid: 6, normalized-entropy: 0.7414827399312738, [(2, 79), (3, 21)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [15, 59, 0]]
** centroid: 7, normalized-entropy: 0.7273006785144036, [(1, 15), (2, 59)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3787989005763084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3787989005763084, 0.18891844384768047] ***
*** starting iteration: 2; err: [Inf, 0.3787989005763084, 0.18891844384768047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3787989005763084, 0.18891844384768047, 0.16741140887886286] ***
*** starting iteration: 3; err: [Inf, 0.3787989005763084, 0.18891844384768047, 0.16741140887886286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3787989005763084, 0.18891844384768047, 0.16741140887886286, 0.1604429305009544] ***
*** starting iteration: 4; err: [Inf, 0.3787989005763084, 0.18891844384768047, 0.16741140887886286, 0.1604429305009544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3787989005763084, 0.18891844384768047, 0.16741140887886286, 0.1604429305009544, 0.1546836208589375] ***
*** starting iteration: 5; err: [Inf, 0.3787989005763084, 0.18891844384768047, 0.16741140887886286, 0.1604429305009544, 0.1546836208589375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3787989005763084, 0.18891844384768047, 0.16741140887886286, 0.1604429305009544, 0.1546836208589375, 0.15242329472396524] ***
*** starting iteration: 6; err: [Inf, 0.3787989005763084, 0.18891844384768047, 0.16741140887886286, 0.1604429305009544, 0.1546836208589375, 0.15242329472396524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3787989005763084, 0.18891844384768047, 0.16741140887886286, 0.1604429305009544, 0.1546836208589375, 0.15242329472396524, 0.15107425434840843] ***
*** starting iteration: 7; err: [Inf, 0.3787989005763084, 0.18891844384768047, 0.16741140887886286, 0.1604429305009544, 0.1546836208589375, 0.15242329472396524, 0.15107425434840843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3787989005763084, 0.18891844384768047, 0.16741140887886286, 0.1604429305009544, 0.1546836208589375, 0.15242329472396524, 0.15107425434840843, 0.15023749227263034] ***
*** finished computation of 7 references, err: [Inf, 0.3787989005763084, 0.18891844384768047, 0.16741140887886286, 0.1604429305009544, 0.1546836208589375, 0.15242329472396524, 0.15107425434840843, 0.15023749227263034] ***
*** center 1: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 67, 4]]
** centroid: 2, normalized-entropy: 0.3127333763966432, [(2, 67), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 40, 16]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 40), (3, 16)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [21, 35, 0]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(1, 21), (2, 35)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [71, 13, 0]]
** centroid: 5, normalized-entropy: 0.6216297820565386, [(1, 71), (2, 13)]
*** center 6: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [39, 32, 0]]
** centroid: 7, normalized-entropy: 0.9929768866085175, [(1, 39), (2, 32)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19689545026468114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19689545026468114, 0.16293389317765833] ***
*** starting iteration: 2; err: [Inf, 0.19689545026468114, 0.16293389317765833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19689545026468114, 0.16293389317765833, 0.15170469861663877] ***
*** starting iteration: 3; err: [Inf, 0.19689545026468114, 0.16293389317765833, 0.15170469861663877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19689545026468114, 0.16293389317765833, 0.15170469861663877, 0.15039819164946674] ***
*** starting iteration: 4; err: [Inf, 0.19689545026468114, 0.16293389317765833, 0.15170469861663877, 0.15039819164946674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19689545026468114, 0.16293389317765833, 0.15170469861663877, 0.15039819164946674, 0.14970223055779933] ***
*** finished computation of 7 references, err: [Inf, 0.19689545026468114, 0.16293389317765833, 0.15170469861663877, 0.15039819164946674, 0.14970223055779933] ***
*** center 1: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [19, 55, 0]]
** centroid: 2, normalized-entropy: 0.8218127305034848, [(1, 19), (2, 55)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 55, 22]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 55), (3, 22)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [14, 61, 0]]
** centroid: 4, normalized-entropy: 0.6944460704939805, [(1, 14), (2, 61)]
*** center 5: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [42, 9, 0]]
** centroid: 7, normalized-entropy: 0.6722948170756378, [(1, 42), (2, 9)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27823006514459847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27823006514459847, 0.16708184112422167] ***
*** starting iteration: 2; err: [Inf, 0.27823006514459847, 0.16708184112422167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27823006514459847, 0.16708184112422167, 0.15519479242106898] ***
*** starting iteration: 3; err: [Inf, 0.27823006514459847, 0.16708184112422167, 0.15519479242106898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27823006514459847, 0.16708184112422167, 0.15519479242106898, 0.15076737478747965] ***
*** starting iteration: 4; err: [Inf, 0.27823006514459847, 0.16708184112422167, 0.15519479242106898, 0.15076737478747965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27823006514459847, 0.16708184112422167, 0.15519479242106898, 0.15076737478747965, 0.1472610427364707] ***
*** starting iteration: 5; err: [Inf, 0.27823006514459847, 0.16708184112422167, 0.15519479242106898, 0.15076737478747965, 0.1472610427364707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27823006514459847, 0.16708184112422167, 0.15519479242106898, 0.15076737478747965, 0.1472610427364707, 0.14596509558707477] ***
*** starting iteration: 6; err: [Inf, 0.27823006514459847, 0.16708184112422167, 0.15519479242106898, 0.15076737478747965, 0.1472610427364707, 0.14596509558707477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27823006514459847, 0.16708184112422167, 0.15519479242106898, 0.15076737478747965, 0.1472610427364707, 0.14596509558707477, 0.1457452262341976] ***
*** finished computation of 7 references, err: [Inf, 0.27823006514459847, 0.16708184112422167, 0.15519479242106898, 0.15076737478747965, 0.1472610427364707, 0.14596509558707477, 0.1457452262341976] ***
*** center 1: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 64, 20]]
** centroid: 2, normalized-entropy: 0.7918583525674836, [(2, 64), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [42, 52, 0]]
** centroid: 3, normalized-entropy: 0.9918207974218425, [(1, 42), (2, 52)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [77, 3, 0]]
** centroid: 4, normalized-entropy: 0.2307099556914763, [(1, 77), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [8, 53, 0]]
** centroid: 5, normalized-entropy: 0.5605769426145328, [(1, 8), (2, 53)]
*** center 6: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1847540412489325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1847540412489325, 0.15553753028064965] ***
*** starting iteration: 2; err: [Inf, 0.1847540412489325, 0.15553753028064965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1847540412489325, 0.15553753028064965, 0.15149155090563] ***
*** starting iteration: 3; err: [Inf, 0.1847540412489325, 0.15553753028064965, 0.15149155090563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1847540412489325, 0.15553753028064965, 0.15149155090563, 0.1496253041564487] ***
*** starting iteration: 4; err: [Inf, 0.1847540412489325, 0.15553753028064965, 0.15149155090563, 0.1496253041564487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1847540412489325, 0.15553753028064965, 0.15149155090563, 0.1496253041564487, 0.14904069355130195] ***
*** finished computation of 7 references, err: [Inf, 0.1847540412489325, 0.15553753028064965, 0.15149155090563, 0.1496253041564487, 0.14904069355130195] ***
*** center 1: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [51, 14, 0]]
** centroid: 2, normalized-entropy: 0.7516499461153354, [(1, 51), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 92, 14]]
** centroid: 3, normalized-entropy: 0.5631028237513912, [(2, 92), (3, 14)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [33, 32, 0]]
** centroid: 4, normalized-entropy: 0.9998292601233937, [(1, 33), (2, 32)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [14, 51, 0]]
** centroid: 5, normalized-entropy: 0.7516499461153354, [(1, 14), (2, 51)]
*** center 6: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [48, 2, 0]]
** centroid: 7, normalized-entropy: 0.24229218908241482, [(1, 48), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2099546927055344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2099546927055344, 0.16596512732561677] ***
*** starting iteration: 2; err: [Inf, 0.2099546927055344, 0.16596512732561677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2099546927055344, 0.16596512732561677, 0.15699239637702703] ***
*** starting iteration: 3; err: [Inf, 0.2099546927055344, 0.16596512732561677, 0.15699239637702703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2099546927055344, 0.16596512732561677, 0.15699239637702703, 0.15118048435077072] ***
*** starting iteration: 4; err: [Inf, 0.2099546927055344, 0.16596512732561677, 0.15699239637702703, 0.15118048435077072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2099546927055344, 0.16596512732561677, 0.15699239637702703, 0.15118048435077072, 0.1481812991388142] ***
*** starting iteration: 5; err: [Inf, 0.2099546927055344, 0.16596512732561677, 0.15699239637702703, 0.15118048435077072, 0.1481812991388142] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2099546927055344, 0.16596512732561677, 0.15699239637702703, 0.15118048435077072, 0.1481812991388142, 0.14646712914668022] ***
*** starting iteration: 6; err: [Inf, 0.2099546927055344, 0.16596512732561677, 0.15699239637702703, 0.15118048435077072, 0.1481812991388142, 0.14646712914668022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2099546927055344, 0.16596512732561677, 0.15699239637702703, 0.15118048435077072, 0.1481812991388142, 0.14646712914668022, 0.14607107518822887] ***
*** finished computation of 7 references, err: [Inf, 0.2099546927055344, 0.16596512732561677, 0.15699239637702703, 0.15118048435077072, 0.1481812991388142, 0.14646712914668022, 0.14607107518822887] ***
*** center 1: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [6, 74, 0]]
** centroid: 2, normalized-entropy: 0.3843115441264972, [(1, 6), (2, 74)]
*** center 3: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 38, 20]]
** centroid: 4, normalized-entropy: 0.9293636260137188, [(2, 38), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [3, 60, 0]]
** centroid: 5, normalized-entropy: 0.2761954276479391, [(1, 3), (2, 60)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [52, 4, 0]]
** centroid: 6, normalized-entropy: 0.3712323266408756, [(1, 52), (2, 4)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [76, 5, 0]]
** centroid: 7, normalized-entropy: 0.33426813256179383, [(1, 76), (2, 5)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21470552617963404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21470552617963404, 0.15566528651863337] ***
*** starting iteration: 2; err: [Inf, 0.21470552617963404, 0.15566528651863337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21470552617963404, 0.15566528651863337, 0.15185688726697116] ***
*** starting iteration: 3; err: [Inf, 0.21470552617963404, 0.15566528651863337, 0.15185688726697116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21470552617963404, 0.15566528651863337, 0.15185688726697116, 0.14957175354845823] ***
*** starting iteration: 4; err: [Inf, 0.21470552617963404, 0.15566528651863337, 0.15185688726697116, 0.14957175354845823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21470552617963404, 0.15566528651863337, 0.15185688726697116, 0.14957175354845823, 0.14860136561840773] ***
*** finished computation of 7 references, err: [Inf, 0.21470552617963404, 0.15566528651863337, 0.15185688726697116, 0.14957175354845823, 0.14860136561840773] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 56, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [56, 14, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(1, 56), (2, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [64, 41, 0]]
** centroid: 4, normalized-entropy: 0.9651061634819187, [(1, 64), (2, 41)]
*** center 5: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [38, 19, 0]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(1, 38), (2, 19)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 58, 22]]
** centroid: 7, normalized-entropy: 0.8485481782946159, [(2, 58), (3, 22)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.297239955293946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.297239955293946, 0.19166490840911865] ***
*** starting iteration: 2; err: [Inf, 0.297239955293946, 0.19166490840911865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938] ***
*** starting iteration: 3; err: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938, 0.170468567523174] ***
*** starting iteration: 4; err: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938, 0.170468567523174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938, 0.170468567523174, 0.16289742880128324] ***
*** starting iteration: 5; err: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938, 0.170468567523174, 0.16289742880128324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938, 0.170468567523174, 0.16289742880128324, 0.15727176226489245] ***
*** starting iteration: 6; err: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938, 0.170468567523174, 0.16289742880128324, 0.15727176226489245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938, 0.170468567523174, 0.16289742880128324, 0.15727176226489245, 0.1522847241545096] ***
*** starting iteration: 7; err: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938, 0.170468567523174, 0.16289742880128324, 0.15727176226489245, 0.1522847241545096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938, 0.170468567523174, 0.16289742880128324, 0.15727176226489245, 0.1522847241545096, 0.14909045041911304] ***
*** starting iteration: 8; err: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938, 0.170468567523174, 0.16289742880128324, 0.15727176226489245, 0.1522847241545096, 0.14909045041911304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938, 0.170468567523174, 0.16289742880128324, 0.15727176226489245, 0.1522847241545096, 0.14909045041911304, 0.14769082863628863] ***
*** starting iteration: 9; err: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938, 0.170468567523174, 0.16289742880128324, 0.15727176226489245, 0.1522847241545096, 0.14909045041911304, 0.14769082863628863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938, 0.170468567523174, 0.16289742880128324, 0.15727176226489245, 0.1522847241545096, 0.14909045041911304, 0.14769082863628863, 0.14707836553268133] ***
*** finished computation of 7 references, err: [Inf, 0.297239955293946, 0.19166490840911865, 0.18062626649159938, 0.170468567523174, 0.16289742880128324, 0.15727176226489245, 0.1522847241545096, 0.14909045041911304, 0.14769082863628863, 0.14707836553268133] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 64, 22]]
** centroid: 1, normalized-entropy: 0.8203636429576731, [(2, 64), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [61, 31, 0]]
** centroid: 3, normalized-entropy: 0.9218764863469129, [(1, 61), (2, 31)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [2, 73, 0]]
** centroid: 4, normalized-entropy: 0.1773894531859976, [(1, 2), (2, 73)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [53, 14, 0]]
** centroid: 5, normalized-entropy: 0.7394809367166378, [(1, 53), (2, 14)]
*** center 6: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25408382709790023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25408382709790023, 0.17112954758293927] ***
*** starting iteration: 2; err: [Inf, 0.25408382709790023, 0.17112954758293927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25408382709790023, 0.17112954758293927, 0.15252583765052258] ***
*** starting iteration: 3; err: [Inf, 0.25408382709790023, 0.17112954758293927, 0.15252583765052258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25408382709790023, 0.17112954758293927, 0.15252583765052258, 0.149677696143277] ***
*** starting iteration: 4; err: [Inf, 0.25408382709790023, 0.17112954758293927, 0.15252583765052258, 0.149677696143277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25408382709790023, 0.17112954758293927, 0.15252583765052258, 0.149677696143277, 0.14913041065260768] ***
*** finished computation of 7 references, err: [Inf, 0.25408382709790023, 0.17112954758293927, 0.15252583765052258, 0.149677696143277, 0.14913041065260768] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 83, 9]]
** centroid: 1, normalized-entropy: 0.4620663276355394, [(2, 83), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 42, 9]]
** centroid: 2, normalized-entropy: 0.6722948170756378, [(2, 42), (3, 9)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 6, 0]]
** centroid: 3, normalized-entropy: 0.4971677614160751, [(1, 49), (2, 6)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [29, 47, 0]]
** centroid: 4, normalized-entropy: 0.9591495543968941, [(1, 29), (2, 47)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [64, 22, 0]]
** centroid: 5, normalized-entropy: 0.8203636429576731, [(1, 64), (2, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19695591419609262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19695591419609262, 0.16751694720424712] ***
*** starting iteration: 2; err: [Inf, 0.19695591419609262, 0.16751694720424712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19695591419609262, 0.16751694720424712, 0.16029846984241158] ***
*** starting iteration: 3; err: [Inf, 0.19695591419609262, 0.16751694720424712, 0.16029846984241158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19695591419609262, 0.16751694720424712, 0.16029846984241158, 0.15479395033419133] ***
*** starting iteration: 4; err: [Inf, 0.19695591419609262, 0.16751694720424712, 0.16029846984241158, 0.15479395033419133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19695591419609262, 0.16751694720424712, 0.16029846984241158, 0.15479395033419133, 0.1501481982576661] ***
*** starting iteration: 5; err: [Inf, 0.19695591419609262, 0.16751694720424712, 0.16029846984241158, 0.15479395033419133, 0.1501481982576661] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19695591419609262, 0.16751694720424712, 0.16029846984241158, 0.15479395033419133, 0.1501481982576661, 0.14739998319745065] ***
*** starting iteration: 6; err: [Inf, 0.19695591419609262, 0.16751694720424712, 0.16029846984241158, 0.15479395033419133, 0.1501481982576661, 0.14739998319745065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19695591419609262, 0.16751694720424712, 0.16029846984241158, 0.15479395033419133, 0.1501481982576661, 0.14739998319745065, 0.14437306435126812] ***
*** starting iteration: 7; err: [Inf, 0.19695591419609262, 0.16751694720424712, 0.16029846984241158, 0.15479395033419133, 0.1501481982576661, 0.14739998319745065, 0.14437306435126812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19695591419609262, 0.16751694720424712, 0.16029846984241158, 0.15479395033419133, 0.1501481982576661, 0.14739998319745065, 0.14437306435126812, 0.1428874811097048] ***
*** starting iteration: 8; err: [Inf, 0.19695591419609262, 0.16751694720424712, 0.16029846984241158, 0.15479395033419133, 0.1501481982576661, 0.14739998319745065, 0.14437306435126812, 0.1428874811097048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19695591419609262, 0.16751694720424712, 0.16029846984241158, 0.15479395033419133, 0.1501481982576661, 0.14739998319745065, 0.14437306435126812, 0.1428874811097048, 0.14260947762522846] ***
*** finished computation of 7 references, err: [Inf, 0.19695591419609262, 0.16751694720424712, 0.16029846984241158, 0.15479395033419133, 0.1501481982576661, 0.14739998319745065, 0.14437306435126812, 0.1428874811097048, 0.14260947762522846] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [14, 63, 0]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(1, 14), (2, 63)]
*** center 2: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 69, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 45, 17]]
** centroid: 5, normalized-entropy: 0.8474179614176633, [(2, 45), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [50, 14, 0]]
** centroid: 6, normalized-entropy: 0.7578784625383954, [(1, 50), (2, 14)]
*** center 7: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29706702719721945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29706702719721945, 0.2085370340766385] ***
*** starting iteration: 2; err: [Inf, 0.29706702719721945, 0.2085370340766385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29706702719721945, 0.2085370340766385, 0.17580629620142282] ***
*** starting iteration: 3; err: [Inf, 0.29706702719721945, 0.2085370340766385, 0.17580629620142282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29706702719721945, 0.2085370340766385, 0.17580629620142282, 0.16261673602089285] ***
*** starting iteration: 4; err: [Inf, 0.29706702719721945, 0.2085370340766385, 0.17580629620142282, 0.16261673602089285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29706702719721945, 0.2085370340766385, 0.17580629620142282, 0.16261673602089285, 0.15714212633669378] ***
*** starting iteration: 5; err: [Inf, 0.29706702719721945, 0.2085370340766385, 0.17580629620142282, 0.16261673602089285, 0.15714212633669378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29706702719721945, 0.2085370340766385, 0.17580629620142282, 0.16261673602089285, 0.15714212633669378, 0.1540756519436836] ***
*** starting iteration: 6; err: [Inf, 0.29706702719721945, 0.2085370340766385, 0.17580629620142282, 0.16261673602089285, 0.15714212633669378, 0.1540756519436836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29706702719721945, 0.2085370340766385, 0.17580629620142282, 0.16261673602089285, 0.15714212633669378, 0.1540756519436836, 0.15176259439997375] ***
*** starting iteration: 7; err: [Inf, 0.29706702719721945, 0.2085370340766385, 0.17580629620142282, 0.16261673602089285, 0.15714212633669378, 0.1540756519436836, 0.15176259439997375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29706702719721945, 0.2085370340766385, 0.17580629620142282, 0.16261673602089285, 0.15714212633669378, 0.1540756519436836, 0.15176259439997375, 0.1507912483215332] ***
*** finished computation of 7 references, err: [Inf, 0.29706702719721945, 0.2085370340766385, 0.17580629620142282, 0.16261673602089285, 0.15714212633669378, 0.1540756519436836, 0.15176259439997375, 0.1507912483215332] ***
*** center 1: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [3, 55, 0]]
** centroid: 2, normalized-entropy: 0.29367630985136944, [(1, 3), (2, 55)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 66, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [72, 8, 0]]
** centroid: 4, normalized-entropy: 0.46899559358928133, [(1, 72), (2, 8)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 32, 16]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 32), (3, 16)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [75, 22, 0]]
** centroid: 6, normalized-entropy: 0.772398436030307, [(1, 75), (2, 22)]
*** center 7: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23331822629086674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23331822629086674, 0.1922888288423419] ***
*** starting iteration: 2; err: [Inf, 0.23331822629086674, 0.1922888288423419] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23331822629086674, 0.1922888288423419, 0.17857491195574401] ***
*** starting iteration: 3; err: [Inf, 0.23331822629086674, 0.1922888288423419, 0.17857491195574401] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23331822629086674, 0.1922888288423419, 0.17857491195574401, 0.16535067823529243] ***
*** starting iteration: 4; err: [Inf, 0.23331822629086674, 0.1922888288423419, 0.17857491195574401, 0.16535067823529243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23331822629086674, 0.1922888288423419, 0.17857491195574401, 0.16535067823529243, 0.15469092671293766] ***
*** starting iteration: 5; err: [Inf, 0.23331822629086674, 0.1922888288423419, 0.17857491195574401, 0.16535067823529243, 0.15469092671293766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23331822629086674, 0.1922888288423419, 0.17857491195574401, 0.16535067823529243, 0.15469092671293766, 0.1495030408538878] ***
*** starting iteration: 6; err: [Inf, 0.23331822629086674, 0.1922888288423419, 0.17857491195574401, 0.16535067823529243, 0.15469092671293766, 0.1495030408538878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23331822629086674, 0.1922888288423419, 0.17857491195574401, 0.16535067823529243, 0.15469092671293766, 0.1495030408538878, 0.14786813149554656] ***
*** starting iteration: 7; err: [Inf, 0.23331822629086674, 0.1922888288423419, 0.17857491195574401, 0.16535067823529243, 0.15469092671293766, 0.1495030408538878, 0.14786813149554656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23331822629086674, 0.1922888288423419, 0.17857491195574401, 0.16535067823529243, 0.15469092671293766, 0.1495030408538878, 0.14786813149554656, 0.14699385001137852] ***
*** finished computation of 7 references, err: [Inf, 0.23331822629086674, 0.1922888288423419, 0.17857491195574401, 0.16535067823529243, 0.15469092671293766, 0.1495030408538878, 0.14786813149554656, 0.14699385001137852] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 67, 19]]
** centroid: 1, normalized-entropy: 0.7618624463753669, [(2, 67), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [53, 20, 0]]
** centroid: 3, normalized-entropy: 0.847107490529376, [(1, 53), (2, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 59, 3]]
** centroid: 5, normalized-entropy: 0.2795055456366802, [(2, 59), (3, 3)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [61, 26, 0]]
** centroid: 6, normalized-entropy: 0.8798813089176428, [(1, 61), (2, 26)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [55, 2, 0]]
** centroid: 7, normalized-entropy: 0.2192973081321754, [(1, 55), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22046688807941972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22046688807941972, 0.15944649168360048] ***
*** starting iteration: 2; err: [Inf, 0.22046688807941972, 0.15944649168360048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22046688807941972, 0.15944649168360048, 0.15457226997427642] ***
*** starting iteration: 3; err: [Inf, 0.22046688807941972, 0.15944649168360048, 0.15457226997427642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22046688807941972, 0.15944649168360048, 0.15457226997427642, 0.15207243898697198] ***
*** starting iteration: 4; err: [Inf, 0.22046688807941972, 0.15944649168360048, 0.15457226997427642, 0.15207243898697198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22046688807941972, 0.15944649168360048, 0.15457226997427642, 0.15207243898697198, 0.15003472377173602] ***
*** starting iteration: 5; err: [Inf, 0.22046688807941972, 0.15944649168360048, 0.15457226997427642, 0.15207243898697198, 0.15003472377173602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22046688807941972, 0.15944649168360048, 0.15457226997427642, 0.15207243898697198, 0.15003472377173602, 0.14902647572290154] ***
*** starting iteration: 6; err: [Inf, 0.22046688807941972, 0.15944649168360048, 0.15457226997427642, 0.15207243898697198, 0.15003472377173602, 0.14902647572290154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22046688807941972, 0.15944649168360048, 0.15457226997427642, 0.15207243898697198, 0.15003472377173602, 0.14902647572290154, 0.14860082026012242] ***
*** finished computation of 7 references, err: [Inf, 0.22046688807941972, 0.15944649168360048, 0.15457226997427642, 0.15207243898697198, 0.15003472377173602, 0.14902647572290154, 0.14860082026012242] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 45, 18]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 45), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [55, 26, 0]]
** centroid: 3, normalized-entropy: 0.9054522631867892, [(1, 55), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [2, 53, 0]]
** centroid: 4, normalized-entropy: 0.22536363912739493, [(1, 2), (2, 53)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [7, 55, 0]]
** centroid: 5, normalized-entropy: 0.5086113313826895, [(1, 7), (2, 55)]
*** center 6: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19148127207905055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19148127207905055, 0.1571281922273338] ***
*** starting iteration: 2; err: [Inf, 0.19148127207905055, 0.1571281922273338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19148127207905055, 0.1571281922273338, 0.15276121390098707] ***
*** starting iteration: 3; err: [Inf, 0.19148127207905055, 0.1571281922273338, 0.15276121390098707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19148127207905055, 0.1571281922273338, 0.15276121390098707, 0.149493359063752] ***
*** starting iteration: 4; err: [Inf, 0.19148127207905055, 0.1571281922273338, 0.15276121390098707, 0.149493359063752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19148127207905055, 0.1571281922273338, 0.15276121390098707, 0.149493359063752, 0.14851822934579104] ***
*** finished computation of 7 references, err: [Inf, 0.19148127207905055, 0.1571281922273338, 0.15276121390098707, 0.149493359063752, 0.14851822934579104] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [33, 33, 0]]
** centroid: 1, normalized-entropy: 1.0, [(1, 33), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [54, 16, 0]]
** centroid: 2, normalized-entropy: 0.775512658133148, [(1, 54), (2, 16)]
*** center 3: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [44, 21, 0]]
** centroid: 5, normalized-entropy: 0.9076961653608385, [(1, 44), (2, 21)]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 92, 21]]
** centroid: 7, normalized-entropy: 0.6926889992682925, [(2, 92), (3, 21)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26004989535175266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26004989535175266, 0.17072940754890442] ***
*** starting iteration: 2; err: [Inf, 0.26004989535175266, 0.17072940754890442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26004989535175266, 0.17072940754890442, 0.15883901731111108] ***
*** starting iteration: 3; err: [Inf, 0.26004989535175266, 0.17072940754890442, 0.15883901731111108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26004989535175266, 0.17072940754890442, 0.15883901731111108, 0.15282323281746357] ***
*** starting iteration: 4; err: [Inf, 0.26004989535175266, 0.17072940754890442, 0.15883901731111108, 0.15282323281746357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26004989535175266, 0.17072940754890442, 0.15883901731111108, 0.15282323281746357, 0.14960639888327568] ***
*** starting iteration: 5; err: [Inf, 0.26004989535175266, 0.17072940754890442, 0.15883901731111108, 0.15282323281746357, 0.14960639888327568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26004989535175266, 0.17072940754890442, 0.15883901731111108, 0.15282323281746357, 0.14960639888327568, 0.14617411493882537] ***
*** starting iteration: 6; err: [Inf, 0.26004989535175266, 0.17072940754890442, 0.15883901731111108, 0.15282323281746357, 0.14960639888327568, 0.14617411493882537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26004989535175266, 0.17072940754890442, 0.15883901731111108, 0.15282323281746357, 0.14960639888327568, 0.14617411493882537, 0.1454017253080383] ***
*** finished computation of 7 references, err: [Inf, 0.26004989535175266, 0.17072940754890442, 0.15883901731111108, 0.15282323281746357, 0.14960639888327568, 0.14617411493882537, 0.1454017253080383] ***
*** center 1: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 83, 18]]
** centroid: 2, normalized-entropy: 0.6761627418829197, [(2, 83), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [54, 9, 0]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(1, 54), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 8, 0]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(1, 44), (2, 8)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [10, 54, 0]]
** centroid: 5, normalized-entropy: 0.625262405223423, [(1, 10), (2, 54)]
*** center 6: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [66, 31, 0]]
** centroid: 7, normalized-entropy: 0.9039324555927869, [(1, 66), (2, 31)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30742781028710303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30742781028710303, 0.19007843825034798] ***
*** starting iteration: 2; err: [Inf, 0.30742781028710303, 0.19007843825034798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30742781028710303, 0.19007843825034798, 0.16241759056597949] ***
*** starting iteration: 3; err: [Inf, 0.30742781028710303, 0.19007843825034798, 0.16241759056597949] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30742781028710303, 0.19007843825034798, 0.16241759056597949, 0.1549862560480833] ***
*** starting iteration: 4; err: [Inf, 0.30742781028710303, 0.19007843825034798, 0.16241759056597949, 0.1549862560480833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30742781028710303, 0.19007843825034798, 0.16241759056597949, 0.1549862560480833, 0.153313558422029] ***
*** starting iteration: 5; err: [Inf, 0.30742781028710303, 0.19007843825034798, 0.16241759056597949, 0.1549862560480833, 0.153313558422029] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30742781028710303, 0.19007843825034798, 0.16241759056597949, 0.1549862560480833, 0.153313558422029, 0.15315308730676772] ***
*** finished computation of 7 references, err: [Inf, 0.30742781028710303, 0.19007843825034798, 0.16241759056597949, 0.1549862560480833, 0.153313558422029, 0.15315308730676772] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 96, 15]]
** centroid: 1, normalized-entropy: 0.5713549744279549, [(2, 96), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [45, 12, 0]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(1, 45), (2, 12)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [41, 49, 0]]
** centroid: 3, normalized-entropy: 0.9942929346520455, [(1, 41), (2, 49)]
*** center 4: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [80, 22, 0]]
** centroid: 5, normalized-entropy: 0.7522121733341471, [(1, 80), (2, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2022153302654624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2022153302654624, 0.16181541980989278] ***
*** starting iteration: 2; err: [Inf, 0.2022153302654624, 0.16181541980989278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2022153302654624, 0.16181541980989278, 0.15606965699675493] ***
*** starting iteration: 3; err: [Inf, 0.2022153302654624, 0.16181541980989278, 0.15606965699675493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2022153302654624, 0.16181541980989278, 0.15606965699675493, 0.1535917273107916] ***
*** starting iteration: 4; err: [Inf, 0.2022153302654624, 0.16181541980989278, 0.15606965699675493, 0.1535917273107916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2022153302654624, 0.16181541980989278, 0.15606965699675493, 0.1535917273107916, 0.15134698763862253] ***
*** starting iteration: 5; err: [Inf, 0.2022153302654624, 0.16181541980989278, 0.15606965699675493, 0.1535917273107916, 0.15134698763862253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2022153302654624, 0.16181541980989278, 0.15606965699675493, 0.1535917273107916, 0.15134698763862253, 0.1498161843586713] ***
*** starting iteration: 6; err: [Inf, 0.2022153302654624, 0.16181541980989278, 0.15606965699675493, 0.1535917273107916, 0.15134698763862253, 0.1498161843586713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2022153302654624, 0.16181541980989278, 0.15606965699675493, 0.1535917273107916, 0.15134698763862253, 0.1498161843586713, 0.1491614205064252] ***
*** finished computation of 7 references, err: [Inf, 0.2022153302654624, 0.16181541980989278, 0.15606965699675493, 0.1535917273107916, 0.15134698763862253, 0.1498161843586713, 0.1491614205064252] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [69, 7, 0]]
** centroid: 1, normalized-entropy: 0.4434581453896789, [(1, 69), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [50, 7, 0]]
** centroid: 2, normalized-entropy: 0.5373760853377334, [(1, 50), (2, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 60, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 38, 21]]
** centroid: 6, normalized-entropy: 0.9392547207311595, [(2, 38), (3, 21)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [14, 70, 0]]
** centroid: 7, normalized-entropy: 0.6500224216483541, [(1, 14), (2, 70)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30014944943832234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30014944943832234, 0.16716450247820466] ***
*** starting iteration: 2; err: [Inf, 0.30014944943832234, 0.16716450247820466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30014944943832234, 0.16716450247820466, 0.15464725882932545] ***
*** starting iteration: 3; err: [Inf, 0.30014944943832234, 0.16716450247820466, 0.15464725882932545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30014944943832234, 0.16716450247820466, 0.15464725882932545, 0.1517048126757145] ***
*** starting iteration: 4; err: [Inf, 0.30014944943832234, 0.16716450247820466, 0.15464725882932545, 0.1517048126757145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30014944943832234, 0.16716450247820466, 0.15464725882932545, 0.1517048126757145, 0.15061602286063136] ***
*** starting iteration: 5; err: [Inf, 0.30014944943832234, 0.16716450247820466, 0.15464725882932545, 0.1517048126757145, 0.15061602286063136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30014944943832234, 0.16716450247820466, 0.15464725882932545, 0.1517048126757145, 0.15061602286063136, 0.15037123545329087] ***
*** finished computation of 7 references, err: [Inf, 0.30014944943832234, 0.16716450247820466, 0.15464725882932545, 0.1517048126757145, 0.15061602286063136, 0.15037123545329087] ***
*** center 1: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [65, 33, 0]]
** centroid: 2, normalized-entropy: 0.9216597034450192, [(1, 65), (2, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 81, 21]]
** centroid: 4, normalized-entropy: 0.7335379291086666, [(2, 81), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [2, 45, 0]]
** centroid: 5, normalized-entropy: 0.2538784402981617, [(1, 2), (2, 45)]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [39, 23, 0]]
** centroid: 7, normalized-entropy: 0.9514122535330207, [(1, 39), (2, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2096482981098816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2096482981098816, 0.16210817006602884] ***
*** starting iteration: 2; err: [Inf, 0.2096482981098816, 0.16210817006602884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2096482981098816, 0.16210817006602884, 0.15218464402481913] ***
*** starting iteration: 3; err: [Inf, 0.2096482981098816, 0.16210817006602884, 0.15218464402481913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2096482981098816, 0.16210817006602884, 0.15218464402481913, 0.14684566792752593] ***
*** starting iteration: 4; err: [Inf, 0.2096482981098816, 0.16210817006602884, 0.15218464402481913, 0.14684566792752593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2096482981098816, 0.16210817006602884, 0.15218464402481913, 0.14684566792752593, 0.14505017967708408] ***
*** starting iteration: 5; err: [Inf, 0.2096482981098816, 0.16210817006602884, 0.15218464402481913, 0.14684566792752593, 0.14505017967708408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2096482981098816, 0.16210817006602884, 0.15218464402481913, 0.14684566792752593, 0.14505017967708408, 0.1439755648355931] ***
*** starting iteration: 6; err: [Inf, 0.2096482981098816, 0.16210817006602884, 0.15218464402481913, 0.14684566792752593, 0.14505017967708408, 0.1439755648355931] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2096482981098816, 0.16210817006602884, 0.15218464402481913, 0.14684566792752593, 0.14505017967708408, 0.1439755648355931, 0.14358678880520165] ***
*** finished computation of 7 references, err: [Inf, 0.2096482981098816, 0.16210817006602884, 0.15218464402481913, 0.14684566792752593, 0.14505017967708408, 0.1439755648355931, 0.14358678880520165] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 82, 14]]
** centroid: 1, normalized-entropy: 0.5993142373098089, [(2, 82), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [49, 19, 0]]
** centroid: 4, normalized-entropy: 0.8546480601169081, [(1, 49), (2, 19)]
*** center 5: selecting labels [1] (freq >= 2) [from [78, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [50, 15, 0]]
** centroid: 6, normalized-entropy: 0.7793498372920851, [(1, 50), (2, 15)]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 57, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2354948233081959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354948233081959, 0.17092906965641305] ***
*** starting iteration: 2; err: [Inf, 0.2354948233081959, 0.17092906965641305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063] ***
*** starting iteration: 3; err: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481] ***
*** starting iteration: 4; err: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481, 0.15851916768960655] ***
*** starting iteration: 5; err: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481, 0.15851916768960655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481, 0.15851916768960655, 0.1555698460806161] ***
*** starting iteration: 6; err: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481, 0.15851916768960655, 0.1555698460806161] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481, 0.15851916768960655, 0.1555698460806161, 0.15393043661303818] ***
*** starting iteration: 7; err: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481, 0.15851916768960655, 0.1555698460806161, 0.15393043661303818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481, 0.15851916768960655, 0.1555698460806161, 0.15393043661303818, 0.1523413703646511] ***
*** starting iteration: 8; err: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481, 0.15851916768960655, 0.1555698460806161, 0.15393043661303818, 0.1523413703646511] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481, 0.15851916768960655, 0.1555698460806161, 0.15393043661303818, 0.1523413703646511, 0.14994433198496698] ***
*** starting iteration: 9; err: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481, 0.15851916768960655, 0.1555698460806161, 0.15393043661303818, 0.1523413703646511, 0.14994433198496698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481, 0.15851916768960655, 0.1555698460806161, 0.15393043661303818, 0.1523413703646511, 0.14994433198496698, 0.14793197900801897] ***
*** starting iteration: 10; err: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481, 0.15851916768960655, 0.1555698460806161, 0.15393043661303818, 0.1523413703646511, 0.14994433198496698, 0.14793197900801897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481, 0.15851916768960655, 0.1555698460806161, 0.15393043661303818, 0.1523413703646511, 0.14994433198496698, 0.14793197900801897, 0.146495324886404] ***
*** finished computation of 7 references, err: [Inf, 0.2354948233081959, 0.17092906965641305, 0.16729578936845063, 0.1627208266146481, 0.15851916768960655, 0.1555698460806161, 0.15393043661303818, 0.1523413703646511, 0.14994433198496698, 0.14793197900801897, 0.146495324886404] ***
*** center 1: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [79, 2, 0]]
** centroid: 2, normalized-entropy: 0.16702680404522793, [(1, 79), (2, 2)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 45, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [49, 24, 0]]
** centroid: 4, normalized-entropy: 0.9136617865655933, [(1, 49), (2, 24)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [6, 67, 0]]
** centroid: 5, normalized-entropy: 0.4098553703184051, [(1, 6), (2, 67)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 34, 22]]
** centroid: 6, normalized-entropy: 0.9666186325481027, [(2, 34), (3, 22)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [75, 11, 0]]
** centroid: 7, normalized-entropy: 0.5516699920020824, [(1, 75), (2, 11)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20117640302469955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20117640302469955, 0.16727526200655848] ***
*** starting iteration: 2; err: [Inf, 0.20117640302469955, 0.16727526200655848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675] ***
*** starting iteration: 3; err: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675, 0.1570532783670351] ***
*** starting iteration: 4; err: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675, 0.1570532783670351] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675, 0.1570532783670351, 0.1550316660394892] ***
*** starting iteration: 5; err: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675, 0.1570532783670351, 0.1550316660394892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675, 0.1570532783670351, 0.1550316660394892, 0.15349963431619107] ***
*** starting iteration: 6; err: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675, 0.1570532783670351, 0.1550316660394892, 0.15349963431619107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675, 0.1570532783670351, 0.1550316660394892, 0.15349963431619107, 0.15232798029109837] ***
*** starting iteration: 7; err: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675, 0.1570532783670351, 0.1550316660394892, 0.15349963431619107, 0.15232798029109837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675, 0.1570532783670351, 0.1550316660394892, 0.15349963431619107, 0.15232798029109837, 0.15017408171854912] ***
*** starting iteration: 8; err: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675, 0.1570532783670351, 0.1550316660394892, 0.15349963431619107, 0.15232798029109837, 0.15017408171854912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675, 0.1570532783670351, 0.1550316660394892, 0.15349963431619107, 0.15232798029109837, 0.15017408171854912, 0.148828131262213] ***
*** starting iteration: 9; err: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675, 0.1570532783670351, 0.1550316660394892, 0.15349963431619107, 0.15232798029109837, 0.15017408171854912, 0.148828131262213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675, 0.1570532783670351, 0.1550316660394892, 0.15349963431619107, 0.15232798029109837, 0.15017408171854912, 0.148828131262213, 0.1481155409552157] ***
*** finished computation of 7 references, err: [Inf, 0.20117640302469955, 0.16727526200655848, 0.15950550624355675, 0.1570532783670351, 0.1550316660394892, 0.15349963431619107, 0.15232798029109837, 0.15017408171854912, 0.148828131262213, 0.1481155409552157] ***
*** center 1: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 82, 18]]
** centroid: 2, normalized-entropy: 0.6800770457282798, [(2, 82), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [13, 59, 0]]
** centroid: 3, normalized-entropy: 0.6812908868842175, [(1, 13), (2, 59)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [42, 44, 0]]
** centroid: 4, normalized-entropy: 0.9996098363678071, [(1, 42), (2, 44)]
*** center 5: selecting labels [1] (freq >= 2) [from [71, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19744025034364313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19744025034364313, 0.15912419873755426] ***
*** starting iteration: 2; err: [Inf, 0.19744025034364313, 0.15912419873755426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19744025034364313, 0.15912419873755426, 0.15485918359132483] ***
*** starting iteration: 3; err: [Inf, 0.19744025034364313, 0.15912419873755426, 0.15485918359132483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19744025034364313, 0.15912419873755426, 0.15485918359132483, 0.153617790739052] ***
*** starting iteration: 4; err: [Inf, 0.19744025034364313, 0.15912419873755426, 0.15485918359132483, 0.153617790739052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19744025034364313, 0.15912419873755426, 0.15485918359132483, 0.153617790739052, 0.15283373214211315] ***
*** finished computation of 7 references, err: [Inf, 0.19744025034364313, 0.15912419873755426, 0.15485918359132483, 0.153617790739052, 0.15283373214211315] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [34, 30, 0]]
** centroid: 1, normalized-entropy: 0.9971803988942641, [(1, 34), (2, 30)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [60, 2, 0]]
** centroid: 2, normalized-entropy: 0.2055925081850832, [(1, 60), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 95, 16]]
** centroid: 3, normalized-entropy: 0.5949898952560516, [(2, 95), (3, 16)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 33, 0]]
** centroid: 4, normalized-entropy: 0.9350145588035413, [(1, 61), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [21, 35, 0]]
** centroid: 5, normalized-entropy: 0.954434002924965, [(1, 21), (2, 35)]
*** center 6: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23154467344563454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23154467344563454, 0.16310686179995537] ***
*** starting iteration: 2; err: [Inf, 0.23154467344563454, 0.16310686179995537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23154467344563454, 0.16310686179995537, 0.15456274984311313] ***
*** starting iteration: 3; err: [Inf, 0.23154467344563454, 0.16310686179995537, 0.15456274984311313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23154467344563454, 0.16310686179995537, 0.15456274984311313, 0.15237459362857045] ***
*** starting iteration: 4; err: [Inf, 0.23154467344563454, 0.16310686179995537, 0.15456274984311313, 0.15237459362857045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23154467344563454, 0.16310686179995537, 0.15456274984311313, 0.15237459362857045, 0.15217014038562773] ***
*** finished computation of 7 references, err: [Inf, 0.23154467344563454, 0.16310686179995537, 0.15456274984311313, 0.15237459362857045, 0.15217014038562773] ***
*** center 1: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [59, 5, 0]]
** centroid: 3, normalized-entropy: 0.3955378064564774, [(1, 59), (2, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 91, 18]]
** centroid: 4, normalized-entropy: 0.6464599001526788, [(2, 91), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [54, 41, 0]]
** centroid: 5, normalized-entropy: 0.9864497419502243, [(1, 54), (2, 41)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [8, 47, 0]]
** centroid: 6, normalized-entropy: 0.5983474220910422, [(1, 8), (2, 47)]
*** center 7: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
finished with 9 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 367,3 => 37,1 => 596), Dict(2 => 364,3 => 31,1 => 605))
[ Info: ===== scores for single classifier: {"micro_f1":0.933,"precision":0.933,"recall":0.933,"macro_recall":0.9528713710531892,"macro_f1":0.9075028693375606,"accuracy":0.933,"class_f1":{"2":0.9093369418132612,"3":0.8611111111111112,"1":0.9520605550883094},"class_precision":{"2":0.896,"3":0.7560975609756098,"1":0.9691780821917808},"class_recall":{"2":0.9230769230769231,"3":1.0,"1":0.9355371900826446}}
[ Info: ===== scores for 1: {"micro_f1":0.967,"precision":0.967,"recall":0.967,"macro_recall":0.9730633003360275,"macro_f1":0.947777364405764,"accuracy":0.967,"class_f1":{"2":0.9537166900420758,"3":0.911764705882353,"1":0.977850697292863},"class_precision":{"2":0.9742120343839542,"3":0.8378378378378378,"1":0.9706840390879479},"class_recall":{"2":0.9340659340659341,"3":1.0,"1":0.9851239669421488}}
[ Info: ===== scores for 5: {"micro_f1":0.962,"precision":0.962,"recall":0.962,"macro_recall":0.9703084793993885,"macro_f1":0.9441602571560535,"accuracy":0.962,"class_f1":{"2":0.9470752089136492,"3":0.911764705882353,"1":0.9736408566721582},"class_precision":{"2":0.96045197740113,"3":0.8378378378378378,"1":0.9704433497536946},"class_recall":{"2":0.9340659340659341,"3":1.0,"1":0.9768595041322314}}
[ Info: ===== scores for 7: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9730557321466412,"macro_f1":0.9506923232534817,"accuracy":0.965,"class_f1":{"2":0.9514563106796117,"3":0.9253731343283582,"1":0.9752475247524752},"class_precision":{"2":0.9607843137254902,"3":0.8611111111111112,"1":0.9736408566721582},"class_recall":{"2":0.9423076923076923,"3":1.0,"1":0.9768595041322314}}
[ Info: ===== scores for 9: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9726909454182181,"macro_f1":0.950660905671148,"accuracy":0.965,"class_f1":{"2":0.9513212795549374,"3":0.9253731343283582,"1":0.9752883031301484},"class_precision":{"2":0.9633802816901409,"3":0.8611111111111112,"1":0.9720853858784894},"class_recall":{"2":0.9395604395604396,"3":1.0,"1":0.9785123966942149}}
[ Info: ===== scores for 11: {"micro_f1":0.97,"precision":0.97,"recall":0.97,"macro_recall":0.9769049132685496,"macro_f1":0.9543925973341193,"accuracy":0.97,"class_f1":{"2":0.9584487534626039,"3":0.9253731343283582,"1":0.9793559042113955},"class_precision":{"2":0.9664804469273743,"3":0.8611111111111112,"1":0.9785478547854786},"class_recall":{"2":0.9505494505494505,"3":1.0,"1":0.9801652892561984}}
(score = 0.965, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.967, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.962, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.962, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.96, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.96, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.962, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.962, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.965, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.967,"k":1,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.967,"precision":0.967,"recall":0.967,"macro_recall":0.9730633003360275,"macro_f1":0.947777364405764,"accuracy":0.967,"class_f1":{"2":0.9537166900420758,"3":0.911764705882353,"1":0.977850697292863},"class_precision":{"2":0.9742120343839542,"3":0.8378378378378378,"1":0.9706840390879479},"class_recall":{"2":0.9340659340659341,"3":1.0,"1":0.9851239669421488}}
Test Summary: | Pass  Total
AKNC          |    8      8
[580, 4, 2, 3, 1, 2, 6, 3, 11, 5, 1, 4, 3, 5, 4, 8, 4, 2, 8, 4, 14, 8, 29, 4, 2, 24, 4, 3, 35, 9, 20, 16, 4, 3, 4, 7, 9, 2, 31, 6, 3, 1, 19, 28, 19, 2, 7, 5, 13, 8, 5, 3, 16, 6, 6, 5, 1, 26, 1, 25, 31, 6, 9, 1, 91, 8, 207, 4, 33, 104, 21, 42, 10, 4, 13, 4, 4, 13, 8, 9, 4, 10, 53, 6, 30, 41, 8, 5, 18, 1, 10, 39, 4, 15, 13, 13, 16, 7, 17, 47, 47, 52, 83, 5, 47, 67, 54, 5, 5, 49, 96, 4, 17, 15, 195, 120, 2, 42, 216, 49, 9, 14, 14, 7, 19, 12, 1, 3, 91, 88, 239, 43, 9, 64, 22, 42, 124, 10, 11, 9, 2, 16, 90, 6, 5, 10, 13, 4, 27, 51, 27, 4, 165, 7, 5, 12, 67, 47, 364, 47, 3, 6, 67, 94, 16, 7, 3, 25, 10, 5, 82, 230, 21, 55, 130, 2, 2, 6, 7, 5, 20, 15, 23, 15, 26, 36, 8, 25, 32, 4, 212, 15, 23, 6, 10, 102, 84, 56, 32, 14, 27, 45, 345, 36, 1, 19, 51, 4, 30, 11, 28, 29, 32, 18, 7, 9, 61, 17, 5, 10, 16, 4, 56, 42, 15, 9, 8, 7, 19, 42, 49, 3, 58, 8, 41, 26, 14, 11, 79, 31, 23, 23, 1, 39, 25, 10, 174, 22, 13, 13, 29, 62, 12, 7, 8, 22, 4, 103, 27, 2, 17, 22, 17, 75, 47, 11, 4, 49, 48, 11, 7, 22, 89, 38, 54, 20, 48, 186, 192, 49, 12, 2, 3, 67, 58, 3, 61, 40, 59, 15, 2, 18, 41, 1, 10, 5, 6, 33, 35, 5]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6340000000000002, speedup = 0.25509774273679664, eval_ratio = 0.062020000000000006)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.37779947916666656,"recall":0.36284722222222215,"f1":null,"seconds":0.00012332387268543243,"exhaustive_search_seconds":0.0003610551357269287,"evaluations":420.0390625,"distances_sum":1761.6048632790432}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5381944444444442,"recall":0.5381944444444442,"f1":null,"seconds":0.0001976247876882553,"exhaustive_search_seconds":0.0003610551357269287,"evaluations":522.4921875,"distances_sum":1712.4969927904147}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6414930555555555,"recall":0.6414930555555555,"f1":0.6414930555555555,"seconds":0.0002689734101295471,"exhaustive_search_seconds":0.0003610551357269287,"evaluations":617.8515625,"distances_sum":1660.2879341192565}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7100694444444441,"recall":0.7100694444444441,"f1":0.7100694444444441,"seconds":0.0003450252115726471,"exhaustive_search_seconds":0.0003610551357269287,"evaluations":722.890625,"distances_sum":1632.4042783177429}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.769965277777777,"recall":0.769965277777777,"f1":0.769965277777777,"seconds":0.0004243925213813782,"exhaustive_search_seconds":0.0003610551357269287,"evaluations":823.0078125,"distances_sum":1614.4598996756781}
KCenters.DeloneInvIndex> reached performance {"precision":0.8133680555555549,"recall":0.8133680555555549,"f1":0.8133680555555549,"seconds":0.0006435811519622803,"exhaustive_search_seconds":0.0003610551357269287,"evaluations":910.828125,"distances_sum":1604.379571284496}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8099999999999998, speedup = 0.7405199216198564, eval_ratio = 0.085755)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
