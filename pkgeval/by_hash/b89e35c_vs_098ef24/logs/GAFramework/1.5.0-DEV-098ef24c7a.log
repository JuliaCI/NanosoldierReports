Julia Version 1.5.0-DEV.665
Commit 098ef24c7a (2020-04-22 23:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_PxC4CV/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_PxC4CV/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172330435063092
curgen: 20 fitness: 0.2172330435063092
curgen: 30 fitness: 0.2172330435063092
curgen: 40 fitness: 0.2172330435063092
curgen: 50 fitness: 0.2172330435063092
CoordinateCreature{Array{Float64,1}}([0.22243328531520598], -0.2172330435063092) 0.22243328531520598 -0.2172330435063092
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258027934774854
curgen: 100 fitness: 3.2581531352202213
curgen: 150 fitness: 3.2583664475944882
curgen: 200 fitness: 3.258417504558787
curgen: 250 fitness: 3.258445572536922
curgen: 300 fitness: 3.2584645951755395
curgen: 350 fitness: 3.2584659692835016
curgen: 400 fitness: 3.258472457327244
curgen: 450 fitness: 3.2584777558062865
curgen: 500 fitness: 3.258477767914177
CoordinateCreature{Array{Float64,1}}([0.22251661938832998, -0.22275846032083008, -0.22254177703918054, -0.22208384002784717, 0.2230356566901461, -0.22255496174565867, -0.22225230224768927, -0.22256837724872525, -0.2225706921315719, -0.22260116977108532, -0.22255045606584473, -0.22252526846211212, 0.22257781374639893, 0.22260022251410605, 0.22245849062872294], -3.258477767914177) [0.22251661938832998, -0.22275846032083008, -0.22254177703918054, -0.22208384002784717, 0.2230356566901461, -0.22255496174565867, -0.22225230224768927, -0.22256837724872525, -0.2225706921315719, -0.22260116977108532, -0.22255045606584473, -0.22252526846211212, 0.22257781374639893, 0.22260022251410605, 0.22245849062872294] -3.258477767914177
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004433358463302284
curgen: 100 fitness: -0.003648998132092629
curgen: 150 fitness: -0.003648998132092629
curgen: 200 fitness: -0.002903696479336304
curgen: 250 fitness: -0.0025966683781177835
curgen: 300 fitness: -0.001123419195380393
curgen: 350 fitness: -0.0010357794363073936
curgen: 400 fitness: -0.0010357794363073936
curgen: 450 fitness: -0.0010357794363073936
curgen: 500 fitness: -0.0010357794363073936
CoordinateCreature{Array{Float64,1}}([-0.00021225828373170122, 0.0005103393248553755, 0.0004473410406318554, 0.0009928084540599485, 0.0007124559066653185, -0.00037036486393667977, 0.00019251988937381975, 7.314296687371033e-5, 0.0010197030195933986, -0.0005606461241240042, -0.0007456930761688381, 0.00028843037465429164, -0.0006022732698732387, 4.220946003430208e-5, 0.0008273686628924291], 0.0010357794363073936) [-0.00021225828373170122, 0.0005103393248553755, 0.0004473410406318554, 0.0009928084540599485, 0.0007124559066653185, -0.00037036486393667977, 0.00019251988937381975, 7.314296687371033e-5, 0.0010197030195933986, -0.0005606461241240042, -0.0007456930761688381, 0.00028843037465429164, -0.0006022732698732387, 4.220946003430208e-5, 0.0008273686628924291] 0.0010357794363073936
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
