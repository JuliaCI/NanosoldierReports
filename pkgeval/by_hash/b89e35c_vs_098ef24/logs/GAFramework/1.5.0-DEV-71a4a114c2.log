Julia Version 1.5.0-DEV.668
Commit 71a4a114c2 (2020-04-23 08:01 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_2fiLpy/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_2fiLpy/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172174054435528
curgen: 20 fitness: 0.2172174054435528
curgen: 30 fitness: 0.2172174054435528
curgen: 40 fitness: 0.21723150910814942
curgen: 50 fitness: 0.21723353140938695
CoordinateCreature{Array{Float64,1}}([0.22250140856976072], -0.21723353140938695) 0.22250140856976072 -0.21723353140938695
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257441308108966
curgen: 100 fitness: 3.2578597043358855
curgen: 150 fitness: 3.2579465817403412
curgen: 200 fitness: 3.258236928001859
curgen: 250 fitness: 3.2582773475959916
curgen: 300 fitness: 3.258284152334945
curgen: 350 fitness: 3.2583105372229744
curgen: 400 fitness: 3.2583105372229744
curgen: 450 fitness: 3.2583380086161133
curgen: 500 fitness: 3.2583532507387694
CoordinateCreature{Array{Float64,1}}([0.22109076627444624, 0.22265554015274105, 0.22278256712283953, 0.22251741556050722, -0.2221876721660174, -0.2224543401453981, -0.22280730018475253, 0.22275037721595184, -0.22239913347438645, -0.22238684528669647, 0.22262369621434777, 0.22323262479746608, -0.22235120121381258, 0.22307846793489988, 0.22289134504468572], -3.2583532507387694) [0.22109076627444624, 0.22265554015274105, 0.22278256712283953, 0.22251741556050722, -0.2221876721660174, -0.2224543401453981, -0.22280730018475253, 0.22275037721595184, -0.22239913347438645, -0.22238684528669647, 0.22262369621434777, 0.22323262479746608, -0.22235120121381258, 0.22307846793489988, 0.22289134504468572] -3.2583532507387694
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0018386853455467644
curgen: 100 fitness: -0.0015379508791397711
curgen: 150 fitness: -0.0014450916415285064
curgen: 200 fitness: -0.0014118105702891626
curgen: 250 fitness: -0.001311799128814073
curgen: 300 fitness: -0.001311799128814073
curgen: 350 fitness: -0.001311799128814073
curgen: 400 fitness: -0.0013033933859105673
curgen: 450 fitness: -0.0013033933859105673
curgen: 500 fitness: -0.0012421597114098404
CoordinateCreature{Array{Float64,1}}([-9.179214489742551e-6, -0.0010903214208010455, 0.00015952625001132095, -0.000128172550405402, 0.0002811141385493559, 0.0003094051122487344, -0.0005205635516466205, 0.0001810045681259274, -0.00018834766986985507, 0.00037861045031427196, -0.0006496909278640352, -0.00015838724616496543, 0.0006559144626568079, -0.0017211939236019234, 0.0007301819609732191], 0.0012421597114098404) [-9.179214489742551e-6, -0.0010903214208010455, 0.00015952625001132095, -0.000128172550405402, 0.0002811141385493559, 0.0003094051122487344, -0.0005205635516466205, 0.0001810045681259274, -0.00018834766986985507, 0.00037861045031427196, -0.0006496909278640352, -0.00015838724616496543, 0.0006559144626568079, -0.0017211939236019234, 0.0007301819609732191] 0.0012421597114098404
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
