Julia Version 1.6.0-DEV.142
Commit 6f059bf1ae (2020-06-01 16:19 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Reexport ──────────────────── v0.2.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed DataAPI ───────────────────── v1.3.0
  Installed TableTraits ───────────────── v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed StatsBase ─────────────────── v0.32.2
  Installed DataFrames ────────────────── v0.20.2
  Installed MappedArrays ──────────────── v0.2.2
  Installed Missings ──────────────────── v0.4.3
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed OrderedCollections ────────── v1.2.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Compat ────────────────────── v3.10.0
  Installed Tables ────────────────────── v1.0.4
  Installed MLDataPattern ─────────────── v0.5.3
  Installed MLDataUtils ───────────────── v0.5.1
  Installed PooledArrays ──────────────── v0.5.3
  Installed LearnBase ─────────────────── v0.2.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Parsers ───────────────────── v1.0.4
  Installed DataStructures ────────────── v0.17.17
  Installed JSON ──────────────────────── v0.21.0
  Installed SimilaritySearch ──────────── v0.3.19
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.10.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.4
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_Jq77eN/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_Jq77eN/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.10.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.4
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.932025450070699
[ Info: 0.8326150393486023
[ Info: 0.5556568817794323
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3318464467674494
mean(cdnet.distances) = 0.3520268699775139
mean(crand.distances) = 0.3316663647443056
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.556640625,"f1":null,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":7.78125,"distances_sum":1615.873424109462}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.868658945221446,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.296875,"distances_sum":2407.90312619979}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.868658945221446,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.296875,"distances_sum":2407.90312619979}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9563816391941395,"seconds":6.457790732383728e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.8515625,"distances_sum":3068.2839101507248}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9085196053946061,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.4765625,"distances_sum":2646.4306632572616}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9214832042957048,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.546875,"distances_sum":2804.7532181120287}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9563816391941395,"seconds":6.457790732383728e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.8515625,"distances_sum":3068.2839101507248}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9813988095238096,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.953125,"distances_sum":3300.573460922465}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763965201465203,"seconds":6.962567567825317e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.953125,"distances_sum":3246.6425893163455}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9626717032967036,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.8984375,"distances_sum":3104.913408953133}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9813988095238096,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.953125,"distances_sum":3300.573460922465}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9813988095238096,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.953125,"distances_sum":3300.573460922465}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.34375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.34375,"f1":null,"seconds":3.423541784286499e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.40625,"distances_sum":951.5747997361375}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.166015625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.166015625,"f1":null,"seconds":3.0454248189926147e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":4.671875,"distances_sum":485.15571620724836}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.34375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.34375,"f1":null,"seconds":3.423541784286499e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.40625,"distances_sum":951.5747997361375}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.865560481185482,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.5234375,"distances_sum":2211.2193245904427}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.8971367174492182,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.4609375,"distances_sum":2471.8017604597576}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8310546875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8310546875,"f1":0.8971367174492182,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.4609375,"distances_sum":2471.8017604597576}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.941174450549451,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.75,"distances_sum":2744.4462192935325}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9719150641025645,"seconds":6.893649697303772e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8984375,"distances_sum":2968.1674719587554}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9548992673992679,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.796875,"distances_sum":2864.7046365590286}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9719150641025645,"seconds":6.893649697303772e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8984375,"distances_sum":2968.1674719587554}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9719150641025645,"seconds":6.893649697303772e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8984375,"distances_sum":2968.1674719587554}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6337890625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6337890625,"f1":0.7579779595404603,"seconds":4.692003130912781e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.5234375,"distances_sum":1754.0574222987993}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8470571095571103,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.328125,"distances_sum":2100.6733946408526}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8470571095571103,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.328125,"distances_sum":2100.6733946408526}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9412145146520151,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.671875,"distances_sum":2724.1931809110843}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9577068764568769,"seconds":6.683170795440674e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.75,"distances_sum":2850.787674581901}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9577068764568769,"seconds":6.683170795440674e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.75,"distances_sum":2850.787674581901}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9609260531135538,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.90625,"distances_sum":2836.4478274513044}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9609260531135538,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.90625,"distances_sum":2836.4478274513044}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9609260531135538,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.90625,"distances_sum":2836.4478274513044}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.42578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.42578125,"f1":null,"seconds":4.755333065986633e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.3359375,"distances_sum":1044.6563996427933}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4345703125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4345703125,"f1":null,"seconds":4.0102750062942505e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.3125,"distances_sum":1069.2885904593438}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4345703125,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.4345703125,"f1":null,"seconds":4.0102750062942505e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.3125,"distances_sum":1069.2885904593438}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9085882867132875,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.2890625,"distances_sum":2413.338777553931}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7116055819180824,"seconds":4.468485713005066e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.3984375,"distances_sum":1460.9191031151827}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9085882867132875,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.2890625,"distances_sum":2413.338777553931}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9582989926739933,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8359375,"distances_sum":2772.02079219163}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9104660964035972,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.3359375,"distances_sum":2456.40003575401}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9582989926739933,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8359375,"distances_sum":2772.02079219163}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9582989926739933,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8359375,"distances_sum":2772.02079219163}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8482496669996679,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.78125,"distances_sum":1968.1587465480538}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3740234375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3740234375,"f1":null,"seconds":3.820285201072693e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.578125,"distances_sum":874.8855779920189}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8482496669996679,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.78125,"distances_sum":1968.1587465480538}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8950206043956054,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.984375,"distances_sum":2226.4211614294577}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.941955960705961,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.5859375,"distances_sum":2645.7145981328167}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.941955960705961,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.5859375,"distances_sum":2645.7145981328167}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9687900641025646,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8125,"distances_sum":2788.6685560124097}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9687900641025646,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8125,"distances_sum":2788.6685560124097}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9687900641025646,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8125,"distances_sum":2788.6685560124097}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2109375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2109375,"f1":null,"seconds":3.771856427192688e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.5859375,"distances_sum":430.1994950349983}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":4.062429070472717e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.7265625,"distances_sum":881.3360973991406}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.894791007041931e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.7421875,"distances_sum":478.1274056208653}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4013671875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4013671875,"f1":null,"seconds":4.062429070472717e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.7265625,"distances_sum":881.3360973991406}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8119099650349659,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.3984375,"distances_sum":1519.1655168895288}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8022800116550125,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.1015625,"distances_sum":1483.8515905234783}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8958369755244762,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.65625,"distances_sum":2019.3052286134903}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5908203125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5908203125,"f1":0.7289411976911983,"seconds":4.6603381633758545e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.1796875,"distances_sum":1319.3857243501125}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8437161796536805,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.1171875,"distances_sum":1719.0304796014639}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.82421875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.82421875,"f1":0.8958369755244762,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.65625,"distances_sum":2019.3052286134903}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9645177738927744,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8828125,"distances_sum":2454.745465625272}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9284913003663011,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.890625,"distances_sum":2182.326703596538}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9146036255411262,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.734375,"distances_sum":2159.177674087998}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9306318681318688,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.796875,"distances_sum":2210.843280691324}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9645177738927744,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8828125,"distances_sum":2454.745465625272}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9645177738927744,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8828125,"distances_sum":2454.745465625272}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.376953125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.376953125,"f1":null,"seconds":3.902241587638855e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":5.5,"distances_sum":803.4593050599555}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.369140625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.369140625,"f1":null,"seconds":3.721565008163452e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":5.484375,"distances_sum":768.0752069432149}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6201171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6201171875,"f1":0.7519270659895667,"seconds":4.7460198402404785e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.078125,"distances_sum":1329.8029864784062}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6201171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6201171875,"f1":0.7519270659895667,"seconds":4.7460198402404785e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.078125,"distances_sum":1329.8029864784062}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8829816017316026,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.984375,"distances_sum":1992.0973087838884}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.884367195304696,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.0078125,"distances_sum":1998.5452620454307}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7119140625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7119140625,"f1":0.8210950507825517,"seconds":6.752088665962219e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.6953125,"distances_sum":1700.4018661738353}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.640625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.640625,"f1":0.768262293262294,"seconds":4.524365067481995e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.1953125,"distances_sum":1420.821635090616}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7885411463536471,"seconds":4.567205905914307e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.328125,"distances_sum":1516.778788343597}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.877609890109891,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.9921875,"distances_sum":1931.6986751420532}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.806640625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.806640625,"f1":0.884367195304696,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.0078125,"distances_sum":1998.5452620454307}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9144288003663013,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.546875,"distances_sum":2171.294747682081}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9186870421245431,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.5078125,"distances_sum":2178.260217413779}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9544184981684987,"seconds":6.534159183502197e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7734375,"distances_sum":2352.946792698136}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9472787629037633,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7109375,"distances_sum":2358.448436747756}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9544184981684987,"seconds":6.534159183502197e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7734375,"distances_sum":2352.946792698136}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9544184981684987,"seconds":6.534159183502197e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7734375,"distances_sum":2352.946792698136}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8428092740592751,"seconds":5.146488547325134e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8203125,"distances_sum":1673.6086174796756}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8033705877455884,"seconds":4.4852495193481445e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.3125,"distances_sum":1489.5807331498793}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8428092740592751,"seconds":5.146488547325134e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8203125,"distances_sum":1673.6086174796756}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9272092490842498,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.828125,"distances_sum":2187.667486937882}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9531822344322348,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2352.6892126516373}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9294044497169505,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.84375,"distances_sum":2191.9620648172927}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9531822344322348,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2352.6892126516373}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9623168498168503,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.875,"distances_sum":2428.66149049829}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9613553113553117,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.859375,"distances_sum":2433.6965231387585}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720066391941395,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2472.586435831612}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9649954212454217,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.953125,"distances_sum":2419.71609945584}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720066391941395,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2472.586435831612}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720066391941395,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2472.586435831612}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7101485320235328,"seconds":4.1835010051727295e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":6.8671875,"distances_sum":1165.0696699932546}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.843968011155512,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.734375,"distances_sum":1678.8514601449976}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.7588179111480713e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":6.0859375,"distances_sum":808.4519299132056}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.740234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.740234375,"f1":0.843968011155512,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.734375,"distances_sum":1678.8514601449976}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9647550366300373,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8984375,"distances_sum":2442.7570785833595}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8891686438561447,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.546875,"distances_sum":1941.2522024403893}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9360951548451558,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8984375,"distances_sum":2226.1608704442256}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8862325174825182,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.5625,"distances_sum":1932.351451980079}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9647550366300373,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8984375,"distances_sum":2442.7570785833595}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9714514652014654,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.96875,"distances_sum":2477.3083022769324}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672103937728942,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.953125,"distances_sum":2454.749446515491}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9705586080586083,"seconds":6.282702088356018e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.9375,"distances_sum":2473.087449840842}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9714514652014654,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.96875,"distances_sum":2477.3083022769324}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9714514652014654,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.96875,"distances_sum":2477.3083022769324}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9884114583333332,"recall":0.64453125,"f1":0.7688390602453109,"seconds":4.678964614868164e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.1875,"distances_sum":1295.0375412047665}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.359375,"f1":null,"seconds":3.5688281059265137e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.484375,"distances_sum":680.7091008882604}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.181640625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.181640625,"f1":null,"seconds":3.121793270111084e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.34375,"distances_sum":357.3945933667662}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.64453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":0.9884114583333332,"recall":0.64453125,"f1":0.7688390602453109,"seconds":4.678964614868164e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.1875,"distances_sum":1295.0375412047665}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":5,"bsize":6}, perf: {"precision":0.9866908482142858,"recall":0.7890625,"f1":0.8714381321803203,"seconds":8.907169103622437e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.4921875,"distances_sum":1818.5562773380457}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7119140625, conf: {"ssize":4,"bsize":5}, perf: {"precision":0.9880766369047619,"recall":0.7119140625,"f1":0.8210599296536804,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.96875,"distances_sum":1470.0150694803515}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9816220238095236,"recall":0.7314453125,"f1":0.8311043123543127,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.0546875,"distances_sum":1572.510885950113}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":6,"bsize":5}, perf: {"precision":0.9829799107142856,"recall":0.73046875,"f1":0.8309588848651352,"seconds":5.127862095832825e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.0859375,"distances_sum":1593.6395241982107}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":5,"bsize":6},"perf":{"precision":0.9866908482142858,"recall":0.7890625,"f1":0.8714381321803203,"seconds":8.907169103622437e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.4921875,"distances_sum":1818.5562773380457}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.9863002232142858,"recall":0.921875,"f1":0.9500193166208796,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8359375,"distances_sum":2353.5600339856815}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":5,"bsize":7}, perf: {"precision":0.9856863839285714,"recall":0.841796875,"f1":0.9021730222902102,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.546875,"distances_sum":2042.5248594306622}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":9}, perf: {"precision":0.9917689732142858,"recall":0.9248046875,"f1":0.9545894860347991,"seconds":9.231269359588623e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8203125,"distances_sum":2360.9320014988625}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9882998511904761,"recall":0.873046875,"f1":0.9235505380036636,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6953125,"distances_sum":2136.8016386694676}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.9827473958333335,"recall":0.9111328125,"f1":0.9429809123168502,"seconds":9.134411811828613e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8203125,"distances_sum":2319.9712250539087}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":4,"bsize":7}, perf: {"precision":0.9900669642857143,"recall":0.8623046875,"f1":0.9176310668498177,"seconds":8.64081084728241e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6640625,"distances_sum":2095.1127714652584}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":10,"bsize":8}, perf: {"precision":0.983482142857143,"recall":0.880859375,"f1":0.9239860400016656,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.65625,"distances_sum":2205.5914052864423}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":9,"bsize":7}, perf: {"precision":0.9869233630952382,"recall":0.861328125,"f1":0.9163733402014657,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.703125,"distances_sum":2079.141750206914}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":5,"bsize":9},"perf":{"precision":0.9917689732142858,"recall":0.9248046875,"f1":0.9545894860347991,"seconds":9.231269359588623e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8203125,"distances_sum":2360.9320014988625}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":5,"bsize":9},"perf":{"precision":0.9917689732142858,"recall":0.9248046875,"f1":0.9545894860347991,"seconds":9.231269359588623e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8203125,"distances_sum":2360.9320014988625}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7863901723276732,"seconds":4.909932613372803e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.46875,"distances_sum":1357.8211107168286}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.66015625,"f1":0.7863901723276732,"seconds":4.909932613372803e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.46875,"distances_sum":1357.8211107168286}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7275390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7275390625,"f1":0.834410381285382,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.109375,"distances_sum":1548.6896313206141}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9135333416583424,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.7421875,"distances_sum":2034.2001518787097}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.8240363802863812,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.109375,"distances_sum":1489.6421989735634}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8505859375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8505859375,"f1":0.9135333416583424,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.7421875,"distances_sum":2034.2001518787097}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667067307692312,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.890625,"distances_sum":2433.5746085016103}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9381581959706965,"seconds":6.401911377906799e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.90625,"distances_sum":2197.749357359821}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9538976648351656,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.796875,"distances_sum":2375.1624945300673}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9572058150183155,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8828125,"distances_sum":2370.9200486589702}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9433321886446893,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.953125,"distances_sum":2222.8642968872937}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9667067307692312,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.890625,"distances_sum":2433.5746085016103}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9667067307692312,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.890625,"distances_sum":2433.5746085016103}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.275390625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.275390625,"f1":null,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":6.359375,"distances_sum":626.2796089917481}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.275390625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.275390625,"f1":null,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":6.359375,"distances_sum":626.2796089917481}}, n: 9
mean(cfft.distances) = 0.3408345362857324
mean(cdnet.distances) = 0.3981173380891895
mean(crand.distances) = 0.65154560050714
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8644444444444445
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9333333333333332
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8333333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8622222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9222222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.86
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8933333333333332
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9066666666666666
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.888888888888889
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8822222222222221
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9022222222222224
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666666
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8377777777777777
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.88
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8644444444444446
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8799999999999999
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.92
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.851111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8777777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8444444444444444
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8933333333333332
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 8, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 9, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 2, 3, 1, 3, 2]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 8, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 9, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 2, 3, 1, 3, 2]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 8, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 9, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 2, 3, 1, 3, 2]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 8, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 9, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 2, 3, 1, 3, 2]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 8, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 9, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 2, 3, 1, 3, 2]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 8, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 9, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 2, 3, 1, 3, 2]
acc = 0.9266666666666666
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 8, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 9, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 2, 3, 1, 3, 2]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.5599194872876009] ***
*** center 1: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 8, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.40562196773919523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40562196773919523, 0.304142643512552] ***
*** finished computation of 3 references, err: [Inf, 0.40562196773919523, 0.304142643512552] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [84, 177, 33]]
** centroid: 1, normalized-entropy: 0.8273287810668829, [(1, 84), (2, 177), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [188, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [107, 78, 0]]
** centroid: 3, normalized-entropy: 0.9822012409694036, [(1, 107), (2, 78)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4355949090774181] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4355949090774181, 0.2882833527750161] ***
*** finished computation of 3 references, err: [Inf, 0.4355949090774181, 0.2882833527750161] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [240, 27, 0]]
** centroid: 1, normalized-entropy: 0.4725472219330293, [(1, 240), (2, 27)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [165, 33, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 165), (2, 33)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 171, 31]]
** centroid: 3, normalized-entropy: 0.6184448210315885, [(2, 171), (3, 31)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.18273347522154473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18273347522154473, 0.158343698190177] ***
*** starting iteration: 2; err: [Inf, 0.18273347522154473, 0.158343698190177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18273347522154473, 0.158343698190177, 0.14901974984911737] ***
*** starting iteration: 3; err: [Inf, 0.18273347522154473, 0.158343698190177, 0.14901974984911737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18273347522154473, 0.158343698190177, 0.14901974984911737, 0.14415145607514157] ***
*** starting iteration: 4; err: [Inf, 0.18273347522154473, 0.158343698190177, 0.14901974984911737, 0.14415145607514157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18273347522154473, 0.158343698190177, 0.14901974984911737, 0.14415145607514157, 0.14252981037046905] ***
*** starting iteration: 5; err: [Inf, 0.18273347522154473, 0.158343698190177, 0.14901974984911737, 0.14415145607514157, 0.14252981037046905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18273347522154473, 0.158343698190177, 0.14901974984911737, 0.14415145607514157, 0.14252981037046905, 0.1422479642504776] ***
*** finished computation of 7 references, err: [Inf, 0.18273347522154473, 0.158343698190177, 0.14901974984911737, 0.14415145607514157, 0.14252981037046905, 0.1422479642504776] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [86, 16, 0]]
** centroid: 1, normalized-entropy: 0.6267511370265896, [(1, 86), (2, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [78, 45, 0]]
** centroid: 2, normalized-entropy: 0.9474351361840305, [(1, 78), (2, 45)]
*** center 3: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 92, 24]]
** centroid: 4, normalized-entropy: 0.7355085815538399, [(2, 92), (3, 24)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [4, 89, 0]]
** centroid: 5, normalized-entropy: 0.2559300438391133, [(1, 4), (2, 89)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [49, 6, 0]]
** centroid: 6, normalized-entropy: 0.4971677614160751, [(1, 49), (2, 6)]
*** center 7: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1980417040071968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1980417040071968, 0.1652828059347718] ***
*** starting iteration: 2; err: [Inf, 0.1980417040071968, 0.1652828059347718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855] ***
*** starting iteration: 3; err: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587] ***
*** starting iteration: 4; err: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587, 0.1500175103804898] ***
*** starting iteration: 5; err: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587, 0.1500175103804898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587, 0.1500175103804898, 0.1482476058085847] ***
*** starting iteration: 6; err: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587, 0.1500175103804898, 0.1482476058085847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587, 0.1500175103804898, 0.1482476058085847, 0.14708860710157134] ***
*** starting iteration: 7; err: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587, 0.1500175103804898, 0.1482476058085847, 0.14708860710157134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587, 0.1500175103804898, 0.1482476058085847, 0.14708860710157134, 0.14552411612757166] ***
*** starting iteration: 8; err: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587, 0.1500175103804898, 0.1482476058085847, 0.14708860710157134, 0.14552411612757166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587, 0.1500175103804898, 0.1482476058085847, 0.14708860710157134, 0.14552411612757166, 0.1440324996510099] ***
*** starting iteration: 9; err: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587, 0.1500175103804898, 0.1482476058085847, 0.14708860710157134, 0.14552411612757166, 0.1440324996510099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587, 0.1500175103804898, 0.1482476058085847, 0.14708860710157134, 0.14552411612757166, 0.1440324996510099, 0.14277785047302316] ***
*** starting iteration: 10; err: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587, 0.1500175103804898, 0.1482476058085847, 0.14708860710157134, 0.14552411612757166, 0.1440324996510099, 0.14277785047302316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587, 0.1500175103804898, 0.1482476058085847, 0.14708860710157134, 0.14552411612757166, 0.1440324996510099, 0.14277785047302316, 0.1417133219880813] ***
*** finished computation of 7 references, err: [Inf, 0.1980417040071968, 0.1652828059347718, 0.15766177521152855, 0.1526887110466587, 0.1500175103804898, 0.1482476058085847, 0.14708860710157134, 0.14552411612757166, 0.1440324996510099, 0.14277785047302316, 0.1417133219880813] ***
*** center 1: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [85, 42, 0]]
** centroid: 2, normalized-entropy: 0.9156487708004134, [(1, 85), (2, 42)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [2, 92, 0]]
** centroid: 3, normalized-entropy: 0.14854949043034832, [(1, 2), (2, 92)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [49, 5, 0]]
** centroid: 4, normalized-entropy: 0.44506485705083854, [(1, 49), (2, 5)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 90, 33]]
** centroid: 5, normalized-entropy: 0.8390040613676978, [(2, 90), (3, 33)]
*** center 6: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [62, 26, 0]]
** centroid: 7, normalized-entropy: 0.8756633923230399, [(1, 62), (2, 26)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.29036887575393316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29036887575393316, 0.17557321170504125] ***
*** starting iteration: 2; err: [Inf, 0.29036887575393316, 0.17557321170504125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29036887575393316, 0.17557321170504125, 0.15574121496862156] ***
*** starting iteration: 3; err: [Inf, 0.29036887575393316, 0.17557321170504125, 0.15574121496862156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29036887575393316, 0.17557321170504125, 0.15574121496862156, 0.14999098676456504] ***
*** starting iteration: 4; err: [Inf, 0.29036887575393316, 0.17557321170504125, 0.15574121496862156, 0.14999098676456504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29036887575393316, 0.17557321170504125, 0.15574121496862156, 0.14999098676456504, 0.14759025280678023] ***
*** starting iteration: 5; err: [Inf, 0.29036887575393316, 0.17557321170504125, 0.15574121496862156, 0.14999098676456504, 0.14759025280678023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29036887575393316, 0.17557321170504125, 0.15574121496862156, 0.14999098676456504, 0.14759025280678023, 0.14651674519235763] ***
*** starting iteration: 6; err: [Inf, 0.29036887575393316, 0.17557321170504125, 0.15574121496862156, 0.14999098676456504, 0.14759025280678023, 0.14651674519235763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29036887575393316, 0.17557321170504125, 0.15574121496862156, 0.14999098676456504, 0.14759025280678023, 0.14651674519235763, 0.14621793092375082] ***
*** finished computation of 7 references, err: [Inf, 0.29036887575393316, 0.17557321170504125, 0.15574121496862156, 0.14999098676456504, 0.14759025280678023, 0.14651674519235763, 0.14621793092375082] ***
*** center 1: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 77, 24]]
** centroid: 2, normalized-entropy: 0.7910662980902586, [(2, 77), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [53, 36, 0]]
** centroid: 3, normalized-entropy: 0.9735190023846809, [(1, 53), (2, 36)]
*** center 4: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [72, 28, 0]]
** centroid: 5, normalized-entropy: 0.8554508105601307, [(1, 72), (2, 28)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [101, 14, 0]]
** centroid: 6, normalized-entropy: 0.5343393668857862, [(1, 101), (2, 14)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 76, 7]]
** centroid: 7, normalized-entropy: 0.4172806906708316, [(2, 76), (3, 7)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2435695140929501] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2435695140929501, 0.20035266606612606] ***
*** starting iteration: 2; err: [Inf, 0.2435695140929501, 0.20035266606612606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2435695140929501, 0.20035266606612606, 0.1936012242302612] ***
*** starting iteration: 3; err: [Inf, 0.2435695140929501, 0.20035266606612606, 0.1936012242302612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2435695140929501, 0.20035266606612606, 0.1936012242302612, 0.19071038290802333] ***
*** starting iteration: 4; err: [Inf, 0.2435695140929501, 0.20035266606612606, 0.1936012242302612, 0.19071038290802333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2435695140929501, 0.20035266606612606, 0.1936012242302612, 0.19071038290802333, 0.18959812640964807] ***
*** starting iteration: 5; err: [Inf, 0.2435695140929501, 0.20035266606612606, 0.1936012242302612, 0.19071038290802333, 0.18959812640964807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2435695140929501, 0.20035266606612606, 0.1936012242302612, 0.19071038290802333, 0.18959812640964807, 0.18937253203332513] ***
*** finished computation of 7 references, err: [Inf, 0.2435695140929501, 0.20035266606612606, 0.1936012242302612, 0.19071038290802333, 0.18959812640964807, 0.18937253203332513] ***
*** center 1: selecting labels [1] (freq >= 2) [from [136, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [91, 5, 0]]
** centroid: 3, normalized-entropy: 0.29518174309075856, [(1, 91), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [42, 61, 0]]
** centroid: 4, normalized-entropy: 0.9753130577847331, [(1, 42), (2, 61)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [26, 52, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 26), (2, 52)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 63, 5]]
** centroid: 6, normalized-entropy: 0.378958787501346, [(2, 63), (3, 5)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 67, 19]]
** centroid: 7, normalized-entropy: 0.7618624463753669, [(2, 67), (3, 19)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24922284650486493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24922284650486493, 0.208794003954322] ***
*** starting iteration: 2; err: [Inf, 0.24922284650486493, 0.208794003954322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991] ***
*** starting iteration: 3; err: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848] ***
*** starting iteration: 4; err: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848, 0.19578002767624805] ***
*** starting iteration: 5; err: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848, 0.19578002767624805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848, 0.19578002767624805, 0.1946926981886511] ***
*** starting iteration: 6; err: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848, 0.19578002767624805, 0.1946926981886511] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848, 0.19578002767624805, 0.1946926981886511, 0.19297316084117414] ***
*** starting iteration: 7; err: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848, 0.19578002767624805, 0.1946926981886511, 0.19297316084117414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848, 0.19578002767624805, 0.1946926981886511, 0.19297316084117414, 0.19044253286853924] ***
*** starting iteration: 8; err: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848, 0.19578002767624805, 0.1946926981886511, 0.19297316084117414, 0.19044253286853924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848, 0.19578002767624805, 0.1946926981886511, 0.19297316084117414, 0.19044253286853924, 0.18870173687760394] ***
*** starting iteration: 9; err: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848, 0.19578002767624805, 0.1946926981886511, 0.19297316084117414, 0.19044253286853924, 0.18870173687760394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848, 0.19578002767624805, 0.1946926981886511, 0.19297316084117414, 0.19044253286853924, 0.18870173687760394, 0.187373967652769] ***
*** starting iteration: 10; err: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848, 0.19578002767624805, 0.1946926981886511, 0.19297316084117414, 0.19044253286853924, 0.18870173687760394, 0.187373967652769] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848, 0.19578002767624805, 0.1946926981886511, 0.19297316084117414, 0.19044253286853924, 0.18870173687760394, 0.187373967652769, 0.18610365650542582] ***
*** finished computation of 7 references, err: [Inf, 0.24922284650486493, 0.208794003954322, 0.1996888180920991, 0.19750330581523848, 0.19578002767624805, 0.1946926981886511, 0.19297316084117414, 0.19044253286853924, 0.18870173687760394, 0.187373967652769, 0.18610365650542582] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [107, 3, 0]]
** centroid: 1, normalized-entropy: 0.1805246676420577, [(1, 107), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [84, 8, 0]]
** centroid: 2, normalized-entropy: 0.42622865699814483, [(1, 84), (2, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 55, 33]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(2, 55), (3, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [3, 92, 0]]
** centroid: 5, normalized-entropy: 0.2022494245476988, [(1, 3), (2, 92)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [71, 13, 0]]
** centroid: 6, normalized-entropy: 0.6216297820565386, [(1, 71), (2, 13)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 84, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30119121441201513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30119121441201513, 0.24830513171407617] ***
*** starting iteration: 2; err: [Inf, 0.30119121441201513, 0.24830513171407617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30119121441201513, 0.24830513171407617, 0.2182028024852544] ***
*** starting iteration: 3; err: [Inf, 0.30119121441201513, 0.24830513171407617, 0.2182028024852544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30119121441201513, 0.24830513171407617, 0.2182028024852544, 0.20742721154966784] ***
*** starting iteration: 4; err: [Inf, 0.30119121441201513, 0.24830513171407617, 0.2182028024852544, 0.20742721154966784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30119121441201513, 0.24830513171407617, 0.2182028024852544, 0.20742721154966784, 0.19526485115362294] ***
*** starting iteration: 5; err: [Inf, 0.30119121441201513, 0.24830513171407617, 0.2182028024852544, 0.20742721154966784, 0.19526485115362294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30119121441201513, 0.24830513171407617, 0.2182028024852544, 0.20742721154966784, 0.19526485115362294, 0.18731003699229395] ***
*** starting iteration: 6; err: [Inf, 0.30119121441201513, 0.24830513171407617, 0.2182028024852544, 0.20742721154966784, 0.19526485115362294, 0.18731003699229395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30119121441201513, 0.24830513171407617, 0.2182028024852544, 0.20742721154966784, 0.19526485115362294, 0.18731003699229395, 0.18469369057684612] ***
*** starting iteration: 7; err: [Inf, 0.30119121441201513, 0.24830513171407617, 0.2182028024852544, 0.20742721154966784, 0.19526485115362294, 0.18731003699229395, 0.18469369057684612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30119121441201513, 0.24830513171407617, 0.2182028024852544, 0.20742721154966784, 0.19526485115362294, 0.18731003699229395, 0.18469369057684612, 0.18375514632155854] ***
*** finished computation of 7 references, err: [Inf, 0.30119121441201513, 0.24830513171407617, 0.2182028024852544, 0.20742721154966784, 0.19526485115362294, 0.18731003699229395, 0.18469369057684612, 0.18375514632155854] ***
*** center 1: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [60, 37, 0]]
** centroid: 2, normalized-entropy: 0.9590550044058676, [(1, 60), (2, 37)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 80, 24]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 80), (3, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [93, 20, 0]]
** centroid: 4, normalized-entropy: 0.6734503665674518, [(1, 93), (2, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [68, 19, 0]]
** centroid: 5, normalized-entropy: 0.7572182549240017, [(1, 68), (2, 19)]
*** center 6: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 75, 7]]
** centroid: 7, normalized-entropy: 0.42080948947668984, [(2, 75), (3, 7)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29724734642629597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29724734642629597, 0.22176163390211695] ***
*** finished computation of 7 references, err: [Inf, 0.29724734642629597, 0.22176163390211695] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [113, 19, 0]]
** centroid: 1, normalized-entropy: 0.5944634715679662, [(1, 113), (2, 19)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 63, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 9, 12]]
** centroid: 3, normalized-entropy: 0.9852281360342514, [(2, 9), (3, 12)]
*** center 4: selecting labels [1] (freq >= 2) [from [196, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 39, 12]]
** centroid: 5, normalized-entropy: 0.787126586201269, [(2, 39), (3, 12)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [58, 58, 0]]
** centroid: 6, normalized-entropy: 1.0, [(1, 58), (2, 58)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [27, 60, 0]]
** centroid: 7, normalized-entropy: 0.8935711016541908, [(1, 27), (2, 60)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22338813984336547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22338813984336547, 0.2002673065523733] ***
*** finished computation of 7 references, err: [Inf, 0.22338813984336547, 0.2002673065523733] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [120, 52, 0]]
** centroid: 1, normalized-entropy: 0.8841151220488478, [(1, 120), (2, 52)]
*** center 2: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [25, 32, 0]]
** centroid: 4, normalized-entropy: 0.9890934397021431, [(1, 25), (2, 32)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [53, 8, 0]]
** centroid: 5, normalized-entropy: 0.5605769426145328, [(1, 53), (2, 8)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 96, 33]]
** centroid: 6, normalized-entropy: 0.8203636429576731, [(2, 96), (3, 33)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 67, 0]]
** centroid: 7, normalized-entropy: 0.25524211319019174, [(1, 3), (2, 67)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22409772884653606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22409772884653606, 0.19417440991379556] ***
*** finished computation of 7 references, err: [Inf, 0.22409772884653606, 0.19417440991379556] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 79, 31]]
** centroid: 1, normalized-entropy: 0.8579163978157118, [(2, 79), (3, 31)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [94, 46, 0]]
** centroid: 2, normalized-entropy: 0.9134601452569628, [(1, 94), (2, 46)]
*** center 3: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [62, 17, 0]]
** centroid: 4, normalized-entropy: 0.751286576718343, [(1, 62), (2, 17)]
*** center 5: selecting labels [2] (freq >= 2) [from [1, 78, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [61, 11, 0]]
** centroid: 6, normalized-entropy: 0.6167482598263911, [(1, 61), (2, 11)]
*** center 7: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2358394615455634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2358394615455634, 0.18827102367008278] ***
*** starting iteration: 2; err: [Inf, 0.2358394615455634, 0.18827102367008278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2358394615455634, 0.18827102367008278, 0.18317629311054767] ***
*** starting iteration: 3; err: [Inf, 0.2358394615455634, 0.18827102367008278, 0.18317629311054767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2358394615455634, 0.18827102367008278, 0.18317629311054767, 0.18262326527686157] ***
*** finished computation of 7 references, err: [Inf, 0.2358394615455634, 0.18827102367008278, 0.18317629311054767, 0.18262326527686157] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [101, 1, 0]]
** centroid: 1, normalized-entropy: 0.07949044238393414, [(1, 101), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 56, 24]]
** centroid: 2, normalized-entropy: 0.8812908992306927, [(2, 56), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [94, 5, 0]]
** centroid: 3, normalized-entropy: 0.2885385136944103, [(1, 94), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [87, 5, 0]]
** centroid: 4, normalized-entropy: 0.30458668852140236, [(1, 87), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [7, 90, 0]]
** centroid: 5, normalized-entropy: 0.37395136668121054, [(1, 7), (2, 90)]
*** center 6: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 91, 0]]
** centroid: 7, normalized-entropy: 0.08650421412134586, [(1, 1), (2, 91)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24480939115016445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24480939115016445, 0.193135648542761] ***
*** starting iteration: 2; err: [Inf, 0.24480939115016445, 0.193135648542761] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24480939115016445, 0.193135648542761, 0.18970784524000478] ***
*** starting iteration: 3; err: [Inf, 0.24480939115016445, 0.193135648542761, 0.18970784524000478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24480939115016445, 0.193135648542761, 0.18970784524000478, 0.18786933933659786] ***
*** starting iteration: 4; err: [Inf, 0.24480939115016445, 0.193135648542761, 0.18970784524000478, 0.18786933933659786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24480939115016445, 0.193135648542761, 0.18970784524000478, 0.18786933933659786, 0.1864506073472002] ***
*** starting iteration: 5; err: [Inf, 0.24480939115016445, 0.193135648542761, 0.18970784524000478, 0.18786933933659786, 0.1864506073472002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24480939115016445, 0.193135648542761, 0.18970784524000478, 0.18786933933659786, 0.1864506073472002, 0.18524901632699875] ***
*** starting iteration: 6; err: [Inf, 0.24480939115016445, 0.193135648542761, 0.18970784524000478, 0.18786933933659786, 0.1864506073472002, 0.18524901632699875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24480939115016445, 0.193135648542761, 0.18970784524000478, 0.18786933933659786, 0.1864506073472002, 0.18524901632699875, 0.184581376722493] ***
*** finished computation of 7 references, err: [Inf, 0.24480939115016445, 0.193135648542761, 0.18970784524000478, 0.18786933933659786, 0.1864506073472002, 0.18524901632699875, 0.184581376722493] ***
*** center 1: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 82, 33]]
** centroid: 2, normalized-entropy: 0.8647572655747071, [(2, 82), (3, 33)]
*** center 3: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 48, 0]]
** centroid: 4, normalized-entropy: 0.9910760598382222, [(1, 60), (2, 48)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [45, 37, 0]]
** centroid: 5, normalized-entropy: 0.9931231770192241, [(1, 45), (2, 37)]
*** center 6: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 88, 0]]
** centroid: 7, normalized-entropy: 0.08887969568457589, [(1, 1), (2, 88)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21860409432860173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21860409432860173, 0.18817841686410314] ***
*** starting iteration: 2; err: [Inf, 0.21860409432860173, 0.18817841686410314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21860409432860173, 0.18817841686410314, 0.185472023807399] ***
*** starting iteration: 3; err: [Inf, 0.21860409432860173, 0.18817841686410314, 0.185472023807399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21860409432860173, 0.18817841686410314, 0.185472023807399, 0.18509158599462688] ***
*** finished computation of 7 references, err: [Inf, 0.21860409432860173, 0.18817841686410314, 0.185472023807399, 0.18509158599462688] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [75, 42, 0]]
** centroid: 1, normalized-entropy: 0.9418285354475157, [(1, 75), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [56, 14, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(1, 56), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 87, 31]]
** centroid: 3, normalized-entropy: 0.8308111022361421, [(2, 87), (3, 31)]
*** center 4: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [24, 88, 0]]
** centroid: 5, normalized-entropy: 0.7495952572594798, [(1, 24), (2, 88)]
*** center 6: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2373419776558876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373419776558876, 0.19004144550122143] ***
*** finished computation of 7 references, err: [Inf, 0.2373419776558876, 0.19004144550122143] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 110, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [78, 47, 0]]
** centroid: 3, normalized-entropy: 0.9551678918612524, [(1, 78), (2, 47)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [43, 16, 0]]
** centroid: 4, normalized-entropy: 0.8431619569518377, [(1, 43), (2, 16)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 70, 24]]
** centroid: 5, normalized-entropy: 0.8196004346196011, [(2, 70), (3, 24)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [110, 3, 0]]
** centroid: 6, normalized-entropy: 0.17677669701805485, [(1, 110), (2, 3)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [87, 2, 0]]
** centroid: 7, normalized-entropy: 0.1551032721030341, [(1, 87), (2, 2)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22385238015233935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22385238015233935, 0.18939043749738177] ***
*** finished computation of 7 references, err: [Inf, 0.22385238015233935, 0.18939043749738177] ***
*** center 1: selecting labels [1] (freq >= 2) [from [131, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 74, 33]]
** centroid: 2, normalized-entropy: 0.891330958407023, [(2, 74), (3, 33)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [62, 4, 0]]
** centroid: 3, normalized-entropy: 0.32984607020714635, [(1, 62), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [46, 9, 0]]
** centroid: 4, normalized-entropy: 0.6429383500409613, [(1, 46), (2, 9)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [7, 92, 0]]
** centroid: 5, normalized-entropy: 0.3685567775377064, [(1, 7), (2, 92)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [48, 76, 0]]
** centroid: 6, normalized-entropy: 0.9629004147713269, [(1, 48), (2, 76)]
*** center 7: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2420772456073913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2420772456073913, 0.19085572887075203] ***
*** finished computation of 7 references, err: [Inf, 0.2420772456073913, 0.19085572887075203] ***
*** center 1: selecting labels [1] (freq >= 2) [from [115, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 71, 31]]
** centroid: 2, normalized-entropy: 0.8860318997477157, [(2, 71), (3, 31)]
*** center 3: selecting labels [1] (freq >= 2) [from [61, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [82, 21, 0]]
** centroid: 4, normalized-entropy: 0.7296274178915987, [(1, 82), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [45, 68, 0]]
** centroid: 5, normalized-entropy: 0.9699058425934317, [(1, 45), (2, 68)]
*** center 6: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [7, 70, 0]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(1, 7), (2, 70)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23382531905927145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23382531905927145, 0.20571971843270836] ***
*** finished computation of 7 references, err: [Inf, 0.23382531905927145, 0.20571971843270836] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [83, 17, 0]]
** centroid: 1, normalized-entropy: 0.6577047787442196, [(1, 83), (2, 17)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 39, 2]]
** centroid: 2, normalized-entropy: 0.2811937964320427, [(2, 39), (3, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [146, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [93, 17, 0]]
** centroid: 4, normalized-entropy: 0.6210993704855443, [(1, 93), (2, 17)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [72, 80, 0]]
** centroid: 6, normalized-entropy: 0.9980008838722993, [(1, 72), (2, 80)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 36, 22]]
** centroid: 7, normalized-entropy: 0.9575534837147484, [(2, 36), (3, 22)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29855204584437245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29855204584437245, 0.21971776799020962] ***
*** finished computation of 7 references, err: [Inf, 0.29855204584437245, 0.21971776799020962] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [49, 6, 0]]
** centroid: 1, normalized-entropy: 0.4971677614160751, [(1, 49), (2, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [143, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [28, 43, 0]]
** centroid: 3, normalized-entropy: 0.9675594819018211, [(1, 28), (2, 43)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 50, 27]]
** centroid: 4, normalized-entropy: 0.9346466439786693, [(2, 50), (3, 27)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [159, 44, 0]]
** centroid: 5, normalized-entropy: 0.754186256543533, [(1, 159), (2, 44)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 51, 6]]
** centroid: 7, normalized-entropy: 0.48546076074591343, [(2, 51), (3, 6)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25728292764070954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25728292764070954, 0.2047460170831347] ***
*** finished computation of 7 references, err: [Inf, 0.25728292764070954, 0.2047460170831347] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [89, 44, 0]]
** centroid: 1, normalized-entropy: 0.9157691529744942, [(1, 89), (2, 44)]
*** center 2: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [28, 92, 0]]
** centroid: 5, normalized-entropy: 0.7837769474847011, [(1, 28), (2, 92)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 95, 31]]
** centroid: 6, normalized-entropy: 0.8049277932345736, [(2, 95), (3, 31)]
*** center 7: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3632937611986858] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3632937611986858, 0.2358711515287603] ***
*** starting iteration: 2; err: [Inf, 0.3632937611986858, 0.2358711515287603] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3632937611986858, 0.2358711515287603, 0.2337836516369414] ***
*** starting iteration: 3; err: [Inf, 0.3632937611986858, 0.2358711515287603, 0.2337836516369414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3632937611986858, 0.2358711515287603, 0.2337836516369414, 0.23304736985917296] ***
*** finished computation of 3 references, err: [Inf, 0.3632937611986858, 0.2358711515287603, 0.2337836516369414, 0.23304736985917296] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [248, 21, 0]]
** centroid: 1, normalized-entropy: 0.3953309467413862, [(1, 248), (2, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [146, 48, 0]]
** centroid: 2, normalized-entropy: 0.8071675554288905, [(1, 146), (2, 48)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 179, 24]]
** centroid: 3, normalized-entropy: 0.5242417095614835, [(2, 179), (3, 24)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3055755068622027] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3055755068622027, 0.24664760324363966] ***
*** starting iteration: 2; err: [Inf, 0.3055755068622027, 0.24664760324363966] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3055755068622027, 0.24664760324363966, 0.2366195100386148] ***
*** starting iteration: 3; err: [Inf, 0.3055755068622027, 0.24664760324363966, 0.2366195100386148] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3055755068622027, 0.24664760324363966, 0.2366195100386148, 0.23457188605619916] ***
*** starting iteration: 4; err: [Inf, 0.3055755068622027, 0.24664760324363966, 0.2366195100386148, 0.23457188605619916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3055755068622027, 0.24664760324363966, 0.2366195100386148, 0.23457188605619916, 0.23438831182361497] ***
*** finished computation of 3 references, err: [Inf, 0.3055755068622027, 0.24664760324363966, 0.2366195100386148, 0.23457188605619916, 0.23438831182361497] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [235, 17, 0]]
** centroid: 1, normalized-entropy: 0.35637376975376284, [(1, 235), (2, 17)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [144, 65, 0]]
** centroid: 2, normalized-entropy: 0.894329906939531, [(1, 144), (2, 65)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 173, 33]]
** centroid: 3, normalized-entropy: 0.6347738799988382, [(2, 173), (3, 33)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36774156023531795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36774156023531795, 0.23168015763976205] ***
*** starting iteration: 2; err: [Inf, 0.36774156023531795, 0.23168015763976205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36774156023531795, 0.23168015763976205, 0.2301647734885541] ***
*** starting iteration: 3; err: [Inf, 0.36774156023531795, 0.23168015763976205, 0.2301647734885541] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36774156023531795, 0.23168015763976205, 0.2301647734885541, 0.22973434946526294] ***
*** finished computation of 3 references, err: [Inf, 0.36774156023531795, 0.23168015763976205, 0.2301647734885541, 0.22973434946526294] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [251, 14, 0]]
** centroid: 1, normalized-entropy: 0.2982998666186738, [(1, 251), (2, 14)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [4, 158, 31]]
** centroid: 2, normalized-entropy: 0.4895974493785989, [(1, 4), (2, 158), (3, 31)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [150, 59, 0]]
** centroid: 3, normalized-entropy: 0.8585613163548981, [(1, 150), (2, 59)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19784037401345936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19784037401345936, 0.1704072981776373] ***
*** starting iteration: 2; err: [Inf, 0.19784037401345936, 0.1704072981776373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19784037401345936, 0.1704072981776373, 0.15325708319041487] ***
*** starting iteration: 3; err: [Inf, 0.19784037401345936, 0.1704072981776373, 0.15325708319041487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19784037401345936, 0.1704072981776373, 0.15325708319041487, 0.1493140371871536] ***
*** finished computation of 7 references, err: [Inf, 0.19784037401345936, 0.1704072981776373, 0.15325708319041487, 0.1493140371871536] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [114, 16, 0]]
** centroid: 1, normalized-entropy: 0.5381411852224502, [(1, 114), (2, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 47, 0]]
** centroid: 2, normalized-entropy: 0.9777945702913884, [(1, 33), (2, 47)]
*** center 3: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 72, 19]]
** centroid: 4, normalized-entropy: 0.7391658175693049, [(2, 72), (3, 19)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 102, 5]]
** centroid: 5, normalized-entropy: 0.2723359083120876, [(2, 102), (3, 5)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [69, 11, 0]]
** centroid: 6, normalized-entropy: 0.5776539033535634, [(1, 69), (2, 11)]
*** center 7: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23255282614067352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23255282614067352, 0.1614846643604997] ***
*** starting iteration: 2; err: [Inf, 0.23255282614067352, 0.1614846643604997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23255282614067352, 0.1614846643604997, 0.15274850585298247] ***
*** starting iteration: 3; err: [Inf, 0.23255282614067352, 0.1614846643604997, 0.15274850585298247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23255282614067352, 0.1614846643604997, 0.15274850585298247, 0.1505361938665131] ***
*** finished computation of 7 references, err: [Inf, 0.23255282614067352, 0.1614846643604997, 0.15274850585298247, 0.1505361938665131] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [80, 30, 0]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(1, 80), (2, 30)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [15, 90, 0]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(1, 15), (2, 90)]
*** center 3: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 34, 33]]
** centroid: 4, normalized-entropy: 0.9998393017810486, [(2, 34), (3, 33)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [60, 5, 0]]
** centroid: 5, normalized-entropy: 0.3912435636292556, [(1, 60), (2, 5)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 96, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [122, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19399387471872134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19399387471872134, 0.16816508956672413] ***
*** starting iteration: 2; err: [Inf, 0.19399387471872134, 0.16816508956672413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19399387471872134, 0.16816508956672413, 0.1508301615769482] ***
*** starting iteration: 3; err: [Inf, 0.19399387471872134, 0.16816508956672413, 0.1508301615769482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19399387471872134, 0.16816508956672413, 0.1508301615769482, 0.146121761108144] ***
*** finished computation of 7 references, err: [Inf, 0.19399387471872134, 0.16816508956672413, 0.1508301615769482, 0.146121761108144] ***
*** center 1: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [68, 22, 0]]
** centroid: 2, normalized-entropy: 0.80235344282919, [(1, 68), (2, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [73, 56, 0]]
** centroid: 3, normalized-entropy: 0.9874360272568425, [(1, 73), (2, 56)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 72, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [86, 6, 0]]
** centroid: 5, normalized-entropy: 0.3478169135710632, [(1, 86), (2, 6)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 75, 31]]
** centroid: 6, normalized-entropy: 0.8718686865520275, [(2, 75), (3, 31)]
*** center 7: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24003715443008164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24003715443008164, 0.18123678588965633] ***
*** finished computation of 7 references, err: [Inf, 0.24003715443008164, 0.18123678588965633] ***
*** center 1: selecting labels [1] (freq >= 1) [from [118, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [156, 10, 0]]
** centroid: 2, normalized-entropy: 0.32840071392894665, [(1, 156), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 56, 19]]
** centroid: 3, normalized-entropy: 0.8165187119538281, [(2, 56), (3, 19)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [2, 66, 0]]
** centroid: 4, normalized-entropy: 0.1914332548141934, [(1, 2), (2, 66)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 49, 5]]
** centroid: 5, normalized-entropy: 0.44506485705083854, [(2, 49), (3, 5)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [118, 67, 0]]
** centroid: 6, normalized-entropy: 0.9444633222170256, [(1, 118), (2, 67)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34775781589301896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34775781589301896, 0.1921098340509356] ***
*** finished computation of 7 references, err: [Inf, 0.34775781589301896, 0.1921098340509356] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [76, 66, 0]]
** centroid: 1, normalized-entropy: 0.9964196342978481, [(1, 76), (2, 66)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 62, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 17]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 1), (3, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [206, 12, 0]]
** centroid: 4, normalized-entropy: 0.30745653299528936, [(1, 206), (2, 12)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 27, 8]]
** centroid: 5, normalized-entropy: 0.775512658133148, [(2, 27), (3, 8)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 30, 8]]
** centroid: 6, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [97, 57, 0]]
** centroid: 7, normalized-entropy: 0.9507717582303451, [(1, 97), (2, 57)]
finished with 13 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19910301474401954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19910301474401954, 0.1571078424089249] ***
*** finished computation of 7 references, err: [Inf, 0.19910301474401954, 0.1571078424089249] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [104, 54, 0]]
** centroid: 1, normalized-entropy: 0.9265044456232997, [(1, 104), (2, 54)]
*** center 2: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 102, 31]]
** centroid: 3, normalized-entropy: 0.7833465670569363, [(2, 102), (3, 31)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [32, 73, 0]]
** centroid: 4, normalized-entropy: 0.8870341576828725, [(1, 32), (2, 73)]
*** center 5: selecting labels [1] (freq >= 1) [from [44, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [82, 2, 0]]
** centroid: 6, normalized-entropy: 0.1623261801753929, [(1, 82), (2, 2)]
*** center 7: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38944643953334057] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38944643953334057, 0.3049697857182305] ***
*** starting iteration: 2; err: [Inf, 0.38944643953334057, 0.3049697857182305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38944643953334057, 0.3049697857182305, 0.2951617826100763] ***
*** starting iteration: 3; err: [Inf, 0.38944643953334057, 0.3049697857182305, 0.2951617826100763] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38944643953334057, 0.3049697857182305, 0.2951617826100763, 0.29310238005330524] ***
*** finished computation of 3 references, err: [Inf, 0.38944643953334057, 0.3049697857182305, 0.2951617826100763, 0.29310238005330524] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [248, 19, 0]]
** centroid: 1, normalized-entropy: 0.3702415956149953, [(1, 248), (2, 19)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 183, 24]]
** centroid: 2, normalized-entropy: 0.5175827525559071, [(2, 183), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [146, 46, 0]]
** centroid: 3, normalized-entropy: 0.7943466904341503, [(1, 146), (2, 46)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3697733076839433] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3697733076839433, 0.30351925109453065] ***
*** starting iteration: 2; err: [Inf, 0.3697733076839433, 0.30351925109453065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3697733076839433, 0.30351925109453065, 0.30033221115906916] ***
*** starting iteration: 3; err: [Inf, 0.3697733076839433, 0.30351925109453065, 0.30033221115906916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3697733076839433, 0.30351925109453065, 0.30033221115906916, 0.29935392495551927] ***
*** finished computation of 3 references, err: [Inf, 0.3697733076839433, 0.30351925109453065, 0.30033221115906916, 0.29935392495551927] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [228, 26, 0]]
** centroid: 1, normalized-entropy: 0.47643919109803384, [(1, 228), (2, 26)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 197, 33]]
** centroid: 2, normalized-entropy: 0.5932760754150922, [(2, 197), (3, 33)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [151, 32, 0]]
** centroid: 3, normalized-entropy: 0.6687101353436768, [(1, 151), (2, 32)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.6199817130791729] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6199817130791729, 0.35406991344565214] ***
*** starting iteration: 2; err: [Inf, 0.6199817130791729, 0.35406991344565214] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6199817130791729, 0.35406991344565214, 0.307458972572342] ***
*** starting iteration: 3; err: [Inf, 0.6199817130791729, 0.35406991344565214, 0.307458972572342] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6199817130791729, 0.35406991344565214, 0.307458972572342, 0.2963389729106355] ***
*** finished computation of 3 references, err: [Inf, 0.6199817130791729, 0.35406991344565214, 0.307458972572342, 0.2963389729106355] ***
*** center 1: selecting labels [1] (freq >= 2) [from [186, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [88, 166, 31]]
** centroid: 2, normalized-entropy: 0.8364945205101522, [(1, 88), (2, 166), (3, 31)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [131, 65, 0]]
** centroid: 3, normalized-entropy: 0.9165857571343126, [(1, 131), (2, 65)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4027892376391312] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4027892376391312, 0.3100050771273337] ***
*** finished computation of 3 references, err: [Inf, 0.4027892376391312, 0.3100050771273337] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [36, 223, 24]]
** centroid: 1, normalized-entropy: 0.6001216654338064, [(1, 36), (2, 223), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [210, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [148, 25, 0]]
** centroid: 3, normalized-entropy: 0.5959258989809288, [(1, 148), (2, 25)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41107241331279903] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41107241331279903, 0.3241542710949188] ***
*** finished computation of 3 references, err: [Inf, 0.41107241331279903, 0.3241542710949188] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [76, 126, 32]]
** centroid: 1, normalized-entropy: 0.883532410816207, [(1, 76), (2, 126), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [239, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [64, 129, 1]]
** centroid: 3, normalized-entropy: 0.9165590271665273, [(1, 64), (2, 129)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3802015552914393] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3802015552914393, 0.2904138399994579] ***
*** finished computation of 3 references, err: [Inf, 0.3802015552914393, 0.2904138399994579] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [151, 64, 0]]
** centroid: 1, normalized-entropy: 0.8784295210402188, [(1, 151), (2, 64)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [251, 13, 0]]
** centroid: 2, normalized-entropy: 0.2831700724740671, [(1, 251), (2, 13)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [3, 154, 31]]
** centroid: 3, normalized-entropy: 0.4793811104639906, [(1, 3), (2, 154), (3, 31)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.279546827737902] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.279546827737902, 0.2363609254776917] ***
*** starting iteration: 2; err: [Inf, 0.279546827737902, 0.2363609254776917] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.279546827737902, 0.2363609254776917, 0.23275415883916947] ***
*** starting iteration: 3; err: [Inf, 0.279546827737902, 0.2363609254776917, 0.23275415883916947] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.279546827737902, 0.2363609254776917, 0.23275415883916947, 0.2324300385863372] ***
*** finished computation of 3 references, err: [Inf, 0.279546827737902, 0.2363609254776917, 0.23275415883916947, 0.2324300385863372] ***
*** center 1: selecting labels [1] (freq >= 1) [from [196, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [76, 148, 24]]
** centroid: 2, normalized-entropy: 0.8160363916157953, [(1, 76), (2, 148), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [122, 100, 0]]
** centroid: 3, normalized-entropy: 0.9929042710341395, [(1, 122), (2, 100)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.25639516322886097] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.25639516322886097, 0.2362571647111466] ***
*** starting iteration: 2; err: [Inf, 0.25639516322886097, 0.2362571647111466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.25639516322886097, 0.2362571647111466, 0.23495665588311437] ***
*** starting iteration: 3; err: [Inf, 0.25639516322886097, 0.2362571647111466, 0.23495665588311437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.25639516322886097, 0.2362571647111466, 0.23495665588311437, 0.23466181554349846] ***
*** finished computation of 3 references, err: [Inf, 0.25639516322886097, 0.2362571647111466, 0.23495665588311437, 0.23466181554349846] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [235, 13, 0]]
** centroid: 1, normalized-entropy: 0.2965866378924835, [(1, 235), (2, 13)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [144, 70, 0]]
** centroid: 2, normalized-entropy: 0.9119388957757234, [(1, 144), (2, 70)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 172, 33]]
** centroid: 3, normalized-entropy: 0.6366384226879347, [(2, 172), (3, 33)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.42233531317649886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42233531317649886, 0.25065964952424014] ***
*** starting iteration: 2; err: [Inf, 0.42233531317649886, 0.25065964952424014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42233531317649886, 0.25065964952424014, 0.2358325268316461] ***
*** starting iteration: 3; err: [Inf, 0.42233531317649886, 0.25065964952424014, 0.2358325268316461] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42233531317649886, 0.25065964952424014, 0.2358325268316461, 0.23520791677777644] ***
*** finished computation of 3 references, err: [Inf, 0.42233531317649886, 0.25065964952424014, 0.2358325268316461, 0.23520791677777644] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [73, 133, 31]]
** centroid: 1, normalized-entropy: 0.8674413791851201, [(1, 73), (2, 133), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [217, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [115, 98, 0]]
** centroid: 3, normalized-entropy: 0.9954001339258687, [(1, 115), (2, 98)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39725677533125553] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39725677533125553, 0.29928783055355734] ***
*** finished computation of 3 references, err: [Inf, 0.39725677533125553, 0.29928783055355734] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [254, 39, 0]]
** centroid: 1, normalized-entropy: 0.5658947487029379, [(1, 254), (2, 39)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [140, 49, 0]]
** centroid: 2, normalized-entropy: 0.8256265261578954, [(1, 140), (2, 49)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 160, 24]]
** centroid: 3, normalized-entropy: 0.5586293734521991, [(2, 160), (3, 24)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.9399878920837005, 0.9310148471825119, 0.9220118321914729, 0.91901482320644, 0.9160028291764819, 0.9139948331565098, 0.9009938081794369, 0.8970227712742682, 0.8949937961914011, 0.8870547193900488, 0.8809857761953571, 0.8440116763470057, 0.8429926932920945, 0.7749695803588019]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9399878920837005
finished with 14
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9399878920837005, 0.9310148471825119, 0.9220118321914729, 0.91901482320644, 0.9160028291764819, 0.9139948331565098, 0.9009938081794369, 0.8970227712742682, 0.8949937961914011, 0.8870547193900488, 0.8809857761953571, 0.8440116763470057, 0.8429926932920945, 0.7749695803588019]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9399878920837005
finished with 15
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.27763518161285816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27763518161285816, 0.23752958215661235] ***
*** finished computation of 3 references, err: [Inf, 0.27763518161285816, 0.23752958215661235] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [213, 63, 0]]
** centroid: 1, normalized-entropy: 0.7749672673267259, [(1, 213), (2, 63)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 159, 24]]
** centroid: 2, normalized-entropy: 0.5605769426145328, [(2, 159), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [181, 26, 0]]
** centroid: 3, normalized-entropy: 0.5452573041962888, [(1, 181), (2, 26)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2803409698194471] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2803409698194471, 0.24311595649571568] ***
*** finished computation of 3 references, err: [Inf, 0.2803409698194471, 0.24311595649571568] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [235, 3, 0]]
** centroid: 1, normalized-entropy: 0.09760612488383245, [(1, 235), (2, 3)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [74, 158, 30]]
** centroid: 2, normalized-entropy: 0.8285244331688875, [(1, 74), (2, 158), (3, 30)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [70, 94, 3]]
** centroid: 3, normalized-entropy: 0.6919167311145153, [(1, 70), (2, 94), (3, 3)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31709740131903535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31709740131903535, 0.26362273242985035] ***
*** finished computation of 3 references, err: [Inf, 0.31709740131903535, 0.26362273242985035] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [189, 114, 0]]
** centroid: 1, normalized-entropy: 0.9553413768968346, [(1, 189), (2, 114)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [1, 117, 31]]
** centroid: 2, normalized-entropy: 0.7404482452691427, [(2, 117), (3, 31)]
*** center 3: selecting labels [1] (freq >= 2) [from [215, 0, 0]]
finished with 5 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 15)
[0.9399878920837005, 0.9310148471825119, 0.9220118321914729, 0.91901482320644, 0.9160028291764819, 0.9139948331565098, 0.9009938081794369, 0.8970227712742682, 0.8949937961914011, 0.8870547193900488, 0.8809857761953571, 0.8660187133241025, 0.8440116763470057, 0.8429926932920945, 0.7749695803588019]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9399878920837005
finished with 16
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.19356456446298015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19356456446298015, 0.1524047854676217] ***
*** starting iteration: 2; err: [Inf, 0.19356456446298015, 0.1524047854676217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19356456446298015, 0.1524047854676217, 0.14834261544864216] ***
*** starting iteration: 3; err: [Inf, 0.19356456446298015, 0.1524047854676217, 0.14834261544864216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19356456446298015, 0.1524047854676217, 0.14834261544864216, 0.14708403724411884] ***
*** starting iteration: 4; err: [Inf, 0.19356456446298015, 0.1524047854676217, 0.14834261544864216, 0.14708403724411884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19356456446298015, 0.1524047854676217, 0.14834261544864216, 0.14708403724411884, 0.14642492331832513] ***
*** finished computation of 7 references, err: [Inf, 0.19356456446298015, 0.1524047854676217, 0.14834261544864216, 0.14708403724411884, 0.14642492331832513] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 96, 10]]
** centroid: 1, normalized-entropy: 0.4507913883546652, [(2, 96), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [55, 21, 0]]
** centroid: 3, normalized-entropy: 0.8503821170987139, [(1, 55), (2, 21)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [92, 23, 0]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(1, 92), (2, 23)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [57, 32, 0]]
** centroid: 5, normalized-entropy: 0.9423094893103273, [(1, 57), (2, 32)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 83, 23]]
** centroid: 6, normalized-entropy: 0.7546167018169155, [(2, 83), (3, 23)]
*** center 7: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1898004732861266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1898004732861266, 0.1512023669086687] ***
*** starting iteration: 2; err: [Inf, 0.1898004732861266, 0.1512023669086687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1898004732861266, 0.1512023669086687, 0.14563856173287157] ***
*** starting iteration: 3; err: [Inf, 0.1898004732861266, 0.1512023669086687, 0.14563856173287157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1898004732861266, 0.1512023669086687, 0.14563856173287157, 0.14433603379854476] ***
*** starting iteration: 4; err: [Inf, 0.1898004732861266, 0.1512023669086687, 0.14563856173287157, 0.14433603379854476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1898004732861266, 0.1512023669086687, 0.14563856173287157, 0.14433603379854476, 0.14383237760701123] ***
*** finished computation of 7 references, err: [Inf, 0.1898004732861266, 0.1512023669086687, 0.14563856173287157, 0.14433603379854476, 0.14383237760701123] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [67, 31, 0]]
** centroid: 1, normalized-entropy: 0.9003418708227195, [(1, 67), (2, 31)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [55, 7, 0]]
** centroid: 2, normalized-entropy: 0.5086113313826895, [(1, 55), (2, 7)]
*** center 3: selecting labels [1] (freq >= 1) [from [110, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 87, 31]]
** centroid: 4, normalized-entropy: 0.8308111022361421, [(2, 87), (3, 31)]
*** center 5: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [68, 25, 0]]
** centroid: 6, normalized-entropy: 0.8397622740178036, [(1, 68), (2, 25)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [9, 81, 0]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(1, 9), (2, 81)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1905474916503236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1905474916503236, 0.14990102251860182] ***
*** starting iteration: 2; err: [Inf, 0.1905474916503236, 0.14990102251860182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1905474916503236, 0.14990102251860182, 0.14461564877687172] ***
*** starting iteration: 3; err: [Inf, 0.1905474916503236, 0.14990102251860182, 0.14461564877687172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1905474916503236, 0.14990102251860182, 0.14461564877687172, 0.14332395523238378] ***
*** starting iteration: 4; err: [Inf, 0.1905474916503236, 0.14990102251860182, 0.14461564877687172, 0.14332395523238378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1905474916503236, 0.14990102251860182, 0.14461564877687172, 0.14332395523238378, 0.1428133694324978] ***
*** finished computation of 7 references, err: [Inf, 0.1905474916503236, 0.14990102251860182, 0.14461564877687172, 0.14332395523238378, 0.1428133694324978] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [102, 8, 0]]
** centroid: 1, normalized-entropy: 0.37601985096927276, [(1, 102), (2, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 53, 24]]
** centroid: 2, normalized-entropy: 0.8951127210954559, [(2, 53), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [96, 5, 0]]
** centroid: 3, normalized-entropy: 0.2842902892501332, [(1, 96), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [88, 6, 0]]
** centroid: 4, normalized-entropy: 0.3424637724817958, [(1, 88), (2, 6)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [7, 91, 0]]
** centroid: 5, normalized-entropy: 0.3712323266408756, [(1, 7), (2, 91)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 85, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.9399878920837005, 0.9310148471825119, 0.9220118321914729, 0.91901482320644, 0.9160088231944519, 0.9160028291764819, 0.9139948331565098, 0.9009938081794369, 0.8970227712742682, 0.8949937961914011, 0.8870547193900488, 0.8809857761953571, 0.8660187133241025, 0.8440116763470057, 0.8429926932920945, 0.7749695803588019]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9399878920837005
finished with 17
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.19567930465424294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19567930465424294, 0.1598859618609497] ***
*** starting iteration: 2; err: [Inf, 0.19567930465424294, 0.1598859618609497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19567930465424294, 0.1598859618609497, 0.15463381545204255] ***
*** starting iteration: 3; err: [Inf, 0.19567930465424294, 0.1598859618609497, 0.15463381545204255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19567930465424294, 0.1598859618609497, 0.15463381545204255, 0.1531216221296595] ***
*** starting iteration: 4; err: [Inf, 0.19567930465424294, 0.1598859618609497, 0.15463381545204255, 0.1531216221296595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19567930465424294, 0.1598859618609497, 0.15463381545204255, 0.1531216221296595, 0.15194147231907504] ***
*** starting iteration: 5; err: [Inf, 0.19567930465424294, 0.1598859618609497, 0.15463381545204255, 0.1531216221296595, 0.15194147231907504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19567930465424294, 0.1598859618609497, 0.15463381545204255, 0.1531216221296595, 0.15194147231907504, 0.1514886362120151] ***
*** finished computation of 7 references, err: [Inf, 0.19567930465424294, 0.1598859618609497, 0.15463381545204255, 0.1531216221296595, 0.15194147231907504, 0.1514886362120151] ***
*** center 1: selecting labels [1] (freq >= 2) [from [134, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [120, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [14, 91, 0]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(1, 14), (2, 91)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 52, 5]]
** centroid: 4, normalized-entropy: 0.4288109647301171, [(2, 52), (3, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [122, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 27, 19]]
** centroid: 6, normalized-entropy: 0.978070970973496, [(2, 27), (3, 19)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [4, 78, 0]]
** centroid: 7, normalized-entropy: 0.2811937964320427, [(1, 4), (2, 78)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22585482550247377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22585482550247377, 0.1663802092422967] ***
*** starting iteration: 2; err: [Inf, 0.22585482550247377, 0.1663802092422967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22585482550247377, 0.1663802092422967, 0.15365079541465845] ***
*** starting iteration: 3; err: [Inf, 0.22585482550247377, 0.1663802092422967, 0.15365079541465845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22585482550247377, 0.1663802092422967, 0.15365079541465845, 0.1477162365423239] ***
*** starting iteration: 4; err: [Inf, 0.22585482550247377, 0.1663802092422967, 0.15365079541465845, 0.1477162365423239] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22585482550247377, 0.1663802092422967, 0.15365079541465845, 0.1477162365423239, 0.14505456826011504] ***
*** starting iteration: 5; err: [Inf, 0.22585482550247377, 0.1663802092422967, 0.15365079541465845, 0.1477162365423239, 0.14505456826011504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22585482550247377, 0.1663802092422967, 0.15365079541465845, 0.1477162365423239, 0.14505456826011504, 0.14363359163391] ***
*** starting iteration: 6; err: [Inf, 0.22585482550247377, 0.1663802092422967, 0.15365079541465845, 0.1477162365423239, 0.14505456826011504, 0.14363359163391] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22585482550247377, 0.1663802092422967, 0.15365079541465845, 0.1477162365423239, 0.14505456826011504, 0.14363359163391, 0.14308848499279955] ***
*** finished computation of 7 references, err: [Inf, 0.22585482550247377, 0.1663802092422967, 0.15365079541465845, 0.1477162365423239, 0.14505456826011504, 0.14363359163391, 0.14308848499279955] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 92, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [122, 5, 0]]
** centroid: 2, normalized-entropy: 0.2393965319917804, [(1, 122), (2, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 96, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 57, 33]]
** centroid: 5, normalized-entropy: 0.9480782435939054, [(2, 57), (3, 33)]
*** center 6: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [49, 5, 0]]
** centroid: 7, normalized-entropy: 0.44506485705083854, [(1, 49), (2, 5)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17750174794946497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17750174794946497, 0.15122526720486654] ***
*** starting iteration: 2; err: [Inf, 0.17750174794946497, 0.15122526720486654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17750174794946497, 0.15122526720486654, 0.14908608796725656] ***
*** starting iteration: 3; err: [Inf, 0.17750174794946497, 0.15122526720486654, 0.14908608796725656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17750174794946497, 0.15122526720486654, 0.14908608796725656, 0.14810694882442346] ***
*** finished computation of 7 references, err: [Inf, 0.17750174794946497, 0.15122526720486654, 0.14908608796725656, 0.14810694882442346] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [71, 21, 0]]
** centroid: 1, normalized-entropy: 0.7749672673267259, [(1, 71), (2, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [99, 6, 0]]
** centroid: 2, normalized-entropy: 0.3159971329784246, [(1, 99), (2, 6)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 80, 9]]
** centroid: 3, normalized-entropy: 0.4725472219330293, [(2, 80), (3, 9)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 49, 22]]
** centroid: 4, normalized-entropy: 0.893010810044601, [(2, 49), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [18, 69, 0]]
** centroid: 5, normalized-entropy: 0.7355085815538399, [(1, 18), (2, 69)]
*** center 6: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [122, 6, 0]]
** centroid: 7, normalized-entropy: 0.2729708579140699, [(1, 122), (2, 6)]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 17)
[0.9520058981136826, 0.9399878920837005, 0.9310148471825119, 0.9220118321914729, 0.91901482320644, 0.9160088231944519, 0.9160028291764819, 0.9139948331565098, 0.9009938081794369, 0.8970227712742682, 0.8949937961914011, 0.8870547193900488, 0.8809857761953571, 0.8660187133241025, 0.8440116763470057, 0.8429926932920945, 0.7749695803588019]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9520058981136826
finished with 19
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.3321857446645227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3321857446645227, 0.2446815405661861] ***
*** starting iteration: 2; err: [Inf, 0.3321857446645227, 0.2446815405661861] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3321857446645227, 0.2446815405661861, 0.23645942741319784] ***
*** starting iteration: 3; err: [Inf, 0.3321857446645227, 0.2446815405661861, 0.23645942741319784] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3321857446645227, 0.2446815405661861, 0.23645942741319784, 0.23439511649769257] ***
*** finished computation of 3 references, err: [Inf, 0.3321857446645227, 0.2446815405661861, 0.23645942741319784, 0.23439511649769257] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [256, 2, 0]]
** centroid: 1, normalized-entropy: 0.06549082131472699, [(1, 256), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [135, 54, 0]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(1, 135), (2, 54)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [3, 192, 24]]
** centroid: 3, normalized-entropy: 0.37905216225383903, [(1, 3), (2, 192), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.33432035273809485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33432035273809485, 0.27296767272529887] ***
*** starting iteration: 2; err: [Inf, 0.33432035273809485, 0.27296767272529887] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33432035273809485, 0.27296767272529887, 0.2475285689560124] ***
*** starting iteration: 3; err: [Inf, 0.33432035273809485, 0.27296767272529887, 0.2475285689560124] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33432035273809485, 0.27296767272529887, 0.2475285689560124, 0.24005358236125562] ***
*** finished computation of 3 references, err: [Inf, 0.33432035273809485, 0.27296767272529887, 0.2475285689560124, 0.24005358236125562] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [84, 175, 33]]
** centroid: 1, normalized-entropy: 0.8298177336750904, [(1, 84), (2, 175), (3, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [100, 80, 0]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(1, 100), (2, 80)]
*** center 3: selecting labels [1] (freq >= 1) [from [195, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36766786342123703] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36766786342123703, 0.2307143563745373] ***
*** starting iteration: 2; err: [Inf, 0.36766786342123703, 0.2307143563745373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36766786342123703, 0.2307143563745373, 0.23013177921652034] ***
*** finished computation of 3 references, err: [Inf, 0.36766786342123703, 0.2307143563745373, 0.23013177921652034] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [1, 171, 31]]
** centroid: 1, normalized-entropy: 0.416570050503131, [(1, 1), (2, 171), (3, 31)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [156, 45, 0]]
** centroid: 2, normalized-entropy: 0.7671903206448686, [(1, 156), (2, 45)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [248, 15, 0]]
** centroid: 3, normalized-entropy: 0.3155576056038126, [(1, 248), (2, 15)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3618071382884887] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3618071382884887, 0.2983685506664373] ***
*** starting iteration: 2; err: [Inf, 0.3618071382884887, 0.2983685506664373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3618071382884887, 0.2983685506664373, 0.29530049510042855] ***
*** starting iteration: 3; err: [Inf, 0.3618071382884887, 0.2983685506664373, 0.29530049510042855] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3618071382884887, 0.2983685506664373, 0.29530049510042855, 0.29389762397374475] ***
*** finished computation of 3 references, err: [Inf, 0.3618071382884887, 0.2983685506664373, 0.29530049510042855, 0.29389762397374475] ***
*** center 1: selecting labels [1] (freq >= 1) [from [220, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [124, 89, 0]]
** centroid: 2, normalized-entropy: 0.9804344190803832, [(1, 124), (2, 89)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [50, 159, 24]]
** centroid: 3, normalized-entropy: 0.7510909271170472, [(1, 50), (2, 159), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4051810051195848] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4051810051195848, 0.3777369788220931] ***
*** starting iteration: 2; err: [Inf, 0.4051810051195848, 0.3777369788220931] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4051810051195848, 0.3777369788220931, 0.357125887231178] ***
*** starting iteration: 3; err: [Inf, 0.4051810051195848, 0.3777369788220931, 0.357125887231178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4051810051195848, 0.3777369788220931, 0.357125887231178, 0.35296098740751863] ***
*** finished computation of 3 references, err: [Inf, 0.4051810051195848, 0.3777369788220931, 0.357125887231178, 0.35296098740751863] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [263, 37, 0]]
** centroid: 1, normalized-entropy: 0.5388671281220587, [(1, 263), (2, 37)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [75, 140, 0]]
** centroid: 2, normalized-entropy: 0.9330252953592912, [(1, 75), (2, 140)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [41, 78, 33]]
** centroid: 3, normalized-entropy: 0.9351830536480752, [(1, 41), (2, 78), (3, 33)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.43037457208217555] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43037457208217555, 0.31944403983931846] ***
*** starting iteration: 2; err: [Inf, 0.43037457208217555, 0.31944403983931846] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43037457208217555, 0.31944403983931846, 0.29314232558553766] ***
*** starting iteration: 3; err: [Inf, 0.43037457208217555, 0.31944403983931846, 0.29314232558553766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43037457208217555, 0.31944403983931846, 0.29314232558553766, 0.2882106700378737] ***
*** finished computation of 3 references, err: [Inf, 0.43037457208217555, 0.31944403983931846, 0.29314232558553766, 0.2882106700378737] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [252, 25, 0]]
** centroid: 1, normalized-entropy: 0.4373127600334951, [(1, 252), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [153, 49, 0]]
** centroid: 2, normalized-entropy: 0.7992950357536713, [(1, 153), (2, 49)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 157, 31]]
** centroid: 3, normalized-entropy: 0.6458891538160492, [(2, 157), (3, 31)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 19)
[0.9520058981136826, 0.9399878920837005, 0.9310148471825119, 0.9220118321914729, 0.91901482320644, 0.9160088231944519, 0.9160028291764819, 0.9139948331565098, 0.9009938081794369, 0.8970227712742682, 0.8949937961914011, 0.8870547193900488, 0.8809857761953571, 0.8799847751943561, 0.8709637781494068, 0.8660187133241025, 0.8440116763470057, 0.8429926932920945, 0.7749695803588019]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9520058981136826
finished with 21
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.2293857098962586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293857098962586, 0.17591914701500666] ***
*** starting iteration: 2; err: [Inf, 0.2293857098962586, 0.17591914701500666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293857098962586, 0.17591914701500666, 0.15810228842828009] ***
*** starting iteration: 3; err: [Inf, 0.2293857098962586, 0.17591914701500666, 0.15810228842828009] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293857098962586, 0.17591914701500666, 0.15810228842828009, 0.15151254972582823] ***
*** starting iteration: 4; err: [Inf, 0.2293857098962586, 0.17591914701500666, 0.15810228842828009, 0.15151254972582823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293857098962586, 0.17591914701500666, 0.15810228842828009, 0.15151254972582823, 0.14801852652829633] ***
*** starting iteration: 5; err: [Inf, 0.2293857098962586, 0.17591914701500666, 0.15810228842828009, 0.15151254972582823, 0.14801852652829633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293857098962586, 0.17591914701500666, 0.15810228842828009, 0.15151254972582823, 0.14801852652829633, 0.1469835861021088] ***
*** starting iteration: 6; err: [Inf, 0.2293857098962586, 0.17591914701500666, 0.15810228842828009, 0.15151254972582823, 0.14801852652829633, 0.1469835861021088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293857098962586, 0.17591914701500666, 0.15810228842828009, 0.15151254972582823, 0.14801852652829633, 0.1469835861021088, 0.14652937973427163] ***
*** finished computation of 7 references, err: [Inf, 0.2293857098962586, 0.17591914701500666, 0.15810228842828009, 0.15151254972582823, 0.14801852652829633, 0.1469835861021088, 0.14652937973427163] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 100, 6]]
** centroid: 1, normalized-entropy: 0.3138129641688652, [(2, 100), (3, 6)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 88, 18]]
** centroid: 2, normalized-entropy: 0.6572729784684466, [(2, 88), (3, 18)]
*** center 3: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [64, 25, 0]]
** centroid: 4, normalized-entropy: 0.8566727035015875, [(1, 64), (2, 25)]
*** center 5: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [96, 23, 0]]
** centroid: 6, normalized-entropy: 0.7082772165975041, [(1, 96), (2, 23)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [87, 12, 0]]
** centroid: 7, normalized-entropy: 0.5328350630342235, [(1, 87), (2, 12)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19678656971207756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19678656971207756, 0.1554826940507579] ***
*** starting iteration: 2; err: [Inf, 0.19678656971207756, 0.1554826940507579] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19678656971207756, 0.1554826940507579, 0.15025893626598477] ***
*** starting iteration: 3; err: [Inf, 0.19678656971207756, 0.1554826940507579, 0.15025893626598477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19678656971207756, 0.1554826940507579, 0.15025893626598477, 0.1480153180286009] ***
*** starting iteration: 4; err: [Inf, 0.19678656971207756, 0.1554826940507579, 0.15025893626598477, 0.1480153180286009] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19678656971207756, 0.1554826940507579, 0.15025893626598477, 0.1480153180286009, 0.14665501601149286] ***
*** starting iteration: 5; err: [Inf, 0.19678656971207756, 0.1554826940507579, 0.15025893626598477, 0.1480153180286009, 0.14665501601149286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19678656971207756, 0.1554826940507579, 0.15025893626598477, 0.1480153180286009, 0.14665501601149286, 0.14609439653446382] ***
*** finished computation of 7 references, err: [Inf, 0.19678656971207756, 0.1554826940507579, 0.15025893626598477, 0.1480153180286009, 0.14665501601149286, 0.14609439653446382] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 90, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 80, 33]]
** centroid: 2, normalized-entropy: 0.8713360108238786, [(2, 80), (3, 33)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [76, 25, 0]]
** centroid: 3, normalized-entropy: 0.8073313266519867, [(1, 76), (2, 25)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [38, 54, 0]]
** centroid: 4, normalized-entropy: 0.978070970973496, [(1, 38), (2, 54)]
*** center 5: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [99, 6, 0]]
** centroid: 6, normalized-entropy: 0.3159971329784246, [(1, 99), (2, 6)]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.16700984870406171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16700984870406171, 0.1512837406901316] ***
*** starting iteration: 2; err: [Inf, 0.16700984870406171, 0.1512837406901316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16700984870406171, 0.1512837406901316, 0.1471562848071745] ***
*** starting iteration: 3; err: [Inf, 0.16700984870406171, 0.1512837406901316, 0.1471562848071745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16700984870406171, 0.1512837406901316, 0.1471562848071745, 0.14546496824974353] ***
*** starting iteration: 4; err: [Inf, 0.16700984870406171, 0.1512837406901316, 0.1471562848071745, 0.14546496824974353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16700984870406171, 0.1512837406901316, 0.1471562848071745, 0.14546496824974353, 0.1449219980814691] ***
*** finished computation of 7 references, err: [Inf, 0.16700984870406171, 0.1512837406901316, 0.1471562848071745, 0.14546496824974353, 0.1449219980814691] ***
*** center 1: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [75, 26, 0]]
** centroid: 2, normalized-entropy: 0.8228368841492258, [(1, 75), (2, 26)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 75, 31]]
** centroid: 3, normalized-entropy: 0.8718686865520275, [(2, 75), (3, 31)]
*** center 4: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 82, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [108, 7, 0]]
** centroid: 6, normalized-entropy: 0.33088714061343766, [(1, 108), (2, 7)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [49, 41, 0]]
** centroid: 7, normalized-entropy: 0.9942929346520455, [(1, 49), (2, 41)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29263251082476666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29263251082476666, 0.20507687450716602] ***
*** starting iteration: 2; err: [Inf, 0.29263251082476666, 0.20507687450716602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29263251082476666, 0.20507687450716602, 0.19181954010191174] ***
*** starting iteration: 3; err: [Inf, 0.29263251082476666, 0.20507687450716602, 0.19181954010191174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29263251082476666, 0.20507687450716602, 0.19181954010191174, 0.1888404838830322] ***
*** starting iteration: 4; err: [Inf, 0.29263251082476666, 0.20507687450716602, 0.19181954010191174, 0.1888404838830322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29263251082476666, 0.20507687450716602, 0.19181954010191174, 0.1888404838830322, 0.18770487725248072] ***
*** starting iteration: 5; err: [Inf, 0.29263251082476666, 0.20507687450716602, 0.19181954010191174, 0.1888404838830322, 0.18770487725248072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29263251082476666, 0.20507687450716602, 0.19181954010191174, 0.1888404838830322, 0.18770487725248072, 0.18752533934630072] ***
*** finished computation of 7 references, err: [Inf, 0.29263251082476666, 0.20507687450716602, 0.19181954010191174, 0.1888404838830322, 0.18770487725248072, 0.18752533934630072] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [86, 27, 0]]
** centroid: 1, normalized-entropy: 0.7932698344258595, [(1, 86), (2, 27)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 72, 24]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 72), (3, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [80, 9, 0]]
** centroid: 4, normalized-entropy: 0.4725472219330293, [(1, 80), (2, 9)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 81, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [33, 59, 0]]
** centroid: 7, normalized-entropy: 0.9415951533268216, [(1, 33), (2, 59)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28841064799705457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28841064799705457, 0.19915555030277846] ***
*** starting iteration: 2; err: [Inf, 0.28841064799705457, 0.19915555030277846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28841064799705457, 0.19915555030277846, 0.19646054588822365] ***
*** starting iteration: 3; err: [Inf, 0.28841064799705457, 0.19915555030277846, 0.19646054588822365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28841064799705457, 0.19915555030277846, 0.19646054588822365, 0.1948313536345847] ***
*** starting iteration: 4; err: [Inf, 0.28841064799705457, 0.19915555030277846, 0.19646054588822365, 0.1948313536345847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28841064799705457, 0.19915555030277846, 0.19646054588822365, 0.1948313536345847, 0.19314645550240284] ***
*** starting iteration: 5; err: [Inf, 0.28841064799705457, 0.19915555030277846, 0.19646054588822365, 0.1948313536345847, 0.19314645550240284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28841064799705457, 0.19915555030277846, 0.19646054588822365, 0.1948313536345847, 0.19314645550240284, 0.1916284729640043] ***
*** starting iteration: 6; err: [Inf, 0.28841064799705457, 0.19915555030277846, 0.19646054588822365, 0.1948313536345847, 0.19314645550240284, 0.1916284729640043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28841064799705457, 0.19915555030277846, 0.19646054588822365, 0.1948313536345847, 0.19314645550240284, 0.1916284729640043, 0.19057530284799198] ***
*** starting iteration: 7; err: [Inf, 0.28841064799705457, 0.19915555030277846, 0.19646054588822365, 0.1948313536345847, 0.19314645550240284, 0.1916284729640043, 0.19057530284799198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28841064799705457, 0.19915555030277846, 0.19646054588822365, 0.1948313536345847, 0.19314645550240284, 0.1916284729640043, 0.19057530284799198, 0.19022698270651264] ***
*** finished computation of 7 references, err: [Inf, 0.28841064799705457, 0.19915555030277846, 0.19646054588822365, 0.1948313536345847, 0.19314645550240284, 0.1916284729640043, 0.19057530284799198, 0.19022698270651264] ***
*** center 1: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [45, 53, 0]]
** centroid: 2, normalized-entropy: 0.9951876662918929, [(1, 45), (2, 53)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [99, 27, 0]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(1, 99), (2, 27)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 66, 23]]
** centroid: 4, normalized-entropy: 0.8243633538094403, [(2, 66), (3, 23)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 76, 10]]
** centroid: 5, normalized-entropy: 0.5185697317883058, [(2, 76), (3, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [66, 33, 0]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(1, 66), (2, 33)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23417061709029519] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23417061709029519, 0.19614616173390728] ***
*** starting iteration: 2; err: [Inf, 0.23417061709029519, 0.19614616173390728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23417061709029519, 0.19614616173390728, 0.19055001806981606] ***
*** starting iteration: 3; err: [Inf, 0.23417061709029519, 0.19614616173390728, 0.19055001806981606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23417061709029519, 0.19614616173390728, 0.19055001806981606, 0.1897492723223911] ***
*** finished computation of 7 references, err: [Inf, 0.23417061709029519, 0.19614616173390728, 0.19055001806981606, 0.1897492723223911] ***
*** center 1: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [60, 29, 0]]
** centroid: 2, normalized-entropy: 0.9106223680988619, [(1, 60), (2, 29)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [126, 3, 0]]
** centroid: 3, normalized-entropy: 0.15935006268563429, [(1, 126), (2, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 78, 31]]
** centroid: 4, normalized-entropy: 0.8613819514443714, [(2, 78), (3, 31)]
*** center 5: selecting labels [1] (freq >= 2) [from [92, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [5, 91, 0]]
** centroid: 6, normalized-entropy: 0.29518174309075856, [(1, 5), (2, 91)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [30, 29, 0]]
** centroid: 7, normalized-entropy: 0.9997927658541268, [(1, 30), (2, 29)]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 21)
[0.9520058981136826, 0.9399878920837005, 0.9310148471825119, 0.922023820227413, 0.9220118321914729, 0.91901482320644, 0.9160268052483621, 0.9160088231944519, 0.9160028291764819, 0.9139948331565098, 0.9009938081794369, 0.8970227712742682, 0.8949937961914011, 0.8870547193900488, 0.8809857761953571, 0.8799847751943561, 0.8709637781494068, 0.8660187133241025, 0.8440116763470057, 0.8429926932920945, 0.7749695803588019]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9520058981136826
finished with 22
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.18730317812284325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18730317812284325, 0.1539777564615509] ***
*** finished computation of 7 references, err: [Inf, 0.18730317812284325, 0.1539777564615509] ***
*** center 1: selecting labels [1] (freq >= 2) [from [111, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [133, 17, 0]]
** centroid: 2, normalized-entropy: 0.509889142343121, [(1, 133), (2, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [5, 57, 0]]
** centroid: 4, normalized-entropy: 0.4044483864864384, [(1, 5), (2, 57)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [28, 50, 0]]
** centroid: 5, normalized-entropy: 0.9418285354475157, [(1, 28), (2, 50)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 54, 24]]
** centroid: 6, normalized-entropy: 0.8904916402194913, [(2, 54), (3, 24)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [5, 70, 0]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(1, 5), (2, 70)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23045961135325357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23045961135325357, 0.16885068185063362] ***
*** finished computation of 7 references, err: [Inf, 0.23045961135325357, 0.16885068185063362] ***
*** center 1: selecting labels [1] (freq >= 2) [from [108, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [117, 7, 0]]
** centroid: 2, normalized-entropy: 0.3131950471154111, [(1, 117), (2, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [127, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 46, 33]]
** centroid: 4, normalized-entropy: 0.980377508715691, [(2, 46), (3, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [6, 66, 0]]
** centroid: 5, normalized-entropy: 0.4138168503036336, [(1, 6), (2, 66)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 74, 0]]
** centroid: 6, normalized-entropy: 0.17556502585750275, [(1, 2), (2, 74)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [19, 62, 0]]
** centroid: 7, normalized-entropy: 0.785889583138768, [(1, 19), (2, 62)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20825216514959016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20825216514959016, 0.1709006189206696] ***
*** finished computation of 7 references, err: [Inf, 0.20825216514959016, 0.1709006189206696] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 63, 31]]
** centroid: 1, normalized-entropy: 0.9147088431405322, [(2, 63), (3, 31)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [136, 7, 0]]
** centroid: 2, normalized-entropy: 0.2819242677962259, [(1, 136), (2, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [130, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [50, 96, 0]]
** centroid: 5, normalized-entropy: 0.9271587399898307, [(1, 50), (2, 96)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [18, 51, 0]]
** centroid: 6, normalized-entropy: 0.828055725379504, [(1, 18), (2, 51)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [11, 14, 0]]
** centroid: 7, normalized-entropy: 0.9895875212220558, [(1, 11), (2, 14)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 22)
[0.9520058981136826, 0.9409918900936866, 0.9399878920837005, 0.9310148471825119, 0.922023820227413, 0.9220118321914729, 0.91901482320644, 0.9160268052483621, 0.9160088231944519, 0.9160028291764819, 0.9139948331565098, 0.9009938081794369, 0.8970227712742682, 0.8949937961914011, 0.8870547193900488, 0.8809857761953571, 0.8799847751943561, 0.8709637781494068, 0.8660187133241025, 0.8440116763470057, 0.8429926932920945, 0.7749695803588019]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9520058981136826
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.20766557968966662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20766557968966662, 0.15846739243902266] ***
*** starting iteration: 2; err: [Inf, 0.20766557968966662, 0.15846739243902266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20766557968966662, 0.15846739243902266, 0.15533862737426535] ***
*** starting iteration: 3; err: [Inf, 0.20766557968966662, 0.15846739243902266, 0.15533862737426535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20766557968966662, 0.15846739243902266, 0.15533862737426535, 0.1545217528771609] ***
*** finished computation of 7 references, err: [Inf, 0.20766557968966662, 0.15846739243902266, 0.15533862737426535, 0.1545217528771609] ***
*** center 1: selecting labels [1] (freq >= 2) [from [196, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [104, 37, 0]]
** centroid: 2, normalized-entropy: 0.8303633721509587, [(1, 104), (2, 37)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [165, 68, 0]]
** centroid: 3, normalized-entropy: 0.8710932753170155, [(1, 165), (2, 68)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 123, 41]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 123), (3, 41)]
*** center 5: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [22, 37, 0]]
** centroid: 6, normalized-entropy: 0.9528588097297789, [(1, 22), (2, 37)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 102, 3]]
** centroid: 7, normalized-entropy: 0.18717625687320805, [(2, 102), (3, 3)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27183800644241274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27183800644241274, 0.18305544545315205] ***
*** starting iteration: 2; err: [Inf, 0.27183800644241274, 0.18305544545315205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543] ***
*** starting iteration: 3; err: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543, 0.15753305551223457] ***
*** starting iteration: 4; err: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543, 0.15753305551223457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543, 0.15753305551223457, 0.15345427497662603] ***
*** starting iteration: 5; err: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543, 0.15753305551223457, 0.15345427497662603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543, 0.15753305551223457, 0.15345427497662603, 0.1496844342984259] ***
*** starting iteration: 6; err: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543, 0.15753305551223457, 0.15345427497662603, 0.1496844342984259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543, 0.15753305551223457, 0.15345427497662603, 0.1496844342984259, 0.14572831768449396] ***
*** starting iteration: 7; err: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543, 0.15753305551223457, 0.15345427497662603, 0.1496844342984259, 0.14572831768449396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543, 0.15753305551223457, 0.15345427497662603, 0.1496844342984259, 0.14572831768449396, 0.14382920585293324] ***
*** starting iteration: 8; err: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543, 0.15753305551223457, 0.15345427497662603, 0.1496844342984259, 0.14572831768449396, 0.14382920585293324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543, 0.15753305551223457, 0.15345427497662603, 0.1496844342984259, 0.14572831768449396, 0.14382920585293324, 0.1427883698940277] ***
*** starting iteration: 9; err: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543, 0.15753305551223457, 0.15345427497662603, 0.1496844342984259, 0.14572831768449396, 0.14382920585293324, 0.1427883698940277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543, 0.15753305551223457, 0.15345427497662603, 0.1496844342984259, 0.14572831768449396, 0.14382920585293324, 0.1427883698940277, 0.14231044006161392] ***
*** finished computation of 7 references, err: [Inf, 0.27183800644241274, 0.18305544545315205, 0.16238334942236543, 0.15753305551223457, 0.15345427497662603, 0.1496844342984259, 0.14572831768449396, 0.14382920585293324, 0.1427883698940277, 0.14231044006161392] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [31, 56, 0]]
** centroid: 1, normalized-entropy: 0.9395876193289702, [(1, 31), (2, 56)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 65, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 48, 25]]
** centroid: 3, normalized-entropy: 0.9271587399898307, [(2, 48), (3, 25)]
*** center 4: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [65, 3, 0]]
** centroid: 5, normalized-entropy: 0.260862909647207, [(1, 65), (2, 3)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [51, 19, 0]]
** centroid: 6, normalized-entropy: 0.8435070855739035, [(1, 51), (2, 19)]
*** center 7: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21055750170908868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21055750170908868, 0.16352414168510587] ***
*** starting iteration: 2; err: [Inf, 0.21055750170908868, 0.16352414168510587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21055750170908868, 0.16352414168510587, 0.1518163628373295] ***
*** starting iteration: 3; err: [Inf, 0.21055750170908868, 0.16352414168510587, 0.1518163628373295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21055750170908868, 0.16352414168510587, 0.1518163628373295, 0.14884985324181615] ***
*** starting iteration: 4; err: [Inf, 0.21055750170908868, 0.16352414168510587, 0.1518163628373295, 0.14884985324181615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21055750170908868, 0.16352414168510587, 0.1518163628373295, 0.14884985324181615, 0.14672885105386377] ***
*** starting iteration: 5; err: [Inf, 0.21055750170908868, 0.16352414168510587, 0.1518163628373295, 0.14884985324181615, 0.14672885105386377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21055750170908868, 0.16352414168510587, 0.1518163628373295, 0.14884985324181615, 0.14672885105386377, 0.14495990063995123] ***
*** starting iteration: 6; err: [Inf, 0.21055750170908868, 0.16352414168510587, 0.1518163628373295, 0.14884985324181615, 0.14672885105386377, 0.14495990063995123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21055750170908868, 0.16352414168510587, 0.1518163628373295, 0.14884985324181615, 0.14672885105386377, 0.14495990063995123, 0.14407616966031492] ***
*** finished computation of 7 references, err: [Inf, 0.21055750170908868, 0.16352414168510587, 0.1518163628373295, 0.14884985324181615, 0.14672885105386377, 0.14495990063995123, 0.14407616966031492] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [99, 11, 0]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(1, 99), (2, 11)]
*** center 2: selecting labels [2] (freq >= 2) [from [1, 59, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 43, 20]]
** centroid: 3, normalized-entropy: 0.9015982354056711, [(2, 43), (3, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [4, 67, 0]]
** centroid: 6, normalized-entropy: 0.3127333763966432, [(1, 4), (2, 67)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [33, 5, 0]]
** centroid: 7, normalized-entropy: 0.5617526078313283, [(1, 33), (2, 5)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21264256498962641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21264256498962641, 0.1563812097106129] ***
*** starting iteration: 2; err: [Inf, 0.21264256498962641, 0.1563812097106129] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21264256498962641, 0.1563812097106129, 0.14854535253625364] ***
*** starting iteration: 3; err: [Inf, 0.21264256498962641, 0.1563812097106129, 0.14854535253625364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21264256498962641, 0.1563812097106129, 0.14854535253625364, 0.14623509544599803] ***
*** starting iteration: 4; err: [Inf, 0.21264256498962641, 0.1563812097106129, 0.14854535253625364, 0.14623509544599803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21264256498962641, 0.1563812097106129, 0.14854535253625364, 0.14623509544599803, 0.14528999061184003] ***
*** finished computation of 7 references, err: [Inf, 0.21264256498962641, 0.1563812097106129, 0.14854535253625364, 0.14623509544599803, 0.14528999061184003] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [15, 66, 0]]
** centroid: 1, normalized-entropy: 0.6912898694057888, [(1, 15), (2, 66)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [44, 49, 0]]
** centroid: 2, normalized-entropy: 0.9979139338855983, [(1, 44), (2, 49)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 75, 23]]
** centroid: 3, normalized-entropy: 0.7861044688447759, [(2, 75), (3, 23)]
*** center 4: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [61, 5, 0]]
** centroid: 5, normalized-entropy: 0.38705142139219795, [(1, 61), (2, 5)]
*** center 6: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [43, 2, 0]]
** centroid: 7, normalized-entropy: 0.2623112196143368, [(1, 43), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2363358922433108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363358922433108, 0.18133307598158718] ***
*** starting iteration: 2; err: [Inf, 0.2363358922433108, 0.18133307598158718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363358922433108, 0.18133307598158718, 0.16898308551684021] ***
*** starting iteration: 3; err: [Inf, 0.2363358922433108, 0.18133307598158718, 0.16898308551684021] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363358922433108, 0.18133307598158718, 0.16898308551684021, 0.160030404439196] ***
*** starting iteration: 4; err: [Inf, 0.2363358922433108, 0.18133307598158718, 0.16898308551684021, 0.160030404439196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363358922433108, 0.18133307598158718, 0.16898308551684021, 0.160030404439196, 0.1560881076194346] ***
*** starting iteration: 5; err: [Inf, 0.2363358922433108, 0.18133307598158718, 0.16898308551684021, 0.160030404439196, 0.1560881076194346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363358922433108, 0.18133307598158718, 0.16898308551684021, 0.160030404439196, 0.1560881076194346, 0.1537197267767042] ***
*** starting iteration: 6; err: [Inf, 0.2363358922433108, 0.18133307598158718, 0.16898308551684021, 0.160030404439196, 0.1560881076194346, 0.1537197267767042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363358922433108, 0.18133307598158718, 0.16898308551684021, 0.160030404439196, 0.1560881076194346, 0.1537197267767042, 0.1519050492742099] ***
*** starting iteration: 7; err: [Inf, 0.2363358922433108, 0.18133307598158718, 0.16898308551684021, 0.160030404439196, 0.1560881076194346, 0.1537197267767042, 0.1519050492742099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363358922433108, 0.18133307598158718, 0.16898308551684021, 0.160030404439196, 0.1560881076194346, 0.1537197267767042, 0.1519050492742099, 0.1514151574615389] ***
*** finished computation of 7 references, err: [Inf, 0.2363358922433108, 0.18133307598158718, 0.16898308551684021, 0.160030404439196, 0.1560881076194346, 0.1537197267767042, 0.1519050492742099, 0.1514151574615389] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 62, 19]]
** centroid: 1, normalized-entropy: 0.785889583138768, [(2, 62), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [89, 36, 0]]
** centroid: 2, normalized-entropy: 0.866123681398626, [(1, 89), (2, 36)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [64, 2, 0]]
** centroid: 3, normalized-entropy: 0.19590927087360496, [(1, 64), (2, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [2, 60, 0]]
** centroid: 5, normalized-entropy: 0.2055925081850832, [(1, 2), (2, 60)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [12, 24, 0]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(1, 12), (2, 24)]
*** center 7: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36688003101293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36688003101293, 0.18435450003948062] ***
*** starting iteration: 2; err: [Inf, 0.36688003101293, 0.18435450003948062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36688003101293, 0.18435450003948062, 0.1653972866497934] ***
*** starting iteration: 3; err: [Inf, 0.36688003101293, 0.18435450003948062, 0.1653972866497934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36688003101293, 0.18435450003948062, 0.1653972866497934, 0.1553342027105391] ***
*** starting iteration: 4; err: [Inf, 0.36688003101293, 0.18435450003948062, 0.1653972866497934, 0.1553342027105391] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36688003101293, 0.18435450003948062, 0.1653972866497934, 0.1553342027105391, 0.15148639084259047] ***
*** starting iteration: 5; err: [Inf, 0.36688003101293, 0.18435450003948062, 0.1653972866497934, 0.1553342027105391, 0.15148639084259047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36688003101293, 0.18435450003948062, 0.1653972866497934, 0.1553342027105391, 0.15148639084259047, 0.14971656850352882] ***
*** starting iteration: 6; err: [Inf, 0.36688003101293, 0.18435450003948062, 0.1653972866497934, 0.1553342027105391, 0.15148639084259047, 0.14971656850352882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36688003101293, 0.18435450003948062, 0.1653972866497934, 0.1553342027105391, 0.15148639084259047, 0.14971656850352882, 0.1488408510638401] ***
*** finished computation of 7 references, err: [Inf, 0.36688003101293, 0.18435450003948062, 0.1653972866497934, 0.1553342027105391, 0.15148639084259047, 0.14971656850352882, 0.1488408510638401] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 83, 19]]
** centroid: 1, normalized-entropy: 0.6936126404300949, [(2, 83), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [42, 37, 0]]
** centroid: 3, normalized-entropy: 0.9971085167216716, [(1, 42), (2, 37)]
*** center 4: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [32, 24, 0]]
** centroid: 6, normalized-entropy: 0.9852281360342514, [(1, 32), (2, 24)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [49, 45, 0]]
** centroid: 7, normalized-entropy: 0.998693408098057, [(1, 49), (2, 45)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.16825324401073158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16825324401073158, 0.15421413754671812] ***
*** starting iteration: 2; err: [Inf, 0.16825324401073158, 0.15421413754671812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16825324401073158, 0.15421413754671812, 0.14916208358108998] ***
*** starting iteration: 3; err: [Inf, 0.16825324401073158, 0.15421413754671812, 0.14916208358108998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16825324401073158, 0.15421413754671812, 0.14916208358108998, 0.14555082504078745] ***
*** starting iteration: 4; err: [Inf, 0.16825324401073158, 0.15421413754671812, 0.14916208358108998, 0.14555082504078745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16825324401073158, 0.15421413754671812, 0.14916208358108998, 0.14555082504078745, 0.1425683587328531] ***
*** starting iteration: 5; err: [Inf, 0.16825324401073158, 0.15421413754671812, 0.14916208358108998, 0.14555082504078745, 0.1425683587328531] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16825324401073158, 0.15421413754671812, 0.14916208358108998, 0.14555082504078745, 0.1425683587328531, 0.14136785512790084] ***
*** starting iteration: 6; err: [Inf, 0.16825324401073158, 0.15421413754671812, 0.14916208358108998, 0.14555082504078745, 0.1425683587328531, 0.14136785512790084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16825324401073158, 0.15421413754671812, 0.14916208358108998, 0.14555082504078745, 0.1425683587328531, 0.14136785512790084, 0.1405311951022595] ***
*** finished computation of 7 references, err: [Inf, 0.16825324401073158, 0.15421413754671812, 0.14916208358108998, 0.14555082504078745, 0.1425683587328531, 0.14136785512790084, 0.1405311951022595] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [61, 13, 0]]
** centroid: 1, normalized-entropy: 0.6705250693158382, [(1, 61), (2, 13)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 58, 24]]
** centroid: 2, normalized-entropy: 0.8721617883411698, [(2, 58), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [43, 15, 0]]
** centroid: 3, normalized-entropy: 0.8246578332945033, [(1, 43), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [55, 31, 0]]
** centroid: 4, normalized-entropy: 0.9430685934712909, [(1, 55), (2, 31)]
*** center 5: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [7, 75, 0]]
** centroid: 6, normalized-entropy: 0.42080948947668984, [(1, 7), (2, 75)]
*** center 7: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24978548547253013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24978548547253013, 0.17385108714178205] ***
*** starting iteration: 2; err: [Inf, 0.24978548547253013, 0.17385108714178205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24978548547253013, 0.17385108714178205, 0.15936160738021135] ***
*** starting iteration: 3; err: [Inf, 0.24978548547253013, 0.17385108714178205, 0.15936160738021135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24978548547253013, 0.17385108714178205, 0.15936160738021135, 0.15527763720415533] ***
*** starting iteration: 4; err: [Inf, 0.24978548547253013, 0.17385108714178205, 0.15936160738021135, 0.15527763720415533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24978548547253013, 0.17385108714178205, 0.15936160738021135, 0.15527763720415533, 0.15369407317973674] ***
*** starting iteration: 5; err: [Inf, 0.24978548547253013, 0.17385108714178205, 0.15936160738021135, 0.15527763720415533, 0.15369407317973674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24978548547253013, 0.17385108714178205, 0.15936160738021135, 0.15527763720415533, 0.15369407317973674, 0.15283331165462732] ***
*** finished computation of 7 references, err: [Inf, 0.24978548547253013, 0.17385108714178205, 0.15936160738021135, 0.15527763720415533, 0.15369407317973674, 0.15283331165462732] ***
*** center 1: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 18, 20]]
** centroid: 2, normalized-entropy: 0.9980008838722993, [(2, 18), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [30, 18, 0]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(1, 30), (2, 18)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 70, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [96, 27, 0]]
** centroid: 6, normalized-entropy: 0.7592757847892834, [(1, 96), (2, 27)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3806307010743767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3806307010743767, 0.19509804304875433] ***
*** starting iteration: 2; err: [Inf, 0.3806307010743767, 0.19509804304875433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3806307010743767, 0.19509804304875433, 0.17603179884841666] ***
*** starting iteration: 3; err: [Inf, 0.3806307010743767, 0.19509804304875433, 0.17603179884841666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3806307010743767, 0.19509804304875433, 0.17603179884841666, 0.16064864879474045] ***
*** starting iteration: 4; err: [Inf, 0.3806307010743767, 0.19509804304875433, 0.17603179884841666, 0.16064864879474045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3806307010743767, 0.19509804304875433, 0.17603179884841666, 0.16064864879474045, 0.15658722488582133] ***
*** starting iteration: 5; err: [Inf, 0.3806307010743767, 0.19509804304875433, 0.17603179884841666, 0.16064864879474045, 0.15658722488582133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3806307010743767, 0.19509804304875433, 0.17603179884841666, 0.16064864879474045, 0.15658722488582133, 0.15534402342885734] ***
*** starting iteration: 6; err: [Inf, 0.3806307010743767, 0.19509804304875433, 0.17603179884841666, 0.16064864879474045, 0.15658722488582133, 0.15534402342885734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3806307010743767, 0.19509804304875433, 0.17603179884841666, 0.16064864879474045, 0.15658722488582133, 0.15534402342885734, 0.15473935163766145] ***
*** finished computation of 7 references, err: [Inf, 0.3806307010743767, 0.19509804304875433, 0.17603179884841666, 0.16064864879474045, 0.15658722488582133, 0.15534402342885734, 0.15473935163766145] ***
*** center 1: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [55, 29, 0]]
** centroid: 2, normalized-entropy: 0.9297432191769048, [(1, 55), (2, 29)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [34, 56, 0]]
** centroid: 3, normalized-entropy: 0.9564574047992596, [(1, 34), (2, 56)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 88, 30]]
** centroid: 4, normalized-entropy: 0.8179252501386403, [(2, 88), (3, 30)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [52, 18, 0]]
** centroid: 5, normalized-entropy: 0.8224042259549892, [(1, 52), (2, 18)]
*** center 6: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [41, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2706449229661375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2706449229661375, 0.17656157277151943] ***
*** starting iteration: 2; err: [Inf, 0.2706449229661375, 0.17656157277151943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2706449229661375, 0.17656157277151943, 0.15192390407249332] ***
*** starting iteration: 3; err: [Inf, 0.2706449229661375, 0.17656157277151943, 0.15192390407249332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2706449229661375, 0.17656157277151943, 0.15192390407249332, 0.1461787522630766] ***
*** starting iteration: 4; err: [Inf, 0.2706449229661375, 0.17656157277151943, 0.15192390407249332, 0.1461787522630766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2706449229661375, 0.17656157277151943, 0.15192390407249332, 0.1461787522630766, 0.14394836843013764] ***
*** starting iteration: 5; err: [Inf, 0.2706449229661375, 0.17656157277151943, 0.15192390407249332, 0.1461787522630766, 0.14394836843013764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2706449229661375, 0.17656157277151943, 0.15192390407249332, 0.1461787522630766, 0.14394836843013764, 0.1432127453200519] ***
*** finished computation of 7 references, err: [Inf, 0.2706449229661375, 0.17656157277151943, 0.15192390407249332, 0.1461787522630766, 0.14394836843013764, 0.1432127453200519] ***
*** center 1: selecting labels [1] (freq >= 2) [from [72, 1, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [43, 37, 0]]
** centroid: 2, normalized-entropy: 0.9959386076315955, [(1, 43), (2, 37)]
*** center 3: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [80, 6, 0]]
** centroid: 4, normalized-entropy: 0.3650551896402848, [(1, 80), (2, 6)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [50, 15, 0]]
** centroid: 5, normalized-entropy: 0.7793498372920851, [(1, 50), (2, 15)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 51, 21]]
** centroid: 6, normalized-entropy: 0.8708644692353648, [(2, 51), (3, 21)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 65, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27446612827666106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27446612827666106, 0.17016888546943665] ***
*** starting iteration: 2; err: [Inf, 0.27446612827666106, 0.17016888546943665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27446612827666106, 0.17016888546943665, 0.1478429163484834] ***
*** starting iteration: 3; err: [Inf, 0.27446612827666106, 0.17016888546943665, 0.1478429163484834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27446612827666106, 0.17016888546943665, 0.1478429163484834, 0.14447193579748274] ***
*** starting iteration: 4; err: [Inf, 0.27446612827666106, 0.17016888546943665, 0.1478429163484834, 0.14447193579748274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27446612827666106, 0.17016888546943665, 0.1478429163484834, 0.14447193579748274, 0.14330280871829018] ***
*** starting iteration: 5; err: [Inf, 0.27446612827666106, 0.17016888546943665, 0.1478429163484834, 0.14447193579748274, 0.14330280871829018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27446612827666106, 0.17016888546943665, 0.1478429163484834, 0.14447193579748274, 0.14330280871829018, 0.14278005558857695] ***
*** finished computation of 7 references, err: [Inf, 0.27446612827666106, 0.17016888546943665, 0.1478429163484834, 0.14447193579748274, 0.14330280871829018, 0.14278005558857695] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [39, 8, 0]]
** centroid: 1, normalized-entropy: 0.6581912658132184, [(1, 39), (2, 8)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 67, 23]]
** centroid: 2, normalized-entropy: 0.8199653102187632, [(2, 67), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [69, 7, 0]]
** centroid: 3, normalized-entropy: 0.4434581453896789, [(1, 69), (2, 7)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 72, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [44, 38, 0]]
** centroid: 7, normalized-entropy: 0.9961344835095798, [(1, 44), (2, 38)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22987618218455463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22987618218455463, 0.1520374509729445] ***
*** starting iteration: 2; err: [Inf, 0.22987618218455463, 0.1520374509729445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22987618218455463, 0.1520374509729445, 0.14744870316050945] ***
*** starting iteration: 3; err: [Inf, 0.22987618218455463, 0.1520374509729445, 0.14744870316050945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22987618218455463, 0.1520374509729445, 0.14744870316050945, 0.1450405661938712] ***
*** starting iteration: 4; err: [Inf, 0.22987618218455463, 0.1520374509729445, 0.14744870316050945, 0.1450405661938712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22987618218455463, 0.1520374509729445, 0.14744870316050945, 0.1450405661938712, 0.14433636413468048] ***
*** finished computation of 7 references, err: [Inf, 0.22987618218455463, 0.1520374509729445, 0.14744870316050945, 0.1450405661938712, 0.14433636413468048] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [50, 39, 0]]
** centroid: 1, normalized-entropy: 0.9889525767600615, [(1, 50), (2, 39)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [3, 71, 0]]
** centroid: 2, normalized-entropy: 0.2447650820208971, [(1, 3), (2, 71)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 60, 23]]
** centroid: 3, normalized-entropy: 0.8514808683852091, [(2, 60), (3, 23)]
*** center 4: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [63, 7, 0]]
** centroid: 5, normalized-entropy: 0.46899559358928133, [(1, 63), (2, 7)]
*** center 6: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [43, 11, 0]]
** centroid: 7, normalized-entropy: 0.7292739418449411, [(1, 43), (2, 11)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24023180945124478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24023180945124478, 0.17642008169647305] ***
*** starting iteration: 2; err: [Inf, 0.24023180945124478, 0.17642008169647305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24023180945124478, 0.17642008169647305, 0.16050605527311562] ***
*** starting iteration: 3; err: [Inf, 0.24023180945124478, 0.17642008169647305, 0.16050605527311562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24023180945124478, 0.17642008169647305, 0.16050605527311562, 0.1531982276663184] ***
*** starting iteration: 4; err: [Inf, 0.24023180945124478, 0.17642008169647305, 0.16050605527311562, 0.1531982276663184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24023180945124478, 0.17642008169647305, 0.16050605527311562, 0.1531982276663184, 0.1513611612468958] ***
*** starting iteration: 5; err: [Inf, 0.24023180945124478, 0.17642008169647305, 0.16050605527311562, 0.1531982276663184, 0.1513611612468958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24023180945124478, 0.17642008169647305, 0.16050605527311562, 0.1531982276663184, 0.1513611612468958, 0.15049333443818613] ***
*** finished computation of 7 references, err: [Inf, 0.24023180945124478, 0.17642008169647305, 0.16050605527311562, 0.1531982276663184, 0.1513611612468958, 0.15049333443818613] ***
*** center 1: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 71, 21]]
** centroid: 2, normalized-entropy: 0.7749672673267259, [(2, 71), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [15, 52, 0]]
** centroid: 3, normalized-entropy: 0.7671903206448686, [(1, 15), (2, 52)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 33, 0]]
** centroid: 4, normalized-entropy: 0.9933570282728464, [(1, 40), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [34, 35, 0]]
** centroid: 5, normalized-entropy: 0.9998484829291058, [(1, 34), (2, 35)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [75, 2, 0]]
** centroid: 6, normalized-entropy: 0.17378132267943294, [(1, 75), (2, 2)]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20442517273500563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442517273500563, 0.17662339828861878] ***
*** starting iteration: 2; err: [Inf, 0.20442517273500563, 0.17662339828861878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907] ***
*** starting iteration: 3; err: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154] ***
*** starting iteration: 4; err: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154, 0.1524755267985165] ***
*** starting iteration: 5; err: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154, 0.1524755267985165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154, 0.1524755267985165, 0.14981707751564682] ***
*** starting iteration: 6; err: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154, 0.1524755267985165, 0.14981707751564682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154, 0.1524755267985165, 0.14981707751564682, 0.14732900453452022] ***
*** starting iteration: 7; err: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154, 0.1524755267985165, 0.14981707751564682, 0.14732900453452022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154, 0.1524755267985165, 0.14981707751564682, 0.14732900453452022, 0.1448394937608391] ***
*** starting iteration: 8; err: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154, 0.1524755267985165, 0.14981707751564682, 0.14732900453452022, 0.1448394937608391] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154, 0.1524755267985165, 0.14981707751564682, 0.14732900453452022, 0.1448394937608391, 0.1426787656005472] ***
*** starting iteration: 9; err: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154, 0.1524755267985165, 0.14981707751564682, 0.14732900453452022, 0.1448394937608391, 0.1426787656005472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154, 0.1524755267985165, 0.14981707751564682, 0.14732900453452022, 0.1448394937608391, 0.1426787656005472, 0.14163863528147339] ***
*** starting iteration: 10; err: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154, 0.1524755267985165, 0.14981707751564682, 0.14732900453452022, 0.1448394937608391, 0.1426787656005472, 0.14163863528147339] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154, 0.1524755267985165, 0.14981707751564682, 0.14732900453452022, 0.1448394937608391, 0.1426787656005472, 0.14163863528147339, 0.1412325989138335] ***
*** finished computation of 7 references, err: [Inf, 0.20442517273500563, 0.17662339828861878, 0.16615634183771907, 0.158790405806154, 0.1524755267985165, 0.14981707751564682, 0.14732900453452022, 0.1448394937608391, 0.1426787656005472, 0.14163863528147339, 0.1412325989138335] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [46, 48, 0]]
** centroid: 1, normalized-entropy: 0.9996734260048917, [(1, 46), (2, 48)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 7, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 35), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 56, 24]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 56), (3, 24)]
*** center 4: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [11, 70, 0]]
** centroid: 5, normalized-entropy: 0.5731393980555147, [(1, 11), (2, 70)]
*** center 6: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18860724575072527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18860724575072527, 0.15360905525833368] ***
*** starting iteration: 2; err: [Inf, 0.18860724575072527, 0.15360905525833368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18860724575072527, 0.15360905525833368, 0.14911492624226957] ***
*** starting iteration: 3; err: [Inf, 0.18860724575072527, 0.15360905525833368, 0.14911492624226957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18860724575072527, 0.15360905525833368, 0.14911492624226957, 0.14635092042107134] ***
*** starting iteration: 4; err: [Inf, 0.18860724575072527, 0.15360905525833368, 0.14911492624226957, 0.14635092042107134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18860724575072527, 0.15360905525833368, 0.14911492624226957, 0.14635092042107134, 0.14481354760751128] ***
*** starting iteration: 5; err: [Inf, 0.18860724575072527, 0.15360905525833368, 0.14911492624226957, 0.14635092042107134, 0.14481354760751128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18860724575072527, 0.15360905525833368, 0.14911492624226957, 0.14635092042107134, 0.14481354760751128, 0.14392266049655153] ***
*** finished computation of 7 references, err: [Inf, 0.18860724575072527, 0.15360905525833368, 0.14911492624226957, 0.14635092042107134, 0.14481354760751128, 0.14392266049655153] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 78, 23]]
** centroid: 1, normalized-entropy: 0.7740204128451942, [(2, 78), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [35, 24, 0]]
** centroid: 3, normalized-entropy: 0.9747785474909672, [(1, 35), (2, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [65, 6, 0]]
** centroid: 4, normalized-entropy: 0.4178642624458583, [(1, 65), (2, 6)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 74, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [58, 3, 0]]
** centroid: 6, normalized-entropy: 0.28290479297989196, [(1, 58), (2, 3)]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20623858652915805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20623858652915805, 0.15005597035586835] ***
*** starting iteration: 2; err: [Inf, 0.20623858652915805, 0.15005597035586835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20623858652915805, 0.15005597035586835, 0.14200459799915552] ***
*** starting iteration: 3; err: [Inf, 0.20623858652915805, 0.15005597035586835, 0.14200459799915552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20623858652915805, 0.15005597035586835, 0.14200459799915552, 0.14016041779331864] ***
*** starting iteration: 4; err: [Inf, 0.20623858652915805, 0.15005597035586835, 0.14200459799915552, 0.14016041779331864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20623858652915805, 0.15005597035586835, 0.14200459799915552, 0.14016041779331864, 0.13961675832420586] ***
*** finished computation of 7 references, err: [Inf, 0.20623858652915805, 0.15005597035586835, 0.14200459799915552, 0.14016041779331864, 0.13961675832420586] ***
*** center 1: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 56, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [3, 63, 0]]
** centroid: 4, normalized-entropy: 0.2667649878030262, [(1, 3), (2, 63)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [45, 23, 0]]
** centroid: 5, normalized-entropy: 0.9231199835423002, [(1, 45), (2, 23)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 40, 19]]
** centroid: 6, normalized-entropy: 0.9065795484987461, [(2, 40), (3, 19)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [72, 2, 0]]
** centroid: 7, normalized-entropy: 0.1792560669283214, [(1, 72), (2, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24569932842254638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24569932842254638, 0.16499136960180477] ***
*** starting iteration: 2; err: [Inf, 0.24569932842254638, 0.16499136960180477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24569932842254638, 0.16499136960180477, 0.15307232882734387] ***
*** starting iteration: 3; err: [Inf, 0.24569932842254638, 0.16499136960180477, 0.15307232882734387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24569932842254638, 0.16499136960180477, 0.15307232882734387, 0.14904044049605727] ***
*** starting iteration: 4; err: [Inf, 0.24569932842254638, 0.16499136960180477, 0.15307232882734387, 0.14904044049605727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24569932842254638, 0.16499136960180477, 0.15307232882734387, 0.14904044049605727, 0.14687942148186267] ***
*** starting iteration: 5; err: [Inf, 0.24569932842254638, 0.16499136960180477, 0.15307232882734387, 0.14904044049605727, 0.14687942148186267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24569932842254638, 0.16499136960180477, 0.15307232882734387, 0.14904044049605727, 0.14687942148186267, 0.14607630730047821] ***
*** finished computation of 7 references, err: [Inf, 0.24569932842254638, 0.16499136960180477, 0.15307232882734387, 0.14904044049605727, 0.14687942148186267, 0.14607630730047821] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [28, 32, 0]]
** centroid: 1, normalized-entropy: 0.9967916319816367, [(1, 28), (2, 32)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [26, 41, 0]]
** centroid: 2, normalized-entropy: 0.9635359835770286, [(1, 26), (2, 41)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 67, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [79, 13, 0]]
** centroid: 6, normalized-entropy: 0.5876446142980418, [(1, 79), (2, 13)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 30, 17]]
** centroid: 7, normalized-entropy: 0.9440870182837795, [(2, 30), (3, 17)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23911280893720688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23911280893720688, 0.17449834841862322] ***
*** starting iteration: 2; err: [Inf, 0.23911280893720688, 0.17449834841862322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23911280893720688, 0.17449834841862322, 0.1600539524545893] ***
*** starting iteration: 3; err: [Inf, 0.23911280893720688, 0.17449834841862322, 0.1600539524545893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23911280893720688, 0.17449834841862322, 0.1600539524545893, 0.15234001384396106] ***
*** starting iteration: 4; err: [Inf, 0.23911280893720688, 0.17449834841862322, 0.1600539524545893, 0.15234001384396106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23911280893720688, 0.17449834841862322, 0.1600539524545893, 0.15234001384396106, 0.14876894000917673] ***
*** starting iteration: 5; err: [Inf, 0.23911280893720688, 0.17449834841862322, 0.1600539524545893, 0.15234001384396106, 0.14876894000917673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23911280893720688, 0.17449834841862322, 0.1600539524545893, 0.15234001384396106, 0.14876894000917673, 0.14804686999879776] ***
*** finished computation of 7 references, err: [Inf, 0.23911280893720688, 0.17449834841862322, 0.1600539524545893, 0.15234001384396106, 0.14876894000917673, 0.14804686999879776] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 61, 3]]
** centroid: 1, normalized-entropy: 0.2729708579140699, [(2, 61), (3, 3)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [68, 25, 0]]
** centroid: 2, normalized-entropy: 0.8397622740178036, [(1, 68), (2, 25)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 67, 19]]
** centroid: 3, normalized-entropy: 0.7618624463753669, [(2, 67), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [56, 15, 0]]
** centroid: 5, normalized-entropy: 0.743898745288434, [(1, 56), (2, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [57, 10, 0]]
** centroid: 7, normalized-entropy: 0.6079696120060726, [(1, 57), (2, 10)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23074204308539628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23074204308539628, 0.15791658798232674] ***
*** starting iteration: 2; err: [Inf, 0.23074204308539628, 0.15791658798232674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23074204308539628, 0.15791658798232674, 0.1485280433166772] ***
*** starting iteration: 3; err: [Inf, 0.23074204308539628, 0.15791658798232674, 0.1485280433166772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23074204308539628, 0.15791658798232674, 0.1485280433166772, 0.1452982871979475] ***
*** starting iteration: 4; err: [Inf, 0.23074204308539628, 0.15791658798232674, 0.1485280433166772, 0.1452982871979475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23074204308539628, 0.15791658798232674, 0.1485280433166772, 0.1452982871979475, 0.14414423061627896] ***
*** starting iteration: 5; err: [Inf, 0.23074204308539628, 0.15791658798232674, 0.1485280433166772, 0.1452982871979475, 0.14414423061627896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23074204308539628, 0.15791658798232674, 0.1485280433166772, 0.1452982871979475, 0.14414423061627896, 0.14299176392611115] ***
*** starting iteration: 6; err: [Inf, 0.23074204308539628, 0.15791658798232674, 0.1485280433166772, 0.1452982871979475, 0.14414423061627896, 0.14299176392611115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23074204308539628, 0.15791658798232674, 0.1485280433166772, 0.1452982871979475, 0.14414423061627896, 0.14299176392611115, 0.14226760339923203] ***
*** finished computation of 7 references, err: [Inf, 0.23074204308539628, 0.15791658798232674, 0.1485280433166772, 0.1452982871979475, 0.14414423061627896, 0.14299176392611115, 0.14226760339923203] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 75, 0]]
** centroid: 1, normalized-entropy: 0.17378132267943294, [(1, 2), (2, 75)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [60, 30, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 60), (2, 30)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 65, 19]]
** centroid: 3, normalized-entropy: 0.7713111060849788, [(2, 65), (3, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [52, 5, 0]]
** centroid: 4, normalized-entropy: 0.4288109647301171, [(1, 52), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [62, 2, 0]]
** centroid: 5, normalized-entropy: 0.2006223243127146, [(1, 62), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [70, 4, 0]]
** centroid: 6, normalized-entropy: 0.30337483608641397, [(1, 70), (2, 4)]
*** center 7: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18081369574554265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18081369574554265, 0.16094590461533517] ***
*** starting iteration: 2; err: [Inf, 0.18081369574554265, 0.16094590461533517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18081369574554265, 0.16094590461533517, 0.15665371266193687] ***
*** starting iteration: 3; err: [Inf, 0.18081369574554265, 0.16094590461533517, 0.15665371266193687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18081369574554265, 0.16094590461533517, 0.15665371266193687, 0.15408245421014727] ***
*** starting iteration: 4; err: [Inf, 0.18081369574554265, 0.16094590461533517, 0.15665371266193687, 0.15408245421014727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18081369574554265, 0.16094590461533517, 0.15665371266193687, 0.15408245421014727, 0.1526426664441824] ***
*** starting iteration: 5; err: [Inf, 0.18081369574554265, 0.16094590461533517, 0.15665371266193687, 0.15408245421014727, 0.1526426664441824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18081369574554265, 0.16094590461533517, 0.15665371266193687, 0.15408245421014727, 0.1526426664441824, 0.1518041173927486] ***
*** finished computation of 7 references, err: [Inf, 0.18081369574554265, 0.16094590461533517, 0.15665371266193687, 0.15408245421014727, 0.1526426664441824, 0.1518041173927486] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 15]]
** centroid: 1, normalized-entropy: 0.9992492479956566, [(2, 16), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [6, 74, 0]]
** centroid: 2, normalized-entropy: 0.3843115441264972, [(1, 6), (2, 74)]
*** center 3: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [62, 5, 0]]
** centroid: 4, normalized-entropy: 0.3829576722723533, [(1, 62), (2, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [18, 52, 0]]
** centroid: 6, normalized-entropy: 0.8224042259549892, [(1, 18), (2, 52)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 41, 7]]
** centroid: 7, normalized-entropy: 0.5993142373098089, [(2, 41), (3, 7)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24784113734401764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24784113734401764, 0.1892222701832652] ***
*** starting iteration: 2; err: [Inf, 0.24784113734401764, 0.1892222701832652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24784113734401764, 0.1892222701832652, 0.1563311731349677] ***
*** starting iteration: 3; err: [Inf, 0.24784113734401764, 0.1892222701832652, 0.1563311731349677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24784113734401764, 0.1892222701832652, 0.1563311731349677, 0.15031440214067698] ***
*** starting iteration: 4; err: [Inf, 0.24784113734401764, 0.1892222701832652, 0.1563311731349677, 0.15031440214067698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24784113734401764, 0.1892222701832652, 0.1563311731349677, 0.15031440214067698, 0.14910894179530443] ***
*** starting iteration: 5; err: [Inf, 0.24784113734401764, 0.1892222701832652, 0.1563311731349677, 0.15031440214067698, 0.14910894179530443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24784113734401764, 0.1892222701832652, 0.1563311731349677, 0.15031440214067698, 0.14910894179530443, 0.14853351910971105] ***
*** finished computation of 7 references, err: [Inf, 0.24784113734401764, 0.1892222701832652, 0.1563311731349677, 0.15031440214067698, 0.14910894179530443, 0.14853351910971105] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 75, 27]]
** centroid: 1, normalized-entropy: 0.8337649072106652, [(2, 75), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [38, 25, 0]]
** centroid: 2, normalized-entropy: 0.9690632527820694, [(1, 38), (2, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [58, 43, 0]]
** centroid: 3, normalized-entropy: 0.9840304711717017, [(1, 58), (2, 43)]
*** center 4: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [45, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [31, 37, 0]]
** centroid: 7, normalized-entropy: 0.9943766625699823, [(1, 31), (2, 37)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23856906163971872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23856906163971872, 0.18590780422044917] ***
*** starting iteration: 2; err: [Inf, 0.23856906163971872, 0.18590780422044917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23856906163971872, 0.18590780422044917, 0.16162868572957814] ***
*** starting iteration: 3; err: [Inf, 0.23856906163971872, 0.18590780422044917, 0.16162868572957814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23856906163971872, 0.18590780422044917, 0.16162868572957814, 0.14434990190155805] ***
*** starting iteration: 4; err: [Inf, 0.23856906163971872, 0.18590780422044917, 0.16162868572957814, 0.14434990190155805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23856906163971872, 0.18590780422044917, 0.16162868572957814, 0.14434990190155805, 0.13897707656677813] ***
*** starting iteration: 5; err: [Inf, 0.23856906163971872, 0.18590780422044917, 0.16162868572957814, 0.14434990190155805, 0.13897707656677813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23856906163971872, 0.18590780422044917, 0.16162868572957814, 0.14434990190155805, 0.13897707656677813, 0.13807054910808803] ***
*** finished computation of 7 references, err: [Inf, 0.23856906163971872, 0.18590780422044917, 0.16162868572957814, 0.14434990190155805, 0.13897707656677813, 0.13807054910808803] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [65, 23, 0]]
** centroid: 1, normalized-entropy: 0.828797154590015, [(1, 65), (2, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [54, 7, 0]]
** centroid: 2, normalized-entropy: 0.5140912790181233, [(1, 54), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 76, 15]]
** centroid: 3, normalized-entropy: 0.6457523329916605, [(2, 76), (3, 15)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 67, 3]]
** centroid: 4, normalized-entropy: 0.25524211319019174, [(2, 67), (3, 3)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [32, 6, 0]]
** centroid: 5, normalized-entropy: 0.6292492238560344, [(1, 32), (2, 6)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [58, 15, 0]]
** centroid: 6, normalized-entropy: 0.7327525499549903, [(1, 58), (2, 15)]
*** center 7: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2036526332106441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036526332106441, 0.16448435880150647] ***
*** starting iteration: 2; err: [Inf, 0.2036526332106441, 0.16448435880150647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036526332106441, 0.16448435880150647, 0.15007685514166952] ***
*** starting iteration: 3; err: [Inf, 0.2036526332106441, 0.16448435880150647, 0.15007685514166952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036526332106441, 0.16448435880150647, 0.15007685514166952, 0.14784449035208672] ***
*** starting iteration: 4; err: [Inf, 0.2036526332106441, 0.16448435880150647, 0.15007685514166952, 0.14784449035208672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036526332106441, 0.16448435880150647, 0.15007685514166952, 0.14784449035208672, 0.14666539440350607] ***
*** starting iteration: 5; err: [Inf, 0.2036526332106441, 0.16448435880150647, 0.15007685514166952, 0.14784449035208672, 0.14666539440350607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036526332106441, 0.16448435880150647, 0.15007685514166952, 0.14784449035208672, 0.14666539440350607, 0.1457957580378279] ***
*** finished computation of 7 references, err: [Inf, 0.2036526332106441, 0.16448435880150647, 0.15007685514166952, 0.14784449035208672, 0.14666539440350607, 0.1457957580378279] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [58, 17, 0]]
** centroid: 1, normalized-entropy: 0.7721551435804817, [(1, 58), (2, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [72, 6, 0]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(1, 72), (2, 6)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 67, 4]]
** centroid: 4, normalized-entropy: 0.3127333763966432, [(2, 67), (3, 4)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 55, 19]]
** centroid: 5, normalized-entropy: 0.8218127305034848, [(2, 55), (3, 19)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [35, 14, 0]]
** centroid: 6, normalized-entropy: 0.8631205685666311, [(1, 35), (2, 14)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [47, 26, 0]]
** centroid: 7, normalized-entropy: 0.9394532068181357, [(1, 47), (2, 26)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22685428059473633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22685428059473633, 0.17045481757633388] ***
*** starting iteration: 2; err: [Inf, 0.22685428059473633, 0.17045481757633388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22685428059473633, 0.17045481757633388, 0.15034576923120768] ***
*** starting iteration: 3; err: [Inf, 0.22685428059473633, 0.17045481757633388, 0.15034576923120768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22685428059473633, 0.17045481757633388, 0.15034576923120768, 0.14557875009812415] ***
*** starting iteration: 4; err: [Inf, 0.22685428059473633, 0.17045481757633388, 0.15034576923120768, 0.14557875009812415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22685428059473633, 0.17045481757633388, 0.15034576923120768, 0.14557875009812415, 0.14430882298201322] ***
*** starting iteration: 5; err: [Inf, 0.22685428059473633, 0.17045481757633388, 0.15034576923120768, 0.14557875009812415, 0.14430882298201322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22685428059473633, 0.17045481757633388, 0.15034576923120768, 0.14557875009812415, 0.14430882298201322, 0.14364333433192222] ***
*** finished computation of 7 references, err: [Inf, 0.22685428059473633, 0.17045481757633388, 0.15034576923120768, 0.14557875009812415, 0.14430882298201322, 0.14364333433192222] ***
*** center 1: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [73, 2, 0]]
** centroid: 2, normalized-entropy: 0.1773894531859976, [(1, 73), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [30, 32, 0]]
** centroid: 3, normalized-entropy: 0.9992492479956566, [(1, 30), (2, 32)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 75, 21]]
** centroid: 4, normalized-entropy: 0.7578784625383954, [(2, 75), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [47, 22, 0]]
** centroid: 5, normalized-entropy: 0.903116172156872, [(1, 47), (2, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [5, 60, 0]]
** centroid: 7, normalized-entropy: 0.3912435636292556, [(1, 5), (2, 60)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19753858979512007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19753858979512007, 0.1589623884493485] ***
*** starting iteration: 2; err: [Inf, 0.19753858979512007, 0.1589623884493485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19753858979512007, 0.1589623884493485, 0.1509765508864075] ***
*** starting iteration: 3; err: [Inf, 0.19753858979512007, 0.1589623884493485, 0.1509765508864075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19753858979512007, 0.1589623884493485, 0.1509765508864075, 0.149215529486537] ***
*** starting iteration: 4; err: [Inf, 0.19753858979512007, 0.1589623884493485, 0.1509765508864075, 0.149215529486537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19753858979512007, 0.1589623884493485, 0.1509765508864075, 0.149215529486537, 0.14800696831289678] ***
*** starting iteration: 5; err: [Inf, 0.19753858979512007, 0.1589623884493485, 0.1509765508864075, 0.149215529486537, 0.14800696831289678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19753858979512007, 0.1589623884493485, 0.1509765508864075, 0.149215529486537, 0.14800696831289678, 0.1476949991583824] ***
*** finished computation of 7 references, err: [Inf, 0.19753858979512007, 0.1589623884493485, 0.1509765508864075, 0.149215529486537, 0.14800696831289678, 0.1476949991583824] ***
*** center 1: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [22, 48, 0]]
** centroid: 2, normalized-entropy: 0.8980587934501658, [(1, 22), (2, 48)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 10, 0]]
** centroid: 3, normalized-entropy: 0.656540281386946, [(1, 49), (2, 10)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [69, 3, 0]]
** centroid: 4, normalized-entropy: 0.24988229283318547, [(1, 69), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [67, 19, 0]]
** centroid: 5, normalized-entropy: 0.7618624463753669, [(1, 67), (2, 19)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 42, 25]]
** centroid: 7, normalized-entropy: 0.9530483471581301, [(2, 42), (3, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2259620597427711] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2259620597427711, 0.1747584543675184] ***
*** starting iteration: 2; err: [Inf, 0.2259620597427711, 0.1747584543675184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2259620597427711, 0.1747584543675184, 0.16366978118615225] ***
*** starting iteration: 3; err: [Inf, 0.2259620597427711, 0.1747584543675184, 0.16366978118615225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2259620597427711, 0.1747584543675184, 0.16366978118615225, 0.15696485703997315] ***
*** starting iteration: 4; err: [Inf, 0.2259620597427711, 0.1747584543675184, 0.16366978118615225, 0.15696485703997315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2259620597427711, 0.1747584543675184, 0.16366978118615225, 0.15696485703997315, 0.1519146274290979] ***
*** starting iteration: 5; err: [Inf, 0.2259620597427711, 0.1747584543675184, 0.16366978118615225, 0.15696485703997315, 0.1519146274290979] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2259620597427711, 0.1747584543675184, 0.16366978118615225, 0.15696485703997315, 0.1519146274290979, 0.14837548514083027] ***
*** starting iteration: 6; err: [Inf, 0.2259620597427711, 0.1747584543675184, 0.16366978118615225, 0.15696485703997315, 0.1519146274290979, 0.14837548514083027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2259620597427711, 0.1747584543675184, 0.16366978118615225, 0.15696485703997315, 0.1519146274290979, 0.14837548514083027, 0.1471521492060274] ***
*** starting iteration: 7; err: [Inf, 0.2259620597427711, 0.1747584543675184, 0.16366978118615225, 0.15696485703997315, 0.1519146274290979, 0.14837548514083027, 0.1471521492060274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2259620597427711, 0.1747584543675184, 0.16366978118615225, 0.15696485703997315, 0.1519146274290979, 0.14837548514083027, 0.1471521492060274, 0.14614337281882764] ***
*** starting iteration: 8; err: [Inf, 0.2259620597427711, 0.1747584543675184, 0.16366978118615225, 0.15696485703997315, 0.1519146274290979, 0.14837548514083027, 0.1471521492060274, 0.14614337281882764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2259620597427711, 0.1747584543675184, 0.16366978118615225, 0.15696485703997315, 0.1519146274290979, 0.14837548514083027, 0.1471521492060274, 0.14614337281882764, 0.1456004750384018] ***
*** finished computation of 7 references, err: [Inf, 0.2259620597427711, 0.1747584543675184, 0.16366978118615225, 0.15696485703997315, 0.1519146274290979, 0.14837548514083027, 0.1471521492060274, 0.14614337281882764, 0.1456004750384018] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [55, 18, 0]]
** centroid: 1, normalized-entropy: 0.8058049113482652, [(1, 55), (2, 18)]
*** center 2: selecting labels [2] (freq >= 2) [from [1, 65, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [76, 3, 0]]
** centroid: 4, normalized-entropy: 0.23292785546981223, [(1, 76), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [63, 10, 0]]
** centroid: 5, normalized-entropy: 0.576291461217437, [(1, 63), (2, 10)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 23, 25]]
** centroid: 7, normalized-entropy: 0.9987472979361685, [(2, 23), (3, 25)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22459382784180343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22459382784180343, 0.16936713545769452] ***
*** starting iteration: 2; err: [Inf, 0.22459382784180343, 0.16936713545769452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22459382784180343, 0.16936713545769452, 0.15313631368800998] ***
*** starting iteration: 3; err: [Inf, 0.22459382784180343, 0.16936713545769452, 0.15313631368800998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22459382784180343, 0.16936713545769452, 0.15313631368800998, 0.14717830504942686] ***
*** starting iteration: 4; err: [Inf, 0.22459382784180343, 0.16936713545769452, 0.15313631368800998, 0.14717830504942686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22459382784180343, 0.16936713545769452, 0.15313631368800998, 0.14717830504942686, 0.14454491977952422] ***
*** starting iteration: 5; err: [Inf, 0.22459382784180343, 0.16936713545769452, 0.15313631368800998, 0.14717830504942686, 0.14454491977952422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22459382784180343, 0.16936713545769452, 0.15313631368800998, 0.14717830504942686, 0.14454491977952422, 0.14286577016115187] ***
*** starting iteration: 6; err: [Inf, 0.22459382784180343, 0.16936713545769452, 0.15313631368800998, 0.14717830504942686, 0.14454491977952422, 0.14286577016115187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22459382784180343, 0.16936713545769452, 0.15313631368800998, 0.14717830504942686, 0.14454491977952422, 0.14286577016115187, 0.1417257674895227] ***
*** starting iteration: 7; err: [Inf, 0.22459382784180343, 0.16936713545769452, 0.15313631368800998, 0.14717830504942686, 0.14454491977952422, 0.14286577016115187, 0.1417257674895227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22459382784180343, 0.16936713545769452, 0.15313631368800998, 0.14717830504942686, 0.14454491977952422, 0.14286577016115187, 0.1417257674895227, 0.1407389119565487] ***
*** finished computation of 7 references, err: [Inf, 0.22459382784180343, 0.16936713545769452, 0.15313631368800998, 0.14717830504942686, 0.14454491977952422, 0.14286577016115187, 0.1417257674895227, 0.1407389119565487] ***
*** center 1: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [41, 29, 0]]
** centroid: 2, normalized-entropy: 0.9786961448300948, [(1, 41), (2, 29)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [69, 8, 0]]
** centroid: 3, normalized-entropy: 0.481225663841737, [(1, 69), (2, 8)]
*** center 4: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [5, 62, 0]]
** centroid: 5, normalized-entropy: 0.3829576722723533, [(1, 5), (2, 62)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [37, 6, 0]]
** centroid: 6, normalized-entropy: 0.5830194167347007, [(1, 37), (2, 6)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 75, 18]]
** centroid: 7, normalized-entropy: 0.708835673332196, [(2, 75), (3, 18)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21453238601330668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21453238601330668, 0.17336428355425595] ***
*** starting iteration: 2; err: [Inf, 0.21453238601330668, 0.17336428355425595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21453238601330668, 0.17336428355425595, 0.1622011501956731] ***
*** starting iteration: 3; err: [Inf, 0.21453238601330668, 0.17336428355425595, 0.1622011501956731] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21453238601330668, 0.17336428355425595, 0.1622011501956731, 0.15291731905937195] ***
*** starting iteration: 4; err: [Inf, 0.21453238601330668, 0.17336428355425595, 0.1622011501956731, 0.15291731905937195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21453238601330668, 0.17336428355425595, 0.1622011501956731, 0.15291731905937195, 0.14723488825932146] ***
*** starting iteration: 5; err: [Inf, 0.21453238601330668, 0.17336428355425595, 0.1622011501956731, 0.15291731905937195, 0.14723488825932146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21453238601330668, 0.17336428355425595, 0.1622011501956731, 0.15291731905937195, 0.14723488825932146, 0.14446591034904122] ***
*** starting iteration: 6; err: [Inf, 0.21453238601330668, 0.17336428355425595, 0.1622011501956731, 0.15291731905937195, 0.14723488825932146, 0.14446591034904122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21453238601330668, 0.17336428355425595, 0.1622011501956731, 0.15291731905937195, 0.14723488825932146, 0.14446591034904122, 0.14280579466745258] ***
*** starting iteration: 7; err: [Inf, 0.21453238601330668, 0.17336428355425595, 0.1622011501956731, 0.15291731905937195, 0.14723488825932146, 0.14446591034904122, 0.14280579466745258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21453238601330668, 0.17336428355425595, 0.1622011501956731, 0.15291731905937195, 0.14723488825932146, 0.14446591034904122, 0.14280579466745258, 0.14113410755991937] ***
*** starting iteration: 8; err: [Inf, 0.21453238601330668, 0.17336428355425595, 0.1622011501956731, 0.15291731905937195, 0.14723488825932146, 0.14446591034904122, 0.14280579466745258, 0.14113410755991937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21453238601330668, 0.17336428355425595, 0.1622011501956731, 0.15291731905937195, 0.14723488825932146, 0.14446591034904122, 0.14280579466745258, 0.14113410755991937, 0.14046359949279577] ***
*** finished computation of 7 references, err: [Inf, 0.21453238601330668, 0.17336428355425595, 0.1622011501956731, 0.15291731905937195, 0.14723488825932146, 0.14446591034904122, 0.14280579466745258, 0.14113410755991937, 0.14046359949279577] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 45, 21]]
** centroid: 1, normalized-entropy: 0.9023932827949788, [(2, 45), (3, 21)]
*** center 2: selecting labels [2] (freq >= 2) [from [1, 73, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [75, 10, 0]]
** centroid: 5, normalized-entropy: 0.5225593745369407, [(1, 75), (2, 10)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [84, 4, 0]]
** centroid: 6, normalized-entropy: 0.2667649878030262, [(1, 84), (2, 4)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [4, 59, 0]]
** centroid: 7, normalized-entropy: 0.3411538931451763, [(1, 4), (2, 59)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2454282025564462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2454282025564462, 0.17351666464656593] ***
*** starting iteration: 2; err: [Inf, 0.2454282025564462, 0.17351666464656593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2454282025564462, 0.17351666464656593, 0.16265890638157726] ***
*** starting iteration: 3; err: [Inf, 0.2454282025564462, 0.17351666464656593, 0.16265890638157726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2454282025564462, 0.17351666464656593, 0.16265890638157726, 0.15390185666526668] ***
*** starting iteration: 4; err: [Inf, 0.2454282025564462, 0.17351666464656593, 0.16265890638157726, 0.15390185666526668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2454282025564462, 0.17351666464656593, 0.16265890638157726, 0.15390185666526668, 0.1481326714772731] ***
*** starting iteration: 5; err: [Inf, 0.2454282025564462, 0.17351666464656593, 0.16265890638157726, 0.15390185666526668, 0.1481326714772731] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2454282025564462, 0.17351666464656593, 0.16265890638157726, 0.15390185666526668, 0.1481326714772731, 0.14430116092786194] ***
*** starting iteration: 6; err: [Inf, 0.2454282025564462, 0.17351666464656593, 0.16265890638157726, 0.15390185666526668, 0.1481326714772731, 0.14430116092786194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2454282025564462, 0.17351666464656593, 0.16265890638157726, 0.15390185666526668, 0.1481326714772731, 0.14430116092786194, 0.1429239477450028] ***
*** starting iteration: 7; err: [Inf, 0.2454282025564462, 0.17351666464656593, 0.16265890638157726, 0.15390185666526668, 0.1481326714772731, 0.14430116092786194, 0.1429239477450028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2454282025564462, 0.17351666464656593, 0.16265890638157726, 0.15390185666526668, 0.1481326714772731, 0.14430116092786194, 0.1429239477450028, 0.14239211526606232] ***
*** finished computation of 7 references, err: [Inf, 0.2454282025564462, 0.17351666464656593, 0.16265890638157726, 0.15390185666526668, 0.1481326714772731, 0.14430116092786194, 0.1429239477450028, 0.14239211526606232] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [31, 4, 0]]
** centroid: 1, normalized-entropy: 0.5127091420308771, [(1, 31), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [64, 34, 0]]
** centroid: 2, normalized-entropy: 0.9313043685793762, [(1, 64), (2, 34)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [60, 12, 0]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(1, 60), (2, 12)]
*** center 4: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 72, 23]]
** centroid: 5, normalized-entropy: 0.7985237652450764, [(2, 72), (3, 23)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 68, 0]]
** centroid: 6, normalized-entropy: 0.40597703847557104, [(1, 6), (2, 68)]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1918915052684024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918915052684024, 0.15325542113184928] ***
*** starting iteration: 2; err: [Inf, 0.1918915052684024, 0.15325542113184928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918915052684024, 0.15325542113184928, 0.152180711036548] ***
*** starting iteration: 3; err: [Inf, 0.1918915052684024, 0.15325542113184928, 0.152180711036548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918915052684024, 0.15325542113184928, 0.152180711036548, 0.15172075871378182] ***
*** finished computation of 7 references, err: [Inf, 0.1918915052684024, 0.15325542113184928, 0.152180711036548, 0.15172075871378182] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [9, 19, 0]]
** centroid: 1, normalized-entropy: 0.9059282160429994, [(1, 9), (2, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [75, 25, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 75), (2, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 19, 0]]
** centroid: 3, normalized-entropy: 0.8546480601169081, [(1, 49), (2, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 61, 28]]
** centroid: 5, normalized-entropy: 0.898419774686072, [(2, 61), (3, 28)]
*** center 6: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 53, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24126408888958395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24126408888958395, 0.17164346051681786] ***
*** starting iteration: 2; err: [Inf, 0.24126408888958395, 0.17164346051681786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24126408888958395, 0.17164346051681786, 0.15816012169164606] ***
*** starting iteration: 3; err: [Inf, 0.24126408888958395, 0.17164346051681786, 0.15816012169164606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24126408888958395, 0.17164346051681786, 0.15816012169164606, 0.15504795015975834] ***
*** starting iteration: 4; err: [Inf, 0.24126408888958395, 0.17164346051681786, 0.15816012169164606, 0.15504795015975834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24126408888958395, 0.17164346051681786, 0.15816012169164606, 0.15504795015975834, 0.15308663619309665] ***
*** starting iteration: 5; err: [Inf, 0.24126408888958395, 0.17164346051681786, 0.15816012169164606, 0.15504795015975834, 0.15308663619309665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24126408888958395, 0.17164346051681786, 0.15816012169164606, 0.15504795015975834, 0.15308663619309665, 0.15214572442509233] ***
*** finished computation of 7 references, err: [Inf, 0.24126408888958395, 0.17164346051681786, 0.15816012169164606, 0.15504795015975834, 0.15308663619309665, 0.15214572442509233] ***
*** center 1: selecting labels [1] (freq >= 2) [from [62, 1, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [2, 72, 0]]
** centroid: 2, normalized-entropy: 0.1792560669283214, [(1, 2), (2, 72)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 72, 21]]
** centroid: 3, normalized-entropy: 0.7706290693639406, [(2, 72), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [41, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [25, 6, 0]]
** centroid: 5, normalized-entropy: 0.708835673332196, [(1, 25), (2, 6)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [95, 29, 0]]
** centroid: 6, normalized-entropy: 0.7846984744986523, [(1, 95), (2, 29)]
*** center 7: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 367,3 => 44,1 => 589), Dict(2 => 326,3 => 36,1 => 638))
[ Info: ===== scores for single classifier: {"micro_f1":0.932,"precision":0.932,"recall":0.932,"macro_recall":0.9457349391239808,"macro_f1":0.88495670995671,"accuracy":0.932,"class_f1":{"2":0.9,"3":0.7954545454545455,"1":0.9594155844155844},"class_precision":{"2":0.864406779661017,"3":0.6730769230769231,"1":0.9949494949494949},"class_recall":{"2":0.9386503067484663,"3":0.9722222222222222,"1":0.9263322884012539}}
[ Info: ===== scores for 1: {"micro_f1":0.98,"precision":0.98,"recall":0.98,"macro_recall":0.9768136552037546,"macro_f1":0.9758611579826489,"accuracy":0.98,"class_f1":{"2":0.9695121951219513,"3":0.9722222222222222,"1":0.9858490566037736},"class_precision":{"2":0.9636363636363636,"3":0.9722222222222222,"1":0.9889589905362776},"class_recall":{"2":0.9754601226993865,"3":0.9722222222222222,"1":0.9827586206896551}}
[ Info: ===== scores for 5: {"micro_f1":0.96,"precision":0.96,"recall":0.96,"macro_recall":0.9601276854291451,"macro_f1":0.952383299765731,"accuracy":0.96,"class_f1":{"2":0.9416909620991253,"3":0.9444444444444444,"1":0.9710144927536233},"class_precision":{"2":0.8972222222222223,"3":0.9444444444444444,"1":0.9983443708609272},"class_recall":{"2":0.99079754601227,"3":0.9444444444444444,"1":0.945141065830721}}
[ Info: ===== scores for 7: {"micro_f1":0.964,"precision":0.964,"recall":0.964,"macro_recall":0.9714543716553449,"macro_f1":0.959907952691767,"accuracy":0.964,"class_f1":{"2":0.9473684210526316,"3":0.9589041095890412,"1":0.9734513274336283},"class_precision":{"2":0.9050279329608939,"3":0.9459459459459459,"1":1.0},"class_recall":{"2":0.9938650306748467,"3":0.9722222222222222,"1":0.9482758620689655}}
[ Info: ===== scores for 9: {"micro_f1":0.964,"precision":0.964,"recall":0.964,"macro_recall":0.9694542562640723,"macro_f1":0.9441935524225328,"accuracy":0.964,"class_f1":{"2":0.9467455621301776,"3":0.9090909090909091,"1":0.9767441860465117},"class_precision":{"2":0.9142857142857143,"3":0.8536585365853658,"1":1.0},"class_recall":{"2":0.9815950920245399,"3":0.9722222222222222,"1":0.9545454545454546}}
[ Info: ===== scores for 11: {"micro_f1":0.962,"precision":0.962,"recall":0.962,"macro_recall":0.9679092953368392,"macro_f1":0.9390486110451538,"accuracy":0.962,"class_f1":{"2":0.9437869822485209,"3":0.8974358974358975,"1":0.9759229534510433},"class_precision":{"2":0.9114285714285715,"3":0.8333333333333334,"1":1.0},"class_recall":{"2":0.9785276073619632,"3":0.9722222222222222,"1":0.9529780564263323}}
(score = 0.974, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.98, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.98, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.965, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.959, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.959, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.96, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.96, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.959, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.959, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.98,"k":1,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.98,"precision":0.98,"recall":0.98,"macro_recall":0.9768136552037546,"macro_f1":0.9758611579826489,"accuracy":0.98,"class_f1":{"2":0.9695121951219513,"3":0.9722222222222222,"1":0.9858490566037736},"class_precision":{"2":0.9636363636363636,"3":0.9722222222222222,"1":0.9889589905362776},"class_recall":{"2":0.9754601226993865,"3":0.9722222222222222,"1":0.9827586206896551}}
Test Summary: | Pass  Total
AKNC          |    8      8
[81, 2, 4, 2, 1, 2, 2, 1, 1, 9, 1, 42, 2, 7, 6, 1, 6, 6, 5, 3, 1, 6, 4, 26, 5, 19, 32, 3, 2, 5, 12, 13, 6, 10, 9, 3, 17, 6, 1, 9, 12, 6, 4, 2, 37, 9, 41, 20, 5, 8, 39, 8, 19, 3, 21, 2, 13, 8, 49, 5, 45, 12, 3, 2, 18, 24, 40, 9, 87, 6, 298, 39, 2, 2, 16, 24, 27, 4, 5, 15, 47, 5, 29, 10, 4, 166, 7, 14, 6, 15, 35, 11, 53, 18, 3, 29, 1, 1, 17, 2, 7, 46, 7, 114, 5, 51, 7, 3, 51, 3, 37, 6, 11, 7, 4, 38, 86, 5, 7, 58, 29, 15, 15, 17, 10, 14, 9, 80, 15, 35, 8, 66, 11, 27, 11, 17, 1, 9, 3, 25, 18, 16, 37, 10, 21, 12, 25, 11, 322, 21, 212, 10, 6, 31, 12, 8, 96, 69, 14, 155, 36, 15, 21, 125, 57, 4, 27, 22, 9, 23, 4, 95, 7, 37, 78, 19, 27, 6, 254, 8, 11, 26, 116, 9, 126, 82, 20, 6, 13, 66, 18, 9, 17, 24, 4, 11, 23, 13, 22, 17, 3, 9, 8, 30, 4, 18, 46, 54, 80, 55, 44, 176, 19, 61, 27, 13, 3, 29, 7, 7, 5, 2, 43, 23, 16, 16, 56, 1, 6, 7, 47, 7, 27, 5, 7, 17, 24, 45, 50, 11, 15, 39, 124, 11, 31, 12, 9, 5, 3, 75, 39, 21, 11, 4, 44, 170, 13, 1, 54, 15, 5, 22, 1288, 33, 5, 39, 29, 9, 192, 1, 25, 12, 5, 70, 14, 59, 27, 253, 14, 74, 33, 9, 9, 33, 32, 10, 41, 91, 12, 29, 24, 15, 7, 52, 18, 32, 113, 21, 12, 9]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6209999999999998, speedup = 0.23217557359019556, eval_ratio = 0.087077)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3986545138888892,"recall":0.3897569444444447,"f1":null,"seconds":0.00020812638103961945,"exhaustive_search_seconds":0.0004522651433944702,"evaluations":507.53125,"distances_sum":1730.327084362241}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5859374999999997,"recall":0.5859374999999997,"f1":null,"seconds":0.000313514843583107,"exhaustive_search_seconds":0.0004522651433944702,"evaluations":688.2734375,"distances_sum":1679.0269164755446}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.7039930555555547,"recall":0.7039930555555547,"f1":null,"seconds":0.00045303627848625183,"exhaustive_search_seconds":0.0004522651433944702,"evaluations":857.8828125,"distances_sum":1626.6077139950112}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7586805555555549,"recall":0.7586805555555549,"f1":0.7586805555555549,"seconds":0.0005371980369091034,"exhaustive_search_seconds":0.0004522651433944702,"evaluations":981.875,"distances_sum":1607.4172763205004}
KCenters.DeloneInvIndex> reached performance {"precision":0.8098958333333328,"recall":0.8098958333333328,"f1":0.8098958333333328,"seconds":0.0007691141217947006,"exhaustive_search_seconds":0.0004522651433944702,"evaluations":1131.890625,"distances_sum":1595.1784504375994}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7719999999999998, speedup = 0.700163615994068, eval_ratio = 0.10698699999999998)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
