Julia Version 1.6.0-DEV.139
Commit cfb9b55349 (2020-06-01 16:09 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_27F6X0/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_27F6X0/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2171479007264734
curgen: 20 fitness: 0.2171479007264734
curgen: 30 fitness: 0.2172334944281074
curgen: 40 fitness: 0.2172334944281074
curgen: 50 fitness: 0.2172334944281074
CoordinateCreature{Array{Float64,1}}([-0.22260313425917796], -0.2172334944281074) -0.22260313425917796 -0.2172334944281074
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258300393086406
curgen: 100 fitness: 3.2583188856169953
curgen: 150 fitness: 3.2583490030070137
curgen: 200 fitness: 3.258398365841931
curgen: 250 fitness: 3.2583989281796595
curgen: 300 fitness: 3.2583989281796595
curgen: 350 fitness: 3.258440453831785
curgen: 400 fitness: 3.258445357311015
curgen: 450 fitness: 3.258449957450406
curgen: 500 fitness: 3.258466474949652
CoordinateCreature{Array{Float64,1}}([0.22271534755112818, 0.22277050044323116, 0.2223617250091516, 0.22271635634015807, -0.2230011740833824, -0.22275988749357986, -0.22201610440367078, -0.2227927690685684, 0.22238497677778943, -0.2225319079288822, 0.22256814801763672, -0.22253754500720557, -0.22283604291284004, -0.2224341802500241, -0.2225299317795301], -3.258466474949652) [0.22271534755112818, 0.22277050044323116, 0.2223617250091516, 0.22271635634015807, -0.2230011740833824, -0.22275988749357986, -0.22201610440367078, -0.2227927690685684, 0.22238497677778943, -0.2225319079288822, 0.22256814801763672, -0.22253754500720557, -0.22283604291284004, -0.2224341802500241, -0.2225299317795301] -3.258466474949652
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003199355073491006
curgen: 100 fitness: -0.002471658703512958
curgen: 150 fitness: -0.001535101414873452
curgen: 200 fitness: -0.0012192599175762098
curgen: 250 fitness: -0.0011995616521289776
curgen: 300 fitness: -0.0011995616521289776
curgen: 350 fitness: -0.0009039171961262582
curgen: 400 fitness: -0.0006972057920222596
curgen: 450 fitness: -0.0006940297939195261
curgen: 500 fitness: -0.0006208580289808197
CoordinateCreature{Array{Float64,1}}([0.00017207485531649247, 0.00016430677437690984, -0.00036044508192668596, -0.00026438826207906, 8.949908068528342e-5, -7.209611908882974e-5, 0.0005062828903422162, 0.0003951031289355972, -0.00023354649286627102, -0.0004406322030737522, 0.00024932513062621785, -0.0014096619828379434, -0.0002745795162879248, -0.0002694158722195872, 3.7530023366387846e-5], 0.0006208580289808197) [0.00017207485531649247, 0.00016430677437690984, -0.00036044508192668596, -0.00026438826207906, 8.949908068528342e-5, -7.209611908882974e-5, 0.0005062828903422162, 0.0003951031289355972, -0.00023354649286627102, -0.0004406322030737522, 0.00024932513062621785, -0.0014096619828379434, -0.0002745795162879248, -0.0002694158722195872, 3.7530023366387846e-5] 0.0006208580289808197
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
