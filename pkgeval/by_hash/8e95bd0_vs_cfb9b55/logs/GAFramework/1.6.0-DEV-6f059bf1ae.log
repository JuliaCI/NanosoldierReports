Julia Version 1.6.0-DEV.142
Commit 6f059bf1ae (2020-06-01 16:19 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_Fza4Q3/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_Fza4Q3/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722636291323544
curgen: 20 fitness: 0.21722636291323544
curgen: 30 fitness: 0.21723272398125207
curgen: 40 fitness: 0.21723272398125207
curgen: 50 fitness: 0.21723362534751728
CoordinateCreature{Array{Float64,1}}([0.2225562006302217], -0.21723362534751728) 0.2225562006302217 -0.21723362534751728
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257850088259536
curgen: 100 fitness: 3.2581298185672503
curgen: 150 fitness: 3.258362519024244
curgen: 200 fitness: 3.2583647323608735
curgen: 250 fitness: 3.2583918066374835
curgen: 300 fitness: 3.2583918066374835
curgen: 350 fitness: 3.2583918783487564
curgen: 400 fitness: 3.2583918783487564
curgen: 450 fitness: 3.258432802297018
curgen: 500 fitness: 3.2584350967650697
CoordinateCreature{Array{Float64,1}}([-0.22263741766431983, 0.22257395923062873, -0.22268622528027718, 0.22262199384410758, 0.22258808347322462, 0.22299903725184222, -0.22247770559918323, 0.22256972930442223, 0.22286391498217145, -0.2223542333452906, -0.22291336402632006, -0.22241566641603716, 0.22263513584920597, 0.22158952209352267, 0.22286960851133633], -3.2584350967650697) [-0.22263741766431983, 0.22257395923062873, -0.22268622528027718, 0.22262199384410758, 0.22258808347322462, 0.22299903725184222, -0.22247770559918323, 0.22256972930442223, 0.22286391498217145, -0.2223542333452906, -0.22291336402632006, -0.22241566641603716, 0.22263513584920597, 0.22158952209352267, 0.22286960851133633] -3.2584350967650697
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.00237639961889613
curgen: 100 fitness: -0.0020315419227472375
curgen: 150 fitness: -0.0020185094482201293
curgen: 200 fitness: -0.0019369823852741774
curgen: 250 fitness: -0.0014935566903204744
curgen: 300 fitness: -0.0014935566903204744
curgen: 350 fitness: -0.0013067821748791175
curgen: 400 fitness: -0.0013067821748791175
curgen: 450 fitness: -0.0010165500472680833
curgen: 500 fitness: -0.000981792045280372
CoordinateCreature{Array{Float64,1}}([-0.0001594989254347855, 0.000249472639739711, -5.1412964429686565e-5, 0.0002565065141099716, 0.0020320785212059825, -0.00043374087003270577, -0.0004446859002852481, -0.00031028173701491376, 0.00020972025462321167, -0.00018957222701308974, 1.1619200270659904e-6, -6.567190021423877e-5, 4.74139792140981e-5, 0.00022927998601366393, 0.00020528125458214917], 0.000981792045280372) [-0.0001594989254347855, 0.000249472639739711, -5.1412964429686565e-5, 0.0002565065141099716, 0.0020320785212059825, -0.00043374087003270577, -0.0004446859002852481, -0.00031028173701491376, 0.00020972025462321167, -0.00018957222701308974, 1.1619200270659904e-6, -6.567190021423877e-5, 4.74139792140981e-5, 0.00022927998601366393, 0.00020528125458214917] 0.000981792045280372
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
