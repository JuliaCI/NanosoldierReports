Julia Version 1.6.0-DEV.1120
Commit defde49587 (2020-10-03 04:30 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Reexport ─────────── v0.2.0
  Installed Compat ───────────── v3.18.0
  Installed TimerOutputs ─────── v0.5.6
  Installed Adapt ────────────── v2.3.0
  Installed MacroTools ───────── v0.5.5
  Installed ExprTools ────────── v0.1.2
  Installed GPUArrays ────────── v6.0.1
  Installed CUDA ─────────────── v2.0.0
  Installed BinaryProvider ───── v0.5.10
  Installed GPUCompiler ──────── v0.7.3
  Installed CEnum ────────────── v0.4.1
  Installed NNlib ────────────── v0.7.4
  Installed AbstractFFTs ─────── v0.5.0
  Installed Requires ─────────── v1.1.0
  Installed LLVM ─────────────── v3.2.0
  Installed DataStructures ───── v0.18.6
  Installed BFloat16s ────────── v0.1.0
  Installed OrderedCollections ─ v1.3.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [052768ef] + CUDA v2.0.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v2.3.0
  [ab4f0b2a] + BFloat16s v0.1.0
  [b99e7846] + BinaryProvider v0.5.10
  [fa961155] + CEnum v0.4.1
  [052768ef] + CUDA v2.0.0
  [34da2185] + Compat v3.18.0
  [864edb3b] + DataStructures v0.18.6
  [e2ba6199] + ExprTools v0.1.2
  [0c68f7d7] + GPUArrays v6.0.1
  [61eb1bfa] + GPUCompiler v0.7.3
  [929cbde3] + LLVM v3.2.0
  [1914dd2f] + MacroTools v0.5.5
  [872c559c] + NNlib v0.7.4
  [bac558e1] + OrderedCollections v1.3.1
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [a759f4b9] + TimerOutputs v0.5.6
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing CUDA
Status `/tmp/jl_w6Hve0/Project.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.3.0
  [ab4f0b2a] BFloat16s v0.1.0
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.4.1
  [052768ef] CUDA v2.0.0
  [864edb3b] DataStructures v0.18.6
  [e2ba6199] ExprTools v0.1.2
  [7a1cc6ca] FFTW v1.2.4
  [1a297f60] FillArrays v0.9.6
  [f6369f11] ForwardDiff v0.10.12
  [0c68f7d7] GPUArrays v6.0.1
  [61eb1bfa] GPUCompiler v0.7.3
  [929cbde3] LLVM v3.2.0
  [1914dd2f] MacroTools v0.5.5
  [872c559c] NNlib v0.7.4
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [a759f4b9] TimerOutputs v0.5.6
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_w6Hve0/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.3.0
  [ab4f0b2a] BFloat16s v0.1.0
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.4.1
  [052768ef] CUDA v2.0.0
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.18.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.18.6
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [e2ba6199] ExprTools v0.1.2
  [7a1cc6ca] FFTW v1.2.4
  [f5851436] FFTW_jll v3.3.9+5
  [1a297f60] FillArrays v0.9.6
  [f6369f11] ForwardDiff v0.10.12
  [0c68f7d7] GPUArrays v6.0.1
  [61eb1bfa] GPUCompiler v0.7.3
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [929cbde3] LLVM v3.2.0
  [856f044c] MKL_jll v2020.2.254+0
  [1914dd2f] MacroTools v0.5.5
  [872c559c] NNlib v0.7.4
  [77ba4419] NaNMath v0.3.4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.1
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [a759f4b9] TimerOutputs v0.5.6
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
┌ Error: Could not initialize CUDA
│   exception =
│    could not load library "libcuda"
│    libcuda.so: cannot open shared object file: No such file or directory
│    Stacktrace:
│      [1] dlopen(s::String, flags::UInt32; throw_error::Bool)
│        @ Base.Libc.Libdl ./libdl.jl:114
│      [2] dlopen
│        @ ./libdl.jl:114 [inlined]
│      [3] #dlopen#2
│        @ ./libdl.jl:110 [inlined]
│      [4] dlopen
│        @ ./libdl.jl:110 [inlined]
│      [5] (::CUDA.var"#2976#cache_fptr!#615")()
│        @ CUDA ~/.julia/packages/CUDA/1DBvk/lib/utils/call.jl:31
│      [6] macro expansion
│        @ ~/.julia/packages/CUDA/1DBvk/lib/utils/call.jl:39 [inlined]
│      [7] __configure__(show_reason::Bool)
│        @ CUDA ~/.julia/packages/CUDA/1DBvk/src/initialization.jl:94
│      [8] macro expansion
│        @ ~/.julia/packages/CUDA/1DBvk/src/initialization.jl:29 [inlined]
│      [9] macro expansion
│        @ ./lock.jl:190 [inlined]
│     [10] _functional(show_reason::Bool)
│        @ CUDA ~/.julia/packages/CUDA/1DBvk/src/initialization.jl:26
│     [11] functional(show_reason::Bool)
│        @ CUDA ~/.julia/packages/CUDA/1DBvk/src/initialization.jl:19
│     [12] macro expansion
│        @ ~/.julia/packages/CUDA/1DBvk/src/initialization.jl:50 [inlined]
│     [13] toolkit_release()
│        @ CUDA ~/.julia/packages/CUDA/1DBvk/deps/bindeps.jl:32
│     [14] top-level scope
│        @ ~/.julia/packages/CUDA/1DBvk/test/runtests.jl:113
│     [15] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [16] top-level scope
│        @ none:6
│     [17] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [18] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [19] _start()
│        @ Base ./client.jl:485
└ @ CUDA ~/.julia/packages/CUDA/1DBvk/src/initialization.jl:101
ERROR: LoadError: CUDA.jl did not successfully initialize, and is not usable.
If you did not see any other error message, try again in a new session
with the JULIA_DEBUG environment variable set to 'CUDA'.
Stacktrace:
 [1] error(s::String)
   @ Base ./error.jl:33
 [2] macro expansion
   @ ~/.julia/packages/CUDA/1DBvk/src/initialization.jl:51 [inlined]
 [3] toolkit_release()
   @ CUDA ~/.julia/packages/CUDA/1DBvk/deps/bindeps.jl:32
 [4] top-level scope
   @ ~/.julia/packages/CUDA/1DBvk/test/runtests.jl:113
 [5] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [6] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/CUDA/1DBvk/test/runtests.jl:113
ERROR: Package CUDA errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1609
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:331
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:318
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
