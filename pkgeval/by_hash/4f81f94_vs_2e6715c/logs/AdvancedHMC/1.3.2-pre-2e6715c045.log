Julia Version 1.3.2-pre.0
Commit 2e6715c045 (2019-12-31 00:49 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed DataAPI ──────────── v1.1.0
 Installed ProgressMeter ────── v1.2.0
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed Rmath ────────────── v0.6.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed DataStructures ───── v0.17.9
 Installed MacroTools ───────── v0.5.4
 Installed StaticArrays ─────── v0.12.1
 Installed ArrayLayouts ─────── v0.1.5
 Installed BinaryProvider ───── v0.5.8
 Installed Missings ─────────── v0.4.3
 Installed OrderedCollections ─ v1.1.0
 Installed Parameters ───────── v0.12.0
 Installed Requires ─────────── v1.0.1
 Installed InplaceOps ───────── v0.3.0
 Installed FillArrays ───────── v0.8.4
 Installed StatsBase ────────── v0.32.0
 Installed SortingAlgorithms ── v0.3.1
 Installed ArgCheck ─────────── v1.0.1
 Installed SpecialFunctions ─── v0.9.0
 Installed StatsFuns ────────── v0.9.3
 Installed LazyArrays ───────── v0.14.11
  Updating `~/.julia/environments/v1.3/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
   Testing AdvancedHMC
 Resolving package versions...
 Installed Bijectors ─────────────────── v0.5.2
 Installed ExponentialUtilities ──────── v1.6.0
 Installed ForwardDiff ───────────────── v0.10.9
 Installed Zygote ────────────────────── v0.4.7
 Installed Distributions ─────────────── v0.22.4
 Installed UnicodePlots ──────────────── v1.1.0
 Installed OrdinaryDiffEq ────────────── v5.28.1
 Installed Turing ────────────────────── v0.8.3
 Installed TreeViews ─────────────────── v0.3.0
 Installed IterativeSolvers ──────────── v0.8.1
 Installed Reexport ──────────────────── v0.2.0
 Installed TableTraits ───────────────── v1.0.0
 Installed Roots ─────────────────────── v0.8.4
 Installed SimpleTraits ──────────────── v0.9.1
 Installed Libtask ───────────────────── v0.3.1
 Installed OffsetArrays ──────────────── v1.0.2
 Installed FunctionWrappers ──────────── v1.0.0
 Installed DiffEqBase ────────────────── v6.13.3
 Installed IRTools ───────────────────── v0.3.1
 Installed RecursiveArrayTools ───────── v2.0.5
 Installed Showoff ───────────────────── v0.3.1
 Installed Tracker ───────────────────── v0.2.6
 Installed SparseDiffTools ───────────── v1.3.3
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed LineSearches ──────────────── v7.0.1
 Installed DataValueInterfaces ───────── v1.0.0
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed PositiveFactorizations ────── v0.2.3
 Installed Adapt ─────────────────────── v1.0.0
 Installed LogDensityProblems ────────── v0.10.1
 Installed DiffRules ─────────────────── v1.0.0
 Installed ArrayInterface ────────────── v2.4.1
 Installed DistributionsAD ───────────── v0.2.0
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed DynamicPPL ────────────────── v0.1.1
 Installed CommonSubexpressions ──────── v0.2.0
 Installed NNlib ─────────────────────── v0.6.4
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed FFTW ──────────────────────── v1.2.0
 Installed TransformVariables ────────── v0.3.9
 Installed LightGraphs ───────────────── v1.3.0
 Installed DiffResults ───────────────── v1.0.2
 Installed NaNMath ───────────────────── v0.3.3
 Installed IterTools ─────────────────── v1.3.0
 Installed DataFrames ────────────────── v0.20.0
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed DocStringExtensions ───────── v0.8.1
 Installed MCMCChains ────────────────── v1.0.2
 Installed QuadGK ────────────────────── v2.3.1
 Installed ChainRulesCore ────────────── v0.6.1
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed NLSolversBase ─────────────── v7.6.1
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed Tables ────────────────────── v0.2.11
 Installed PDMats ────────────────────── v0.9.11
 Installed KernelDensity ─────────────── v0.5.1
 Installed MappedArrays ──────────────── v0.2.2
 Installed FiniteDiff ────────────────── v2.2.0
 Installed MuladdMacro ───────────────── v0.2.2
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed JSON ──────────────────────── v0.21.0
 Installed Interpolations ────────────── v0.12.8
 Installed BenchmarkTools ────────────── v0.4.3
 Installed Optim ─────────────────────── v0.20.1
 Installed GenericSVD ────────────────── v0.2.2
 Installed Ratios ────────────────────── v0.3.1
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed OpenBLAS_jll ──────────────── v0.3.7+5
 Installed RangeArrays ───────────────── v0.3.2
 Installed IntervalSets ──────────────── v0.3.2
 Installed Parsers ───────────────────── v0.3.11
 Installed Compat ────────────────────── v2.2.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed Inflate ───────────────────── v0.1.1
 Installed RecursiveFactorization ────── v0.1.0
 Installed AxisArrays ────────────────── v0.4.1
 Installed Polynomials ───────────────── v0.6.0
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed CategoricalArrays ─────────── v0.7.7
 Installed RecipesBase ───────────────── v0.7.0
 Installed Combinatorics ─────────────── v0.7.0
 Installed ZygoteRules ───────────────── v0.2.0
 Installed Arpack ────────────────────── v0.4.0
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
    Status `/tmp/jl_Dh7W5k/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.1.0
  [79e6a3ab] Adapt v1.0.0
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [13072b0f] AxisAlgorithms v1.0.0
  [39de3d68] AxisArrays v0.4.1
  [6e4b80f9] BenchmarkTools v0.4.3
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.13.3
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.2.0
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.1.1
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.8
  [8197267c] IntervalSets v0.3.2
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5ab0869b] KernelDensity v0.5.1
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.1
  [c7f686f2] MCMCChains v1.0.2
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v1.0.2
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [429524aa] Optim v0.20.1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.3
  [85a6dd25] PositiveFactorizations v0.2.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [c84ed2f1] Ratios v0.3.1
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v2.0.5
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [992d4aef] Showoff v0.3.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.9
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [efce3f68] WoodburyMatrices v0.5.0
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.153379968
│   t_steps = 0.00759086
└   t_step / t_steps = 20.205874960149444
Sampling  0%|                               |  ETA: 5:10:05[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               7.80891326764005e-5
  log_density:                   -10.394262814990217
  hamiltonian_energy:            16.310527569659143
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  9.457659657069254
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▎                           |  ETA: 0:00:21[K
  iterations:                    1251
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8076876001338801
  log_density:                   -18.359315253111028
  hamiltonian_energy:            24.892762188560564
  hamiltonian_energy_error:      0.10012313062686573
  max_hamiltonian_energy_error:  0.6571300767467179
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9861270611726453
  nom_step_size:                 0.9861270611726453
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1259086989225007, 0.9727 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:17[K
  iterations:                    1552
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9316242638044239
  log_density:                   -14.886903079145828
  hamiltonian_energy:            17.280078659220028
  hamiltonian_energy_error:      0.1837061479467721
  max_hamiltonian_energy_error:  0.20886320700039107
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680185223413644
  nom_step_size:                 0.680185223413644
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1259086989225007, 0.9727 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▊                          |  ETA: 0:00:14[K
  iterations:                    1855
  n_steps:                       27
  is_accept:                     true
  acceptance_rate:               0.9642708177872953
  log_density:                   -16.398491491707524
  hamiltonian_energy:            22.10199731956547
  hamiltonian_energy_error:      -0.048630663063672586
  max_hamiltonian_energy_error:  -0.299062869075005
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8868199629310866
  nom_step_size:                 0.8868199629310866
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1259086989225007, 0.9727 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|█████▊                         |  ETA: 0:00:12[K
  iterations:                    2248
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9916502698429219
  log_density:                   -12.455715452079865
  hamiltonian_energy:            15.892214489838189
  hamiltonian_energy_error:      -0.04899689666017082
  max_hamiltonian_energy_error:  -0.061040269653382495
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████                        |  ETA: 0:00:10[K
  iterations:                    2714
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9975810836675928
  log_density:                   -13.097353042507553
  hamiltonian_energy:            16.557879723228837
  hamiltonian_energy_error:      -0.14211298074950562
  max_hamiltonian_energy_error:  -0.2985931538275075
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▍                      |  ETA: 0:00:08[K
  iterations:                    3265
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7594258210323963
  log_density:                   -13.283554370484138
  hamiltonian_energy:            19.214666347115443
  hamiltonian_energy_error:      0.05103347044993356
  max_hamiltonian_energy_error:  0.46920947293616067
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|█████████▊                     |  ETA: 0:00:07[K
  iterations:                    3785
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.972148188922778
  log_density:                   -15.127222063179662
  hamiltonian_energy:            22.747734041342323
  hamiltonian_energy_error:      -0.37627375791239714
  max_hamiltonian_energy_error:  -0.41227465808001895
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|███████████                    |  ETA: 0:00:06[K
  iterations:                    4249
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6427131552470592
  log_density:                   -12.480917268782555
  hamiltonian_energy:            20.196454871384372
  hamiltonian_energy_error:      -0.029570067029265346
  max_hamiltonian_energy_error:  0.774661126945773
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▍                  |  ETA: 0:00:05[K
  iterations:                    4787
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.816445151318781
  log_density:                   -15.3316181657189
  hamiltonian_energy:            19.638566337351374
  hamiltonian_energy_error:      0.2619537734775612
  max_hamiltonian_energy_error:  0.4562342375578403
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▊                 |  ETA: 0:00:04[K
  iterations:                    5346
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.533005736629597
  hamiltonian_energy:            25.11876074052129
  hamiltonian_energy_error:      -0.5075869626381575
  max_hamiltonian_energy_error:  -0.6126192416598286
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▎               |  ETA: 0:00:04[K
  iterations:                    5923
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.469214333638167
  hamiltonian_energy:            21.357485063060942
  hamiltonian_energy_error:      -0.36759757235510193
  max_hamiltonian_energy_error:  -0.6834553185300578
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▊              |  ETA: 0:00:03[K
  iterations:                    6498
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7019169604226215
  log_density:                   -12.065718321936616
  hamiltonian_energy:            15.961700623681995
  hamiltonian_energy_error:      0.23604995163988463
  max_hamiltonian_energy_error:  0.6880331983175765
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▎            |  ETA: 0:00:03[K
  iterations:                    7087
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.803552922537353
  log_density:                   -14.86083089339989
  hamiltonian_energy:            16.951937020159743
  hamiltonian_energy_error:      0.41905499357506315
  max_hamiltonian_energy_error:  0.4210499270592898
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|███████████████████▉           |  ETA: 0:00:02[K
  iterations:                    7676
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9796520099468345
  log_density:                   -12.052075228710788
  hamiltonian_energy:            16.974343741457698
  hamiltonian_energy_error:      -0.2120362151806603
  max_hamiltonian_energy_error:  -0.2120362151806603
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▍         |  ETA: 0:00:02[K
  iterations:                    8280
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9646721481388197
  log_density:                   -17.319684690461795
  hamiltonian_energy:            22.646218181222956
  hamiltonian_energy_error:      0.11159241886301174
  max_hamiltonian_energy_error:  0.11159241886301174
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▋        |  ETA: 0:00:01[K
  iterations:                    8781
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.74696566538094
  log_density:                   -13.268889532497449
  hamiltonian_energy:            17.70994254460794
  hamiltonian_energy_error:      0.1372224828079247
  max_hamiltonian_energy_error:  0.5579695785952232
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████▏      |  ETA: 0:00:01[K
  iterations:                    9331
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.611534314326921
  log_density:                   -18.19719630148151
  hamiltonian_energy:            20.48901392418362
  hamiltonian_energy_error:      0.8855700900947951
  max_hamiltonian_energy_error:  0.8855700900947951
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▎     |  ETA: 0:00:01[K
  iterations:                    9794
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7661485600290688
  log_density:                   -11.96175488819371
  hamiltonian_energy:            20.073165741222734
  hamiltonian_energy_error:      -0.33177140539985217
  max_hamiltonian_energy_error:  0.5930260627523403
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▋    |  ETA: 0:00:01[K
  iterations:                    10299
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9940692175978896
  log_density:                   -13.330093834349192
  hamiltonian_energy:            19.567189582717926
  hamiltonian_energy_error:      -0.41050240819800976
  max_hamiltonian_energy_error:  -0.41050240819800976
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 90%|███████████████████████████▊   |  ETA: 0:00:00[K
  iterations:                    10764
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.026349478543146
  hamiltonian_energy:            19.11037309033297
  hamiltonian_energy_error:      -0.20902824151615107
  max_hamiltonian_energy_error:  -0.790495772147974
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|████████████████████████████▉  |  ETA: 0:00:00[K
  iterations:                    11154
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.848505260018011
  log_density:                   -16.232366125277533
  hamiltonian_energy:            20.57337976756753
  hamiltonian_energy_error:      0.2853247496714211
  max_hamiltonian_energy_error:  0.4221966604910534
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▎|  ETA: 0:00:00[K
  iterations:                    11722
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8028306406441662
  log_density:                   -21.87155638982825
  hamiltonian_energy:            30.712739344170828
  hamiltonian_energy_error:      0.3362654348744627
  max_hamiltonian_energy_error:  0.4696062806092236
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:04[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9240946957143242
  log_density:                   -12.929169953146335
  hamiltonian_energy:            15.079896655320873
  hamiltonian_energy_error:      0.16198626682606054
  max_hamiltonian_energy_error:  0.16198626682606054
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7326702639200684
  nom_step_size:                 0.7326702639200684
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9138302307143138, 1.0484 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 4.602642581 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9138302307143138, 1.0484 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.733), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.092502591853313
└   average_acceptance_rate = 0.8582436855750678
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.930425252 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            5 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⢸⢇⠀⠀⠀⠀⢀⡄⠀⡸⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠘⡄⠀⠀⠀⡜⠈⠢⡇⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢱⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⠑⠒⠇⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠶⠮⡀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠈⠑⠢⣀⢀⣀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢣⠀⠀⠀⠀⣠⠇⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⢣⣀⠤⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            1 │⠀⠀⣄⠀⢀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
