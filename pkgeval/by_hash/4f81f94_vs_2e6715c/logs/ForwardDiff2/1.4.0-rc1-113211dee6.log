Julia Version 1.4.0-rc1.21
Commit 113211dee6 (2020-02-06 08:37 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Reexport ────────── v0.2.0
  Installed Requires ────────── v1.0.1
  Installed SpecializeVarargs ─ v0.1.1
  Installed ForwardDiff2 ────── v0.2.2
  Installed ChainRulesCore ──── v0.5.5
  Installed MuladdMacro ─────── v0.2.2
  Installed ExprTools ───────── v0.1.0
  Installed StaticArrays ────── v0.12.1
  Installed Cassette ────────── v0.3.1
  Installed ChainRules ──────── v0.3.1
   Updating `~/.julia/environments/v1.4/Project.toml`
  [994df76e] + ForwardDiff2 v0.2.2
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [7057c7e9] + Cassette v0.3.1
  [082447d4] + ChainRules v0.3.1
  [d360d2e6] + ChainRulesCore v0.5.5
  [e2ba6199] + ExprTools v0.1.0
  [994df76e] + ForwardDiff2 v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [24973c7f] + SpecializeVarargs v0.1.1
  [90137ffa] + StaticArrays v0.12.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing ForwardDiff2
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      ################################                                          44.6%######################################################################## 100.0%
Status `/tmp/jl_4CvGop/Manifest.toml`
  [79e6a3ab] Adapt v1.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.4.1
  [49dc2e85] Calculus v0.5.1
  [a603d957] CanonicalTraits v0.1.0
  [7057c7e9] Cassette v0.3.1
  [082447d4] ChainRules v0.3.1
  [d360d2e6] ChainRulesCore v0.5.5
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [864edb3b] DataStructures v0.17.9
  [2b5f629d] DiffEqBase v6.13.3
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [ffbed154] DocStringExtensions v0.8.1
  [d4d017d3] ExponentialUtilities v1.6.0
  [e2ba6199] ExprTools v0.1.0
  [6a86dc24] FiniteDiff v2.2.0
  [f6369f11] ForwardDiff v0.10.9
  [994df76e] ForwardDiff2 v0.2.2
  [069b7b12] FunctionWrappers v1.0.0
  [6b9d7cbe] GeneralizedGenerated v0.2.1
  [01680d73] GenericSVD v0.2.2
  [d25df0c9] Inflate v0.1.1
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [b14d175d] JuliaVariables v0.2.0
  [b964fa9f] LaTeXStrings v1.0.3
  [23fbe1c1] Latexify v0.12.0
  [093fc24a] LightGraphs v1.3.0
  [d8e11817] MLStyle v0.3.1
  [1914dd2f] MacroTools v0.5.4
  [961ee093] ModelingToolkit v1.2.0
  [46d2c3a1] MuladdMacro v0.2.2
  [77ba4419] NaNMath v0.3.3
  [71a1bf82] NameResolution v0.1.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [d96e819e] Parameters v0.12.0
  [8162dcfd] PrettyPrint v0.1.0
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v2.0.5
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [f2b01f46] Roots v0.8.4
  [1bc83da4] SafeTestsets v0.0.1
  [699a6c99] SimpleTraits v0.9.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.9.0
  [24973c7f] SpecializeVarargs v0.1.1
  [90137ffa] StaticArrays v0.12.1
  [3783bdb8] TableTraits v1.0.0
  [a2a6695c] TreeViews v0.3.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Derivative, Gradient, Jacobian, and Hessian: Error During Test at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:57
  Test threw exception
  Expression: dh(#= /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:57 =# @SVector([1, 2, 3])) * I === #= /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:57 =# @SMatrix([2 4 2; 4 0 1; 2 1 18.0])
  StackOverflowError:
  Stacktrace:
   [1] log(::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Int64,1,3}}) at ./special/log.jl:395 (repeats 79984 times)
  
Derivative, Gradient, Jacobian, and Hessian: Error During Test at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:58
  Test threw exception
  Expression: dh([1, 2, 3]) * I == [2 4 2; 4 0 1; 2 1 18.0]
  StackOverflowError:
  Stacktrace:
   [1] log(::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Int64,1,3}}) at ./special/log.jl:395 (repeats 79984 times)
  
Derivative, Gradient, Jacobian, and Hessian: Error During Test at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:59
  Test threw exception
  Expression: dh([1, 2, 3]) * #= /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:59 =# @SVector([1, 2, 3]) == #= /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:59 =# @SVector([16, 7, 58.0])
  StackOverflowError:
  Stacktrace:
   [1] log(::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{1},Int64,1,1}}) at ./special/log.jl:395 (repeats 79984 times)
  
Derivative, Gradient, Jacobian, and Hessian: Error During Test at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:57
  Test threw exception
  Expression: dh(#= /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:57 =# @SVector([1, 2, 3])) * I === #= /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:57 =# @SMatrix([2 4 2; 4 0 1; 2 1 18.0])
  StackOverflowError:
  Stacktrace:
   [1] log(::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Int64,1,3}}) at ./special/log.jl:395 (repeats 79984 times)
  
Derivative, Gradient, Jacobian, and Hessian: Error During Test at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:58
  Test threw exception
  Expression: dh([1, 2, 3]) * I == [2 4 2; 4 0 1; 2 1 18.0]
  StackOverflowError:
  Stacktrace:
   [1] log(::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Int64,1,3}}) at ./special/log.jl:395 (repeats 79984 times)
  
Derivative, Gradient, Jacobian, and Hessian: Error During Test at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:59
  Test threw exception
  Expression: dh([1, 2, 3]) * #= /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:59 =# @SVector([1, 2, 3]) == #= /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:59 =# @SVector([16, 7, 58.0])
  StackOverflowError:
  Stacktrace:
   [1] log(::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{1},Int64,1,1}}) at ./special/log.jl:395 (repeats 79984 times)
  
Inference: Error During Test at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:63
  Got exception outside of a @test
  + not defined for ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,Float64}
  Stacktrace:
   [1] error(::String, ::String, ::Type{T} where T) at ./error.jl:42
   [2] no_op_err(::String, ::Type{T} where T) at ./promotion.jl:383
   [3] +(::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,Float64}, ::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,Float64}) at ./promotion.jl:384
   [4] afoldl(::typeof(+), ::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,Float64}, ::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,Float64}, ::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Int64,Float64}) at ./operators.jl:517
   [5] overdub at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/context.jl:262 [inlined]
   [6] + at ./operators.jl:529 [inlined]
   [7] overdub(::Cassette.Context{nametype(DualContext),Nothing,Nothing,ForwardDiff2.var"##PassType#253",Nothing,Cassette.DisableHooks}, ::typeof(+), ::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,Float64}, ::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Int64,Float64}, ::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,Float64}, ::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,Float64}, ::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Int64,Float64}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [8] _frule_overdub2 at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/dual_context.jl:90 [inlined]
   [9] alternative at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/dual_context.jl:131 [inlined]
   [10] #25 at ./none:0 [inlined]
   [11] overdub(::Cassette.Context{nametype(DualContext),Nothing,Nothing,ForwardDiff2.var"##PassType#253",Nothing,Cassette.DisableHooks}, ::Main.##253.var"#25#27", ::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Int64,Int64}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [12] _frule_overdub2 at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/dual_context.jl:90 [inlined]
   [13] alternative at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/dual_context.jl:131 [inlined]
   [14] #41 at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/api.jl:54 [inlined]
   [15] overdub(::Cassette.Context{nametype(DualContext),Nothing,Nothing,ForwardDiff2.var"##PassType#253",Nothing,Cassette.DisableHooks}, ::ForwardDiff2.var"#41#43"{ForwardDiff2.D{Int64,Main.##253.var"#25#27"},Int64}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [16] dualrun(::Function) at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/dual_context.jl:137
   [17] *(::ForwardDiff2.D{Int64,Main.##253.var"#25#27"}, ::Int64) at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/api.jl:52
   [18] top-level scope at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:65
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [20] top-level scope at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:64
   [21] include(::Module, ::String) at ./Base.jl:377
   [22] include(::String) at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [23] top-level scope at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/runtests.jl:2
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [25] top-level scope at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/runtests.jl:2
   [26] eval(::Module, ::Any) at ./boot.jl:331
   [27] top-level scope at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [28] top-level scope at util.jl:175
   [29] include(::String) at ./client.jl:439
   [30] top-level scope at none:6
   [31] eval(::Module, ::Any) at ./boot.jl:331
   [32] exec_options(::Base.JLOptions) at ./client.jl:264
   [33] _start() at ./client.jl:484
  
Differentiate an ODE solver: Error During Test at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:73
  Got exception outside of a @test
  promotion of types ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Float64,1,3}} and Rational{Int64} failed to change any arguments
  Stacktrace:
   [1] error(::String, ::String, ::String) at ./error.jl:42
   [2] sametype_error(::Tuple{ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Float64,1,3}},Rational{Int64}}) at ./promotion.jl:306
   [3] not_sametype(::Tuple{ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Float64,1,3}},Rational{Int64}}, ::Tuple{ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Float64,1,3}},Rational{Int64}}) at ./promotion.jl:300
   [4] promote at ./promotion.jl:283 [inlined]
   [5] *(::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Float64,1,3}}, ::Rational{Int64}) at ./promotion.jl:312
   [6] __init(::DiffEqBase.ODEProblem{ForwardDiff2.DualArray{ForwardDiff2.Tag{Nothing},3,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Float64,1,3}},1},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,DiffEqBase.ODEFunction{true,Main.##253.var"#lorenz#32",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5, ::Array{ForwardDiff2.DualArray{ForwardDiff2.Tag{Nothing},3,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Float64,1,3}},1},1}, ::Array{Float64,1}, ::Array{Any,1}, ::Type{Val{true}}; saveat::Array{Float64,1}, tstops::Array{Float64,1}, d_discontinuities::Array{Float64,1}, save_idxs::Nothing, save_everystep::Bool, save_on::Bool, save_start::Bool, save_end::Bool, callback::Nothing, dense::Bool, calck::Bool, dt::Float64, dtmin::Float64, dtmax::Float64, force_dtmin::Bool, adaptive::Bool, gamma::Rational{Int64}, abstol::Nothing, reltol::Nothing, qmin::Rational{Int64}, qmax::Int64, qsteady_min::Int64, qsteady_max::Int64, qoldinit::Rational{Int64}, fullnormalize::Bool, failfactor::Int64, beta1::Nothing, beta2::Nothing, maxiters::Int64, internalnorm::Main.##253.var"#29#34"{typeof(ForwardDiff2.value)}, internalopnorm::typeof(LinearAlgebra.opnorm), isoutofdomain::typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), unstable_check::typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), verbose::Bool, timeseries_errors::Bool, dense_errors::Bool, advance_to_tstop::Bool, stop_at_next_tstop::Bool, initialize_save::Bool, progress::Bool, progress_steps::Int64, progress_name::String, progress_message::typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), userdata::Nothing, allow_extrapolation::Bool, initialize_integrator::Bool, alias_u0::Bool, alias_du0::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/nV9bA/src/solve.jl:136
   [7] __solve(::DiffEqBase.ODEProblem{ForwardDiff2.DualArray{ForwardDiff2.Tag{Nothing},3,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Float64,1,3}},1},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,DiffEqBase.ODEFunction{true,Main.##253.var"#lorenz#32",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5; kwargs::Base.Iterators.Pairs{Symbol,Main.##253.var"#29#34"{typeof(ForwardDiff2.value)},Tuple{Symbol},NamedTuple{(:internalnorm,),Tuple{Main.##253.var"#29#34"{typeof(ForwardDiff2.value)}}}}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/nV9bA/src/solve.jl:4
   [8] solve_call(::DiffEqBase.ODEProblem{ForwardDiff2.DualArray{ForwardDiff2.Tag{Nothing},3,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Float64,1,3}},1},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,DiffEqBase.ODEFunction{true,Main.##253.var"#lorenz#32",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5; kwargs::Base.Iterators.Pairs{Symbol,Main.##253.var"#29#34"{typeof(ForwardDiff2.value)},Tuple{Symbol},NamedTuple{(:internalnorm,),Tuple{Main.##253.var"#29#34"{typeof(ForwardDiff2.value)}}}}) at /home/pkgeval/.julia/packages/DiffEqBase/YIwj5/src/solve.jl:0
   [9] solve(::DiffEqBase.ODEProblem{ForwardDiff2.DualArray{ForwardDiff2.Tag{Nothing},3,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Float64,1,3}},1},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,DiffEqBase.ODEFunction{true,Main.##253.var"#lorenz#32",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5; kwargs::Base.Iterators.Pairs{Symbol,Main.##253.var"#29#34"{typeof(ForwardDiff2.value)},Tuple{Symbol},NamedTuple{(:internalnorm,),Tuple{Main.##253.var"#29#34"{typeof(ForwardDiff2.value)}}}}) at /home/pkgeval/.julia/packages/DiffEqBase/YIwj5/src/solve.jl:57
   [10] overdub at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/context.jl:262 [inlined]
   [11] overdub(::Cassette.Context{nametype(DualContext),Nothing,Nothing,ForwardDiff2.var"##PassType#253",Nothing,Cassette.DisableHooks}, ::DiffEqBase.var"#solve##kw", ::NamedTuple{(:internalnorm,),Tuple{Main.##253.var"#29#34"{typeof(ForwardDiff2.value)}}}, ::typeof(DiffEqBase.solve), ::DiffEqBase.ODEProblem{ForwardDiff2.DualArray{ForwardDiff2.Tag{Nothing},3,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Float64,1,3}},1},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,DiffEqBase.ODEFunction{true,Main.##253.var"#lorenz#32",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [12] odesolver at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:85 [inlined]
   [13] overdub(::Cassette.Context{nametype(DualContext),Nothing,Nothing,ForwardDiff2.var"##PassType#253",Nothing,Cassette.DisableHooks}, ::Main.##253.var"#odesolver#33"{Main.##253.var"#lorenz#32"}, ::ForwardDiff2.DualArray{ForwardDiff2.Tag{Nothing},3,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Float64,1,3}},1}, ::typeof(ForwardDiff2.value), ::Float64) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [14] #30 at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:91 [inlined]
   [15] overdub(::Cassette.Context{nametype(DualContext),Nothing,Nothing,ForwardDiff2.var"##PassType#253",Nothing,Cassette.DisableHooks}, ::Main.##253.var"#30#35"{Main.##253.var"#odesolver#33"{Main.##253.var"#lorenz#32"},Float64}, ::ForwardDiff2.DualArray{ForwardDiff2.Tag{Nothing},3,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{3},Float64,1,3}},1}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [16] #45 at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/api.jl:73 [inlined]
   [17] overdub(::Cassette.Context{nametype(DualContext),Nothing,Nothing,ForwardDiff2.var"##PassType#253",Nothing,Cassette.DisableHooks}, ::ForwardDiff2.var"#45#46"{ForwardDiff2.D{Array{Float64,1},Main.##253.var"#30#35"{Main.##253.var"#odesolver#33"{Main.##253.var"#lorenz#32"},Float64}},Array{Float64,2}}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [18] dualrun at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/dual_context.jl:137 [inlined]
   [19] *(::ForwardDiff2.D{Array{Float64,1},Main.##253.var"#30#35"{Main.##253.var"#odesolver#33"{Main.##253.var"#lorenz#32"},Float64}}, ::LinearAlgebra.UniformScaling{Bool}) at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/api.jl:71
   [20] top-level scope at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:92
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [22] top-level scope at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:75
   [23] include(::Module, ::String) at ./Base.jl:377
   [24] include(::String) at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [25] top-level scope at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/runtests.jl:2
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [27] top-level scope at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/runtests.jl:2
   [28] eval(::Module, ::Any) at ./boot.jl:331
   [29] top-level scope at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [30] top-level scope at util.jl:175
   [31] include(::String) at ./client.jl:439
   [32] top-level scope at none:6
   [33] eval(::Module, ::Any) at ./boot.jl:331
   [34] exec_options(::Base.JLOptions) at ./client.jl:264
   [35] _start() at ./client.jl:484
  
Multivariable function with closure: Error During Test at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:104
  Got exception outside of a @test
  promotion of types Float64 and ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{2},Float64,1,2}} failed to change any arguments
  Stacktrace:
   [1] error(::String, ::String, ::String) at ./error.jl:42
   [2] sametype_error(::Tuple{Float64,ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{2},Float64,1,2}}}) at ./promotion.jl:306
   [3] not_sametype(::Tuple{Float64,ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{2},Float64,1,2}}}, ::Tuple{Float64,ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{2},Float64,1,2}}}) at ./promotion.jl:300
   [4] promote at ./promotion.jl:283 [inlined]
   [5] *(::Float64, ::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{2},Float64,1,2}}) at ./promotion.jl:312
   [6] muladd(::Float64, ::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{2},Float64,1,2}}, ::ChainRulesCore.Zero) at /home/pkgeval/.julia/packages/ChainRulesCore/2Zkm3/src/differential_arithmetic.jl:36
   [7] #2 at ./broadcast.jl:304 [inlined]
   [8] macro expansion at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/broadcast.jl:125 [inlined]
   [9] _broadcast at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/broadcast.jl:100 [inlined]
   [10] overdub at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/context.jl:262 [inlined]
   [11] copy at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/broadcast.jl:26 [inlined]
   [12] materialize at ./broadcast.jl:820 [inlined]
   [13] frule at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/src/rulesets/Base/base.jl:109 [inlined]
   [14] overdub(::Cassette.Context{nametype(DualContext),Nothing,Nothing,ForwardDiff2.var"##PassType#253",Nothing,Cassette.DisableHooks}, ::typeof(ChainRulesCore.frule), ::typeof(*), ::Float64, ::ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{2},Float64,1,2}}, ::ChainRulesCore.Zero, ::StaticArrays.SArray{Tuple{2},Float64,1,2}, ::ChainRulesCore.Zero) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [15] _frule_overdub2 at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/dual_context.jl:80 [inlined]
   [16] alternative at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/dual_context.jl:131 [inlined]
   [17] g at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:107 [inlined]
   [18] overdub(::Cassette.Context{nametype(DualContext),ForwardDiff2.Tag{Nothing},Nothing,ForwardDiff2.var"##PassType#253",Nothing,Cassette.DisableHooks}, ::Main.##253.var"#g#68", ::ForwardDiff2.DualArray{ForwardDiff2.Tag{ForwardDiff2.Tag{Nothing}},2,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{ForwardDiff2.Tag{Nothing}},Float64,StaticArrays.SArray{Tuple{2},Float64,1,2}},1}, ::ForwardDiff2.DualArray{ForwardDiff2.Tag{Nothing},2,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{2},Float64,1,2}},1}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [19] #42 at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:109 [inlined]
   [20] overdub(::Cassette.Context{nametype(DualContext),ForwardDiff2.Tag{Nothing},Nothing,ForwardDiff2.var"##PassType#253",Nothing,Cassette.DisableHooks}, ::Main.##253.var"#42#70"{ForwardDiff2.DualArray{ForwardDiff2.Tag{Nothing},2,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{2},Float64,1,2}},1}}, ::ForwardDiff2.DualArray{ForwardDiff2.Tag{ForwardDiff2.Tag{Nothing}},2,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{ForwardDiff2.Tag{Nothing}},Float64,StaticArrays.SArray{Tuple{2},Float64,1,2}},1}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [21] #45 at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/api.jl:73 [inlined]
   [22] overdub(::Cassette.Context{nametype(DualContext),ForwardDiff2.Tag{Nothing},Nothing,ForwardDiff2.var"##PassType#253",Nothing,Cassette.DisableHooks}, ::ForwardDiff2.var"#45#46"{ForwardDiff2.D{Array{Float64,1},Main.##253.var"#42#70"{ForwardDiff2.DualArray{ForwardDiff2.Tag{Nothing},2,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{2},Float64,1,2}},1}}},Array{Float64,2}}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [23] overdub at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/context.jl:262 [inlined]
   [24] dualrun at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/dual_context.jl:137 [inlined]
   [25] * at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/api.jl:71 [inlined]
   [26] overdub(::Cassette.Context{nametype(DualContext),Nothing,Nothing,ForwardDiff2.var"##PassType#253",Nothing,Cassette.DisableHooks}, ::typeof(*), ::ForwardDiff2.D{Array{Float64,1},Main.##253.var"#42#70"{ForwardDiff2.DualArray{ForwardDiff2.Tag{Nothing},2,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{2},Float64,1,2}},1}}}, ::LinearAlgebra.UniformScaling{Bool}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [27] #41 at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:109 [inlined]
   [28] overdub(::Cassette.Context{nametype(DualContext),Nothing,Nothing,ForwardDiff2.var"##PassType#253",Nothing,Cassette.DisableHooks}, ::Main.##253.var"#41#69", ::ForwardDiff2.DualArray{ForwardDiff2.Tag{Nothing},2,Array{Float64,1},Array{Float64,2},ForwardDiff2.Dual{ForwardDiff2.Tag{Nothing},Float64,StaticArrays.SArray{Tuple{2},Float64,1,2}},1}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [29] #45 at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/api.jl:73 [inlined]
   [30] overdub(::Cassette.Context{nametype(DualContext),Nothing,Nothing,ForwardDiff2.var"##PassType#253",Nothing,Cassette.DisableHooks}, ::ForwardDiff2.var"#45#46"{ForwardDiff2.D{Array{Float64,1},Main.##253.var"#41#69"},Array{Float64,2}}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [31] dualrun at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/dual_context.jl:137 [inlined]
   [32] *(::ForwardDiff2.D{Array{Float64,1},Main.##253.var"#41#69"}, ::LinearAlgebra.UniformScaling{Bool}) at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/src/api.jl:71
   [33] top-level scope at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:110
   [34] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [35] top-level scope at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/api.jl:105
   [36] include(::Module, ::String) at ./Base.jl:377
   [37] include(::String) at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [38] top-level scope at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/runtests.jl:2
   [39] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [40] top-level scope at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/runtests.jl:2
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] top-level scope at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [43] top-level scope at util.jl:175
   [44] include(::String) at ./client.jl:439
   [45] top-level scope at none:6
   [46] eval(::Module, ::Any) at ./boot.jl:331
   [47] exec_options(::Base.JLOptions) at ./client.jl:264
   [48] _start() at ./client.jl:484
  
Test Summary:                                 | Pass  Error  Total
API Tests                                     |   32      9     41
  Derivative, Gradient, Jacobian, and Hessian |   31      6     37
  Inference                                   |           1      1
  Differentiate an ODE solver                 |           1      1
  No perturbation confusion                   |    1             1
  Multivariable function with closure         |           1      1
ERROR: LoadError: Some tests did not pass: 32 passed, 0 failed, 9 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/ForwardDiff2/EccYp/test/runtests.jl:2
ERROR: Package ForwardDiff2 errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:295
 [11] top-level scope at none:13
