Julia Version 1.5.0-DEV.662
Commit c0edac5d3a (2020-04-21 07:07 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed XML2_jll ──────────────────── v2.9.9+4
  Installed Tables ────────────────────── v0.2.11
  Installed OffsetArrays ──────────────── v0.11.4
  Installed PostgresCatalog ───────────── v0.1.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed IterTools ─────────────────── v1.3.0
  Installed Syslogs ───────────────────── v0.3.0
  Installed DocStringExtensions ───────── v0.8.1
  Installed DataAPI ───────────────────── v1.2.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Decimals ──────────────────── v0.4.1
  Installed TableTraits ───────────────── v1.0.0
  Installed LibPQ ─────────────────────── v0.9.1
  Installed Libiconv_jll ──────────────── v1.16.0+2
  Installed EzXML ─────────────────────── v1.1.0
  Installed Memento ───────────────────── v0.12.1
  Installed LayerDicts ────────────────── v1.0.0
  Installed Zlib_jll ──────────────────── v1.2.11+9
  Installed BinaryProvider ────────────── v0.5.8
  Installed TimeZones ─────────────────── v0.9.2
  Installed Parsers ───────────────────── v1.0.2
  Installed Mocking ───────────────────── v0.7.1
  Installed ExprTools ─────────────────── v0.1.1
  Installed JSON ──────────────────────── v0.21.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [972fa324] + PostgresCatalog v0.1.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.2.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [abce61dc] + Decimals v0.4.1
  [ffbed154] + DocStringExtensions v0.8.1
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [c8e1da08] + IterTools v1.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [6f188dcb] + LayerDicts v1.0.0
  [194296ae] + LibPQ v0.9.1
  [94ce4f54] + Libiconv_jll v1.16.0+2
  [f28f55f0] + Memento v0.12.1
  [78c3b35d] + Mocking v0.7.1
  [6fe1bfb0] + OffsetArrays v0.11.4
  [69de0a69] + Parsers v1.0.2
  [972fa324] + PostgresCatalog v0.1.0
  [cea106d9] + Syslogs v0.3.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [f269a46b] + TimeZones v0.9.2
  [02c8fc9c] + XML2_jll v2.9.9+4
  [83775a58] + Zlib_jll v1.2.11+9
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones → `~/.julia/packages/TimeZones/M8H2J/deps/build.log`
   Building LibPQ ────→ `~/.julia/packages/LibPQ/B13dX/deps/build.log`
    Testing PostgresCatalog
Status `/tmp/jl_qskmAL/Project.toml`
  [a2441757] Coverage v1.0.0
  [194296ae] LibPQ v0.9.1
  [9563631e] NarrativeTest v0.3.0
  [972fa324] PostgresCatalog v0.1.0
  [bd369af6] Tables v0.2.11
Status `/tmp/jl_qskmAL/Manifest.toml`
  [b99e7846] BinaryProvider v0.5.8
  [a2441757] Coverage v1.0.0
  [c36e975a] CoverageTools v1.1.0
  [9a962f9c] DataAPI v1.2.0
  [e2d170a0] DataValueInterfaces v1.0.0
  [abce61dc] Decimals v0.4.1
  [ffbed154] DocStringExtensions v0.8.1
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [cd3eb016] HTTP v0.8.14
  [83e8ac13] IniFile v0.5.0
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [6f188dcb] LayerDicts v1.0.0
  [194296ae] LibPQ v0.9.1
  [94ce4f54] Libiconv_jll v1.16.0+2
  [739be429] MbedTLS v0.7.0
  [f28f55f0] Memento v0.12.1
  [78c3b35d] Mocking v0.7.1
  [9563631e] NarrativeTest v0.3.0
  [6fe1bfb0] OffsetArrays v0.11.4
  [69de0a69] Parsers v1.0.2
  [972fa324] PostgresCatalog v0.1.0
  [cea106d9] Syslogs v0.3.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [f269a46b] TimeZones v0.9.2
  [02c8fc9c] XML2_jll v2.9.9+4
  [83775a58] Zlib_jll v1.2.11+9
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[error | LibPQ]: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/tmp/.s.PGSQL.5432"?

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 24:
    using LibPQ

    conn = LibPQ.Connection("")

    execute(conn, "BEGIN")

    execute(conn,
            """
            CREATE TYPE patient_sex_enum AS ENUM ('male', 'female', 'other', 'unknown');

            CREATE TABLE patient (
                id int4 NOT NULL,
                mrn text NOT NULL,
                sex patient_sex_enum NOT NULL DEFAULT 'unknown',
                mother_id int4,
                father_id int4,
                CONSTRAINT patient_uk UNIQUE (id),
                CONSTRAINT patient_pk PRIMARY KEY (mrn),
                CONSTRAINT patient_mother_fk FOREIGN KEY (mother_id) REFERENCES patient (id),
                CONSTRAINT patient_father_fk FOREIGN KEY (father_id) REFERENCES patient (id)
            );
            """)
Expected output:

Actual output:
    ERROR: could not connect to server: No such file or directory
    	Is the server running locally and accepting
    	connections on Unix domain socket "/tmp/.s.PGSQL.5432"?
    Stacktrace:
     [1] error(::Memento.Logger, ::String) at /home/pkgeval/.julia/packages/Memento/UgJr2/src/loggers.jl:429
     [2] handle_new_connection(::LibPQ.Connection; throw_error::Bool) at /home/pkgeval/.julia/packages/LibPQ/B13dX/src/LibPQ.jl:153
     [3] LibPQ.Connection(::String; throw_error::Bool, options::Dict{String,String}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/LibPQ/B13dX/src/LibPQ.jl:229
     [4] LibPQ.Connection(::String) at /home/pkgeval/.julia/packages/LibPQ/B13dX/src/LibPQ.jl:189
     [5] top-level scope at index.md:26
     [6] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 50:
    using PostgresCatalog

    cat = PostgresCatalog.introspect(conn)
Expected output:
    DATABASE " … "
Actual output:
    ERROR: UndefVarError: conn not defined
    Stacktrace:
     [1] top-level scope at index.md:52
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 58:
    scm = cat["public"]
Expected output:
    SCHEMA "public"
Actual output:
    ERROR: MethodError: no method matching getindex(::typeof(cat), ::String)
    Stacktrace:
     [1] top-level scope at index.md:58
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 61:
    tbl = scm["patient"]
Expected output:
    TABLE "patient"
Actual output:
    ERROR: UndefVarError: scm not defined
    Stacktrace:
     [1] top-level scope at index.md:61
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 67:
    foreach(println, tbl)
Expected output:
    COLUMN "patient"."id" "int4" NOT NULL
    COLUMN "patient"."mrn" "text" NOT NULL
    COLUMN "patient"."sex" "patient_sex_enum" NOT NULL
    COLUMN "patient"."mother_id" "int4" NULL
    COLUMN "patient"."father_id" "int4" NULL
Actual output:
    ERROR: UndefVarError: tbl not defined
    Stacktrace:
     [1] top-level scope at index.md:67
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 78:
    col = tbl["sex"]
Expected output:
    COLUMN "patient"."sex" "patient_sex_enum" NOT NULL
Actual output:
    ERROR: UndefVarError: tbl not defined
    Stacktrace:
     [1] top-level scope at index.md:78
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 81:
    col.name
Expected output:
    "sex"
Actual output:
    ERROR: UndefVarError: col not defined
    Stacktrace:
     [1] top-level scope
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 84:
    col.type
Expected output:
    TYPE "patient_sex_enum"
Actual output:
    ERROR: UndefVarError: col not defined
    Stacktrace:
     [1] top-level scope
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 87:
    col.type.labels
Expected output:
    ["male", "female", "other", "unknown"]
Actual output:
    ERROR: UndefVarError: col not defined
    Stacktrace:
     [1] top-level scope
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 90:
    col.not_null
Expected output:
    true
Actual output:
    ERROR: UndefVarError: col not defined
    Stacktrace:
     [1] top-level scope
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 93:
    col.default
Expected output:
    "'unknown'::patient_sex_enum"
Actual output:
    ERROR: UndefVarError: col not defined
    Stacktrace:
     [1] top-level scope
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 98:
    tbl.primary_key
Expected output:
    CONSTRAINT "patient"."patient_pk" PRIMARY KEY ("mrn")
Actual output:
    ERROR: UndefVarError: tbl not defined
    Stacktrace:
     [1] top-level scope
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 101:
    tbl.primary_key.name
Expected output:
    "patient_pk"
Actual output:
    ERROR: UndefVarError: tbl not defined
    Stacktrace:
     [1] top-level scope
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 104:
    foreach(println, tbl.primary_key.columns)
Expected output:
    COLUMN "patient"."mrn" "text" NOT NULL
Actual output:
    ERROR: UndefVarError: tbl not defined
    Stacktrace:
     [1] top-level scope at index.md:104
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 107:
    foreach(println, tbl.unique_keys)
Expected output:
    CONSTRAINT "patient"."patient_pk" PRIMARY KEY ("mrn")
    CONSTRAINT "patient"."patient_uk" UNIQUE ("id")
Actual output:
    ERROR: UndefVarError: tbl not defined
    Stacktrace:
     [1] top-level scope at index.md:107
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 113:
    foreach(println, tbl.foreign_keys)
Expected output:
    CONSTRAINT "patient"."patient_father_fk" FOREIGN KEY ("father_id") REFERENCES "patient" ("id")
    CONSTRAINT "patient"."patient_mother_fk" FOREIGN KEY ("mother_id") REFERENCES "patient" ("id")
Actual output:
    ERROR: UndefVarError: tbl not defined
    Stacktrace:
     [1] top-level scope at index.md:113
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Tests failed: 16
TESTING UNSUCCESSFUL!
ERROR: Package PostgresCatalog errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1516
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:16
