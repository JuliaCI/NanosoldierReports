Julia Version 1.5.0-DEV.654
Commit ba5cafba6a (2020-04-20 23:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_blfmsZ/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_blfmsZ/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.06066158277718597 -0.0002641906926408354; -0.06066158277718597 0.0 0.11532446521459612; 0.0002641906926408354 -0.11532446521459612 0.0])
dAA = so3([0.0 -0.0040525916069001295 0.0004544456299209196; 0.0040525916069001295 0.0 0.09326361688942428; -0.0004544456299209196 -0.09326361688942428 0.0])
dAA = so3([0.0 0.08574107613428422 -0.11535616744150322; -0.08574107613428422 0.0 -0.03524816686061818; 0.11535616744150322 0.03524816686061818 0.0])
dAA = Quaternion(0.9964037959281722, [0.021274010816011386, -0.033176226869043694, -0.07500819884828142])
dAA = SO3([0.9933926528586146 0.10324288844885038 -0.05011929001156111; -0.10487275905051044 0.9940007324718461 -0.031052347005782802; 0.04661267698446758 0.03610332159472593 0.9982603911375878])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9999482666434562 -0.010171604713271522 -4.9943012648388046e-5; 0.00990790960217026 0.9728904908857826 0.2310539462362333; -0.0023016003264646474 -0.23104248787090634 0.9729409393351476]), [-1.1532446521459612, -0.002641906926408354, -0.6066158277718596])
xj = SE3(SO3([0.9169070031728852 0.35876690032382325 -0.17483666310174897; -0.37717001772277164 0.9221690398252561 -0.08571487454794166; 0.13047729788558124 0.14453571606976995 0.9808593688784729]), [0.3524816686061818, -1.153561674415032, -0.8574107613428421])
Dx = SE3(SO3([0.9128222954643167 0.3675524441410695 -0.1779344196865288; -0.40641733879896963 0.860126363314002 -0.3082330057858713; 0.03975429067181602 0.35367759320906306 0.9345222075665326]), [1.4948224451608885, -1.077090265105559, -0.5100084128372644])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
