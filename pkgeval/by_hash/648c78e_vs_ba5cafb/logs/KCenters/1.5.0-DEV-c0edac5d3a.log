Julia Version 1.5.0-DEV.662
Commit c0edac5d3a (2020-04-21 07:07 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed PooledArrays ──────────────── v0.5.3
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Tables ────────────────────── v1.0.4
  Installed DataStructures ────────────── v0.17.13
  Installed MLDataPattern ─────────────── v0.5.1
  Installed DataFrames ────────────────── v0.20.2
  Installed Missings ──────────────────── v0.4.3
  Installed InvertedIndices ───────────── v1.0.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed TableTraits ───────────────── v1.0.0
  Installed DataAPI ───────────────────── v1.2.0
  Installed StatsBase ─────────────────── v0.32.2
  Installed SimilaritySearch ──────────── v0.3.19
  Installed CategoricalArrays ─────────── v0.7.7
  Installed Compat ────────────────────── v3.8.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed LearnBase ─────────────────── v0.2.2
  Installed OrderedCollections ────────── v1.1.0
  Installed Parsers ───────────────────── v1.0.2
  Installed JSON ──────────────────────── v0.21.0
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed MLDataUtils ───────────────── v0.5.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.8.0
  [9a962f9c] + DataAPI v1.2.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.13
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.1
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.2
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_O8HQLw/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_O8HQLw/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.8.0
  [9a962f9c] DataAPI v1.2.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.13
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.1
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.2
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9364293802777927
[ Info: 0.8302954188982645
[ Info: 0.5538560461501281
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3370421227564414
mean(cdnet.distances) = 0.457872386003534
mean(crand.distances) = 0.33357754431664943
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.7015205280830288,"seconds":4.934147000312805e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.4453125,"distances_sum":1518.6055412373273}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8715862262737271,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7890625,"distances_sum":2195.962294559408}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8715862262737271,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7890625,"distances_sum":2195.962294559408}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8715862262737271,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7890625,"distances_sum":2195.962294559408}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.78515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8715862262737271,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7890625,"distances_sum":2195.962294559408}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.193359375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.193359375,"f1":null,"seconds":3.293156623840332e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":5.1640625,"distances_sum":449.1442200766669}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8432697510822519,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.015625,"distances_sum":1822.925973753302}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6971722721722727,"seconds":4.420056939125061e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":6.921875,"distances_sum":1305.3958615383367}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8432697510822519,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.015625,"distances_sum":1822.925973753302}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8432697510822519,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.015625,"distances_sum":1822.925973753302}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7392578125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8432697510822519,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.015625,"distances_sum":1822.925973753302}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8136018495393504,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.8671875,"distances_sum":1664.6251385556968}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.701171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.701171875,"f1":0.8136018495393504,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.8671875,"distances_sum":1664.6251385556968}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9531478937728943,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8359375,"distances_sum":2463.906492154019}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9291895604395609,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.71875,"distances_sum":2285.4877894763385}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9531478937728943,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8359375,"distances_sum":2463.906492154019}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9760817307692309,"seconds":6.85080885887146e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.953125,"distances_sum":2621.0291125021736}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9695913461538466,"seconds":6.543472409248352e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9453125,"distances_sum":2571.9182779112743}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684180402930405,"seconds":6.6962093114852905e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.953125,"distances_sum":2547.983183456099}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.953542811355312,"seconds":6.5695494413375854e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.859375,"distances_sum":2471.407874569532}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9760817307692309,"seconds":6.85080885887146e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.953125,"distances_sum":2621.0291125021736}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9760817307692309,"seconds":6.85080885887146e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.953125,"distances_sum":2621.0291125021736}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7848432817182823,"seconds":5.0086528062820435e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.90625,"distances_sum":1553.6622067486653}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7970227688977698,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.9765625,"distances_sum":1607.997130711595}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.7970227688977698,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.9765625,"distances_sum":1607.997130711595}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9142170329670339,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6171875,"distances_sum":2228.5549903727597}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.857421875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.857421875,"f1":0.9142170329670339,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6171875,"distances_sum":2228.5549903727597}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.973832417582418,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9296875,"distances_sum":2582.1969805093827}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9418440934065941,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8046875,"distances_sum":2398.343874385062}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9417811355311362,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.859375,"distances_sum":2378.781891983802}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.973832417582418,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9296875,"distances_sum":2582.1969805093827}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.973832417582418,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9296875,"distances_sum":2582.1969805093827}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7794826701076708,"seconds":3.0081719160079956e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.7734375,"distances_sum":1551.8452967539567}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6591796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6591796875,"f1":0.7794826701076708,"seconds":3.0081719160079956e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.7734375,"distances_sum":1551.8452967539567}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9356372793872801,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.5703125,"distances_sum":2306.6271719558704}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9356372793872801,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.5703125,"distances_sum":2306.6271719558704}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9732715201465203,"seconds":6.599351763725281e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.84375,"distances_sum":2470.5071420821487}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9732715201465203,"seconds":6.599351763725281e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.84375,"distances_sum":2470.5071420821487}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9732715201465203,"seconds":6.599351763725281e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.84375,"distances_sum":2470.5071420821487}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.791659382284383,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.765625,"distances_sum":1521.1321277477944}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2060546875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2060546875,"f1":null,"seconds":3.384426236152649e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":5.0625,"distances_sum":473.9355920643357}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2060546875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2060546875,"f1":null,"seconds":3.4533441066741943e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":5.2890625,"distances_sum":412.9171814580205}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.791659382284383,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.765625,"distances_sum":1521.1321277477944}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.791659382284383,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.765625,"distances_sum":1521.1321277477944}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.791659382284383,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.765625,"distances_sum":1521.1321277477944}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7961096195471205,"seconds":3.296881914138794e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.0625,"distances_sum":1535.2202275363845}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3330078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3330078125,"f1":null,"seconds":2.3245811462402344e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":5.203125,"distances_sum":805.5701477300847}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8699217449217458,"seconds":3.6694109439849854e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.3203125,"distances_sum":1901.4427639899304}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8699217449217458,"seconds":3.6694109439849854e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.3203125,"distances_sum":1901.4427639899304}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9054487179487186,"seconds":3.8053840398788452e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.4921875,"distances_sum":2061.2539923082363}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9448889652014657,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.6875,"distances_sum":2411.7248543057935}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.875,"f1":0.9277847152847157,"seconds":3.7904828786849976e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.6796875,"distances_sum":2178.5151058932984}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9426256035631041,"seconds":4.174187779426575e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.71875,"distances_sum":2379.212982540049}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9347584706959711,"seconds":4.3995678424835205e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.71875,"distances_sum":2284.7179093189216}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8762378246753254,"seconds":3.63960862159729e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.2734375,"distances_sum":1942.7985918161894}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9448889652014657,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.6875,"distances_sum":2411.7248543057935}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9747596153846159,"seconds":4.678964614868164e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.8828125,"distances_sum":2559.5864422058203}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.978405448717949,"seconds":4.7292560338974e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.90625,"distances_sum":2573.9636460443194}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.946008158508159,"seconds":4.5299530029296875e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.7734375,"distances_sum":2358.3803597555307}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9473443223443231,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.734375,"distances_sum":2392.2014557069315}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646062271062277,"seconds":6.400048732757568e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.8828125,"distances_sum":2469.202075771723}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.978405448717949,"seconds":4.7292560338974e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.90625,"distances_sum":2573.9636460443194}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.978405448717949,"seconds":4.7292560338974e-6,"exhaustive_search_seconds":9.927898645401e-7,"evaluations":8.90625,"distances_sum":2573.9636460443194}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.25,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.25,"f1":null,"seconds":3.7401914596557617e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":5.6328125,"distances_sum":577.3225956448822}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.25,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.25,"f1":null,"seconds":3.7401914596557617e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":5.6328125,"distances_sum":577.3225956448822}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.72265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.72265625,"f1":0.8300407925407933,"seconds":3.926455974578857e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":7.421875,"distances_sum":1773.3960099347928}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23828125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.23828125,"f1":null,"seconds":2.4568289518356323e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":5.5,"distances_sum":567.1806605413905}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.797857524420025,"seconds":3.330409526824951e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":6.9921875,"distances_sum":1679.4556011524876}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.72265625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.72265625,"f1":0.8300407925407933,"seconds":3.926455974578857e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":7.421875,"distances_sum":1773.3960099347928}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9267087079587087,"seconds":4.043802618980408e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.4921875,"distances_sum":2532.951592663476}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9252690018315025,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.453125,"distances_sum":2471.3025438555874}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9267087079587087,"seconds":4.043802618980408e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.4921875,"distances_sum":2532.951592663476}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654246794871799,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.7890625,"distances_sum":2795.6213913938163}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9648122710622714,"seconds":6.5267086029052734e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.8359375,"distances_sum":2776.6209715579225}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9470524267399275,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.65625,"distances_sum":2682.750226050201}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9654246794871799,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.7890625,"distances_sum":2795.6213913938163}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9654246794871799,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.7890625,"distances_sum":2795.6213913938163}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.41015625,"f1":null,"seconds":3.863126039505005e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.9609375,"distances_sum":889.5336089423819}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8556152181152188,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.0,"distances_sum":1970.946063907588}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8556152181152188,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.0,"distances_sum":1970.946063907588}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8986924533799543,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.3828125,"distances_sum":2274.394720695763}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9338801823176833,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.609375,"distances_sum":2537.6422431799333}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9338801823176833,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.609375,"distances_sum":2537.6422431799333}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9533169955044961,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7421875,"distances_sum":2733.196415118481}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9520661630036639,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7578125,"distances_sum":2713.8167010823736}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588255494505501,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.84375,"distances_sum":2748.2306400134225}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9588255494505501,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.84375,"distances_sum":2748.2306400134225}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9588255494505501,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.84375,"distances_sum":2748.2306400134225}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.267578125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.267578125,"f1":null,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.0625,"distances_sum":654.1867319140702}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.26953125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.26953125,"f1":null,"seconds":3.5800039768218994e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.0625,"distances_sum":667.4907055314941}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7092842920967927,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.5234375,"distances_sum":1356.5141796259416}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.568359375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.568359375,"f1":0.7092842920967927,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.5234375,"distances_sum":1356.5141796259416}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9364125457875462,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.6796875,"distances_sum":2564.1048195868634}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7767102688977697,"seconds":4.505738615989685e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.78125,"distances_sum":1531.2724976793663}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.809086573149074,"seconds":4.978850483894348e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.5234375,"distances_sum":1728.5480174509735}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7906227453102462,"seconds":4.459172487258911e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.9296875,"distances_sum":1632.1437520625896}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.716656607281608,"seconds":4.297122359275818e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.7421875,"distances_sum":1377.7460596064657}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9364125457875462,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.6796875,"distances_sum":2564.1048195868634}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9616472069597074,"seconds":6.4820051193237305e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8515625,"distances_sum":2763.690442733003}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9463770604395607,"seconds":6.359070539474487e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.7109375,"distances_sum":2618.2836326799306}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9616472069597074,"seconds":6.4820051193237305e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8515625,"distances_sum":2763.690442733003}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9616472069597074,"seconds":6.4820051193237305e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8515625,"distances_sum":2763.690442733003}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.423828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.423828125,"f1":null,"seconds":4.170462489128113e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":5.6796875,"distances_sum":1026.5072998328192}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7068372599622605,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":6.5234375,"distances_sum":1381.2567916747046}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.568359375,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.568359375,"f1":0.7068372599622605,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":6.5234375,"distances_sum":1381.2567916747046}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7983016983016993,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.0078125,"distances_sum":1664.5841558783823}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.642578125,"f1":0.7697035603285611,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":6.7578125,"distances_sum":1539.4589797706637}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7275390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7275390625,"f1":0.8341897685647695,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.6953125,"distances_sum":1858.2632669739921}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8039869852369861,"seconds":4.967674612998962e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.109375,"distances_sum":1745.491070829822}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7972605519480528,"seconds":4.867091774940491e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":6.9765625,"distances_sum":1678.7962356739708}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7275390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7275390625,"f1":0.8341897685647695,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.6953125,"distances_sum":1858.2632669739921}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9205872252747258,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.5,"distances_sum":2487.4843388194813}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.902653076090577,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.40625,"distances_sum":2317.25489094527}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8983490467865476,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.4375,"distances_sum":2252.5698981714418}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8342234154734162,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.734375,"distances_sum":1878.0285871842943}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9389053654678656,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.6484375,"distances_sum":2660.3903068476243}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8360550907425917,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.734375,"distances_sum":1891.8344330166979}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9389053654678656,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.6484375,"distances_sum":2660.3903068476243}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8935546875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9389053654678656,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.6484375,"distances_sum":2660.3903068476243}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2958984375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2958984375,"f1":null,"seconds":4.248693585395813e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.3984375,"distances_sum":770.8738509439746}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2880859375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2880859375,"f1":null,"seconds":3.7830322980880737e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.03125,"distances_sum":702.2259229562732}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3017578125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.3017578125,"f1":null,"seconds":2.868473529815674e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.359375,"distances_sum":800.7123420245053}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3017578125,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.3017578125,"f1":null,"seconds":2.868473529815674e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.359375,"distances_sum":800.7123420245053}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":9,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7075421106671113,"seconds":3.127381205558777e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.5,"distances_sum":1343.9780536095254}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8461595695970703,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.859375,"distances_sum":1916.2871476480436}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.6987465659340666,"seconds":4.395842552185059e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.4765625,"distances_sum":1318.1891677662002}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8461595695970703,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.859375,"distances_sum":1916.2871476480436}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9138507326007335,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.4921875,"distances_sum":2393.640064293259}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9498969780219785,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.75,"distances_sum":2731.961028204779}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9396462912087921,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6796875,"distances_sum":2622.095118067367}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9498969780219785,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.75,"distances_sum":2731.961028204779}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.912109375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9498969780219785,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.75,"distances_sum":2731.961028204779}}, n: 9
mean(cfft.distances) = 0.3548613225498685
mean(cdnet.distances) = 0.6451598878979775
mean(crand.distances) = 0.36135505212719105
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8777777777777779
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9155555555555556
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8822222222222221
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9444444444444445
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8866666666666666
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8733333333333334
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9088888888888889
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9444444444444443
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8644444444444446
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8911111111111113
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9311111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9199999999999999
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8555555555555555
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8422222222222223
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9022222222222224
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9066666666666667
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.5182461724678675] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 21]]
** centroid: 1, normalized-entropy: 0.9283620723948678, [(2, 11), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 29, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 8, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
*** center 9: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.434442277429989] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.434442277429989, 0.3051165674418748] ***
*** starting iteration: 2; err: [Inf, 0.434442277429989, 0.3051165674418748] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.434442277429989, 0.3051165674418748, 0.29858643964335724] ***
*** starting iteration: 3; err: [Inf, 0.434442277429989, 0.3051165674418748, 0.29858643964335724] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.434442277429989, 0.3051165674418748, 0.29858643964335724, 0.29717368580535186] ***
*** finished computation of 3 references, err: [Inf, 0.434442277429989, 0.3051165674418748, 0.29858643964335724, 0.29717368580535186] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [85, 143, 29]]
** centroid: 1, normalized-entropy: 0.8540977813946038, [(1, 85), (2, 143), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [207, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [96, 106, 0]]
** centroid: 3, normalized-entropy: 0.9982314418957051, [(1, 96), (2, 106)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3630352713128571] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3630352713128571, 0.30520840690958534] ***
*** starting iteration: 2; err: [Inf, 0.3630352713128571, 0.30520840690958534] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3630352713128571, 0.30520840690958534, 0.30287938046627266] ***
*** starting iteration: 3; err: [Inf, 0.3630352713128571, 0.30520840690958534, 0.30287938046627266] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3630352713128571, 0.30520840690958534, 0.30287938046627266, 0.30270852391696024] ***
*** finished computation of 3 references, err: [Inf, 0.3630352713128571, 0.30520840690958534, 0.30287938046627266, 0.30270852391696024] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [89, 118, 0]]
** centroid: 1, normalized-entropy: 0.9857953865780371, [(1, 89), (2, 118)]
*** center 2: selecting labels [1] (freq >= 2) [from [208, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [107, 122, 23]]
** centroid: 3, normalized-entropy: 0.8496162478699445, [(1, 107), (2, 122), (3, 23)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4070200842862455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4070200842862455, 0.30596736431780874] ***
*** starting iteration: 2; err: [Inf, 0.4070200842862455, 0.30596736431780874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4070200842862455, 0.30596736431780874, 0.29804737272224147] ***
*** starting iteration: 3; err: [Inf, 0.4070200842862455, 0.30596736431780874, 0.29804737272224147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4070200842862455, 0.30596736431780874, 0.29804737272224147, 0.2968089386131028] ***
*** finished computation of 3 references, err: [Inf, 0.4070200842862455, 0.30596736431780874, 0.29804737272224147, 0.2968089386131028] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [113, 120, 1]]
** centroid: 1, normalized-entropy: 0.9993488303798663, [(1, 113), (2, 120)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [69, 121, 23]]
** centroid: 2, normalized-entropy: 0.8435518509255108, [(1, 69), (2, 121), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [220, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.26124621733363057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26124621733363057, 0.21198800796371614] ***
*** finished computation of 7 references, err: [Inf, 0.26124621733363057, 0.21198800796371614] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [46, 4, 0]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(1, 46), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [75, 22, 0]]
** centroid: 2, normalized-entropy: 0.772398436030307, [(1, 75), (2, 22)]
*** center 3: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [65, 57, 0]]
** centroid: 4, normalized-entropy: 0.9968960371182977, [(1, 65), (2, 57)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 59, 0]]
** centroid: 5, normalized-entropy: 0.9524521973646323, [(1, 35), (2, 59)]
*** center 6: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 107, 29]]
** centroid: 7, normalized-entropy: 0.7476215441648812, [(2, 107), (3, 29)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22379197017324606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22379197017324606, 0.20657061206699087] ***
*** finished computation of 7 references, err: [Inf, 0.22379197017324606, 0.20657061206699087] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [14, 51, 0]]
** centroid: 1, normalized-entropy: 0.7516499461153354, [(1, 14), (2, 51)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 61, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 23]]
** centroid: 3, normalized-entropy: 0.990374836448575, [(2, 29), (3, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [168, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [16, 77, 0]]
** centroid: 5, normalized-entropy: 0.6623570516079519, [(1, 16), (2, 77)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [134, 6, 0]]
** centroid: 6, normalized-entropy: 0.25524211319019174, [(1, 134), (2, 6)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [72, 16, 0]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(1, 72), (2, 16)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20607255966398402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20607255966398402, 0.1954246014731865] ***
*** finished computation of 7 references, err: [Inf, 0.20607255966398402, 0.1954246014731865] ***
*** center 1: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [42, 31, 0]]
** centroid: 3, normalized-entropy: 0.9835585673909616, [(1, 42), (2, 31)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [81, 1, 0]]
** centroid: 4, normalized-entropy: 0.09501724567107643, [(1, 81), (2, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 66, 18]]
** centroid: 5, normalized-entropy: 0.7495952572594798, [(2, 66), (3, 18)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 106, 6]]
** centroid: 6, normalized-entropy: 0.3013786435930858, [(2, 106), (3, 6)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [107, 37, 0]]
** centroid: 7, normalized-entropy: 0.8221004037117993, [(1, 107), (2, 37)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19945050836275066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19945050836275066, 0.15900884679023614] ***
*** starting iteration: 2; err: [Inf, 0.19945050836275066, 0.15900884679023614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19945050836275066, 0.15900884679023614, 0.1505230333902188] ***
*** starting iteration: 3; err: [Inf, 0.19945050836275066, 0.15900884679023614, 0.1505230333902188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19945050836275066, 0.15900884679023614, 0.1505230333902188, 0.14764245805140394] ***
*** starting iteration: 4; err: [Inf, 0.19945050836275066, 0.15900884679023614, 0.1505230333902188, 0.14764245805140394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19945050836275066, 0.15900884679023614, 0.1505230333902188, 0.14764245805140394, 0.14656683570473222] ***
*** starting iteration: 5; err: [Inf, 0.19945050836275066, 0.15900884679023614, 0.1505230333902188, 0.14764245805140394, 0.14656683570473222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19945050836275066, 0.15900884679023614, 0.1505230333902188, 0.14764245805140394, 0.14656683570473222, 0.1463658295560617] ***
*** finished computation of 7 references, err: [Inf, 0.19945050836275066, 0.15900884679023614, 0.1505230333902188, 0.14764245805140394, 0.14656683570473222, 0.1463658295560617] ***
*** center 1: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [1, 94, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 64, 29]]
** centroid: 3, normalized-entropy: 0.8952722642402938, [(2, 64), (3, 29)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [89, 8, 0]]
** centroid: 4, normalized-entropy: 0.4108378385169277, [(1, 89), (2, 8)]
*** center 5: selecting labels [1] (freq >= 2) [from [106, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [12, 82, 0]]
** centroid: 6, normalized-entropy: 0.5509844433017146, [(1, 12), (2, 82)]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22026171475230694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22026171475230694, 0.16056218477663467] ***
*** starting iteration: 2; err: [Inf, 0.22026171475230694, 0.16056218477663467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22026171475230694, 0.16056218477663467, 0.15523959648819163] ***
*** starting iteration: 3; err: [Inf, 0.22026171475230694, 0.16056218477663467, 0.15523959648819163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22026171475230694, 0.16056218477663467, 0.15523959648819163, 0.15312232252704663] ***
*** starting iteration: 4; err: [Inf, 0.22026171475230694, 0.16056218477663467, 0.15523959648819163, 0.15312232252704663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22026171475230694, 0.16056218477663467, 0.15523959648819163, 0.15312232252704663, 0.15180784473097933] ***
*** starting iteration: 5; err: [Inf, 0.22026171475230694, 0.16056218477663467, 0.15523959648819163, 0.15312232252704663, 0.15180784473097933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22026171475230694, 0.16056218477663467, 0.15523959648819163, 0.15312232252704663, 0.15180784473097933, 0.151193689487908] ***
*** finished computation of 7 references, err: [Inf, 0.22026171475230694, 0.16056218477663467, 0.15523959648819163, 0.15312232252704663, 0.15180784473097933, 0.151193689487908] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 103, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 77, 23]]
** centroid: 2, normalized-entropy: 0.7780113035465377, [(2, 77), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [98, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [75, 18, 0]]
** centroid: 5, normalized-entropy: 0.708835673332196, [(1, 75), (2, 18)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [79, 41, 0]]
** centroid: 6, normalized-entropy: 0.926404668147414, [(1, 79), (2, 41)]
*** center 7: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18369351402539452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18369351402539452, 0.15784869793484146] ***
*** starting iteration: 2; err: [Inf, 0.18369351402539452, 0.15784869793484146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18369351402539452, 0.15784869793484146, 0.15397649567931712] ***
*** starting iteration: 3; err: [Inf, 0.18369351402539452, 0.15784869793484146, 0.15397649567931712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18369351402539452, 0.15784869793484146, 0.15397649567931712, 0.15136743177250697] ***
*** starting iteration: 4; err: [Inf, 0.18369351402539452, 0.15784869793484146, 0.15397649567931712, 0.15136743177250697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18369351402539452, 0.15784869793484146, 0.15397649567931712, 0.15136743177250697, 0.14872195848998246] ***
*** starting iteration: 5; err: [Inf, 0.18369351402539452, 0.15784869793484146, 0.15397649567931712, 0.15136743177250697, 0.14872195848998246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18369351402539452, 0.15784869793484146, 0.15397649567931712, 0.15136743177250697, 0.14872195848998246, 0.14760010513844252] ***
*** starting iteration: 6; err: [Inf, 0.18369351402539452, 0.15784869793484146, 0.15397649567931712, 0.15136743177250697, 0.14872195848998246, 0.14760010513844252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18369351402539452, 0.15784869793484146, 0.15397649567931712, 0.15136743177250697, 0.14872195848998246, 0.14760010513844252, 0.14653208033102139] ***
*** starting iteration: 7; err: [Inf, 0.18369351402539452, 0.15784869793484146, 0.15397649567931712, 0.15136743177250697, 0.14872195848998246, 0.14760010513844252, 0.14653208033102139] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18369351402539452, 0.15784869793484146, 0.15397649567931712, 0.15136743177250697, 0.14872195848998246, 0.14760010513844252, 0.14653208033102139, 0.1458970350066739] ***
*** finished computation of 7 references, err: [Inf, 0.18369351402539452, 0.15784869793484146, 0.15397649567931712, 0.15136743177250697, 0.14872195848998246, 0.14760010513844252, 0.14653208033102139, 0.1458970350066739] ***
*** center 1: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [6, 106, 0]]
** centroid: 2, normalized-entropy: 0.3013786435930858, [(1, 6), (2, 106)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 44, 24]]
** centroid: 3, normalized-entropy: 0.9366673818775627, [(2, 44), (3, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [5, 81, 0]]
** centroid: 4, normalized-entropy: 0.32001486274754665, [(1, 5), (2, 81)]
*** center 5: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [107, 7, 0]]
** centroid: 6, normalized-entropy: 0.3329913124162683, [(1, 107), (2, 7)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [106, 3, 0]]
** centroid: 7, normalized-entropy: 0.18181317169561842, [(1, 106), (2, 3)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.305900124723914] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.305900124723914, 0.2342298732617417] ***
*** starting iteration: 2; err: [Inf, 0.305900124723914, 0.2342298732617417] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.305900124723914, 0.2342298732617417, 0.2327996746555821] ***
*** starting iteration: 3; err: [Inf, 0.305900124723914, 0.2342298732617417, 0.2327996746555821] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.305900124723914, 0.2342298732617417, 0.2327996746555821, 0.2325063080152122] ***
*** finished computation of 3 references, err: [Inf, 0.305900124723914, 0.2342298732617417, 0.2327996746555821, 0.2325063080152122] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [1, 182, 29]]
** centroid: 1, normalized-entropy: 0.5774969452244255, [(2, 182), (3, 29)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [132, 62, 0]]
** centroid: 2, normalized-entropy: 0.9039324555927869, [(1, 132), (2, 62)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [255, 5, 0]]
** centroid: 3, normalized-entropy: 0.13709947889981755, [(1, 255), (2, 5)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2952578596280667] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2952578596280667, 0.25596816946348844] ***
*** starting iteration: 2; err: [Inf, 0.2952578596280667, 0.25596816946348844] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2952578596280667, 0.25596816946348844, 0.2424774247932358] ***
*** starting iteration: 3; err: [Inf, 0.2952578596280667, 0.25596816946348844, 0.2424774247932358] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2952578596280667, 0.25596816946348844, 0.2424774247932358, 0.24194984459436905] ***
*** finished computation of 3 references, err: [Inf, 0.2952578596280667, 0.25596816946348844, 0.2424774247932358, 0.24194984459436905] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [117, 89, 0]]
** centroid: 1, normalized-entropy: 0.9866318497692973, [(1, 117), (2, 89)]
*** center 2: selecting labels [1] (freq >= 2) [from [235, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [52, 151, 23]]
** centroid: 3, normalized-entropy: 0.7646436999688228, [(1, 52), (2, 151), (3, 23)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2801484677241068] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2801484677241068, 0.2478502525527706] ***
*** starting iteration: 2; err: [Inf, 0.2801484677241068, 0.2478502525527706] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2801484677241068, 0.2478502525527706, 0.2342588509777854] ***
*** starting iteration: 3; err: [Inf, 0.2801484677241068, 0.2478502525527706, 0.2342588509777854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2801484677241068, 0.2478502525527706, 0.2342588509777854, 0.2337555423968177] ***
*** finished computation of 3 references, err: [Inf, 0.2801484677241068, 0.2478502525527706, 0.2342588509777854, 0.2337555423968177] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [85, 137, 22]]
** centroid: 1, normalized-entropy: 0.8268380701268976, [(1, 85), (2, 137), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [209, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [108, 104, 2]]
** centroid: 3, normalized-entropy: 0.6730910569927567, [(1, 108), (2, 104), (3, 2)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2368272951714605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2368272951714605, 0.19716772985925712] ***
*** finished computation of 7 references, err: [Inf, 0.2368272951714605, 0.19716772985925712] ***
*** center 1: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [15, 97, 0]]
** centroid: 2, normalized-entropy: 0.5681147021801115, [(1, 15), (2, 97)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [51, 2, 0]]
** centroid: 3, normalized-entropy: 0.23181305002459035, [(1, 51), (2, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [95, 1, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 95, 29]]
** centroid: 5, normalized-entropy: 0.7846984744986523, [(2, 95), (3, 29)]
*** center 6: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [83, 54, 0]]
** centroid: 7, normalized-entropy: 0.9674320981530666, [(1, 83), (2, 54)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.26138044441484665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26138044441484665, 0.20574563412858674] ***
*** finished computation of 7 references, err: [Inf, 0.26138044441484665, 0.20574563412858674] ***
*** center 1: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [88, 7, 0]]
** centroid: 2, normalized-entropy: 0.3795243778626806, [(1, 88), (2, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 121, 23]]
** centroid: 4, normalized-entropy: 0.6336446076955261, [(2, 121), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [17, 62, 0]]
** centroid: 5, normalized-entropy: 0.751286576718343, [(1, 17), (2, 62)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [110, 11, 0]]
** centroid: 6, normalized-entropy: 0.43949698692151346, [(1, 110), (2, 11)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [29, 39, 0]]
** centroid: 7, normalized-entropy: 0.9843432030984676, [(1, 29), (2, 39)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24529740282905468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24529740282905468, 0.20450531974619163] ***
*** finished computation of 7 references, err: [Inf, 0.24529740282905468, 0.20450531974619163] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [54, 17, 0]]
** centroid: 1, normalized-entropy: 0.7941021417852022, [(1, 54), (2, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [165, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [91, 7, 0]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(1, 91), (2, 7)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [91, 35, 0]]
** centroid: 4, normalized-entropy: 0.8524051786494784, [(1, 91), (2, 35)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 61, 1]]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 88, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 33, 23]]
** centroid: 7, normalized-entropy: 0.9768740126265281, [(2, 33), (3, 23)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3852543925150513] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3852543925150513, 0.3560312632527258] ***
*** finished computation of 3 references, err: [Inf, 0.3852543925150513, 0.3560312632527258] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [271, 80, 0]]
** centroid: 1, normalized-entropy: 0.7743681382592952, [(1, 271), (2, 80)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [45, 24, 14]]
** centroid: 2, normalized-entropy: 0.9019468799857264, [(1, 45), (2, 24), (3, 14)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [72, 145, 15]]
** centroid: 3, normalized-entropy: 0.7590922923838744, [(1, 72), (2, 145), (3, 15)]
finished with 8 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34349828524126863] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34349828524126863, 0.30289049015689024] ***
*** finished computation of 3 references, err: [Inf, 0.34349828524126863, 0.30289049015689024] ***
*** center 1: selecting labels [1] (freq >= 2) [from [220, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [140, 106, 0]]
** centroid: 2, normalized-entropy: 0.9861763323473927, [(1, 140), (2, 106)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [44, 134, 23]]
** centroid: 3, normalized-entropy: 0.7745322602159921, [(1, 44), (2, 134), (3, 23)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41852931896953477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41852931896953477, 0.3437177324737387] ***
*** finished computation of 3 references, err: [Inf, 0.41852931896953477, 0.3437177324737387] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [78, 129, 24]]
** centroid: 1, normalized-entropy: 0.8439852797761356, [(1, 78), (2, 129), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [126, 109, 0]]
** centroid: 2, normalized-entropy: 0.9962217901323427, [(1, 126), (2, 109)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [198, 3, 0]]
** centroid: 3, normalized-entropy: 0.11190990870168394, [(1, 198), (2, 3)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37442505653869285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37442505653869285, 0.24802858784638188] ***
*** starting iteration: 2; err: [Inf, 0.37442505653869285, 0.24802858784638188] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37442505653869285, 0.24802858784638188, 0.23804810080766767] ***
*** starting iteration: 3; err: [Inf, 0.37442505653869285, 0.24802858784638188, 0.23804810080766767] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37442505653869285, 0.24802858784638188, 0.23804810080766767, 0.23562293671709192] ***
*** starting iteration: 4; err: [Inf, 0.37442505653869285, 0.24802858784638188, 0.23804810080766767, 0.23562293671709192] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37442505653869285, 0.24802858784638188, 0.23804810080766767, 0.23562293671709192, 0.2342369088598222] ***
*** starting iteration: 5; err: [Inf, 0.37442505653869285, 0.24802858784638188, 0.23804810080766767, 0.23562293671709192, 0.2342369088598222] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37442505653869285, 0.24802858784638188, 0.23804810080766767, 0.23562293671709192, 0.2342369088598222, 0.23356515499161887] ***
*** finished computation of 3 references, err: [Inf, 0.37442505653869285, 0.24802858784638188, 0.23804810080766767, 0.23562293671709192, 0.2342369088598222, 0.23356515499161887] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [250, 9, 0]]
** centroid: 1, normalized-entropy: 0.21767548390855174, [(1, 250), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [138, 57, 0]]
** centroid: 2, normalized-entropy: 0.871683617119982, [(1, 138), (2, 57)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 183, 29]]
** centroid: 3, normalized-entropy: 0.5757764957675418, [(2, 183), (3, 29)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.30129979321079653] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30129979321079653, 0.24436095950711725] ***
*** starting iteration: 2; err: [Inf, 0.30129979321079653, 0.24436095950711725] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30129979321079653, 0.24436095950711725, 0.23636162531809293] ***
*** starting iteration: 3; err: [Inf, 0.30129979321079653, 0.24436095950711725, 0.23636162531809293] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30129979321079653, 0.24436095950711725, 0.23636162531809293, 0.2343474087895996] ***
*** starting iteration: 4; err: [Inf, 0.30129979321079653, 0.24436095950711725, 0.23636162531809293, 0.2343474087895996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30129979321079653, 0.24436095950711725, 0.23636162531809293, 0.2343474087895996, 0.23378038494338071] ***
*** finished computation of 3 references, err: [Inf, 0.30129979321079653, 0.24436095950711725, 0.23636162531809293, 0.2343474087895996, 0.23378038494338071] ***
*** center 1: selecting labels [1] (freq >= 2) [from [236, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [145, 47, 0]]
** centroid: 2, normalized-entropy: 0.8029182607158726, [(1, 145), (2, 47)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [23, 193, 23]]
** centroid: 3, normalized-entropy: 0.5672536537601173, [(1, 23), (2, 193), (3, 23)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.26947844645910446] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26947844645910446, 0.23525857529986924] ***
*** starting iteration: 2; err: [Inf, 0.26947844645910446, 0.23525857529986924] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26947844645910446, 0.23525857529986924, 0.23513970459983133] ***
*** finished computation of 3 references, err: [Inf, 0.26947844645910446, 0.23525857529986924, 0.23513970459983133] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [96, 161, 24]]
** centroid: 1, normalized-entropy: 0.8157195998946318, [(1, 96), (2, 161), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [109, 80, 0]]
** centroid: 2, normalized-entropy: 0.9829496253233267, [(1, 109), (2, 80)]
*** center 3: selecting labels [1] (freq >= 2) [from [197, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2599421642712309] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2599421642712309, 0.20466448031379855] ***
*** starting iteration: 2; err: [Inf, 0.2599421642712309, 0.20466448031379855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2599421642712309, 0.20466448031379855, 0.20068579350944954] ***
*** starting iteration: 3; err: [Inf, 0.2599421642712309, 0.20466448031379855, 0.20068579350944954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2599421642712309, 0.20466448031379855, 0.20068579350944954, 0.19909015899613589] ***
*** finished computation of 7 references, err: [Inf, 0.2599421642712309, 0.20466448031379855, 0.20068579350944954, 0.19909015899613589] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [30, 33, 0]]
** centroid: 1, normalized-entropy: 0.998363672593813, [(1, 30), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [79, 44, 0]]
** centroid: 2, normalized-entropy: 0.9407773482170269, [(1, 79), (2, 44)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [30, 34, 0]]
** centroid: 3, normalized-entropy: 0.9971803988942641, [(1, 30), (2, 34)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [99, 28, 0]]
** centroid: 4, normalized-entropy: 0.7610292284611874, [(1, 99), (2, 28)]
*** center 5: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 110, 29]]
** centroid: 6, normalized-entropy: 0.738861811238528, [(2, 110), (3, 29)]
*** center 7: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2990282439763589] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2990282439763589, 0.21715008541857866] ***
*** starting iteration: 2; err: [Inf, 0.2990282439763589, 0.21715008541857866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2990282439763589, 0.21715008541857866, 0.20186225781733844] ***
*** starting iteration: 3; err: [Inf, 0.2990282439763589, 0.21715008541857866, 0.20186225781733844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2990282439763589, 0.21715008541857866, 0.20186225781733844, 0.19513717928281363] ***
*** finished computation of 7 references, err: [Inf, 0.2990282439763589, 0.21715008541857866, 0.20186225781733844, 0.19513717928281363] ***
*** center 1: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [29, 81, 0]]
** centroid: 2, normalized-entropy: 0.8321842672305305, [(1, 29), (2, 81)]
*** center 3: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 102, 23]]
** centroid: 5, normalized-entropy: 0.6887498056988564, [(2, 102), (3, 23)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [69, 29, 0]]
** centroid: 6, normalized-entropy: 0.8762441668050731, [(1, 69), (2, 29)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [63, 28, 0]]
** centroid: 7, normalized-entropy: 0.8904916402194913, [(1, 63), (2, 28)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23235186966027188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23235186966027188, 0.21334689265435403] ***
*** starting iteration: 2; err: [Inf, 0.23235186966027188, 0.21334689265435403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23235186966027188, 0.21334689265435403, 0.2064331350638636] ***
*** starting iteration: 3; err: [Inf, 0.23235186966027188, 0.21334689265435403, 0.2064331350638636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23235186966027188, 0.21334689265435403, 0.2064331350638636, 0.19971983566478096] ***
*** finished computation of 7 references, err: [Inf, 0.23235186966027188, 0.21334689265435403, 0.2064331350638636, 0.19971983566478096] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [20, 54, 0]]
** centroid: 1, normalized-entropy: 0.8418521897563208, [(1, 20), (2, 54)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [49, 19, 0]]
** centroid: 2, normalized-entropy: 0.8546480601169081, [(1, 49), (2, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [136, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [118, 1, 0]]
** centroid: 4, normalized-entropy: 0.0700120504953614, [(1, 118), (2, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 104, 2]]
** centroid: 5, normalized-entropy: 0.13503620280212753, [(2, 104), (3, 2)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [79, 2, 0]]
** centroid: 6, normalized-entropy: 0.16702680404522793, [(1, 79), (2, 2)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 61, 22]]
** centroid: 7, normalized-entropy: 0.8342867421739538, [(2, 61), (3, 22)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.37171995610435] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37171995610435, 0.2395186119156333] ***
*** starting iteration: 2; err: [Inf, 0.37171995610435, 0.2395186119156333] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37171995610435, 0.2395186119156333, 0.23649335810886668] ***
*** starting iteration: 3; err: [Inf, 0.37171995610435, 0.2395186119156333, 0.23649335810886668] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37171995610435, 0.2395186119156333, 0.23649335810886668, 0.23587641916475496] ***
*** finished computation of 3 references, err: [Inf, 0.37171995610435, 0.2395186119156333, 0.23649335810886668, 0.23587641916475496] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [85, 140, 25]]
** centroid: 1, normalized-entropy: 0.8390149655298179, [(1, 85), (2, 140), (3, 25)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [105, 109, 4]]
** centroid: 2, normalized-entropy: 0.7025209245039653, [(1, 105), (2, 109), (3, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [198, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3122420143060291] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3122420143060291, 0.24732793848877815] ***
*** starting iteration: 2; err: [Inf, 0.3122420143060291, 0.24732793848877815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3122420143060291, 0.24732793848877815, 0.24091881785312783] ***
*** starting iteration: 3; err: [Inf, 0.3122420143060291, 0.24732793848877815, 0.24091881785312783] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3122420143060291, 0.24732793848877815, 0.24091881785312783, 0.23999225671195062] ***
*** finished computation of 3 references, err: [Inf, 0.3122420143060291, 0.24732793848877815, 0.24091881785312783, 0.23999225671195062] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [269, 22, 0]]
** centroid: 1, normalized-entropy: 0.38648746958267416, [(1, 269), (2, 22)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [135, 49, 0]]
** centroid: 2, normalized-entropy: 0.8361114779944728, [(1, 135), (2, 49)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 169, 23]]
** centroid: 3, normalized-entropy: 0.5287617209242789, [(2, 169), (3, 23)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3454784782340881] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3454784782340881, 0.2349561126700238] ***
*** starting iteration: 2; err: [Inf, 0.3454784782340881, 0.2349561126700238] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3454784782340881, 0.2349561126700238, 0.2332654036028238] ***
*** starting iteration: 3; err: [Inf, 0.3454784782340881, 0.2349561126700238, 0.2332654036028238] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3454784782340881, 0.2349561126700238, 0.2332654036028238, 0.2328842179542561] ***
*** finished computation of 3 references, err: [Inf, 0.3454784782340881, 0.2349561126700238, 0.2332654036028238, 0.2328842179542561] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [69, 156, 24]]
** centroid: 1, normalized-entropy: 0.7956060867733645, [(1, 69), (2, 156), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [212, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [121, 85, 0]]
** centroid: 3, normalized-entropy: 0.9778564432903515, [(1, 121), (2, 85)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.361103243847565] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.361103243847565, 0.23878788943724097] ***
*** starting iteration: 2; err: [Inf, 0.361103243847565, 0.23878788943724097] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.361103243847565, 0.23878788943724097, 0.23791934833400422] ***
*** finished computation of 3 references, err: [Inf, 0.361103243847565, 0.23878788943724097, 0.23791934833400422] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [207, 44, 0]]
** centroid: 1, normalized-entropy: 0.6696838271682964, [(1, 207), (2, 44)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [181, 44, 0]]
** centroid: 2, normalized-entropy: 0.7129496499632537, [(1, 181), (2, 44)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 161, 29]]
** centroid: 3, normalized-entropy: 0.6163868386722482, [(2, 161), (3, 29)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3717356135180664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3717356135180664, 0.2437105737989587] ***
*** starting iteration: 2; err: [Inf, 0.3717356135180664, 0.2437105737989587] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3717356135180664, 0.2437105737989587, 0.24122368023944446] ***
*** starting iteration: 3; err: [Inf, 0.3717356135180664, 0.2437105737989587, 0.24122368023944446] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3717356135180664, 0.2437105737989587, 0.24122368023944446, 0.24081009422740277] ***
*** finished computation of 3 references, err: [Inf, 0.3717356135180664, 0.2437105737989587, 0.24122368023944446, 0.24081009422740277] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [273, 2, 0]]
** centroid: 1, normalized-entropy: 0.0621143557897684, [(1, 273), (2, 2)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [5, 169, 23]]
** centroid: 2, normalized-entropy: 0.4328242747371714, [(1, 5), (2, 169), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [126, 69, 0]]
** centroid: 3, normalized-entropy: 0.937456170782005, [(1, 126), (2, 69)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3604870713504403] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3604870713504403, 0.23464191509648108] ***
*** starting iteration: 2; err: [Inf, 0.3604870713504403, 0.23464191509648108] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3604870713504403, 0.23464191509648108, 0.2330659796837075] ***
*** starting iteration: 3; err: [Inf, 0.3604870713504403, 0.23464191509648108, 0.2330659796837075] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3604870713504403, 0.23464191509648108, 0.2330659796837075, 0.2330799308428164] ***
*** finished computation of 3 references, err: [Inf, 0.3604870713504403, 0.23464191509648108, 0.2330659796837075, 0.2330799308428164] ***
*** center 1: selecting labels [1] (freq >= 2) [from [261, 1, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [8, 179, 24]]
** centroid: 2, normalized-entropy: 0.4650036148727026, [(1, 8), (2, 179), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [133, 61, 0]]
** centroid: 3, normalized-entropy: 0.8982244838727241, [(1, 133), (2, 61)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 11)
[0.9530039021056984, 0.9250088411765058, 0.9189938441435448, 0.9159968351585118, 0.9069758381135626, 0.9000527473581365, 0.8999868131604658, 0.8980447513381645, 0.8969748191305079, 0.882978787170404, 0.8629228030425634]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9530039021056984
finished with 11
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 11)
[0.9530039021056984, 0.9250088411765058, 0.9189938441435448, 0.9159968351585118, 0.9069758381135626, 0.9000527473581365, 0.8999868131604658, 0.8980447513381645, 0.8969748191305079, 0.882978787170404, 0.8629228030425634]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9530039021056984
finished with 12
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.3511247258750839] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3511247258750839, 0.2507943136634322] ***
*** finished computation of 3 references, err: [Inf, 0.3511247258750839, 0.2507943136634322] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [15, 143, 29]]
** centroid: 1, normalized-entropy: 0.6340434258029648, [(1, 15), (2, 143), (3, 29)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [287, 24, 0]]
** centroid: 2, normalized-entropy: 0.39212965124561816, [(1, 287), (2, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [86, 82, 0]]
** centroid: 3, normalized-entropy: 0.9995910341890979, [(1, 86), (2, 82)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31209112348724743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31209112348724743, 0.26303212258355996] ***
*** finished computation of 3 references, err: [Inf, 0.31209112348724743, 0.26303212258355996] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [109, 89, 2]]
** centroid: 1, normalized-entropy: 0.670990231950197, [(1, 109), (2, 89), (3, 2)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [21, 143, 21]]
** centroid: 2, normalized-entropy: 0.6308159723118713, [(1, 21), (2, 143), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [274, 8, 0]]
** centroid: 3, normalized-entropy: 0.18614429306835265, [(1, 274), (2, 8)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37622018804636853] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37622018804636853, 0.26136854246769775] ***
*** finished computation of 3 references, err: [Inf, 0.37622018804636853, 0.26136854246769775] ***
*** center 1: selecting labels [1] (freq >= 2) [from [116, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [128, 162, 24]]
** centroid: 2, normalized-entropy: 0.822652255844768, [(1, 128), (2, 162), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [158, 79, 0]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(1, 158), (2, 79)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 12)
[0.9530039021056984, 0.9250088411765058, 0.9200008391625158, 0.9189938441435448, 0.9159968351585118, 0.9069758381135626, 0.9000527473581365, 0.8999868131604658, 0.8980447513381645, 0.8969748191305079, 0.882978787170404, 0.8629228030425634]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9530039021056984
finished with 12
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 12)
[0.9530039021056984, 0.9250088411765058, 0.9200008391625158, 0.9189938441435448, 0.9159968351585118, 0.9069758381135626, 0.9000527473581365, 0.8999868131604658, 0.8980447513381645, 0.8969748191305079, 0.882978787170404, 0.8629228030425634]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9530039021056984
finished with 14
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.5163040229541672] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5163040229541672, 0.35153269989544655] ***
*** starting iteration: 2; err: [Inf, 0.5163040229541672, 0.35153269989544655] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5163040229541672, 0.35153269989544655, 0.3114435566273202] ***
*** starting iteration: 3; err: [Inf, 0.5163040229541672, 0.35153269989544655, 0.3114435566273202] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5163040229541672, 0.35153269989544655, 0.3114435566273202, 0.30135395425699046] ***
*** starting iteration: 4; err: [Inf, 0.5163040229541672, 0.35153269989544655, 0.3114435566273202, 0.30135395425699046] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5163040229541672, 0.35153269989544655, 0.3114435566273202, 0.30135395425699046, 0.29838340930282714] ***
*** starting iteration: 5; err: [Inf, 0.5163040229541672, 0.35153269989544655, 0.3114435566273202, 0.30135395425699046, 0.29838340930282714] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5163040229541672, 0.35153269989544655, 0.3114435566273202, 0.30135395425699046, 0.29838340930282714, 0.297463609809028] ***
*** finished computation of 3 references, err: [Inf, 0.5163040229541672, 0.35153269989544655, 0.3114435566273202, 0.30135395425699046, 0.29838340930282714, 0.297463609809028] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [112, 98, 0]]
** centroid: 1, normalized-entropy: 0.9967916319816367, [(1, 112), (2, 98)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [81, 151, 29]]
** centroid: 2, normalized-entropy: 0.8409376237789833, [(1, 81), (2, 151), (3, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [195, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5408742593592968] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5408742593592968, 0.3430434417822908] ***
*** starting iteration: 2; err: [Inf, 0.5408742593592968, 0.3430434417822908] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388] ***
*** starting iteration: 3; err: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388, 0.3381065824173804] ***
*** starting iteration: 4; err: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388, 0.3381065824173804] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388, 0.3381065824173804, 0.33226809614356134] ***
*** starting iteration: 5; err: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388, 0.3381065824173804, 0.33226809614356134] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388, 0.3381065824173804, 0.33226809614356134, 0.32619146666192134] ***
*** starting iteration: 6; err: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388, 0.3381065824173804, 0.33226809614356134, 0.32619146666192134] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388, 0.3381065824173804, 0.33226809614356134, 0.32619146666192134, 0.3154939653210878] ***
*** starting iteration: 7; err: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388, 0.3381065824173804, 0.33226809614356134, 0.32619146666192134, 0.3154939653210878] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388, 0.3381065824173804, 0.33226809614356134, 0.32619146666192134, 0.3154939653210878, 0.298452768189975] ***
*** starting iteration: 8; err: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388, 0.3381065824173804, 0.33226809614356134, 0.32619146666192134, 0.3154939653210878, 0.298452768189975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388, 0.3381065824173804, 0.33226809614356134, 0.32619146666192134, 0.3154939653210878, 0.298452768189975, 0.2972393050437969] ***
*** starting iteration: 9; err: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388, 0.3381065824173804, 0.33226809614356134, 0.32619146666192134, 0.3154939653210878, 0.298452768189975, 0.2972393050437969] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388, 0.3381065824173804, 0.33226809614356134, 0.32619146666192134, 0.3154939653210878, 0.298452768189975, 0.2972393050437969, 0.2967749229133844] ***
*** finished computation of 3 references, err: [Inf, 0.5408742593592968, 0.3430434417822908, 0.3412461437908388, 0.3381065824173804, 0.33226809614356134, 0.32619146666192134, 0.3154939653210878, 0.298452768189975, 0.2972393050437969, 0.2967749229133844] ***
*** center 1: selecting labels [1] (freq >= 2) [from [234, 1, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [11, 193, 23]]
** centroid: 2, normalized-entropy: 0.4702417445596727, [(1, 11), (2, 193), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [159, 46, 0]]
** centroid: 3, normalized-entropy: 0.76810331965747, [(1, 159), (2, 46)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3804001091278509] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3804001091278509, 0.29781853991129187] ***
*** starting iteration: 2; err: [Inf, 0.3804001091278509, 0.29781853991129187] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3804001091278509, 0.29781853991129187, 0.2967747355011226] ***
*** starting iteration: 3; err: [Inf, 0.3804001091278509, 0.29781853991129187, 0.2967747355011226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3804001091278509, 0.29781853991129187, 0.2967747355011226, 0.2967526616537008] ***
*** finished computation of 3 references, err: [Inf, 0.3804001091278509, 0.29781853991129187, 0.2967747355011226, 0.2967526616537008] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [82, 163, 24]]
** centroid: 1, normalized-entropy: 0.8022009640535238, [(1, 82), (2, 163), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [207, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [113, 78, 0]]
** centroid: 3, normalized-entropy: 0.9756403682233321, [(1, 113), (2, 78)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2845383183303493] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2845383183303493, 0.23905474234752738] ***
*** starting iteration: 2; err: [Inf, 0.2845383183303493, 0.23905474234752738] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2845383183303493, 0.23905474234752738, 0.23745553198413136] ***
*** starting iteration: 3; err: [Inf, 0.2845383183303493, 0.23905474234752738, 0.23745553198413136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2845383183303493, 0.23905474234752738, 0.23745553198413136, 0.23664217497370355] ***
*** finished computation of 3 references, err: [Inf, 0.2845383183303493, 0.23905474234752738, 0.23745553198413136, 0.23664217497370355] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 183, 29]]
** centroid: 1, normalized-entropy: 0.5757764957675418, [(2, 183), (3, 29)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [167, 52, 0]]
** centroid: 2, normalized-entropy: 0.7907620267860889, [(1, 167), (2, 52)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [221, 14, 0]]
** centroid: 3, normalized-entropy: 0.32575339535515785, [(1, 221), (2, 14)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38052386489474793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38052386489474793, 0.26046729322405593] ***
*** starting iteration: 2; err: [Inf, 0.38052386489474793, 0.26046729322405593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38052386489474793, 0.26046729322405593, 0.2360688618913494] ***
*** starting iteration: 3; err: [Inf, 0.38052386489474793, 0.26046729322405593, 0.2360688618913494] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38052386489474793, 0.26046729322405593, 0.2360688618913494, 0.23309377342535145] ***
*** starting iteration: 4; err: [Inf, 0.38052386489474793, 0.26046729322405593, 0.2360688618913494, 0.23309377342535145] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38052386489474793, 0.26046729322405593, 0.2360688618913494, 0.23309377342535145, 0.23285017769666447] ***
*** finished computation of 3 references, err: [Inf, 0.38052386489474793, 0.26046729322405593, 0.2360688618913494, 0.23309377342535145, 0.23285017769666447] ***
*** center 1: selecting labels [1] (freq >= 2) [from [211, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [144, 47, 0]]
** centroid: 2, normalized-entropy: 0.804994921038147, [(1, 144), (2, 47)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [49, 193, 23]]
** centroid: 3, normalized-entropy: 0.6873633250458564, [(1, 49), (2, 193), (3, 23)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.29984715401377904] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29984715401377904, 0.26030943700219916] ***
*** starting iteration: 2; err: [Inf, 0.29984715401377904, 0.26030943700219916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29984715401377904, 0.26030943700219916, 0.2389002760496644] ***
*** starting iteration: 3; err: [Inf, 0.29984715401377904, 0.26030943700219916, 0.2389002760496644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29984715401377904, 0.26030943700219916, 0.2389002760496644, 0.23557450259774587] ***
*** starting iteration: 4; err: [Inf, 0.29984715401377904, 0.26030943700219916, 0.2389002760496644, 0.23557450259774587] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29984715401377904, 0.26030943700219916, 0.2389002760496644, 0.23557450259774587, 0.23531965609616146] ***
*** finished computation of 3 references, err: [Inf, 0.29984715401377904, 0.26030943700219916, 0.2389002760496644, 0.23557450259774587, 0.23531965609616146] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [70, 173, 24]]
** centroid: 1, normalized-entropy: 0.7725373741600817, [(1, 70), (2, 173), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [218, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [114, 68, 0]]
** centroid: 3, normalized-entropy: 0.9534158774525225, [(1, 114), (2, 68)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 14)
[0.9530039021056984, 0.9250088411765058, 0.9200008391625158, 0.9189938441435448, 0.9159968351585118, 0.9069758381135626, 0.9069728411045777, 0.9000527473581365, 0.8999868131604658, 0.8980447513381645, 0.8969748191305079, 0.882978787170404, 0.8700586814359269, 0.8629228030425634]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9530039021056984
finished with 15
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.38201284326484297] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38201284326484297, 0.3061980868594626] ***
*** starting iteration: 2; err: [Inf, 0.38201284326484297, 0.3061980868594626] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38201284326484297, 0.3061980868594626, 0.29981950021491527] ***
*** starting iteration: 3; err: [Inf, 0.38201284326484297, 0.3061980868594626, 0.29981950021491527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38201284326484297, 0.3061980868594626, 0.29981950021491527, 0.2983998111603004] ***
*** starting iteration: 4; err: [Inf, 0.38201284326484297, 0.3061980868594626, 0.29981950021491527, 0.2983998111603004] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38201284326484297, 0.3061980868594626, 0.29981950021491527, 0.2983998111603004, 0.2979555707578701] ***
*** finished computation of 3 references, err: [Inf, 0.38201284326484297, 0.3061980868594626, 0.29981950021491527, 0.2983998111603004, 0.2979555707578701] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [63, 159, 29]]
** centroid: 1, normalized-entropy: 0.8060289937140793, [(1, 63), (2, 159), (3, 29)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [122, 90, 0]]
** centroid: 2, normalized-entropy: 0.9835018986559216, [(1, 122), (2, 90)]
*** center 3: selecting labels [1] (freq >= 2) [from [203, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4496140905447874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4496140905447874, 0.32353901984156114] ***
*** starting iteration: 2; err: [Inf, 0.4496140905447874, 0.32353901984156114] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4496140905447874, 0.32353901984156114, 0.3001789175297903] ***
*** starting iteration: 3; err: [Inf, 0.4496140905447874, 0.32353901984156114, 0.3001789175297903] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4496140905447874, 0.32353901984156114, 0.3001789175297903, 0.2958860732796511] ***
*** starting iteration: 4; err: [Inf, 0.4496140905447874, 0.32353901984156114, 0.3001789175297903, 0.2958860732796511] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4496140905447874, 0.32353901984156114, 0.3001789175297903, 0.2958860732796511, 0.29469986865087516] ***
*** starting iteration: 5; err: [Inf, 0.4496140905447874, 0.32353901984156114, 0.3001789175297903, 0.2958860732796511, 0.29469986865087516] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4496140905447874, 0.32353901984156114, 0.3001789175297903, 0.2958860732796511, 0.29469986865087516, 0.2944226240378985] ***
*** finished computation of 3 references, err: [Inf, 0.4496140905447874, 0.32353901984156114, 0.3001789175297903, 0.2958860732796511, 0.29469986865087516, 0.2944226240378985] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [65, 154, 23]]
** centroid: 1, normalized-entropy: 0.7867953264007923, [(1, 65), (2, 154), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [136, 86, 0]]
** centroid: 2, normalized-entropy: 0.9630928243932294, [(1, 136), (2, 86)]
*** center 3: selecting labels [1] (freq >= 2) [from [203, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38576935738537355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38576935738537355, 0.32414378736843946] ***
*** starting iteration: 2; err: [Inf, 0.38576935738537355, 0.32414378736843946] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38576935738537355, 0.32414378736843946, 0.3162747772795887] ***
*** starting iteration: 3; err: [Inf, 0.38576935738537355, 0.32414378736843946, 0.3162747772795887] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38576935738537355, 0.32414378736843946, 0.3162747772795887, 0.31169893795825443] ***
*** starting iteration: 4; err: [Inf, 0.38576935738537355, 0.32414378736843946, 0.3162747772795887, 0.31169893795825443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38576935738537355, 0.32414378736843946, 0.3162747772795887, 0.31169893795825443, 0.2975750436882085] ***
*** starting iteration: 5; err: [Inf, 0.38576935738537355, 0.32414378736843946, 0.3162747772795887, 0.31169893795825443, 0.2975750436882085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38576935738537355, 0.32414378736843946, 0.3162747772795887, 0.31169893795825443, 0.2975750436882085, 0.2955879719321919] ***
*** starting iteration: 6; err: [Inf, 0.38576935738537355, 0.32414378736843946, 0.3162747772795887, 0.31169893795825443, 0.2975750436882085, 0.2955879719321919] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38576935738537355, 0.32414378736843946, 0.3162747772795887, 0.31169893795825443, 0.2975750436882085, 0.2955879719321919, 0.2946297746162856] ***
*** finished computation of 3 references, err: [Inf, 0.38576935738537355, 0.32414378736843946, 0.3162747772795887, 0.31169893795825443, 0.2975750436882085, 0.2955879719321919, 0.2946297746162856] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [1, 172, 24]]
** centroid: 1, normalized-entropy: 0.5363596511250623, [(2, 172), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [266, 5, 0]]
** centroid: 2, normalized-entropy: 0.1326480512514611, [(1, 266), (2, 5)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [135, 64, 0]]
** centroid: 3, normalized-entropy: 0.906121577318211, [(1, 135), (2, 64)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 15)
[0.9530039021056984, 0.9290038541535548, 0.9250088411765058, 0.9200008391625158, 0.9189938441435448, 0.9159968351585118, 0.9069758381135626, 0.9069728411045777, 0.9000527473581365, 0.8999868131604658, 0.8980447513381645, 0.8969748191305079, 0.882978787170404, 0.8700586814359269, 0.8629228030425634]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9530039021056984
finished with 16
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.40416194110627734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40416194110627734, 0.31241110292914975] ***
*** starting iteration: 2; err: [Inf, 0.40416194110627734, 0.31241110292914975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40416194110627734, 0.31241110292914975, 0.3008482754957658] ***
*** starting iteration: 3; err: [Inf, 0.40416194110627734, 0.31241110292914975, 0.3008482754957658] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40416194110627734, 0.31241110292914975, 0.3008482754957658, 0.2986644195132629] ***
*** starting iteration: 4; err: [Inf, 0.40416194110627734, 0.31241110292914975, 0.3008482754957658, 0.2986644195132629] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40416194110627734, 0.31241110292914975, 0.3008482754957658, 0.2986644195132629, 0.29797738022660397] ***
*** finished computation of 3 references, err: [Inf, 0.40416194110627734, 0.31241110292914975, 0.3008482754957658, 0.2986644195132629, 0.29797738022660397] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [77, 161, 29]]
** centroid: 1, normalized-entropy: 0.8235268122155387, [(1, 77), (2, 161), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [197, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [114, 88, 0]]
** centroid: 3, normalized-entropy: 0.9880162151534644, [(1, 114), (2, 88)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3789671392667329] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3789671392667329, 0.31175164674231404] ***
*** starting iteration: 2; err: [Inf, 0.3789671392667329, 0.31175164674231404] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3789671392667329, 0.31175164674231404, 0.2969088045596752] ***
*** starting iteration: 3; err: [Inf, 0.3789671392667329, 0.31175164674231404, 0.2969088045596752] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3789671392667329, 0.31175164674231404, 0.2969088045596752, 0.29458495404716506] ***
*** starting iteration: 4; err: [Inf, 0.3789671392667329, 0.31175164674231404, 0.2969088045596752, 0.29458495404716506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3789671392667329, 0.31175164674231404, 0.2969088045596752, 0.29458495404716506, 0.2943661667160813] ***
*** finished computation of 3 references, err: [Inf, 0.3789671392667329, 0.31175164674231404, 0.2969088045596752, 0.29458495404716506, 0.2943661667160813] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [73, 171, 23]]
** centroid: 1, normalized-entropy: 0.7747295519984925, [(1, 73), (2, 171), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [134, 69, 0]]
** centroid: 2, normalized-entropy: 0.9247243948253971, [(1, 134), (2, 69)]
*** center 3: selecting labels [1] (freq >= 2) [from [197, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3878394379189749] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3878394379189749, 0.30566465378371716] ***
*** starting iteration: 2; err: [Inf, 0.3878394379189749, 0.30566465378371716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3878394379189749, 0.30566465378371716, 0.296923012476878] ***
*** starting iteration: 3; err: [Inf, 0.3878394379189749, 0.30566465378371716, 0.296923012476878] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3878394379189749, 0.30566465378371716, 0.296923012476878, 0.29511122988338684] ***
*** starting iteration: 4; err: [Inf, 0.3878394379189749, 0.30566465378371716, 0.296923012476878, 0.29511122988338684] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3878394379189749, 0.30566465378371716, 0.296923012476878, 0.29511122988338684, 0.2946312636851907] ***
*** finished computation of 3 references, err: [Inf, 0.3878394379189749, 0.30566465378371716, 0.296923012476878, 0.29511122988338684, 0.2946312636851907] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [70, 154, 24]]
** centroid: 1, normalized-entropy: 0.8000256604279913, [(1, 70), (2, 154), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [213, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [119, 87, 0]]
** centroid: 3, normalized-entropy: 0.9825228671226133, [(1, 119), (2, 87)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 16)
[0.9530039021056984, 0.9290038541535548, 0.9250088411765058, 0.9200008391625158, 0.9189938441435448, 0.9159968351585118, 0.9159848471225717, 0.9069758381135626, 0.9069728411045777, 0.9000527473581365, 0.8999868131604658, 0.8980447513381645, 0.8969748191305079, 0.882978787170404, 0.8700586814359269, 0.8629228030425634]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9530039021056984
finished with 16
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9530039021056984, 0.9290038541535548, 0.9250088411765058, 0.9200008391625158, 0.9189938441435448, 0.9159968351585118, 0.9159848471225717, 0.9069758381135626, 0.9069728411045777, 0.9000527473581365, 0.8999868131604658, 0.8980447513381645, 0.8969748191305079, 0.882978787170404, 0.8700586814359269, 0.8629228030425634]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9530039021056984
finished with 17
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.27443318994780136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27443318994780136, 0.24410526695110285] ***
*** starting iteration: 2; err: [Inf, 0.27443318994780136, 0.24410526695110285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27443318994780136, 0.24410526695110285, 0.23720625808529622] ***
*** starting iteration: 3; err: [Inf, 0.27443318994780136, 0.24410526695110285, 0.23720625808529622] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27443318994780136, 0.24410526695110285, 0.23720625808529622, 0.23583855893597142] ***
*** finished computation of 3 references, err: [Inf, 0.27443318994780136, 0.24410526695110285, 0.23720625808529622, 0.23583855893597142] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [85, 143, 25]]
** centroid: 1, normalized-entropy: 0.8352740325738187, [(1, 85), (2, 143), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [203, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [100, 106, 4]]
** centroid: 3, normalized-entropy: 0.7043771020331074, [(1, 100), (2, 106), (3, 4)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.30799634214015914] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30799634214015914, 0.23994545076975132] ***
*** starting iteration: 2; err: [Inf, 0.30799634214015914, 0.23994545076975132] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30799634214015914, 0.23994545076975132, 0.2355601046027719] ***
*** starting iteration: 3; err: [Inf, 0.30799634214015914, 0.23994545076975132, 0.2355601046027719] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30799634214015914, 0.23994545076975132, 0.2355601046027719, 0.234708060380602] ***
*** finished computation of 3 references, err: [Inf, 0.30799634214015914, 0.23994545076975132, 0.2355601046027719, 0.234708060380602] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [126, 97, 3]]
** centroid: 1, normalized-entropy: 0.6791616586217422, [(1, 126), (2, 97), (3, 3)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [86, 143, 20]]
** centroid: 2, normalized-entropy: 0.808506197420474, [(1, 86), (2, 143), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [192, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3194893665354827] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3194893665354827, 0.2369110007104331] ***
*** starting iteration: 2; err: [Inf, 0.3194893665354827, 0.2369110007104331] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3194893665354827, 0.2369110007104331, 0.23359460263852327] ***
*** starting iteration: 3; err: [Inf, 0.3194893665354827, 0.2369110007104331, 0.23359460263852327] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3194893665354827, 0.2369110007104331, 0.23359460263852327, 0.2328067193728644] ***
*** finished computation of 3 references, err: [Inf, 0.3194893665354827, 0.2369110007104331, 0.23359460263852327, 0.2328067193728644] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [67, 160, 24]]
** centroid: 1, normalized-entropy: 0.7864799821085574, [(1, 67), (2, 160), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [214, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [121, 81, 0]]
** centroid: 3, normalized-entropy: 0.9715268196632771, [(1, 121), (2, 81)]
finished with 6 centroids; started with 3
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.2777956010927446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2777956010927446, 0.18528013861412182] ***
*** starting iteration: 2; err: [Inf, 0.2777956010927446, 0.18528013861412182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2777956010927446, 0.18528013861412182, 0.16669122685911134] ***
*** starting iteration: 3; err: [Inf, 0.2777956010927446, 0.18528013861412182, 0.16669122685911134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2777956010927446, 0.18528013861412182, 0.16669122685911134, 0.15770799068408087] ***
*** starting iteration: 4; err: [Inf, 0.2777956010927446, 0.18528013861412182, 0.16669122685911134, 0.15770799068408087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2777956010927446, 0.18528013861412182, 0.16669122685911134, 0.15770799068408087, 0.1544337670598179] ***
*** starting iteration: 5; err: [Inf, 0.2777956010927446, 0.18528013861412182, 0.16669122685911134, 0.15770799068408087, 0.1544337670598179] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2777956010927446, 0.18528013861412182, 0.16669122685911134, 0.15770799068408087, 0.1544337670598179, 0.15244091894058512] ***
*** starting iteration: 6; err: [Inf, 0.2777956010927446, 0.18528013861412182, 0.16669122685911134, 0.15770799068408087, 0.1544337670598179, 0.15244091894058512] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2777956010927446, 0.18528013861412182, 0.16669122685911134, 0.15770799068408087, 0.1544337670598179, 0.15244091894058512, 0.15150577286886982] ***
*** finished computation of 7 references, err: [Inf, 0.2777956010927446, 0.18528013861412182, 0.16669122685911134, 0.15770799068408087, 0.1544337670598179, 0.15244091894058512, 0.15150577286886982] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 113, 38]]
** centroid: 1, normalized-entropy: 0.8138917044656587, [(2, 113), (3, 38)]
*** center 2: selecting labels [1] (freq >= 2) [from [180, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [8, 140, 0]]
** centroid: 3, normalized-entropy: 0.30337483608641397, [(1, 8), (2, 140)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [133, 39, 0]]
** centroid: 4, normalized-entropy: 0.7722923683225287, [(1, 133), (2, 39)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [82, 18, 0]]
** centroid: 5, normalized-entropy: 0.6800770457282798, [(1, 82), (2, 18)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [89, 55, 0]]
** centroid: 6, normalized-entropy: 0.9594037542210228, [(1, 89), (2, 55)]
*** center 7: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21392852444946767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21392852444946767, 0.16390101083368064] ***
*** starting iteration: 2; err: [Inf, 0.21392852444946767, 0.16390101083368064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21392852444946767, 0.16390101083368064, 0.15781770019093527] ***
*** starting iteration: 3; err: [Inf, 0.21392852444946767, 0.16390101083368064, 0.15781770019093527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21392852444946767, 0.16390101083368064, 0.15781770019093527, 0.15560085755959152] ***
*** starting iteration: 4; err: [Inf, 0.21392852444946767, 0.16390101083368064, 0.15781770019093527, 0.15560085755959152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21392852444946767, 0.16390101083368064, 0.15781770019093527, 0.15560085755959152, 0.15330526961386204] ***
*** starting iteration: 5; err: [Inf, 0.21392852444946767, 0.16390101083368064, 0.15781770019093527, 0.15560085755959152, 0.15330526961386204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21392852444946767, 0.16390101083368064, 0.15781770019093527, 0.15560085755959152, 0.15330526961386204, 0.150999336021021] ***
*** starting iteration: 6; err: [Inf, 0.21392852444946767, 0.16390101083368064, 0.15781770019093527, 0.15560085755959152, 0.15330526961386204, 0.150999336021021] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21392852444946767, 0.16390101083368064, 0.15781770019093527, 0.15560085755959152, 0.15330526961386204, 0.150999336021021, 0.1498336909050122] ***
*** starting iteration: 7; err: [Inf, 0.21392852444946767, 0.16390101083368064, 0.15781770019093527, 0.15560085755959152, 0.15330526961386204, 0.150999336021021, 0.1498336909050122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21392852444946767, 0.16390101083368064, 0.15781770019093527, 0.15560085755959152, 0.15330526961386204, 0.150999336021021, 0.1498336909050122, 0.14936448914650827] ***
*** finished computation of 7 references, err: [Inf, 0.21392852444946767, 0.16390101083368064, 0.15781770019093527, 0.15560085755959152, 0.15330526961386204, 0.150999336021021, 0.1498336909050122, 0.14936448914650827] ***
*** center 1: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [76, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 9, 0]]
** centroid: 4, normalized-entropy: 0.6572729784684466, [(1, 44), (2, 9)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 54, 17]]
** centroid: 5, normalized-entropy: 0.7941021417852022, [(2, 54), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [77, 28, 0]]
** centroid: 6, normalized-entropy: 0.8366407419411671, [(1, 77), (2, 28)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 75, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18320274971798062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18320274971798062, 0.16328409953042866] ***
*** starting iteration: 2; err: [Inf, 0.18320274971798062, 0.16328409953042866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18320274971798062, 0.16328409953042866, 0.15700152056198566] ***
*** starting iteration: 3; err: [Inf, 0.18320274971798062, 0.16328409953042866, 0.15700152056198566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18320274971798062, 0.16328409953042866, 0.15700152056198566, 0.15442047880962492] ***
*** starting iteration: 4; err: [Inf, 0.18320274971798062, 0.16328409953042866, 0.15700152056198566, 0.15442047880962492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18320274971798062, 0.16328409953042866, 0.15700152056198566, 0.15442047880962492, 0.15356077592633666] ***
*** finished computation of 7 references, err: [Inf, 0.18320274971798062, 0.16328409953042866, 0.15700152056198566, 0.15442047880962492, 0.15356077592633666] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [5, 67, 0]]
** centroid: 1, normalized-entropy: 0.3638469981769295, [(1, 5), (2, 67)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [62, 32, 0]]
** centroid: 2, normalized-entropy: 0.9252253278054431, [(1, 62), (2, 32)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 40, 25]]
** centroid: 3, normalized-entropy: 0.961236604722876, [(2, 40), (3, 25)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [54, 10, 0]]
** centroid: 4, normalized-entropy: 0.625262405223423, [(1, 54), (2, 10)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [34, 19, 0]]
** centroid: 5, normalized-entropy: 0.9414231081869789, [(1, 34), (2, 19)]
*** center 6: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28259886184334754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28259886184334754, 0.18648799957428128] ***
*** starting iteration: 2; err: [Inf, 0.28259886184334754, 0.18648799957428128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28259886184334754, 0.18648799957428128, 0.16042562553938478] ***
*** starting iteration: 3; err: [Inf, 0.28259886184334754, 0.18648799957428128, 0.16042562553938478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28259886184334754, 0.18648799957428128, 0.16042562553938478, 0.1509694601316005] ***
*** starting iteration: 4; err: [Inf, 0.28259886184334754, 0.18648799957428128, 0.16042562553938478, 0.1509694601316005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28259886184334754, 0.18648799957428128, 0.16042562553938478, 0.1509694601316005, 0.14893585799634457] ***
*** starting iteration: 5; err: [Inf, 0.28259886184334754, 0.18648799957428128, 0.16042562553938478, 0.1509694601316005, 0.14893585799634457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28259886184334754, 0.18648799957428128, 0.16042562553938478, 0.1509694601316005, 0.14893585799634457, 0.14777521142363548] ***
*** starting iteration: 6; err: [Inf, 0.28259886184334754, 0.18648799957428128, 0.16042562553938478, 0.1509694601316005, 0.14893585799634457, 0.14777521142363548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28259886184334754, 0.18648799957428128, 0.16042562553938478, 0.1509694601316005, 0.14893585799634457, 0.14777521142363548, 0.1465868156552315] ***
*** starting iteration: 7; err: [Inf, 0.28259886184334754, 0.18648799957428128, 0.16042562553938478, 0.1509694601316005, 0.14893585799634457, 0.14777521142363548, 0.1465868156552315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28259886184334754, 0.18648799957428128, 0.16042562553938478, 0.1509694601316005, 0.14893585799634457, 0.14777521142363548, 0.1465868156552315, 0.14581534200441093] ***
*** finished computation of 7 references, err: [Inf, 0.28259886184334754, 0.18648799957428128, 0.16042562553938478, 0.1509694601316005, 0.14893585799634457, 0.14777521142363548, 0.1465868156552315, 0.14581534200441093] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [6, 66, 0]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(1, 6), (2, 66)]
*** center 2: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [75, 12, 0]]
** centroid: 4, normalized-entropy: 0.5787946246321198, [(1, 75), (2, 12)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [62, 15, 0]]
** centroid: 5, normalized-entropy: 0.7114160189012126, [(1, 62), (2, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 74, 18]]
** centroid: 7, normalized-entropy: 0.7131467486384921, [(2, 74), (3, 18)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1686864577215165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1686864577215165, 0.15758319303765894] ***
*** starting iteration: 2; err: [Inf, 0.1686864577215165, 0.15758319303765894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1686864577215165, 0.15758319303765894, 0.15472465900611132] ***
*** starting iteration: 3; err: [Inf, 0.1686864577215165, 0.15758319303765894, 0.15472465900611132] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1686864577215165, 0.15758319303765894, 0.15472465900611132, 0.15166037463396786] ***
*** starting iteration: 4; err: [Inf, 0.1686864577215165, 0.15758319303765894, 0.15472465900611132, 0.15166037463396786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1686864577215165, 0.15758319303765894, 0.15472465900611132, 0.15166037463396786, 0.14909966826532037] ***
*** starting iteration: 5; err: [Inf, 0.1686864577215165, 0.15758319303765894, 0.15472465900611132, 0.15166037463396786, 0.14909966826532037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1686864577215165, 0.15758319303765894, 0.15472465900611132, 0.15166037463396786, 0.14909966826532037, 0.14747214596159755] ***
*** starting iteration: 6; err: [Inf, 0.1686864577215165, 0.15758319303765894, 0.15472465900611132, 0.15166037463396786, 0.14909966826532037, 0.14747214596159755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1686864577215165, 0.15758319303765894, 0.15472465900611132, 0.15166037463396786, 0.14909966826532037, 0.14747214596159755, 0.1470424476796761] ***
*** finished computation of 7 references, err: [Inf, 0.1686864577215165, 0.15758319303765894, 0.15472465900611132, 0.15166037463396786, 0.14909966826532037, 0.14747214596159755, 0.1470424476796761] ***
*** center 1: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [48, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 74, 18]]
** centroid: 4, normalized-entropy: 0.7131467486384921, [(2, 74), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [64, 24, 0]]
** centroid: 5, normalized-entropy: 0.8453509366224364, [(1, 64), (2, 24)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [10, 62, 0]]
** centroid: 6, normalized-entropy: 0.581321498763703, [(1, 10), (2, 62)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [74, 13, 0]]
** centroid: 7, normalized-entropy: 0.6084002154765848, [(1, 74), (2, 13)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18789400251954794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18789400251954794, 0.15613944630138576] ***
*** starting iteration: 2; err: [Inf, 0.18789400251954794, 0.15613944630138576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18789400251954794, 0.15613944630138576, 0.15018522965535522] ***
*** starting iteration: 3; err: [Inf, 0.18789400251954794, 0.15613944630138576, 0.15018522965535522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18789400251954794, 0.15613944630138576, 0.15018522965535522, 0.14962969773076476] ***
*** finished computation of 7 references, err: [Inf, 0.18789400251954794, 0.15613944630138576, 0.15018522965535522, 0.14962969773076476] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [25, 31, 0]]
** centroid: 1, normalized-entropy: 0.9917033083725819, [(1, 25), (2, 31)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 65, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 19]]
** centroid: 3, normalized-entropy: 0.978070970973496, [(2, 27), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [93, 12, 0]]
** centroid: 6, normalized-entropy: 0.5127091420308771, [(1, 93), (2, 12)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [29, 32, 0]]
** centroid: 7, normalized-entropy: 0.9982545693874832, [(1, 29), (2, 32)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1745801931247115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1745801931247115, 0.1649083632566035] ***
*** starting iteration: 2; err: [Inf, 0.1745801931247115, 0.1649083632566035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1745801931247115, 0.1649083632566035, 0.16260952047072352] ***
*** starting iteration: 3; err: [Inf, 0.1745801931247115, 0.1649083632566035, 0.16260952047072352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1745801931247115, 0.1649083632566035, 0.16260952047072352, 0.16025354274734854] ***
*** starting iteration: 4; err: [Inf, 0.1745801931247115, 0.1649083632566035, 0.16260952047072352, 0.16025354274734854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1745801931247115, 0.1649083632566035, 0.16260952047072352, 0.16025354274734854, 0.15867610079236327] ***
*** starting iteration: 5; err: [Inf, 0.1745801931247115, 0.1649083632566035, 0.16260952047072352, 0.16025354274734854, 0.15867610079236327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1745801931247115, 0.1649083632566035, 0.16260952047072352, 0.16025354274734854, 0.15867610079236327, 0.1570578235494904] ***
*** starting iteration: 6; err: [Inf, 0.1745801931247115, 0.1649083632566035, 0.16260952047072352, 0.16025354274734854, 0.15867610079236327, 0.1570578235494904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1745801931247115, 0.1649083632566035, 0.16260952047072352, 0.16025354274734854, 0.15867610079236327, 0.1570578235494904, 0.1557978381179273] ***
*** starting iteration: 7; err: [Inf, 0.1745801931247115, 0.1649083632566035, 0.16260952047072352, 0.16025354274734854, 0.15867610079236327, 0.1570578235494904, 0.1557978381179273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1745801931247115, 0.1649083632566035, 0.16260952047072352, 0.16025354274734854, 0.15867610079236327, 0.1570578235494904, 0.1557978381179273, 0.15520832560025155] ***
*** finished computation of 7 references, err: [Inf, 0.1745801931247115, 0.1649083632566035, 0.16260952047072352, 0.16025354274734854, 0.15867610079236327, 0.1570578235494904, 0.1557978381179273, 0.15520832560025155] ***
*** center 1: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [52, 45, 0]]
** centroid: 2, normalized-entropy: 0.9962401135461777, [(1, 52), (2, 45)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [33, 19, 0]]
** centroid: 3, normalized-entropy: 0.9470622432515328, [(1, 33), (2, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [18, 57, 0]]
** centroid: 5, normalized-entropy: 0.7950402793845225, [(1, 18), (2, 57)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 69, 19]]
** centroid: 6, normalized-entropy: 0.7526269564427315, [(2, 69), (3, 19)]
*** center 7: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2065840681521222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2065840681521222, 0.16186126326117664] ***
*** starting iteration: 2; err: [Inf, 0.2065840681521222, 0.16186126326117664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2065840681521222, 0.16186126326117664, 0.15361348265223204] ***
*** starting iteration: 3; err: [Inf, 0.2065840681521222, 0.16186126326117664, 0.15361348265223204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2065840681521222, 0.16186126326117664, 0.15361348265223204, 0.1492565109860152] ***
*** starting iteration: 4; err: [Inf, 0.2065840681521222, 0.16186126326117664, 0.15361348265223204, 0.1492565109860152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2065840681521222, 0.16186126326117664, 0.15361348265223204, 0.1492565109860152, 0.1475720087904483] ***
*** starting iteration: 5; err: [Inf, 0.2065840681521222, 0.16186126326117664, 0.15361348265223204, 0.1492565109860152, 0.1475720087904483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2065840681521222, 0.16186126326117664, 0.15361348265223204, 0.1492565109860152, 0.1475720087904483, 0.14709400552883745] ***
*** finished computation of 7 references, err: [Inf, 0.2065840681521222, 0.16186126326117664, 0.15361348265223204, 0.1492565109860152, 0.1475720087904483, 0.14709400552883745] ***
*** center 1: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [1, 62, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [78, 24, 0]]
** centroid: 4, normalized-entropy: 0.787126586201269, [(1, 78), (2, 24)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [26, 42, 0]]
** centroid: 5, normalized-entropy: 0.9596868937742168, [(1, 26), (2, 42)]
*** center 6: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 61, 16]]
** centroid: 7, normalized-entropy: 0.7372413771710565, [(2, 61), (3, 16)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23915374628826977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23915374628826977, 0.17045396183617412] ***
*** starting iteration: 2; err: [Inf, 0.23915374628826977, 0.17045396183617412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23915374628826977, 0.17045396183617412, 0.16408266353420914] ***
*** starting iteration: 3; err: [Inf, 0.23915374628826977, 0.17045396183617412, 0.16408266353420914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23915374628826977, 0.17045396183617412, 0.16408266353420914, 0.16094154171645642] ***
*** starting iteration: 4; err: [Inf, 0.23915374628826977, 0.17045396183617412, 0.16408266353420914, 0.16094154171645642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23915374628826977, 0.17045396183617412, 0.16408266353420914, 0.16094154171645642, 0.15784090693015604] ***
*** starting iteration: 5; err: [Inf, 0.23915374628826977, 0.17045396183617412, 0.16408266353420914, 0.16094154171645642, 0.15784090693015604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23915374628826977, 0.17045396183617412, 0.16408266353420914, 0.16094154171645642, 0.15784090693015604, 0.15382685212418437] ***
*** starting iteration: 6; err: [Inf, 0.23915374628826977, 0.17045396183617412, 0.16408266353420914, 0.16094154171645642, 0.15784090693015604, 0.15382685212418437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23915374628826977, 0.17045396183617412, 0.16408266353420914, 0.16094154171645642, 0.15784090693015604, 0.15382685212418437, 0.15183383117429913] ***
*** starting iteration: 7; err: [Inf, 0.23915374628826977, 0.17045396183617412, 0.16408266353420914, 0.16094154171645642, 0.15784090693015604, 0.15382685212418437, 0.15183383117429913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23915374628826977, 0.17045396183617412, 0.16408266353420914, 0.16094154171645642, 0.15784090693015604, 0.15382685212418437, 0.15183383117429913, 0.15105829388834535] ***
*** finished computation of 7 references, err: [Inf, 0.23915374628826977, 0.17045396183617412, 0.16408266353420914, 0.16094154171645642, 0.15784090693015604, 0.15382685212418437, 0.15183383117429913, 0.15105829388834535] ***
*** center 1: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [39, 28, 0]]
** centroid: 2, normalized-entropy: 0.9804679314541813, [(1, 39), (2, 28)]
*** center 3: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [60, 33, 0]]
** centroid: 5, normalized-entropy: 0.9383153522334071, [(1, 60), (2, 33)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 75, 18]]
** centroid: 6, normalized-entropy: 0.708835673332196, [(2, 75), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [42, 51, 0]]
** centroid: 7, normalized-entropy: 0.9932338197397066, [(1, 42), (2, 51)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20448307047225536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20448307047225536, 0.15750713282451034] ***
*** starting iteration: 2; err: [Inf, 0.20448307047225536, 0.15750713282451034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20448307047225536, 0.15750713282451034, 0.15465188763290644] ***
*** starting iteration: 3; err: [Inf, 0.20448307047225536, 0.15750713282451034, 0.15465188763290644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20448307047225536, 0.15750713282451034, 0.15465188763290644, 0.15330349857732653] ***
*** starting iteration: 4; err: [Inf, 0.20448307047225536, 0.15750713282451034, 0.15465188763290644, 0.15330349857732653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20448307047225536, 0.15750713282451034, 0.15465188763290644, 0.15330349857732653, 0.15284017702378333] ***
*** finished computation of 7 references, err: [Inf, 0.20448307047225536, 0.15750713282451034, 0.15465188763290644, 0.15330349857732653, 0.15284017702378333] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 62, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [66, 37, 0]]
** centroid: 2, normalized-entropy: 0.9420365814945866, [(1, 66), (2, 37)]
*** center 3: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 60, 21]]
** centroid: 4, normalized-entropy: 0.8256265261578954, [(2, 60), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [54, 2, 0]]
** centroid: 5, normalized-entropy: 0.2222848306856879, [(1, 54), (2, 2)]
*** center 6: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [45, 24, 0]]
** centroid: 7, normalized-entropy: 0.9321115676166747, [(1, 45), (2, 24)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17846813777089118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17846813777089118, 0.1544065019749105] ***
*** starting iteration: 2; err: [Inf, 0.17846813777089118, 0.1544065019749105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17846813777089118, 0.1544065019749105, 0.1529665846247226] ***
*** starting iteration: 3; err: [Inf, 0.17846813777089118, 0.1544065019749105, 0.1529665846247226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17846813777089118, 0.1544065019749105, 0.1529665846247226, 0.15208088439516723] ***
*** finished computation of 7 references, err: [Inf, 0.17846813777089118, 0.1544065019749105, 0.1529665846247226, 0.15208088439516723] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [69, 3, 0]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(1, 69), (2, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [63, 33, 0]]
** centroid: 4, normalized-entropy: 0.9283620723948678, [(1, 63), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [24, 29, 0]]
** centroid: 5, normalized-entropy: 0.9935704757706079, [(1, 24), (2, 29)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [10, 58, 0]]
** centroid: 6, normalized-entropy: 0.6024308020404452, [(1, 10), (2, 58)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 60, 18]]
** centroid: 7, normalized-entropy: 0.7793498372920851, [(2, 60), (3, 18)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18331790880020707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18331790880020707, 0.15746162102092057] ***
*** starting iteration: 2; err: [Inf, 0.18331790880020707, 0.15746162102092057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18331790880020707, 0.15746162102092057, 0.1513390207802877] ***
*** starting iteration: 3; err: [Inf, 0.18331790880020707, 0.15746162102092057, 0.1513390207802877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18331790880020707, 0.15746162102092057, 0.1513390207802877, 0.1497433969900012] ***
*** starting iteration: 4; err: [Inf, 0.18331790880020707, 0.15746162102092057, 0.1513390207802877, 0.1497433969900012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18331790880020707, 0.15746162102092057, 0.1513390207802877, 0.1497433969900012, 0.14843731943517924] ***
*** starting iteration: 5; err: [Inf, 0.18331790880020707, 0.15746162102092057, 0.1513390207802877, 0.1497433969900012, 0.14843731943517924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18331790880020707, 0.15746162102092057, 0.1513390207802877, 0.1497433969900012, 0.14843731943517924, 0.1475861819703132] ***
*** finished computation of 7 references, err: [Inf, 0.18331790880020707, 0.15746162102092057, 0.1513390207802877, 0.1497433969900012, 0.14843731943517924, 0.1475861819703132] ***
*** center 1: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 53, 19]]
** centroid: 3, normalized-entropy: 0.8325582396745668, [(2, 53), (3, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 24, 0]]
** centroid: 4, normalized-entropy: 0.8586370819183629, [(1, 61), (2, 24)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [29, 44, 0]]
** centroid: 5, normalized-entropy: 0.9693253797191861, [(1, 29), (2, 44)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 58, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [54, 5, 0]]
** centroid: 7, normalized-entropy: 0.4186843105268563, [(1, 54), (2, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21665126395877451] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21665126395877451, 0.17128832571581007] ***
*** starting iteration: 2; err: [Inf, 0.21665126395877451, 0.17128832571581007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21665126395877451, 0.17128832571581007, 0.16198614491894842] ***
*** starting iteration: 3; err: [Inf, 0.21665126395877451, 0.17128832571581007, 0.16198614491894842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21665126395877451, 0.17128832571581007, 0.16198614491894842, 0.15766626125201583] ***
*** starting iteration: 4; err: [Inf, 0.21665126395877451, 0.17128832571581007, 0.16198614491894842, 0.15766626125201583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21665126395877451, 0.17128832571581007, 0.16198614491894842, 0.15766626125201583, 0.15484571726247667] ***
*** starting iteration: 5; err: [Inf, 0.21665126395877451, 0.17128832571581007, 0.16198614491894842, 0.15766626125201583, 0.15484571726247667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21665126395877451, 0.17128832571581007, 0.16198614491894842, 0.15766626125201583, 0.15484571726247667, 0.15245575955044477] ***
*** starting iteration: 6; err: [Inf, 0.21665126395877451, 0.17128832571581007, 0.16198614491894842, 0.15766626125201583, 0.15484571726247667, 0.15245575955044477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21665126395877451, 0.17128832571581007, 0.16198614491894842, 0.15766626125201583, 0.15484571726247667, 0.15245575955044477, 0.15117254910524935] ***
*** starting iteration: 7; err: [Inf, 0.21665126395877451, 0.17128832571581007, 0.16198614491894842, 0.15766626125201583, 0.15484571726247667, 0.15245575955044477, 0.15117254910524935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21665126395877451, 0.17128832571581007, 0.16198614491894842, 0.15766626125201583, 0.15484571726247667, 0.15245575955044477, 0.15117254910524935, 0.150687755106017] ***
*** finished computation of 7 references, err: [Inf, 0.21665126395877451, 0.17128832571581007, 0.16198614491894842, 0.15766626125201583, 0.15484571726247667, 0.15245575955044477, 0.15117254910524935, 0.150687755106017] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [15, 24, 0]]
** centroid: 1, normalized-entropy: 0.961236604722876, [(1, 15), (2, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [84, 1, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 47, 18]]
** centroid: 4, normalized-entropy: 0.8512243352621381, [(2, 47), (3, 18)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 71, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [59, 45, 0]]
** centroid: 6, normalized-entropy: 0.9868884753797076, [(1, 59), (2, 45)]
*** center 7: selecting labels [1] (freq >= 2) [from [43, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17506153968721627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17506153968721627, 0.15374858849309384] ***
*** starting iteration: 2; err: [Inf, 0.17506153968721627, 0.15374858849309384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17506153968721627, 0.15374858849309384, 0.14918949187453837] ***
*** starting iteration: 3; err: [Inf, 0.17506153968721627, 0.15374858849309384, 0.14918949187453837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17506153968721627, 0.15374858849309384, 0.14918949187453837, 0.14719398871064185] ***
*** starting iteration: 4; err: [Inf, 0.17506153968721627, 0.15374858849309384, 0.14918949187453837, 0.14719398871064185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17506153968721627, 0.15374858849309384, 0.14918949187453837, 0.14719398871064185, 0.14589290846325456] ***
*** starting iteration: 5; err: [Inf, 0.17506153968721627, 0.15374858849309384, 0.14918949187453837, 0.14719398871064185, 0.14589290846325456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17506153968721627, 0.15374858849309384, 0.14918949187453837, 0.14719398871064185, 0.14589290846325456, 0.14507736662775278] ***
*** finished computation of 7 references, err: [Inf, 0.17506153968721627, 0.15374858849309384, 0.14918949187453837, 0.14719398871064185, 0.14589290846325456, 0.14507736662775278] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 65, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [27, 29, 0]]
** centroid: 2, normalized-entropy: 0.9990797181805819, [(1, 27), (2, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 71, 18]]
** centroid: 4, normalized-entropy: 0.7263997735417457, [(2, 71), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [81, 2, 0]]
** centroid: 5, normalized-entropy: 0.1638605128691586, [(1, 81), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [44, 24, 0]]
** centroid: 6, normalized-entropy: 0.9366673818775627, [(1, 44), (2, 24)]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.16449210528098046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16449210528098046, 0.15392713598906993] ***
*** starting iteration: 2; err: [Inf, 0.16449210528098046, 0.15392713598906993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16449210528098046, 0.15392713598906993, 0.1513939410597086] ***
*** starting iteration: 3; err: [Inf, 0.16449210528098046, 0.15392713598906993, 0.1513939410597086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16449210528098046, 0.15392713598906993, 0.1513939410597086, 0.1505505994744599] ***
*** finished computation of 7 references, err: [Inf, 0.16449210528098046, 0.15392713598906993, 0.1513939410597086, 0.1505505994744599] ***
*** center 1: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [6, 73, 0]]
** centroid: 2, normalized-entropy: 0.3877431810559867, [(1, 6), (2, 73)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 21, 14]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 21), (3, 14)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [81, 9, 0]]
** centroid: 4, normalized-entropy: 0.46899559358928133, [(1, 81), (2, 9)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [71, 9, 0]]
** centroid: 5, normalized-entropy: 0.5074109636646968, [(1, 71), (2, 9)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [65, 20, 0]]
** centroid: 6, normalized-entropy: 0.787126586201269, [(1, 65), (2, 20)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 56, 3]]
** centroid: 7, normalized-entropy: 0.2899860470332091, [(2, 56), (3, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19192732398025691] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19192732398025691, 0.15691739288717507] ***
*** starting iteration: 2; err: [Inf, 0.19192732398025691, 0.15691739288717507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19192732398025691, 0.15691739288717507, 0.15188405192829668] ***
*** starting iteration: 3; err: [Inf, 0.19192732398025691, 0.15691739288717507, 0.15188405192829668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19192732398025691, 0.15691739288717507, 0.15188405192829668, 0.1506352377878502] ***
*** starting iteration: 4; err: [Inf, 0.19192732398025691, 0.15691739288717507, 0.15188405192829668, 0.1506352377878502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19192732398025691, 0.15691739288717507, 0.15188405192829668, 0.1506352377878502, 0.15024359009973703] ***
*** finished computation of 7 references, err: [Inf, 0.19192732398025691, 0.15691739288717507, 0.15188405192829668, 0.1506352377878502, 0.15024359009973703] ***
*** center 1: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [78, 1, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [1, 75, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [69, 4, 0]]
** centroid: 4, normalized-entropy: 0.306424729870515, [(1, 69), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [39, 23, 0]]
** centroid: 5, normalized-entropy: 0.9514122535330207, [(1, 39), (2, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [63, 1, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 84, 15]]
** centroid: 7, normalized-entropy: 0.6136190195993708, [(2, 84), (3, 15)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1865701354313642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1865701354313642, 0.16028610353451223] ***
*** starting iteration: 2; err: [Inf, 0.1865701354313642, 0.16028610353451223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1865701354313642, 0.16028610353451223, 0.1512596525894478] ***
*** starting iteration: 3; err: [Inf, 0.1865701354313642, 0.16028610353451223, 0.1512596525894478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1865701354313642, 0.16028610353451223, 0.1512596525894478, 0.14920445459429174] ***
*** starting iteration: 4; err: [Inf, 0.1865701354313642, 0.16028610353451223, 0.1512596525894478, 0.14920445459429174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1865701354313642, 0.16028610353451223, 0.1512596525894478, 0.14920445459429174, 0.14835885740816593] ***
*** finished computation of 7 references, err: [Inf, 0.1865701354313642, 0.16028610353451223, 0.1512596525894478, 0.14920445459429174, 0.14835885740816593] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 74, 15]]
** centroid: 1, normalized-entropy: 0.6543524423071835, [(2, 74), (3, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [73, 1, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [5, 74, 0]]
** centroid: 3, normalized-entropy: 0.340373285759646, [(1, 5), (2, 74)]
*** center 4: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [63, 7, 0]]
** centroid: 5, normalized-entropy: 0.46899559358928133, [(1, 63), (2, 7)]
*** center 6: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [55, 24, 0]]
** centroid: 7, normalized-entropy: 0.8858834790484443, [(1, 55), (2, 24)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17192924011312424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17192924011312424, 0.158425128063187] ***
*** starting iteration: 2; err: [Inf, 0.17192924011312424, 0.158425128063187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17192924011312424, 0.158425128063187, 0.15595632272027432] ***
*** starting iteration: 3; err: [Inf, 0.17192924011312424, 0.158425128063187, 0.15595632272027432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17192924011312424, 0.158425128063187, 0.15595632272027432, 0.15427935837674886] ***
*** starting iteration: 4; err: [Inf, 0.17192924011312424, 0.158425128063187, 0.15595632272027432, 0.15427935837674886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17192924011312424, 0.158425128063187, 0.15595632272027432, 0.15427935837674886, 0.15246158515289426] ***
*** starting iteration: 5; err: [Inf, 0.17192924011312424, 0.158425128063187, 0.15595632272027432, 0.15427935837674886, 0.15246158515289426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17192924011312424, 0.158425128063187, 0.15595632272027432, 0.15427935837674886, 0.15246158515289426, 0.15109823004249484] ***
*** starting iteration: 6; err: [Inf, 0.17192924011312424, 0.158425128063187, 0.15595632272027432, 0.15427935837674886, 0.15246158515289426, 0.15109823004249484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17192924011312424, 0.158425128063187, 0.15595632272027432, 0.15427935837674886, 0.15246158515289426, 0.15109823004249484, 0.15024906365387142] ***
*** finished computation of 7 references, err: [Inf, 0.17192924011312424, 0.158425128063187, 0.15595632272027432, 0.15427935837674886, 0.15246158515289426, 0.15109823004249484, 0.15024906365387142] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [36, 33, 0]]
** centroid: 1, normalized-entropy: 0.9986359641585719, [(1, 36), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [68, 2, 0]]
** centroid: 2, normalized-entropy: 0.18717625687320805, [(1, 68), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 72, 21]]
** centroid: 3, normalized-entropy: 0.7706290693639406, [(2, 72), (3, 21)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [29, 35, 0]]
** centroid: 4, normalized-entropy: 0.9936507116910402, [(1, 29), (2, 35)]
*** center 5: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [32, 34, 0]]
** centroid: 6, normalized-entropy: 0.9993375041688846, [(1, 32), (2, 34)]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2147682835413143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2147682835413143, 0.16162826801650226] ***
*** starting iteration: 2; err: [Inf, 0.2147682835413143, 0.16162826801650226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2147682835413143, 0.16162826801650226, 0.15626580908149482] ***
*** starting iteration: 3; err: [Inf, 0.2147682835413143, 0.16162826801650226, 0.15626580908149482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2147682835413143, 0.16162826801650226, 0.15626580908149482, 0.15232823929563163] ***
*** starting iteration: 4; err: [Inf, 0.2147682835413143, 0.16162826801650226, 0.15626580908149482, 0.15232823929563163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2147682835413143, 0.16162826801650226, 0.15626580908149482, 0.15232823929563163, 0.14881842723861335] ***
*** starting iteration: 5; err: [Inf, 0.2147682835413143, 0.16162826801650226, 0.15626580908149482, 0.15232823929563163, 0.14881842723861335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2147682835413143, 0.16162826801650226, 0.15626580908149482, 0.15232823929563163, 0.14881842723861335, 0.14761583279259502] ***
*** starting iteration: 6; err: [Inf, 0.2147682835413143, 0.16162826801650226, 0.15626580908149482, 0.15232823929563163, 0.14881842723861335, 0.14761583279259502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2147682835413143, 0.16162826801650226, 0.15626580908149482, 0.15232823929563163, 0.14881842723861335, 0.14761583279259502, 0.14720846903976054] ***
*** finished computation of 7 references, err: [Inf, 0.2147682835413143, 0.16162826801650226, 0.15626580908149482, 0.15232823929563163, 0.14881842723861335, 0.14761583279259502, 0.14720846903976054] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 52, 24]]
** centroid: 1, normalized-entropy: 0.8997437586982626, [(2, 52), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [21, 39, 0]]
** centroid: 2, normalized-entropy: 0.9340680553754911, [(1, 21), (2, 39)]
*** center 3: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [76, 17, 0]]
** centroid: 4, normalized-entropy: 0.6861549474202007, [(1, 76), (2, 17)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 59, 1]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [47, 7, 0]]
** centroid: 6, normalized-entropy: 0.5564215672884282, [(1, 47), (2, 7)]
*** center 7: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1849631112969946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1849631112969946, 0.15675958905369045] ***
*** starting iteration: 2; err: [Inf, 0.1849631112969946, 0.15675958905369045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1849631112969946, 0.15675958905369045, 0.15093509292695673] ***
*** starting iteration: 3; err: [Inf, 0.1849631112969946, 0.15675958905369045, 0.15093509292695673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1849631112969946, 0.15675958905369045, 0.15093509292695673, 0.14930460652522742] ***
*** starting iteration: 4; err: [Inf, 0.1849631112969946, 0.15675958905369045, 0.15093509292695673, 0.14930460652522742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1849631112969946, 0.15675958905369045, 0.15093509292695673, 0.14930460652522742, 0.14885902837105094] ***
*** finished computation of 7 references, err: [Inf, 0.1849631112969946, 0.15675958905369045, 0.15093509292695673, 0.14930460652522742, 0.14885902837105094] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [5, 78, 0]]
** centroid: 1, normalized-entropy: 0.32840071392894665, [(1, 5), (2, 78)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [60, 5, 0]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(1, 60), (2, 5)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 21, 16]]
** centroid: 3, normalized-entropy: 0.9867867202680318, [(2, 21), (3, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [82, 5, 0]]
** centroid: 6, normalized-entropy: 0.3173238998358585, [(1, 82), (2, 5)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [4, 77, 0]]
** centroid: 7, normalized-entropy: 0.2837689703721877, [(1, 4), (2, 77)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18320947943255306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18320947943255306, 0.1502787868566811] ***
*** starting iteration: 2; err: [Inf, 0.18320947943255306, 0.1502787868566811] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18320947943255306, 0.1502787868566811, 0.14924596179835498] ***
*** starting iteration: 3; err: [Inf, 0.18320947943255306, 0.1502787868566811, 0.14924596179835498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18320947943255306, 0.1502787868566811, 0.14924596179835498, 0.14862403356470166] ***
*** finished computation of 7 references, err: [Inf, 0.18320947943255306, 0.1502787868566811, 0.14924596179835498, 0.14862403356470166] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [48, 39, 0]]
** centroid: 1, normalized-entropy: 0.9922666387194963, [(1, 48), (2, 39)]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 44, 20]]
** centroid: 4, normalized-entropy: 0.8960382325345574, [(2, 44), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [72, 8, 0]]
** centroid: 5, normalized-entropy: 0.46899559358928133, [(1, 72), (2, 8)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 66, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [50, 28, 0]]
** centroid: 7, normalized-entropy: 0.9418285354475157, [(1, 50), (2, 28)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2719024377465248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2719024377465248, 0.18736176313145553] ***
*** starting iteration: 2; err: [Inf, 0.2719024377465248, 0.18736176313145553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2719024377465248, 0.18736176313145553, 0.16724908532947302] ***
*** starting iteration: 3; err: [Inf, 0.2719024377465248, 0.18736176313145553, 0.16724908532947302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2719024377465248, 0.18736176313145553, 0.16724908532947302, 0.15404186177812518] ***
*** starting iteration: 4; err: [Inf, 0.2719024377465248, 0.18736176313145553, 0.16724908532947302, 0.15404186177812518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2719024377465248, 0.18736176313145553, 0.16724908532947302, 0.15404186177812518, 0.14730149687454105] ***
*** starting iteration: 5; err: [Inf, 0.2719024377465248, 0.18736176313145553, 0.16724908532947302, 0.15404186177812518, 0.14730149687454105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2719024377465248, 0.18736176313145553, 0.16724908532947302, 0.15404186177812518, 0.14730149687454105, 0.14523697540163993] ***
*** starting iteration: 6; err: [Inf, 0.2719024377465248, 0.18736176313145553, 0.16724908532947302, 0.15404186177812518, 0.14730149687454105, 0.14523697540163993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2719024377465248, 0.18736176313145553, 0.16724908532947302, 0.15404186177812518, 0.14730149687454105, 0.14523697540163993, 0.14432326296996326] ***
*** finished computation of 7 references, err: [Inf, 0.2719024377465248, 0.18736176313145553, 0.16724908532947302, 0.15404186177812518, 0.14730149687454105, 0.14523697540163993, 0.14432326296996326] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 64, 16]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 64), (3, 16)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 51, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [71, 8, 0]]
** centroid: 4, normalized-entropy: 0.47299536229314826, [(1, 71), (2, 8)]
*** center 5: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [22, 56, 0]]
** centroid: 7, normalized-entropy: 0.8582307926411409, [(1, 22), (2, 56)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25381451002694666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25381451002694666, 0.17815899451263248] ***
*** starting iteration: 2; err: [Inf, 0.25381451002694666, 0.17815899451263248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25381451002694666, 0.17815899451263248, 0.16411973914131522] ***
*** starting iteration: 3; err: [Inf, 0.25381451002694666, 0.17815899451263248, 0.16411973914131522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25381451002694666, 0.17815899451263248, 0.16411973914131522, 0.1552554183844477] ***
*** starting iteration: 4; err: [Inf, 0.25381451002694666, 0.17815899451263248, 0.16411973914131522, 0.1552554183844477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25381451002694666, 0.17815899451263248, 0.16411973914131522, 0.1552554183844477, 0.15108307768497617] ***
*** starting iteration: 5; err: [Inf, 0.25381451002694666, 0.17815899451263248, 0.16411973914131522, 0.1552554183844477, 0.15108307768497617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25381451002694666, 0.17815899451263248, 0.16411973914131522, 0.1552554183844477, 0.15108307768497617, 0.14963787740841508] ***
*** starting iteration: 6; err: [Inf, 0.25381451002694666, 0.17815899451263248, 0.16411973914131522, 0.1552554183844477, 0.15108307768497617, 0.14963787740841508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25381451002694666, 0.17815899451263248, 0.16411973914131522, 0.1552554183844477, 0.15108307768497617, 0.14963787740841508, 0.1489126791851595] ***
*** finished computation of 7 references, err: [Inf, 0.25381451002694666, 0.17815899451263248, 0.16411973914131522, 0.1552554183844477, 0.15108307768497617, 0.14963787740841508, 0.1489126791851595] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 63, 20]]
** centroid: 1, normalized-entropy: 0.7966394665488286, [(2, 63), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [78, 21, 0]]
** centroid: 3, normalized-entropy: 0.7455178428108284, [(1, 78), (2, 21)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [39, 21, 0]]
** centroid: 4, normalized-entropy: 0.9340680553754911, [(1, 39), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [6, 67, 0]]
** centroid: 5, normalized-entropy: 0.4098553703184051, [(1, 6), (2, 67)]
*** center 6: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [45, 5, 0]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(1, 45), (2, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2058221876900643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2058221876900643, 0.166831919901073] ***
*** starting iteration: 2; err: [Inf, 0.2058221876900643, 0.166831919901073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2058221876900643, 0.166831919901073, 0.15709857753291726] ***
*** starting iteration: 3; err: [Inf, 0.2058221876900643, 0.166831919901073, 0.15709857753291726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2058221876900643, 0.166831919901073, 0.15709857753291726, 0.1534361423952505] ***
*** starting iteration: 4; err: [Inf, 0.2058221876900643, 0.166831919901073, 0.15709857753291726, 0.1534361423952505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2058221876900643, 0.166831919901073, 0.15709857753291726, 0.1534361423952505, 0.15195232302509248] ***
*** starting iteration: 5; err: [Inf, 0.2058221876900643, 0.166831919901073, 0.15709857753291726, 0.1534361423952505, 0.15195232302509248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2058221876900643, 0.166831919901073, 0.15709857753291726, 0.1534361423952505, 0.15195232302509248, 0.15149288552626966] ***
*** finished computation of 7 references, err: [Inf, 0.2058221876900643, 0.166831919901073, 0.15709857753291726, 0.1534361423952505, 0.15195232302509248, 0.15149288552626966] ***
*** center 1: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [30, 28, 0]]
** centroid: 2, normalized-entropy: 0.999142103991909, [(1, 30), (2, 28)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [77, 3, 0]]
** centroid: 3, normalized-entropy: 0.2307099556914763, [(1, 77), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [10, 80, 0]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(1, 10), (2, 80)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 52, 22]]
** centroid: 5, normalized-entropy: 0.8779620013943914, [(2, 52), (3, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [33, 18, 0]]
** centroid: 7, normalized-entropy: 0.9366673818775627, [(1, 33), (2, 18)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18406813038885594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18406813038885594, 0.16043912075459957] ***
*** starting iteration: 2; err: [Inf, 0.18406813038885594, 0.16043912075459957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18406813038885594, 0.16043912075459957, 0.15474649276956917] ***
*** starting iteration: 3; err: [Inf, 0.18406813038885594, 0.16043912075459957, 0.15474649276956917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18406813038885594, 0.16043912075459957, 0.15474649276956917, 0.15266105622425674] ***
*** starting iteration: 4; err: [Inf, 0.18406813038885594, 0.16043912075459957, 0.15474649276956917, 0.15266105622425674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18406813038885594, 0.16043912075459957, 0.15474649276956917, 0.15266105622425674, 0.15177399133890868] ***
*** finished computation of 7 references, err: [Inf, 0.18406813038885594, 0.16043912075459957, 0.15474649276956917, 0.15266105622425674, 0.15177399133890868] ***
*** center 1: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [50, 37, 0]]
** centroid: 2, normalized-entropy: 0.9838333347337009, [(1, 50), (2, 37)]
*** center 3: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [50, 26, 0]]
** centroid: 4, normalized-entropy: 0.9268190639645774, [(1, 50), (2, 26)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 67, 20]]
** centroid: 5, normalized-entropy: 0.7778108790853029, [(2, 67), (3, 20)]
*** center 6: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [12, 52, 0]]
** centroid: 7, normalized-entropy: 0.6962122601251459, [(1, 12), (2, 52)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19692798131145536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19692798131145536, 0.15915119264740496] ***
*** starting iteration: 2; err: [Inf, 0.19692798131145536, 0.15915119264740496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19692798131145536, 0.15915119264740496, 0.15576757567189634] ***
*** starting iteration: 3; err: [Inf, 0.19692798131145536, 0.15915119264740496, 0.15576757567189634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19692798131145536, 0.15915119264740496, 0.15576757567189634, 0.15468481449317187] ***
*** starting iteration: 4; err: [Inf, 0.19692798131145536, 0.15915119264740496, 0.15576757567189634, 0.15468481449317187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19692798131145536, 0.15915119264740496, 0.15576757567189634, 0.15468481449317187, 0.1543758229613304] ***
*** finished computation of 7 references, err: [Inf, 0.19692798131145536, 0.15915119264740496, 0.15576757567189634, 0.15468481449317187, 0.1543758229613304] ***
*** center 1: selecting labels [1] (freq >= 2) [from [77, 1, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [41, 24, 0]]
** centroid: 3, normalized-entropy: 0.9500796252338518, [(1, 41), (2, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [25, 31, 0]]
** centroid: 4, normalized-entropy: 0.9917033083725819, [(1, 25), (2, 31)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [32, 51, 0]]
** centroid: 5, normalized-entropy: 0.9618624139909456, [(1, 32), (2, 51)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 88, 18]]
** centroid: 6, normalized-entropy: 0.6572729784684466, [(2, 88), (3, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17736922067962588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17736922067962588, 0.15191658494900911] ***
*** starting iteration: 2; err: [Inf, 0.17736922067962588, 0.15191658494900911] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17736922067962588, 0.15191658494900911, 0.14880728196352722] ***
*** starting iteration: 3; err: [Inf, 0.17736922067962588, 0.15191658494900911, 0.14880728196352722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17736922067962588, 0.15191658494900911, 0.14880728196352722, 0.14723707329109312] ***
*** starting iteration: 4; err: [Inf, 0.17736922067962588, 0.15191658494900911, 0.14880728196352722, 0.14723707329109312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17736922067962588, 0.15191658494900911, 0.14880728196352722, 0.14723707329109312, 0.14667873908206822] ***
*** finished computation of 7 references, err: [Inf, 0.17736922067962588, 0.15191658494900911, 0.14880728196352722, 0.14723707329109312, 0.14667873908206822] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [63, 14, 0]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(1, 63), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [77, 10, 0]]
** centroid: 2, normalized-entropy: 0.5146464316834292, [(1, 77), (2, 10)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [19, 59, 0]]
** centroid: 4, normalized-entropy: 0.8009591077369054, [(1, 19), (2, 59)]
*** center 5: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 39, 25]]
** centroid: 6, normalized-entropy: 0.9652016987500656, [(2, 39), (3, 25)]
*** center 7: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2027243320122361] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2027243320122361, 0.16463724743016064] ***
*** starting iteration: 2; err: [Inf, 0.2027243320122361, 0.16463724743016064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2027243320122361, 0.16463724743016064, 0.1544588564299047] ***
*** starting iteration: 3; err: [Inf, 0.2027243320122361, 0.16463724743016064, 0.1544588564299047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2027243320122361, 0.16463724743016064, 0.1544588564299047, 0.1513202791046351] ***
*** starting iteration: 4; err: [Inf, 0.2027243320122361, 0.16463724743016064, 0.1544588564299047, 0.1513202791046351] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2027243320122361, 0.16463724743016064, 0.1544588564299047, 0.1513202791046351, 0.14953239205293356] ***
*** starting iteration: 5; err: [Inf, 0.2027243320122361, 0.16463724743016064, 0.1544588564299047, 0.1513202791046351, 0.14953239205293356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2027243320122361, 0.16463724743016064, 0.1544588564299047, 0.1513202791046351, 0.14953239205293356, 0.14777244349103422] ***
*** starting iteration: 6; err: [Inf, 0.2027243320122361, 0.16463724743016064, 0.1544588564299047, 0.1513202791046351, 0.14953239205293356, 0.14777244349103422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2027243320122361, 0.16463724743016064, 0.1544588564299047, 0.1513202791046351, 0.14953239205293356, 0.14777244349103422, 0.14688892124965786] ***
*** finished computation of 7 references, err: [Inf, 0.2027243320122361, 0.16463724743016064, 0.1544588564299047, 0.1513202791046351, 0.14953239205293356, 0.14777244349103422, 0.14688892124965786] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [80, 8, 0]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(1, 80), (2, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 71, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [49, 16, 0]]
** centroid: 5, normalized-entropy: 0.8051250074646822, [(1, 49), (2, 16)]
*** center 6: selecting labels [1] (freq >= 2) [from [44, 1, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 83, 15]]
** centroid: 7, normalized-entropy: 0.6174482957894681, [(2, 83), (3, 15)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24070369956456125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24070369956456125, 0.17911179283075035] ***
*** starting iteration: 2; err: [Inf, 0.24070369956456125, 0.17911179283075035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24070369956456125, 0.17911179283075035, 0.16680909573147074] ***
*** starting iteration: 3; err: [Inf, 0.24070369956456125, 0.17911179283075035, 0.16680909573147074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24070369956456125, 0.17911179283075035, 0.16680909573147074, 0.1564981454052031] ***
*** starting iteration: 4; err: [Inf, 0.24070369956456125, 0.17911179283075035, 0.16680909573147074, 0.1564981454052031] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24070369956456125, 0.17911179283075035, 0.16680909573147074, 0.1564981454052031, 0.15140425868332386] ***
*** starting iteration: 5; err: [Inf, 0.24070369956456125, 0.17911179283075035, 0.16680909573147074, 0.1564981454052031, 0.15140425868332386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24070369956456125, 0.17911179283075035, 0.16680909573147074, 0.1564981454052031, 0.15140425868332386, 0.15060114081203937] ***
*** finished computation of 7 references, err: [Inf, 0.24070369956456125, 0.17911179283075035, 0.16680909573147074, 0.1564981454052031, 0.15140425868332386, 0.15060114081203937] ***
*** center 1: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 77, 23]]
** centroid: 2, normalized-entropy: 0.7780113035465377, [(2, 77), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [4, 76, 0]]
** centroid: 4, normalized-entropy: 0.2863969571159561, [(1, 4), (2, 76)]
*** center 5: selecting labels [1] (freq >= 2) [from [80, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [59, 2, 0]]
** centroid: 6, normalized-entropy: 0.20818094555717087, [(1, 59), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [66, 22, 0]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(1, 66), (2, 22)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2199771124375984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2199771124375984, 0.16593982523679734] ***
*** starting iteration: 2; err: [Inf, 0.2199771124375984, 0.16593982523679734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2199771124375984, 0.16593982523679734, 0.15754320403933525] ***
*** starting iteration: 3; err: [Inf, 0.2199771124375984, 0.16593982523679734, 0.15754320403933525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2199771124375984, 0.16593982523679734, 0.15754320403933525, 0.1550692802295089] ***
*** starting iteration: 4; err: [Inf, 0.2199771124375984, 0.16593982523679734, 0.15754320403933525, 0.1550692802295089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2199771124375984, 0.16593982523679734, 0.15754320403933525, 0.1550692802295089, 0.15323274349514396] ***
*** starting iteration: 5; err: [Inf, 0.2199771124375984, 0.16593982523679734, 0.15754320403933525, 0.1550692802295089, 0.15323274349514396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2199771124375984, 0.16593982523679734, 0.15754320403933525, 0.1550692802295089, 0.15323274349514396, 0.15255556234903633] ***
*** finished computation of 7 references, err: [Inf, 0.2199771124375984, 0.16593982523679734, 0.15754320403933525, 0.1550692802295089, 0.15323274349514396, 0.15255556234903633] ***
*** center 1: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 8, 0]]
** centroid: 2, normalized-entropy: 0.5175827525559071, [(1, 61), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [79, 16, 0]]
** centroid: 3, normalized-entropy: 0.6540800387941991, [(1, 79), (2, 16)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [67, 12, 0]]
** centroid: 4, normalized-entropy: 0.6145715612236268, [(1, 67), (2, 12)]
*** center 5: selecting labels [1] (freq >= 2) [from [42, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 75, 2]]
** centroid: 6, normalized-entropy: 0.17378132267943294, [(2, 75), (3, 2)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 77, 14]]
** centroid: 7, normalized-entropy: 0.6193821946787638, [(2, 77), (3, 14)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21846240213606508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21846240213606508, 0.17855512750893832] ***
*** starting iteration: 2; err: [Inf, 0.21846240213606508, 0.17855512750893832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21846240213606508, 0.17855512750893832, 0.16270285039395094] ***
*** starting iteration: 3; err: [Inf, 0.21846240213606508, 0.17855512750893832, 0.16270285039395094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21846240213606508, 0.17855512750893832, 0.16270285039395094, 0.15482368914224207] ***
*** starting iteration: 4; err: [Inf, 0.21846240213606508, 0.17855512750893832, 0.16270285039395094, 0.15482368914224207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21846240213606508, 0.17855512750893832, 0.16270285039395094, 0.15482368914224207, 0.1517590516731143] ***
*** starting iteration: 5; err: [Inf, 0.21846240213606508, 0.17855512750893832, 0.16270285039395094, 0.15482368914224207, 0.1517590516731143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21846240213606508, 0.17855512750893832, 0.16270285039395094, 0.15482368914224207, 0.1517590516731143, 0.15080392356729136] ***
*** finished computation of 7 references, err: [Inf, 0.21846240213606508, 0.17855512750893832, 0.16270285039395094, 0.15482368914224207, 0.1517590516731143, 0.15080392356729136] ***
*** center 1: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 24, 16]]
** centroid: 2, normalized-entropy: 0.9709505944546688, [(2, 24), (3, 16)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 62, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [76, 14, 0]]
** centroid: 5, normalized-entropy: 0.6235702082127973, [(1, 76), (2, 14)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [22, 55, 0]]
** centroid: 6, normalized-entropy: 0.8631205685666311, [(1, 22), (2, 55)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [37, 35, 0]]
** centroid: 7, normalized-entropy: 0.9994433330902989, [(1, 37), (2, 35)]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 365,3 => 38,1 => 597), Dict(2 => 375,3 => 28,1 => 597))
[ Info: ===== scores for single classifier: {"micro_f1":0.94,"precision":0.94,"recall":0.94,"macro_recall":0.9565829145728643,"macro_f1":0.8530741376024394,"accuracy":0.94,"class_f1":{"2":0.92,"3":0.6666666666666666,"1":0.9725557461406518},"class_precision":{"2":0.92,"3":0.5,"1":0.9964850615114236},"class_recall":{"2":0.92,"3":1.0,"1":0.949748743718593}}
[ Info: ===== scores for 1: {"micro_f1":0.988,"precision":0.988,"recall":0.988,"macro_recall":0.9786480019143337,"macro_f1":0.9693984364511365,"accuracy":0.988,"class_f1":{"2":0.9838274932614556,"3":0.9310344827586207,"1":0.9933333333333333},"class_precision":{"2":0.9945504087193461,"3":0.9,"1":0.988391376451078},"class_recall":{"2":0.9733333333333334,"3":0.9642857142857143,"1":0.998324958123953}}
[ Info: ===== scores for 5: {"micro_f1":0.97,"precision":0.97,"recall":0.97,"macro_recall":0.9786219988833054,"macro_f1":0.9227938524850979,"accuracy":0.97,"class_f1":{"2":0.9601063829787234,"3":0.8235294117647058,"1":0.9847457627118645},"class_precision":{"2":0.9575596816976127,"3":0.7,"1":0.9965694682675815},"class_recall":{"2":0.9626666666666667,"3":1.0,"1":0.9731993299832495}}
[ Info: ===== scores for 7: {"micro_f1":0.972,"precision":0.972,"recall":0.972,"macro_recall":0.978747068676717,"macro_f1":0.9168537356373944,"accuracy":0.972,"class_f1":{"2":0.9623655913978495,"3":0.8,"1":0.9881956155143338},"class_precision":{"2":0.9701897018970189,"3":0.6666666666666666,"1":0.9949066213921901},"class_recall":{"2":0.9546666666666667,"3":1.0,"1":0.981574539363484}}
[ Info: ===== scores for 9: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9810831937465103,"macro_f1":0.9263401283346265,"accuracy":0.975,"class_f1":{"2":0.9664429530201343,"3":0.8235294117647058,"1":0.9890480202190395},"class_precision":{"2":0.972972972972973,"3":0.7,"1":0.9949152542372881},"class_recall":{"2":0.96,"3":1.0,"1":0.983249581239531}}
[ Info: ===== scores for 11: {"micro_f1":0.972,"precision":0.972,"recall":0.972,"macro_recall":0.9790776102735902,"macro_f1":0.9204674876620355,"accuracy":0.972,"class_f1":{"2":0.9624664879356568,"3":0.8115942028985507,"1":0.9873417721518988},"class_precision":{"2":0.967654986522911,"3":0.6829268292682927,"1":0.9948979591836735},"class_recall":{"2":0.9573333333333334,"3":1.0,"1":0.9798994974874372}}
(score = 0.989, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.989, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.988, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.988, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.983, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.983, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.987, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.987, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.969, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.969, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.97, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.972, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.972, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.989,"k":1,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.989,"precision":0.989,"recall":0.989,"macro_recall":0.9795368908032224,"macro_f1":0.9701304796792662,"accuracy":0.989,"class_f1":{"2":0.9851951547779273,"3":0.9310344827586207,"1":0.994161801501251},"class_precision":{"2":0.9945652173913043,"3":0.9,"1":0.9900332225913622},"class_recall":{"2":0.976,"3":0.9642857142857143,"1":0.998324958123953}}
Test Summary: | Pass  Total
AKNC          |    8      8
[120, 1, 4, 7, 3, 9, 3, 6, 3, 1, 2, 2, 2, 18, 1, 11, 3, 12, 3, 9, 7, 2, 19, 3, 10, 3, 12, 6, 4, 19, 28, 4, 2, 1, 9, 5, 14, 5, 45, 23, 4, 5, 8, 25, 7, 1, 10, 4, 4, 7, 4, 20, 17, 1, 14, 27, 20, 20, 18, 42, 20, 6, 62, 17, 30, 87, 4, 9, 40, 1, 14, 5, 4, 61, 88, 8, 112, 9, 5, 6, 2, 2, 9, 13, 112, 9, 8, 12, 2, 13, 20, 144, 7, 12, 30, 26, 9, 61, 5, 17, 25, 17, 68, 17, 7, 5, 8, 11, 12, 81, 13, 7, 5, 17, 31, 8, 13, 42, 3, 45, 2, 20, 42, 7, 36, 5, 36, 32, 4, 14, 6, 4, 54, 15, 8, 13, 593, 31, 32, 5, 39, 8, 314, 18, 5, 43, 38, 3, 132, 38, 68, 57, 20, 104, 4, 7, 44, 9, 79, 46, 9, 7, 18, 10, 64, 20, 1, 34, 63, 8, 36, 5, 280, 2, 26, 27, 2, 9, 28, 43, 27, 15, 48, 9, 29, 2, 11, 16, 10, 20, 4, 5, 9, 8, 43, 54, 10, 3, 5, 51, 22, 61, 65, 4, 15, 119, 31, 19, 47, 4, 65, 9, 17, 265, 3, 7, 9, 27, 2, 31, 21, 21, 9, 15, 25, 20, 100, 217, 32, 25, 74, 14, 25, 492, 43, 172, 10, 19, 28, 16, 8, 16, 176, 15, 10, 11, 8, 52, 7, 20, 36, 343, 20, 13, 35, 8, 20, 14, 9, 41, 40, 15, 3, 128, 8, 41, 2, 4, 13, 12, 49, 23, 5, 86, 27, 5, 34, 7, 167, 20, 257, 3, 30, 30, 112, 25, 13, 30, 6, 13, 16, 41, 49, 4, 39, 16, 8, 28, 160, 28]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6480000000000001, speedup = 0.3361069076117408, eval_ratio = 0.071497)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.42216641865079385,"recall":0.40885416666666685,"f1":null,"seconds":0.000232599675655365,"exhaustive_search_seconds":0.0003029927611351013,"evaluations":499.03125,"distances_sum":1647.8012834431554}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5801091269841272,"recall":0.5798611111111114,"f1":null,"seconds":0.0002973955124616623,"exhaustive_search_seconds":0.0003029927611351013,"evaluations":625.7109375,"distances_sum":1598.2648288315884}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6840277777777775,"recall":0.6840277777777775,"f1":null,"seconds":0.0003991220146417618,"exhaustive_search_seconds":0.0003029927611351013,"evaluations":753.8359375,"distances_sum":1554.797679077641}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7534722222222222,"recall":0.7534722222222222,"f1":null,"seconds":0.0010059289634227753,"exhaustive_search_seconds":0.0003029927611351013,"evaluations":844.765625,"distances_sum":1530.4037167134793}
KCenters.DeloneInvIndex> reached performance {"precision":0.8098958333333327,"recall":0.8098958333333327,"f1":0.8098958333333327,"seconds":0.00044518522918224335,"exhaustive_search_seconds":0.0003029927611351013,"evaluations":949.109375,"distances_sum":1514.1474140631494}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.794, speedup = 0.7995990616783782, eval_ratio = 0.091987)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
