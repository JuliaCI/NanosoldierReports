Julia Version 1.5.0-DEV.662
Commit c0edac5d3a (2020-04-21 07:07 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_YTgNrx/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_YTgNrx/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722748711841167
curgen: 20 fitness: 0.21723359788646238
curgen: 30 fitness: 0.21723359788646238
curgen: 40 fitness: 0.21723359788646238
curgen: 50 fitness: 0.21723359788646238
CoordinateCreature{Array{Float64,1}}([-0.2225219908319507], -0.21723359788646238) -0.2225219908319507 -0.21723359788646238
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258097204933602
curgen: 100 fitness: 3.258347207315762
curgen: 150 fitness: 3.2583813799819077
curgen: 200 fitness: 3.258434041712841
curgen: 250 fitness: 3.258434041712841
curgen: 300 fitness: 3.258451157026196
curgen: 350 fitness: 3.258452731889965
curgen: 400 fitness: 3.2584535961413383
curgen: 450 fitness: 3.258454169595126
curgen: 500 fitness: 3.258488051853008
CoordinateCreature{Array{Float64,1}}([0.22245851622703403, 0.22258257510517257, 0.22265548698315787, -0.2227935933633714, 0.22238634486844483, -0.22236271125331775, 0.2226560807036979, -0.22252968669559933, 0.22260170050635328, -0.22250224728147303, -0.2225272974159682, 0.22296422942409347, 0.22240398341194414, 0.22244145451924122, 0.22247115081041757], -3.258488051853008) [0.22245851622703403, 0.22258257510517257, 0.22265548698315787, -0.2227935933633714, 0.22238634486844483, -0.22236271125331775, 0.2226560807036979, -0.22252968669559933, 0.22260170050635328, -0.22250224728147303, -0.2225272974159682, 0.22296422942409347, 0.22240398341194414, 0.22244145451924122, 0.22247115081041757] -3.258488051853008
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003284918571239359
curgen: 100 fitness: -0.0025150639784214945
curgen: 150 fitness: -0.0023221055100748345
curgen: 200 fitness: -0.0023087961183705374
curgen: 250 fitness: -0.0023087961183705374
curgen: 300 fitness: -0.0015797534334183183
curgen: 350 fitness: -0.0015797534334183183
curgen: 400 fitness: -0.0013991528423389354
curgen: 450 fitness: -0.0009954583069315959
curgen: 500 fitness: -0.0009954583069315959
CoordinateCreature{Array{Float64,1}}([-0.0002971415635232522, 0.00011243834546693877, -9.704935662183112e-5, 0.00031876325381523154, -0.0005312310136971366, -0.0010931306409188788, -0.00011141518582721127, 0.000377953780951722, -0.0002887937404888363, 0.0008936304209067472, 0.001131352758370657, 0.0005874504917607873, -6.901816430830539e-5, -0.00010463306220220748, 0.0008065556619310675], 0.0009954583069315959) [-0.0002971415635232522, 0.00011243834546693877, -9.704935662183112e-5, 0.00031876325381523154, -0.0005312310136971366, -0.0010931306409188788, -0.00011141518582721127, 0.000377953780951722, -0.0002887937404888363, 0.0008936304209067472, 0.001131352758370657, 0.0005874504917607873, -6.901816430830539e-5, -0.00010463306220220748, 0.0008065556619310675] 0.0009954583069315959
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
