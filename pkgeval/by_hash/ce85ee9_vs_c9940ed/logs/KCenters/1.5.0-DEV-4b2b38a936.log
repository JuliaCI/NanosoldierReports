Julia Version 1.5.0-DEV.145
Commit 4b2b38a936 (2020-01-21 22:14 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed PooledArrays ──────────────── v0.5.3
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed KCenters ──────────────────── v0.1.9
 Installed Compat ────────────────────── v3.2.0
 Installed DataStructures ────────────── v0.17.9
 Installed JSON ──────────────────────── v0.21.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed DataFrames ────────────────── v0.20.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed Reexport ──────────────────── v0.2.0
 Installed OrderedCollections ────────── v1.1.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Missings ──────────────────── v0.4.3
 Installed Tables ────────────────────── v0.2.11
 Installed Parsers ───────────────────── v0.3.10
 Installed TableTraits ───────────────── v1.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed StatsBase ─────────────────── v0.32.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_4jmd48/Project.toml`
 [no changes]
  Updating `/tmp/jl_4jmd48/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_4jmd48/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 107.57000000000009
[ Info: 74.87
[ Info: 40.759999999999984
[ Info: 24.390000000000004
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.19999834944844
[ Info: 75.78000114538527
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.8411458572814
inertia(cdnet.distances) = 23.495043333088944
inertia(crand.distances) = 31.00924806261672
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8139235764235773,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.53125,"distances_sum":2047.7389719585342}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.431640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.431640625,"f1":null,"seconds":4.552304744720459e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":6.8515625,"distances_sum":1204.682610752103}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.568359375,"f1":null,"seconds":4.602596163749695e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":7.75,"distances_sum":1626.625999280432}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.789096667221668,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.2109375,"distances_sum":1947.592208832724}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.697265625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.697265625,"f1":0.8139235764235773,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.53125,"distances_sum":2047.7389719585342}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9231169871794878,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.921875,"distances_sum":2778.304244571068}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8611211704961713,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.875,"distances_sum":2350.523295995847}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8531109515484524,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.9140625,"distances_sum":2246.448889755711}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8662109375,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8662109375,"f1":0.9231169871794878,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.921875,"distances_sum":2778.304244571068}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9659283424908428,"seconds":6.802380084991455e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.984375,"distances_sum":3153.992355965638}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9403731684981692,"seconds":6.737187504768372e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.96875,"distances_sum":2897.884625728295}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9686240842490846,"seconds":6.692484021186829e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.9609375,"distances_sum":3181.2796734624626}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9530766108891114,"seconds":6.644055247306824e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.90625,"distances_sum":3073.571956774568}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9669502372627379,"seconds":6.735324859619141e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.96875,"distances_sum":3192.4923269338456}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9686240842490846,"seconds":6.692484021186829e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.9609375,"distances_sum":3181.2796734624626}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9686240842490846,"seconds":6.692484021186829e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.9609375,"distances_sum":3181.2796734624626}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.16796875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.16796875,"f1":null,"seconds":3.7439167499542236e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":4.8984375,"distances_sum":404.07673527145465}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1787109375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1787109375,"f1":null,"seconds":3.769993782043457e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":5.03125,"distances_sum":455.1810745756383}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3818359375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3818359375,"f1":null,"seconds":4.168599843978882e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":5.65625,"distances_sum":990.8587452808443}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3818359375,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.3818359375,"f1":null,"seconds":4.168599843978882e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":5.65625,"distances_sum":990.8587452808443}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8119432650682659,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":7.609375,"distances_sum":1881.4390935137117}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8961658133533141,"seconds":6.545335054397583e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.28125,"distances_sum":2310.84631407207}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.529296875, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.529296875,"f1":null,"seconds":4.550442099571228e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":6.6953125,"distances_sum":1368.9518285136876}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7899152930402937,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":7.5234375,"distances_sum":1762.300233424796}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.863467782217783,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.125,"distances_sum":2133.625326970408}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8212890625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8212890625,"f1":0.8961658133533141,"seconds":6.545335054397583e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.28125,"distances_sum":2310.84631407207}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586767399267404,"seconds":6.705522537231445e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.890625,"distances_sum":2839.5147004837545}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9629521520146525,"seconds":7.178634405136108e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.8984375,"distances_sum":2878.2311603786516}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9629521520146525,"seconds":7.178634405136108e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.8984375,"distances_sum":2878.2311603786516}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9629521520146525,"seconds":7.178634405136108e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.8984375,"distances_sum":2878.2311603786516}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.255859375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.255859375,"f1":null,"seconds":4.101544618606567e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":6.6875,"distances_sum":702.7274438017787}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.587890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.587890625,"f1":0.7226169663669668,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":7.203125,"distances_sum":1557.2446997707175}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8555262445887454,"seconds":6.105750799179077e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.34375,"distances_sum":2118.028500011119}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8555262445887454,"seconds":6.105750799179077e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.34375,"distances_sum":2118.028500011119}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9518289002664009,"seconds":6.677582859992981e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.8671875,"distances_sum":2833.194337005522}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622825091575096,"seconds":7.0426613092422485e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.875,"distances_sum":2905.2456466268463}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8585091991342,"seconds":6.1355531215667725e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.3671875,"distances_sum":2171.7362097195023}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9347756410256417,"seconds":6.549060344696045e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.703125,"distances_sum":2705.3485084906174}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9622825091575096,"seconds":7.0426613092422485e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.875,"distances_sum":2905.2456466268463}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9792239010989015,"seconds":7.72811472415924e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.9296875,"distances_sum":3080.58009712476}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9682864010989016,"seconds":7.146969437599182e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.921875,"distances_sum":2969.897052410406}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9728994963369967,"seconds":7.169321179389954e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.9453125,"distances_sum":3012.188719798028}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9716796875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9716796875,"f1":0.9843750000000002,"seconds":7.398426532745361e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.953125,"distances_sum":3105.8106610200443}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.965404907592408,"seconds":7.092952728271484e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.875,"distances_sum":2956.713251007194}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9639365842490847,"seconds":7.111579179763794e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.8515625,"distances_sum":2941.9199605532895}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9716796875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9843750000000002,"seconds":7.398426532745361e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.953125,"distances_sum":3105.8106610200443}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9716796875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9843750000000002,"seconds":7.398426532745361e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.953125,"distances_sum":3105.8106610200443}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.580078125,"f1":0.7204495157620163,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.1640625,"distances_sum":1497.31012068003}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2490234375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2490234375,"f1":null,"seconds":4.174187779426575e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":6.359375,"distances_sum":678.624869016473}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.580078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.580078125,"f1":0.7204495157620163,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.1640625,"distances_sum":1497.31012068003}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8088010947385955,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.3203125,"distances_sum":1865.7247489879799}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8957937895437904,"seconds":6.368383765220642e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.2890625,"distances_sum":2400.6972321276276}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8549563283938293,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.09375,"distances_sum":2129.429904047034}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8212890625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8212890625,"f1":0.8957937895437904,"seconds":6.368383765220642e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.2890625,"distances_sum":2400.6972321276276}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9634157509157514,"seconds":6.465241312980652e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.875,"distances_sum":2948.9372600727143}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9065283674658683,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.28125,"distances_sum":2468.9093620595963}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9413263819513823,"seconds":6.252899765968323e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.734375,"distances_sum":2797.7652715361683}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9671703296703301,"seconds":6.3497573137283325e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.875,"distances_sum":2983.033498244611}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9492044413919422,"seconds":6.681308150291443e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.828125,"distances_sum":2836.0643717764888}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.949038461538462,"seconds":6.346032023429871e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.7890625,"distances_sum":2834.5904054458256}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9671703296703301,"seconds":6.3497573137283325e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.875,"distances_sum":2983.033498244611}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9671703296703301,"seconds":6.3497573137283325e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.875,"distances_sum":2983.033498244611}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.7192354520479528,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.25,"distances_sum":1442.932061743464}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5849609375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5849609375,"f1":0.7290907009657015,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.3671875,"distances_sum":1498.6992069344847}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5849609375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5849609375,"f1":0.7290907009657015,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.3671875,"distances_sum":1498.6992069344847}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8720727189477198,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3828125,"distances_sum":2212.2795863112087}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9100165459540466,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.546875,"distances_sum":2487.3546561846847}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7891556360306368,"seconds":4.816800355911255e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.7109375,"distances_sum":1736.2392082290114}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9100165459540466,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.546875,"distances_sum":2487.3546561846847}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9411744505494511,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7578125,"distances_sum":2734.8544278647632}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9567422161172164,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8203125,"distances_sum":2892.4977522643962}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9352569305694312,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6640625,"distances_sum":2686.4112382271005}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9330013736263743,"seconds":6.292015314102173e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.734375,"distances_sum":2626.0006779961673}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9567422161172164,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8203125,"distances_sum":2892.4977522643962}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9567422161172164,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8203125,"distances_sum":2892.4977522643962}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7966871669996678,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.8203125,"distances_sum":1791.8104916803977}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":3.7029385566711426e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.59375,"distances_sum":580.0486154643854}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6728515625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6728515625,"f1":0.7966871669996678,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.8203125,"distances_sum":1791.8104916803977}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9115728021978029,"seconds":6.573274731636047e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5859375,"distances_sum":2479.218918842313}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8494110056610065,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.3515625,"distances_sum":2081.7155385634737}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8661973443223452,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.3046875,"distances_sum":2184.193638837811}, best_list's length: 15, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8638257575757583,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.421875,"distances_sum":2150.6061564892407}, best_list's length: 16, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8466796875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8466796875,"f1":0.9115728021978029,"seconds":6.573274731636047e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5859375,"distances_sum":2479.218918842313}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.915899725274726,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.53125,"distances_sum":2528.3570623392984}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9649241383616385,"seconds":6.7409127950668335e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.890625,"distances_sum":2952.3032799741886}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964921016483517,"seconds":6.729736924171448e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8984375,"distances_sum":2936.6042206965967}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9571688727938731,"seconds":6.6515058279037476e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8125,"distances_sum":2889.6789412882426}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9522951007326013,"seconds":6.537884473800659e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8359375,"distances_sum":2845.7301419819587}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9549679487179491,"seconds":6.4820051193237305e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.828125,"distances_sum":2853.8475229926808}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9649241383616385,"seconds":6.7409127950668335e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.890625,"distances_sum":2952.3032799741886}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9649241383616385,"seconds":6.7409127950668335e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.890625,"distances_sum":2952.3032799741886}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7849005161505169,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.4453125,"distances_sum":1445.0317291932322}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3603515625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3603515625,"f1":null,"seconds":3.201887011528015e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":5.5234375,"distances_sum":738.7696511316257}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7849005161505169,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.4453125,"distances_sum":1445.0317291932322}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9085730241980252,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.25,"distances_sum":2036.274313485978}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9316917457542464,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.75,"distances_sum":2177.5631175237613}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9316917457542464,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.75,"distances_sum":2177.5631175237613}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9427541208791211,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7265625,"distances_sum":2277.4237930529757}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9636561355311362,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.859375,"distances_sum":2372.1323446748165}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9469582500832507,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.6796875,"distances_sum":2330.325491204059}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752060439560443,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.890625,"distances_sum":2466.2140838636337}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752060439560443,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.890625,"distances_sum":2466.2140838636337}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752060439560443,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.890625,"distances_sum":2466.2140838636337}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":3.7830322980880737e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.53125,"distances_sum":848.4080085873302}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.6955551393051399,"seconds":6.70701265335083e-5,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.203125,"distances_sum":1152.4507472590801}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.7200882450882458,"seconds":4.466623067855835e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.140625,"distances_sum":1275.3295037489086}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5859375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5859375,"f1":0.7200882450882458,"seconds":4.466623067855835e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.140625,"distances_sum":1275.3295037489086}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9084223068598073,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.1328125,"distances_sum":2163.624071684026}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8110566516816525,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.6015625,"distances_sum":1599.340281853853}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.8186204420579428,"seconds":4.811212420463562e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.59375,"distances_sum":1619.7686646858888}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9084223068598073,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.1328125,"distances_sum":2163.624071684026}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9644001831501836,"seconds":6.876885890960693e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8046875,"distances_sum":2544.549850006234}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.953685897435898,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.71875,"distances_sum":2464.632120778175}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9212740384615392,"seconds":6.629154086112976e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.3046875,"distances_sum":2202.2382434615256}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9408424908424915,"seconds":6.945803761482239e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.5625,"distances_sum":2435.2790266963816}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9543040293040297,"seconds":6.984919309616089e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7421875,"distances_sum":2448.742672357229}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9473843864468872,"seconds":8.087605237960815e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.640625,"distances_sum":2422.5893627367395}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644001831501836,"seconds":6.876885890960693e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8046875,"distances_sum":2544.549850006234}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644001831501836,"seconds":6.876885890960693e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8046875,"distances_sum":2544.549850006234}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5458984375,"f1":null,"seconds":4.347413778305054e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":7.0546875,"distances_sum":1228.8213467750452}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1953125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1953125,"f1":null,"seconds":2.855435013771057e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":4.90625,"distances_sum":522.1304973211434}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7752875596625605,"seconds":4.431232810020447e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":7.71875,"distances_sum":1489.7524596100982}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6494140625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6494140625,"f1":0.7752875596625605,"seconds":4.431232810020447e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":7.71875,"distances_sum":1489.7524596100982}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9419731310356316,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.640625,"distances_sum":2420.642840085163}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.789298722111223,"seconds":4.490837454795837e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":7.6953125,"distances_sum":1560.8579315196034}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9387024433899437,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.6875,"distances_sum":2330.633544852049}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9419731310356316,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.640625,"distances_sum":2420.642840085163}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9584134615384622,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.8359375,"distances_sum":2462.369513743435}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9587854853479859,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.8359375,"distances_sum":2488.1941766880673}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9587854853479859,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.8359375,"distances_sum":2488.1941766880673}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9587854853479859,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.8359375,"distances_sum":2488.1941766880673}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8563587454212461,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.90625,"distances_sum":1736.964793456047}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8049206002331011,"seconds":4.502013325691223e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.6328125,"distances_sum":1505.5888657851347}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8563587454212461,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.90625,"distances_sum":1736.964793456047}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9347100815850823,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6484375,"distances_sum":2233.3452071150064}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9572973901098906,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8203125,"distances_sum":2410.9263180186053}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9572973901098906,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8203125,"distances_sum":2410.9263180186053}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752976190476195,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2517.230579235588}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9781078296703298,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2538.856313653783}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781078296703298,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2538.856313653783}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781078296703298,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2538.856313653783}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.7000839438339446,"seconds":4.254281520843506e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.59375,"distances_sum":1172.936028944499}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8023388070263078,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.84375,"distances_sum":1510.5606877090331}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.8023388070263078,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.84375,"distances_sum":1510.5606877090331}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8519896769896778,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.15625,"distances_sum":1772.1554932823083}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9391655219780226,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.734375,"distances_sum":2281.4835077343023}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.907126207126208,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5078125,"distances_sum":2063.315032213289}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9391655219780226,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.734375,"distances_sum":2281.4835077343023}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9512992216117221,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7578125,"distances_sum":2407.491038505646}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9511217948717952,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.796875,"distances_sum":2344.3152400499166}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9688472985347989,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9453125,"distances_sum":2469.6242461940706}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9681604853479856,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.90625,"distances_sum":2470.8108708852033}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9495077838827843,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.71875,"distances_sum":2341.4791603804374}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9688472985347989,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9453125,"distances_sum":2469.6242461940706}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9688472985347989,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9453125,"distances_sum":2469.6242461940706}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.7188668969918975,"seconds":4.3138861656188965e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.71875,"distances_sum":1234.4305421728875}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.208984375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.208984375,"f1":null,"seconds":3.2726675271987915e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.3984375,"distances_sum":492.53410457176307}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5859375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5859375,"f1":0.7188668969918975,"seconds":4.3138861656188965e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.71875,"distances_sum":1234.4305421728875}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9455414377289381,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.75,"distances_sum":2279.0049784514213}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9455414377289381,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.75,"distances_sum":2279.0049784514213}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9659626831501835,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9296875,"distances_sum":2416.0820684417104}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9791494963369967,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9609375,"distances_sum":2528.579920572548}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9616102647352652,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9140625,"distances_sum":2411.2015084652608}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9791494963369967,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9609375,"distances_sum":2528.579920572548}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9791494963369967,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9609375,"distances_sum":2528.579920572548}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.591796875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.591796875,"f1":0.7281534437784445,"seconds":4.2691826820373535e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.640625,"distances_sum":1219.1790167271756}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.591796875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.591796875,"f1":0.7281534437784445,"seconds":4.2691826820373535e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.640625,"distances_sum":1219.1790167271756}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9243246336996344,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5390625,"distances_sum":2117.1775546973945}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9156541375291384,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.53125,"distances_sum":2063.2136074771547}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8671875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.9243246336996344,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5390625,"distances_sum":2117.1775546973945}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9606456043956049,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9140625,"distances_sum":2367.963638668208}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9607543498168502,"seconds":6.3087791204452515e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8515625,"distances_sum":2375.5616871017455}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9382383241758249,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7109375,"distances_sum":2215.7540956148855}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9589915293040299,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2375.006859127346}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9480139652014656,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7890625,"distances_sum":2331.1271525482402}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9607543498168502,"seconds":6.3087791204452515e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8515625,"distances_sum":2375.5616871017455}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9607543498168502,"seconds":6.3087791204452515e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8515625,"distances_sum":2375.5616871017455}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1806640625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1806640625,"f1":null,"seconds":2.6132911443710327e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":4.296875,"distances_sum":331.90895036337434}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.189453125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.189453125,"f1":null,"seconds":4.969537258148193e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":4.390625,"distances_sum":336.9720478052005}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.189453125,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.189453125,"f1":null,"seconds":4.969537258148193e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":4.390625,"distances_sum":336.9720478052005}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8593958125208132,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.921875,"distances_sum":1376.8723844513677}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3505859375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3505859375,"f1":null,"seconds":3.119930624961853e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.03125,"distances_sum":573.1899263874521}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.546875,"f1":0.689377636252637,"seconds":4.038214683532715e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.8046875,"distances_sum":969.683542095186}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.517578125, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.517578125,"f1":null,"seconds":3.915280103683472e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.5703125,"distances_sum":906.1641314171342}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51171875, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.51171875,"f1":0.660866737429238,"seconds":3.814697265625e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.671875,"distances_sum":871.7185673677252}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8593958125208132,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.921875,"distances_sum":1376.8723844513677}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8720649142524151,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.078125,"distances_sum":1473.0641726567608}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9489671786546788,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.625,"distances_sum":1838.2288280842367}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.928511592574093,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.375,"distances_sum":1709.2967386905395}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9143918581418587,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.3125,"distances_sum":1643.3696807197684}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9489671786546788,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.625,"distances_sum":1838.2288280842367}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9489671786546788,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.625,"distances_sum":1838.2288280842367}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.224609375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.224609375,"f1":null,"seconds":2.8070062398910522e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":4.9765625,"distances_sum":415.22654870770424}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8508241758241766,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.8515625,"distances_sum":1499.289667989891}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8544824966699973,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.890625,"distances_sum":1563.357429141017}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8544824966699973,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.890625,"distances_sum":1563.357429141017}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.952203525641026,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.796875,"distances_sum":1955.1367877717735}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9030995046620054,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.0390625,"distances_sum":1723.948862754818}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9618532509157516,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8515625,"distances_sum":1978.8099581124784}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9494136072261076,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.6640625,"distances_sum":1970.0179572861816}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.954621940559441,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.734375,"distances_sum":1976.0382709389462}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9618532509157516,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8515625,"distances_sum":1978.8099581124784}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9815304487179489,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.953125,"distances_sum":2096.4157725498853}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9635473901098905,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8515625,"distances_sum":2012.069036165771}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9767113095238098,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.90625,"distances_sum":2085.0679773790052}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.965464743589744,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.875,"distances_sum":2016.0217505612297}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9757268772893777,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9609375,"distances_sum":2061.720442389283}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9634157509157514,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8046875,"distances_sum":2027.45738266192}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9746108058608062,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.90625,"distances_sum":2066.9190326754574}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9642742673992679,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8515625,"distances_sum":2000.9483096198003}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9815304487179489,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.953125,"distances_sum":2096.4157725498853}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9815304487179489,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.953125,"distances_sum":2096.4157725498853}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.51171875,"f1":0.6647940601065604,"seconds":3.768131136894226e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.671875,"distances_sum":964.0261544607145}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.51171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.51171875,"f1":0.6647940601065604,"seconds":3.768131136894226e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.671875,"distances_sum":964.0261544607145}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9100961538461545,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.46875,"distances_sum":1760.219201028814}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9100961538461545,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.46875,"distances_sum":1760.219201028814}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9710424991674994,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.90625,"distances_sum":2087.9785779828408}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9710424991674994,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.90625,"distances_sum":2087.9785779828408}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9710424991674994,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.90625,"distances_sum":2087.9785779828408}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.380859375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.380859375,"f1":null,"seconds":3.6712735891342163e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.7421875,"distances_sum":728.1893243544396}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":3.5427510738372803e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.71875,"distances_sum":735.3268148441352}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.224609375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.224609375,"f1":null,"seconds":3.293156623840332e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.5,"distances_sum":447.43129305259873}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3828125,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.3828125,"f1":null,"seconds":3.5427510738372803e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.71875,"distances_sum":735.3268148441352}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8727512071262079,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.359375,"distances_sum":1640.52226382758}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6982905982905989,"seconds":4.546716809272766e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.5859375,"distances_sum":1032.8930424590744}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9052171786546794,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.375,"distances_sum":1767.629004116679}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8005687021312029,"seconds":4.5299530029296875e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.8125,"distances_sum":1382.8707027864098}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7849471708846717,"seconds":4.513189196586609e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.6171875,"distances_sum":1265.526806737537}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.837890625,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.837890625,"f1":0.9052171786546794,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.375,"distances_sum":1767.629004116679}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9512706043956051,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.84375,"distances_sum":2079.787940707371}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9346211080586091,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8125,"distances_sum":1955.9102246001185}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9629864926739933,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8828125,"distances_sum":2152.3071286251075}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9229171869796877,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.5234375,"distances_sum":1893.9738837444258}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9460050366300373,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7890625,"distances_sum":2055.8112449174887}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9629864926739933,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8828125,"distances_sum":2152.3071286251075}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9629864926739933,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8828125,"distances_sum":2152.3071286251075}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8382138694638704,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.9453125,"distances_sum":1524.6980075072481}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7795624514374522,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.6328125,"distances_sum":1339.9588299632499}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3310546875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3310546875,"f1":null,"seconds":3.4086406230926514e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":5.03125,"distances_sum":693.698918033516}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.736328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.736328125,"f1":0.8382138694638704,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.9453125,"distances_sum":1524.6980075072481}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9447058150183159,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8515625,"distances_sum":1975.629568540685}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9286005661005668,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7265625,"distances_sum":1839.2289425691195}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9056375915750925,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.5234375,"distances_sum":1766.669474956847}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.919376977189478,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7265625,"distances_sum":1811.119819540042}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9447058150183159,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8515625,"distances_sum":1975.629568540685}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9736263736263739,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.9765625,"distances_sum":2118.4349988779745}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.972527472527473,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.90625,"distances_sum":2134.2087580249945}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9761904761904767,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.9453125,"distances_sum":2159.36664053828}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9670959249084253,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.875,"distances_sum":2121.007966227832}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9598042582417589,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8359375,"distances_sum":2069.7437610407105}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9761904761904767,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.9453125,"distances_sum":2159.36664053828}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9761904761904767,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.9453125,"distances_sum":2159.36664053828}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.306640625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.306640625,"f1":null,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":4.59375,"distances_sum":667.7919083694195}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7967766608391614,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.5390625,"distances_sum":1485.233527850571}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6787109375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6787109375,"f1":0.7967766608391614,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.5390625,"distances_sum":1485.233527850571}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8170173576423584,"seconds":4.995614290237427e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.71875,"distances_sum":1558.518093749866}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9227506868131875,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.4296875,"distances_sum":2099.6054917226966}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.8990852897102907,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.34375,"distances_sum":1917.6990405364122}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.9227506868131875,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.4296875,"distances_sum":2099.6054917226966}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786458333333335,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9296875,"distances_sum":2357.9556081694996}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9680059523809527,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8671875,"distances_sum":2284.1725170063823}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786458333333335,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9296875,"distances_sum":2357.9556081694996}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786458333333335,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9296875,"distances_sum":2357.9556081694996}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8666900807525815,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.796875,"distances_sum":1702.1654870152895}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8666900807525815,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.796875,"distances_sum":1702.1654870152895}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9496909340659346,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.703125,"distances_sum":2179.951049739451}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9276015651015658,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.40625,"distances_sum":2023.0081107849985}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9496909340659346,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.703125,"distances_sum":2179.951049739451}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.97265625, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.97265625,"f1":0.9851190476190479,"seconds":6.368383765220642e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.96875,"distances_sum":2366.277372071993}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9670272435897439,"seconds":6.459653377532959e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.828125,"distances_sum":2274.599877282651}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9749255952380953,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2313.157568347007}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9673420329670334,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8515625,"distances_sum":2258.3546517145214}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.970592948717949,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8515625,"distances_sum":2298.349175882566}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.97265625,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9851190476190479,"seconds":6.368383765220642e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.96875,"distances_sum":2366.277372071993}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.97265625,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9851190476190479,"seconds":6.368383765220642e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.96875,"distances_sum":2366.277372071993}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":3.6098062992095947e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.8125,"distances_sum":875.9808291067125}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7159416971916979,"seconds":4.33996319770813e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.1796875,"distances_sum":1277.9289903093947}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.841918845043846,"seconds":8.694827556610107e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.765625,"distances_sum":1741.4306197458186}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.841918845043846,"seconds":8.694827556610107e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.765625,"distances_sum":1741.4306197458186}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9388309607059614,"seconds":1.0130926966667175e-5,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7265625,"distances_sum":2169.669236786028}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8525516150516159,"seconds":9.344890713691711e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.9140625,"distances_sum":1784.4175654705982}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9388309607059614,"seconds":1.0130926966667175e-5,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7265625,"distances_sum":2169.669236786028}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9550480769230776,"seconds":6.791204214096069e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8125,"distances_sum":2276.240921550245}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":1.060590147972107e-5,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9140625,"distances_sum":2391.2259364666024}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9467204670329676,"seconds":1.0488554835319519e-5,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.703125,"distances_sum":2252.3979780351924}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9648294413919418,"seconds":1.0672956705093384e-5,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8125,"distances_sum":2349.4509749748427}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9426599442224447,"seconds":1.0129064321517944e-5,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6484375,"distances_sum":2231.9536755314134}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":1.060590147972107e-5,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9140625,"distances_sum":2391.2259364666024}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":1.060590147972107e-5,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9140625,"distances_sum":2391.2259364666024}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8399964618714627,"seconds":8.860602974891663e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":7.8828125,"distances_sum":1488.604063776608}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":6.7390501499176025e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":6.1484375,"distances_sum":767.5287355364073}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.710517954267955,"seconds":8.067116141319275e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":7.5703125,"distances_sum":1111.605195264975}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.740234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.740234375,"f1":0.8399964618714627,"seconds":8.860602974891663e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":7.8828125,"distances_sum":1488.604063776608}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8965086996337005,"seconds":9.924173355102539e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.515625,"distances_sum":1736.1555507638243}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9449118589743596,"seconds":1.0045245289802551e-5,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.71875,"distances_sum":2058.302465349575}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9261306401931406,"seconds":1.0138377547264099e-5,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.6484375,"distances_sum":1943.3373967896198}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9113610347985357,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.5859375,"distances_sum":1810.0933912478665}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9449118589743596,"seconds":1.0045245289802551e-5,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.71875,"distances_sum":2058.302465349575}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9641629204129207,"seconds":1.0441988706588745e-5,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.8984375,"distances_sum":2136.2936535480003}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.971056547619048,"seconds":1.0769814252853394e-5,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.9296875,"distances_sum":2192.5844576776612}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.96421130952381,"seconds":1.0600313544273376e-5,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.8984375,"distances_sum":2137.915939695594}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605654761904766,"seconds":1.0173767805099487e-5,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.8125,"distances_sum":2154.1404391548845}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9514365842490848,"seconds":6.381422281265259e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.78125,"distances_sum":2097.651337339247}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9662774725274729,"seconds":7.713213562965393e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.875,"distances_sum":2158.634628838571}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.971056547619048,"seconds":1.0769814252853394e-5,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.9296875,"distances_sum":2192.5844576776612}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.971056547619048,"seconds":1.0769814252853394e-5,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.9296875,"distances_sum":2192.5844576776612}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.390625,"f1":null,"seconds":6.627291440963745e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":5.90625,"distances_sum":666.144232972605}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.259765625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.259765625,"f1":null,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":6.4375,"distances_sum":468.26937660155727}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7822698135198143,"seconds":8.964911103248596e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":7.9609375,"distances_sum":1245.418645743569}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6572265625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6572265625,"f1":0.7822698135198143,"seconds":8.964911103248596e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":7.9609375,"distances_sum":1245.418645743569}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9339457417582422,"seconds":9.967014193534851e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.8046875,"distances_sum":1905.0826433903396}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8736548174048181,"seconds":9.67457890510559e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.3359375,"distances_sum":1649.056610652023}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9339457417582422,"seconds":9.967014193534851e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.8046875,"distances_sum":1905.0826433903396}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9646806318681322,"seconds":8.273869752883911e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.90625,"distances_sum":2101.5526298234963}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9501035422910427,"seconds":1.0104849934577942e-5,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.8359375,"distances_sum":2015.8948959022675}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9410631035631041,"seconds":9.860843420028687e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.7265625,"distances_sum":1993.8893277984655}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9442765567765574,"seconds":1.0123476386070251e-5,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.828125,"distances_sum":1959.547363933348}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9543243215118219,"seconds":1.0749325156211853e-5,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.875,"distances_sum":2048.2989291740973}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9646806318681322,"seconds":8.273869752883911e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.90625,"distances_sum":2101.5526298234963}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9646806318681322,"seconds":8.273869752883911e-6,"exhaustive_search_seconds":2.3134052753448486e-6,"evaluations":8.90625,"distances_sum":2101.5526298234963}}, n: 9
inertia(cfft.distances) = 18.764855472013362
inertia(cdnet.distances) = 22.286383440617445
inertia(crand.distances) = 20.495409238442853
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9111111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9044444444444445
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9177777777777778
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9266666666666666
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8755555555555556
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9133333333333332
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9311111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9044444444444443
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9133333333333334
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 3, 2, 3, 3, 1, 2, 3, 3, 3, 3, 2, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.4479333394980455] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4479333394980455, 0.17906823584023218] ***
*** starting iteration: 2; err: [Inf, 0.4479333394980455, 0.17906823584023218] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4479333394980455, 0.17906823584023218, 0.16949548907648418] ***
*** starting iteration: 3; err: [Inf, 0.4479333394980455, 0.17906823584023218, 0.16949548907648418] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4479333394980455, 0.17906823584023218, 0.16949548907648418, 0.16777563159510106] ***
*** starting iteration: 4; err: [Inf, 0.4479333394980455, 0.17906823584023218, 0.16949548907648418, 0.16777563159510106] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4479333394980455, 0.17906823584023218, 0.16949548907648418, 0.16777563159510106, 0.16666286580885203] ***
*** starting iteration: 5; err: [Inf, 0.4479333394980455, 0.17906823584023218, 0.16949548907648418, 0.16777563159510106, 0.16666286580885203] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4479333394980455, 0.17906823584023218, 0.16949548907648418, 0.16777563159510106, 0.16666286580885203, 0.165160897120929] ***
*** starting iteration: 6; err: [Inf, 0.4479333394980455, 0.17906823584023218, 0.16949548907648418, 0.16777563159510106, 0.16666286580885203, 0.165160897120929] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4479333394980455, 0.17906823584023218, 0.16949548907648418, 0.16777563159510106, 0.16666286580885203, 0.165160897120929, 0.1650373407734177] ***
*** finished computation of 12 references, err: [Inf, 0.4479333394980455, 0.17906823584023218, 0.16949548907648418, 0.16777563159510106, 0.16666286580885203, 0.165160897120929, 0.1650373407734177] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 10, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9866666666666667
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.28510298232938536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28510298232938536, 0.19725974452513803] ***
*** starting iteration: 2; err: [Inf, 0.28510298232938536, 0.19725974452513803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28510298232938536, 0.19725974452513803, 0.16762682088651498] ***
*** starting iteration: 3; err: [Inf, 0.28510298232938536, 0.19725974452513803, 0.16762682088651498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28510298232938536, 0.19725974452513803, 0.16762682088651498, 0.16248298617762685] ***
*** finished computation of 7 references, err: [Inf, 0.28510298232938536, 0.19725974452513803, 0.16762682088651498, 0.16248298617762685] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 12, 4]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 12), (3, 4)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5964000015387652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5964000015387652, 0.22929321622134727] ***
*** starting iteration: 2; err: [Inf, 0.5964000015387652, 0.22929321622134727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5964000015387652, 0.22929321622134727, 0.2208339739648949] ***
*** starting iteration: 3; err: [Inf, 0.5964000015387652, 0.22929321622134727, 0.2208339739648949] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5964000015387652, 0.22929321622134727, 0.2208339739648949, 0.21840908434008285] ***
*** starting iteration: 4; err: [Inf, 0.5964000015387652, 0.22929321622134727, 0.2208339739648949, 0.21840908434008285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5964000015387652, 0.22929321622134727, 0.2208339739648949, 0.21840908434008285, 0.2175040908085388] ***
*** finished computation of 7 references, err: [Inf, 0.5964000015387652, 0.22929321622134727, 0.2208339739648949, 0.21840908434008285, 0.2175040908085388] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 11]]
** centroid: 1, normalized-entropy: 0.8960382325345574, [(2, 5), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4581000054328889] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4581000054328889, 0.252203976885715] ***
*** starting iteration: 2; err: [Inf, 0.4581000054328889, 0.252203976885715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4581000054328889, 0.252203976885715, 0.2461089345832583] ***
*** starting iteration: 3; err: [Inf, 0.4581000054328889, 0.252203976885715, 0.2461089345832583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4581000054328889, 0.252203976885715, 0.2461089345832583, 0.2413116180716179] ***
*** starting iteration: 4; err: [Inf, 0.4581000054328889, 0.252203976885715, 0.2461089345832583, 0.2413116180716179] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4581000054328889, 0.252203976885715, 0.2461089345832583, 0.2413116180716179, 0.24044122633804182] ***
*** finished computation of 7 references, err: [Inf, 0.4581000054328889, 0.252203976885715, 0.2461089345832583, 0.2413116180716179, 0.24044122633804182] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 18, 8]]
** centroid: 7, normalized-entropy: 0.8904916402194913, [(2, 18), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5175000073935891] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5175000073935891, 0.2824817427893807] ***
*** starting iteration: 2; err: [Inf, 0.5175000073935891, 0.2824817427893807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5175000073935891, 0.2824817427893807, 0.2591437185244854] ***
*** starting iteration: 3; err: [Inf, 0.5175000073935891, 0.2824817427893807, 0.2591437185244854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5175000073935891, 0.2824817427893807, 0.2591437185244854, 0.258421496655583] ***
*** finished computation of 7 references, err: [Inf, 0.5175000073935891, 0.2824817427893807, 0.2591437185244854, 0.258421496655583] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 18, 3]]
** centroid: 6, normalized-entropy: 0.5916727785823274, [(2, 18), (3, 3)]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6434000080661642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6434000080661642, 0.2822086580316803] ***
*** starting iteration: 2; err: [Inf, 0.6434000080661642, 0.2822086580316803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6434000080661642, 0.2822086580316803, 0.2469712366587618] ***
*** starting iteration: 3; err: [Inf, 0.6434000080661642, 0.2822086580316803, 0.2469712366587618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6434000080661642, 0.2822086580316803, 0.2469712366587618, 0.24249690586073389] ***
*** finished computation of 7 references, err: [Inf, 0.6434000080661642, 0.2822086580316803, 0.2469712366587618, 0.24249690586073389] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 12]]
** centroid: 1, normalized-entropy: 1.0, [(2, 12), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6146000026778871] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6146000026778871, 0.23661018342905152] ***
*** starting iteration: 2; err: [Inf, 0.6146000026778871, 0.23661018342905152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6146000026778871, 0.23661018342905152, 0.22278273637857404] ***
*** starting iteration: 3; err: [Inf, 0.6146000026778871, 0.23661018342905152, 0.22278273637857404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6146000026778871, 0.23661018342905152, 0.22278273637857404, 0.2216879612792934] ***
*** finished computation of 7 references, err: [Inf, 0.6146000026778871, 0.23661018342905152, 0.22278273637857404, 0.2216879612792934] ***
*** center 1: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 8]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5355000012150056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5355000012150056, 0.29299558442852314] ***
*** starting iteration: 2; err: [Inf, 0.5355000012150056, 0.29299558442852314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5355000012150056, 0.29299558442852314, 0.2748335793528536] ***
*** starting iteration: 3; err: [Inf, 0.5355000012150056, 0.29299558442852314, 0.2748335793528536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5355000012150056, 0.29299558442852314, 0.2748335793528536, 0.26919499087786014] ***
*** finished computation of 7 references, err: [Inf, 0.5355000012150056, 0.29299558442852314, 0.2748335793528536, 0.26919499087786014] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 17]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(2, 3), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 23, 4]]
** centroid: 5, normalized-entropy: 0.6051865766334207, [(2, 23), (3, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1105000009421666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1105000009421666, 0.5951196195867632] ***
*** starting iteration: 2; err: [Inf, 1.1105000009421666, 0.5951196195867632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1105000009421666, 0.5951196195867632, 0.5729770486015596] ***
*** starting iteration: 3; err: [Inf, 1.1105000009421666, 0.5951196195867632, 0.5729770486015596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1105000009421666, 0.5951196195867632, 0.5729770486015596, 0.5636068364051069] ***
*** finished computation of 3 references, err: [Inf, 1.1105000009421666, 0.5951196195867632, 0.5729770486015596, 0.5636068364051069] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 27]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 11]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3765961793848984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3765961793848984, 0.21396030671232796] ***
*** starting iteration: 2; err: [Inf, 0.3765961793848984, 0.21396030671232796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3765961793848984, 0.21396030671232796, 0.20292417410015315] ***
*** starting iteration: 3; err: [Inf, 0.3765961793848984, 0.21396030671232796, 0.20292417410015315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3765961793848984, 0.21396030671232796, 0.20292417410015315, 0.19825420257596138] ***
*** finished computation of 7 references, err: [Inf, 0.3765961793848984, 0.21396030671232796, 0.20292417410015315, 0.19825420257596138] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 6, 2]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 6), (3, 2)]
*** center 5: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 17]]
** centroid: 6, normalized-entropy: 0.6098403047164005, [(2, 3), (3, 17)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49031266395199424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49031266395199424, 0.23397396733993642] ***
*** starting iteration: 2; err: [Inf, 0.49031266395199424, 0.23397396733993642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49031266395199424, 0.23397396733993642, 0.20707040882220284] ***
*** starting iteration: 3; err: [Inf, 0.49031266395199424, 0.23397396733993642, 0.20707040882220284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49031266395199424, 0.23397396733993642, 0.20707040882220284, 0.20640947008263488] ***
*** finished computation of 7 references, err: [Inf, 0.49031266395199424, 0.23397396733993642, 0.20707040882220284, 0.20640947008263488] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 19, 10]]
** centroid: 5, normalized-entropy: 0.9293636260137188, [(2, 19), (3, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4545035825131851] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4545035825131851, 0.27369015158146737] ***
*** finished computation of 7 references, err: [Inf, 0.4545035825131851, 0.27369015158146737] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 7]]
** centroid: 1, normalized-entropy: 0.7455178428108284, [(2, 26), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 17]]
** centroid: 6, normalized-entropy: 0.6098403047164005, [(2, 3), (3, 17)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4365096121022964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4365096121022964, 0.23088311686988322] ***
*** finished computation of 7 references, err: [Inf, 0.4365096121022964, 0.23088311686988322] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 24, 2]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 24), (3, 2)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 7, 12]]
** centroid: 4, normalized-entropy: 0.9494520153879484, [(2, 7), (3, 12)]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43264041480352333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43264041480352333, 0.2402702629571882] ***
*** finished computation of 7 references, err: [Inf, 0.43264041480352333, 0.2402702629571882] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 25, 8]]
** centroid: 2, normalized-entropy: 0.7990485210442682, [(2, 25), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.062797674374561] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.062797674374561, 0.8483305292557227] ***
*** finished computation of 3 references, err: [Inf, 4.062797674374561, 0.8483305292557227] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 28]]
** centroid: 1, normalized-entropy: 0.6136190195993708, [(2, 5), (3, 28)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 4, 0]]
** centroid: 2, normalized-entropy: 0.4941829348497886, [(1, 33), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 20, 10]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 20), (3, 10)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.89897231688793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.89897231688793, 0.4228819223203847] ***
*** finished computation of 3 references, err: [Inf, 0.89897231688793, 0.4228819223203847] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 17, 33]]
** centroid: 2, normalized-entropy: 0.9248187049730301, [(2, 17), (3, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.59195187388233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.59195187388233, 0.3791451168092786] ***
*** finished computation of 3 references, err: [Inf, 0.59195187388233, 0.3791451168092786] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 39, 9]]
** centroid: 3, normalized-entropy: 0.6962122601251459, [(2, 39), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9181551364034597] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9181551364034597, 0.42013742125180287] ***
*** finished computation of 3 references, err: [Inf, 0.9181551364034597, 0.42013742125180287] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 37]]
** centroid: 2, normalized-entropy: 0.6751914401458716, [(2, 8), (3, 37)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 3, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.0710769079719347] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0710769079719347, 0.3932931365269398] ***
*** finished computation of 3 references, err: [Inf, 2.0710769079719347, 0.3932931365269398] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 2, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 33]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 9), (3, 33)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8837124946196262] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8837124946196262, 0.6482303894266214] ***
*** finished computation of 3 references, err: [Inf, 0.8837124946196262, 0.6482303894266214] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 28]]
** centroid: 1, normalized-entropy: 0.9833761901392238, [(2, 38), (3, 28)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [28, 1, 0]]
** centroid: 2, normalized-entropy: 0.21639693245126485, [(1, 28), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.8384600245518135] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8384600245518135, 1.135670767947545] ***
*** starting iteration: 2; err: [Inf, 2.8384600245518135, 1.135670767947545] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884] ***
*** starting iteration: 3; err: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884, 0.481512345279819] ***
*** starting iteration: 4; err: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884, 0.481512345279819] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884, 0.481512345279819, 0.43334241863322787] ***
*** starting iteration: 5; err: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884, 0.481512345279819, 0.43334241863322787] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884, 0.481512345279819, 0.43334241863322787, 0.41232547603339353] ***
*** starting iteration: 6; err: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884, 0.481512345279819, 0.43334241863322787, 0.41232547603339353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884, 0.481512345279819, 0.43334241863322787, 0.41232547603339353, 0.40293142285301203] ***
*** starting iteration: 7; err: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884, 0.481512345279819, 0.43334241863322787, 0.41232547603339353, 0.40293142285301203] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884, 0.481512345279819, 0.43334241863322787, 0.41232547603339353, 0.40293142285301203, 0.39732866440768155] ***
*** starting iteration: 8; err: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884, 0.481512345279819, 0.43334241863322787, 0.41232547603339353, 0.40293142285301203, 0.39732866440768155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884, 0.481512345279819, 0.43334241863322787, 0.41232547603339353, 0.40293142285301203, 0.39732866440768155, 0.3932958274874332] ***
*** starting iteration: 9; err: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884, 0.481512345279819, 0.43334241863322787, 0.41232547603339353, 0.40293142285301203, 0.39732866440768155, 0.3932958274874332] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884, 0.481512345279819, 0.43334241863322787, 0.41232547603339353, 0.40293142285301203, 0.39732866440768155, 0.3932958274874332, 0.39323531195943956] ***
*** finished computation of 3 references, err: [Inf, 2.8384600245518135, 1.135670767947545, 0.6443418467063884, 0.481512345279819, 0.43334241863322787, 0.41232547603339353, 0.40293142285301203, 0.39732866440768155, 0.3932958274874332, 0.39323531195943956] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 10]]
** centroid: 2, normalized-entropy: 0.8314743880097292, [(2, 28), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 28]]
** centroid: 3, normalized-entropy: 0.21639693245126485, [(2, 1), (3, 28)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8961278354146991] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8961278354146991, 0.5774243150292375] ***
*** starting iteration: 2; err: [Inf, 0.8961278354146991, 0.5774243150292375] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8961278354146991, 0.5774243150292375, 0.574905908970713] ***
*** starting iteration: 3; err: [Inf, 0.8961278354146991, 0.5774243150292375, 0.574905908970713] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8961278354146991, 0.5774243150292375, 0.574905908970713, 0.574905908970713] ***
*** finished computation of 3 references, err: [Inf, 0.8961278354146991, 0.5774243150292375, 0.574905908970713, 0.574905908970713] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [14, 2, 0]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(1, 14), (2, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 34]]
** centroid: 3, normalized-entropy: 0.9971803988942641, [(2, 30), (3, 34)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.52047545195217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.52047545195217, 0.8336715742706073] ***
*** starting iteration: 2; err: [Inf, 7.52047545195217, 0.8336715742706073] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.52047545195217, 0.8336715742706073, 0.6283002714254607] ***
*** starting iteration: 3; err: [Inf, 7.52047545195217, 0.8336715742706073, 0.6283002714254607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.52047545195217, 0.8336715742706073, 0.6283002714254607, 0.6254410394397989] ***
*** starting iteration: 4; err: [Inf, 7.52047545195217, 0.8336715742706073, 0.6283002714254607, 0.6254410394397989] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.52047545195217, 0.8336715742706073, 0.6283002714254607, 0.6254410394397989, 0.6253022126446177] ***
*** finished computation of 3 references, err: [Inf, 7.52047545195217, 0.8336715742706073, 0.6283002714254607, 0.6254410394397989, 0.6253022126446177] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 38, 28]]
** centroid: 2, normalized-entropy: 0.9833761901392238, [(2, 38), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [21, 1, 0]]
** centroid: 3, normalized-entropy: 0.2667649878030262, [(1, 21), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.690199964465202] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.690199964465202, 1.326110221975307] ***
*** finished computation of 3 references, err: [Inf, 6.690199964465202, 1.326110221975307] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [33, 7, 0]]
** centroid: 1, normalized-entropy: 0.6690158350565576, [(1, 33), (2, 7)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 22, 18]]
** centroid: 3, normalized-entropy: 0.9927744539878083, [(2, 22), (3, 18)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3049000112549196] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3049000112549196, 0.650324996897326] ***
*** finished computation of 3 references, err: [Inf, 1.3049000112549196, 0.650324996897326] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [34, 2, 0]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(1, 34), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 23]]
** centroid: 3, normalized-entropy: 0.987380023288353, [(2, 30), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.273700057097566] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.273700057097566, 1.788421885765423] ***
*** finished computation of 3 references, err: [Inf, 4.273700057097566, 1.788421885765423] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 20, 17]]
** centroid: 1, normalized-entropy: 0.9952525494396791, [(2, 20), (3, 17)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [33, 19, 1]]
** centroid: 3, normalized-entropy: 0.9470622432515328, [(1, 33), (2, 19)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.043599949583273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.043599949583273, 1.233833559418899] ***
*** starting iteration: 2; err: [Inf, 6.043599949583273, 1.233833559418899] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.043599949583273, 1.233833559418899, 0.30802994715909504] ***
*** starting iteration: 3; err: [Inf, 6.043599949583273, 1.233833559418899, 0.30802994715909504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.043599949583273, 1.233833559418899, 0.30802994715909504, 0.264863786703242] ***
*** finished computation of 7 references, err: [Inf, 6.043599949583273, 1.233833559418899, 0.30802994715909504, 0.264863786703242] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4647000052544172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4647000052544172, 0.30094967565393344] ***
*** starting iteration: 2; err: [Inf, 0.4647000052544172, 0.30094967565393344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4647000052544172, 0.30094967565393344, 0.28253709805117977] ***
*** starting iteration: 3; err: [Inf, 0.4647000052544172, 0.30094967565393344, 0.28253709805117977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4647000052544172, 0.30094967565393344, 0.28253709805117977, 0.2744168646891816] ***
*** finished computation of 7 references, err: [Inf, 0.4647000052544172, 0.30094967565393344, 0.28253709805117977, 0.2744168646891816] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 2, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 12]]
** centroid: 4, normalized-entropy: 0.3912435636292556, [(2, 1), (3, 12)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 3]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 15), (3, 3)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6666000019119345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6666000019119345, 0.30046685754098185] ***
*** starting iteration: 2; err: [Inf, 0.6666000019119345, 0.30046685754098185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6666000019119345, 0.30046685754098185, 0.280307113408815] ***
*** starting iteration: 3; err: [Inf, 0.6666000019119345, 0.30046685754098185, 0.280307113408815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6666000019119345, 0.30046685754098185, 0.280307113408815, 0.2747611088039627] ***
*** finished computation of 7 references, err: [Inf, 0.6666000019119345, 0.30046685754098185, 0.280307113408815, 0.2747611088039627] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 10]]
** centroid: 1, normalized-entropy: 0.9509560484549724, [(2, 17), (3, 10)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1877000020036235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1877000020036235, 0.5571896453545684] ***
*** starting iteration: 2; err: [Inf, 1.1877000020036235, 0.5571896453545684] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1877000020036235, 0.5571896453545684, 0.5049314761980822] ***
*** starting iteration: 3; err: [Inf, 1.1877000020036235, 0.5571896453545684, 0.5049314761980822] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1877000020036235, 0.5571896453545684, 0.5049314761980822, 0.48805729961035693] ***
*** finished computation of 3 references, err: [Inf, 1.1877000020036235, 0.5571896453545684, 0.5049314761980822, 0.48805729961035693] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0057999988113244] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0057999988113244, 0.5921570022568398] ***
*** starting iteration: 2; err: [Inf, 1.0057999988113244, 0.5921570022568398] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0057999988113244, 0.5921570022568398, 0.5343301445463128] ***
*** starting iteration: 3; err: [Inf, 1.0057999988113244, 0.5921570022568398, 0.5343301445463128] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0057999988113244, 0.5921570022568398, 0.5343301445463128, 0.5288266669057395] ***
*** finished computation of 3 references, err: [Inf, 1.0057999988113244, 0.5921570022568398, 0.5343301445463128, 0.5288266669057395] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 19]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(2, 1), (3, 19)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 38, 9]]
** centroid: 3, normalized-entropy: 0.7045767128725937, [(2, 38), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2195999993387086] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2195999993387086, 0.6612738646863927] ***
*** starting iteration: 2; err: [Inf, 1.2195999993387086, 0.6612738646863927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2195999993387086, 0.6612738646863927, 0.5951196195867632] ***
*** starting iteration: 3; err: [Inf, 1.2195999993387086, 0.6612738646863927, 0.5951196195867632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2195999993387086, 0.6612738646863927, 0.5951196195867632, 0.5729770486015596] ***
*** starting iteration: 4; err: [Inf, 1.2195999993387086, 0.6612738646863927, 0.5951196195867632, 0.5729770486015596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2195999993387086, 0.6612738646863927, 0.5951196195867632, 0.5729770486015596, 0.5636068364051069] ***
*** starting iteration: 5; err: [Inf, 1.2195999993387086, 0.6612738646863927, 0.5951196195867632, 0.5729770486015596, 0.5636068364051069] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2195999993387086, 0.6612738646863927, 0.5951196195867632, 0.5729770486015596, 0.5636068364051069, 0.5613936035031081] ***
*** starting iteration: 6; err: [Inf, 1.2195999993387086, 0.6612738646863927, 0.5951196195867632, 0.5729770486015596, 0.5636068364051069, 0.5613936035031081] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2195999993387086, 0.6612738646863927, 0.5951196195867632, 0.5729770486015596, 0.5636068364051069, 0.5613936035031081, 0.5603974004841088] ***
*** finished computation of 3 references, err: [Inf, 1.2195999993387086, 0.6612738646863927, 0.5951196195867632, 0.5729770486015596, 0.5636068364051069, 0.5613936035031081, 0.5603974004841088] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 11]]
** centroid: 1, normalized-entropy: 0.8680403986166402, [(2, 27), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3153999882707736] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3153999882707736, 0.5287101824427048] ***
*** starting iteration: 2; err: [Inf, 1.3153999882707736, 0.5287101824427048] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3153999882707736, 0.5287101824427048, 0.4900305007318751] ***
*** starting iteration: 3; err: [Inf, 1.3153999882707736, 0.5287101824427048, 0.4900305007318751] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3153999882707736, 0.5287101824427048, 0.4900305007318751, 0.4854501945273222] ***
*** starting iteration: 4; err: [Inf, 1.3153999882707736, 0.5287101824427048, 0.4900305007318751, 0.4854501945273222] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3153999882707736, 0.5287101824427048, 0.4900305007318751, 0.4854501945273222, 0.4849093436041592] ***
*** finished computation of 3 references, err: [Inf, 1.3153999882707736, 0.5287101824427048, 0.4900305007318751, 0.4854501945273222, 0.4849093436041592] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 10]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4524999897451591] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4524999897451591, 0.5495325837299866] ***
*** starting iteration: 2; err: [Inf, 1.4524999897451591, 0.5495325837299866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4524999897451591, 0.5495325837299866, 0.5296924767304922] ***
*** starting iteration: 3; err: [Inf, 1.4524999897451591, 0.5495325837299866, 0.5296924767304922] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4524999897451591, 0.5495325837299866, 0.5296924767304922, 0.5288266669057395] ***
*** finished computation of 3 references, err: [Inf, 1.4524999897451591, 0.5495325837299866, 0.5296924767304922, 0.5288266669057395] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 38, 9]]
** centroid: 3, normalized-entropy: 0.7045767128725937, [(2, 38), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3382000004902863] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3382000004902863, 0.5951196195867632] ***
*** starting iteration: 2; err: [Inf, 1.3382000004902863, 0.5951196195867632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3382000004902863, 0.5951196195867632, 0.5729770486015596] ***
*** starting iteration: 3; err: [Inf, 1.3382000004902863, 0.5951196195867632, 0.5729770486015596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3382000004902863, 0.5951196195867632, 0.5729770486015596, 0.5636068364051069] ***
*** starting iteration: 4; err: [Inf, 1.3382000004902863, 0.5951196195867632, 0.5729770486015596, 0.5636068364051069] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3382000004902863, 0.5951196195867632, 0.5729770486015596, 0.5636068364051069, 0.5613936035031081] ***
*** starting iteration: 5; err: [Inf, 1.3382000004902863, 0.5951196195867632, 0.5729770486015596, 0.5636068364051069, 0.5613936035031081] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3382000004902863, 0.5951196195867632, 0.5729770486015596, 0.5636068364051069, 0.5613936035031081, 0.5603974004841088] ***
*** finished computation of 3 references, err: [Inf, 1.3382000004902863, 0.5951196195867632, 0.5729770486015596, 0.5636068364051069, 0.5613936035031081, 0.5603974004841088] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 11]]
** centroid: 1, normalized-entropy: 0.8680403986166402, [(2, 27), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1333000126482038] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1333000126482038, 0.5477542866261372] ***
*** starting iteration: 2; err: [Inf, 1.1333000126482038, 0.5477542866261372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528] ***
*** starting iteration: 3; err: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625] ***
*** starting iteration: 4; err: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625, 0.5036990270933684] ***
*** starting iteration: 5; err: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625, 0.5036990270933684] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625, 0.5036990270933684, 0.5024575992498951] ***
*** starting iteration: 6; err: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625, 0.5036990270933684, 0.5024575992498951] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625, 0.5036990270933684, 0.5024575992498951, 0.500035992866067] ***
*** starting iteration: 7; err: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625, 0.5036990270933684, 0.5024575992498951, 0.500035992866067] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625, 0.5036990270933684, 0.5024575992498951, 0.500035992866067, 0.4978731777773404] ***
*** starting iteration: 8; err: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625, 0.5036990270933684, 0.5024575992498951, 0.500035992866067, 0.4978731777773404] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625, 0.5036990270933684, 0.5024575992498951, 0.500035992866067, 0.4978731777773404, 0.49401401223565516] ***
*** starting iteration: 9; err: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625, 0.5036990270933684, 0.5024575992498951, 0.500035992866067, 0.4978731777773404, 0.49401401223565516] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625, 0.5036990270933684, 0.5024575992498951, 0.500035992866067, 0.4978731777773404, 0.49401401223565516, 0.4882404380841042] ***
*** starting iteration: 10; err: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625, 0.5036990270933684, 0.5024575992498951, 0.500035992866067, 0.4978731777773404, 0.49401401223565516, 0.4882404380841042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625, 0.5036990270933684, 0.5024575992498951, 0.500035992866067, 0.4978731777773404, 0.49401401223565516, 0.4882404380841042, 0.4858059037360757] ***
*** finished computation of 3 references, err: [Inf, 1.1333000126482038, 0.5477542866261372, 0.5126553652521528, 0.5061302990791625, 0.5036990270933684, 0.5024575992498951, 0.500035992866067, 0.4978731777773404, 0.49401401223565516, 0.4882404380841042, 0.4858059037360757] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 9]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.117599998567672] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.117599998567672, 0.6421906689918764] ***
*** starting iteration: 2; err: [Inf, 1.117599998567672, 0.6421906689918764] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.117599998567672, 0.6421906689918764, 0.5664587230160302] ***
*** starting iteration: 3; err: [Inf, 1.117599998567672, 0.6421906689918764, 0.5664587230160302] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.117599998567672, 0.6421906689918764, 0.5664587230160302, 0.5343301445463128] ***
*** starting iteration: 4; err: [Inf, 1.117599998567672, 0.6421906689918764, 0.5664587230160302, 0.5343301445463128] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.117599998567672, 0.6421906689918764, 0.5664587230160302, 0.5343301445463128, 0.5288266669057395] ***
*** starting iteration: 5; err: [Inf, 1.117599998567672, 0.6421906689918764, 0.5664587230160302, 0.5343301445463128, 0.5288266669057395] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.117599998567672, 0.6421906689918764, 0.5664587230160302, 0.5343301445463128, 0.5288266669057395, 0.5288266669057395] ***
*** finished computation of 3 references, err: [Inf, 1.117599998567672, 0.6421906689918764, 0.5664587230160302, 0.5343301445463128, 0.5288266669057395, 0.5288266669057395] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 9]]
** centroid: 1, normalized-entropy: 0.7045767128725937, [(2, 38), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 19]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(2, 1), (3, 19)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9347863967448465] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9347863967448465, 0.41232547603339353] ***
*** starting iteration: 2; err: [Inf, 0.9347863967448465, 0.41232547603339353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9347863967448465, 0.41232547603339353, 0.40293142285301203] ***
*** starting iteration: 3; err: [Inf, 0.9347863967448465, 0.41232547603339353, 0.40293142285301203] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9347863967448465, 0.41232547603339353, 0.40293142285301203, 0.39732866440768155] ***
*** starting iteration: 4; err: [Inf, 0.9347863967448465, 0.41232547603339353, 0.40293142285301203, 0.39732866440768155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9347863967448465, 0.41232547603339353, 0.40293142285301203, 0.39732866440768155, 0.3932958274874332] ***
*** starting iteration: 5; err: [Inf, 0.9347863967448465, 0.41232547603339353, 0.40293142285301203, 0.39732866440768155, 0.3932958274874332] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9347863967448465, 0.41232547603339353, 0.40293142285301203, 0.39732866440768155, 0.3932958274874332, 0.39323531195943956] ***
*** finished computation of 3 references, err: [Inf, 0.9347863967448465, 0.41232547603339353, 0.40293142285301203, 0.39732866440768155, 0.3932958274874332, 0.39323531195943956] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 10]]
** centroid: 1, normalized-entropy: 0.8314743880097292, [(2, 28), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 28]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7840730394946184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7840730394946184, 0.3907368348690213] ***
*** starting iteration: 2; err: [Inf, 0.7840730394946184, 0.3907368348690213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7840730394946184, 0.3907368348690213, 0.3584205410115797] ***
*** starting iteration: 3; err: [Inf, 0.7840730394946184, 0.3907368348690213, 0.3584205410115797] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7840730394946184, 0.3907368348690213, 0.3584205410115797, 0.3454432875566416] ***
*** starting iteration: 4; err: [Inf, 0.7840730394946184, 0.3907368348690213, 0.3584205410115797, 0.3454432875566416] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7840730394946184, 0.3907368348690213, 0.3584205410115797, 0.3454432875566416, 0.342499373743042] ***
*** starting iteration: 5; err: [Inf, 0.7840730394946184, 0.3907368348690213, 0.3584205410115797, 0.3454432875566416, 0.342499373743042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7840730394946184, 0.3907368348690213, 0.3584205410115797, 0.3454432875566416, 0.342499373743042, 0.3403755005204857] ***
*** starting iteration: 6; err: [Inf, 0.7840730394946184, 0.3907368348690213, 0.3584205410115797, 0.3454432875566416, 0.342499373743042, 0.3403755005204857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7840730394946184, 0.3907368348690213, 0.3584205410115797, 0.3454432875566416, 0.342499373743042, 0.3403755005204857, 0.33923493525137005] ***
*** starting iteration: 7; err: [Inf, 0.7840730394946184, 0.3907368348690213, 0.3584205410115797, 0.3454432875566416, 0.342499373743042, 0.3403755005204857, 0.33923493525137005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7840730394946184, 0.3907368348690213, 0.3584205410115797, 0.3454432875566416, 0.342499373743042, 0.3403755005204857, 0.33923493525137005, 0.33923493525137005] ***
*** finished computation of 3 references, err: [Inf, 0.7840730394946184, 0.3907368348690213, 0.3584205410115797, 0.3454432875566416, 0.342499373743042, 0.3403755005204857, 0.33923493525137005, 0.33923493525137005] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1251586073741793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1251586073741793, 0.3772351495203671] ***
*** starting iteration: 2; err: [Inf, 1.1251586073741793, 0.3772351495203671] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1251586073741793, 0.3772351495203671, 0.37017077741823257] ***
*** starting iteration: 3; err: [Inf, 1.1251586073741793, 0.3772351495203671, 0.37017077741823257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1251586073741793, 0.3772351495203671, 0.37017077741823257, 0.37017077741823257] ***
*** finished computation of 3 references, err: [Inf, 1.1251586073741793, 0.3772351495203671, 0.37017077741823257, 0.37017077741823257] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 38, 9]]
** centroid: 3, normalized-entropy: 0.7045767128725937, [(2, 38), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8385540314945682] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8385540314945682, 0.45025597262296585] ***
*** starting iteration: 2; err: [Inf, 0.8385540314945682, 0.45025597262296585] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8385540314945682, 0.45025597262296585, 0.41433898324597473] ***
*** starting iteration: 3; err: [Inf, 0.8385540314945682, 0.45025597262296585, 0.41433898324597473] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8385540314945682, 0.45025597262296585, 0.41433898324597473, 0.40293142285301203] ***
*** starting iteration: 4; err: [Inf, 0.8385540314945682, 0.45025597262296585, 0.41433898324597473, 0.40293142285301203] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8385540314945682, 0.45025597262296585, 0.41433898324597473, 0.40293142285301203, 0.39732866440768155] ***
*** starting iteration: 5; err: [Inf, 0.8385540314945682, 0.45025597262296585, 0.41433898324597473, 0.40293142285301203, 0.39732866440768155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8385540314945682, 0.45025597262296585, 0.41433898324597473, 0.40293142285301203, 0.39732866440768155, 0.3932958274874332] ***
*** starting iteration: 6; err: [Inf, 0.8385540314945682, 0.45025597262296585, 0.41433898324597473, 0.40293142285301203, 0.39732866440768155, 0.3932958274874332] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8385540314945682, 0.45025597262296585, 0.41433898324597473, 0.40293142285301203, 0.39732866440768155, 0.3932958274874332, 0.39323531195943956] ***
*** finished computation of 3 references, err: [Inf, 0.8385540314945682, 0.45025597262296585, 0.41433898324597473, 0.40293142285301203, 0.39732866440768155, 0.3932958274874332, 0.39323531195943956] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 10]]
** centroid: 1, normalized-entropy: 0.8314743880097292, [(2, 28), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 28]]
** centroid: 3, normalized-entropy: 0.21639693245126485, [(2, 1), (3, 28)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7847026536368071] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7847026536368071, 0.3381863744368192] ***
*** starting iteration: 2; err: [Inf, 0.7847026536368071, 0.3381863744368192] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7847026536368071, 0.3381863744368192, 0.33818083150943734] ***
*** finished computation of 3 references, err: [Inf, 0.7847026536368071, 0.3381863744368192, 0.33818083150943734] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 7]]
** centroid: 3, normalized-entropy: 0.699772221773307, [(2, 30), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0706992606710752] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0706992606710752, 0.3772351495203671] ***
*** starting iteration: 2; err: [Inf, 1.0706992606710752, 0.3772351495203671] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0706992606710752, 0.3772351495203671, 0.37017077741823257] ***
*** starting iteration: 3; err: [Inf, 1.0706992606710752, 0.3772351495203671, 0.37017077741823257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0706992606710752, 0.3772351495203671, 0.37017077741823257, 0.37017077741823257] ***
*** finished computation of 3 references, err: [Inf, 1.0706992606710752, 0.3772351495203671, 0.37017077741823257, 0.37017077741823257] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 19]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(2, 1), (3, 19)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 38, 9]]
** centroid: 3, normalized-entropy: 0.7045767128725937, [(2, 38), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8572389886302828] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8572389886302828, 0.42013742125180287] ***
*** starting iteration: 2; err: [Inf, 0.8572389886302828, 0.42013742125180287] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8572389886302828, 0.42013742125180287, 0.41517583661684915] ***
*** starting iteration: 3; err: [Inf, 0.8572389886302828, 0.42013742125180287, 0.41517583661684915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8572389886302828, 0.42013742125180287, 0.41517583661684915, 0.40690621803143384] ***
*** starting iteration: 4; err: [Inf, 0.8572389886302828, 0.42013742125180287, 0.41517583661684915, 0.40690621803143384] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8572389886302828, 0.42013742125180287, 0.41517583661684915, 0.40690621803143384, 0.3968233488698017] ***
*** starting iteration: 5; err: [Inf, 0.8572389886302828, 0.42013742125180287, 0.41517583661684915, 0.40690621803143384, 0.3968233488698017] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8572389886302828, 0.42013742125180287, 0.41517583661684915, 0.40690621803143384, 0.3968233488698017, 0.3925893978432014] ***
*** starting iteration: 6; err: [Inf, 0.8572389886302828, 0.42013742125180287, 0.41517583661684915, 0.40690621803143384, 0.3968233488698017, 0.3925893978432014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8572389886302828, 0.42013742125180287, 0.41517583661684915, 0.40690621803143384, 0.3968233488698017, 0.3925893978432014, 0.39235235757793563] ***
*** finished computation of 3 references, err: [Inf, 0.8572389886302828, 0.42013742125180287, 0.41517583661684915, 0.40690621803143384, 0.3968233488698017, 0.3925893978432014, 0.39235235757793563] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 29]]
** centroid: 1, normalized-entropy: 0.5328350630342235, [(2, 4), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 25, 9]]
** centroid: 3, normalized-entropy: 0.8337649072106652, [(2, 25), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6305682270365991] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6305682270365991, 0.39743326706575177] ***
*** starting iteration: 2; err: [Inf, 0.6305682270365991, 0.39743326706575177] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6305682270365991, 0.39743326706575177, 0.36232658355939223] ***
*** starting iteration: 3; err: [Inf, 0.6305682270365991, 0.39743326706575177, 0.36232658355939223] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6305682270365991, 0.39743326706575177, 0.36232658355939223, 0.3454432875566416] ***
*** starting iteration: 4; err: [Inf, 0.6305682270365991, 0.39743326706575177, 0.36232658355939223, 0.3454432875566416] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6305682270365991, 0.39743326706575177, 0.36232658355939223, 0.3454432875566416, 0.342499373743042] ***
*** starting iteration: 5; err: [Inf, 0.6305682270365991, 0.39743326706575177, 0.36232658355939223, 0.3454432875566416, 0.342499373743042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6305682270365991, 0.39743326706575177, 0.36232658355939223, 0.3454432875566416, 0.342499373743042, 0.3403755005204857] ***
*** starting iteration: 6; err: [Inf, 0.6305682270365991, 0.39743326706575177, 0.36232658355939223, 0.3454432875566416, 0.342499373743042, 0.3403755005204857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6305682270365991, 0.39743326706575177, 0.36232658355939223, 0.3454432875566416, 0.342499373743042, 0.3403755005204857, 0.33923493525137005] ***
*** starting iteration: 7; err: [Inf, 0.6305682270365991, 0.39743326706575177, 0.36232658355939223, 0.3454432875566416, 0.342499373743042, 0.3403755005204857, 0.33923493525137005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6305682270365991, 0.39743326706575177, 0.36232658355939223, 0.3454432875566416, 0.342499373743042, 0.3403755005204857, 0.33923493525137005, 0.33923493525137005] ***
*** finished computation of 3 references, err: [Inf, 0.6305682270365991, 0.39743326706575177, 0.36232658355939223, 0.3454432875566416, 0.342499373743042, 0.3403755005204857, 0.33923493525137005, 0.33923493525137005] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6654615528191798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6654615528191798, 0.4237156530936532] ***
*** starting iteration: 2; err: [Inf, 0.6654615528191798, 0.4237156530936532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6654615528191798, 0.4237156530936532, 0.39325354974306337] ***
*** starting iteration: 3; err: [Inf, 0.6654615528191798, 0.4237156530936532, 0.39325354974306337] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6654615528191798, 0.4237156530936532, 0.39325354974306337, 0.38624069065193795] ***
*** starting iteration: 4; err: [Inf, 0.6654615528191798, 0.4237156530936532, 0.39325354974306337, 0.38624069065193795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6654615528191798, 0.4237156530936532, 0.39325354974306337, 0.38624069065193795, 0.384931727004062] ***
*** starting iteration: 5; err: [Inf, 0.6654615528191798, 0.4237156530936532, 0.39325354974306337, 0.38624069065193795, 0.384931727004062] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6654615528191798, 0.4237156530936532, 0.39325354974306337, 0.38624069065193795, 0.384931727004062, 0.38433907363462666] ***
*** finished computation of 3 references, err: [Inf, 0.6654615528191798, 0.4237156530936532, 0.39325354974306337, 0.38624069065193795, 0.384931727004062, 0.38433907363462666] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 27]]
** centroid: 1, normalized-entropy: 0.8904916402194913, [(2, 12), (3, 27)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 27, 1]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5421000054556967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5421000054556967, 0.2293782911281582] ***
*** finished computation of 7 references, err: [Inf, 0.5421000054556967, 0.2293782911281582] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 12]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 4), (3, 12)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5741000028945387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5741000028945387, 0.26961525536399417] ***
*** finished computation of 7 references, err: [Inf, 0.5741000028945387, 0.26961525536399417] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 1]]
** centroid: 3, normalized-entropy: 1.0, [(2, 1), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 8]]
** centroid: 4, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5955000019355815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5955000019355815, 0.26221271616586] ***
*** finished computation of 7 references, err: [Inf, 0.5955000019355815, 0.26221271616586] ***
*** center 1: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 4]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 10), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 7]]
** centroid: 4, normalized-entropy: 0.8708644692353648, [(2, 17), (3, 7)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.9733333333333333
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 1.4762379458984776] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4762379458984776, 0.46013897998589287] ***
*** finished computation of 3 references, err: [Inf, 1.4762379458984776, 0.46013897998589287] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 6, 38]]
** centroid: 2, normalized-entropy: 0.5746356978376794, [(2, 6), (3, 38)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.872296735971901] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.872296735971901, 0.5872178120990206] ***
*** finished computation of 3 references, err: [Inf, 3.872296735971901, 0.5872178120990206] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 9]]
** centroid: 1, normalized-entropy: 0.8003922080453356, [(2, 28), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [34, 2, 0]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(1, 34), (2, 2)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.5423753604711266] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5423753604711266, 1.7064798742433513] ***
*** finished computation of 3 references, err: [Inf, 3.5423753604711266, 1.7064798742433513] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 21]]
** centroid: 1, normalized-entropy: 0.9071657675730821, [(2, 10), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 29, 1]]
** centroid: 2, normalized-entropy: 0.9969954265557693, [(1, 33), (2, 29)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.9733333333333333
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.4040226329580032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4040226329580032, 0.19028754223757605] ***
*** starting iteration: 2; err: [Inf, 0.4040226329580032, 0.19028754223757605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4040226329580032, 0.19028754223757605, 0.1793503481361633] ***
*** starting iteration: 3; err: [Inf, 0.4040226329580032, 0.19028754223757605, 0.1793503481361633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4040226329580032, 0.19028754223757605, 0.1793503481361633, 0.1779799084367901] ***
*** finished computation of 7 references, err: [Inf, 0.4040226329580032, 0.19028754223757605, 0.1793503481361633, 0.1779799084367901] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 11, 5]]
** centroid: 7, normalized-entropy: 0.8960382325345574, [(2, 11), (3, 5)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3933620037733827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3933620037733827, 0.19077400998002744] ***
*** starting iteration: 2; err: [Inf, 0.3933620037733827, 0.19077400998002744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3933620037733827, 0.19077400998002744, 0.18266859243116002] ***
*** starting iteration: 3; err: [Inf, 0.3933620037733827, 0.19077400998002744, 0.18266859243116002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3933620037733827, 0.19077400998002744, 0.18266859243116002, 0.1747079056451841] ***
*** finished computation of 7 references, err: [Inf, 0.3933620037733827, 0.19077400998002744, 0.18266859243116002, 0.1747079056451841] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 14]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39420716879351475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39420716879351475, 0.21093002011217163] ***
*** starting iteration: 2; err: [Inf, 0.39420716879351475, 0.21093002011217163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39420716879351475, 0.21093002011217163, 0.19542824591557628] ***
*** starting iteration: 3; err: [Inf, 0.39420716879351475, 0.21093002011217163, 0.19542824591557628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39420716879351475, 0.21093002011217163, 0.19542824591557628, 0.1896534732426863] ***
*** finished computation of 7 references, err: [Inf, 0.39420716879351475, 0.21093002011217163, 0.19542824591557628, 0.1896534732426863] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 25, 7]]
** centroid: 1, normalized-entropy: 0.7578784625383954, [(2, 25), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 6, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.9733333333333333
finished with 18
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.9733333333333333
finished with 18
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.9733333333333333
finished with 18
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.9733333333333333
finished with 19
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.37626251260437393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37626251260437393, 0.18573319074084307] ***
*** starting iteration: 2; err: [Inf, 0.37626251260437393, 0.18573319074084307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37626251260437393, 0.18573319074084307, 0.1741033559067301] ***
*** starting iteration: 3; err: [Inf, 0.37626251260437393, 0.18573319074084307, 0.1741033559067301] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37626251260437393, 0.18573319074084307, 0.1741033559067301, 0.16694877995033391] ***
*** starting iteration: 4; err: [Inf, 0.37626251260437393, 0.18573319074084307, 0.1741033559067301, 0.16694877995033391] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37626251260437393, 0.18573319074084307, 0.1741033559067301, 0.16694877995033391, 0.15994116625556287] ***
*** starting iteration: 5; err: [Inf, 0.37626251260437393, 0.18573319074084307, 0.1741033559067301, 0.16694877995033391, 0.15994116625556287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37626251260437393, 0.18573319074084307, 0.1741033559067301, 0.16694877995033391, 0.15994116625556287, 0.15565066910430211] ***
*** starting iteration: 6; err: [Inf, 0.37626251260437393, 0.18573319074084307, 0.1741033559067301, 0.16694877995033391, 0.15994116625556287, 0.15565066910430211] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37626251260437393, 0.18573319074084307, 0.1741033559067301, 0.16694877995033391, 0.15994116625556287, 0.15565066910430211, 0.15142370979910225] ***
*** starting iteration: 7; err: [Inf, 0.37626251260437393, 0.18573319074084307, 0.1741033559067301, 0.16694877995033391, 0.15994116625556287, 0.15565066910430211, 0.15142370979910225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37626251260437393, 0.18573319074084307, 0.1741033559067301, 0.16694877995033391, 0.15994116625556287, 0.15565066910430211, 0.15142370979910225, 0.15121135294586263] ***
*** finished computation of 7 references, err: [Inf, 0.37626251260437393, 0.18573319074084307, 0.1741033559067301, 0.16694877995033391, 0.15994116625556287, 0.15565066910430211, 0.15142370979910225, 0.15121135294586263] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 11]]
** centroid: 3, normalized-entropy: 0.8960382325345574, [(2, 5), (3, 11)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3768735631946328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3768735631946328, 0.18956814325674157] ***
*** starting iteration: 2; err: [Inf, 0.3768735631946328, 0.18956814325674157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3768735631946328, 0.18956814325674157, 0.18670856282739962] ***
*** starting iteration: 3; err: [Inf, 0.3768735631946328, 0.18956814325674157, 0.18670856282739962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3768735631946328, 0.18956814325674157, 0.18670856282739962, 0.1831778496739213] ***
*** starting iteration: 4; err: [Inf, 0.3768735631946328, 0.18956814325674157, 0.18670856282739962, 0.1831778496739213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3768735631946328, 0.18956814325674157, 0.18670856282739962, 0.1831778496739213, 0.1795514680910953] ***
*** starting iteration: 5; err: [Inf, 0.3768735631946328, 0.18956814325674157, 0.18670856282739962, 0.1831778496739213, 0.1795514680910953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3768735631946328, 0.18956814325674157, 0.18670856282739962, 0.1831778496739213, 0.1795514680910953, 0.17849737934214807] ***
*** starting iteration: 6; err: [Inf, 0.3768735631946328, 0.18956814325674157, 0.18670856282739962, 0.1831778496739213, 0.1795514680910953, 0.17849737934214807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3768735631946328, 0.18956814325674157, 0.18670856282739962, 0.1831778496739213, 0.1795514680910953, 0.17849737934214807, 0.17772220902258226] ***
*** finished computation of 7 references, err: [Inf, 0.3768735631946328, 0.18956814325674157, 0.18670856282739962, 0.1831778496739213, 0.1795514680910953, 0.17849737934214807, 0.17772220902258226] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 22]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 8), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3987825114262849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3987825114262849, 0.21091225861305948] ***
*** starting iteration: 2; err: [Inf, 0.3987825114262849, 0.21091225861305948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3987825114262849, 0.21091225861305948, 0.19523082202946193] ***
*** starting iteration: 3; err: [Inf, 0.3987825114262849, 0.21091225861305948, 0.19523082202946193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3987825114262849, 0.21091225861305948, 0.19523082202946193, 0.18653069610248094] ***
*** starting iteration: 4; err: [Inf, 0.3987825114262849, 0.21091225861305948, 0.19523082202946193, 0.18653069610248094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3987825114262849, 0.21091225861305948, 0.19523082202946193, 0.18653069610248094, 0.18376416646661414] ***
*** starting iteration: 5; err: [Inf, 0.3987825114262849, 0.21091225861305948, 0.19523082202946193, 0.18653069610248094, 0.18376416646661414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3987825114262849, 0.21091225861305948, 0.19523082202946193, 0.18653069610248094, 0.18376416646661414, 0.18326922349125266] ***
*** finished computation of 7 references, err: [Inf, 0.3987825114262849, 0.21091225861305948, 0.19523082202946193, 0.18653069610248094, 0.18376416646661414, 0.18326922349125266] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 8]]
** centroid: 1, normalized-entropy: 0.8904916402194913, [(2, 18), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.9733333333333333
finished with 20
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.5700999980050605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5700999980050605, 0.3869072255195245] ***
*** finished computation of 7 references, err: [Inf, 0.5700999980050605, 0.3869072255195245] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 14]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(2, 4), (3, 14)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.527099998447647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.527099998447647, 0.3048001962915675] ***
*** finished computation of 7 references, err: [Inf, 0.527099998447647, 0.3048001962915675] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 6, 10]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(2, 6), (3, 10)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 6, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4426000056425745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4426000056425745, 0.27619589083808466] ***
*** finished computation of 7 references, err: [Inf, 0.4426000056425745, 0.27619589083808466] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.9733333333333333
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.533333333333334, 2.9250000000000003, 4.666666666666667, 1.4583333333333333], [5.991666666666667, 2.7416666666666667, 5.058333333333334, 1.8166666666666667], [4.7125, 3.0875, 1.45, 0.20625000000000007], [7.566666666666666, 2.8499999999999996, 6.449999999999999, 2.066666666666667], [5.5375000000000005, 2.6625, 3.91875, 1.2187500000000002], [5.2705882352941185, 3.6882352941176473, 1.5, 0.2705882352941177], [6.644444444444447, 3.1055555555555556, 5.5777777777777775, 2.1833333333333336], [7.800000000000001, 3.8, 6.550000000000001, 2.1]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 1, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.7956521739130435, 3.247826086956522, 1.4434782608695653, 0.23043478260869568], [7.4375, 3.1125, 6.225, 2.0875], [5.690909090909091, 2.772727272727273, 4.190909090909091, 1.290909090909091], [4.9, 2.5, 4.5, 1.7], [6.30625, 2.89375, 4.6499999999999995, 1.4875], [6.124999999999999, 2.7625, 5.0625, 1.7375], [5.46, 2.4, 3.5, 1.02], [6.541176470588237, 3.0529411764705876, 5.488235294117647, 2.1705882352941175], [5.409090909090908, 3.745454545454545, 1.518181818181818, 0.29090909090909095]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.566666666666667, 2.8666666666666667, 4.933333333333333, 1.5], [6.405882352941177, 2.9470588235294124, 5.417647058823528, 2.0294117647058822], [4.876190476190475, 3.276190476190476, 1.4190476190476187, 0.2190476190476191], [5.423076923076923, 2.4538461538461536, 3.684615384615384, 1.1307692307692307], [4.9, 2.5, 4.5, 1.7], [7.433333333333334, 3.233333333333334, 6.316666666666666, 2.033333333333333], [6.086956521739131, 2.91304347826087, 4.4391304347826095, 1.3826086956521737], [5.824999999999999, 2.625, 4.925000000000001, 1.825], [5.3545454545454545, 3.8818181818181823, 1.518181818181818, 0.28181818181818186], [4.5, 2.3, 1.3, 0.3]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3, 3, 2, 3, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[96, 11, 2, 24, 1, 23, 24, 1, 34, 20, 15, 1, 24, 32, 12, 35, 16, 62, 12, 16, 1, 10, 22, 27, 11, 30, 29, 29, 35, 1, 14, 36, 43, 37, 1, 23, 25, 25, 61, 41, 35, 1, 19, 29, 25, 21, 25, 24, 34, 39, 4, 45, 32, 29, 46, 32, 39, 49, 25, 19, 39, 31, 46, 40, 19, 31, 29, 28, 51, 29, 56, 52, 39, 14, 42, 59, 25, 25, 36, 17, 36, 34, 37, 27, 25, 40, 37, 31, 57, 48, 25, 2, 26, 11, 36, 38, 39, 12, 31, 44, 29, 40, 27, 23, 18, 44, 25, 22, 58, 36, 29, 45, 47, 28, 19, 24, 43, 30, 28, 38, 25, 31, 39, 68, 31, 29, 36, 36, 35, 18, 31, 35, 24, 48, 32, 19, 45, 32, 39, 10, 36, 14, 27, 42, 31, 39, 53, 37, 29, 22, 39, 36, 65, 1, 50, 38, 41, 31, 31, 28, 48, 25, 41, 33, 41, 35, 27, 52, 34, 29, 33, 26, 28, 48, 29, 44, 33, 50, 29, 25, 40, 23, 28, 40, 46, 73, 49, 46, 22, 17, 6, 35, 41, 38, 24, 31, 47, 33, 14, 50, 33, 22, 17, 23, 46, 1, 45, 34, 41, 57, 41, 45, 53, 28, 39, 46, 20, 2, 26, 43, 23, 35, 33, 18, 21, 44, 36, 38, 53, 44, 18, 35, 43, 42, 54, 39, 43, 30, 34, 28, 35, 34, 40, 27, 29, 55, 52, 50, 44, 40, 44, 27, 50, 26, 36, 45, 29, 41, 67, 29, 37, 43, 39, 29, 30, 25, 31, 8, 71, 42, 31, 51, 2, 53, 34, 36, 51, 42, 46, 44, 27, 52, 37, 37, 25, 37, 30, 36, 45, 20, 26, 45, 54, 33, 43, 50, 59, 69, 20, 40]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6090000000000001, speedup = 0.47242541259807663, eval_ratio = 0.041937)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.4027777777777779,"recall":0.4027777777777779,"f1":null,"seconds":7.017701864242554e-5,"exhaustive_search_seconds":0.00033632852137088776,"evaluations":337.53125,"distances_sum":1821.790918520624}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5685763888888888,"recall":0.5685763888888888,"f1":0.5685763888888888,"seconds":0.00010245107114315033,"exhaustive_search_seconds":0.00033632852137088776,"evaluations":376.4765625,"distances_sum":1705.7757395998558}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6649305555555549,"recall":0.6649305555555549,"f1":0.6649305555555549,"seconds":0.0001300852745771408,"exhaustive_search_seconds":0.00033632852137088776,"evaluations":414.84375,"distances_sum":1668.1989066713043}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7465277777777768,"recall":0.7465277777777768,"f1":0.7465277777777768,"seconds":0.00015912950038909912,"exhaustive_search_seconds":0.00033632852137088776,"evaluations":454.0078125,"distances_sum":1642.068747552018}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7951388888888878,"recall":0.7951388888888878,"f1":0.7951388888888878,"seconds":0.00018807686865329742,"exhaustive_search_seconds":0.00033632852137088776,"evaluations":492.140625,"distances_sum":1628.0063314503736}
KCenters.DeloneInvIndex> reached performance {"precision":0.8333333333333325,"recall":0.8333333333333325,"f1":0.8333333333333325,"seconds":0.00021559186279773712,"exhaustive_search_seconds":0.00033632852137088776,"evaluations":532.484375,"distances_sum":1617.8253740116772}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8179999999999998, speedup = 1.9897031097851534, eval_ratio = 0.053899)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
