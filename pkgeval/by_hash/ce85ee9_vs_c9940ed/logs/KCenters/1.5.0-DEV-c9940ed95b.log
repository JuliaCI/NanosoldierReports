Julia Version 1.5.0-DEV.133
Commit c9940ed95b (2020-01-21 18:51 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed MappedArrays ──────────────── v0.2.2
 Installed Missings ──────────────────── v0.4.3
 Installed KCenters ──────────────────── v0.1.9
 Installed Parsers ───────────────────── v0.3.10
 Installed OrderedCollections ────────── v1.1.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed StatsBase ─────────────────── v0.32.0
 Installed DataFrames ────────────────── v0.20.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed Tables ────────────────────── v0.2.11
 Installed TableTraits ───────────────── v1.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataStructures ────────────── v0.17.9
 Installed MLDataUtils ───────────────── v0.5.0
 Installed JSON ──────────────────────── v0.21.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Compat ────────────────────── v3.2.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed PooledArrays ──────────────── v0.5.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_KSaXin/Project.toml`
 [no changes]
  Updating `/tmp/jl_KSaXin/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_KSaXin/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 161.85000000000005
[ Info: 77.61
[ Info: 37.109999999999985
[ Info: 25.759999999999994
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999839687118
[ Info: 76.62000116877203
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.26201637273777
inertia(cdnet.distances) = 22.591022721592
inertia(crand.distances) = 23.397807572370382
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7255859375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7255859375,"f1":0.8300427003552011,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.984375,"distances_sum":2134.2258702968275}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.634765625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.634765625,"f1":0.7644601925851934,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.2890625,"distances_sum":1805.6840782819684}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1689453125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1689453125,"f1":null,"seconds":3.166496753692627e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":4.6796875,"distances_sum":513.5361117983949}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7255859375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7255859375,"f1":0.8300427003552011,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.984375,"distances_sum":2134.2258702968275}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8399678446553452,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.046875,"distances_sum":2126.6958833751646}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8707537254412261,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.109375,"distances_sum":2304.8457335515354}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8426547410922418,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.1015625,"distances_sum":2154.369766149543}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8788040084915091,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.234375,"distances_sum":2327.6543235789572}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7958984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.7958984375,"f1":0.8788040084915091,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.234375,"distances_sum":2327.6543235789572}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9505837912087916,"seconds":6.981194019317627e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.828125,"distances_sum":2766.07005976402}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9417124542124549,"seconds":6.92903995513916e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.734375,"distances_sum":2711.3611625701355}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8975795038295046,"seconds":6.206333637237549e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.3046875,"distances_sum":2461.14633018108}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9441881035631038,"seconds":6.575137376785278e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.7734375,"distances_sum":2718.497060378026}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9286630036630041,"seconds":6.504356861114502e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.703125,"distances_sum":2571.489868887379}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9505837912087916,"seconds":6.981194019317627e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.828125,"distances_sum":2766.07005976402}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9505837912087916,"seconds":6.981194019317627e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.828125,"distances_sum":2766.07005976402}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1982421875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1982421875,"f1":null,"seconds":3.341585397720337e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":5.4921875,"distances_sum":510.9392826993116}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2099609375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2099609375,"f1":null,"seconds":3.2670795917510986e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":5.71875,"distances_sum":515.926572444954}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.7716314935064944,"seconds":4.824250936508179e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":7.765625,"distances_sum":1550.2041948562355}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6435546875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6435546875,"f1":0.7716314935064944,"seconds":4.824250936508179e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":7.765625,"distances_sum":1550.2041948562355}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9434638278388284,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.7421875,"distances_sum":2446.6027389795727}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.8381300990675999,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.1640625,"distances_sum":1863.8848043804737}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8392022907647917,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.140625,"distances_sum":1910.756536476707}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9434638278388284,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.7421875,"distances_sum":2446.6027389795727}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.963192536630037,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.84375,"distances_sum":2570.8708068249352}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731799450549454,"seconds":9.14745032787323e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.9296875,"distances_sum":2621.6699618691882}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731799450549454,"seconds":9.14745032787323e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.9296875,"distances_sum":2621.6699618691882}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731799450549454,"seconds":9.14745032787323e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.9296875,"distances_sum":2621.6699618691882}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5849609375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5849609375,"f1":0.7247828560328566,"seconds":4.604458808898926e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.40625,"distances_sum":1353.75367693288}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5849609375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5849609375,"f1":0.7247828560328566,"seconds":4.604458808898926e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.40625,"distances_sum":1353.75367693288}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8728968947718956,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.171875,"distances_sum":1981.959308624016}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8728968947718956,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.171875,"distances_sum":1981.959308624016}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.971726190476191,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9296875,"distances_sum":2543.9240831695747}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9082131410256419,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.609375,"distances_sum":2140.225852113339}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9356684981684987,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.828125,"distances_sum":2275.9048370322043}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.971726190476191,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9296875,"distances_sum":2543.9240831695747}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.971726190476191,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9296875,"distances_sum":2543.9240831695747}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5400390625,"f1":0.6841934107559112,"seconds":4.550442099571228e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.2734375,"distances_sum":1322.505598556844}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5400390625,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5400390625,"f1":0.6841934107559112,"seconds":4.550442099571228e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.2734375,"distances_sum":1322.505598556844}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8953848235098242,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.453125,"distances_sum":2222.9825917977378}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8514173326673335,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.1015625,"distances_sum":1987.1244481238755}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8508189726939736,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.1015625,"distances_sum":1990.5381286824104}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7881387709512717,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.6484375,"distances_sum":1732.53028983722}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.82421875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.82421875,"f1":0.8953848235098242,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.453125,"distances_sum":2222.9825917977378}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.963564560439561,"seconds":6.3497573137283325e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8515625,"distances_sum":2637.810988900217}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9370967574092579,"seconds":6.498768925666809e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.71875,"distances_sum":2491.946037248355}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9270921786546795,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6953125,"distances_sum":2360.249456664328}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9015796703296713,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.390625,"distances_sum":2271.8803010591105}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9514251373626378,"seconds":6.502494215965271e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7734375,"distances_sum":2575.29383064883}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9466632326007332,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.75,"distances_sum":2520.2916633897244}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9394662629037637,"seconds":6.327405571937561e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.734375,"distances_sum":2442.7855196107184}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.963564560439561,"seconds":6.3497573137283325e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8515625,"distances_sum":2637.810988900217}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.963564560439561,"seconds":6.3497573137283325e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8515625,"distances_sum":2637.810988900217}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.421875,"f1":0.5699508824508824,"seconds":4.362314939498901e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":6.453125,"distances_sum":875.3619533716607}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8524907384282393,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.0546875,"distances_sum":1707.989415479256}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8524907384282393,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.0546875,"distances_sum":1707.989415479256}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8672681485181494,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.1015625,"distances_sum":1842.6756281522669}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9415641650016656,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.7890625,"distances_sum":2268.540441706469}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8954675532800542,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.78125,"distances_sum":1926.9402826353137}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9148039460539468,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8125,"distances_sum":2094.4857717030045}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9415641650016656,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.7890625,"distances_sum":2268.540441706469}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758756868131873,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.96875,"distances_sum":2484.8487851453833}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9742387820512823,"seconds":6.536021828651428e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.9609375,"distances_sum":2462.1814246467457}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.976791437728938,"seconds":6.277114152908325e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.9453125,"distances_sum":2492.7192030730957}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9628205128205132,"seconds":6.4820051193237305e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8984375,"distances_sum":2410.4515955843985}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9717261904761909,"seconds":6.584450602531433e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.9453125,"distances_sum":2457.1848550040654}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612980769230772,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8203125,"distances_sum":2397.1283087635647}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9436500999001002,"seconds":6.16908073425293e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.78125,"distances_sum":2266.471597341948}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.976791437728938,"seconds":6.277114152908325e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.9453125,"distances_sum":2492.7192030730957}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.976791437728938,"seconds":6.277114152908325e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.9453125,"distances_sum":2492.7192030730957}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.17578125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.17578125,"f1":null,"seconds":2.991408109664917e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":4.1015625,"distances_sum":500.57546529158475}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.18359375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.18359375,"f1":null,"seconds":2.989545464515686e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":4.1953125,"distances_sum":508.0636533693859}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.494140625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.494140625,"f1":0.6470536408036413,"seconds":4.118308424949646e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.3515625,"distances_sum":1237.9797274442858}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.494140625,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.494140625,"f1":0.6470536408036413,"seconds":4.118308424949646e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.3515625,"distances_sum":1237.9797274442858}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9100248709623714,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.4609375,"distances_sum":2272.5920399957145}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.61328125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.61328125,"f1":0.7475422147297154,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.1875,"distances_sum":1489.2561560428742}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5009765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5009765625,"f1":0.6522373459873464,"seconds":4.259869456291199e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.6015625,"distances_sum":1235.177627104501}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6044921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6044921875,"f1":0.7396622474747481,"seconds":4.561617970466614e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.078125,"distances_sum":1497.73500932089}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84765625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.84765625,"f1":0.9100248709623714,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.4609375,"distances_sum":2272.5920399957145}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9335482226107232,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.5859375,"distances_sum":2399.3892798263632}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9407051282051287,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6640625,"distances_sum":2427.3037240225412}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9303571428571433,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.5703125,"distances_sum":2384.899378036035}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9241076631701638,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.53125,"distances_sum":2360.127482576122}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9407051282051287,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6640625,"distances_sum":2427.3037240225412}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.896484375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9407051282051287,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6640625,"distances_sum":2427.3037240225412}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8628127081252088,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.2578125,"distances_sum":1843.8320955765764}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5625,"f1":null,"seconds":4.196539521217346e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.5078125,"distances_sum":1232.8943704473622}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8628127081252088,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.2578125,"distances_sum":1843.8320955765764}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9304664085914092,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.828125,"distances_sum":2179.5908739850424}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9335138819513825,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.7734375,"distances_sum":2231.605031855072}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9335138819513825,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.7734375,"distances_sum":2231.605031855072}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.961927655677656,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8828125,"distances_sum":2430.390783994708}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9780505952380956,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9609375,"distances_sum":2549.0168631700935}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.957354624542125,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8828125,"distances_sum":2389.5169604788466}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9780505952380956,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9609375,"distances_sum":2549.0168631700935}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9780505952380956,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9609375,"distances_sum":2549.0168631700935}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.35546875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.35546875,"f1":null,"seconds":3.4868717193603516e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.03125,"distances_sum":858.895199511136}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.35546875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.35546875,"f1":null,"seconds":3.4868717193603516e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.03125,"distances_sum":858.895199511136}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.873449467199468,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.3359375,"distances_sum":2029.8043549628544}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9057265651015658,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6875,"distances_sum":2224.9867724118126}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8408203125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.9057265651015658,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6875,"distances_sum":2224.9867724118126}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9712454212454216,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9296875,"distances_sum":2695.9169767633703}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9380895146520151,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8125,"distances_sum":2436.064046310585}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9712454212454216,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9296875,"distances_sum":2695.9169767633703}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9712454212454216,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9296875,"distances_sum":2695.9169767633703}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.16015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.16015625,"f1":null,"seconds":3.2614916563034058e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":4.8046875,"distances_sum":364.2096876467417}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.16015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.16015625,"f1":null,"seconds":3.2614916563034058e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":4.8046875,"distances_sum":364.2096876467417}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5673828125,"f1":0.7031452922077928,"seconds":4.2282044887542725e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.328125,"distances_sum":1101.6678448455884}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5673828125,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5673828125,"f1":0.7031452922077928,"seconds":4.2282044887542725e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.328125,"distances_sum":1101.6678448455884}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8888855935730944,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.0625,"distances_sum":1725.7324101262975}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.724609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.724609375,"f1":0.826517753080254,"seconds":4.695728421211243e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.9765625,"distances_sum":1510.2589075755209}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8076619560994568,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.71875,"distances_sum":1383.9918922197874}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8125,"f1":0.8888855935730944,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.0625,"distances_sum":1725.7324101262975}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688816391941397,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.875,"distances_sum":2201.031314409352}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9636389652014657,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8203125,"distances_sum":2174.33106608717}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9350618131868137,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.671875,"distances_sum":2024.9504913769902}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688816391941397,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.875,"distances_sum":2201.031314409352}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688816391941397,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.875,"distances_sum":2201.031314409352}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44140625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.44140625,"f1":null,"seconds":3.831461071968079e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.0234375,"distances_sum":917.0108378180641}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8642773892773903,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.9765625,"distances_sum":1763.6595336645298}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.55859375,"f1":null,"seconds":4.231929779052734e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.5234375,"distances_sum":1154.0001974427234}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8642773892773903,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.9765625,"distances_sum":1763.6595336645298}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9129297785547792,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.2421875,"distances_sum":2009.2891291611786}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8668446137196146,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.8671875,"distances_sum":1715.1499637934}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9189539627039632,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.3984375,"distances_sum":2091.1035458525485}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9225966741591747,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.4296875,"distances_sum":2130.5685066932956}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8975139443889449,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.1484375,"distances_sum":1964.5344037137013}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.9225966741591747,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.4296875,"distances_sum":2130.5685066932956}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9649782509157513,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8046875,"distances_sum":2378.538579977167}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9488584332334337,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6953125,"distances_sum":2305.933531251044}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9649782509157513,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8046875,"distances_sum":2378.538579977167}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9649782509157513,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8046875,"distances_sum":2378.538579977167}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8683873418248427,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.28125,"distances_sum":1811.470898597484}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7880770271395279,"seconds":4.187226295471191e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.53125,"distances_sum":1466.5474393839504}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2158203125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2158203125,"f1":null,"seconds":2.983957529067993e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.421875,"distances_sum":572.0928718357337}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7822265625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7822265625,"f1":0.8683873418248427,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.28125,"distances_sum":1811.470898597484}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9364671786546793,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6015625,"distances_sum":2237.9242408982846}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9227626540126547,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.4375,"distances_sum":2139.5437033590556}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8961366758241767,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.328125,"distances_sum":1944.3183719456747}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9485920329670336,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.609375,"distances_sum":2357.6197803226746}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9485920329670336,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.609375,"distances_sum":2357.6197803226746}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9648523351648355,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.828125,"distances_sum":2390.6883671830083}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.965035485347986,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.828125,"distances_sum":2406.99420347211}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9603479853479859,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8203125,"distances_sum":2374.7573630700726}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9589514652014655,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7578125,"distances_sum":2397.534985646347}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9648523351648355,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.828125,"distances_sum":2390.6883671830083}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9648523351648355,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.828125,"distances_sum":2390.6883671830083}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8639110889110897,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.328125,"distances_sum":1789.9398766297718}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.24609375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.24609375,"f1":null,"seconds":3.1851232051849365e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.65625,"distances_sum":597.0576194687002}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8639110889110897,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.328125,"distances_sum":1789.9398766297718}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9498282967032969,"seconds":6.6123902797698975e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":2329.939753621131}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9036265817515826,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5,"distances_sum":1992.0597494695658}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9498282967032969,"seconds":6.6123902797698975e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":2329.939753621131}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619448260073267,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8671875,"distances_sum":2417.3053697995315}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9639938186813193,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.859375,"distances_sum":2446.4412018448947}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9683436355311359,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":2464.108935280162}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9683436355311359,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":2464.108935280162}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9683436355311359,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":2464.108935280162}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":3.87243926525116e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":5.75,"distances_sum":771.3407967281831}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5400390625,"f1":0.6830771658896665,"seconds":4.187226295471191e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.7109375,"distances_sum":1078.4070281037211}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.779380862193363,"seconds":4.2691826820373535e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.234375,"distances_sum":1461.780394652794}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.779380862193363,"seconds":4.2691826820373535e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.234375,"distances_sum":1461.780394652794}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9525016650016656,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.796875,"distances_sum":2332.3422866235683}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9392799908424911,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7265625,"distances_sum":2225.798857635684}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7816605269730277,"seconds":4.155561327934265e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.171875,"distances_sum":1429.1042587325599}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9010276182151188,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.46875,"distances_sum":1977.1801845066557}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.843532856032857,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.0546875,"distances_sum":1691.5440278145072}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9327240467865474,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7734375,"distances_sum":2151.820738723831}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9525016650016656,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.796875,"distances_sum":2332.3422866235683}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9562728937728942,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8359375,"distances_sum":2338.216008759731}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9614411630036633,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8671875,"distances_sum":2347.7200494492845}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9742387820512824,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9453125,"distances_sum":2441.09463433972}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596955128205134,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.859375,"distances_sum":2336.372014986614}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9742387820512824,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9453125,"distances_sum":2441.09463433972}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9742387820512824,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9453125,"distances_sum":2441.09463433972}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5615234375,"f1":0.7023830336330343,"seconds":3.991648554801941e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.3046875,"distances_sum":1203.8586502602357}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5615234375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5615234375,"f1":0.7023830336330343,"seconds":3.991648554801941e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.3046875,"distances_sum":1203.8586502602357}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5830078125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5830078125,"f1":0.7189206626706633,"seconds":4.2691826820373535e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.328125,"distances_sum":1170.7417873061704}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9306833791208798,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2116.4899777496817}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9306833791208798,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2116.4899777496817}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9336767399267404,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.90625,"distances_sum":2109.721076621285}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707417582417585,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9765625,"distances_sum":2361.564506032858}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725103021978025,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.953125,"distances_sum":2376.923797862098}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9321543040293047,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.875,"distances_sum":2101.7138878146106}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725103021978025,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.953125,"distances_sum":2376.923797862098}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725103021978025,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.953125,"distances_sum":2376.923797862098}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.267578125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.267578125,"f1":null,"seconds":3.0584633350372314e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.4609375,"distances_sum":611.0512023303099}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.265625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.265625,"f1":null,"seconds":3.3248215913772583e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.4140625,"distances_sum":554.004535784729}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.267578125,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.267578125,"f1":null,"seconds":3.0584633350372314e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.4609375,"distances_sum":611.0512023303099}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8619295634920642,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.234375,"distances_sum":1776.3981981971126}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8619295634920642,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.234375,"distances_sum":1776.3981981971126}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9465659340659346,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7734375,"distances_sum":2260.4398997495987}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9608115842490846,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":2373.080763451281}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9608115842490846,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":2373.080763451281}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9608115842490846,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":2373.080763451281}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2412109375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2412109375,"f1":null,"seconds":3.5222619771957397e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.6171875,"distances_sum":564.1489989926285}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.513671875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.513671875,"f1":0.6586795149295153,"seconds":4.187226295471191e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.6484375,"distances_sum":1266.495816269922}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3798828125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3798828125,"f1":null,"seconds":3.5874545574188232e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.4765625,"distances_sum":946.3993845345335}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.513671875,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.513671875,"f1":0.6586795149295153,"seconds":4.187226295471191e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.6484375,"distances_sum":1266.495816269922}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8648247585747594,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.578125,"distances_sum":2076.4727429472414}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9247341200466206,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.671875,"distances_sum":2485.812525407416}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9064024517149526,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.53125,"distances_sum":2357.820757700604}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7885045510045517,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.96875,"distances_sum":1723.494310604432}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.861777285214786,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.484375,"distances_sum":2043.161968429247}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8677437146187155,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.4921875,"distances_sum":2092.138000827019}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9247341200466206,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.671875,"distances_sum":2485.812525407416}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9495077838827841,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7421875,"distances_sum":2711.918496224072}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9682864010989016,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9453125,"distances_sum":2790.3484328103773}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9537431318681325,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2698.8949787306246}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9588427197802201,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.921875,"distances_sum":2722.6003916800405}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9497283966033971,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8203125,"distances_sum":2691.3411222316286}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9496909340659343,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.875,"distances_sum":2661.251418918072}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9554716117216123,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8515625,"distances_sum":2706.3335179951223}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.950228937728938,"seconds":5.133450031280518e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.890625,"distances_sum":2670.028348700291}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9682864010989016,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9453125,"distances_sum":2790.3484328103773}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9682864010989016,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9453125,"distances_sum":2790.3484328103773}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":4.06801700592041e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.2109375,"distances_sum":976.3921066727545}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8573530636030646,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.515625,"distances_sum":2065.9914477087805}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8573530636030646,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.515625,"distances_sum":2065.9914477087805}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9093068389943396,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.578125,"distances_sum":2363.057953914595}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9067713536463543,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.625,"distances_sum":2362.797845011954}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9093068389943396,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.578125,"distances_sum":2363.057953914595}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9576923076923078,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9140625,"distances_sum":2774.0859189055527}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9102251914751924,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.65625,"distances_sum":2399.0675669396765}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9683264652014656,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9453125,"distances_sum":2862.356386336498}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9654049075924082,"seconds":6.595626473426819e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.953125,"distances_sum":2844.6904223651936}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9119422244422251,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.5859375,"distances_sum":2429.7450073571135}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9683264652014656,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9453125,"distances_sum":2862.356386336498}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9683264652014656,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9453125,"distances_sum":2862.356386336498}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.4905970096588135e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.25,"distances_sum":1015.0405194916167}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4208984375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.4905970096588135e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.25,"distances_sum":1015.0405194916167}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7911016067266076,"seconds":4.889443516731262e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.9453125,"distances_sum":1730.2572155368048}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4306640625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4306640625,"f1":null,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.3046875,"distances_sum":1038.8910047112045}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7725373584748592,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.75,"distances_sum":1684.1856305398946}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4296875, conf: {"ssize":8,"bsize":2}, perf: {"precision":null,"recall":0.4296875,"f1":null,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.28125,"distances_sum":988.9161518590158}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6689453125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6689453125,"f1":0.7911016067266076,"seconds":4.889443516731262e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.9453125,"distances_sum":1730.2572155368048}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7984754828504836,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.953125,"distances_sum":1755.229295290355}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9625572344322347,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9453125,"distances_sum":2824.274444730729}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9320226648351655,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8359375,"distances_sum":2613.0842962377187}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":12,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8510109681984691,"seconds":5.044043064117432e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.1640625,"distances_sum":2040.306298792848}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8755010614385621,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4453125,"distances_sum":2195.921893859351}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8626233141858151,"seconds":5.109235644340515e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2421875,"distances_sum":2117.7825176057027}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":12,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9172020687645696,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.421875,"distances_sum":2460.1398082479295}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9193369130869138,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4453125,"distances_sum":2455.8167679373514}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9625572344322347,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9453125,"distances_sum":2824.274444730729}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9625572344322347,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9453125,"distances_sum":2824.274444730729}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8017281329781337,"seconds":4.71062958240509e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.0546875,"distances_sum":1780.650622154552}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7908714549339556,"seconds":4.781410098075867e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.03125,"distances_sum":1737.6864231400896}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.392578125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.392578125,"f1":null,"seconds":3.691762685775757e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.0,"distances_sum":964.2927097834182}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.8017281329781337,"seconds":4.71062958240509e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.0546875,"distances_sum":1780.650622154552}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9289663461538468,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7734375,"distances_sum":2556.241682137308}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9446714743589749,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.78125,"distances_sum":2631.2364964382305}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9037233599733606,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.4296875,"distances_sum":2318.3794031388293}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9446714743589749,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.78125,"distances_sum":2631.2364964382305}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9601991758241765,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.875,"distances_sum":2758.031358987073}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9695913461538466,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8984375,"distances_sum":2833.5928694133722}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763221153846159,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":2872.5338778630885}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9755437271062276,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9453125,"distances_sum":2842.6823313182285}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9470123626373632,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8046875,"distances_sum":2667.3298123904556}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9540464743589746,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8125,"distances_sum":2701.5285488550744}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9591002747252751,"seconds":6.346032023429871e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.796875,"distances_sum":2741.0688130901394}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":11,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758012820512824,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.890625,"distances_sum":2892.002010834453}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9648294413919417,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.890625,"distances_sum":2794.9137031035107}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763221153846159,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":2872.5338778630885}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763221153846159,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":2872.5338778630885}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7044774669774674,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.53125,"distances_sum":1369.5709756590486}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5478515625,"f1":0.6899862290487296,"seconds":4.55416738986969e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.46875,"distances_sum":1321.2764573111535}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2490234375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2490234375,"f1":null,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":6.6796875,"distances_sum":555.7039361346567}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5634765625,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5634765625,"f1":0.7044774669774674,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.53125,"distances_sum":1369.5709756590486}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.56640625,"f1":0.703366078366079,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.3359375,"distances_sum":1424.4890530877944}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9353136446886451,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.890625,"distances_sum":2508.523143017021}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7907264610389619,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.2890625,"distances_sum":1691.387883843489}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8019659160284166,"seconds":4.511326551437378e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.3515625,"distances_sum":1745.2651640101014}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8859208499833509,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.6171875,"distances_sum":2166.4950425644342}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8044772935397942,"seconds":4.822388291358948e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.390625,"distances_sum":1734.0636073735152}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9353136446886451,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.890625,"distances_sum":2508.523143017021}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.966855540293041,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9609375,"distances_sum":2747.129699932656}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9407457126207133,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9296875,"distances_sum":2566.9407493383333}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609031593406597,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8984375,"distances_sum":2739.6939980589295}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9495993589743594,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.859375,"distances_sum":2627.4975145458434}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612007783882789,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9296875,"distances_sum":2714.8475799832886}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9359088827838836,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8046875,"distances_sum":2509.4541464808435}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.966855540293041,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9609375,"distances_sum":2747.129699932656}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.966855540293041,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9609375,"distances_sum":2747.129699932656}}, n: 9
inertia(cfft.distances) = 18.07673204736439
inertia(cdnet.distances) = 22.68175005668933
inertia(crand.distances) = 20.39699493795965
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8799999999999999
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.888888888888889
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.94
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9355555555555556
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.931111111111111
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9088888888888889
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9088888888888889
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9444444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8777777777777778
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9177777777777778
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8688888888888888
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8999999999999999
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 3, 3, 1, 2, 2, 3, 2, 1, 3, 2, 3, 3, 2, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 5, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 10, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 3, 1, 2, 3, 1, 2, 3, 1]
acc = 0.9133333333333333
*** starting iteration: 1; err: [Inf, 0.2870000045104341] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.2870000045104341, 0.1677424658021685] ***
*** starting iteration: 2; err: [Inf, 0.2870000045104341, 0.1677424658021685] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.2870000045104341, 0.1677424658021685, 0.15858816104148712] ***
*** starting iteration: 3; err: [Inf, 0.2870000045104341, 0.1677424658021685, 0.15858816104148712] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.2870000045104341, 0.1677424658021685, 0.15858816104148712, 0.15480812286402143] ***
*** starting iteration: 4; err: [Inf, 0.2870000045104341, 0.1677424658021685, 0.15858816104148712, 0.15480812286402143] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.2870000045104341, 0.1677424658021685, 0.15858816104148712, 0.15480812286402143, 0.15260676916192478] ***
*** starting iteration: 5; err: [Inf, 0.2870000045104341, 0.1677424658021685, 0.15858816104148712, 0.15480812286402143, 0.15260676916192478] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.2870000045104341, 0.1677424658021685, 0.15858816104148712, 0.15480812286402143, 0.15260676916192478, 0.15224104726205065] ***
*** finished computation of 12 references, err: [Inf, 0.2870000045104341, 0.1677424658021685, 0.15858816104148712, 0.15480812286402143, 0.15260676916192478, 0.15224104726205065] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 6, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 4, 6]]
** centroid: 12, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
finished with 13 centroids; started with 12
acc = 0.9666666666666667
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 3.38540000952416] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.38540000952416, 1.7067067266327074] ***
*** starting iteration: 2; err: [Inf, 3.38540000952416, 1.7067067266327074] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.38540000952416, 1.7067067266327074, 1.1551020389359692] ***
*** starting iteration: 3; err: [Inf, 3.38540000952416, 1.7067067266327074, 1.1551020389359692] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.38540000952416, 1.7067067266327074, 1.1551020389359692, 0.7642571711966921] ***
*** finished computation of 3 references, err: [Inf, 3.38540000952416, 1.7067067266327074, 1.1551020389359692, 0.7642571711966921] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 21]]
** centroid: 2, normalized-entropy: 0.9593160320543779, [(2, 34), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [26, 1, 0]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(1, 26), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9954000095752592] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9954000095752592, 0.5092813472424377] ***
*** starting iteration: 2; err: [Inf, 0.9954000095752592, 0.5092813472424377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9954000095752592, 0.5092813472424377, 0.49250564177859857] ***
*** starting iteration: 3; err: [Inf, 0.9954000095752592, 0.5092813472424377, 0.49250564177859857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9954000095752592, 0.5092813472424377, 0.49250564177859857, 0.4895030455545237] ***
*** finished computation of 3 references, err: [Inf, 0.9954000095752592, 0.5092813472424377, 0.49250564177859857, 0.4895030455545237] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 6]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2852999914733152] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2852999914733152, 0.9417459583139928] ***
*** starting iteration: 2; err: [Inf, 1.2852999914733152, 0.9417459583139928] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2852999914733152, 0.9417459583139928, 0.9399373059584005] ***
*** starting iteration: 3; err: [Inf, 1.2852999914733152, 0.9417459583139928, 0.9399373059584005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2852999914733152, 0.9417459583139928, 0.9399373059584005, 0.9399373059584005] ***
*** finished computation of 3 references, err: [Inf, 1.2852999914733152, 0.9417459583139928, 0.9399373059584005, 0.9399373059584005] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 33]]
** centroid: 1, normalized-entropy: 0.998363672593813, [(2, 30), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [13, 3, 0]]
** centroid: 3, normalized-entropy: 0.6962122601251459, [(1, 13), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.743123772744135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.743123772744135, 0.44649696704052383] ***
*** finished computation of 7 references, err: [Inf, 1.743123772744135, 0.44649696704052383] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 11, 13]]
** centroid: 3, normalized-entropy: 0.9949848281859699, [(2, 11), (3, 13)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 5]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(2, 3), (3, 5)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8026773969366688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8026773969366688, 0.23579657111336744] ***
*** finished computation of 7 references, err: [Inf, 0.8026773969366688, 0.23579657111336744] ***
*** center 1: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 23, 3]]
** centroid: 3, normalized-entropy: 0.5159469300074472, [(2, 23), (3, 3)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 10]]
** centroid: 5, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5198784336309362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5198784336309362, 0.2828865510003607] ***
*** finished computation of 7 references, err: [Inf, 0.5198784336309362, 0.2828865510003607] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 2]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 30), (3, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 4: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 10]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39366452051581846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39366452051581846, 0.23472775750015423] ***
*** starting iteration: 2; err: [Inf, 0.39366452051581846, 0.23472775750015423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39366452051581846, 0.23472775750015423, 0.21024301086470257] ***
*** starting iteration: 3; err: [Inf, 0.39366452051581846, 0.23472775750015423, 0.21024301086470257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39366452051581846, 0.23472775750015423, 0.21024301086470257, 0.19195498486639775] ***
*** finished computation of 7 references, err: [Inf, 0.39366452051581846, 0.23472775750015423, 0.21024301086470257, 0.19195498486639775] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 5]]
** centroid: 5, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5902011500079073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5902011500079073, 0.2502207547140551] ***
*** starting iteration: 2; err: [Inf, 0.5902011500079073, 0.2502207547140551] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5902011500079073, 0.2502207547140551, 0.22346556132338627] ***
*** starting iteration: 3; err: [Inf, 0.5902011500079073, 0.2502207547140551, 0.22346556132338627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5902011500079073, 0.2502207547140551, 0.22346556132338627, 0.20973238600866753] ***
*** finished computation of 7 references, err: [Inf, 0.5902011500079073, 0.2502207547140551, 0.22346556132338627, 0.20973238600866753] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 3]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 27), (3, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 5, 19]]
** centroid: 4, normalized-entropy: 0.7382848661434506, [(2, 5), (3, 19)]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2418476902227622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2418476902227622, 0.20487468055845087] ***
*** starting iteration: 2; err: [Inf, 0.2418476902227622, 0.20487468055845087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2418476902227622, 0.20487468055845087, 0.20327397605231287] ***
*** starting iteration: 3; err: [Inf, 0.2418476902227622, 0.20487468055845087, 0.20327397605231287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2418476902227622, 0.20487468055845087, 0.20327397605231287, 0.2028075903805105] ***
*** finished computation of 7 references, err: [Inf, 0.2418476902227622, 0.20487468055845087, 0.20327397605231287, 0.2028075903805105] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 15, 16]]
** centroid: 7, normalized-entropy: 0.9992492479956566, [(2, 15), (3, 16)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.828399997213562] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.828399997213562, 1.0973710107118213] ***
*** starting iteration: 2; err: [Inf, 3.828399997213562, 1.0973710107118213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.828399997213562, 1.0973710107118213, 0.5976313249155154] ***
*** starting iteration: 3; err: [Inf, 3.828399997213562, 1.0973710107118213, 0.5976313249155154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.828399997213562, 1.0973710107118213, 0.5976313249155154, 0.5479309066016005] ***
*** starting iteration: 4; err: [Inf, 3.828399997213562, 1.0973710107118213, 0.5976313249155154, 0.5479309066016005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.828399997213562, 1.0973710107118213, 0.5976313249155154, 0.5479309066016005, 0.5471074896399165] ***
*** finished computation of 3 references, err: [Inf, 3.828399997213562, 1.0973710107118213, 0.5976313249155154, 0.5479309066016005, 0.5471074896399165] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 12]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(2, 34), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 3, normalized-entropy: 0.2222848306856879, [(2, 1), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1622999970827705] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1622999970827705, 0.5180085111620248] ***
*** starting iteration: 2; err: [Inf, 1.1622999970827705, 0.5180085111620248] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1622999970827705, 0.5180085111620248, 0.5136142318151098] ***
*** starting iteration: 3; err: [Inf, 1.1622999970827705, 0.5180085111620248, 0.5136142318151098] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1622999970827705, 0.5180085111620248, 0.5136142318151098, 0.5065086555593] ***
*** starting iteration: 4; err: [Inf, 1.1622999970827705, 0.5180085111620248, 0.5136142318151098, 0.5065086555593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1622999970827705, 0.5180085111620248, 0.5136142318151098, 0.5065086555593, 0.5014792483838072] ***
*** starting iteration: 5; err: [Inf, 1.1622999970827705, 0.5180085111620248, 0.5136142318151098, 0.5065086555593, 0.5014792483838072] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1622999970827705, 0.5180085111620248, 0.5136142318151098, 0.5065086555593, 0.5014792483838072, 0.495251612363131] ***
*** starting iteration: 6; err: [Inf, 1.1622999970827705, 0.5180085111620248, 0.5136142318151098, 0.5065086555593, 0.5014792483838072, 0.495251612363131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1622999970827705, 0.5180085111620248, 0.5136142318151098, 0.5065086555593, 0.5014792483838072, 0.495251612363131, 0.49250564177859857] ***
*** starting iteration: 7; err: [Inf, 1.1622999970827705, 0.5180085111620248, 0.5136142318151098, 0.5065086555593, 0.5014792483838072, 0.495251612363131, 0.49250564177859857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1622999970827705, 0.5180085111620248, 0.5136142318151098, 0.5065086555593, 0.5014792483838072, 0.495251612363131, 0.49250564177859857, 0.4895030455545237] ***
*** starting iteration: 8; err: [Inf, 1.1622999970827705, 0.5180085111620248, 0.5136142318151098, 0.5065086555593, 0.5014792483838072, 0.495251612363131, 0.49250564177859857, 0.4895030455545237] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1622999970827705, 0.5180085111620248, 0.5136142318151098, 0.5065086555593, 0.5014792483838072, 0.495251612363131, 0.49250564177859857, 0.4895030455545237, 0.4889219428263008] ***
*** finished computation of 3 references, err: [Inf, 1.1622999970827705, 0.5180085111620248, 0.5136142318151098, 0.5065086555593, 0.5014792483838072, 0.495251612363131, 0.49250564177859857, 0.4895030455545237, 0.4889219428263008] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 6]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2058000014885615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2058000014885615, 0.5873390279115027] ***
*** starting iteration: 2; err: [Inf, 1.2058000014885615, 0.5873390279115027] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2058000014885615, 0.5873390279115027, 0.5399175416610221] ***
*** starting iteration: 3; err: [Inf, 1.2058000014885615, 0.5873390279115027, 0.5399175416610221] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2058000014885615, 0.5873390279115027, 0.5399175416610221, 0.5375074820681738] ***
*** starting iteration: 4; err: [Inf, 1.2058000014885615, 0.5873390279115027, 0.5399175416610221, 0.5375074820681738] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2058000014885615, 0.5873390279115027, 0.5399175416610221, 0.5375074820681738, 0.5367489335954991] ***
*** finished computation of 3 references, err: [Inf, 1.2058000014885615, 0.5873390279115027, 0.5399175416610221, 0.5375074820681738, 0.5367489335954991] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 9]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.8780952533349] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8780952533349, 0.7360538695180204] ***
*** starting iteration: 2; err: [Inf, 2.8780952533349, 0.7360538695180204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8780952533349, 0.7360538695180204, 0.38987762881271054] ***
*** starting iteration: 3; err: [Inf, 2.8780952533349, 0.7360538695180204, 0.38987762881271054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8780952533349, 0.7360538695180204, 0.38987762881271054, 0.3817173065555794] ***
*** starting iteration: 4; err: [Inf, 2.8780952533349, 0.7360538695180204, 0.38987762881271054, 0.3817173065555794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8780952533349, 0.7360538695180204, 0.38987762881271054, 0.3817173065555794, 0.3817173065555794] ***
*** finished computation of 3 references, err: [Inf, 2.8780952533349, 0.7360538695180204, 0.38987762881271054, 0.3817173065555794, 0.3817173065555794] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9905140417603304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9905140417603304, 0.3638265411602859] ***
*** starting iteration: 2; err: [Inf, 0.9905140417603304, 0.3638265411602859] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9905140417603304, 0.3638265411602859, 0.3504256900165248] ***
*** starting iteration: 3; err: [Inf, 0.9905140417603304, 0.3638265411602859, 0.3504256900165248] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9905140417603304, 0.3638265411602859, 0.3504256900165248, 0.3456884237660093] ***
*** starting iteration: 4; err: [Inf, 0.9905140417603304, 0.3638265411602859, 0.3504256900165248, 0.3456884237660093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9905140417603304, 0.3638265411602859, 0.3504256900165248, 0.3456884237660093, 0.34130052079935297] ***
*** starting iteration: 5; err: [Inf, 0.9905140417603304, 0.3638265411602859, 0.3504256900165248, 0.3456884237660093, 0.34130052079935297] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9905140417603304, 0.3638265411602859, 0.3504256900165248, 0.3456884237660093, 0.34130052079935297, 0.3365182783344007] ***
*** starting iteration: 6; err: [Inf, 0.9905140417603304, 0.3638265411602859, 0.3504256900165248, 0.3456884237660093, 0.34130052079935297, 0.3365182783344007] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9905140417603304, 0.3638265411602859, 0.3504256900165248, 0.3456884237660093, 0.34130052079935297, 0.3365182783344007, 0.33603809551006664] ***
*** finished computation of 3 references, err: [Inf, 0.9905140417603304, 0.3638265411602859, 0.3504256900165248, 0.3456884237660093, 0.34130052079935297, 0.3365182783344007, 0.33603809551006664] ***
*** center 1: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 5]]
** centroid: 2, normalized-entropy: 0.6136190195993708, [(2, 28), (3, 5)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 23]]
** centroid: 3, normalized-entropy: 0.6051865766334207, [(2, 4), (3, 23)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8360287554272817] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8360287554272817, 0.6442084701466447] ***
*** starting iteration: 2; err: [Inf, 0.8360287554272817, 0.6442084701466447] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8360287554272817, 0.6442084701466447, 0.6429330583179478] ***
*** starting iteration: 3; err: [Inf, 0.8360287554272817, 0.6442084701466447, 0.6429330583179478] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8360287554272817, 0.6442084701466447, 0.6429330583179478, 0.6429330583179478] ***
*** finished computation of 3 references, err: [Inf, 0.8360287554272817, 0.6442084701466447, 0.6429330583179478, 0.6429330583179478] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [17, 2, 0]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(1, 17), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 33]]
** centroid: 2, normalized-entropy: 0.9992954443621548, [(2, 31), (3, 33)]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41222521238559834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41222521238559834, 0.21597872166487303] ***
*** starting iteration: 2; err: [Inf, 0.41222521238559834, 0.21597872166487303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41222521238559834, 0.21597872166487303, 0.18714075596519766] ***
*** starting iteration: 3; err: [Inf, 0.41222521238559834, 0.21597872166487303, 0.18714075596519766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41222521238559834, 0.21597872166487303, 0.18714075596519766, 0.1776304278004719] ***
*** finished computation of 7 references, err: [Inf, 0.41222521238559834, 0.21597872166487303, 0.18714075596519766, 0.1776304278004719] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 13, 14]]
** centroid: 5, normalized-entropy: 0.9990102708804813, [(2, 13), (3, 14)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.5053962216384031] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5053962216384031, 0.4390867432931326] ***
*** starting iteration: 2; err: [Inf, 1.5053962216384031, 0.4390867432931326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5053962216384031, 0.4390867432931326, 0.2824312318271394] ***
*** starting iteration: 3; err: [Inf, 1.5053962216384031, 0.4390867432931326, 0.2824312318271394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5053962216384031, 0.4390867432931326, 0.2824312318271394, 0.2610668619757436] ***
*** finished computation of 7 references, err: [Inf, 1.5053962216384031, 0.4390867432931326, 0.2824312318271394, 0.2610668619757436] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 4]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 28), (3, 4)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 15]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 5 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7393722058203375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7393722058203375, 0.2987303393091379] ***
*** starting iteration: 2; err: [Inf, 0.7393722058203375, 0.2987303393091379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7393722058203375, 0.2987303393091379, 0.2349224591786276] ***
*** starting iteration: 3; err: [Inf, 0.7393722058203375, 0.2987303393091379, 0.2349224591786276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7393722058203375, 0.2987303393091379, 0.2349224591786276, 0.18776527074123264] ***
*** finished computation of 7 references, err: [Inf, 0.7393722058203375, 0.2987303393091379, 0.2349224591786276, 0.18776527074123264] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 3]]
** centroid: 1, normalized-entropy: 0.6722948170756378, [(2, 14), (3, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 9]]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.287700022743146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.287700022743146, 1.087874464314948] ***
*** starting iteration: 2; err: [Inf, 2.287700022743146, 1.087874464314948] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.287700022743146, 1.087874464314948, 1.0812594232170296] ***
*** starting iteration: 3; err: [Inf, 2.287700022743146, 1.087874464314948, 1.0812594232170296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.287700022743146, 1.087874464314948, 1.0812594232170296, 1.0808489352810968] ***
*** finished computation of 3 references, err: [Inf, 2.287700022743146, 1.087874464314948, 1.0812594232170296, 1.0808489352810968] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 39]]
** centroid: 3, normalized-entropy: 0.9966132830150962, [(2, 34), (3, 39)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9065999992835607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9065999992835607, 0.5014128170034275] ***
*** starting iteration: 2; err: [Inf, 0.9065999992835607, 0.5014128170034275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9065999992835607, 0.5014128170034275, 0.495251612363131] ***
*** starting iteration: 3; err: [Inf, 0.9065999992835607, 0.5014128170034275, 0.495251612363131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9065999992835607, 0.5014128170034275, 0.495251612363131, 0.49250564177859857] ***
*** finished computation of 3 references, err: [Inf, 0.9065999992835607, 0.5014128170034275, 0.495251612363131, 0.49250564177859857] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 5]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 30), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.2065000086374544] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2065000086374544, 0.9634723899183729] ***
*** starting iteration: 2; err: [Inf, 2.2065000086374544, 0.9634723899183729] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2065000086374544, 0.9634723899183729, 0.9498898976255351] ***
*** starting iteration: 3; err: [Inf, 2.2065000086374544, 0.9634723899183729, 0.9498898976255351] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2065000086374544, 0.9634723899183729, 0.9498898976255351, 0.9490405876978342] ***
*** finished computation of 3 references, err: [Inf, 2.2065000086374544, 0.9634723899183729, 0.9498898976255351, 0.9490405876978342] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 33]]
** centroid: 2, normalized-entropy: 0.9992954443621548, [(2, 31), (3, 33)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [19, 2, 0]]
** centroid: 3, normalized-entropy: 0.45371633918694493, [(1, 19), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3035774014016035] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3035774014016035, 0.4668527388366553] ***
*** starting iteration: 2; err: [Inf, 1.3035774014016035, 0.4668527388366553] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3035774014016035, 0.4668527388366553, 0.3835564104455794] ***
*** starting iteration: 3; err: [Inf, 1.3035774014016035, 0.4668527388366553, 0.3835564104455794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3035774014016035, 0.4668527388366553, 0.3835564104455794, 0.3820006721458554] ***
*** starting iteration: 4; err: [Inf, 1.3035774014016035, 0.4668527388366553, 0.3835564104455794, 0.3820006721458554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3035774014016035, 0.4668527388366553, 0.3835564104455794, 0.3820006721458554, 0.3817886065665337] ***
*** finished computation of 3 references, err: [Inf, 1.3035774014016035, 0.4668527388366553, 0.3835564104455794, 0.3820006721458554, 0.3817886065665337] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 12]]
** centroid: 2, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 3: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5865957855235258] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5865957855235258, 0.43104176708137004] ***
*** starting iteration: 2; err: [Inf, 0.5865957855235258, 0.43104176708137004] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423] ***
*** starting iteration: 3; err: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423, 0.356046235915138] ***
*** starting iteration: 4; err: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423, 0.356046235915138] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423, 0.356046235915138, 0.3481467425932451] ***
*** starting iteration: 5; err: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423, 0.356046235915138, 0.3481467425932451] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423, 0.356046235915138, 0.3481467425932451, 0.34152271122773586] ***
*** starting iteration: 6; err: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423, 0.356046235915138, 0.3481467425932451, 0.34152271122773586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423, 0.356046235915138, 0.3481467425932451, 0.34152271122773586, 0.33844901532218996] ***
*** starting iteration: 7; err: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423, 0.356046235915138, 0.3481467425932451, 0.34152271122773586, 0.33844901532218996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423, 0.356046235915138, 0.3481467425932451, 0.34152271122773586, 0.33844901532218996, 0.33691720527995384] ***
*** starting iteration: 8; err: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423, 0.356046235915138, 0.3481467425932451, 0.34152271122773586, 0.33844901532218996, 0.33691720527995384] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423, 0.356046235915138, 0.3481467425932451, 0.34152271122773586, 0.33844901532218996, 0.33691720527995384, 0.3355164271629707] ***
*** starting iteration: 9; err: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423, 0.356046235915138, 0.3481467425932451, 0.34152271122773586, 0.33844901532218996, 0.33691720527995384, 0.3355164271629707] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423, 0.356046235915138, 0.3481467425932451, 0.34152271122773586, 0.33844901532218996, 0.33691720527995384, 0.3355164271629707, 0.3355164271629707] ***
*** finished computation of 3 references, err: [Inf, 0.5865957855235258, 0.43104176708137004, 0.3867896049298423, 0.356046235915138, 0.3481467425932451, 0.34152271122773586, 0.33844901532218996, 0.33691720527995384, 0.3355164271629707, 0.3355164271629707] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 5]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 30), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.016225594491698] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.016225594491698, 0.5981312440251598] ***
*** starting iteration: 2; err: [Inf, 2.016225594491698, 0.5981312440251598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684] ***
*** starting iteration: 3; err: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684, 0.4031537303724302] ***
*** starting iteration: 4; err: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684, 0.4031537303724302] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684, 0.4031537303724302, 0.3999852872761893] ***
*** starting iteration: 5; err: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684, 0.4031537303724302, 0.3999852872761893] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684, 0.4031537303724302, 0.3999852872761893, 0.3921871003909956] ***
*** starting iteration: 6; err: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684, 0.4031537303724302, 0.3999852872761893, 0.3921871003909956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684, 0.4031537303724302, 0.3999852872761893, 0.3921871003909956, 0.38646452524114866] ***
*** starting iteration: 7; err: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684, 0.4031537303724302, 0.3999852872761893, 0.3921871003909956, 0.38646452524114866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684, 0.4031537303724302, 0.3999852872761893, 0.3921871003909956, 0.38646452524114866, 0.38237810801805877] ***
*** starting iteration: 8; err: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684, 0.4031537303724302, 0.3999852872761893, 0.3921871003909956, 0.38646452524114866, 0.38237810801805877] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684, 0.4031537303724302, 0.3999852872761893, 0.3921871003909956, 0.38646452524114866, 0.38237810801805877, 0.38137808992836897] ***
*** starting iteration: 9; err: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684, 0.4031537303724302, 0.3999852872761893, 0.3921871003909956, 0.38646452524114866, 0.38237810801805877, 0.38137808992836897] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684, 0.4031537303724302, 0.3999852872761893, 0.3921871003909956, 0.38646452524114866, 0.38237810801805877, 0.38137808992836897, 0.38146839157827217] ***
*** finished computation of 3 references, err: [Inf, 2.016225594491698, 0.5981312440251598, 0.4167719969075684, 0.4031537303724302, 0.3999852872761893, 0.3921871003909956, 0.38646452524114866, 0.38237810801805877, 0.38137808992836897, 0.38146839157827217] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 8]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.7252860253922986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7252860253922986, 0.8428195002239353] ***
*** starting iteration: 2; err: [Inf, 2.7252860253922986, 0.8428195002239353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7252860253922986, 0.8428195002239353, 0.40678885664508313] ***
*** starting iteration: 3; err: [Inf, 2.7252860253922986, 0.8428195002239353, 0.40678885664508313] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7252860253922986, 0.8428195002239353, 0.40678885664508313, 0.3817173065555794] ***
*** finished computation of 3 references, err: [Inf, 2.7252860253922986, 0.8428195002239353, 0.40678885664508313, 0.3817173065555794] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 12]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8517525694933734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8517525694933734, 0.5663546235592973] ***
*** starting iteration: 2; err: [Inf, 0.8517525694933734, 0.5663546235592973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8517525694933734, 0.5663546235592973, 0.5662327732381535] ***
*** finished computation of 3 references, err: [Inf, 0.8517525694933734, 0.5663546235592973, 0.5662327732381535] ***
*** center 1: selecting labels [1] (freq >= 2) [from [23, 1, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 28]]
** centroid: 3, normalized-entropy: 0.9981341775041118, [(2, 31), (3, 28)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9173996209540699] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9173996209540699, 0.4520758220254369] ***
*** starting iteration: 2; err: [Inf, 0.9173996209540699, 0.4520758220254369] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9173996209540699, 0.4520758220254369, 0.4171786507377951] ***
*** starting iteration: 3; err: [Inf, 0.9173996209540699, 0.4520758220254369, 0.4171786507377951] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9173996209540699, 0.4520758220254369, 0.4171786507377951, 0.4089926212670376] ***
*** finished computation of 3 references, err: [Inf, 0.9173996209540699, 0.4520758220254369, 0.4171786507377951, 0.4089926212670376] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 11, 32]]
** centroid: 2, normalized-entropy: 0.8203636429576731, [(2, 11), (3, 32)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.3003000206598547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.3003000206598547, 0.41718825625856004] ***
*** finished computation of 7 references, err: [Inf, 2.3003000206598547, 0.41718825625856004] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 23]]
** centroid: 1, normalized-entropy: 0.9568886656798214, [(2, 14), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 4, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5188000019101682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5188000019101682, 0.2908591131177845] ***
*** finished computation of 7 references, err: [Inf, 0.5188000019101682, 0.2908591131177845] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 7]]
** centroid: 2, normalized-entropy: 1.0, [(2, 7), (3, 7)]
*** center 3: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 6, 5]]
** centroid: 5, normalized-entropy: 0.9940302114769566, [(2, 6), (3, 5)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5974000095740958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5974000095740958, 0.37208579642072265] ***
*** finished computation of 7 references, err: [Inf, 0.5974000095740958, 0.37208579642072265] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 1]]
** centroid: 1, normalized-entropy: 0.2222848306856879, [(2, 27), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 4]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 1), (3, 4)]
*** center 4: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 5, 18]]
** centroid: 6, normalized-entropy: 0.7553754125614286, [(2, 5), (3, 18)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46570000071079676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46570000071079676, 0.2728284443991843] ***
*** starting iteration: 2; err: [Inf, 0.46570000071079676, 0.2728284443991843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46570000071079676, 0.2728284443991843, 0.2632323733925814] ***
*** starting iteration: 3; err: [Inf, 0.46570000071079676, 0.2728284443991843, 0.2632323733925814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46570000071079676, 0.2728284443991843, 0.2632323733925814, 0.25429432705795263] ***
*** starting iteration: 4; err: [Inf, 0.46570000071079676, 0.2728284443991843, 0.2632323733925814, 0.25429432705795263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46570000071079676, 0.2728284443991843, 0.2632323733925814, 0.25429432705795263, 0.2486777461859339] ***
*** starting iteration: 5; err: [Inf, 0.46570000071079676, 0.2728284443991843, 0.2632323733925814, 0.25429432705795263, 0.2486777461859339] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46570000071079676, 0.2728284443991843, 0.2632323733925814, 0.25429432705795263, 0.2486777461859339, 0.24768311771990398] ***
*** finished computation of 7 references, err: [Inf, 0.46570000071079676, 0.2728284443991843, 0.2632323733925814, 0.25429432705795263, 0.2486777461859339, 0.24768311771990398] ***
*** center 1: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 11]]
** centroid: 5, normalized-entropy: 0.9949848281859699, [(2, 13), (3, 11)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 6, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7933000052156188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7933000052156188, 0.2799754734567447] ***
*** starting iteration: 2; err: [Inf, 0.7933000052156188, 0.2799754734567447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7933000052156188, 0.2799754734567447, 0.259497594447951] ***
*** starting iteration: 3; err: [Inf, 0.7933000052156188, 0.2799754734567447, 0.259497594447951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7933000052156188, 0.2799754734567447, 0.259497594447951, 0.2522791653574282] ***
*** starting iteration: 4; err: [Inf, 0.7933000052156188, 0.2799754734567447, 0.259497594447951, 0.2522791653574282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7933000052156188, 0.2799754734567447, 0.259497594447951, 0.2522791653574282, 0.24893412455813413] ***
*** starting iteration: 5; err: [Inf, 0.7933000052156188, 0.2799754734567447, 0.259497594447951, 0.2522791653574282, 0.24893412455813413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7933000052156188, 0.2799754734567447, 0.259497594447951, 0.2522791653574282, 0.24893412455813413, 0.2453904161814765] ***
*** starting iteration: 6; err: [Inf, 0.7933000052156188, 0.2799754734567447, 0.259497594447951, 0.2522791653574282, 0.24893412455813413, 0.2453904161814765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7933000052156188, 0.2799754734567447, 0.259497594447951, 0.2522791653574282, 0.24893412455813413, 0.2453904161814765, 0.24439158134714917] ***
*** finished computation of 7 references, err: [Inf, 0.7933000052156188, 0.2799754734567447, 0.259497594447951, 0.2522791653574282, 0.24893412455813413, 0.2453904161814765, 0.24439158134714917] ***
*** center 1: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 10]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.072700008551964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.072700008551964, 0.45346630991462505] ***
*** starting iteration: 2; err: [Inf, 1.072700008551964, 0.45346630991462505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676] ***
*** starting iteration: 3; err: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676, 0.36691424655011273] ***
*** starting iteration: 4; err: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676, 0.36691424655011273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676, 0.36691424655011273, 0.3362134551720641] ***
*** starting iteration: 5; err: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676, 0.36691424655011273, 0.3362134551720641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676, 0.36691424655011273, 0.3362134551720641, 0.29448983226387376] ***
*** starting iteration: 6; err: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676, 0.36691424655011273, 0.3362134551720641, 0.29448983226387376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676, 0.36691424655011273, 0.3362134551720641, 0.29448983226387376, 0.26517401485421627] ***
*** starting iteration: 7; err: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676, 0.36691424655011273, 0.3362134551720641, 0.29448983226387376, 0.26517401485421627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676, 0.36691424655011273, 0.3362134551720641, 0.29448983226387376, 0.26517401485421627, 0.2573163576308305] ***
*** starting iteration: 8; err: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676, 0.36691424655011273, 0.3362134551720641, 0.29448983226387376, 0.26517401485421627, 0.2573163576308305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676, 0.36691424655011273, 0.3362134551720641, 0.29448983226387376, 0.26517401485421627, 0.2573163576308305, 0.25221769112361037] ***
*** starting iteration: 9; err: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676, 0.36691424655011273, 0.3362134551720641, 0.29448983226387376, 0.26517401485421627, 0.2573163576308305, 0.25221769112361037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676, 0.36691424655011273, 0.3362134551720641, 0.29448983226387376, 0.26517401485421627, 0.2573163576308305, 0.25221769112361037, 0.2512944124154063] ***
*** finished computation of 7 references, err: [Inf, 1.072700008551964, 0.45346630991462505, 0.38863463186276676, 0.36691424655011273, 0.3362134551720641, 0.29448983226387376, 0.26517401485421627, 0.2573163576308305, 0.25221769112361037, 0.2512944124154063] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 3]]
** centroid: 4, normalized-entropy: 0.6098403047164005, [(2, 17), (3, 3)]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 5.64660000699954] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.64660000699954, 2.0102919757644417] ***
*** finished computation of 3 references, err: [Inf, 5.64660000699954, 2.0102919757644417] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 31]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 10), (3, 31)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [26, 25, 1]]
** centroid: 2, normalized-entropy: 0.9997226475394071, [(1, 26), (2, 25)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7666000058896995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7666000058896995, 0.5078693577687354] ***
*** finished computation of 3 references, err: [Inf, 0.7666000058896995, 0.5078693577687354] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 25]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 5), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 3]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 27), (3, 3)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8466999881186599] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8466999881186599, 0.9783244758499748] ***
*** finished computation of 3 references, err: [Inf, 1.8466999881186599, 0.9783244758499748] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 33]]
** centroid: 2, normalized-entropy: 0.998363672593813, [(2, 30), (3, 33)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [14, 3, 0]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(1, 14), (2, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7207301886876296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7207301886876296, 0.4441366706492248] ***
*** starting iteration: 2; err: [Inf, 0.7207301886876296, 0.4441366706492248] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7207301886876296, 0.4441366706492248, 0.4014138409603633] ***
*** starting iteration: 3; err: [Inf, 0.7207301886876296, 0.4441366706492248, 0.4014138409603633] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7207301886876296, 0.4441366706492248, 0.4014138409603633, 0.3853325778268949] ***
*** starting iteration: 4; err: [Inf, 0.7207301886876296, 0.4441366706492248, 0.4014138409603633, 0.3853325778268949] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7207301886876296, 0.4441366706492248, 0.4014138409603633, 0.3853325778268949, 0.3820006721458554] ***
*** starting iteration: 5; err: [Inf, 0.7207301886876296, 0.4441366706492248, 0.4014138409603633, 0.3853325778268949, 0.3820006721458554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7207301886876296, 0.4441366706492248, 0.4014138409603633, 0.3853325778268949, 0.3820006721458554, 0.3817886065665337] ***
*** finished computation of 3 references, err: [Inf, 0.7207301886876296, 0.4441366706492248, 0.4014138409603633, 0.3853325778268949, 0.3820006721458554, 0.3817886065665337] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 12]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.745596204971729] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.745596204971729, 0.3750763640085802] ***
*** starting iteration: 2; err: [Inf, 0.745596204971729, 0.3750763640085802] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.745596204971729, 0.3750763640085802, 0.35130287518900216] ***
*** starting iteration: 3; err: [Inf, 0.745596204971729, 0.3750763640085802, 0.35130287518900216] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.745596204971729, 0.3750763640085802, 0.35130287518900216, 0.3440297939687123] ***
*** starting iteration: 4; err: [Inf, 0.745596204971729, 0.3750763640085802, 0.35130287518900216, 0.3440297939687123] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.745596204971729, 0.3750763640085802, 0.35130287518900216, 0.3440297939687123, 0.33844901532218996] ***
*** starting iteration: 5; err: [Inf, 0.745596204971729, 0.3750763640085802, 0.35130287518900216, 0.3440297939687123, 0.33844901532218996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.745596204971729, 0.3750763640085802, 0.35130287518900216, 0.3440297939687123, 0.33844901532218996, 0.33691720527995384] ***
*** starting iteration: 6; err: [Inf, 0.745596204971729, 0.3750763640085802, 0.35130287518900216, 0.3440297939687123, 0.33844901532218996, 0.33691720527995384] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.745596204971729, 0.3750763640085802, 0.35130287518900216, 0.3440297939687123, 0.33844901532218996, 0.33691720527995384, 0.3355164271629707] ***
*** starting iteration: 7; err: [Inf, 0.745596204971729, 0.3750763640085802, 0.35130287518900216, 0.3440297939687123, 0.33844901532218996, 0.33691720527995384, 0.3355164271629707] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.745596204971729, 0.3750763640085802, 0.35130287518900216, 0.3440297939687123, 0.33844901532218996, 0.33691720527995384, 0.3355164271629707, 0.3355164271629707] ***
*** finished computation of 3 references, err: [Inf, 0.745596204971729, 0.3750763640085802, 0.35130287518900216, 0.3440297939687123, 0.33844901532218996, 0.33691720527995384, 0.3355164271629707, 0.3355164271629707] ***
*** center 1: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 5]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 30), (3, 5)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.079019532588129] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.079019532588129, 0.44121135173066295] ***
*** starting iteration: 2; err: [Inf, 1.079019532588129, 0.44121135173066295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.079019532588129, 0.44121135173066295, 0.41102970591731575] ***
*** starting iteration: 3; err: [Inf, 1.079019532588129, 0.44121135173066295, 0.41102970591731575] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.079019532588129, 0.44121135173066295, 0.41102970591731575, 0.3954009495918217] ***
*** starting iteration: 4; err: [Inf, 1.079019532588129, 0.44121135173066295, 0.41102970591731575, 0.3954009495918217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.079019532588129, 0.44121135173066295, 0.41102970591731575, 0.3954009495918217, 0.38556057586750725] ***
*** starting iteration: 5; err: [Inf, 1.079019532588129, 0.44121135173066295, 0.41102970591731575, 0.3954009495918217, 0.38556057586750725] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.079019532588129, 0.44121135173066295, 0.41102970591731575, 0.3954009495918217, 0.38556057586750725, 0.3818269797383023] ***
*** starting iteration: 6; err: [Inf, 1.079019532588129, 0.44121135173066295, 0.41102970591731575, 0.3954009495918217, 0.38556057586750725, 0.3818269797383023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.079019532588129, 0.44121135173066295, 0.41102970591731575, 0.3954009495918217, 0.38556057586750725, 0.3818269797383023, 0.38134111236153345] ***
*** finished computation of 3 references, err: [Inf, 1.079019532588129, 0.44121135173066295, 0.41102970591731575, 0.3954009495918217, 0.38556057586750725, 0.3818269797383023, 0.38134111236153345] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 9]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7359131440021168] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7359131440021168, 0.41189122776868603] ***
*** finished computation of 3 references, err: [Inf, 0.7359131440021168, 0.41189122776868603] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 38]]
** centroid: 1, normalized-entropy: 0.7682814090975241, [(2, 11), (3, 38)]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 24, 1]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7935013821474448] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7935013821474448, 0.4230851515862457] ***
*** finished computation of 3 references, err: [Inf, 0.7935013821474448, 0.4230851515862457] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 17]]
** centroid: 1, normalized-entropy: 0.9377342939868042, [(2, 31), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [40, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1673625417055218] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1673625417055218, 0.4020611963433109] ***
*** finished computation of 3 references, err: [Inf, 1.1673625417055218, 0.4020611963433109] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 11]]
** centroid: 3, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3786090561064343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3786090561064343, 0.19686740889602222] ***
*** starting iteration: 2; err: [Inf, 0.3786090561064343, 0.19686740889602222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3786090561064343, 0.19686740889602222, 0.19040518603730822] ***
*** starting iteration: 3; err: [Inf, 0.3786090561064343, 0.19686740889602222, 0.19040518603730822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3786090561064343, 0.19686740889602222, 0.19040518603730822, 0.18853822025665518] ***
*** starting iteration: 4; err: [Inf, 0.3786090561064343, 0.19686740889602222, 0.19040518603730822, 0.18853822025665518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3786090561064343, 0.19686740889602222, 0.19040518603730822, 0.18853822025665518, 0.1882505675032835] ***
*** finished computation of 7 references, err: [Inf, 0.3786090561064343, 0.19686740889602222, 0.19040518603730822, 0.18853822025665518, 0.1882505675032835] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 3, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 19]]
** centroid: 4, normalized-entropy: 0.2863969571159561, [(2, 1), (3, 19)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 3]]
** centroid: 5, normalized-entropy: 0.6962122601251459, [(2, 13), (3, 3)]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39927242441088606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39927242441088606, 0.17037999911173388] ***
*** starting iteration: 2; err: [Inf, 0.39927242441088606, 0.17037999911173388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39927242441088606, 0.17037999911173388, 0.16095473953239392] ***
*** starting iteration: 3; err: [Inf, 0.39927242441088606, 0.17037999911173388, 0.16095473953239392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39927242441088606, 0.17037999911173388, 0.16095473953239392, 0.16078699306667318] ***
*** finished computation of 7 references, err: [Inf, 0.39927242441088606, 0.17037999911173388, 0.16095473953239392, 0.16078699306667318] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 16]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 19, 6]]
** centroid: 6, normalized-entropy: 0.7950402793845225, [(2, 19), (3, 6)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4572348046822931] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4572348046822931, 0.18054543355854427] ***
*** starting iteration: 2; err: [Inf, 0.4572348046822931, 0.18054543355854427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4572348046822931, 0.18054543355854427, 0.16939076083474064] ***
*** starting iteration: 3; err: [Inf, 0.4572348046822931, 0.18054543355854427, 0.16939076083474064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4572348046822931, 0.18054543355854427, 0.16939076083474064, 0.16670687822097732] ***
*** starting iteration: 4; err: [Inf, 0.4572348046822931, 0.18054543355854427, 0.16939076083474064, 0.16670687822097732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4572348046822931, 0.18054543355854427, 0.16939076083474064, 0.16670687822097732, 0.16517984682010375] ***
*** starting iteration: 5; err: [Inf, 0.4572348046822931, 0.18054543355854427, 0.16939076083474064, 0.16670687822097732, 0.16517984682010375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4572348046822931, 0.18054543355854427, 0.16939076083474064, 0.16670687822097732, 0.16517984682010375, 0.16468254085246264] ***
*** finished computation of 7 references, err: [Inf, 0.4572348046822931, 0.18054543355854427, 0.16939076083474064, 0.16670687822097732, 0.16517984682010375, 0.16468254085246264] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 4]]
** centroid: 3, normalized-entropy: 0.8904916402194913, [(2, 9), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 5]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3946880020049551] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3946880020049551, 0.22782294439851847] ***
*** starting iteration: 2; err: [Inf, 0.3946880020049551, 0.22782294439851847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3946880020049551, 0.22782294439851847, 0.19928767981555878] ***
*** starting iteration: 3; err: [Inf, 0.3946880020049551, 0.22782294439851847, 0.19928767981555878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3946880020049551, 0.22782294439851847, 0.19928767981555878, 0.18468639772128675] ***
*** starting iteration: 4; err: [Inf, 0.3946880020049551, 0.22782294439851847, 0.19928767981555878, 0.18468639772128675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3946880020049551, 0.22782294439851847, 0.19928767981555878, 0.18468639772128675, 0.17628151478823997] ***
*** starting iteration: 5; err: [Inf, 0.3946880020049551, 0.22782294439851847, 0.19928767981555878, 0.18468639772128675, 0.17628151478823997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3946880020049551, 0.22782294439851847, 0.19928767981555878, 0.18468639772128675, 0.17628151478823997, 0.1698320821663363] ***
*** starting iteration: 6; err: [Inf, 0.3946880020049551, 0.22782294439851847, 0.19928767981555878, 0.18468639772128675, 0.17628151478823997, 0.1698320821663363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3946880020049551, 0.22782294439851847, 0.19928767981555878, 0.18468639772128675, 0.17628151478823997, 0.1698320821663363, 0.1696190668447109] ***
*** finished computation of 7 references, err: [Inf, 0.3946880020049551, 0.22782294439851847, 0.19928767981555878, 0.18468639772128675, 0.17628151478823997, 0.1698320821663363, 0.1696190668447109] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 17]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(2, 3), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4412826112368755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4412826112368755, 0.16671939356540139] ***
*** starting iteration: 2; err: [Inf, 0.4412826112368755, 0.16671939356540139] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4412826112368755, 0.16671939356540139, 0.1608785356554872] ***
*** starting iteration: 3; err: [Inf, 0.4412826112368755, 0.16671939356540139, 0.1608785356554872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4412826112368755, 0.16671939356540139, 0.1608785356554872, 0.16078699306667318] ***
*** finished computation of 7 references, err: [Inf, 0.4412826112368755, 0.16671939356540139, 0.1608785356554872, 0.16078699306667318] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 19, 6]]
** centroid: 1, normalized-entropy: 0.7950402793845225, [(2, 19), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 16]]
** centroid: 6, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42279561653180026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42279561653180026, 0.19424990246218493] ***
*** starting iteration: 2; err: [Inf, 0.42279561653180026, 0.19424990246218493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42279561653180026, 0.19424990246218493, 0.17438522249077884] ***
*** starting iteration: 3; err: [Inf, 0.42279561653180026, 0.19424990246218493, 0.17438522249077884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42279561653180026, 0.19424990246218493, 0.17438522249077884, 0.1678633765566383] ***
*** starting iteration: 4; err: [Inf, 0.42279561653180026, 0.19424990246218493, 0.17438522249077884, 0.1678633765566383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42279561653180026, 0.19424990246218493, 0.17438522249077884, 0.1678633765566383, 0.16065950955885377] ***
*** starting iteration: 5; err: [Inf, 0.42279561653180026, 0.19424990246218493, 0.17438522249077884, 0.1678633765566383, 0.16065950955885377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42279561653180026, 0.19424990246218493, 0.17438522249077884, 0.1678633765566383, 0.16065950955885377, 0.15919914555083753] ***
*** starting iteration: 6; err: [Inf, 0.42279561653180026, 0.19424990246218493, 0.17438522249077884, 0.1678633765566383, 0.16065950955885377, 0.15919914555083753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42279561653180026, 0.19424990246218493, 0.17438522249077884, 0.1678633765566383, 0.16065950955885377, 0.15919914555083753, 0.158740254182505] ***
*** finished computation of 7 references, err: [Inf, 0.42279561653180026, 0.19424990246218493, 0.17438522249077884, 0.1678633765566383, 0.16065950955885377, 0.15919914555083753, 0.158740254182505] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 8]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 18
iteration 2 finished
*** starting iteration: 1; err: [Inf, 2.3009521600391474] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3009521600391474, 0.7239169897723952] ***
*** starting iteration: 2; err: [Inf, 2.3009521600391474, 0.7239169897723952] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3009521600391474, 0.7239169897723952, 0.3913146605941169] ***
*** starting iteration: 3; err: [Inf, 2.3009521600391474, 0.7239169897723952, 0.3913146605941169] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3009521600391474, 0.7239169897723952, 0.3913146605941169, 0.3817886065665337] ***
*** finished computation of 3 references, err: [Inf, 2.3009521600391474, 0.7239169897723952, 0.3913146605941169, 0.3817886065665337] ***
*** center 1: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 2, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5861853259154779] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5861853259154779, 0.36064050208144594] ***
*** starting iteration: 2; err: [Inf, 0.5861853259154779, 0.36064050208144594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5861853259154779, 0.36064050208144594, 0.3504256900165248] ***
*** starting iteration: 3; err: [Inf, 0.5861853259154779, 0.36064050208144594, 0.3504256900165248] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5861853259154779, 0.36064050208144594, 0.3504256900165248, 0.3456884237660093] ***
*** finished computation of 3 references, err: [Inf, 0.5861853259154779, 0.36064050208144594, 0.3504256900165248, 0.3456884237660093] ***
*** center 1: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 27]]
** centroid: 3, normalized-entropy: 0.7335379291086666, [(2, 7), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6742178668826597] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6742178668826597, 0.3938673178037901] ***
*** starting iteration: 2; err: [Inf, 0.6742178668826597, 0.3938673178037901] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6742178668826597, 0.3938673178037901, 0.3825441030252486] ***
*** starting iteration: 3; err: [Inf, 0.6742178668826597, 0.3938673178037901, 0.3825441030252486] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6742178668826597, 0.3938673178037901, 0.3825441030252486, 0.3818269797383023] ***
*** finished computation of 3 references, err: [Inf, 0.6742178668826597, 0.3938673178037901, 0.3825441030252486, 0.3818269797383023] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 9]]
** centroid: 3, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.7092000151806688] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7092000151806688, 0.6910292751219788] ***
*** starting iteration: 2; err: [Inf, 2.7092000151806688, 0.6910292751219788] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7092000151806688, 0.6910292751219788, 0.549658782279217] ***
*** starting iteration: 3; err: [Inf, 2.7092000151806688, 0.6910292751219788, 0.549658782279217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7092000151806688, 0.6910292751219788, 0.549658782279217, 0.5469050812658202] ***
*** finished computation of 3 references, err: [Inf, 2.7092000151806688, 0.6910292751219788, 0.549658782279217, 0.5469050812658202] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.220600002797235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.220600002797235, 1.9236353490649805] ***
*** starting iteration: 2; err: [Inf, 6.220600002797235, 1.9236353490649805] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.220600002797235, 1.9236353490649805, 0.9401411036103171] ***
*** starting iteration: 3; err: [Inf, 6.220600002797235, 1.9236353490649805, 0.9401411036103171] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.220600002797235, 1.9236353490649805, 0.9401411036103171, 0.6164788329605644] ***
*** finished computation of 3 references, err: [Inf, 6.220600002797235, 1.9236353490649805, 0.9401411036103171, 0.6164788329605644] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [40, 2, 0]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(1, 40), (2, 2)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 17]]
** centroid: 3, normalized-entropy: 0.9440870182837795, [(2, 30), (3, 17)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.477299974601324] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.477299974601324, 1.7700839850067598] ***
*** starting iteration: 2; err: [Inf, 6.477299974601324, 1.7700839850067598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.477299974601324, 1.7700839850067598, 0.7982155533546644] ***
*** starting iteration: 3; err: [Inf, 6.477299974601324, 1.7700839850067598, 0.7982155533546644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.477299974601324, 1.7700839850067598, 0.7982155533546644, 0.596363423907072] ***
*** finished computation of 3 references, err: [Inf, 6.477299974601324, 1.7700839850067598, 0.7982155533546644, 0.596363423907072] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 1, 0]]
** centroid: 2, normalized-entropy: 0.18717625687320805, [(1, 34), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 3, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.7025000004928802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7025000004928802, 0.2816284712613907] ***
*** starting iteration: 2; err: [Inf, 0.7025000004928802, 0.2816284712613907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7025000004928802, 0.2816284712613907, 0.2563322419591275] ***
*** starting iteration: 3; err: [Inf, 0.7025000004928802, 0.2816284712613907, 0.2563322419591275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7025000004928802, 0.2816284712613907, 0.2563322419591275, 0.255275485935016] ***
*** starting iteration: 4; err: [Inf, 0.7025000004928802, 0.2816284712613907, 0.2563322419591275, 0.255275485935016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7025000004928802, 0.2816284712613907, 0.2563322419591275, 0.255275485935016, 0.25488761960549366] ***
*** finished computation of 7 references, err: [Inf, 0.7025000004928802, 0.2816284712613907, 0.2563322419591275, 0.255275485935016, 0.25488761960549366] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 12]]
** centroid: 4, normalized-entropy: 0.9910760598382222, [(2, 15), (3, 12)]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4322000045060952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4322000045060952, 0.27434081043070546] ***
*** starting iteration: 2; err: [Inf, 0.4322000045060952, 0.27434081043070546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4322000045060952, 0.27434081043070546, 0.26129712414303935] ***
*** starting iteration: 3; err: [Inf, 0.4322000045060952, 0.27434081043070546, 0.26129712414303935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4322000045060952, 0.27434081043070546, 0.26129712414303935, 0.25768602193576184] ***
*** starting iteration: 4; err: [Inf, 0.4322000045060952, 0.27434081043070546, 0.26129712414303935, 0.25768602193576184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4322000045060952, 0.27434081043070546, 0.26129712414303935, 0.25768602193576184, 0.253949681853027] ***
*** starting iteration: 5; err: [Inf, 0.4322000045060952, 0.27434081043070546, 0.26129712414303935, 0.25768602193576184, 0.253949681853027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4322000045060952, 0.27434081043070546, 0.26129712414303935, 0.25768602193576184, 0.253949681853027, 0.25332658475196046] ***
*** finished computation of 7 references, err: [Inf, 0.4322000045060952, 0.27434081043070546, 0.26129712414303935, 0.25768602193576184, 0.253949681853027, 0.25332658475196046] ***
*** center 1: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 7]]
** centroid: 6, normalized-entropy: 0.9640787648082293, [(2, 11), (3, 7)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5480000054067944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5480000054067944, 0.2692557885753843] ***
*** starting iteration: 2; err: [Inf, 0.5480000054067944, 0.2692557885753843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5480000054067944, 0.2692557885753843, 0.2586779421525729] ***
*** starting iteration: 3; err: [Inf, 0.5480000054067944, 0.2692557885753843, 0.2586779421525729] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5480000054067944, 0.2692557885753843, 0.2586779421525729, 0.2566377102182226] ***
*** starting iteration: 4; err: [Inf, 0.5480000054067944, 0.2692557885753843, 0.2586779421525729, 0.2566377102182226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5480000054067944, 0.2692557885753843, 0.2586779421525729, 0.2566377102182226, 0.2559892635428899] ***
*** finished computation of 7 references, err: [Inf, 0.5480000054067944, 0.2692557885753843, 0.2586779421525729, 0.2566377102182226, 0.2559892635428899] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 5]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(2, 3), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 4]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 21
iteration 4 finished
*** starting iteration: 1; err: [Inf, 1.1275340802527611] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1275340802527611, 0.38872997113331126] ***
*** finished computation of 3 references, err: [Inf, 1.1275340802527611, 0.38872997113331126] ***
*** center 1: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 2, normalized-entropy: 0.2222848306856879, [(2, 1), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 12]]
** centroid: 3, normalized-entropy: 0.828055725379504, [(2, 34), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7316539239049393] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7316539239049393, 0.3750763640085802] ***
*** finished computation of 3 references, err: [Inf, 0.7316539239049393, 0.3750763640085802] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [40, 1, 0]]
** centroid: 1, normalized-entropy: 0.16542703399626665, [(1, 40), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7933643626280609] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7933643626280609, 0.38137808992836897] ***
*** finished computation of 3 references, err: [Inf, 0.7933643626280609, 0.38137808992836897] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 25]]
** centroid: 1, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 8]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.059300006437586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.059300006437586, 0.6001444740314796] ***
*** finished computation of 3 references, err: [Inf, 1.059300006437586, 0.6001444740314796] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 15]]
** centroid: 1, normalized-entropy: 0.8812908992306927, [(2, 35), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2337999932580435] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2337999932580435, 0.5366720293249178] ***
*** finished computation of 3 references, err: [Inf, 1.2337999932580435, 0.5366720293249178] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.661899994336817] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.661899994336817, 0.5588309342606129] ***
*** finished computation of 3 references, err: [Inf, 1.661899994336817, 0.5588309342606129] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 3, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 22
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.7138667576303113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7138667576303113, 0.28820962217524104] ***
*** starting iteration: 2; err: [Inf, 0.7138667576303113, 0.28820962217524104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7138667576303113, 0.28820962217524104, 0.25013027912239477] ***
*** starting iteration: 3; err: [Inf, 0.7138667576303113, 0.28820962217524104, 0.25013027912239477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7138667576303113, 0.28820962217524104, 0.25013027912239477, 0.22309691703591092] ***
*** starting iteration: 4; err: [Inf, 0.7138667576303113, 0.28820962217524104, 0.25013027912239477, 0.22309691703591092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7138667576303113, 0.28820962217524104, 0.25013027912239477, 0.22309691703591092, 0.21064654821649756] ***
*** starting iteration: 5; err: [Inf, 0.7138667576303113, 0.28820962217524104, 0.25013027912239477, 0.22309691703591092, 0.21064654821649756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7138667576303113, 0.28820962217524104, 0.25013027912239477, 0.22309691703591092, 0.21064654821649756, 0.20669740890463376] ***
*** starting iteration: 6; err: [Inf, 0.7138667576303113, 0.28820962217524104, 0.25013027912239477, 0.22309691703591092, 0.21064654821649756, 0.20669740890463376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7138667576303113, 0.28820962217524104, 0.25013027912239477, 0.22309691703591092, 0.21064654821649756, 0.20669740890463376, 0.20522834948149504] ***
*** starting iteration: 7; err: [Inf, 0.7138667576303113, 0.28820962217524104, 0.25013027912239477, 0.22309691703591092, 0.21064654821649756, 0.20669740890463376, 0.20522834948149504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7138667576303113, 0.28820962217524104, 0.25013027912239477, 0.22309691703591092, 0.21064654821649756, 0.20669740890463376, 0.20522834948149504, 0.20522834948149504] ***
*** finished computation of 7 references, err: [Inf, 0.7138667576303113, 0.28820962217524104, 0.25013027912239477, 0.22309691703591092, 0.21064654821649756, 0.20669740890463376, 0.20522834948149504, 0.20522834948149504] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 14]]
** centroid: 5, normalized-entropy: 1.0, [(2, 14), (3, 14)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5924292790865359] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5924292790865359, 0.2397380318939733] ***
*** starting iteration: 2; err: [Inf, 0.5924292790865359, 0.2397380318939733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5924292790865359, 0.2397380318939733, 0.21310127579749183] ***
*** starting iteration: 3; err: [Inf, 0.5924292790865359, 0.2397380318939733, 0.21310127579749183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5924292790865359, 0.2397380318939733, 0.21310127579749183, 0.19816500614412455] ***
*** starting iteration: 4; err: [Inf, 0.5924292790865359, 0.2397380318939733, 0.21310127579749183, 0.19816500614412455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5924292790865359, 0.2397380318939733, 0.21310127579749183, 0.19816500614412455, 0.1944191647002509] ***
*** starting iteration: 5; err: [Inf, 0.5924292790865359, 0.2397380318939733, 0.21310127579749183, 0.19816500614412455, 0.1944191647002509] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5924292790865359, 0.2397380318939733, 0.21310127579749183, 0.19816500614412455, 0.1944191647002509, 0.19223741413222004] ***
*** starting iteration: 6; err: [Inf, 0.5924292790865359, 0.2397380318939733, 0.21310127579749183, 0.19816500614412455, 0.1944191647002509, 0.19223741413222004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5924292790865359, 0.2397380318939733, 0.21310127579749183, 0.19816500614412455, 0.1944191647002509, 0.19223741413222004, 0.1914308057758697] ***
*** finished computation of 7 references, err: [Inf, 0.5924292790865359, 0.2397380318939733, 0.21310127579749183, 0.19816500614412455, 0.1944191647002509, 0.19223741413222004, 0.1914308057758697] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 6]]
** centroid: 6, normalized-entropy: 0.8812908992306927, [(2, 14), (3, 6)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7620523968630036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7620523968630036, 0.2968718769893832] ***
*** starting iteration: 2; err: [Inf, 0.7620523968630036, 0.2968718769893832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7620523968630036, 0.2968718769893832, 0.2593164988070005] ***
*** starting iteration: 3; err: [Inf, 0.7620523968630036, 0.2968718769893832, 0.2593164988070005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7620523968630036, 0.2968718769893832, 0.2593164988070005, 0.23989901686197496] ***
*** starting iteration: 4; err: [Inf, 0.7620523968630036, 0.2968718769893832, 0.2593164988070005, 0.23989901686197496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7620523968630036, 0.2968718769893832, 0.2593164988070005, 0.23989901686197496, 0.21752076939385043] ***
*** starting iteration: 5; err: [Inf, 0.7620523968630036, 0.2968718769893832, 0.2593164988070005, 0.23989901686197496, 0.21752076939385043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7620523968630036, 0.2968718769893832, 0.2593164988070005, 0.23989901686197496, 0.21752076939385043, 0.20629664744625906] ***
*** starting iteration: 6; err: [Inf, 0.7620523968630036, 0.2968718769893832, 0.2593164988070005, 0.23989901686197496, 0.21752076939385043, 0.20629664744625906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7620523968630036, 0.2968718769893832, 0.2593164988070005, 0.23989901686197496, 0.21752076939385043, 0.20629664744625906, 0.2033920330576161] ***
*** starting iteration: 7; err: [Inf, 0.7620523968630036, 0.2968718769893832, 0.2593164988070005, 0.23989901686197496, 0.21752076939385043, 0.20629664744625906, 0.2033920330576161] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7620523968630036, 0.2968718769893832, 0.2593164988070005, 0.23989901686197496, 0.21752076939385043, 0.20629664744625906, 0.2033920330576161, 0.2025619134760126] ***
*** finished computation of 7 references, err: [Inf, 0.7620523968630036, 0.2968718769893832, 0.2593164988070005, 0.23989901686197496, 0.21752076939385043, 0.20629664744625906, 0.2033920330576161, 0.2025619134760126] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 8]]
** centroid: 3, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
*** center 4: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 5]]
** centroid: 5, normalized-entropy: 0.9910760598382222, [(2, 4), (3, 5)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 24
iteration 6 finished
*** starting iteration: 1; err: [Inf, 3.422399995458765] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.422399995458765, 1.477737456954829] ***
*** finished computation of 3 references, err: [Inf, 3.422399995458765, 1.477737456954829] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 38]]
** centroid: 2, normalized-entropy: 0.8595316914502928, [(2, 15), (3, 38)]
*** center 3: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.099900016213406] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.099900016213406, 1.160714075383084] ***
*** finished computation of 3 references, err: [Inf, 6.099900016213406, 1.160714075383084] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [40, 3, 0]]
** centroid: 1, normalized-entropy: 0.3650551896402848, [(1, 40), (2, 3)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 11]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0660999957372996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0660999957372996, 0.5552180146231703] ***
*** finished computation of 3 references, err: [Inf, 1.0660999957372996, 0.5552180146231703] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 7]]
** centroid: 1, normalized-entropy: 0.699772221773307, [(2, 30), (3, 7)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 26]]
** centroid: 2, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1344811165967656] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1344811165967656, 0.514839528932197] ***
*** finished computation of 3 references, err: [Inf, 1.1344811165967656, 0.514839528932197] ***
*** center 1: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 27, 8]]
** centroid: 2, normalized-entropy: 0.775512658133148, [(2, 27), (3, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 31]]
** centroid: 3, normalized-entropy: 0.7320666900931937, [(2, 8), (3, 31)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7550221388749587] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7550221388749587, 0.34738814781773497] ***
*** finished computation of 3 references, err: [Inf, 0.7550221388749587, 0.34738814781773497] ***
*** center 1: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 26]]
** centroid: 2, normalized-entropy: 0.7455178428108284, [(2, 7), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 2]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 25), (3, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0550269836661499] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0550269836661499, 0.6503065319077769] ***
*** finished computation of 3 references, err: [Inf, 1.0550269836661499, 0.6503065319077769] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 33]]
** centroid: 2, normalized-entropy: 0.998363672593813, [(2, 30), (3, 33)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [16, 3, 0]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(1, 16), (2, 3)]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 24)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 26
iteration 7 finished
*** starting iteration: 1; err: [Inf, 3.796890637284686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.796890637284686, 0.7012706791114378] ***
*** starting iteration: 2; err: [Inf, 3.796890637284686, 0.7012706791114378] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.796890637284686, 0.7012706791114378, 0.6894652256610939] ***
*** starting iteration: 3; err: [Inf, 3.796890637284686, 0.7012706791114378, 0.6894652256610939] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.796890637284686, 0.7012706791114378, 0.6894652256610939, 0.5018298680935093] ***
*** starting iteration: 4; err: [Inf, 3.796890637284686, 0.7012706791114378, 0.6894652256610939, 0.5018298680935093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.796890637284686, 0.7012706791114378, 0.6894652256610939, 0.5018298680935093, 0.3886922150661667] ***
*** starting iteration: 5; err: [Inf, 3.796890637284686, 0.7012706791114378, 0.6894652256610939, 0.5018298680935093, 0.3886922150661667] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.796890637284686, 0.7012706791114378, 0.6894652256610939, 0.5018298680935093, 0.3886922150661667, 0.3826384913564152] ***
*** starting iteration: 6; err: [Inf, 3.796890637284686, 0.7012706791114378, 0.6894652256610939, 0.5018298680935093, 0.3886922150661667, 0.3826384913564152] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.796890637284686, 0.7012706791114378, 0.6894652256610939, 0.5018298680935093, 0.3886922150661667, 0.3826384913564152, 0.3824642786722333] ***
*** finished computation of 3 references, err: [Inf, 3.796890637284686, 0.7012706791114378, 0.6894652256610939, 0.5018298680935093, 0.3886922150661667, 0.3826384913564152, 0.3824642786722333] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 28]]
** centroid: 1, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 2, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.7320916860006714] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7320916860006714, 0.77520844235334] ***
*** starting iteration: 2; err: [Inf, 2.7320916860006714, 0.77520844235334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7320916860006714, 0.77520844235334, 0.3473231963557915] ***
*** starting iteration: 3; err: [Inf, 2.7320916860006714, 0.77520844235334, 0.3473231963557915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7320916860006714, 0.77520844235334, 0.3473231963557915, 0.3391348643569079] ***
*** starting iteration: 4; err: [Inf, 2.7320916860006714, 0.77520844235334, 0.3473231963557915, 0.3391348643569079] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7320916860006714, 0.77520844235334, 0.3473231963557915, 0.3391348643569079, 0.33844901532218996] ***
*** finished computation of 3 references, err: [Inf, 2.7320916860006714, 0.77520844235334, 0.3473231963557915, 0.3391348643569079, 0.33844901532218996] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 6]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
*** center 3: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0043150629167712] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0043150629167712, 0.6483731919147867] ***
*** starting iteration: 2; err: [Inf, 1.0043150629167712, 0.6483731919147867] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0043150629167712, 0.6483731919147867, 0.6464696104421095] ***
*** starting iteration: 3; err: [Inf, 1.0043150629167712, 0.6483731919147867, 0.6464696104421095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0043150629167712, 0.6483731919147867, 0.6464696104421095, 0.6452124699502255] ***
*** starting iteration: 4; err: [Inf, 1.0043150629167712, 0.6483731919147867, 0.6464696104421095, 0.6452124699502255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0043150629167712, 0.6483731919147867, 0.6464696104421095, 0.6452124699502255, 0.6445781012556274] ***
*** finished computation of 3 references, err: [Inf, 1.0043150629167712, 0.6483731919147867, 0.6464696104421095, 0.6452124699502255, 0.6445781012556274] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 33]]
** centroid: 1, normalized-entropy: 0.9992954443621548, [(2, 31), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [18, 2, 0]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(1, 18), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.201400022010478] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.201400022010478, 0.7307187413810456] ***
*** starting iteration: 2; err: [Inf, 5.201400022010478, 0.7307187413810456] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.201400022010478, 0.7307187413810456, 0.5810882556571957] ***
*** starting iteration: 3; err: [Inf, 5.201400022010478, 0.7307187413810456, 0.5810882556571957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.201400022010478, 0.7307187413810456, 0.5810882556571957, 0.5743709503616681] ***
*** starting iteration: 4; err: [Inf, 5.201400022010478, 0.7307187413810456, 0.5810882556571957, 0.5743709503616681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.201400022010478, 0.7307187413810456, 0.5810882556571957, 0.5743709503616681, 0.5663353654435679] ***
*** starting iteration: 5; err: [Inf, 5.201400022010478, 0.7307187413810456, 0.5810882556571957, 0.5743709503616681, 0.5663353654435679] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.201400022010478, 0.7307187413810456, 0.5810882556571957, 0.5743709503616681, 0.5663353654435679, 0.5548474895485188] ***
*** starting iteration: 6; err: [Inf, 5.201400022010478, 0.7307187413810456, 0.5810882556571957, 0.5743709503616681, 0.5663353654435679, 0.5548474895485188] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.201400022010478, 0.7307187413810456, 0.5810882556571957, 0.5743709503616681, 0.5663353654435679, 0.5548474895485188, 0.5509762630844476] ***
*** starting iteration: 7; err: [Inf, 5.201400022010478, 0.7307187413810456, 0.5810882556571957, 0.5743709503616681, 0.5663353654435679, 0.5548474895485188, 0.5509762630844476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.201400022010478, 0.7307187413810456, 0.5810882556571957, 0.5743709503616681, 0.5663353654435679, 0.5548474895485188, 0.5509762630844476, 0.5477896608150116] ***
*** starting iteration: 8; err: [Inf, 5.201400022010478, 0.7307187413810456, 0.5810882556571957, 0.5743709503616681, 0.5663353654435679, 0.5548474895485188, 0.5509762630844476, 0.5477896608150116] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.201400022010478, 0.7307187413810456, 0.5810882556571957, 0.5743709503616681, 0.5663353654435679, 0.5548474895485188, 0.5509762630844476, 0.5477896608150116, 0.5469050812658202] ***
*** finished computation of 3 references, err: [Inf, 5.201400022010478, 0.7307187413810456, 0.5810882556571957, 0.5743709503616681, 0.5663353654435679, 0.5548474895485188, 0.5509762630844476, 0.5477896608150116, 0.5469050812658202] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.564999995149504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.564999995149504, 0.4889219428263008] ***
*** starting iteration: 2; err: [Inf, 0.564999995149504, 0.4889219428263008] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.564999995149504, 0.4889219428263008, 0.4889219428263008] ***
*** finished computation of 3 references, err: [Inf, 0.564999995149504, 0.4889219428263008, 0.4889219428263008] ***
*** center 1: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 6]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0821999922371726] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0821999922371726, 0.5959688877065209] ***
*** starting iteration: 2; err: [Inf, 1.0821999922371726, 0.5959688877065209] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0821999922371726, 0.5959688877065209, 0.5436198313268428] ***
*** starting iteration: 3; err: [Inf, 1.0821999922371726, 0.5959688877065209, 0.5436198313268428] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0821999922371726, 0.5959688877065209, 0.5436198313268428, 0.5375074820681738] ***
*** starting iteration: 4; err: [Inf, 1.0821999922371726, 0.5959688877065209, 0.5436198313268428, 0.5375074820681738] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0821999922371726, 0.5959688877065209, 0.5436198313268428, 0.5375074820681738, 0.5367489335954991] ***
*** finished computation of 3 references, err: [Inf, 1.0821999922371726, 0.5959688877065209, 0.5436198313268428, 0.5375074820681738, 0.5367489335954991] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 9]]
** centroid: 2, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 26)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667, 0.8866666666666666, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 27
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.3268598842084641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3268598842084641, 0.1933726716443217] ***
*** finished computation of 7 references, err: [Inf, 0.3268598842084641, 0.1933726716443217] ***
*** center 1: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 6]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 5, 11]]
** centroid: 4, normalized-entropy: 0.8960382325345574, [(2, 5), (3, 11)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 5, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26690902586783544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26690902586783544, 0.1754498893375739] ***
*** finished computation of 7 references, err: [Inf, 0.26690902586783544, 0.1754498893375739] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 7]]
** centroid: 1, normalized-entropy: 0.9886994082884974, [(2, 9), (3, 7)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6472962718337625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6472962718337625, 0.23862033479332442] ***
*** finished computation of 7 references, err: [Inf, 0.6472962718337625, 0.23862033479332442] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 23]]
** centroid: 4, normalized-entropy: 0.9677884628267678, [(2, 15), (3, 23)]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 27)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667, 0.8866666666666666, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 27
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 1), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.342857142857143, 2.9428571428571426, 4.6499999999999995, 1.4714285714285715], [6.2043478260869565, 2.869565217391304, 5.226086956521739, 1.9652173913043476], [4.929166666666666, 3.216666666666667, 1.5874999999999997, 0.31250000000000006], [5.643478260869566, 2.900000000000001, 3.5652173913043486, 1.0652173913043477], [5.5, 2.4, 3.8, 1.1], [7.2875000000000005, 3.0125, 6.125, 2.0624999999999996], [7.6000000000000005, 3.733333333333333, 6.3999999999999995, 2.2333333333333334], [7.7, 3.8, 6.7, 2.2]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 2, 3, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.516666666666666, 2.6833333333333336, 5.516666666666667, 1.6500000000000001], [6.085714285714287, 2.7571428571428567, 4.728571428571429, 1.5], [6.014285714285714, 2.757142857142857, 4.957142857142856, 1.8285714285714287], [5.005, 3.4325, 1.4849999999999999, 0.2375], [5.663636363636365, 2.6954545454545458, 4.072727272727273, 1.25], [6.650000000000001, 3.1, 4.683333333333334, 1.5166666666666666], [6.7, 3.08, 5.2, 2.1399999999999997], [6.516666666666667, 3.0333333333333337, 5.750000000000001, 2.2833333333333337], [7.625, 3.45, 6.5249999999999995, 2.25]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 1, 2, 2, 3, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.841176470588235, 2.7352941176470593, 4.302941176470588, 1.4], [4.544444444444444, 3.0555555555555554, 1.3, 0.2111111111111111], [7.0, 3.2, 4.7, 1.4], [6.85, 2.95, 5.7, 1.9], [5.136, 3.5120000000000005, 1.528, 0.25600000000000006], [7.1, 3.0, 5.9, 2.1], [6.5200000000000005, 3.1, 4.78, 1.5599999999999998], [6.250000000000001, 2.95, 5.238888888888888, 2.0111111111111106], [7.666666666666667, 2.7999999999999994, 6.733333333333333, 2.1333333333333333]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 2, 3, 1, 3, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[34, 18, 9, 25, 13, 23, 31, 1, 28, 27, 27, 48, 1, 12, 25, 28, 4, 40, 1, 37, 28, 21, 44, 23, 30, 32, 31, 38, 43, 29, 38, 21, 24, 33, 13, 39, 44, 28, 32, 2, 20, 45, 29, 25, 25, 40, 19, 43, 49, 12, 36, 47, 27, 31, 33, 26, 1, 40, 43, 1, 1, 11, 1, 9, 28, 24, 28, 29, 33, 37, 18, 30, 27, 39, 13, 36, 80, 33, 13, 28, 29, 15, 23, 40, 24, 27, 52, 31, 20, 59, 52, 49, 29, 22, 1, 30, 40, 47, 26, 43, 33, 48, 30, 23, 18, 35, 26, 18, 40, 31, 21, 29, 39, 31, 41, 47, 44, 20, 35, 32, 30, 27, 56, 25, 30, 16, 30, 26, 26, 23, 36, 21, 39, 34, 40, 32, 25, 45, 24, 40, 37, 25, 35, 47, 45, 23, 27, 29, 38, 42, 34, 31, 27, 53, 25, 40, 43, 37, 56, 32, 46, 57, 27, 47, 40, 36, 37, 47, 57, 35, 41, 41, 24, 24, 34, 47, 26, 40, 31, 28, 39, 16, 34, 35, 28, 46, 45, 37, 20, 25, 24, 41, 31, 36, 42, 35, 48, 24, 19, 31, 47, 29, 43, 62, 38, 36, 21, 51, 39, 54, 42, 2, 43, 31, 16, 37, 30, 30, 16, 30, 1, 47, 39, 32, 33, 35, 44, 64, 44, 40, 51, 31, 13, 37, 34, 27, 34, 44, 39, 75, 24, 65, 50, 41, 56, 52, 26, 27, 38, 47, 20, 37, 40, 69, 38, 30, 12, 46, 49, 38, 23, 10, 46, 27, 16, 55, 21, 42, 27, 51, 44, 35, 49, 39, 46, 79, 48, 47, 29, 37, 37, 47, 30, 3, 46, 37, 63, 37, 39, 46, 22, 45, 45, 44, 30, 40, 44, 40, 24, 37]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.601, speedup = 0.47931032860758066, eval_ratio = 0.041587)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.38194444444444464,"recall":0.38194444444444464,"f1":null,"seconds":7.07767903804779e-5,"exhaustive_search_seconds":0.00039858557283878326,"evaluations":339.0390625,"distances_sum":1812.271392802832}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5364583333333335,"recall":0.5364583333333335,"f1":0.5364583333333335,"seconds":0.00010373443365097046,"exhaustive_search_seconds":0.00039858557283878326,"evaluations":377.1875,"distances_sum":1701.1867132438647}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6501736111111113,"recall":0.6501736111111113,"f1":0.6501736111111113,"seconds":0.00014207325875759125,"exhaustive_search_seconds":0.00039858557283878326,"evaluations":415.5390625,"distances_sum":1654.9898107035265}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7222222222222215,"recall":0.7222222222222215,"f1":0.7222222222222215,"seconds":0.0001688823103904724,"exhaustive_search_seconds":0.00039858557283878326,"evaluations":452.234375,"distances_sum":1632.6935033188302}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7717013888888885,"recall":0.7717013888888885,"f1":0.7717013888888885,"seconds":0.00020113401114940643,"exhaustive_search_seconds":0.00039858557283878326,"evaluations":490.390625,"distances_sum":1617.3027437873309}
KCenters.DeloneInvIndex> reached performance {"precision":0.8098958333333328,"recall":0.8098958333333328,"f1":0.8098958333333328,"seconds":0.00023346766829490662,"exhaustive_search_seconds":0.00039858557283878326,"evaluations":527.5625,"distances_sum":1607.160239105949}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8059999999999998, speedup = 2.0766158204179788, eval_ratio = 0.053412)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
