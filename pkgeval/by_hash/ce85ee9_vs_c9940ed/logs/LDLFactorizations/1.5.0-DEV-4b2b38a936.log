Julia Version 1.5.0-DEV.145
Commit 4b2b38a936 (2020-01-21 22:14 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed LDLFactorizations ─ v0.4.0
 Installed AMD ─────────────── v0.3.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [40e66cde] + LDLFactorizations v0.4.0
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [14f7f29c] + AMD v0.3.1
  [40e66cde] + LDLFactorizations v0.4.0
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [8dfed614] + Test 
   Testing LDLFactorizations
  Updating `/tmp/jl_xKTIPW/Project.toml`
 [no changes]
  Updating `/tmp/jl_xKTIPW/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_xKTIPW/Project.toml`
  [14f7f29c] AMD v0.3.1
  [40e66cde] LDLFactorizations v0.4.0
  [37e2e46d] LinearAlgebra 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
ERROR: LoadError: syntax: Assignment to `A` in top-level block is ambiguous because an outer global binding by the same name already exists. Use `global A` to assign to the outer global `A` variable or use `local A` to force a new local by the same name.
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/LDLFactorizations/dSWmk/test/runtests.jl:32
 [2] include(::String) at ./client.jl:439
 [3] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/LDLFactorizations/dSWmk/test/runtests.jl:32
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/LDLFactorizations/dSWmk/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/LDLFactorizations/dSWmk/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package LDLFactorizations errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
