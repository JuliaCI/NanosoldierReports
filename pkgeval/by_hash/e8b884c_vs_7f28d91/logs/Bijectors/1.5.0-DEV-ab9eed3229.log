Julia Version 1.5.0-DEV.488
Commit ab9eed3229 (2020-03-19 14:30 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ───────────────────── v1.0.1
  Installed Reexport ───────────────────── v0.2.0
  Installed PDMats ─────────────────────── v0.9.12
  Installed OpenBLAS_jll ───────────────── v0.3.7+7
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Arpack_jll ─────────────────── v3.5.0+2
  Installed Bijectors ──────────────────── v0.6.3
  Installed Distributions ──────────────── v0.22.6
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Rmath ──────────────────────── v0.6.1
  Installed BinaryProvider ─────────────── v0.5.8
  Installed Missings ───────────────────── v0.4.3
  Installed QuadGK ─────────────────────── v2.3.1
  Installed SpecialFunctions ───────────── v0.10.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed Arpack ─────────────────────── v0.4.0
  Installed NNlib ──────────────────────── v0.6.6
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed MappedArrays ───────────────── v0.2.2
  Installed DataStructures ─────────────── v0.17.10
  Installed Roots ──────────────────────── v1.0.0
  Installed DataAPI ────────────────────── v1.1.0
  Installed CompilerSupportLibraries_jll ─ v0.3.0+0
  Installed Compat ─────────────────────── v3.8.0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed FillArrays ─────────────────── v0.8.5
  Installed OrderedCollections ─────────── v1.1.0
  Installed StatsBase ──────────────────── v0.32.2
#=#=#                                                                                                                                                    0.1%#                                                                          2.6%####                                                                       6.2%#######                                                                   10.9%############                                                              17.5%##################                                                        25.1%###################                                                       27.1%###########################                                               37.9%####################################                                      51.0%#################################################                         69.2%##################################################################        92.3%######################################################################## 100.0%
#=#=#                                                                         #######                                                                   10.8%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ##                                                                         3.7%#######                                                                   10.2%##############                                                            20.2%######################                                                    31.5%##################################                                        48.0%##########################################                                58.7%###########################################################               82.0%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   76274a88 + Bijectors v0.6.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   dce04be8 + ArgCheck v2.0.0
   7d9fca2a + Arpack v0.4.0
   68821587 + Arpack_jll v3.5.0+2
   76274a88 + Bijectors v0.6.3
   b99e7846 + BinaryProvider v0.5.8
   34da2185 + Compat v3.8.0
   e66e0078 + CompilerSupportLibraries_jll v0.3.0+0
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   31c24e10 + Distributions v0.22.6
   1a297f60 + FillArrays v0.8.5
   dbb5928d + MappedArrays v0.2.2
   e1d29d7a + Missings v0.4.3
   872c559c + NNlib v0.6.6
   4536629a + OpenBLAS_jll v0.3.7+7
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   90014a1f + PDMats v0.9.12
   1fd47b50 + QuadGK v2.3.1
   189a3867 + Reexport v0.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   f2b01f46 + Roots v1.0.0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8bb1440f + DelimitedFiles
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   a63ad114 + Mmap
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   1a1011a3 + SharedArrays
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   4607b0f0 + SuiteSparse
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
   Building NNlib → `~/.julia/packages/NNlib/FAI3o/deps/build.log`
    Testing Bijectors
#=#=#                                                                         ###########################################                               59.8%######################################################################## 100.0%
#=#=#                                                                         ############                                                              16.7%###############################                                           44.4%#############################################################             85.2%######################################################################## 100.0%
     Status `/tmp/jl_4DsQmK/Project.toml`
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.6.3
   861a8166 Combinatorics v0.7.0
   34da2185 Compat v3.8.0
   31c24e10 Distributions v0.22.6
   ced4e74d DistributionsAD v0.4.6
   f6369f11 ForwardDiff v0.10.9
   dbb5928d MappedArrays v0.2.2
   872c559c NNlib v0.6.6
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   37e2e3b7 ReverseDiff v1.1.0
   f2b01f46 Roots v1.0.0
   4c63d2b9 StatsFuns v0.9.4
   9f7883ad Tracker v0.2.6
   e88e6eb3 Zygote v0.4.10
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_4DsQmK/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   79e6a3ab Adapt v1.0.1
   dce04be8 ArgCheck v2.0.0
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4c555306 ArrayLayouts v0.1.5
   76274a88 Bijectors v0.6.3
   b99e7846 BinaryProvider v0.5.8
   861a8166 Combinatorics v0.7.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.3.0+0
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   31c24e10 Distributions v0.22.6
   ced4e74d DistributionsAD v0.4.6
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   7869d1d1 IRTools v0.3.1
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+7
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   90014a1f PDMats v0.9.12
   f27b6e38 Polynomials v0.6.1
   1fd47b50 QuadGK v2.3.1
   3cdcf5f2 RecipesBase v0.8.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   37e2e3b7 ReverseDiff v1.1.0
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v1.0.0
   a2af1166 SortingAlgorithms v0.3.1
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   9f7883ad Tracker v0.2.6
   e88e6eb3 Zygote v0.4.10
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
WARNING: could not import Compiler.just_construct_ssa into Wrap
┌ Warning: Package Bijectors does not have ReverseDiff in its dependencies:
│ - If you have Bijectors checked out for development and have
│   added ReverseDiff as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with Bijectors
└ Loading ReverseDiff into Bijectors from project dependency, future warnings for Bijectors are suppressed.
Test Summary: | Pass  Total
Interface     | 1298   1298
Test Summary: | Pass  Total
scalar        |  275    275
Test Summary: | Pass  Total
vector        |   82     82
Test Summary: | Pass  Total
matrix        |   22     22
Test Summary:       | Pass  Total
Dirichlet Jacobians |   20     20
Test Summary:       | Pass  Total
InvertibleBatchNorm |    7      7
Test Summary: | Pass  Total
PlanarLayer   |   13     13
Test Summary: | Pass  Total
RadialLayer   |   13     13
Test Summary: | Pass  Total
Flows         |    5      5
Test Summary: | Pass  Total
Permute       |   20     20

==================================================

Testing: Univariate discrete distributions

[ Info: Testing: Bernoulli
┌ Info: Testing: (a, b)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:94 =#
│         BetaBinomial(10, a, b)
└     end
┌ Info: Testing: (a, b)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:95 =#
│         BetaBinomial(10, a, b)
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:97 =#
│         Binomial(10, p)
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:98 =#
│         Binomial(10, p)
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:100 =#
│         Categorical(p / sum(p))
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:101 =#
│         Categorical(p / sum(p))
└     end
[ Info: Testing: Geometric
[ Info: Testing: NegativeBinomial
[ Info: Testing: Poisson
[ Info: Testing: Skellam
[ Info: Testing: PoissonBinomial
[ Info: Testing: TuringPoissonBinomial

==================================================

Testing: Univariate continuous distributions

[ Info: Testing: Arcsine
[ Info: Testing: Beta
[ Info: Testing: BetaPrime
[ Info: Testing: Biweight
[ Info: Testing: Cauchy
[ Info: Testing: Chi
[ Info: Testing: Chisq
[ Info: Testing: Cosine
[ Info: Testing: Epanechnikov
┌ Info: Testing: s->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:170 =#
│         Erlang(1, s)
└     end
[ Info: Testing: Exponential
[ Info: Testing: FDist
[ Info: Testing: Frechet
[ Info: Testing: Gamma
[ Info: Testing: GeneralizedExtremeValue
[ Info: Testing: GeneralizedPareto
[ Info: Testing: Gumbel
[ Info: Testing: InverseGamma
[ Info: Testing: InverseGaussian
[ Info: Testing: Kolmogorov
[ Info: Testing: Laplace
[ Info: Testing: Levy
┌ Info: Testing: (a, b)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:241 =#
│         LocationScale(a, b, Normal())
└     end
[ Info: Testing: Logistic
[ Info: Testing: LogitNormal
[ Info: Testing: LogNormal
[ Info: Testing: Normal
[ Info: Testing: NormalCanon
[ Info: Testing: NormalInverseGaussian
[ Info: Testing: Pareto
[ Info: Testing: PGeneralizedGaussian
[ Info: Testing: Rayleigh
[ Info: Testing: Semicircle
[ Info: Testing: SymTriangularDist
[ Info: Testing: TDist
[ Info: Testing: TriangularDist
[ Info: Testing: Triweight
┌ Info: Testing: (mu, sigma, l, u)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:316 =#
│         truncated(Normal(mu, sigma), l, u)
└     end
[ Info: Testing: Uniform
[ Info: Testing: TuringUniform
[ Info: Testing: VonMises
[ Info: Testing: Weibull

==================================================

Testing: Multivariate discrete distributions

┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:358 =#
│         Multinomial(2, p / sum(p))
└     end
┌ Info: Testing: (var"##x#353",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Bernoulli(var"##x#353"), 2)
└     end
┌ Info: Testing: (var"##x#354",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Bernoulli(var"##x#354"), 2)
└     end
┌ Info: Testing: (var"##x#355", var"##x#356")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist((((a, b)->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:94 =#
│                     BetaBinomial(10, a, b)
│                 end))(var"##x#355", var"##x#356"), 2)
└     end
┌ Info: Testing: (var"##x#357",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:97 =#
│                     Binomial(10, p)
│                 end))(var"##x#357"), 2)
└     end
┌ Info: Testing: (var"##x#358",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:100 =#
│                     Categorical(p / sum(p))
│                 end))(var"##x#358"), 2)
└     end
┌ Info: Testing: (var"##x#359",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Geometric(var"##x#359"), 2)
└     end
┌ Info: Testing: (var"##x#360", var"##x#361")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(NegativeBinomial(var"##x#360", var"##x#361"), 2)
└     end
┌ Info: Testing: (var"##x#362",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Poisson(var"##x#362"), 2)
└     end
┌ Info: Testing: (var"##x#363", var"##x#364")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Skellam(var"##x#363", var"##x#364"), 2)
└     end
┌ Info: Testing: (var"##x#365",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(PoissonBinomial(var"##x#365"), 2)
└     end
┌ Info: Testing: (var"##x#366",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(TuringPoissonBinomial(var"##x#366"), 2)
└     end
┌ Info: Testing: (var"##x#367",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#367"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#368",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#368"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#369", var"##x#370")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill((((a, b)->begin
│                             #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:94 =#
│                             BetaBinomial(10, a, b)
│                         end))(var"##x#369", var"##x#370"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#371",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:97 =#
│                             Binomial(10, p)
│                         end))(var"##x#371"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#372",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:100 =#
│                             Categorical(p / sum(p))
│                         end))(var"##x#372"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#373",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Geometric(var"##x#373"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#374", var"##x#375")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(NegativeBinomial(var"##x#374", var"##x#375"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#376",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Poisson(var"##x#376"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#377", var"##x#378")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Skellam(var"##x#377", var"##x#378"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#379",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(PoissonBinomial(var"##x#379"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#380",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(TuringPoissonBinomial(var"##x#380"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#381",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Bernoulli(var"##x#381"), 2)
└     end
┌ Info: Testing: (var"##x#382",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Bernoulli(var"##x#382"), 2)
└     end
┌ Info: Testing: (var"##x#383", var"##x#384")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist((((a, b)->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:94 =#
│                     BetaBinomial(10, a, b)
│                 end))(var"##x#383", var"##x#384"), 2)
└     end
┌ Info: Testing: (var"##x#385",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:97 =#
│                     Binomial(10, p)
│                 end))(var"##x#385"), 2)
└     end
┌ Info: Testing: (var"##x#386",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:100 =#
│                     Categorical(p / sum(p))
│                 end))(var"##x#386"), 2)
└     end
┌ Info: Testing: (var"##x#387",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Geometric(var"##x#387"), 2)
└     end
┌ Info: Testing: (var"##x#388", var"##x#389")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(NegativeBinomial(var"##x#388", var"##x#389"), 2)
└     end
┌ Info: Testing: (var"##x#390",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Poisson(var"##x#390"), 2)
└     end
┌ Info: Testing: (var"##x#391", var"##x#392")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Skellam(var"##x#391", var"##x#392"), 2)
└     end
┌ Info: Testing: (var"##x#393",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(PoissonBinomial(var"##x#393"), 2)
└     end
┌ Info: Testing: (var"##x#394",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(TuringPoissonBinomial(var"##x#394"), 2)
└     end
┌ Info: Testing: (var"##x#395",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#395"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#396",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#396"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#397", var"##x#398")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill((((a, b)->begin
│                             #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:94 =#
│                             BetaBinomial(10, a, b)
│                         end))(var"##x#397", var"##x#398"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#399",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:97 =#
│                             Binomial(10, p)
│                         end))(var"##x#399"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#400",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:100 =#
│                             Categorical(p / sum(p))
│                         end))(var"##x#400"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#401",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Geometric(var"##x#401"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#402", var"##x#403")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(NegativeBinomial(var"##x#402", var"##x#403"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#404",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Poisson(var"##x#404"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#405", var"##x#406")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Skellam(var"##x#405", var"##x#406"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#407",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(PoissonBinomial(var"##x#407"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#408",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(TuringPoissonBinomial(var"##x#408"), prod((2,))), 2))
└     end

==================================================

Testing: Multivariate continuous distributions

┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Arcsine(), 2)
└     end
┌ Info: Testing: (var"##x#409",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Arcsine(var"##x#409"), 2)
└     end
┌ Info: Testing: (var"##x#410", var"##x#411")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Arcsine(var"##x#410", var"##x#411"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Beta(), 2)
└     end
┌ Info: Testing: (var"##x#412",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Beta(var"##x#412"), 2)
└     end
┌ Info: Testing: (var"##x#413", var"##x#414")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Beta(var"##x#413", var"##x#414"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(BetaPrime(), 2)
└     end
┌ Info: Testing: (var"##x#415",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(BetaPrime(var"##x#415"), 2)
└     end
┌ Info: Testing: (var"##x#416", var"##x#417")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(BetaPrime(var"##x#416", var"##x#417"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Biweight(), 2)
└     end
┌ Info: Testing: (var"##x#418",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Biweight(var"##x#418"), 2)
└     end
┌ Info: Testing: (var"##x#419", var"##x#420")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Biweight(var"##x#419", var"##x#420"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Cauchy(), 2)
└     end
┌ Info: Testing: (var"##x#421",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Cauchy(var"##x#421"), 2)
└     end
┌ Info: Testing: (var"##x#422", var"##x#423")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Cauchy(var"##x#422", var"##x#423"), 2)
└     end
┌ Info: Testing: (var"##x#424",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Chi(var"##x#424"), 2)
└     end
┌ Info: Testing: (var"##x#425",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Chisq(var"##x#425"), 2)
└     end
┌ Info: Testing: (var"##x#426", var"##x#427")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Cosine(var"##x#426", var"##x#427"), 2)
└     end
┌ Info: Testing: (var"##x#428", var"##x#429")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Epanechnikov(var"##x#428", var"##x#429"), 2)
└     end
┌ Info: Testing: (var"##x#430",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(((s->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:170 =#
│                     Erlang(1, s)
│                 end))(var"##x#430"), 2)
└     end
┌ Info: Testing: (var"##x#431",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Exponential(var"##x#431"), 2)
└     end
┌ Info: Testing: (var"##x#432", var"##x#433")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(FDist(var"##x#432", var"##x#433"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Frechet(), 2)
└     end
┌ Info: Testing: (var"##x#434",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Frechet(var"##x#434"), 2)
└     end
┌ Info: Testing: (var"##x#435", var"##x#436")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Frechet(var"##x#435", var"##x#436"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Gamma(), 2)
└     end
┌ Info: Testing: (var"##x#437",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Gamma(var"##x#437"), 2)
└     end
┌ Info: Testing: (var"##x#438", var"##x#439")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Gamma(var"##x#438", var"##x#439"), 2)
└     end
┌ Info: Testing: (var"##x#440", var"##x#441", var"##x#442")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(GeneralizedExtremeValue(var"##x#440", var"##x#441", var"##x#442"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(GeneralizedPareto(), 2)
└     end
┌ Info: Testing: (var"##x#443", var"##x#444")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(GeneralizedPareto(var"##x#443", var"##x#444"), 2)
└     end
┌ Info: Testing: (var"##x#445", var"##x#446", var"##x#447")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(GeneralizedPareto(var"##x#445", var"##x#446", var"##x#447"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Gumbel(), 2)
└     end
┌ Info: Testing: (var"##x#448",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Gumbel(var"##x#448"), 2)
└     end
┌ Info: Testing: (var"##x#449", var"##x#450")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Gumbel(var"##x#449", var"##x#450"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(InverseGamma(), 2)
└     end
┌ Info: Testing: (var"##x#451",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(InverseGamma(var"##x#451"), 2)
└     end
┌ Info: Testing: (var"##x#452", var"##x#453")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(InverseGamma(var"##x#452", var"##x#453"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(InverseGaussian(), 2)
└     end
┌ Info: Testing: (var"##x#454",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(InverseGaussian(var"##x#454"), 2)
└     end
┌ Info: Testing: (var"##x#455", var"##x#456")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(InverseGaussian(var"##x#455", var"##x#456"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Kolmogorov(), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Laplace(), 2)
└     end
┌ Info: Testing: (var"##x#457",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Laplace(var"##x#457"), 2)
└     end
┌ Info: Testing: (var"##x#458", var"##x#459")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Laplace(var"##x#458", var"##x#459"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Levy(), 2)
└     end
┌ Info: Testing: (var"##x#460",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Levy(var"##x#460"), 2)
└     end
┌ Info: Testing: (var"##x#461", var"##x#462")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Levy(var"##x#461", var"##x#462"), 2)
└     end
┌ Info: Testing: (var"##x#463", var"##x#464")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist((((a, b)->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:241 =#
│                     LocationScale(a, b, Normal())
│                 end))(var"##x#463", var"##x#464"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Logistic(), 2)
└     end
┌ Info: Testing: (var"##x#465",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Logistic(var"##x#465"), 2)
└     end
┌ Info: Testing: (var"##x#466", var"##x#467")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Logistic(var"##x#466", var"##x#467"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(LogitNormal(), 2)
└     end
┌ Info: Testing: (var"##x#468",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(LogitNormal(var"##x#468"), 2)
└     end
┌ Info: Testing: (var"##x#469", var"##x#470")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(LogitNormal(var"##x#469", var"##x#470"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(LogNormal(), 2)
└     end
┌ Info: Testing: (var"##x#471",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(LogNormal(var"##x#471"), 2)
└     end
┌ Info: Testing: (var"##x#472", var"##x#473")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(LogNormal(var"##x#472", var"##x#473"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Normal(), 2)
└     end
┌ Info: Testing: (var"##x#474",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Normal(var"##x#474"), 2)
└     end
┌ Info: Testing: (var"##x#475", var"##x#476")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Normal(var"##x#475", var"##x#476"), 2)
└     end
┌ Info: Testing: (var"##x#477", var"##x#478")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(NormalCanon(var"##x#477", var"##x#478"), 2)
└     end
┌ Info: Testing: (var"##x#479", var"##x#480", var"##x#481", var"##x#482")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(NormalInverseGaussian(var"##x#479", var"##x#480", var"##x#481", var"##x#482"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Pareto(), 2)
└     end
┌ Info: Testing: (var"##x#483",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Pareto(var"##x#483"), 2)
└     end
┌ Info: Testing: (var"##x#484", var"##x#485")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Pareto(var"##x#484", var"##x#485"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(PGeneralizedGaussian(), 2)
└     end
┌ Info: Testing: (var"##x#486", var"##x#487", var"##x#488")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(PGeneralizedGaussian(var"##x#486", var"##x#487", var"##x#488"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Rayleigh(), 2)
└     end
┌ Info: Testing: (var"##x#489",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Rayleigh(var"##x#489"), 2)
└     end
┌ Info: Testing: (var"##x#490",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Semicircle(var"##x#490"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(SymTriangularDist(), 2)
└     end
┌ Info: Testing: (var"##x#491",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(SymTriangularDist(var"##x#491"), 2)
└     end
┌ Info: Testing: (var"##x#492", var"##x#493")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(SymTriangularDist(var"##x#492", var"##x#493"), 2)
└     end
┌ Info: Testing: (var"##x#494",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(TDist(var"##x#494"), 2)
└     end
┌ Info: Testing: (var"##x#495", var"##x#496")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Triweight(var"##x#495", var"##x#496"), 2)
└     end
┌ Info: Testing: (var"##x#497", var"##x#498", var"##x#499", var"##x#500")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist((((mu, sigma, l, u)->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:316 =#
│                     truncated(Normal(mu, sigma), l, u)
│                 end))(var"##x#497", var"##x#498", var"##x#499", var"##x#500"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Uniform(), 2)
└     end
┌ Info: Testing: (var"##x#501", var"##x#502")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Uniform(var"##x#501", var"##x#502"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(TuringUniform(), 2)
└     end
┌ Info: Testing: (var"##x#503", var"##x#504")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(TuringUniform(var"##x#503", var"##x#504"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Weibull(), 2)
└     end
┌ Info: Testing: (var"##x#505",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Weibull(var"##x#505"), 2)
└     end
┌ Info: Testing: (var"##x#506", var"##x#507")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:23 =#
│         filldist(Weibull(var"##x#506", var"##x#507"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Arcsine(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#508",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Arcsine(var"##x#508"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#509", var"##x#510")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Arcsine(var"##x#509", var"##x#510"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Beta(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#511",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Beta(var"##x#511"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#512", var"##x#513")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Beta(var"##x#512", var"##x#513"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(BetaPrime(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#514",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(BetaPrime(var"##x#514"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#515", var"##x#516")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(BetaPrime(var"##x#515", var"##x#516"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Biweight(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#517",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Biweight(var"##x#517"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#518", var"##x#519")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Biweight(var"##x#518", var"##x#519"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Cauchy(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#520",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Cauchy(var"##x#520"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#521", var"##x#522")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Cauchy(var"##x#521", var"##x#522"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#523",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Chi(var"##x#523"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#524",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Chisq(var"##x#524"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#525", var"##x#526")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Cosine(var"##x#525", var"##x#526"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#527", var"##x#528")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Epanechnikov(var"##x#527", var"##x#528"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#529",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(((s->begin
│                             #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:170 =#
│                             Erlang(1, s)
│                         end))(var"##x#529"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#530",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Exponential(var"##x#530"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#531", var"##x#532")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(FDist(var"##x#531", var"##x#532"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Frechet(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#533",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Frechet(var"##x#533"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#534", var"##x#535")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Frechet(var"##x#534", var"##x#535"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Gamma(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#536",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Gamma(var"##x#536"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#537", var"##x#538")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Gamma(var"##x#537", var"##x#538"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#539", var"##x#540", var"##x#541")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(GeneralizedExtremeValue(var"##x#539", var"##x#540", var"##x#541"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(GeneralizedPareto(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#542", var"##x#543")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/IuLrc/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(GeneralizedPareto(var"##x#542", var"##x#543"), prod((2,))), 2))
└     end
