Julia Version 1.5.0-DEV.488
Commit ab9eed3229 (2020-03-19 14:30 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_S0esvJ/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_S0esvJ/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.06294005152373186 0.02457936258024034; -0.06294005152373186 0.0 0.10781566572249746; -0.02457936258024034 -0.10781566572249746 0.0])
dAA = so3([0.0 -0.023778651228416076 0.01000935139179566; 0.023778651228416076 0.0 0.1358299901059352; -0.01000935139179566 -0.1358299901059352 0.0])
dAA = so3([0.0 -0.06275892290172923 0.0022472349054901766; 0.06275892290172923 0.0 0.10686483374837913; -0.0022472349054901766 -0.10686483374837913 0.0])
dAA = Quaternion(0.9982195307618708, [0.000994997413675753, 0.05946661980152021, -0.004527639018182073])
dAA = SO3([0.9986622822750173 -0.0515464713576642 0.004075199605787402; 0.05169029454322438 0.9932064984051399 -0.10425432833141907; 0.0013264280184819 0.10432551373644955 0.994542320754797])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.997940590877246 -0.06247651048383177 0.014534879336852354; 0.05406345987740256 0.9411667232585611 0.3335900797937906; -0.03452128887596293 -0.33211727547435216 0.9426061722404726]), [-1.0781566572249746, 0.24579362580240338, -0.6294005152373185])
xj = SE3(SO3([0.9558155826925909 0.02266771231713108 0.293091703567895; -0.02159103844995393 0.9997430165387095 -0.006908541143711963; -0.29317298467061326 0.0002751370377358714 0.9560593733440068]), [-1.0686483374837912, 0.022472349054901766, 0.6275892290172923])
Dx = SE3(SO3([0.9628005904154152 0.07666109860078699 0.2591102063930487; 0.017331023729091954 0.9394172816467862 -0.3423372701881361; -0.2696565569613124 0.33409317099378677 0.9031428980970215]), [-0.04597768873997854, -0.6282446100694022, 1.1104867311276534])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
