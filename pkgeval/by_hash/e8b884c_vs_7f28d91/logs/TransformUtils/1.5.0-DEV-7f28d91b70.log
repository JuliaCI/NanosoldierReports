Julia Version 1.5.0-DEV.483
Commit 7f28d91b70 (2020-03-18 17:21 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_UqwACc/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_UqwACc/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.14972829959763537 0.09798146599115766; 0.14972829959763537 0.0 0.05167190825265247; -0.09798146599115766 -0.05167190825265247 0.0])
dAA = so3([0.0 -0.08635592628763197 0.057610951217717234; 0.08635592628763197 0.0 -0.10967738694577578; -0.057610951217717234 0.10967738694577578 0.0])
dAA = so3([0.0 -0.09416728648269171 0.06299769521952345; 0.09416728648269171 0.0 0.06246168570738936; -0.06299769521952345 -0.06246168570738936 0.0])
dAA = Quaternion(0.9988353122811467, [-0.024977765126594186, -0.04076699400184725, -0.006494797114489085])
dAA = SO3([0.9990479109561795 0.029356815193751957 0.032271489209103645; -0.028946785905764858 0.9994951050349897 -0.013100328118804953; -0.032639779408249865 0.012153699550936464 0.9993932821404224])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9667219559737069 -0.19128536479147865 0.16987810057497454; 0.23030988090727353 0.9398246424240656 -0.2523628345239342; -0.11138230826683256 0.28308929811822287 0.9526040261809123]), [-0.5167190825265247, 0.9798146599115766, 1.4972829959763536])
xj = SE3(SO3([0.9787882004487313 0.03978747945010589 -0.2009741653579926; -0.014558289934034293 0.9919886923584409 0.12548502072832046; 0.2043568321748283 -0.11989741745341233 0.9715260647205876]), [-0.6246168570738936, 0.6299769521952344, 0.941672864826917])
Dx = SE3(SO3([0.9201013899231313 0.2802826786668977 -0.2735965136854468; -0.14305886542195456 0.890742979810667 0.431405963035047; 0.3646197927783205 -0.35779681937843166 0.8596707757955789]), [-0.12299308955280502, -0.4654341154509518, -0.45931988137358015])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
