Julia Version 1.5.0-DEV.488
Commit ab9eed3229 (2020-03-19 14:30 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ───────────────────── v1.0.1
  Installed Combinatorics ──────────────── v1.0.0
  Installed Reexport ───────────────────── v0.2.0
  Installed Parameters ─────────────────── v0.12.0
  Installed JLD2 ───────────────────────── v0.1.12
  Installed StaticArrays ───────────────── v0.12.1
  Installed NLsolve ────────────────────── v4.3.0
  Installed Gridap ─────────────────────── v0.8.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed LineSearches ───────────────── v7.0.1
  Installed RecipesBase ────────────────── v0.8.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed BinaryProvider ─────────────── v0.5.8
  Installed JSON ───────────────────────── v0.21.0
  Installed DiffResults ────────────────── v1.0.2
  Installed ForwardDiff ────────────────── v0.10.9
  Installed NaNMath ────────────────────── v0.3.3
  Installed FiniteDiff ─────────────────── v2.3.0
  Installed QuadGK ─────────────────────── v2.3.1
  Installed DocStringExtensions ────────── v0.8.1
  Installed Polynomials ────────────────── v0.6.1
  Installed BSON ───────────────────────── v0.2.5
  Installed Parsers ────────────────────── v0.3.12
  Installed LightXML ───────────────────── v0.8.1
  Installed CommonSubexpressions ───────── v0.2.0
  Installed TranscodingStreams ─────────── v0.9.5
  Installed FillArrays ─────────────────── v0.8.5
  Installed FileIO ─────────────────────── v1.2.3
  Installed DataStructures ─────────────── v0.17.10
  Installed ArrayInterface ─────────────── v2.6.0
  Installed Distances ──────────────────── v0.8.2
  Installed NLSolversBase ──────────────── v7.6.1
  Installed CompilerSupportLibraries_jll ─ v0.3.0+0
  Installed OrderedCollections ─────────── v1.1.0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed CodecZlib ──────────────────── v0.6.0
  Installed WriteVTK ───────────────────── v1.4.0
#=#=#                                                                         ###############                                                           21.1%######################################################################## 100.0%
#=#=#                                                                         ##                                                                         3.6%#######                                                                   10.5%###############                                                           21.1%########################                                                  33.8%###################################                                       49.5%#################################################                         68.3%##################################################################        92.4%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   56d4f2e9 + Gridap v0.8.0
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   4fba245c + ArrayInterface v2.6.0
   fbb218c0 + BSON v0.2.5
   b99e7846 + BinaryProvider v0.5.8
   944b1d66 + CodecZlib v0.6.0
   861a8166 + Combinatorics v1.0.0
   bbf7d656 + CommonSubexpressions v0.2.0
   e66e0078 + CompilerSupportLibraries_jll v0.3.0+0
   864edb3b + DataStructures v0.17.10
   163ba53b + DiffResults v1.0.2
   b552c78f + DiffRules v1.0.1
   b4f34e82 + Distances v0.8.2
   ffbed154 + DocStringExtensions v0.8.1
   442a2c76 + FastGaussQuadrature v0.4.2
   5789e2e9 + FileIO v1.2.3
   1a297f60 + FillArrays v0.8.5
   6a86dc24 + FiniteDiff v2.3.0
   f6369f11 + ForwardDiff v0.10.9
   56d4f2e9 + Gridap v0.8.0
   033835bb + JLD2 v0.1.12
   682c06a0 + JSON v0.21.0
   9c8b4983 + LightXML v0.8.1
   d3d80556 + LineSearches v7.0.1
   d41bc354 + NLSolversBase v7.6.1
   2774e3e8 + NLsolve v4.3.0
   77ba4419 + NaNMath v0.3.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   69de0a69 + Parsers v0.3.12
   f27b6e38 + Polynomials v0.6.1
   1fd47b50 + QuadGK v2.3.1
   3cdcf5f2 + RecipesBase v0.8.0
   189a3867 + Reexport v0.2.0
   ae029012 + Requires v1.0.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   3bb67fe8 + TranscodingStreams v0.9.5
   64499a7a + WriteVTK v1.4.0
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   a63ad114 + Mmap
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
   Building LightXML ─→ `~/.julia/packages/LightXML/W8FVT/deps/build.log`
   Building CodecZlib → `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
    Testing Gridap
     Status `/tmp/jl_quNuXm/Project.toml`
   fbb218c0 BSON v0.2.5
   861a8166 Combinatorics v1.0.0
   ffbed154 DocStringExtensions v0.8.1
   442a2c76 FastGaussQuadrature v0.4.2
   5789e2e9 FileIO v1.2.3
   1a297f60 FillArrays v0.8.5
   56d4f2e9 Gridap v0.8.0
   033835bb JLD2 v0.1.12
   682c06a0 JSON v0.21.0
   d3d80556 LineSearches v7.0.1
   2774e3e8 NLsolve v4.3.0
   1fd47b50 QuadGK v2.3.1
   90137ffa StaticArrays v0.12.1
   64499a7a WriteVTK v1.4.0
   37e2e46d LinearAlgebra
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_quNuXm/Manifest.toml`
   4fba245c ArrayInterface v2.6.0
   fbb218c0 BSON v0.2.5
   b99e7846 BinaryProvider v0.5.8
   944b1d66 CodecZlib v0.6.0
   861a8166 Combinatorics v1.0.0
   bbf7d656 CommonSubexpressions v0.2.0
   e66e0078 CompilerSupportLibraries_jll v0.3.0+0
   864edb3b DataStructures v0.17.10
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   ffbed154 DocStringExtensions v0.8.1
   442a2c76 FastGaussQuadrature v0.4.2
   5789e2e9 FileIO v1.2.3
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.3.0
   f6369f11 ForwardDiff v0.10.9
   56d4f2e9 Gridap v0.8.0
   033835bb JLD2 v0.1.12
   682c06a0 JSON v0.21.0
   9c8b4983 LightXML v0.8.1
   d3d80556 LineSearches v7.0.1
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   77ba4419 NaNMath v0.3.3
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   1fd47b50 QuadGK v2.3.1
   3cdcf5f2 RecipesBase v0.8.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   3bb67fe8 TranscodingStreams v0.9.5
   64499a7a WriteVTK v1.4.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Test Summary: | Pass  Total
Helpers       |   13     13
204.026659 seconds (11.83 M allocations: 621.050 MiB, 0.36% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  2.050468 seconds (2.17 M allocations: 120.331 MiB, 2.94% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 27.320395 seconds (29.12 M allocations: 1.373 GiB, 4.69% gc time)
Test Summary: | Pass  Total
Algebra       |  686    686
 74.837082 seconds (79.81 M allocations: 3.667 GiB, 3.17% gc time)
Test Summary: | Pass  Total
TensorValues  |  227    227
 15.531197 seconds (13.22 M allocations: 664.148 MiB, 3.03% gc time)
Test Summary: | Pass  Total
Arrays        |  292    292
 27.550956 seconds (25.30 M allocations: 1.215 GiB, 4.87% gc time)
Test Summary: | Pass  Total
Fields        |  580    580
 61.244133 seconds (50.35 M allocations: 2.421 GiB, 3.26% gc time)
Test Summary: | Pass  Total
Polynomials   |  261    261
 23.748470 seconds (21.35 M allocations: 1.047 GiB, 3.48% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 16.259065 seconds (29.78 M allocations: 1.313 GiB, 10.92% gc time)
Test Summary: | Pass  Total
ReferenceFEs  |  981    981
 75.735116 seconds (78.32 M allocations: 3.812 GiB, 2.98% gc time)
Test Summary: | Pass  Total
Geometry      | 2105   2105
128.260827 seconds (125.82 M allocations: 6.253 GiB, 3.59% gc time)
Test Summary: | Pass  Total
FESpaces      |  917    917
287.212817 seconds (237.36 M allocations: 11.566 GiB, 3.50% gc time)
Test Summary: | Pass  Total
MultiField    |  161    161
 90.882975 seconds (65.40 M allocations: 3.248 GiB, 2.76% gc time)
Test Summary: |
Visualization | No tests
 25.611722 seconds (20.81 M allocations: 1.040 GiB, 2.55% gc time)
Test Summary: | Pass  Total
Gridap        |   24     24
590.448049 seconds (357.45 M allocations: 18.267 GiB, 3.03% gc time)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000000 seconds
  0.000074 seconds (1000 allocations: 31.250 KiB)
  0.000031 seconds
  0.000000 seconds
  0.000091 seconds
  0.000047 seconds
  0.000116 seconds
+++ running suite for n = 100000 +++
  0.000000 seconds
  0.004279 seconds (100.00 k allocations: 3.052 MiB)
  0.002343 seconds
  0.000000 seconds
  0.002294 seconds
  0.002993 seconds
  0.002255 seconds
WARNING: replacing module ArraysBenchs.
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (1 allocation: 32 bytes)
  0.000003 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000004 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000004 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000002 seconds
  0.000004 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1000 +++
  0.000003 seconds
  0.000006 seconds
  0.000076 seconds (1000 allocations: 31.250 KiB)
  0.000353 seconds (1000 allocations: 31.250 KiB)
  0.000004 seconds
  0.000127 seconds
  0.000198 seconds (2 allocations: 288 bytes)
+++ running suite for n = 100000 +++
  0.000378 seconds
  0.000929 seconds
  0.008102 seconds (100.00 k allocations: 3.052 MiB)
  0.031748 seconds (100.00 k allocations: 3.052 MiB)
  0.000388 seconds
  0.012383 seconds
  0.019370 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000022 seconds
  0.000021 seconds
  0.000067 seconds
  0.000056 seconds
+++ running suite for n = 100000 +++
  0.002173 seconds
  0.002201 seconds
  0.006950 seconds
  0.007245 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000019 seconds
  0.000000 seconds
  0.000051 seconds
  0.000000 seconds
+++ running suite for n = 100000 +++
  0.001805 seconds
  0.000000 seconds
  0.005015 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000003 seconds
  0.000002 seconds
  0.000002 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000095 seconds
  0.000095 seconds
  0.000095 seconds
+++ running suite for n = 100000 +++
  0.008537 seconds
  0.008993 seconds
  0.010801 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000008 seconds (3 allocations: 48 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (3 allocations: 48 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000005 seconds (30 allocations: 480 bytes)
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000004 seconds
  0.000004 seconds
+++ running suite for n = 1000 +++
  0.000029 seconds
  0.000003 seconds
  0.000105 seconds
  0.000121 seconds
  0.000027 seconds
  0.000002 seconds
  0.000131 seconds
  0.000123 seconds
  0.000026 seconds
  0.000009 seconds
  0.000261 seconds (3.49 k allocations: 54.516 KiB)
  0.000115 seconds
  0.000079 seconds
  0.000002 seconds
  0.000528 seconds
  0.000589 seconds
+++ running suite for n = 100000 +++
  0.002995 seconds
  0.000348 seconds
  0.010835 seconds
  0.011548 seconds
  0.002692 seconds
  0.000137 seconds
  0.012270 seconds
  0.012088 seconds
  0.002982 seconds
  0.000926 seconds
  0.024214 seconds (399.49 k allocations: 6.096 MiB)
  0.010473 seconds
  0.007304 seconds
  0.000136 seconds
  0.044191 seconds
  0.043853 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1000 +++
  0.000081 seconds
  0.000005 seconds
  0.000224 seconds
  0.000201 seconds (1 allocation: 112 bytes)
  0.000006 seconds
  0.000199 seconds
  0.000188 seconds (1 allocation: 144 bytes)
+++ running suite for n = 100000 +++
  0.008421 seconds
  0.000475 seconds
  0.022523 seconds
  0.021709 seconds (1 allocation: 112 bytes)
  0.000671 seconds
  0.021121 seconds
  0.019678 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000004 seconds
  0.000003 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
  0.000002 seconds
  0.000002 seconds
  0.000004 seconds
+++ running suite for n = 1000 +++
  0.000090 seconds
  0.000108 seconds
  0.000375 seconds
  0.000085 seconds
  0.000107 seconds
  0.000290 seconds
  0.000101 seconds
  0.000120 seconds
  0.000098 seconds
  0.000102 seconds
  0.000127 seconds
  0.000098 seconds
  0.000274 seconds
+++ running suite for n = 100000 +++
  0.009003 seconds
  0.010916 seconds
  0.033890 seconds
  0.007871 seconds
  0.010098 seconds
  0.026398 seconds
  0.009254 seconds
  0.011167 seconds
  0.009424 seconds
  0.009360 seconds
  0.012102 seconds
  0.008734 seconds
  0.026260 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000003 seconds
  0.000002 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000003 seconds
  0.000014 seconds
+++ running suite for n = 1000 +++
  0.000089 seconds
  0.000270 seconds
  0.001286 seconds
+++ running suite for n = 100000 +++
  0.008140 seconds
  0.026377 seconds
  0.113528 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000003 seconds (3 allocations: 48 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000002 seconds (3 allocations: 48 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000009 seconds (30 allocations: 480 bytes)
+++ running suite for n = 1000 +++
  0.000084 seconds
  0.000707 seconds (3.49 k allocations: 54.516 KiB)
+++ running suite for n = 100000 +++
  0.008361 seconds
  0.075093 seconds (399.49 k allocations: 6.096 MiB)
+++ running suite for n = 1 +++
  0.000006 seconds
  0.000001 seconds
  0.000008 seconds (5 allocations: 96 bytes)
  0.295943 seconds (199.56 k allocations: 9.865 MiB)
  0.000000 seconds
  0.000002 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000003 seconds (5 allocations: 96 bytes)
  0.000007 seconds (5 allocations: 96 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000002 seconds
  0.000014 seconds (50 allocations: 960 bytes)
  0.000031 seconds (50 allocations: 960 bytes)
  0.000001 seconds
  0.000002 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000018 seconds
  0.000089 seconds
  0.001141 seconds (5.49 k allocations: 101.391 KiB)
  0.003109 seconds (5.49 k allocations: 101.391 KiB)
  0.000023 seconds
  0.000107 seconds
  0.000001 seconds
+++ running suite for n = 100000 +++
  0.001375 seconds
  0.006771 seconds
  0.159086 seconds (599.49 k allocations: 10.673 MiB)
  0.484722 seconds (599.49 k allocations: 10.673 MiB)
  0.003358 seconds
  0.016202 seconds
  0.000084 seconds
+++ running suite for n = 1 +++
  0.000006 seconds
  0.000006 seconds
  0.000007 seconds
  0.000011 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000003 seconds
  0.000002 seconds
  0.000005 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 10 +++
  0.000008 seconds
  0.000016 seconds
  0.000013 seconds
  0.000042 seconds (300 allocations: 14.062 KiB)
+++ running suite for n = 1000 +++
  0.000769 seconds
  0.001474 seconds
  0.001234 seconds
  0.003507 seconds (30.00 k allocations: 1.373 MiB)
+++ running suite for n = 100000 +++
  0.075383 seconds
  0.158562 seconds
  0.128919 seconds
  0.603628 seconds (3.00 M allocations: 137.329 MiB, 30.87% gc time)
    Testing Gridap tests passed 
