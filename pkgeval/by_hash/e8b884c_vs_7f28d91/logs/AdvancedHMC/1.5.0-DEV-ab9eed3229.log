Julia Version 1.5.0-DEV.488
Commit ab9eed3229 (2020-03-19 14:30 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Requires ───────────────────── v1.0.1
  Installed InplaceOps ─────────────────── v0.3.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Parameters ─────────────────── v0.12.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed Rmath ──────────────────────── v0.6.1
  Installed ProgressMeter ──────────────── v1.2.0
  Installed Missings ───────────────────── v0.4.3
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed StatsFuns ──────────────────── v0.9.4
  Installed MacroTools ─────────────────── v0.5.4
  Installed DataStructures ─────────────── v0.17.10
  Installed FillArrays ─────────────────── v0.8.5
  Installed CompilerSupportLibraries_jll ─ v0.3.0+0
  Installed StatsBase ──────────────────── v0.32.2
  Installed ArgCheck ───────────────────── v2.0.0
  Installed DataAPI ────────────────────── v1.1.0
  Installed LazyArrays ─────────────────── v0.15.0
  Installed OrderedCollections ─────────── v1.1.0
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ##                                                                         3.0%#####                                                                      7.9%##########                                                                15.1%#################                                                         23.7%#########################                                                 35.3%####################################                                      50.3%##################################################                        69.5%####################################################################      95.1%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.3.0+0
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.0
   1914dd2f + MacroTools v0.5.4
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
#=#=#                                                                         #############################                                             41.4%######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.6%#####                                                                      8.2%##########                                                                14.5%#################                                                         23.8%########################                                                  34.7%#############################                                             41.1%########################################                                  56.9%#######################################################                   76.9%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ##############                                                            19.6%###########################################                               60.4%######################################################################## 100.0%
     Status `/tmp/jl_SrGwQ6/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.5.2
   31c24e10 Distributions v0.22.6
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.0
   1dea7af3 OrdinaryDiffEq v5.31.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.10
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_SrGwQ6/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.4.0
   1520ce14 AbstractTrees v0.3.2
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.6.0
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.5.2
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v0.7.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.3.0+0
   88cd18e8 ConsoleProgressMonitor v0.1.2
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.24.0
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   31c24e10 Distributions v0.22.6
   ced4e74d DistributionsAD v0.4.6
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.4.2
   da5c29d0 EllipsisNotation v0.4.0
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.3.0
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.2.2
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.1
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.3
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.0
   1d6d02ad LeftChildRightSiblingTrees v0.1.2
   6f1fad26 Libtask v0.3.3
   093fc24a LightGraphs v1.3.1
   d3d80556 LineSearches v7.0.1
   6fdf6af0 LogDensityProblems v0.10.3
   e6f89c97 LoggingExtras v0.4.0
   c7f686f2 MCMCChains v3.0.5
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+7
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.31.0
   90014a1f PDMats v0.9.12
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   33c8b6b6 ProgressLogging v0.1.2
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   37e2e3b7 ReverseDiff v1.1.0
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v0.8.4
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   5d786b92 TerminalLoggers v0.1.1
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.9.0
   3a884ed6 UnPack v0.1.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.10
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.085468354
│   t_steps = 0.004940762
└   t_step / t_steps = 17.29861790549717
Sampling  0%|                               |  ETA: 3:19:25[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.020191095962274367
  log_density:                   -10.035495146198214
  hamiltonian_energy:            12.742900180384382
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  3.9025135657000014
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▍                            |  ETA: 0:00:19[K
  iterations:                    939
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9099558942244679
  log_density:                   -11.6101972775961
  hamiltonian_energy:            14.583826905073694
  hamiltonian_energy_error:      -0.6261710837322791
  max_hamiltonian_energy_error:  -0.8626926656350022
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.1315283117733959
  nom_step_size:                 1.1315283117733959
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9982887825076642, 0.9557 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:14[K
  iterations:                    1345
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8745432012036242
  log_density:                   -17.164456569797785
  hamiltonian_energy:            26.56628442761768
  hamiltonian_energy_error:      -0.7734862981197601
  max_hamiltonian_energy_error:  -1.4537099437451815
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.848656316277373
  nom_step_size:                 0.848656316277373
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9982887825076642, 0.9557 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▊                          |  ETA: 0:00:10[K
  iterations:                    1835
  n_steps:                       27
  is_accept:                     true
  acceptance_rate:               0.7321039379062505
  log_density:                   -17.117359564065318
  hamiltonian_energy:            19.769096412912404
  hamiltonian_energy_error:      0.7061766114922818
  max_hamiltonian_energy_error:  0.8905693862982105
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8258074101018568
  nom_step_size:                 0.8258074101018568
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9982887825076642, 0.9557 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▎                         |  ETA: 0:00:09[K
  iterations:                    2048
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.595115694258098
  hamiltonian_energy:            21.171660310855653
  hamiltonian_energy_error:      -0.3539662700670405
  max_hamiltonian_energy_error:  -0.4162210592751876
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6998807388297232
  nom_step_size:                 0.6998807388297232
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8891895667622997, 0.9171 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▊                        |  ETA: 0:00:08[K
  iterations:                    2591
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.236865442024014
  hamiltonian_energy:            18.679529842656198
  hamiltonian_energy_error:      -0.09048349083094465
  max_hamiltonian_energy_error:  -0.39738816424014445
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6998807388297232
  nom_step_size:                 0.6998807388297232
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8891895667622997, 0.9171 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▊                      |  ETA: 0:00:06[K
  iterations:                    3375
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9799176058404075
  log_density:                   -19.48704111689829
  hamiltonian_energy:            24.590858738452667
  hamiltonian_energy_error:      0.08559694860650069
  max_hamiltonian_energy_error:  -0.44504622106469327
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6998807388297232
  nom_step_size:                 0.6998807388297232
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8891895667622997, 0.9171 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|███████████                    |  ETA: 0:00:04[K
  iterations:                    4237
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7135920914715401
  log_density:                   -14.679620621688702
  hamiltonian_energy:            21.149643829371392
  hamiltonian_energy_error:      0.15976554890827543
  max_hamiltonian_energy_error:  0.5742736791124514
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6998807388297232
  nom_step_size:                 0.6998807388297232
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8891895667622997, 0.9171 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████▏                 |  ETA: 0:00:03[K
  iterations:                    5082
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8672154217043869
  log_density:                   -11.595389362707913
  hamiltonian_energy:            16.490918598209106
  hamiltonian_energy_error:      -0.09458859683260457
  max_hamiltonian_energy_error:  0.33700908233165094
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6998807388297232
  nom_step_size:                 0.6998807388297232
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8891895667622997, 0.9171 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▍               |  ETA: 0:00:03[K
  iterations:                    5954
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9509531131759766
  log_density:                   -15.382620390373397
  hamiltonian_energy:            22.0571985504259
  hamiltonian_energy_error:      -0.19439807934774933
  max_hamiltonian_energy_error:  -0.357764885778721
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6998807388297232
  nom_step_size:                 0.6998807388297232
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8891895667622997, 0.9171 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▌             |  ETA: 0:00:02[K
  iterations:                    6750
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9812479204019292
  log_density:                   -12.66020708186781
  hamiltonian_energy:            19.47259589375852
  hamiltonian_energy_error:      -0.3944097018075503
  max_hamiltonian_energy_error:  -0.3944097018075503
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6998807388297232
  nom_step_size:                 0.6998807388297232
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8891895667622997, 0.9171 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|███████████████████▊           |  ETA: 0:00:02[K
  iterations:                    7629
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.4412892181143639
  log_density:                   -17.12690067228178
  hamiltonian_energy:            33.42862191717094
  hamiltonian_energy_error:      0.28189051279379385
  max_hamiltonian_energy_error:  1.807498487751623
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6998807388297232
  nom_step_size:                 0.6998807388297232
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8891895667622997, 0.9171 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▊         |  ETA: 0:00:01[K
  iterations:                    8430
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9737573873849997
  log_density:                   -12.946272689663132
  hamiltonian_energy:            15.97746820234389
  hamiltonian_energy_error:      0.031116734207946806
  max_hamiltonian_energy_error:  0.06382231450235487
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6998807388297232
  nom_step_size:                 0.6998807388297232
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8891895667622997, 0.9171 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|████████████████████████       |  ETA: 0:00:01[K
  iterations:                    9277
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.998967559311574
  log_density:                   -16.934397297727216
  hamiltonian_energy:            24.267709901938453
  hamiltonian_energy_error:      -0.23471210867990067
  max_hamiltonian_energy_error:  -0.3584601301453745
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6998807388297232
  nom_step_size:                 0.6998807388297232
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8891895667622997, 0.9171 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████▏    |  ETA: 0:00:01[K
  iterations:                    10137
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8308018032776684
  log_density:                   -13.357983870345809
  hamiltonian_energy:            19.760974011000975
  hamiltonian_energy_error:      -0.0014712740198881136
  max_hamiltonian_energy_error:  0.38009499711234085
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6998807388297232
  nom_step_size:                 0.6998807388297232
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8891895667622997, 0.9171 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▍  |  ETA: 0:00:00[K
  iterations:                    10999
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.489762467971406
  hamiltonian_energy:            15.85601709396891
  hamiltonian_energy_error:      -0.4058046205126029
  max_hamiltonian_energy_error:  -0.4334899464693933
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6998807388297232
  nom_step_size:                 0.6998807388297232
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8891895667622997, 0.9171 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 99%|██████████████████████████████▌|  ETA: 0:00:00[K
  iterations:                    11821
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.979640780496552
  log_density:                   -14.84118556531038
  hamiltonian_energy:            18.366299372356348
  hamiltonian_energy_error:      0.02367470456090004
  max_hamiltonian_energy_error:  -0.27901517634110107
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6998807388297232
  nom_step_size:                 0.6998807388297232
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8891895667622997, 0.9171 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:03[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.660306797589955
  log_density:                   -13.596006172911004
  hamiltonian_energy:            24.908097922009922
  hamiltonian_energy_error:      -0.14501061103364776
  max_hamiltonian_energy_error:  0.9360015967350854
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6998807388297232
  nom_step_size:                 0.6998807388297232
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8891895667622997, 0.9171 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 3.320607725 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.8891895667622997, 0.9171 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.7), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0909590339276425
└   average_acceptance_rate = 0.8699686336739355
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.645978052 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            3 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢆⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢱⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠱⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠘⡄│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⡸⠀⠀⡇│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠑⡄⡇⠀⠀⢸│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠊⠀⠀⠀⠀⠀⠀⠀⢰⢣⠀⠀⢀⠤⠒⠣⡀⡸⠀⠀⠈⠁⠀⠀⠈│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⢣⡠⠃⠀⠀⠀⠘⠃⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠁⠀⠀⠀⠀⠀⠀⠀⢀⡠⠒⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⢠⢆⡠⠃⠀⠀⠀⠀⣀⡠⠤⠒⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡀⠀⢠⡣⠎⠣⣀⣀⡠⠔⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠙⠲⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
