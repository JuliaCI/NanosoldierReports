Julia Version 1.5.0-DEV.483
Commit 7f28d91b70 (2020-03-18 17:21 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.3
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_NY1i5Y/Project.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_NY1i5Y/Manifest.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21720802760818353
curgen: 20 fitness: 0.21720802760818353
curgen: 30 fitness: 0.21720802760818353
curgen: 40 fitness: 0.21722699287594355
curgen: 50 fitness: 0.21722699287594355
CoordinateCreature{Array{Float64,1}}([0.22293571555770672], -0.21722699287594355) 0.22293571555770672 -0.21722699287594355
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258165657486083
curgen: 100 fitness: 3.2582161156660328
curgen: 150 fitness: 3.2582471890872085
curgen: 200 fitness: 3.2583148449598305
curgen: 250 fitness: 3.258374217491462
curgen: 300 fitness: 3.2583923338286898
curgen: 350 fitness: 3.2583937496532838
curgen: 400 fitness: 3.2584065719081057
curgen: 450 fitness: 3.2584068882676527
curgen: 500 fitness: 3.258433630651346
CoordinateCreature{Array{Float64,1}}([-0.2225466364391592, -0.22258225457054562, 0.2223004796777794, -0.22332571472772447, 0.22277537964432748, -0.22275342865629408, -0.22239629102233596, -0.22269061894672113, 0.2227249273531549, -0.22182781443124258, -0.22259469133122747, 0.22242055561980198, 0.22211878228352905, 0.22235896082516104, 0.2224713327100179], -3.258433630651346) [-0.2225466364391592, -0.22258225457054562, 0.2223004796777794, -0.22332571472772447, 0.22277537964432748, -0.22275342865629408, -0.22239629102233596, -0.22269061894672113, 0.2227249273531549, -0.22182781443124258, -0.22259469133122747, 0.22242055561980198, 0.22211878228352905, 0.22235896082516104, 0.2224713327100179] -3.258433630651346
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.009346978064513678
curgen: 100 fitness: -0.006974518479466951
curgen: 150 fitness: -0.006636386388180426
curgen: 200 fitness: -0.006116241924559063
curgen: 250 fitness: -0.0032965422975905767
curgen: 300 fitness: -0.002482301397634501
curgen: 350 fitness: -0.0016088570149577208
curgen: 400 fitness: -0.0016011665156270283
curgen: 450 fitness: -0.0016011665156270283
curgen: 500 fitness: -0.0016011665156270283
CoordinateCreature{Array{Float64,1}}([0.0002927304816512051, 0.0010192694021196494, -6.926478069762781e-5, -3.0933064289478604e-5, -0.0003916334609582365, -9.962990562641279e-5, 0.0006125769069231877, -2.098861256930257e-5, -0.0010004862327957084, -0.0006652410369226147, 0.0001425702592802976, 0.0005385507182329795, -0.002149964808892388, 2.426818597618804e-5, 0.00015693030588353682], 0.0016011665156270283) [0.0002927304816512051, 0.0010192694021196494, -6.926478069762781e-5, -3.0933064289478604e-5, -0.0003916334609582365, -9.962990562641279e-5, 0.0006125769069231877, -2.098861256930257e-5, -0.0010004862327957084, -0.0006652410369226147, 0.0001425702592802976, 0.0005385507182329795, -0.002149964808892388, 2.426818597618804e-5, 0.00015693030588353682] 0.0016011665156270283
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
