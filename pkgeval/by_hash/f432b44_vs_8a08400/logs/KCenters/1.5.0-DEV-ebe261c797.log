Julia Version 1.5.0-DEV.224
Commit ebe261c797 (2020-02-02 23:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed LearnBase ─────────────────── v0.2.2
  Installed MappedArrays ──────────────── v0.2.2
  Installed KCenters ──────────────────── v0.1.9
  Installed TableTraits ───────────────── v1.0.0
  Installed OrderedCollections ────────── v1.1.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed JSON ──────────────────────── v0.21.0
  Installed SimilaritySearch ──────────── v0.3.17
  Installed PooledArrays ──────────────── v0.5.3
  Installed DataAPI ───────────────────── v1.1.0
  Installed Compat ────────────────────── v3.2.0
  Installed Missings ──────────────────── v0.4.3
  Installed Parsers ───────────────────── v0.3.11
  Installed MLDataUtils ───────────────── v0.5.0
  Installed StatsBase ─────────────────── v0.32.0
  Installed MLDataPattern ─────────────── v0.5.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DataFrames ────────────────── v0.20.0
  Installed Tables ────────────────────── v0.2.11
  Installed InvertedIndices ───────────── v1.0.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed DataStructures ────────────── v0.17.9
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Reexport ──────────────────── v0.2.0
  Installed DataValueInterfaces ───────── v1.0.0
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_IOYipS/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 113.82000000000012
[ Info: 76.70000000000003
[ Info: 45.7
[ Info: 23.410000000000007
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.2399983987154
[ Info: 75.4800011366497
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.24649949458587
inertia(cdnet.distances) = 24.284060714412277
inertia(crand.distances) = 20.63002739282746
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.326171875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.326171875,"f1":null,"seconds":2.3655593395233154e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":5.46875,"distances_sum":1010.7424416948134}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8373163295038303,"seconds":9.095296263694763e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.078125,"distances_sum":2356.365845124819}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.505859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.505859375,"f1":0.6549284049284052,"seconds":7.126480340957642e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":6.78125,"distances_sum":1535.2853169887558}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7353515625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7353515625,"f1":0.8373163295038303,"seconds":9.095296263694763e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.078125,"distances_sum":2356.365845124819}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9194576257076266,"seconds":1.181289553642273e-5,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.5703125,"distances_sum":2897.082165257048}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9577266483516489,"seconds":1.0756775736808777e-5,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.78125,"distances_sum":3159.5377846148644}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9216549075924081,"seconds":1.0009855031967163e-5,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.6015625,"distances_sum":2907.8241347501657}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9282082500832507,"seconds":7.690861821174622e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.71875,"distances_sum":2919.3720018421886}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8439862221112228,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.0625,"distances_sum":2440.841939708233}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9577266483516489,"seconds":1.0756775736808777e-5,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.78125,"distances_sum":3159.5377846148644}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9798592032967036,"seconds":4.98257577419281e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.890625,"distances_sum":3332.8144960374443}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9798592032967036,"seconds":4.98257577419281e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.890625,"distances_sum":3332.8144960374443}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9798592032967036,"seconds":4.98257577419281e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.890625,"distances_sum":3332.8144960374443}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5830078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5830078125,"f1":0.7248411310911318,"seconds":2.72504985332489e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.046875,"distances_sum":1402.334992563607}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.25, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.25,"f1":null,"seconds":2.132728695869446e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":6.6015625,"distances_sum":623.754219378385}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8683124167499175,"seconds":3.3471733331680298e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.0234375,"distances_sum":2049.1933460371615}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8683124167499175,"seconds":3.3471733331680298e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.0234375,"distances_sum":2049.1933460371615}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.955048076923077,"seconds":3.866851329803467e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.8828125,"distances_sum":2774.865041667104}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8967293123543131,"seconds":3.4533441066741943e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.5078125,"distances_sum":2262.812148962592}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.955048076923077,"seconds":3.866851329803467e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.8828125,"distances_sum":2774.865041667104}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.955048076923077,"seconds":3.866851329803467e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.8828125,"distances_sum":2774.865041667104}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.955048076923077,"seconds":3.866851329803467e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.8828125,"distances_sum":2774.865041667104}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7858901515151522,"seconds":4.5746564865112305e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":7.7578125,"distances_sum":1680.760672314316}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.7858901515151522,"seconds":4.5746564865112305e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":7.7578125,"distances_sum":1680.760672314316}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9534111721611727,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.7734375,"distances_sum":2814.249269636944}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.904017857142858,"seconds":3.4812837839126587e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.4921875,"distances_sum":2344.9274826099477}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8770037254412262,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.203125,"distances_sum":2157.6910160219377}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9534111721611727,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.7734375,"distances_sum":2814.249269636944}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9649954212454217,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.8515625,"distances_sum":2877.8726105648548}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9627461080586086,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.828125,"distances_sum":2870.440684748679}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9705185439560443,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.9375,"distances_sum":2893.625751633011}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9641025641025647,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.8359375,"distances_sum":2868.97133199204}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9705185439560443,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.9375,"distances_sum":2893.625751633011}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9705185439560443,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.9375,"distances_sum":2893.625751633011}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2470703125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2470703125,"f1":null,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.359375,"distances_sum":625.4701661489231}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8557843198468208,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.9140625,"distances_sum":2099.2877714750666}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8557843198468208,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.9140625,"distances_sum":2099.2877714750666}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8796536796536804,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.09375,"distances_sum":2321.0195879169905}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8714774808524817,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.984375,"distances_sum":2180.956827912365}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.798828125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.798828125,"f1":0.8796536796536804,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.09375,"distances_sum":2321.0195879169905}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.947550366300367,"seconds":4.345551133155823e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.765625,"distances_sum":2764.7363771641526}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.896486326173827,"seconds":3.4850090742111206e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.234375,"distances_sum":2390.594932873575}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9529990842490846,"seconds":4.075467586517334e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8046875,"distances_sum":2854.3283058567117}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9582818223443227,"seconds":3.807246685028076e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.875,"distances_sum":2875.561185392618}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9582818223443227,"seconds":3.807246685028076e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.875,"distances_sum":2875.561185392618}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9582818223443227,"seconds":3.807246685028076e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.875,"distances_sum":2875.561185392618}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7848380785880794,"seconds":3.460794687271118e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":7.2734375,"distances_sum":1831.37001392846}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66015625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.66015625,"f1":0.7848380785880794,"seconds":3.460794687271118e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":7.2734375,"distances_sum":1831.37001392846}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9429060522810531,"seconds":4.244968295097351e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.6875,"distances_sum":2742.064809677935}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8457058566433573,"seconds":3.553926944732666e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.015625,"distances_sum":2070.4966024919145}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.937992216117217,"seconds":3.93204391002655e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.7109375,"distances_sum":2697.226778067183}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9429060522810531,"seconds":4.244968295097351e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.6875,"distances_sum":2742.064809677935}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.955752060439561,"seconds":4.172325134277344e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.8203125,"distances_sum":2817.423231561294}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9620967574092579,"seconds":4.027038812637329e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.8671875,"distances_sum":2855.399757475361}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9618875915750918,"seconds":4.293397068977356e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.8984375,"distances_sum":2842.677160339377}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9714114010989018,"seconds":4.129484295845032e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.8984375,"distances_sum":2921.6098144781245}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9478682775557783,"seconds":4.045665264129639e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.75,"distances_sum":2759.566151434644}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9807291666666668,"seconds":4.304572939872742e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.96875,"distances_sum":2985.1588011566114}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807291666666668,"seconds":4.304572939872742e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.96875,"distances_sum":2985.1588011566114}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807291666666668,"seconds":4.304572939872742e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.96875,"distances_sum":2985.1588011566114}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5830078125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5830078125,"f1":0.7245374417249423,"seconds":4.494562745094299e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":7.1171875,"distances_sum":1449.5940246786806}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7946756368631378,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":7.9140625,"distances_sum":1804.607685441362}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6767578125,"f1":0.7946756368631378,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":7.9140625,"distances_sum":1804.607685441362}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8557239635364644,"seconds":3.825873136520386e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.03125,"distances_sum":2094.0462914836435}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.930182837995339,"seconds":4.244968295097351e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.6484375,"distances_sum":2633.153286137561}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9282254204129212,"seconds":4.155561327934265e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.6015625,"distances_sum":2622.6661656687797}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.810519515207016,"seconds":3.973022103309631e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.0390625,"distances_sum":1863.2642598633456}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.930182837995339,"seconds":4.244968295097351e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.6484375,"distances_sum":2633.153286137561}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9710222069597071,"seconds":4.3138861656188965e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.9296875,"distances_sum":2993.1565322046476}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9676739926739932,"seconds":4.332512617111206e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.9140625,"distances_sum":2959.6838542645205}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9578182234432238,"seconds":4.3995678424835205e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.8671875,"distances_sum":2859.4180576957747}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9710222069597071,"seconds":4.3138861656188965e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.9296875,"distances_sum":2993.1565322046476}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9710222069597071,"seconds":4.3138861656188965e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.9296875,"distances_sum":2993.1565322046476}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.337890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.337890625,"f1":null,"seconds":3.63960862159729e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":5.0859375,"distances_sum":926.3436089169663}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8335060772560781,"seconds":7.448717951774597e-5,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.875,"distances_sum":2028.4482565996839}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1826171875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1826171875,"f1":null,"seconds":3.4458935260772705e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":4.65625,"distances_sum":556.8881975102154}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8516488719613728,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.8984375,"distances_sum":2112.577636181622}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8516488719613728,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.8984375,"distances_sum":2112.577636181622}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.94961652930403,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.6640625,"distances_sum":2755.5256253031826}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9484260531135537,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.7265625,"distances_sum":2734.6095157850386}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9196199633699638,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.4609375,"distances_sum":2525.8644957316733}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9574404761904768,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.7578125,"distances_sum":2801.408945692433}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8842329545454554,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.2421875,"distances_sum":2279.557777610696}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9574404761904768,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.7578125,"distances_sum":2801.408945692433}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9618017399267402,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.796875,"distances_sum":2823.1800284691926}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9757268772893777,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8671875,"distances_sum":2912.382680880688}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9709077380952382,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8671875,"distances_sum":2870.9188367094553}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.978869047619048,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8515625,"distances_sum":2960.624023110325}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.973923992673993,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.84375,"distances_sum":2911.9696327433667}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9656994047619053,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8203125,"distances_sum":2858.187714379272}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.978869047619048,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8515625,"distances_sum":2960.624023110325}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.978869047619048,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8515625,"distances_sum":2960.624023110325}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8721700174825182,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.328125,"distances_sum":2340.8466687270943}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8844670954045961,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.4140625,"distances_sum":2434.5642829618155}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.580078125,"f1":0.7193396880896887,"seconds":4.3157488107681274e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.546875,"distances_sum":1580.2707584460866}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8046875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.8046875,"f1":0.8844670954045961,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.4140625,"distances_sum":2434.5642829618155}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9578239468864476,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.765625,"distances_sum":3075.8144016675765}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9118881118881128,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.4296875,"distances_sum":2668.3479227503667}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9511961996337001,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.625,"distances_sum":2998.2726776359245}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9412145146520152,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.625,"distances_sum":2903.5640934236512}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9578239468864476,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.765625,"distances_sum":3075.8144016675765}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739812271062276,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.90625,"distances_sum":3221.1569765574304}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.965310210622711,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":3088.139929578868}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9765453296703299,"seconds":6.107613444328308e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9453125,"distances_sum":3195.9976737765246}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9722699175824179,"seconds":3.7178397178649902e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9140625,"distances_sum":3173.1236950948028}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.976934523809524,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8828125,"distances_sum":3230.0099802654668}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9674851190476192,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8671875,"distances_sum":3116.1854803535284}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9593063186813191,"seconds":3.4887343645095825e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8046875,"distances_sum":3072.5518390802163}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.976934523809524,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8828125,"distances_sum":3230.0099802654668}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.976934523809524,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8828125,"distances_sum":3230.0099802654668}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.232421875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.232421875,"f1":null,"seconds":2.0265579223632812e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":6.125,"distances_sum":642.632182009416}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8524792915417921,"seconds":3.2316893339157104e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.09375,"distances_sum":2198.390862054499}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5361328125,"f1":0.6811133311133317,"seconds":3.7513673305511475e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":7.421875,"distances_sum":1389.2495359529303}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8524792915417921,"seconds":3.2316893339157104e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.09375,"distances_sum":2198.390862054499}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9010676823176831,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.375,"distances_sum":2486.105572342821}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9276385073260083,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.5,"distances_sum":2695.562392535886}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9276385073260083,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.5,"distances_sum":2695.562392535886}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9736263736263742,"seconds":6.280839443206787e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.890625,"distances_sum":3049.52125313323}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9651098901098905,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.8515625,"distances_sum":2980.154339387103}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599015567765571,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.78125,"distances_sum":2951.933232505854}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9476419413919419,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.75,"distances_sum":2844.300135654147}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9320658508158515,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.484375,"distances_sum":2721.0040284643014}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9430517399267405,"seconds":3.876164555549622e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.671875,"distances_sum":2843.037563780146}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9736263736263742,"seconds":6.280839443206787e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.890625,"distances_sum":3049.52125313323}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9736263736263742,"seconds":6.280839443206787e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.890625,"distances_sum":3049.52125313323}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3603515625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3603515625,"f1":null,"seconds":3.777444362640381e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":6.703125,"distances_sum":899.1715481357627}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8675975066600075,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.0625,"distances_sum":2279.9522269702875}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8675975066600075,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.0625,"distances_sum":2279.9522269702875}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9088369963369971,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.390625,"distances_sum":2519.7002370628834}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9162348068598075,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.4296875,"distances_sum":2599.0352888559787}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9030599608724614,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.3359375,"distances_sum":2505.918851854805}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.857421875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.857421875,"f1":0.9162348068598075,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.4296875,"distances_sum":2599.0352888559787}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9438160797535801,"seconds":3.773719072341919e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7578125,"distances_sum":2807.9467329291942}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9382955586080592,"seconds":3.5837292671203613e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.703125,"distances_sum":2745.7986057550243}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9452838827838833,"seconds":3.6526471376419067e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7421875,"distances_sum":2790.891679164918}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9611435439560442,"seconds":3.5706907510757446e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8359375,"distances_sum":2921.995111823358}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9611435439560442,"seconds":3.5706907510757446e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8359375,"distances_sum":2921.995111823358}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9611435439560442,"seconds":3.5706907510757446e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8359375,"distances_sum":2921.995111823358}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8561761155511163,"seconds":3.244727849960327e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.7890625,"distances_sum":2031.9931547072931}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5400390625,"f1":null,"seconds":2.5834888219833374e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":6.5390625,"distances_sum":1291.965801140422}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8442833208458217,"seconds":3.0994415283203125e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.6953125,"distances_sum":1970.8836684472928}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8561761155511163,"seconds":3.244727849960327e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.7890625,"distances_sum":2031.9931547072931}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9447802197802202,"seconds":5.004368722438812e-5,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.7265625,"distances_sum":2700.06087439441}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9217464826839834,"seconds":3.430992364883423e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.5078125,"distances_sum":2509.837841921234}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9287774725274731,"seconds":3.423541784286499e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.5703125,"distances_sum":2624.2018591437277}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9309867216117221,"seconds":3.6247074604034424e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.546875,"distances_sum":2636.208827072537}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9447802197802202,"seconds":5.004368722438812e-5,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.7265625,"distances_sum":2700.06087439441}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9599816849816853,"seconds":3.5800039768218994e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8515625,"distances_sum":2784.2781206048708}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.954344093406594,"seconds":3.557652235031128e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.75,"distances_sum":2764.442223331039}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9634500915750919,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.90625,"distances_sum":2809.3188936278484}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9641597985347992,"seconds":3.514811396598816e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.875,"distances_sum":2818.084320533304}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9569597069597077,"seconds":4.623085260391235e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.78125,"distances_sum":2817.704444999919}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9460508241758244,"seconds":3.693625330924988e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.7265625,"distances_sum":2722.743654129491}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9650698260073265,"seconds":3.516674041748047e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8359375,"distances_sum":2849.5407267618316}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9649610805860809,"seconds":5.055218935012817e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8671875,"distances_sum":2846.5257279089838}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9650698260073265,"seconds":3.516674041748047e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8359375,"distances_sum":2849.5407267618316}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9650698260073265,"seconds":3.516674041748047e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8359375,"distances_sum":2849.5407267618316}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.333984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.333984375,"f1":null,"seconds":2.1420419216156006e-6,"exhaustive_search_seconds":9.369105100631714e-7,"evaluations":5.4296875,"distances_sum":849.2128367710046}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7739076895326903,"seconds":2.8423964977264404e-6,"exhaustive_search_seconds":9.369105100631714e-7,"evaluations":7.5546875,"distances_sum":1660.3054472393992}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.646484375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.646484375,"f1":0.7739076895326903,"seconds":2.8423964977264404e-6,"exhaustive_search_seconds":9.369105100631714e-7,"evaluations":7.5546875,"distances_sum":1660.3054472393992}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8565366924741932,"seconds":3.2261013984680176e-6,"exhaustive_search_seconds":9.369105100631714e-7,"evaluations":8.125,"distances_sum":2033.5073780679356}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.875,"f1":0.9255161505161509,"seconds":3.384426236152649e-6,"exhaustive_search_seconds":9.369105100631714e-7,"evaluations":8.546875,"distances_sum":2469.645101240268}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.875,"f1":0.9255161505161509,"seconds":3.384426236152649e-6,"exhaustive_search_seconds":9.369105100631714e-7,"evaluations":8.546875,"distances_sum":2469.645101240268}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9584878663003665,"seconds":3.680586814880371e-6,"exhaustive_search_seconds":9.369105100631714e-7,"evaluations":8.734375,"distances_sum":2812.4489578500625}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9483115842490847,"seconds":3.721565008163452e-6,"exhaustive_search_seconds":9.369105100631714e-7,"evaluations":8.6953125,"distances_sum":2702.5834397183207}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9413862179487185,"seconds":3.555789589881897e-6,"exhaustive_search_seconds":9.369105100631714e-7,"evaluations":8.6875,"distances_sum":2641.153155552608}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9294585622710627,"seconds":3.518536686897278e-6,"exhaustive_search_seconds":9.369105100631714e-7,"evaluations":8.640625,"distances_sum":2507.369159010956}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9584878663003665,"seconds":3.680586814880371e-6,"exhaustive_search_seconds":9.369105100631714e-7,"evaluations":8.734375,"distances_sum":2812.4489578500625}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9584878663003665,"seconds":3.680586814880371e-6,"exhaustive_search_seconds":9.369105100631714e-7,"evaluations":8.734375,"distances_sum":2812.4489578500625}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7904350857475867,"seconds":3.3043324947357178e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.828125,"distances_sum":1656.6657467698244}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7880889943389952,"seconds":3.0938535928726196e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.828125,"distances_sum":1627.5580411667568}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.666015625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.666015625,"f1":0.7904350857475867,"seconds":3.3043324947357178e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.828125,"distances_sum":1656.6657467698244}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8669060106560115,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.1484375,"distances_sum":2117.5847848467542}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9212084790209798,"seconds":3.518536686897278e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.5703125,"distances_sum":2422.477107687571}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8892602189477197,"seconds":3.4850090742111206e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.3125,"distances_sum":2253.6925570280523}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9586767399267405,"seconds":3.688037395477295e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.828125,"distances_sum":2704.20491921399}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9586767399267405,"seconds":3.688037395477295e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.828125,"distances_sum":2704.20491921399}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9641597985347992,"seconds":3.773719072341919e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.859375,"distances_sum":2724.5802157292414}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9750228937728941,"seconds":3.9227306842803955e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.9375,"distances_sum":2810.1143546979115}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9719150641025646,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.921875,"distances_sum":2798.652611616049}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.978033424908425,"seconds":3.943219780921936e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.9140625,"distances_sum":2850.650508879197}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670043498168501,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.90625,"distances_sum":2758.1455474568843}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.978033424908425,"seconds":3.943219780921936e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.9140625,"distances_sum":2850.650508879197}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.978033424908425,"seconds":3.943219780921936e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.9140625,"distances_sum":2850.650508879197}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6162109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6162109375,"f1":0.7505874333999341,"seconds":3.0454248189926147e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.3203125,"distances_sum":1459.1796934209099}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5185546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5185546875,"f1":0.6694588397713402,"seconds":2.559274435043335e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.8125,"distances_sum":1182.3307186298457}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8386545745920755,"seconds":3.1888484954833984e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.921875,"distances_sum":1878.8458812996378}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7373046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7373046875,"f1":0.8386545745920755,"seconds":3.1888484954833984e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.921875,"distances_sum":1878.8458812996378}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9287488553113555,"seconds":3.7085264921188354e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.5859375,"distances_sum":2445.044765527807}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8425746128871138,"seconds":3.1068921089172363e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.84375,"distances_sum":1932.5930159646696}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9370509698634705,"seconds":3.5874545574188232e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6796875,"distances_sum":2536.8972540802915}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9370509698634705,"seconds":3.5874545574188232e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6796875,"distances_sum":2536.8972540802915}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9474072802197808,"seconds":3.546476364135742e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.765625,"distances_sum":2606.3484515142773}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9448920870795878,"seconds":3.606081008911133e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7109375,"distances_sum":2611.321722042972}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9474072802197808,"seconds":3.546476364135742e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.765625,"distances_sum":2606.3484515142773}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.908203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9474072802197808,"seconds":3.546476364135742e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.765625,"distances_sum":2606.3484515142773}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7157703407703413,"seconds":2.687796950340271e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.3125,"distances_sum":1277.9291552255204}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8175574425574433,"seconds":2.9578804969787598e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.5859375,"distances_sum":1638.4084209231476}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8643537018537029,"seconds":3.3508986234664917e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.9921875,"distances_sum":1964.6781835344243}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8643537018537029,"seconds":3.3508986234664917e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.9921875,"distances_sum":1964.6781835344243}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604567307692309,"seconds":3.825873136520386e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8359375,"distances_sum":2602.1983888522127}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9326751373626381,"seconds":3.7997961044311523e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.5390625,"distances_sum":2420.5305225176644}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9250551531801539,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.5078125,"distances_sum":2392.9922936679723}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9063046328671333,"seconds":3.511086106300354e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.328125,"distances_sum":2238.6924869023214}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9500660797535803,"seconds":3.6172568798065186e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.6875,"distances_sum":2542.6439074157697}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9105347777222783,"seconds":4.762783646583557e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.3671875,"distances_sum":2301.65529308268}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9604567307692309,"seconds":3.825873136520386e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8359375,"distances_sum":2602.1983888522127}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9751316391941394,"seconds":3.732740879058838e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.875,"distances_sum":2704.2766982044477}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9633585164835168,"seconds":3.7178397178649902e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.875,"distances_sum":2595.7296253492195}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.96873282967033,"seconds":3.9245933294296265e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.859375,"distances_sum":2666.325115915427}, best_list's length: 16, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9751316391941394,"seconds":3.732740879058838e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.875,"distances_sum":2704.2766982044477}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9751316391941394,"seconds":3.732740879058838e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.875,"distances_sum":2704.2766982044477}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9852864583333332,"recall":0.6708984375,"f1":0.7896184544622051,"seconds":3.1385570764541626e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.015625,"distances_sum":1290.0743851382404}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":0.9852864583333332,"recall":0.6708984375,"f1":0.7896184544622051,"seconds":3.1385570764541626e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.015625,"distances_sum":1290.0743851382404}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":4,"bsize":4}, perf: {"precision":0.9927083333333333,"recall":0.6875,"f1":0.804746295371296,"seconds":3.077089786529541e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.875,"distances_sum":1324.3037392936474}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":5,"bsize":5}, perf: {"precision":0.9882719494047618,"recall":0.73828125,"f1":0.8355192333707967,"seconds":3.1888484954833984e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.171875,"distances_sum":1515.8507621466993}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73828125,"state":{"ssize":5,"bsize":5},"perf":{"precision":0.9882719494047618,"recall":0.73828125,"f1":0.8355192333707967,"seconds":3.1888484954833984e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.171875,"distances_sum":1515.8507621466993}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":8,"bsize":5}, perf: {"precision":0.9912760416666666,"recall":0.7548828125,"f1":0.8476250312187819,"seconds":3.2763928174972534e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.15625,"distances_sum":1529.405040279124}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":9,"bsize":9}, perf: {"precision":0.9880673363095238,"recall":0.91015625,"f1":0.944257240155678,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.8125,"distances_sum":2092.0335362605765}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":6,"bsize":7}, perf: {"precision":0.9894810267857143,"recall":0.857421875,"f1":0.9130590113011993,"seconds":3.647059202194214e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.65625,"distances_sum":1885.4492420586462}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":9,"bsize":9},"perf":{"precision":0.9880673363095238,"recall":0.91015625,"f1":0.944257240155678,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.8125,"distances_sum":2092.0335362605765}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91015625,"state":{"ssize":9,"bsize":9},"perf":{"precision":0.9880673363095238,"recall":0.91015625,"f1":0.944257240155678,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.8125,"distances_sum":2092.0335362605765}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.18359375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.18359375,"f1":null,"seconds":1.819804310798645e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":5.2578125,"distances_sum":322.0480520809093}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.18359375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.18359375,"f1":null,"seconds":1.819804310798645e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":5.2578125,"distances_sum":322.0480520809093}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":2.29664146900177e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":6.703125,"distances_sum":709.2679560583538}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7866267413142424,"seconds":3.0677765607833862e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.7578125,"distances_sum":1307.4474678212812}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6630859375,"f1":0.7866267413142424,"seconds":3.0677765607833862e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.7578125,"distances_sum":1307.4474678212812}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8662715756465763,"seconds":3.390014171600342e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.234375,"distances_sum":1627.2488522928788}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9142570970695979,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.4921875,"distances_sum":1886.2300533745529}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8505859375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8505859375,"f1":0.9142570970695979,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.4921875,"distances_sum":1886.2300533745529}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9720467032967036,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.9140625,"distances_sum":2286.8550571221745}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9640109890109896,"seconds":3.919005393981934e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.921875,"distances_sum":2212.9565279993685}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9276556776556785,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.6328125,"distances_sum":1979.6098806767316}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9593437812187816,"seconds":3.863126039505005e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8515625,"distances_sum":2239.5530686584225}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.950417811355312,"seconds":4.0996819734573364e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8046875,"distances_sum":2146.677064430458}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9377690018315026,"seconds":4.14624810218811e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.7578125,"distances_sum":2043.2967154012638}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":11,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9160599816849824,"seconds":3.38628888130188e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.546875,"distances_sum":1885.9217738000823}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9720467032967036,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.9140625,"distances_sum":2286.8550571221745}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9720467032967036,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.9140625,"distances_sum":2286.8550571221745}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.56640625,"f1":0.7088137556887564,"seconds":2.7883797883987427e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":7.2421875,"distances_sum":1088.1179981948235}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2734375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2734375,"f1":null,"seconds":2.2351741790771484e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":6.46875,"distances_sum":532.3059293199534}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.287109375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.287109375,"f1":null,"seconds":2.557411789894104e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":6.7578125,"distances_sum":558.2408456996386}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.56640625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.56640625,"f1":0.7088137556887564,"seconds":2.7883797883987427e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":7.2421875,"distances_sum":1088.1179981948235}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9308207417582426,"seconds":4.500150680541992e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.796875,"distances_sum":2065.344404439438}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8050205003330011,"seconds":4.108995199203491e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":7.8203125,"distances_sum":1385.3682801847604}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8692822802197809,"seconds":4.3101608753204346e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.21875,"distances_sum":1651.4353754945976}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9308207417582426,"seconds":4.500150680541992e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.796875,"distances_sum":2065.344404439438}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591174450549454,"seconds":3.870576620101929e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.90625,"distances_sum":2240.5782731155336}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9501175907425913,"seconds":3.7364661693573e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.8671875,"distances_sum":2184.2625020249416}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9594551282051286,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.84375,"distances_sum":2269.8235325777673}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9591174450549454,"seconds":3.870576620101929e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.90625,"distances_sum":2240.5782731155336}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9591174450549454,"seconds":3.870576620101929e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.90625,"distances_sum":2240.5782731155336}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":2.205371856689453e-6,"exhaustive_search_seconds":9.51811671257019e-7,"evaluations":6.34375,"distances_sum":766.3243041440151}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.537109375,"f1":0.6821787587412592,"seconds":2.691522240638733e-6,"exhaustive_search_seconds":9.51811671257019e-7,"evaluations":6.9609375,"distances_sum":1024.25795170229}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.537109375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.537109375,"f1":0.6821787587412592,"seconds":2.691522240638733e-6,"exhaustive_search_seconds":9.51811671257019e-7,"evaluations":6.9609375,"distances_sum":1024.25795170229}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.843190143190144,"seconds":3.634020686149597e-6,"exhaustive_search_seconds":9.51811671257019e-7,"evaluations":7.8203125,"distances_sum":1522.5008405420879}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8485181485181493,"seconds":3.2242387533187866e-6,"exhaustive_search_seconds":9.51811671257019e-7,"evaluations":7.9609375,"distances_sum":1583.8757262556344}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8968952922077931,"seconds":3.734603524208069e-6,"exhaustive_search_seconds":9.51811671257019e-7,"evaluations":8.34375,"distances_sum":1821.2932658887312}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.826171875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.826171875,"f1":0.8968952922077931,"seconds":3.734603524208069e-6,"exhaustive_search_seconds":9.51811671257019e-7,"evaluations":8.34375,"distances_sum":1821.2932658887312}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.910259532134533,"seconds":3.7420541048049927e-6,"exhaustive_search_seconds":9.51811671257019e-7,"evaluations":8.375,"distances_sum":1888.4868620177506}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9634157509157514,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":9.51811671257019e-7,"evaluations":8.84375,"distances_sum":2259.631779997462}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.911453130203131,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":9.51811671257019e-7,"evaluations":8.5078125,"distances_sum":1962.4618299024455}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9459363553113559,"seconds":3.913417458534241e-6,"exhaustive_search_seconds":9.51811671257019e-7,"evaluations":8.71875,"distances_sum":2164.8709591972824}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9634157509157514,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":9.51811671257019e-7,"evaluations":8.84375,"distances_sum":2259.631779997462}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9634157509157514,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":9.51811671257019e-7,"evaluations":8.84375,"distances_sum":2259.631779997462}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3798828125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3798828125,"f1":null,"seconds":2.3692846298217773e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":6.09375,"distances_sum":704.9852993570594}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3984375,"f1":null,"seconds":2.4922192096710205e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":6.2890625,"distances_sum":763.8990094291005}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5537109375,"f1":0.6996066433566439,"seconds":2.93925404548645e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":7.4609375,"distances_sum":1065.3392382801399}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5537109375,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5537109375,"f1":0.6996066433566439,"seconds":2.93925404548645e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":7.4609375,"distances_sum":1065.3392382801399}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7843614718614728,"seconds":3.170222043991089e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":7.8046875,"distances_sum":1324.8504895989247}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8548404720279729,"seconds":3.2652169466018677e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.1796875,"distances_sum":1568.3773165848727}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9064279470529478,"seconds":3.512948751449585e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.5703125,"distances_sum":1856.0272290450216}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8958619505494514,"seconds":3.384426236152649e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.4453125,"distances_sum":1790.6362693492651}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.837890625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.837890625,"f1":0.9064279470529478,"seconds":3.512948751449585e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.5703125,"distances_sum":1856.0272290450216}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.941466346153847,"seconds":3.7606805562973022e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7734375,"distances_sum":2077.153170278648}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9328347000222007,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.71875,"distances_sum":2066.6293518153816}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9651842948717952,"seconds":3.7048012018203735e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.9296875,"distances_sum":2256.606162630514}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9470524267399274,"seconds":3.6582350730895996e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7734375,"distances_sum":2158.2136831880052}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9199748168498174,"seconds":3.602355718612671e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.5703125,"distances_sum":1971.7389959225256}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9651842948717952,"seconds":3.7048012018203735e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.9296875,"distances_sum":2256.606162630514}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9651842948717952,"seconds":3.7048012018203735e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.9296875,"distances_sum":2256.606162630514}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8653991841491852,"seconds":3.4347176551818848e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.1796875,"distances_sum":1618.7347662372663}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5244140625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5244140625,"f1":0.6721674159174165,"seconds":2.6337802410125732e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":7.2734375,"distances_sum":947.485356661089}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8653991841491852,"seconds":3.4347176551818848e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.1796875,"distances_sum":1618.7347662372663}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.914205586080587,"seconds":3.7029385566711426e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.6328125,"distances_sum":1864.351336616046}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9680689102564106,"seconds":4.157423973083496e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.9140625,"distances_sum":2218.9356521263594}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9667842574092576,"seconds":4.760921001434326e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.9140625,"distances_sum":2223.503066572383}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9360405219780228,"seconds":3.978610038757324e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.875,"distances_sum":1999.7650482782537}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9680689102564106,"seconds":4.157423973083496e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.9140625,"distances_sum":2218.9356521263594}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9816048534798537,"seconds":4.258006811141968e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.9609375,"distances_sum":2311.394962443849}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.97358630952381,"seconds":4.408881068229675e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.9609375,"distances_sum":2249.4806489853136}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9813988095238098,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.984375,"distances_sum":2301.5207853530624}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9816048534798537,"seconds":4.258006811141968e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.9609375,"distances_sum":2311.394962443849}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9816048534798537,"seconds":4.258006811141968e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.9609375,"distances_sum":2311.394962443849}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.400390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.400390625,"f1":null,"seconds":3.7550926208496094e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.140625,"distances_sum":764.2475778753508}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5244140625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5244140625,"f1":null,"seconds":4.133209586143494e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.6953125,"distances_sum":987.2598791688155}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5244140625,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.5244140625,"f1":null,"seconds":4.133209586143494e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.6953125,"distances_sum":987.2598791688155}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9060616466866473,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.671875,"distances_sum":1896.3356681362409}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.920821886446887,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.6953125,"distances_sum":2031.664655058129}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8642578125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8642578125,"f1":0.920821886446887,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.6953125,"distances_sum":2031.664655058129}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9512133699633706,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8359375,"distances_sum":2184.3182270027064}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9683035714285719,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9296875,"distances_sum":2277.75854790327}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":11,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9696142399267403,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.828125,"distances_sum":2339.9543637252546}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9539491758241763,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8125,"distances_sum":2210.7725870145177}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":11,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9696142399267403,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.828125,"distances_sum":2339.9543637252546}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":11,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9696142399267403,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.828125,"distances_sum":2339.9543637252546}}, n: 9
inertia(cfft.distances) = 18.1503042929293
inertia(cdnet.distances) = 28.792102326076385
inertia(crand.distances) = 20.716991883116894
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9333333333333332
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444443
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9133333333333332
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9377777777777778
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8777777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8822222222222221
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.88
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8999999999999999
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8622222222222221
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9133333333333334
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8377777777777778
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 3, 1, 2, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 1, 3, 1, 3]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.4844000032447871] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4844000032447871, 0.20199682363078145] ***
*** starting iteration: 2; err: [Inf, 0.4844000032447871, 0.20199682363078145] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4844000032447871, 0.20199682363078145, 0.1734760594233187] ***
*** starting iteration: 3; err: [Inf, 0.4844000032447871, 0.20199682363078145, 0.1734760594233187] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4844000032447871, 0.20199682363078145, 0.1734760594233187, 0.16266767303038562] ***
*** starting iteration: 4; err: [Inf, 0.4844000032447871, 0.20199682363078145, 0.1734760594233187, 0.16266767303038562] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4844000032447871, 0.20199682363078145, 0.1734760594233187, 0.16266767303038562, 0.1590543045496817] ***
*** starting iteration: 5; err: [Inf, 0.4844000032447871, 0.20199682363078145, 0.1734760594233187, 0.16266767303038562, 0.1590543045496817] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4844000032447871, 0.20199682363078145, 0.1734760594233187, 0.16266767303038562, 0.1590543045496817, 0.15786312855221532] ***
*** starting iteration: 6; err: [Inf, 0.4844000032447871, 0.20199682363078145, 0.1734760594233187, 0.16266767303038562, 0.1590543045496817, 0.15786312855221532] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4844000032447871, 0.20199682363078145, 0.1734760594233187, 0.16266767303038562, 0.1590543045496817, 0.15786312855221532, 0.15786312855221532] ***
*** finished computation of 12 references, err: [Inf, 0.4844000032447871, 0.20199682363078145, 0.1734760594233187, 0.16266767303038562, 0.1590543045496817, 0.15786312855221532, 0.15786312855221532] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 8, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 4, 2]]
** centroid: 9, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 2)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 11, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 14 centroids; started with 12
acc = 0.96
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.3855117073729998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3855117073729998, 0.1937328182774665] ***
*** finished computation of 7 references, err: [Inf, 0.3855117073729998, 0.1937328182774665] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 2]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 3]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 1), (3, 3)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 6, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2904950655491577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2904950655491577, 0.1980104439844879] ***
*** starting iteration: 2; err: [Inf, 0.2904950655491577, 0.1980104439844879] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2904950655491577, 0.1980104439844879, 0.17086843738279334] ***
*** starting iteration: 3; err: [Inf, 0.2904950655491577, 0.1980104439844879, 0.17086843738279334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2904950655491577, 0.1980104439844879, 0.17086843738279334, 0.16589047113626013] ***
*** finished computation of 7 references, err: [Inf, 0.2904950655491577, 0.1980104439844879, 0.17086843738279334, 0.16589047113626013] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 7]]
** centroid: 7, normalized-entropy: 0.9494520153879484, [(2, 12), (3, 7)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40312541099727994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40312541099727994, 0.1952421580095456] ***
*** finished computation of 7 references, err: [Inf, 0.40312541099727994, 0.1952421580095456] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 2: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 17, 5]]
** centroid: 6, normalized-entropy: 0.7732266742876346, [(2, 17), (3, 5)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 1), (3, 20)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2970132813616514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2970132813616514, 0.21651901151999656] ***
*** finished computation of 7 references, err: [Inf, 0.2970132813616514, 0.21651901151999656] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 3]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 15), (3, 3)]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 17, 6]]
** centroid: 7, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8989000053164277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8989000053164277, 0.28535033208132193] ***
*** finished computation of 7 references, err: [Inf, 0.8989000053164277, 0.28535033208132193] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 5, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 8]]
** centroid: 7, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6382000039685667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6382000039685667, 0.3873500290054577] ***
*** finished computation of 7 references, err: [Inf, 0.6382000039685667, 0.3873500290054577] ***
*** center 1: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 9]]
** centroid: 2, normalized-entropy: 0.9975025463691153, [(2, 8), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6279999961211478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6279999961211478, 0.4530538317892116] ***
*** finished computation of 7 references, err: [Inf, 0.6279999961211478, 0.4530538317892116] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 3]]
** centroid: 1, normalized-entropy: 0.47983202361612853, [(2, 26), (3, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 6, 13]]
** centroid: 7, normalized-entropy: 0.8997437586982626, [(2, 6), (3, 13)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6252376862250962] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6252376862250962, 0.34421283156054633] ***
*** starting iteration: 2; err: [Inf, 0.6252376862250962, 0.34421283156054633] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6252376862250962, 0.34421283156054633, 0.34257843598529436] ***
*** starting iteration: 3; err: [Inf, 0.6252376862250962, 0.34421283156054633, 0.34257843598529436] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6252376862250962, 0.34421283156054633, 0.34257843598529436, 0.34257843598529436] ***
*** finished computation of 3 references, err: [Inf, 0.6252376862250962, 0.34421283156054633, 0.34257843598529436, 0.34257843598529436] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5757174000567596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5757174000567596, 0.3561390760594999] ***
*** starting iteration: 2; err: [Inf, 0.5757174000567596, 0.3561390760594999] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5757174000567596, 0.3561390760594999, 0.35586001775549236] ***
*** finished computation of 3 references, err: [Inf, 0.5757174000567596, 0.3561390760594999, 0.35586001775549236] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 1]]
** centroid: 1, normalized-entropy: 0.2108423003185322, [(2, 29), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 32]]
** centroid: 2, normalized-entropy: 0.5713549744279549, [(2, 5), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.570319672966248] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.570319672966248, 0.3844148949550594] ***
*** starting iteration: 2; err: [Inf, 0.570319672966248, 0.3844148949550594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.570319672966248, 0.3844148949550594, 0.3836381467808024] ***
*** finished computation of 3 references, err: [Inf, 0.570319672966248, 0.3844148949550594, 0.3836381467808024] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 2, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.9248000362445765] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9248000362445765, 0.7947557986748593] ***
*** starting iteration: 2; err: [Inf, 2.9248000362445765, 0.7947557986748593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9248000362445765, 0.7947557986748593, 0.5617796476829571] ***
*** starting iteration: 3; err: [Inf, 2.9248000362445765, 0.7947557986748593, 0.5617796476829571] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9248000362445765, 0.7947557986748593, 0.5617796476829571, 0.5319329132916226] ***
*** finished computation of 3 references, err: [Inf, 2.9248000362445765, 0.7947557986748593, 0.5617796476829571, 0.5319329132916226] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 6, 31]]
** centroid: 2, normalized-entropy: 0.6394571324851642, [(2, 6), (3, 31)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 28, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0616000074577991] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0616000074577991, 0.5119898427261472] ***
*** starting iteration: 2; err: [Inf, 1.0616000074577991, 0.5119898427261472] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0616000074577991, 0.5119898427261472, 0.5119898427261472] ***
*** finished computation of 3 references, err: [Inf, 1.0616000074577991, 0.5119898427261472, 0.5119898427261472] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 10]]
** centroid: 3, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1652000036047374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1652000036047374, 0.6366376267214984] ***
*** starting iteration: 2; err: [Inf, 1.1652000036047374, 0.6366376267214984] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1652000036047374, 0.6366376267214984, 0.6191491837408148] ***
*** starting iteration: 3; err: [Inf, 1.1652000036047374, 0.6366376267214984, 0.6191491837408148] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1652000036047374, 0.6366376267214984, 0.6191491837408148, 0.6063625858055279] ***
*** finished computation of 3 references, err: [Inf, 1.1652000036047374, 0.6366376267214984, 0.6191491837408148, 0.6063625858055279] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 32]]
** centroid: 2, normalized-entropy: 0.6789538995185759, [(2, 7), (3, 32)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 25, 3]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 25), (3, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.45490000041178535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45490000041178535, 0.2857899997097806] ***
*** finished computation of 7 references, err: [Inf, 0.45490000041178535, 0.2857899997097806] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 17]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(2, 1), (3, 17)]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 19, 8]]
** centroid: 7, normalized-entropy: 0.876716288999464, [(2, 19), (3, 8)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44070000587262753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44070000587262753, 0.31914272928658954] ***
*** finished computation of 7 references, err: [Inf, 0.44070000587262753, 0.31914272928658954] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 2]]
** centroid: 3, normalized-entropy: 1.0, [(2, 2), (3, 2)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5698999970078386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5698999970078386, 0.30386362811188783] ***
*** finished computation of 7 references, err: [Inf, 0.5698999970078386, 0.30386362811188783] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 15]]
** centroid: 5, normalized-entropy: 0.3372900666170139, [(2, 1), (3, 15)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 2]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 2)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8094000178891255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8094000178891255, 0.42029573420463706] ***
*** finished computation of 7 references, err: [Inf, 0.8094000178891255, 0.42029573420463706] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 21]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 1]]
** centroid: 2, normalized-entropy: 0.2108423003185322, [(2, 29), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.5136999998403389] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5136999998403389, 0.4981028826900928] ***
*** finished computation of 7 references, err: [Inf, 1.5136999998403389, 0.4981028826900928] ***
*** center 1: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 21]]
** centroid: 3, normalized-entropy: 0.9774178175281716, [(2, 30), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8866000068822779] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8866000068822779, 0.33288171068381234] ***
*** finished computation of 7 references, err: [Inf, 0.8866000068822779, 0.33288171068381234] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 6, 8]]
** centroid: 7, normalized-entropy: 0.9852281360342514, [(2, 6), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4235972581848916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4235972581848916, 0.22346405755880305] ***
*** finished computation of 7 references, err: [Inf, 0.4235972581848916, 0.22346405755880305] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 6, 17]]
** centroid: 6, normalized-entropy: 0.828055725379504, [(2, 6), (3, 17)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 28, 1]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3405639357974071] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3405639357974071, 0.17683559406820024] ***
*** finished computation of 7 references, err: [Inf, 0.3405639357974071, 0.17683559406820024] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 10]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35757844390207727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35757844390207727, 0.2718744001884314] ***
*** finished computation of 7 references, err: [Inf, 0.35757844390207727, 0.2718744001884314] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 4]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 26), (3, 4)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 5, 7]]
** centroid: 2, normalized-entropy: 0.9798687566511527, [(2, 5), (3, 7)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 1, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.9513000035958044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9513000035958044, 0.5542072708012086] ***
*** starting iteration: 2; err: [Inf, 2.9513000035958044, 0.5542072708012086] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9513000035958044, 0.5542072708012086, 0.5176905804898213] ***
*** starting iteration: 3; err: [Inf, 2.9513000035958044, 0.5542072708012086, 0.5176905804898213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9513000035958044, 0.5542072708012086, 0.5176905804898213, 0.5114367267654041] ***
*** finished computation of 3 references, err: [Inf, 2.9513000035958044, 0.5542072708012086, 0.5176905804898213, 0.5114367267654041] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 27]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 3), (3, 27)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 5]]
** centroid: 2, normalized-entropy: 0.581321498763703, [(2, 31), (3, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.827200007540455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.827200007540455, 0.5465383669867983] ***
*** starting iteration: 2; err: [Inf, 0.827200007540455, 0.5465383669867983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.827200007540455, 0.5465383669867983, 0.5258764170112227] ***
*** starting iteration: 3; err: [Inf, 0.827200007540455, 0.5465383669867983, 0.5258764170112227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.827200007540455, 0.5465383669867983, 0.5258764170112227, 0.5225395734737566] ***
*** finished computation of 3 references, err: [Inf, 0.827200007540455, 0.5465383669867983, 0.5258764170112227, 0.5225395734737566] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 10, 33]]
** centroid: 2, normalized-entropy: 0.7824441294066888, [(2, 10), (3, 33)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 24, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.2118000190540625] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.2118000190540625, 0.9672267757688789] ***
*** starting iteration: 2; err: [Inf, 4.2118000190540625, 0.9672267757688789] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.2118000190540625, 0.9672267757688789, 0.5457290487887717] ***
*** starting iteration: 3; err: [Inf, 4.2118000190540625, 0.9672267757688789, 0.5457290487887717] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.2118000190540625, 0.9672267757688789, 0.5457290487887717, 0.54218222073086] ***
*** finished computation of 3 references, err: [Inf, 4.2118000190540625, 0.9672267757688789, 0.5457290487887717, 0.54218222073086] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 12]]
** centroid: 3, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.056999997595106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.056999997595106, 0.4466500177304605] ***
*** starting iteration: 2; err: [Inf, 1.056999997595106, 0.4466500177304605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505] ***
*** starting iteration: 3; err: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803] ***
*** starting iteration: 4; err: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803, 0.3444596434480238] ***
*** starting iteration: 5; err: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803, 0.3444596434480238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803, 0.3444596434480238, 0.3274102195435372] ***
*** starting iteration: 6; err: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803, 0.3444596434480238, 0.3274102195435372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803, 0.3444596434480238, 0.3274102195435372, 0.3170528211660344] ***
*** starting iteration: 7; err: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803, 0.3444596434480238, 0.3274102195435372, 0.3170528211660344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803, 0.3444596434480238, 0.3274102195435372, 0.3170528211660344, 0.3143641289344036] ***
*** starting iteration: 8; err: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803, 0.3444596434480238, 0.3274102195435372, 0.3170528211660344, 0.3143641289344036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803, 0.3444596434480238, 0.3274102195435372, 0.3170528211660344, 0.3143641289344036, 0.3122868934728862] ***
*** starting iteration: 9; err: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803, 0.3444596434480238, 0.3274102195435372, 0.3170528211660344, 0.3143641289344036, 0.3122868934728862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803, 0.3444596434480238, 0.3274102195435372, 0.3170528211660344, 0.3143641289344036, 0.3122868934728862, 0.30417756581244715] ***
*** starting iteration: 10; err: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803, 0.3444596434480238, 0.3274102195435372, 0.3170528211660344, 0.3143641289344036, 0.3122868934728862, 0.30417756581244715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803, 0.3444596434480238, 0.3274102195435372, 0.3170528211660344, 0.3143641289344036, 0.3122868934728862, 0.30417756581244715, 0.2957221387209161] ***
*** finished computation of 7 references, err: [Inf, 1.056999997595106, 0.4466500177304605, 0.384992513445505, 0.35823179050180803, 0.3444596434480238, 0.3274102195435372, 0.3170528211660344, 0.3143641289344036, 0.3122868934728862, 0.30417756581244715, 0.2957221387209161] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 3, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6503000013847613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6503000013847613, 0.3744217025040342] ***
*** starting iteration: 2; err: [Inf, 0.6503000013847613, 0.3744217025040342] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6503000013847613, 0.3744217025040342, 0.3556341868017053] ***
*** starting iteration: 3; err: [Inf, 0.6503000013847613, 0.3744217025040342, 0.3556341868017053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6503000013847613, 0.3744217025040342, 0.3556341868017053, 0.3296065330735314] ***
*** starting iteration: 4; err: [Inf, 0.6503000013847613, 0.3744217025040342, 0.3556341868017053, 0.3296065330735314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6503000013847613, 0.3744217025040342, 0.3556341868017053, 0.3296065330735314, 0.319304889948802] ***
*** starting iteration: 5; err: [Inf, 0.6503000013847613, 0.3744217025040342, 0.3556341868017053, 0.3296065330735314, 0.319304889948802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6503000013847613, 0.3744217025040342, 0.3556341868017053, 0.3296065330735314, 0.319304889948802, 0.31180307756246517] ***
*** starting iteration: 6; err: [Inf, 0.6503000013847613, 0.3744217025040342, 0.3556341868017053, 0.3296065330735314, 0.319304889948802, 0.31180307756246517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6503000013847613, 0.3744217025040342, 0.3556341868017053, 0.3296065330735314, 0.319304889948802, 0.31180307756246517, 0.3045147098125562] ***
*** starting iteration: 7; err: [Inf, 0.6503000013847613, 0.3744217025040342, 0.3556341868017053, 0.3296065330735314, 0.319304889948802, 0.31180307756246517, 0.3045147098125562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6503000013847613, 0.3744217025040342, 0.3556341868017053, 0.3296065330735314, 0.319304889948802, 0.31180307756246517, 0.3045147098125562, 0.3035551564294428] ***
*** finished computation of 7 references, err: [Inf, 0.6503000013847613, 0.3744217025040342, 0.3556341868017053, 0.3296065330735314, 0.319304889948802, 0.31180307756246517, 0.3045147098125562, 0.3035551564294428] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 11, 25]]
** centroid: 6, normalized-entropy: 0.887976319515135, [(2, 11), (3, 25)]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7455999972298362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7455999972298362, 0.40117739491533155] ***
*** starting iteration: 2; err: [Inf, 0.7455999972298362, 0.40117739491533155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837] ***
*** starting iteration: 3; err: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837, 0.2945865173854762] ***
*** starting iteration: 4; err: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837, 0.2945865173854762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837, 0.2945865173854762, 0.2822345848693367] ***
*** starting iteration: 5; err: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837, 0.2945865173854762, 0.2822345848693367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837, 0.2945865173854762, 0.2822345848693367, 0.2667043863298189] ***
*** starting iteration: 6; err: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837, 0.2945865173854762, 0.2822345848693367, 0.2667043863298189] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837, 0.2945865173854762, 0.2822345848693367, 0.2667043863298189, 0.24582803472403156] ***
*** starting iteration: 7; err: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837, 0.2945865173854762, 0.2822345848693367, 0.2667043863298189, 0.24582803472403156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837, 0.2945865173854762, 0.2822345848693367, 0.2667043863298189, 0.24582803472403156, 0.23437139838623] ***
*** starting iteration: 8; err: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837, 0.2945865173854762, 0.2822345848693367, 0.2667043863298189, 0.24582803472403156, 0.23437139838623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837, 0.2945865173854762, 0.2822345848693367, 0.2667043863298189, 0.24582803472403156, 0.23437139838623, 0.23291998649028833] ***
*** starting iteration: 9; err: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837, 0.2945865173854762, 0.2822345848693367, 0.2667043863298189, 0.24582803472403156, 0.23437139838623, 0.23291998649028833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837, 0.2945865173854762, 0.2822345848693367, 0.2667043863298189, 0.24582803472403156, 0.23437139838623, 0.23291998649028833, 0.23291998649028833] ***
*** finished computation of 7 references, err: [Inf, 0.7455999972298362, 0.40117739491533155, 0.319783228007837, 0.2945865173854762, 0.2822345848693367, 0.2667043863298189, 0.24582803472403156, 0.23437139838623, 0.23291998649028833, 0.23291998649028833] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 10]]
** centroid: 7, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.505000001232762] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.505000001232762, 1.0290297961179207] ***
*** starting iteration: 2; err: [Inf, 1.505000001232762, 1.0290297961179207] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.505000001232762, 1.0290297961179207, 1.028787735735492] ***
*** finished computation of 3 references, err: [Inf, 1.505000001232762, 1.0290297961179207, 1.028787735735492] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [17, 2, 0]]
** centroid: 2, normalized-entropy: 0.48546076074591343, [(1, 17), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 32]]
** centroid: 3, normalized-entropy: 1.0, [(2, 32), (3, 32)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8887999974185283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8887999974185283, 0.7572287083823707] ***
*** starting iteration: 2; err: [Inf, 1.8887999974185283, 0.7572287083823707] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8887999974185283, 0.7572287083823707, 0.6354849997593854] ***
*** starting iteration: 3; err: [Inf, 1.8887999974185283, 0.7572287083823707, 0.6354849997593854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8887999974185283, 0.7572287083823707, 0.6354849997593854, 0.5821038473915905] ***
*** finished computation of 3 references, err: [Inf, 1.8887999974185283, 0.7572287083823707, 0.6354849997593854, 0.5821038473915905] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 14]]
** centroid: 2, normalized-entropy: 0.8786744932173094, [(2, 33), (3, 14)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2608999959438714] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2608999959438714, 0.643572420324002] ***
*** starting iteration: 2; err: [Inf, 1.2608999959438714, 0.643572420324002] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2608999959438714, 0.643572420324002, 0.6191491837408148] ***
*** starting iteration: 3; err: [Inf, 1.2608999959438714, 0.643572420324002, 0.6191491837408148] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2608999959438714, 0.643572420324002, 0.6191491837408148, 0.6063625858055279] ***
*** finished computation of 3 references, err: [Inf, 1.2608999959438714, 0.643572420324002, 0.6191491837408148, 0.6063625858055279] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 32]]
** centroid: 2, normalized-entropy: 0.6789538995185759, [(2, 7), (3, 32)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 25, 3]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 25), (3, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 9.883100073913463] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.883100073913463, 1.6634319953009598] ***
*** starting iteration: 2; err: [Inf, 9.883100073913463, 1.6634319953009598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.883100073913463, 1.6634319953009598, 1.030841661737265] ***
*** starting iteration: 3; err: [Inf, 9.883100073913463, 1.6634319953009598, 1.030841661737265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.883100073913463, 1.6634319953009598, 1.030841661737265, 1.0219443072230632] ***
*** finished computation of 3 references, err: [Inf, 9.883100073913463, 1.6634319953009598, 1.030841661737265, 1.0219443072230632] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [20, 2, 0]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(1, 20), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 32]]
** centroid: 3, normalized-entropy: 1.0, [(2, 32), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0581999968225773] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0581999968225773, 0.8932336071029624] ***
*** starting iteration: 2; err: [Inf, 1.0581999968225773, 0.8932336071029624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0581999968225773, 0.8932336071029624, 0.7573372661682757] ***
*** starting iteration: 3; err: [Inf, 1.0581999968225773, 0.8932336071029624, 0.7573372661682757] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0581999968225773, 0.8932336071029624, 0.7573372661682757, 0.52459555990043] ***
*** finished computation of 3 references, err: [Inf, 1.0581999968225773, 0.8932336071029624, 0.7573372661682757, 0.52459555990043] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 23]]
** centroid: 1, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.7451999548611257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7451999548611257, 1.8404756393495831] ***
*** starting iteration: 2; err: [Inf, 3.7451999548611257, 1.8404756393495831] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7451999548611257, 1.8404756393495831, 0.8587280541217452] ***
*** starting iteration: 3; err: [Inf, 3.7451999548611257, 1.8404756393495831, 0.8587280541217452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7451999548611257, 1.8404756393495831, 0.8587280541217452, 0.56667794556206] ***
*** finished computation of 3 references, err: [Inf, 3.7451999548611257, 1.8404756393495831, 0.8587280541217452, 0.56667794556206] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 10]]
** centroid: 1, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 25]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.333299970659185] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.333299970659185, 0.9586828523979604] ***
*** finished computation of 3 references, err: [Inf, 4.333299970659185, 0.9586828523979604] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 2]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 30]]
** centroid: 2, normalized-entropy: 0.699772221773307, [(2, 7), (3, 30)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5292999973737733] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5292999973737733, 0.8926509752304379] ***
*** finished computation of 3 references, err: [Inf, 1.5292999973737733, 0.8926509752304379] ***
*** center 1: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 33]]
** centroid: 2, normalized-entropy: 1.0, [(2, 33), (3, 33)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [23, 1, 0]]
** centroid: 3, normalized-entropy: 0.24988229283318547, [(1, 23), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2104999786920527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2104999786920527, 0.6491962250848061] ***
*** finished computation of 3 references, err: [Inf, 1.2104999786920527, 0.6491962250848061] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 34]]
** centroid: 1, normalized-entropy: 0.8886466698980794, [(2, 15), (3, 34)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6418999756824195] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6418999756824195, 0.6424159286125973] ***
*** finished computation of 3 references, err: [Inf, 1.6418999756824195, 0.6424159286125973] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 12, 31]]
** centroid: 2, normalized-entropy: 0.8541802051521676, [(2, 12), (3, 31)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.963200051332954] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.963200051332954, 0.7516900014135266] ***
*** finished computation of 3 references, err: [Inf, 3.963200051332954, 0.7516900014135266] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 17, 33]]
** centroid: 2, normalized-entropy: 0.9248187049730301, [(2, 17), (3, 33)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.5466999998648747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5466999998648747, 0.6023163755101187] ***
*** finished computation of 3 references, err: [Inf, 2.5466999998648747, 0.6023163755101187] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 3]]
** centroid: 1, normalized-entropy: 0.47983202361612853, [(2, 26), (3, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 32]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(2, 6), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7825215117343507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7825215117343507, 0.2803424790088959] ***
*** starting iteration: 2; err: [Inf, 0.7825215117343507, 0.2803424790088959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7825215117343507, 0.2803424790088959, 0.20567033986981748] ***
*** starting iteration: 3; err: [Inf, 0.7825215117343507, 0.2803424790088959, 0.20567033986981748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7825215117343507, 0.2803424790088959, 0.20567033986981748, 0.18124608343115545] ***
*** starting iteration: 4; err: [Inf, 0.7825215117343507, 0.2803424790088959, 0.20567033986981748, 0.18124608343115545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7825215117343507, 0.2803424790088959, 0.20567033986981748, 0.18124608343115545, 0.16673861454978675] ***
*** starting iteration: 5; err: [Inf, 0.7825215117343507, 0.2803424790088959, 0.20567033986981748, 0.18124608343115545, 0.16673861454978675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7825215117343507, 0.2803424790088959, 0.20567033986981748, 0.18124608343115545, 0.16673861454978675, 0.16318130841396328] ***
*** starting iteration: 6; err: [Inf, 0.7825215117343507, 0.2803424790088959, 0.20567033986981748, 0.18124608343115545, 0.16673861454978675, 0.16318130841396328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7825215117343507, 0.2803424790088959, 0.20567033986981748, 0.18124608343115545, 0.16673861454978675, 0.16318130841396328, 0.16318130841396328] ***
*** finished computation of 7 references, err: [Inf, 0.7825215117343507, 0.2803424790088959, 0.20567033986981748, 0.18124608343115545, 0.16673861454978675, 0.16318130841396328, 0.16318130841396328] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 10, 8]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(2, 10), (3, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 17]]
** centroid: 5, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3107360102550379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3107360102550379, 0.20655312534685397] ***
*** starting iteration: 2; err: [Inf, 0.3107360102550379, 0.20655312534685397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3107360102550379, 0.20655312534685397, 0.19029882937374992] ***
*** starting iteration: 3; err: [Inf, 0.3107360102550379, 0.20655312534685397, 0.19029882937374992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3107360102550379, 0.20655312534685397, 0.19029882937374992, 0.18348563055948602] ***
*** starting iteration: 4; err: [Inf, 0.3107360102550379, 0.20655312534685397, 0.19029882937374992, 0.18348563055948602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3107360102550379, 0.20655312534685397, 0.19029882937374992, 0.18348563055948602, 0.18327846089936062] ***
*** finished computation of 7 references, err: [Inf, 0.3107360102550379, 0.20655312534685397, 0.19029882937374992, 0.18348563055948602, 0.18327846089936062] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 21]]
** centroid: 1, normalized-entropy: 0.9283620723948678, [(2, 11), (3, 21)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4498615035706098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4498615035706098, 0.29975461888027066] ***
*** starting iteration: 2; err: [Inf, 0.4498615035706098, 0.29975461888027066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4498615035706098, 0.29975461888027066, 0.28926099277094963] ***
*** starting iteration: 3; err: [Inf, 0.4498615035706098, 0.29975461888027066, 0.28926099277094963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4498615035706098, 0.29975461888027066, 0.28926099277094963, 0.2561860705631042] ***
*** starting iteration: 4; err: [Inf, 0.4498615035706098, 0.29975461888027066, 0.28926099277094963, 0.2561860705631042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4498615035706098, 0.29975461888027066, 0.28926099277094963, 0.2561860705631042, 0.23675312911711202] ***
*** starting iteration: 5; err: [Inf, 0.4498615035706098, 0.29975461888027066, 0.28926099277094963, 0.2561860705631042, 0.23675312911711202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4498615035706098, 0.29975461888027066, 0.28926099277094963, 0.2561860705631042, 0.23675312911711202, 0.22908334647161535] ***
*** starting iteration: 6; err: [Inf, 0.4498615035706098, 0.29975461888027066, 0.28926099277094963, 0.2561860705631042, 0.23675312911711202, 0.22908334647161535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4498615035706098, 0.29975461888027066, 0.28926099277094963, 0.2561860705631042, 0.23675312911711202, 0.22908334647161535, 0.2265737923843888] ***
*** starting iteration: 7; err: [Inf, 0.4498615035706098, 0.29975461888027066, 0.28926099277094963, 0.2561860705631042, 0.23675312911711202, 0.22908334647161535, 0.2265737923843888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4498615035706098, 0.29975461888027066, 0.28926099277094963, 0.2561860705631042, 0.23675312911711202, 0.22908334647161535, 0.2265737923843888, 0.22534724180107485] ***
*** starting iteration: 8; err: [Inf, 0.4498615035706098, 0.29975461888027066, 0.28926099277094963, 0.2561860705631042, 0.23675312911711202, 0.22908334647161535, 0.2265737923843888, 0.22534724180107485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4498615035706098, 0.29975461888027066, 0.28926099277094963, 0.2561860705631042, 0.23675312911711202, 0.22908334647161535, 0.2265737923843888, 0.22534724180107485, 0.22438126013597984] ***
*** finished computation of 7 references, err: [Inf, 0.4498615035706098, 0.29975461888027066, 0.28926099277094963, 0.2561860705631042, 0.23675312911711202, 0.22908334647161535, 0.2265737923843888, 0.22534724180107485, 0.22438126013597984] ***
*** center 1: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 6, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 19, 18]]
** centroid: 7, normalized-entropy: 0.9994730201859837, [(2, 19), (3, 18)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.8839999989057372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8839999989057372, 0.521798158298066] ***
*** starting iteration: 2; err: [Inf, 1.8839999989057372, 0.521798158298066] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8839999989057372, 0.521798158298066, 0.4974105939084531] ***
*** starting iteration: 3; err: [Inf, 1.8839999989057372, 0.521798158298066, 0.4974105939084531] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8839999989057372, 0.521798158298066, 0.4974105939084531, 0.4939148792938294] ***
*** starting iteration: 4; err: [Inf, 1.8839999989057372, 0.521798158298066, 0.4974105939084531, 0.4939148792938294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8839999989057372, 0.521798158298066, 0.4974105939084531, 0.4939148792938294, 0.49289821214727225] ***
*** starting iteration: 5; err: [Inf, 1.8839999989057372, 0.521798158298066, 0.4974105939084531, 0.4939148792938294, 0.49289821214727225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8839999989057372, 0.521798158298066, 0.4974105939084531, 0.4939148792938294, 0.49289821214727225, 0.49289821214727225] ***
*** finished computation of 3 references, err: [Inf, 1.8839999989057372, 0.521798158298066, 0.4974105939084531, 0.4939148792938294, 0.49289821214727225, 0.49289821214727225] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8874999982753968] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8874999982753968, 0.5959350113708155] ***
*** starting iteration: 2; err: [Inf, 0.8874999982753968, 0.5959350113708155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8874999982753968, 0.5959350113708155, 0.5354760499172134] ***
*** starting iteration: 3; err: [Inf, 0.8874999982753968, 0.5959350113708155, 0.5354760499172134] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8874999982753968, 0.5959350113708155, 0.5354760499172134, 0.5124419490553095] ***
*** starting iteration: 4; err: [Inf, 0.8874999982753968, 0.5959350113708155, 0.5354760499172134, 0.5124419490553095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8874999982753968, 0.5959350113708155, 0.5354760499172134, 0.5124419490553095, 0.5116208535949973] ***
*** finished computation of 3 references, err: [Inf, 0.8874999982753968, 0.5959350113708155, 0.5354760499172134, 0.5124419490553095, 0.5116208535949973] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 10]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.633599993673883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.633599993673883, 0.5433254807960797] ***
*** starting iteration: 2; err: [Inf, 1.633599993673883, 0.5433254807960797] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.633599993673883, 0.5433254807960797, 0.5409316864168389] ***
*** starting iteration: 3; err: [Inf, 1.633599993673883, 0.5433254807960797, 0.5409316864168389] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.633599993673883, 0.5433254807960797, 0.5409316864168389, 0.5409316864168389] ***
*** finished computation of 3 references, err: [Inf, 1.633599993673883, 0.5433254807960797, 0.5409316864168389, 0.5409316864168389] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 12]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 32), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.27706124163404255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27706124163404255, 0.17110307834101662] ***
*** starting iteration: 2; err: [Inf, 0.27706124163404255, 0.17110307834101662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27706124163404255, 0.17110307834101662, 0.16339877787963628] ***
*** starting iteration: 3; err: [Inf, 0.27706124163404255, 0.17110307834101662, 0.16339877787963628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27706124163404255, 0.17110307834101662, 0.16339877787963628, 0.16156229840450032] ***
*** finished computation of 7 references, err: [Inf, 0.27706124163404255, 0.17110307834101662, 0.16339877787963628, 0.16156229840450032] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4679902687159568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4679902687159568, 0.1893999322604974] ***
*** starting iteration: 2; err: [Inf, 0.4679902687159568, 0.1893999322604974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4679902687159568, 0.1893999322604974, 0.17691574211020827] ***
*** starting iteration: 3; err: [Inf, 0.4679902687159568, 0.1893999322604974, 0.17691574211020827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4679902687159568, 0.1893999322604974, 0.17691574211020827, 0.17143910763320386] ***
*** finished computation of 7 references, err: [Inf, 0.4679902687159568, 0.1893999322604974, 0.17691574211020827, 0.17143910763320386] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 9]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 18), (3, 9)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.9400000000000001, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9066666666666667, 0.9, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9733333333333333
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.5241000030157479] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5241000030157479, 0.2596066738052401] ***
*** starting iteration: 2; err: [Inf, 0.5241000030157479, 0.2596066738052401] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5241000030157479, 0.2596066738052401, 0.23068566317427816] ***
*** starting iteration: 3; err: [Inf, 0.5241000030157479, 0.2596066738052401, 0.23068566317427816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5241000030157479, 0.2596066738052401, 0.23068566317427816, 0.21638499608649028] ***
*** finished computation of 7 references, err: [Inf, 0.5241000030157479, 0.2596066738052401, 0.23068566317427816, 0.21638499608649028] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 2]]
** centroid: 4, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43800000043119297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43800000043119297, 0.2404058961752502] ***
*** starting iteration: 2; err: [Inf, 0.43800000043119297, 0.2404058961752502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43800000043119297, 0.2404058961752502, 0.22862734444918847] ***
*** starting iteration: 3; err: [Inf, 0.43800000043119297, 0.2404058961752502, 0.22862734444918847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43800000043119297, 0.2404058961752502, 0.22862734444918847, 0.2252307592159211] ***
*** finished computation of 7 references, err: [Inf, 0.43800000043119297, 0.2404058961752502, 0.22862734444918847, 0.2252307592159211] ***
*** center 1: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 9]]
** centroid: 3, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6735000022736558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6735000022736558, 0.25848754818145186] ***
*** starting iteration: 2; err: [Inf, 0.6735000022736558, 0.25848754818145186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6735000022736558, 0.25848754818145186, 0.24624009465838181] ***
*** starting iteration: 3; err: [Inf, 0.6735000022736558, 0.25848754818145186, 0.24624009465838181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6735000022736558, 0.25848754818145186, 0.24624009465838181, 0.24432532117161] ***
*** finished computation of 7 references, err: [Inf, 0.6735000022736558, 0.25848754818145186, 0.24624009465838181, 0.24432532117161] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 8]]
** centroid: 1, normalized-entropy: 0.876716288999464, [(2, 19), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.9400000000000001, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9066666666666667, 0.9, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9733333333333333
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 1.101074205614376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.101074205614376, 0.3536376716065657] ***
*** finished computation of 7 references, err: [Inf, 1.101074205614376, 0.3536376716065657] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 10, 28]]
** centroid: 2, normalized-entropy: 0.8314743880097292, [(2, 10), (3, 28)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 11, 4]]
** centroid: 5, normalized-entropy: 0.8366407419411671, [(2, 11), (3, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4283436914975123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4283436914975123, 0.23085146785150165] ***
*** finished computation of 7 references, err: [Inf, 0.4283436914975123, 0.23085146785150165] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 28, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 3]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 1), (3, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 5, 11]]
** centroid: 5, normalized-entropy: 0.8960382325345574, [(2, 5), (3, 11)]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.76372283949187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.76372283949187, 0.4543918552827618] ***
*** finished computation of 7 references, err: [Inf, 3.76372283949187, 0.4543918552827618] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 2, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 4]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 15), (3, 4)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [33, 2, 0]]
** centroid: 6, normalized-entropy: 0.3159971329784246, [(1, 33), (2, 2)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.9400000000000001, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9066666666666667, 0.9, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9733333333333333
finished with 18
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.9400000000000001, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9066666666666667, 0.9, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 5 finished
*** starting iteration: 1; err: [Inf, 2.691999996034748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.691999996034748, 0.5113899655542616] ***
*** starting iteration: 2; err: [Inf, 2.691999996034748, 0.5113899655542616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.691999996034748, 0.5113899655542616, 0.4595309289678612] ***
*** starting iteration: 3; err: [Inf, 2.691999996034748, 0.5113899655542616, 0.4595309289678612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.691999996034748, 0.5113899655542616, 0.4595309289678612, 0.44703734248983806] ***
*** starting iteration: 4; err: [Inf, 2.691999996034748, 0.5113899655542616, 0.4595309289678612, 0.44703734248983806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.691999996034748, 0.5113899655542616, 0.4595309289678612, 0.44703734248983806, 0.4404907430971069] ***
*** starting iteration: 5; err: [Inf, 2.691999996034748, 0.5113899655542616, 0.4595309289678612, 0.44703734248983806, 0.4404907430971069] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.691999996034748, 0.5113899655542616, 0.4595309289678612, 0.44703734248983806, 0.4404907430971069, 0.43423688937268956] ***
*** starting iteration: 6; err: [Inf, 2.691999996034748, 0.5113899655542616, 0.4595309289678612, 0.44703734248983806, 0.4404907430971069, 0.43423688937268956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.691999996034748, 0.5113899655542616, 0.4595309289678612, 0.44703734248983806, 0.4404907430971069, 0.43423688937268956, 0.4231708671098977] ***
*** starting iteration: 7; err: [Inf, 2.691999996034748, 0.5113899655542616, 0.4595309289678612, 0.44703734248983806, 0.4404907430971069, 0.43423688937268956, 0.4231708671098977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.691999996034748, 0.5113899655542616, 0.4595309289678612, 0.44703734248983806, 0.4404907430971069, 0.43423688937268956, 0.4231708671098977, 0.4163861209750326] ***
*** starting iteration: 8; err: [Inf, 2.691999996034748, 0.5113899655542616, 0.4595309289678612, 0.44703734248983806, 0.4404907430971069, 0.43423688937268956, 0.4231708671098977, 0.4163861209750326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.691999996034748, 0.5113899655542616, 0.4595309289678612, 0.44703734248983806, 0.4404907430971069, 0.43423688937268956, 0.4231708671098977, 0.4163861209750326, 0.41569837475455784] ***
*** finished computation of 7 references, err: [Inf, 2.691999996034748, 0.5113899655542616, 0.4595309289678612, 0.44703734248983806, 0.4404907430971069, 0.43423688937268956, 0.4231708671098977, 0.4163861209750326, 0.41569837475455784] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.5457000026060128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5457000026060128, 0.8569904084284766] ***
*** starting iteration: 2; err: [Inf, 1.5457000026060128, 0.8569904084284766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753] ***
*** starting iteration: 3; err: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057] ***
*** starting iteration: 4; err: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057, 0.5600701941308518] ***
*** starting iteration: 5; err: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057, 0.5600701941308518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057, 0.5600701941308518, 0.4785331718132071] ***
*** starting iteration: 6; err: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057, 0.5600701941308518, 0.4785331718132071] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057, 0.5600701941308518, 0.4785331718132071, 0.45787122183763157] ***
*** starting iteration: 7; err: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057, 0.5600701941308518, 0.4785331718132071, 0.45787122183763157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057, 0.5600701941308518, 0.4785331718132071, 0.45787122183763157, 0.4545343783001657] ***
*** starting iteration: 8; err: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057, 0.5600701941308518, 0.4785331718132071, 0.45787122183763157, 0.4545343783001657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057, 0.5600701941308518, 0.4785331718132071, 0.45787122183763157, 0.4545343783001657, 0.4528340185823194] ***
*** starting iteration: 9; err: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057, 0.5600701941308518, 0.4785331718132071, 0.45787122183763157, 0.4545343783001657, 0.4528340185823194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057, 0.5600701941308518, 0.4785331718132071, 0.45787122183763157, 0.4545343783001657, 0.4528340185823194, 0.45177414259425047] ***
*** starting iteration: 10; err: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057, 0.5600701941308518, 0.4785331718132071, 0.45787122183763157, 0.4545343783001657, 0.4528340185823194, 0.45177414259425047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057, 0.5600701941308518, 0.4785331718132071, 0.45787122183763157, 0.4545343783001657, 0.4528340185823194, 0.45177414259425047, 0.4506610122215632] ***
*** finished computation of 7 references, err: [Inf, 1.5457000026060128, 0.8569904084284766, 0.824083823337753, 0.7201299653697057, 0.5600701941308518, 0.4785331718132071, 0.45787122183763157, 0.4545343783001657, 0.4528340185823194, 0.45177414259425047, 0.4506610122215632] ***
*** center 1: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 33]]
** centroid: 2, normalized-entropy: 0.6690158350565576, [(2, 7), (3, 33)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 27, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9673000028792265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9673000028792265, 0.34874750115097136] ***
*** starting iteration: 2; err: [Inf, 0.9673000028792265, 0.34874750115097136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9673000028792265, 0.34874750115097136, 0.3322524423377489] ***
*** starting iteration: 3; err: [Inf, 0.9673000028792265, 0.34874750115097136, 0.3322524423377489] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9673000028792265, 0.34874750115097136, 0.3322524423377489, 0.31311178017522545] ***
*** starting iteration: 4; err: [Inf, 0.9673000028792265, 0.34874750115097136, 0.3322524423377489, 0.31311178017522545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9673000028792265, 0.34874750115097136, 0.3322524423377489, 0.31311178017522545, 0.30635258520755115] ***
*** starting iteration: 5; err: [Inf, 0.9673000028792265, 0.34874750115097136, 0.3322524423377489, 0.31311178017522545, 0.30635258520755115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9673000028792265, 0.34874750115097136, 0.3322524423377489, 0.31311178017522545, 0.30635258520755115, 0.28303226054937763] ***
*** starting iteration: 6; err: [Inf, 0.9673000028792265, 0.34874750115097136, 0.3322524423377489, 0.31311178017522545, 0.30635258520755115, 0.28303226054937763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9673000028792265, 0.34874750115097136, 0.3322524423377489, 0.31311178017522545, 0.30635258520755115, 0.28303226054937763, 0.2717226163561012] ***
*** starting iteration: 7; err: [Inf, 0.9673000028792265, 0.34874750115097136, 0.3322524423377489, 0.31311178017522545, 0.30635258520755115, 0.28303226054937763, 0.2717226163561012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9673000028792265, 0.34874750115097136, 0.3322524423377489, 0.31311178017522545, 0.30635258520755115, 0.28303226054937763, 0.2717226163561012, 0.26947151674073794] ***
*** starting iteration: 8; err: [Inf, 0.9673000028792265, 0.34874750115097136, 0.3322524423377489, 0.31311178017522545, 0.30635258520755115, 0.28303226054937763, 0.2717226163561012, 0.26947151674073794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9673000028792265, 0.34874750115097136, 0.3322524423377489, 0.31311178017522545, 0.30635258520755115, 0.28303226054937763, 0.2717226163561012, 0.26947151674073794, 0.2687411202901585] ***
*** finished computation of 7 references, err: [Inf, 0.9673000028792265, 0.34874750115097136, 0.3322524423377489, 0.31311178017522545, 0.30635258520755115, 0.28303226054937763, 0.2717226163561012, 0.26947151674073794, 0.2687411202901585] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 10]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.9400000000000001, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9066666666666667, 0.9, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.9400000000000001, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9066666666666667, 0.9, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.9400000000000001, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9066666666666667, 0.9, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9733333333333333
finished with 20
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.7760631879357176] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7760631879357176, 0.3578849888831219] ***
*** starting iteration: 2; err: [Inf, 0.7760631879357176, 0.3578849888831219] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7760631879357176, 0.3578849888831219, 0.34950988182775355] ***
*** starting iteration: 3; err: [Inf, 0.7760631879357176, 0.3578849888831219, 0.34950988182775355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7760631879357176, 0.3578849888831219, 0.34950988182775355, 0.3432208365073112] ***
*** finished computation of 3 references, err: [Inf, 0.7760631879357176, 0.3578849888831219, 0.34950988182775355, 0.3432208365073112] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 7]]
** centroid: 3, normalized-entropy: 0.6789538995185759, [(2, 32), (3, 7)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.9517867863463194] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9517867863463194, 0.48776167262863773] ***
*** starting iteration: 2; err: [Inf, 1.9517867863463194, 0.48776167262863773] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9517867863463194, 0.48776167262863773, 0.41702110414328564] ***
*** starting iteration: 3; err: [Inf, 1.9517867863463194, 0.48776167262863773, 0.41702110414328564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9517867863463194, 0.48776167262863773, 0.41702110414328564, 0.3761985103322155] ***
*** finished computation of 3 references, err: [Inf, 1.9517867863463194, 0.48776167262863773, 0.41702110414328564, 0.3761985103322155] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 11, 33]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 11), (3, 33)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.040134747846119] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.040134747846119, 1.0166676859408157] ***
*** starting iteration: 2; err: [Inf, 4.040134747846119, 1.0166676859408157] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.040134747846119, 1.0166676859408157, 0.3837683997802124] ***
*** starting iteration: 3; err: [Inf, 4.040134747846119, 1.0166676859408157, 0.3837683997802124] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.040134747846119, 1.0166676859408157, 0.3837683997802124, 0.3823869361280792] ***
*** finished computation of 3 references, err: [Inf, 4.040134747846119, 1.0166676859408157, 0.3837683997802124, 0.3823869361280792] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.9400000000000001, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9066666666666667, 0.9, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9733333333333333
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.455555555555556, 2.4444444444444446, 3.6333333333333337, 1.0666666666666667], [5.011764705882354, 3.38235294117647, 1.4764705882352938, 0.24411764705882355], [7.4, 3.06, 6.16, 2.06], [6.66875, 3.20625, 5.7250000000000005, 2.2437500000000004], [5.529999999999999, 2.5600000000000005, 4.34, 1.41], [5.8, 4.0, 1.2, 0.2], [6.271428571428571, 3.0142857142857133, 4.535714285714286, 1.4714285714285715], [5.875, 2.725, 4.975, 1.9]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 3, 3, 2, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.380000000000001, 3.8699999999999997, 1.49, 0.29000000000000004], [6.6125, 2.9375, 4.65, 1.4375], [7.177777777777779, 2.966666666666667, 5.844444444444445, 1.9222222222222223], [6.316, 2.884, 5.371999999999999, 1.9719999999999995], [5.735294117647059, 2.764705882352941, 4.123529411764705, 1.2882352941176471], [5.125, 2.325, 3.375, 1.025], [5.4, 3.7, 1.5, 0.2], [4.821739130434783, 3.2565217391304344, 1.4217391304347824, 0.1956521739130435]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 3, 3, 2, 2, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.8538461538461535, 2.7, 4.2807692307692315, 1.3269230769230769], [4.888888888888889, 3.3888888888888884, 1.4888888888888887, 0.26666666666666666], [6.766666666666667, 2.895238095238095, 5.7904761904761894, 1.9333333333333338], [5.3066666666666675, 3.713333333333333, 1.5133333333333332, 0.29333333333333333], [4.8, 3.4, 1.6, 0.2], [4.655555555555555, 3.0, 1.388888888888889, 0.2111111111111111], [6.733333333333333, 3.0833333333333335, 4.8, 1.5166666666666666], [6.369230769230768, 2.9153846153846152, 5.153846153846154, 2.0]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 3, 1, 1, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[76, 3, 1, 1, 1, 19, 2, 1, 34, 23, 1, 13, 44, 19, 4, 26, 1, 13, 14, 20, 51, 29, 20, 22, 20, 30, 1, 36, 29, 32, 45, 39, 31, 36, 37, 27, 39, 19, 22, 29, 36, 33, 38, 43, 32, 34, 13, 25, 29, 1, 39, 34, 27, 35, 26, 31, 31, 31, 36, 37, 62, 31, 35, 45, 1, 22, 23, 25, 37, 1, 24, 28, 38, 42, 35, 33, 33, 48, 28, 40, 10, 30, 21, 10, 40, 44, 53, 51, 8, 35, 52, 33, 26, 31, 4, 19, 47, 43, 24, 23, 13, 32, 25, 2, 42, 34, 29, 46, 28, 31, 39, 45, 26, 45, 65, 21, 42, 19, 1, 52, 32, 51, 19, 28, 29, 60, 47, 41, 57, 1, 25, 47, 55, 27, 31, 14, 38, 36, 31, 30, 45, 31, 42, 13, 47, 18, 41, 29, 70, 56, 31, 42, 46, 28, 34, 38, 35, 42, 31, 35, 33, 30, 35, 15, 47, 40, 30, 29, 30, 35, 24, 17, 33, 19, 40, 30, 38, 43, 40, 49, 42, 43, 38, 38, 27, 46, 26, 39, 37, 35, 22, 39, 16, 50, 76, 12, 28, 36, 33, 57, 27, 29, 41, 41, 25, 81, 36, 29, 33, 24, 29, 64, 52, 32, 26, 45, 28, 43, 32, 27, 58, 20, 15, 47, 34, 48, 46, 40, 40, 21, 32, 36, 27, 34, 51, 31, 46, 63, 25, 42, 31, 25, 33, 38, 36, 40, 19, 59, 56, 85, 29, 22, 61, 42, 46, 29, 24, 38, 42, 40, 41, 26, 47, 40, 42, 59, 37, 13, 35, 24, 36, 52, 42, 63, 38, 48, 52, 34, 33, 54, 42, 31, 20, 31, 44, 30, 39, 26, 46, 36, 24, 42, 14, 36, 18, 39, 32, 31, 32, 33]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.638, speedup = 0.36227320534304247, eval_ratio = 0.041375)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.39670138888888884,"recall":0.39670138888888884,"f1":null,"seconds":5.801580846309662e-5,"exhaustive_search_seconds":0.0002465546131134033,"evaluations":339.84375,"distances_sum":1730.801446175839}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5703125,"recall":0.5703125,"f1":0.5703125,"seconds":8.599646389484406e-5,"exhaustive_search_seconds":0.0002465546131134033,"evaluations":378.4140625,"distances_sum":1606.1046699995175}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6631944444444442,"recall":0.6631944444444442,"f1":0.6631944444444442,"seconds":0.00023867562413215637,"exhaustive_search_seconds":0.0002465546131134033,"evaluations":417.15625,"distances_sum":1563.9788798234015}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.737847222222222,"recall":0.737847222222222,"f1":0.737847222222222,"seconds":0.00011739321053028107,"exhaustive_search_seconds":0.0002465546131134033,"evaluations":457.9921875,"distances_sum":1542.0978159167498}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.797743055555555,"recall":0.797743055555555,"f1":0.797743055555555,"seconds":0.0001529436558485031,"exhaustive_search_seconds":0.0002465546131134033,"evaluations":497.0234375,"distances_sum":1526.0752229988207}
KCenters.DeloneInvIndex> reached performance {"precision":0.8289930555555546,"recall":0.8289930555555546,"f1":0.8289930555555546,"seconds":0.0001804158091545105,"exhaustive_search_seconds":0.0002465546131134033,"evaluations":536.8203125,"distances_sum":1519.2481158723062}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8149999999999997, speedup = 1.8547903698580508, eval_ratio = 0.053469)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
