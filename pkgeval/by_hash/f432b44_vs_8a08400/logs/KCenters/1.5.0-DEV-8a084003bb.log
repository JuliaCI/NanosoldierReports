Julia Version 1.5.0-DEV.222
Commit 8a084003bb (2020-02-02 21:40 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed DataValueInterfaces ───────── v1.0.0
  Installed KCenters ──────────────────── v0.1.9
  Installed TableTraits ───────────────── v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed StatsBase ─────────────────── v0.32.0
  Installed MLDataPattern ─────────────── v0.5.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed LearnBase ─────────────────── v0.2.2
  Installed OrderedCollections ────────── v1.1.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed Tables ────────────────────── v0.2.11
  Installed Parsers ───────────────────── v0.3.11
  Installed Missings ──────────────────── v0.4.3
  Installed Compat ────────────────────── v3.2.0
  Installed DataStructures ────────────── v0.17.9
  Installed SimilaritySearch ──────────── v0.3.17
  Installed DataAPI ───────────────────── v1.1.0
  Installed Reexport ──────────────────── v0.2.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed MLDataUtils ───────────────── v0.5.0
  Installed JSON ──────────────────────── v0.21.0
  Installed DataFrames ────────────────── v0.20.0
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_lVoR3X/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 147.82000000000002
[ Info: 75.33999999999997
[ Info: 42.440000000000005
[ Info: 26.559999999999995
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.19999834944844
[ Info: 76.86000119157046
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.230983196612087
inertia(cdnet.distances) = 25.621881844491558
inertia(crand.distances) = 29.7928432154221
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.796115863303364,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.3828125,"distances_sum":2001.4028293617077}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6787109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6787109375,"f1":0.796115863303364,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.3828125,"distances_sum":2001.4028293617077}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8786437520812529,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.65625,"distances_sum":2449.2395812667605}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9363355394605402,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.890625,"distances_sum":2885.774578812582}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.940130182317683,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8515625,"distances_sum":2910.0235479154817}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.940130182317683,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8515625,"distances_sum":2910.0235479154817}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723443223443228,"seconds":6.3087791204452515e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9921875,"distances_sum":3154.484126662512}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9563301282051286,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.953125,"distances_sum":3025.134080301869}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9744448260073264,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.953125,"distances_sum":3199.988921026595}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.970220924908425,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9921875,"distances_sum":3135.6357380507525}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.951868964368965,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9140625,"distances_sum":3002.3478121575063}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9744448260073264,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.953125,"distances_sum":3199.988921026595}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9744448260073264,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.953125,"distances_sum":3199.988921026595}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8894052128427135,"seconds":9.418465197086334e-5,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.4140625,"distances_sum":2399.8037541970366}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3544921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3544921875,"f1":null,"seconds":3.604218363761902e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":6.15625,"distances_sum":1002.9168228262265}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.6979251651126657,"seconds":4.509463906288147e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":7.6171875,"distances_sum":1525.5516539840362}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8173828125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8894052128427135,"seconds":9.418465197086334e-5,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.4140625,"distances_sum":2399.8037541970366}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9077927281052292,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.40625,"distances_sum":2494.9229225589397}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596039377289382,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.8359375,"distances_sum":2907.804263527764}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9513450091575095,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.8671875,"distances_sum":2850.605662978967}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9596039377289382,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.8359375,"distances_sum":2907.804263527764}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9602907509157514,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.90625,"distances_sum":2891.7249626870907}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9775390625, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.9775390625,"f1":0.9878720238095238,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.9921875,"distances_sum":3119.6331373112075}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":7,"bsize":13}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9819196428571432,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.9609375,"distances_sum":3087.111253636457}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.970703125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.970703125,"f1":0.9838369963369966,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.96875,"distances_sum":3093.296054876456}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9803056318681319,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.96875,"distances_sum":3064.0328621896897}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9690876831501833,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.9296875,"distances_sum":2966.858741024939}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752060439560444,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.96875,"distances_sum":3018.0883270595536}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9775390625,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9775390625,"f1":0.9878720238095238,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.9921875,"distances_sum":3119.6331373112075}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9775390625,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9775390625,"f1":0.9878720238095238,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.9921875,"distances_sum":3119.6331373112075}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8097522269397276,"seconds":4.63239848613739e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":7.921875,"distances_sum":1885.7354079319073}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1806640625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1806640625,"f1":null,"seconds":3.341585397720337e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":6.3671875,"distances_sum":458.593952349122}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6982421875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6982421875,"f1":0.8097522269397276,"seconds":4.63239848613739e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":7.921875,"distances_sum":1885.7354079319073}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9485576923076929,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.6953125,"distances_sum":2811.032894202153}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9485576923076929,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.6953125,"distances_sum":2811.032894202153}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9566105769230773,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8125,"distances_sum":2846.71403304196}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9500057234432239,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.765625,"distances_sum":2821.4757097018655}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696085164835166,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8984375,"distances_sum":2900.829945803934}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696085164835166,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8984375,"distances_sum":2900.829945803934}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696085164835166,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8984375,"distances_sum":2900.829945803934}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1865234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1865234375,"f1":null,"seconds":3.0603259801864624e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.6171875,"distances_sum":514.5215511149531}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1865234375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1865234375,"f1":null,"seconds":3.0603259801864624e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.6171875,"distances_sum":514.5215511149531}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1865234375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1865234375,"f1":null,"seconds":3.0603259801864624e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.6171875,"distances_sum":514.5215511149531}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5146484375, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5146484375,"f1":null,"seconds":4.353001713752747e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.2734375,"distances_sum":1262.9768044365499}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7857403013653022,"seconds":4.699453711509705e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.0703125,"distances_sum":1644.5798506824324}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6650390625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6650390625,"f1":0.7857403013653022,"seconds":4.699453711509705e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.0703125,"distances_sum":1644.5798506824324}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9187671703296709,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.703125,"distances_sum":2353.5250497615025}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.947979624542125,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8203125,"distances_sum":2541.270082919543}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.947979624542125,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8203125,"distances_sum":2541.270082919543}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9670043498168504,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8515625,"distances_sum":2696.5436822926285}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9742387820512824,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.953125,"distances_sum":2716.1051918398507}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9742387820512824,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.953125,"distances_sum":2716.1051918398507}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9742387820512824,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.953125,"distances_sum":2716.1051918398507}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.6981834138084145,"seconds":4.388391971588135e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.6171875,"distances_sum":1319.903959579434}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5595703125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5595703125,"f1":0.6981834138084145,"seconds":4.388391971588135e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.6171875,"distances_sum":1319.903959579434}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9263195138195144,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.578125,"distances_sum":2372.985557081775}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.9263195138195144,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.578125,"distances_sum":2372.985557081775}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9306719322344327,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.53125,"distances_sum":2394.320747119548}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9550824175824181,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.796875,"distances_sum":2544.4125007137204}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9550824175824181,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.796875,"distances_sum":2544.4125007137204}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9550824175824181,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.796875,"distances_sum":2544.4125007137204}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.560546875,"f1":null,"seconds":4.492700099945068e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.484375,"distances_sum":1367.508655399746}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8945746961371971,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.515625,"distances_sum":2195.153258468007}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.70703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.70703125,"f1":0.8166146353646362,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.03125,"distances_sum":1819.1339767789166}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8232421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8232421875,"f1":0.8945746961371971,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.515625,"distances_sum":2195.153258468007}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9384761072261079,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7109375,"distances_sum":2522.1752134411345}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9394464910089918,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6875,"distances_sum":2495.304984086365}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9115155677655683,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.546875,"distances_sum":2293.852039097165}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9394464910089918,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6875,"distances_sum":2495.304984086365}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9673363095238099,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8984375,"distances_sum":2708.8502445746576}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9739583333333338,"seconds":6.381422281265259e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8984375,"distances_sum":2767.3055650336682}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9550480769230774,"seconds":6.2659382820129395e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7890625,"distances_sum":2631.4569822469593}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9739583333333338,"seconds":6.381422281265259e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8984375,"distances_sum":2767.3055650336682}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9739583333333338,"seconds":6.381422281265259e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8984375,"distances_sum":2767.3055650336682}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.361328125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.361328125,"f1":null,"seconds":3.864988684654236e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":6.375,"distances_sum":865.1052594692468}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8854400807525816,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.765625,"distances_sum":2092.3387302908345}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.806640625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.806640625,"f1":0.8854400807525816,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.765625,"distances_sum":2092.3387302908345}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9166843573093582,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.7421875,"distances_sum":2356.259189705923}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9600103021978027,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.890625,"distances_sum":2622.6263044610164}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9600103021978027,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.890625,"distances_sum":2622.6263044610164}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714289,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.984375,"distances_sum":2697.079321132827}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714289,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.984375,"distances_sum":2697.079321132827}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714289,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.984375,"distances_sum":2697.079321132827}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.642578125,"f1":0.7695596070596078,"seconds":4.244968295097351e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.359375,"distances_sum":1032.0363292127572}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.642578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.642578125,"f1":0.7695596070596078,"seconds":4.244968295097351e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.359375,"distances_sum":1032.0363292127572}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8823691933066944,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.109375,"distances_sum":1414.5343564654788}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9420444139194142,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.609375,"distances_sum":1741.5128560518065}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9420444139194142,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.609375,"distances_sum":1741.5128560518065}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9565190018315025,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.765625,"distances_sum":1784.677367514166}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635645604395611,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.828125,"distances_sum":1809.5393096087025}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9626545329670333,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.828125,"distances_sum":1805.0965260344537}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9635645604395611,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.828125,"distances_sum":1809.5393096087025}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9635645604395611,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.828125,"distances_sum":1809.5393096087025}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5439453125,"f1":0.6864550380175385,"seconds":3.7942081689834595e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.828125,"distances_sum":1045.8921650451484}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5439453125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5439453125,"f1":0.6864550380175385,"seconds":3.7942081689834595e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.828125,"distances_sum":1045.8921650451484}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9259787087912094,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.78125,"distances_sum":1907.7738551729249}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8540672868797877,"seconds":4.684552550315857e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.140625,"distances_sum":1513.5444408880605}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7158203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7158203125,"f1":0.8248839701964711,"seconds":4.481524229049683e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.8203125,"distances_sum":1406.9536581685115}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.8334372224997234,"seconds":4.621222615242004e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.90625,"distances_sum":1425.7726371216907}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8498491092241102,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.984375,"distances_sum":1528.6726567017395}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.873046875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.873046875,"f1":0.9259787087912094,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.78125,"distances_sum":1907.7738551729249}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9675824175824179,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8828125,"distances_sum":2158.5792738470295}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9617216117216123,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":2115.901247392649}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9461169039294045,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.671875,"distances_sum":2069.2391503325002}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9506753663003669,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8125,"distances_sum":2069.163190986826}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9576293498168503,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.875,"distances_sum":2091.503018451552}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9675824175824179,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8828125,"distances_sum":2158.5792738470295}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9675824175824179,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8828125,"distances_sum":2158.5792738470295}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":3.335997462272644e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.28125,"distances_sum":792.9617931994168}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7871701215451223,"seconds":4.336237907409668e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.71875,"distances_sum":1388.889318138846}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.29296875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.29296875,"f1":null,"seconds":3.11434268951416e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.6796875,"distances_sum":618.9594969432278}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5615234375,"f1":0.7027586996337002,"seconds":4.0549784898757935e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.1484375,"distances_sum":1131.9162377212847}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.7871701215451223,"seconds":4.336237907409668e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.71875,"distances_sum":1388.889318138846}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9577609890109894,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8515625,"distances_sum":2251.453762720523}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8921448343323349,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.671875,"distances_sum":1829.0890752944365}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9060496794871803,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.765625,"distances_sum":1884.005006881655}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8061651889776899,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.8046875,"distances_sum":1426.3245878582673}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.854810814185815,"seconds":4.71062958240509e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.0234375,"distances_sum":1617.4173210249648}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9577609890109894,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8515625,"distances_sum":2251.453762720523}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9735691391941396,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9765625,"distances_sum":2347.0988958883745}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9723214285714291,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.953125,"distances_sum":2338.752164911881}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9726190476190479,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.921875,"distances_sum":2343.1782645249414}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9645890567765572,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9296875,"distances_sum":2292.061384844043}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9594780219780223,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.890625,"distances_sum":2275.3738183076307}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9735691391941396,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9765625,"distances_sum":2347.0988958883745}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9735691391941396,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9765625,"distances_sum":2347.0988958883745}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":3.5706907510757446e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.46875,"distances_sum":836.4349217297255}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2548828125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2548828125,"f1":null,"seconds":3.287568688392639e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.8203125,"distances_sum":535.4158083021323}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8629552738927746,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.1015625,"distances_sum":1647.450615177707}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8629552738927746,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.1015625,"distances_sum":1647.450615177707}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9539720695970699,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8515625,"distances_sum":2205.727875634169}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9381587162837168,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7109375,"distances_sum":2115.4382878212004}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8844728188478198,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6875,"distances_sum":1767.8148795415002}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8958250083250092,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6171875,"distances_sum":1866.1914064641599}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9539720695970699,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8515625,"distances_sum":2205.727875634169}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9715029761904768,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9375,"distances_sum":2303.688122841601}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9662774725274731,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9375,"distances_sum":2289.512454963827}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":7,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857144,"seconds":6.280839443206787e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9765625,"distances_sum":2372.9839943211714}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9703125000000004,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8984375,"distances_sum":2311.7266950328385}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9724358974358979,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.921875,"distances_sum":2318.46617416283}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.96873282967033,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.90625,"distances_sum":2307.285925332046}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9648809523809526,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8515625,"distances_sum":2292.6797928153246}, best_list's length: 15, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9678399725274729,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8984375,"distances_sum":2291.565195538149}, best_list's length: 16, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9680460164835168,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.90625,"distances_sum":2296.6861884885056}, best_list's length: 17, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857144,"seconds":6.280839443206787e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9765625,"distances_sum":2372.9839943211714}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857144,"seconds":6.280839443206787e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9765625,"distances_sum":2372.9839943211714}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.7023698523698529,"seconds":3.945082426071167e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.2421875,"distances_sum":1123.1857449611728}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8594098609723616,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.25,"distances_sum":1680.125820642358}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8571985306360314,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.1953125,"distances_sum":1672.9457179075937}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8594098609723616,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.25,"distances_sum":1680.125820642358}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9392570970695976,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.75,"distances_sum":2185.106617389815}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8993163086913094,"seconds":5.159527063369751e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6328125,"distances_sum":1926.8703298056957}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9466783216783222,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.828125,"distances_sum":2217.1731342579187}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9231372793872797,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6953125,"distances_sum":2087.3279063008}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9342178654678664,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7265625,"distances_sum":2146.240543802916}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9466783216783222,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.828125,"distances_sum":2217.1731342579187}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9692021520146525,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.890625,"distances_sum":2367.6834734696067}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9732715201465207,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.96875,"distances_sum":2378.2493005395727}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524439102564105,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8515625,"distances_sum":2260.4031264707237}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9780505952380956,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8984375,"distances_sum":2430.271527710704}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9512164918414925,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8671875,"distances_sum":2245.839752276234}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9736435439560441,"seconds":6.11133873462677e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9609375,"distances_sum":2371.558358870586}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9719494047619051,"seconds":6.357766687870026e-5,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.953125,"distances_sum":2369.3430772261695}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9574633699633706,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.828125,"distances_sum":2309.0728091911415}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9780505952380956,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8984375,"distances_sum":2430.271527710704}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9780505952380956,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8984375,"distances_sum":2430.271527710704}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.390625,"f1":null,"seconds":3.6619603633880615e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.2109375,"distances_sum":780.8362204480109}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7945013320013328,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.625,"distances_sum":1566.3869275962368}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6767578125,"f1":0.7945013320013328,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.625,"distances_sum":1566.3869275962368}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9346497252747258,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.609375,"distances_sum":2261.5653373754753}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8645406676656686,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.046875,"distances_sum":1819.9684455618933}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8601721195471204,"seconds":4.682689905166626e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9921875,"distances_sum":1803.5176062415003}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9346497252747258,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.609375,"distances_sum":2261.5653373754753}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9666723901098906,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2460.894663982426}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9721211080586085,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9375,"distances_sum":2509.6581511610466}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9575778388278393,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":2425.1389393616923}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9581330128205132,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2434.0276957081396}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9550080128205134,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":2388.1052565432246}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9721211080586085,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9375,"distances_sum":2509.6581511610466}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9721211080586085,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9375,"distances_sum":2509.6581511610466}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7824633699633707,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.4375,"distances_sum":1421.6183202631191}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2548828125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2548828125,"f1":null,"seconds":3.6507844924926758e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":6.4296875,"distances_sum":518.2651520461911}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7824633699633707,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.4375,"distances_sum":1421.6183202631191}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8846528471528479,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.4453125,"distances_sum":1883.3243208332892}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.944969093406594,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.7578125,"distances_sum":2263.091902522997}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.944969093406594,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.7578125,"distances_sum":2263.091902522997}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.970152243589744,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.90625,"distances_sum":2420.3565911524097}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9734775641025646,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.875,"distances_sum":2465.1096554114647}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635073260073266,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.8515625,"distances_sum":2380.036513327164}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734775641025646,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.875,"distances_sum":2465.1096554114647}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734775641025646,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.875,"distances_sum":2465.1096554114647}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.609375,"distances_sum":771.6507701234927}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7880520521145528,"seconds":4.3120235204696655e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.515625,"distances_sum":1394.8526855991338}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6689453125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6689453125,"f1":0.7880520521145528,"seconds":4.3120235204696655e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.515625,"distances_sum":1394.8526855991338}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8871482683982694,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.296875,"distances_sum":1841.3773153449526}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9341835248085255,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.6796875,"distances_sum":2153.5919201062898}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8779819139194148,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.3046875,"distances_sum":1769.4047474196964}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9341835248085255,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.6796875,"distances_sum":2153.5919201062898}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9651270604395606,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8671875,"distances_sum":2324.549219625064}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9377492299367305,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7265625,"distances_sum":2159.8109996185335}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9635817307692311,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.84375,"distances_sum":2305.7838635251173}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9651270604395606,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8671875,"distances_sum":2324.549219625064}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9651270604395606,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8671875,"distances_sum":2324.549219625064}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.5781413316726685e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.8515625,"distances_sum":806.7487499759218}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.244140625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.244140625,"f1":null,"seconds":3.1944364309310913e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.8828125,"distances_sum":537.4934102169442}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4013671875,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.5781413316726685e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.8515625,"distances_sum":806.7487499759218}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7997018606393614,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.5078125,"distances_sum":1466.251271063091}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6806640625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6806640625,"f1":0.7997018606393614,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.5078125,"distances_sum":1466.251271063091}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9566277472527476,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8203125,"distances_sum":2330.44998586138}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9078556859806866,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.546875,"distances_sum":1977.6584905188056}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8472340159840169,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.8515625,"distances_sum":1657.7184782817114}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9566277472527476,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8203125,"distances_sum":2330.44998586138}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9566277472527476,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8203125,"distances_sum":2330.44998586138}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8115551115551123,"seconds":4.455447196960449e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.578125,"distances_sum":1526.2424267983367}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7001953125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7001953125,"f1":0.8115551115551123,"seconds":4.455447196960449e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.578125,"distances_sum":1526.2424267983367}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9275125915750924,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.5859375,"distances_sum":2144.17854536628}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9275125915750924,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.5859375,"distances_sum":2144.17854536628}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9720467032967036,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2393.705441053181}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9488953754578761,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.640625,"distances_sum":2285.9608615114257}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9665979853479855,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8125,"distances_sum":2384.1159068295406}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9720467032967036,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2393.705441053181}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9720467032967036,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2393.705441053181}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3701171875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.3701171875,"f1":0.5224636474636473,"seconds":3.93204391002655e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.3515625,"distances_sum":782.1834431787356}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3701171875,"state":{"ssize":1,"bsize":2},"perf":{"precision":1.0,"recall":0.3701171875,"f1":0.5224636474636473,"seconds":3.93204391002655e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.3515625,"distances_sum":782.1834431787356}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9181833791208799,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.640625,"distances_sum":2005.7187830284902}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.85546875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.9181833791208799,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.640625,"distances_sum":2005.7187830284902}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620249542124545,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2333.6695231131375}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9151218573093578,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6953125,"distances_sum":2078.6941258317856}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620249542124545,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2333.6695231131375}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620249542124545,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2333.6695231131375}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7918132215007225,"seconds":4.608184099197388e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.6953125,"distances_sum":1446.0179587088378}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":3.4477561712265015e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.65625,"distances_sum":835.0650808982396}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2431640625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2431640625,"f1":null,"seconds":3.3620744943618774e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.65625,"distances_sum":517.5262018188198}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.673828125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.673828125,"f1":0.7918132215007225,"seconds":4.608184099197388e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.6953125,"distances_sum":1446.0179587088378}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.861435959873461,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.09375,"distances_sum":1711.3866316415938}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9064336704961713,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.734375,"distances_sum":1948.585018308596}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.837890625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.837890625,"f1":0.9064336704961713,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.734375,"distances_sum":1948.585018308596}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9285141941391949,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.59375,"distances_sum":2125.1421873650943}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9201980311355316,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.59375,"distances_sum":2126.188124787754}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9285141941391949,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.59375,"distances_sum":2125.1421873650943}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8759765625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9285141941391949,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.59375,"distances_sum":2125.1421873650943}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2412109375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2412109375,"f1":null,"seconds":3.242865204811096e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.59375,"distances_sum":520.7023710553484}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2412109375,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2412109375,"f1":null,"seconds":3.242865204811096e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.59375,"distances_sum":520.7023710553484}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7787842365967373,"seconds":4.3567270040512085e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.5234375,"distances_sum":1315.3628373519566}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8845669955044965,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.34375,"distances_sum":1772.6947735608085}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.439453125, conf: {"ssize":6,"bsize":2}, perf: {"precision":null,"recall":0.439453125,"f1":null,"seconds":3.50363552570343e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.7109375,"distances_sum":856.8276362595725}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8017578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8017578125,"f1":0.8845669955044965,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.34375,"distances_sum":1772.6947735608085}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8889683233433243,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.640625,"distances_sum":1831.465107164287}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9338427197802202,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.6171875,"distances_sum":2161.9175624509567}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9293097527472535,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.71875,"distances_sum":2080.0801368391376}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9344644938394943,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.640625,"distances_sum":2124.311170459445}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9344644938394943,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.640625,"distances_sum":2124.311170459445}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8896484375,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9344644938394943,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.640625,"distances_sum":2124.311170459445}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2783203125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2783203125,"f1":null,"seconds":3.3602118492126465e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.640625,"distances_sum":589.388465774237}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.462890625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.462890625,"f1":null,"seconds":3.732740879058838e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.6171875,"distances_sum":935.686666613154}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.462890625,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.462890625,"f1":null,"seconds":3.732740879058838e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.6171875,"distances_sum":935.686666613154}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8446033133533142,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.0,"distances_sum":1585.650142625655}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8513798701298709,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.046875,"distances_sum":1642.8463316494165}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8516304875679885,"seconds":4.934147000312805e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.0703125,"distances_sum":1626.2438272128418}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8513798701298709,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.046875,"distances_sum":1642.8463316494165}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9625629578754583,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8828125,"distances_sum":2333.7996761258946}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9461054570429576,"seconds":6.416812539100647e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.84375,"distances_sum":2204.416232592126}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9481169871794874,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7734375,"distances_sum":2247.0078975749666}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8982543498168506,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.6640625,"distances_sum":1867.5868402779786}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9625629578754583,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8828125,"distances_sum":2333.7996761258946}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9625629578754583,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8828125,"distances_sum":2333.7996761258946}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.27734375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.27734375,"f1":null,"seconds":3.3676624298095703e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.7109375,"distances_sum":601.7520279118609}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8595758408258418,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.96875,"distances_sum":1755.986096167706}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8595758408258418,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.96875,"distances_sum":1755.986096167706}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9550995879120885,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.90625,"distances_sum":2280.6392917438325}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.928462683150184,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.75,"distances_sum":2120.965377416166}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9550995879120885,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.90625,"distances_sum":2280.6392917438325}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9695512820512824,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.984375,"distances_sum":2385.1452485840578}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685668498168503,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.890625,"distances_sum":2401.128580805007}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9695512820512824,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.984375,"distances_sum":2385.1452485840578}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9695512820512824,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.984375,"distances_sum":2385.1452485840578}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.568359375,"f1":null,"seconds":4.209578037261963e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.8203125,"distances_sum":1208.6854409584403}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.568359375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.568359375,"f1":null,"seconds":4.209578037261963e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.8203125,"distances_sum":1208.6854409584403}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8155922202797211,"seconds":4.9658119678497314e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.3203125,"distances_sum":1539.5730903776434}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9296817765567771,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8125,"distances_sum":2130.8838292395535}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9296817765567771,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8125,"distances_sum":2130.8838292395535}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.971634615384616,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9140625,"distances_sum":2407.2024160424367}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9690304487179491,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9140625,"distances_sum":2386.2656848289457}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9568166208791213,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.828125,"distances_sum":2332.3174939651844}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.971634615384616,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9140625,"distances_sum":2407.2024160424367}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.971634615384616,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9140625,"distances_sum":2407.2024160424367}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.548828125,"f1":null,"seconds":4.24310564994812e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.75,"distances_sum":1104.1652588556226}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.548828125,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.548828125,"f1":null,"seconds":4.24310564994812e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.75,"distances_sum":1104.1652588556226}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7112835081585088,"seconds":4.33996319770813e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.953125,"distances_sum":1195.1646408823392}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.57421875,"f1":null,"seconds":4.248693585395813e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.890625,"distances_sum":1196.516497246457}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.57421875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.57421875,"f1":null,"seconds":4.248693585395813e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.890625,"distances_sum":1196.516497246457}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8858802655677663,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.9921875,"distances_sum":1830.0057552425715}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8943967490842498,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.421875,"distances_sum":1864.8873123317169}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7789783133533141,"seconds":4.308298230171204e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.359375,"distances_sum":1414.8810676187911}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8173828125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8943967490842498,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.421875,"distances_sum":1864.8873123317169}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8173828125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8943967490842498,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.421875,"distances_sum":1864.8873123317169}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7951028138528146,"seconds":4.606321454048157e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.28125,"distances_sum":1390.7858099518614}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5556640625,"f1":null,"seconds":4.213303327560425e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.875,"distances_sum":1157.841765483995}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6787109375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6787109375,"f1":0.7951028138528146,"seconds":4.606321454048157e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.28125,"distances_sum":1390.7858099518614}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9580185439560442,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7421875,"distances_sum":2223.785034239223}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9580185439560442,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7421875,"distances_sum":2223.785034239223}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9611836080586084,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7578125,"distances_sum":2243.8756211858554}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9819196428571432,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9765625,"distances_sum":2336.058817499965}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819196428571432,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9765625,"distances_sum":2336.058817499965}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819196428571432,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9765625,"distances_sum":2336.058817499965}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3857421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3857421875,"f1":null,"seconds":3.857538104057312e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.3828125,"distances_sum":813.4881718799771}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.404296875,"f1":0.5535901598401598,"seconds":3.976747393608093e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.65625,"distances_sum":850.3876738684938}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.404296875,"state":{"ssize":3,"bsize":2},"perf":{"precision":1.0,"recall":0.404296875,"f1":0.5535901598401598,"seconds":3.976747393608093e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.65625,"distances_sum":850.3876738684938}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8124342671217679,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.734375,"distances_sum":1564.2843028965642}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8659574800199807,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2109375,"distances_sum":1736.8158010205016}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7949852231102239,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.6953125,"distances_sum":1459.5340033223592}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8659574800199807,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2109375,"distances_sum":1736.8158010205016}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9046911421911428,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4375,"distances_sum":1964.1695231886952}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9668555402930405,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8515625,"distances_sum":2386.0527648500247}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8726768023643032,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.15625,"distances_sum":1810.2896615240054}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.963244047619048,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.84375,"distances_sum":2341.9718203257094}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9312271062271071,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6171875,"distances_sum":2143.68832266318}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9668555402930405,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8515625,"distances_sum":2386.0527648500247}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9668555402930405,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8515625,"distances_sum":2386.0527648500247}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":3.6712735891342163e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.3984375,"distances_sum":758.7686058572663}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.404296875,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.404296875,"f1":null,"seconds":3.6712735891342163e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.3984375,"distances_sum":758.7686058572663}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.572265625,"f1":null,"seconds":4.217028617858887e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.421875,"distances_sum":1174.5888876180773}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7951314310689318,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.921875,"distances_sum":1408.3626615058008}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.8010468697968707,"seconds":4.6174973249435425e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.8515625,"distances_sum":1469.1343743625523}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7127421189921196,"seconds":4.021450877189636e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.4453125,"distances_sum":1178.7974439635113}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4443359375, conf: {"ssize":2,"bsize":2}, perf: {"precision":1.0,"recall":0.4443359375,"f1":0.5948371073371074,"seconds":3.60049307346344e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.7734375,"distances_sum":884.2729447337341}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7186764624264631,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.5078125,"distances_sum":1173.111191391817}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6826171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.8010468697968707,"seconds":4.6174973249435425e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.8515625,"distances_sum":1469.1343743625523}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9324461996337003,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7734375,"distances_sum":2121.2947292136378}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8827328921078929,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.546875,"distances_sum":1788.9886466592425}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9324461996337003,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7734375,"distances_sum":2121.2947292136378}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8818359375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9324461996337003,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7734375,"distances_sum":2121.2947292136378}}, n: 9
inertia(cfft.distances) = 20.456540750915746
inertia(cdnet.distances) = 24.193356705023387
inertia(crand.distances) = 20.861134903192045
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8822222222222221
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9288888888888889
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9155555555555556
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8822222222222221
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9377777777777778
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8866666666666667
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.92
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9222222222222222
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9199999999999999
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8933333333333332
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9133333333333334
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 3, 2, 2, 3, 1, 2, 1, 3, 1, 3, 2, 3, 3, 2, 3, 3, 2, 1, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 8, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 2, 3, 1, 2, 1, 3, 1, 3]
acc = 0.9133333333333333
*** starting iteration: 1; err: [Inf, 0.4098000038866708] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4098000038866708, 0.17469661414716703] ***
*** starting iteration: 2; err: [Inf, 0.4098000038866708, 0.17469661414716703] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4098000038866708, 0.17469661414716703, 0.15851993645177223] ***
*** starting iteration: 3; err: [Inf, 0.4098000038866708, 0.17469661414716703, 0.15851993645177223] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4098000038866708, 0.17469661414716703, 0.15851993645177223, 0.15711952538369114] ***
*** starting iteration: 4; err: [Inf, 0.4098000038866708, 0.17469661414716703, 0.15851993645177223, 0.15711952538369114] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4098000038866708, 0.17469661414716703, 0.15851993645177223, 0.15711952538369114, 0.1563135764841968] ***
*** finished computation of 12 references, err: [Inf, 0.4098000038866708, 0.17469661414716703, 0.15851993645177223, 0.15711952538369114, 0.1563135764841968] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 14]]
** centroid: 10, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 12, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
finished with 14 centroids; started with 12
acc = 0.9266666666666666
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 2.474500018770995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.474500018770995, 0.522806951828787] ***
*** finished computation of 7 references, err: [Inf, 2.474500018770995, 0.522806951828787] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 4]]
** centroid: 1, normalized-entropy: 1.0, [(2, 4), (3, 4)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 23, 3]]
** centroid: 3, normalized-entropy: 0.5159469300074472, [(2, 23), (3, 3)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 9, 7]]
** centroid: 5, normalized-entropy: 0.9886994082884974, [(2, 9), (3, 7)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [28, 2, 0]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(1, 28), (2, 2)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6562000098173151] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6562000098173151, 0.29629020732679634] ***
*** starting iteration: 2; err: [Inf, 0.6562000098173151, 0.29629020732679634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6562000098173151, 0.29629020732679634, 0.2777158394027137] ***
*** starting iteration: 3; err: [Inf, 0.6562000098173151, 0.29629020732679634, 0.2777158394027137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6562000098173151, 0.29629020732679634, 0.2777158394027137, 0.2591966092313666] ***
*** finished computation of 7 references, err: [Inf, 0.6562000098173151, 0.29629020732679634, 0.2777158394027137, 0.2591966092313666] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 3]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 18), (3, 3)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 22]]
** centroid: 4, normalized-entropy: 0.5293608652873645, [(2, 3), (3, 22)]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 10, 2]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49940000769981696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49940000769981696, 0.2798726506363145] ***
*** starting iteration: 2; err: [Inf, 0.49940000769981696, 0.2798726506363145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49940000769981696, 0.2798726506363145, 0.26711489875809274] ***
*** starting iteration: 3; err: [Inf, 0.49940000769981696, 0.2798726506363145, 0.26711489875809274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49940000769981696, 0.2798726506363145, 0.26711489875809274, 0.26104604335314247] ***
*** finished computation of 7 references, err: [Inf, 0.49940000769981696, 0.2798726506363145, 0.26711489875809274, 0.26104604335314247] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 19]]
** centroid: 1, normalized-entropy: 0.7950402793845225, [(2, 6), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5991000068538428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5991000068538428, 0.22437533261439774] ***
*** starting iteration: 2; err: [Inf, 0.5991000068538428, 0.22437533261439774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5991000068538428, 0.22437533261439774, 0.21221180189030447] ***
*** starting iteration: 3; err: [Inf, 0.5991000068538428, 0.22437533261439774, 0.21221180189030447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5991000068538428, 0.22437533261439774, 0.21221180189030447, 0.21167050087818368] ***
*** finished computation of 7 references, err: [Inf, 0.5991000068538428, 0.22437533261439774, 0.21221180189030447, 0.21167050087818368] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 8]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 10), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 7, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5009000063629544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5009000063629544, 0.251857350398146] ***
*** finished computation of 7 references, err: [Inf, 0.5009000063629544, 0.251857350398146] ***
*** center 1: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 3]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 2), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 9]]
** centroid: 4, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5941000047637278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5941000047637278, 0.3019093143364713] ***
*** finished computation of 7 references, err: [Inf, 0.5941000047637278, 0.3019093143364713] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 24, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 21]]
** centroid: 4, normalized-entropy: 0.8812908992306927, [(2, 9), (3, 21)]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48810000091996275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48810000091996275, 0.26209714482166613] ***
*** finished computation of 7 references, err: [Inf, 0.48810000091996275, 0.26209714482166613] ***
*** center 1: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8184525975977601] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8184525975977601, 0.39593041547186275] ***
*** starting iteration: 2; err: [Inf, 0.8184525975977601, 0.39593041547186275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8184525975977601, 0.39593041547186275, 0.39256264215638254] ***
*** starting iteration: 3; err: [Inf, 0.8184525975977601, 0.39593041547186275, 0.39256264215638254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8184525975977601, 0.39593041547186275, 0.39256264215638254, 0.3901765921494807] ***
*** finished computation of 3 references, err: [Inf, 0.8184525975977601, 0.39593041547186275, 0.39256264215638254, 0.3901765921494807] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 32]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 12), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 26, 2]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 26), (3, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5439000011099431] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5439000011099431, 0.3478732041488682] ***
*** finished computation of 7 references, err: [Inf, 0.5439000011099431, 0.3478732041488682] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 20]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 4), (3, 20)]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 31, 1]]
** centroid: 6, normalized-entropy: 0.2006223243127146, [(2, 31), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6137000031721701] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6137000031721701, 0.3027358052775339] ***
*** finished computation of 7 references, err: [Inf, 0.6137000031721701, 0.3027358052775339] ***
*** center 1: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 5, 18]]
** centroid: 5, normalized-entropy: 0.7553754125614286, [(2, 5), (3, 18)]
*** center 6: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9496000037648953] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9496000037648953, 0.5815495515255633] ***
*** finished computation of 3 references, err: [Inf, 0.9496000037648953, 0.5815495515255633] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 14]]
** centroid: 1, normalized-entropy: 0.8403586716091169, [(2, 38), (3, 14)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.246399996633952] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.246399996633952, 1.060927198848744] ***
*** finished computation of 3 references, err: [Inf, 1.246399996633952, 1.060927198848744] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 31]]
** centroid: 1, normalized-entropy: 0.9984628557283827, [(2, 34), (3, 31)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [13, 1, 0]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(1, 13), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.0789000190998532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0789000190998532, 0.5175548941712671] ***
*** finished computation of 3 references, err: [Inf, 2.0789000190998532, 0.5175548941712671] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 31]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(2, 5), (3, 31)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 22, 4]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 22), (3, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6483043148704744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6483043148704744, 0.39940352171693816] ***
*** starting iteration: 2; err: [Inf, 0.6483043148704744, 0.39940352171693816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6483043148704744, 0.39940352171693816, 0.39256264215638254] ***
*** starting iteration: 3; err: [Inf, 0.6483043148704744, 0.39940352171693816, 0.39256264215638254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6483043148704744, 0.39940352171693816, 0.39256264215638254, 0.3901765921494807] ***
*** finished computation of 3 references, err: [Inf, 0.6483043148704744, 0.39940352171693816, 0.39256264215638254, 0.3901765921494807] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 2]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 26), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 32]]
** centroid: 2, normalized-entropy: 0.8453509366224364, [(2, 12), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.47991595032166173] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47991595032166173, 0.3851131802485429] ***
*** starting iteration: 2; err: [Inf, 0.47991595032166173, 0.3851131802485429] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47991595032166173, 0.3851131802485429, 0.3832996594890129] ***
*** starting iteration: 3; err: [Inf, 0.47991595032166173, 0.3851131802485429, 0.3832996594890129] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47991595032166173, 0.3851131802485429, 0.3832996594890129, 0.3821566547417322] ***
*** finished computation of 3 references, err: [Inf, 0.47991595032166173, 0.3851131802485429, 0.3832996594890129, 0.3821566547417322] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 8]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.964162828495856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.964162828495856, 0.4580640372097971] ***
*** starting iteration: 2; err: [Inf, 0.964162828495856, 0.4580640372097971] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.964162828495856, 0.4580640372097971, 0.37621154582908334] ***
*** starting iteration: 3; err: [Inf, 0.964162828495856, 0.4580640372097971, 0.37621154582908334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.964162828495856, 0.4580640372097971, 0.37621154582908334, 0.35904707294567834] ***
*** finished computation of 3 references, err: [Inf, 0.964162828495856, 0.4580640372097971, 0.37621154582908334, 0.35904707294567834] ***
*** center 1: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 26]]
** centroid: 2, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 9]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 24), (3, 9)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.29578560947430754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29578560947430754, 0.1771691374597096] ***
*** starting iteration: 2; err: [Inf, 0.29578560947430754, 0.1771691374597096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29578560947430754, 0.1771691374597096, 0.16969173063484863] ***
*** starting iteration: 3; err: [Inf, 0.29578560947430754, 0.1771691374597096, 0.16969173063484863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29578560947430754, 0.1771691374597096, 0.16969173063484863, 0.16920162010984222] ***
*** finished computation of 7 references, err: [Inf, 0.29578560947430754, 0.1771691374597096, 0.16969173063484863, 0.16920162010984222] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 1, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.270451682372297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.270451682372297, 0.19496141509431816] ***
*** starting iteration: 2; err: [Inf, 0.270451682372297, 0.19496141509431816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.270451682372297, 0.19496141509431816, 0.1874003494942946] ***
*** starting iteration: 3; err: [Inf, 0.270451682372297, 0.19496141509431816, 0.1874003494942946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.270451682372297, 0.19496141509431816, 0.1874003494942946, 0.17784047725086907] ***
*** finished computation of 7 references, err: [Inf, 0.270451682372297, 0.19496141509431816, 0.1874003494942946, 0.17784047725086907] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 5]]
** centroid: 1, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5128272047106416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5128272047106416, 0.3206987766532372] ***
*** starting iteration: 2; err: [Inf, 0.5128272047106416, 0.3206987766532372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5128272047106416, 0.3206987766532372, 0.27002133828538855] ***
*** starting iteration: 3; err: [Inf, 0.5128272047106416, 0.3206987766532372, 0.27002133828538855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5128272047106416, 0.3206987766532372, 0.27002133828538855, 0.2505154415744098] ***
*** finished computation of 7 references, err: [Inf, 0.5128272047106416, 0.3206987766532372, 0.27002133828538855, 0.2505154415744098] ***
*** center 1: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 28]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 5]]
** centroid: 3, normalized-entropy: 0.961236604722876, [(2, 8), (3, 5)]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 19, 2]]
** centroid: 7, normalized-entropy: 0.45371633918694493, [(2, 19), (3, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1670000126661602] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1670000126661602, 0.7075531159334902] ***
*** starting iteration: 2; err: [Inf, 1.1670000126661602, 0.7075531159334902] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1670000126661602, 0.7075531159334902, 0.6398887096110941] ***
*** starting iteration: 3; err: [Inf, 1.1670000126661602, 0.7075531159334902, 0.6398887096110941] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1670000126661602, 0.7075531159334902, 0.6398887096110941, 0.5648310653002275] ***
*** finished computation of 3 references, err: [Inf, 1.1670000126661602, 0.7075531159334902, 0.6398887096110941, 0.5648310653002275] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 37, 13]]
** centroid: 2, normalized-entropy: 0.8267463724926181, [(2, 37), (3, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [28, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.932100006307726] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.932100006307726, 1.032546771748132] ***
*** starting iteration: 2; err: [Inf, 2.932100006307726, 1.032546771748132] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.932100006307726, 1.032546771748132, 1.0283253125515286] ***
*** starting iteration: 3; err: [Inf, 2.932100006307726, 1.032546771748132, 1.0283253125515286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.932100006307726, 1.032546771748132, 1.0283253125515286, 1.0283253125515286] ***
*** finished computation of 3 references, err: [Inf, 2.932100006307726, 1.032546771748132, 1.0283253125515286, 1.0283253125515286] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 31]]
** centroid: 1, normalized-entropy: 0.9984628557283827, [(2, 34), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.021099996369244] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.021099996369244, 0.5004110432248837] ***
*** starting iteration: 2; err: [Inf, 1.021099996369244, 0.5004110432248837] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.021099996369244, 0.5004110432248837, 0.49269505249991363] ***
*** starting iteration: 3; err: [Inf, 1.021099996369244, 0.5004110432248837, 0.49269505249991363] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.021099996369244, 0.5004110432248837, 0.49269505249991363, 0.49269505249991363] ***
*** finished computation of 3 references, err: [Inf, 1.021099996369244, 0.5004110432248837, 0.49269505249991363, 0.49269505249991363] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 24, 9]]
** centroid: 2, normalized-entropy: 0.8453509366224364, [(2, 24), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 26]]
** centroid: 3, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6204028757687752] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6204028757687752, 0.3987416572418401] ***
*** finished computation of 3 references, err: [Inf, 0.6204028757687752, 0.3987416572418401] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 33]]
** centroid: 1, normalized-entropy: 0.9113423759758414, [(2, 16), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3291999013765752] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3291999013765752, 0.4809835571119034] ***
*** finished computation of 3 references, err: [Inf, 1.3291999013765752, 0.4809835571119034] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 18]]
** centroid: 1, normalized-entropy: 0.9305861291319927, [(2, 34), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6686294731270124] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6686294731270124, 0.3733239614505497] ***
*** finished computation of 3 references, err: [Inf, 0.6686294731270124, 0.3733239614505497] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 26, 9]]
** centroid: 2, normalized-entropy: 0.8224042259549892, [(2, 26), (3, 9)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 26]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.33548700149440963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33548700149440963, 0.17697987929790274] ***
*** starting iteration: 2; err: [Inf, 0.33548700149440963, 0.17697987929790274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33548700149440963, 0.17697987929790274, 0.16358016638550638] ***
*** starting iteration: 3; err: [Inf, 0.33548700149440963, 0.17697987929790274, 0.16358016638550638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33548700149440963, 0.17697987929790274, 0.16358016638550638, 0.16202605348343396] ***
*** starting iteration: 4; err: [Inf, 0.33548700149440963, 0.17697987929790274, 0.16358016638550638, 0.16202605348343396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33548700149440963, 0.17697987929790274, 0.16358016638550638, 0.16202605348343396, 0.16079780475128946] ***
*** starting iteration: 5; err: [Inf, 0.33548700149440963, 0.17697987929790274, 0.16358016638550638, 0.16202605348343396, 0.16079780475128946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33548700149440963, 0.17697987929790274, 0.16358016638550638, 0.16202605348343396, 0.16079780475128946, 0.1588544608650297] ***
*** starting iteration: 6; err: [Inf, 0.33548700149440963, 0.17697987929790274, 0.16358016638550638, 0.16202605348343396, 0.16079780475128946, 0.1588544608650297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33548700149440963, 0.17697987929790274, 0.16358016638550638, 0.16202605348343396, 0.16079780475128946, 0.1588544608650297, 0.15654008695204435] ***
*** starting iteration: 7; err: [Inf, 0.33548700149440963, 0.17697987929790274, 0.16358016638550638, 0.16202605348343396, 0.16079780475128946, 0.1588544608650297, 0.15654008695204435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33548700149440963, 0.17697987929790274, 0.16358016638550638, 0.16202605348343396, 0.16079780475128946, 0.1588544608650297, 0.15654008695204435, 0.1547987641047791] ***
*** starting iteration: 8; err: [Inf, 0.33548700149440963, 0.17697987929790274, 0.16358016638550638, 0.16202605348343396, 0.16079780475128946, 0.1588544608650297, 0.15654008695204435, 0.1547987641047791] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33548700149440963, 0.17697987929790274, 0.16358016638550638, 0.16202605348343396, 0.16079780475128946, 0.1588544608650297, 0.15654008695204435, 0.1547987641047791, 0.1547987641047791] ***
*** finished computation of 7 references, err: [Inf, 0.33548700149440963, 0.17697987929790274, 0.16358016638550638, 0.16202605348343396, 0.16079780475128946, 0.1588544608650297, 0.15654008695204435, 0.1547987641047791, 0.1547987641047791] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 11]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3146145122998617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3146145122998617, 0.19302275936859029] ***
*** starting iteration: 2; err: [Inf, 0.3146145122998617, 0.19302275936859029] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3146145122998617, 0.19302275936859029, 0.1796956812423322] ***
*** starting iteration: 3; err: [Inf, 0.3146145122998617, 0.19302275936859029, 0.1796956812423322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3146145122998617, 0.19302275936859029, 0.1796956812423322, 0.17699540402754446] ***
*** starting iteration: 4; err: [Inf, 0.3146145122998617, 0.19302275936859029, 0.1796956812423322, 0.17699540402754446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3146145122998617, 0.19302275936859029, 0.1796956812423322, 0.17699540402754446, 0.17550573083470344] ***
*** starting iteration: 5; err: [Inf, 0.3146145122998617, 0.19302275936859029, 0.1796956812423322, 0.17699540402754446, 0.17550573083470344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3146145122998617, 0.19302275936859029, 0.1796956812423322, 0.17699540402754446, 0.17550573083470344, 0.1748727500327763] ***
*** finished computation of 7 references, err: [Inf, 0.3146145122998617, 0.19302275936859029, 0.1796956812423322, 0.17699540402754446, 0.17550573083470344, 0.1748727500327763] ***
*** center 1: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 15]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 14, 3]]
** centroid: 6, normalized-entropy: 0.6722948170756378, [(2, 14), (3, 3)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9656400523444675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9656400523444675, 0.2838571369413443] ***
*** starting iteration: 2; err: [Inf, 0.9656400523444675, 0.2838571369413443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9656400523444675, 0.2838571369413443, 0.2806909667298621] ***
*** starting iteration: 3; err: [Inf, 0.9656400523444675, 0.2838571369413443, 0.2806909667298621] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9656400523444675, 0.2838571369413443, 0.2806909667298621, 0.2803333986328921] ***
*** finished computation of 7 references, err: [Inf, 0.9656400523444675, 0.2838571369413443, 0.2806909667298621, 0.2803333986328921] ***
*** center 1: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 23, 8]]
** centroid: 2, normalized-entropy: 0.8238116333123173, [(2, 23), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 27]]
** centroid: 7, normalized-entropy: 0.5547781633412736, [(2, 4), (3, 27)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.281290092443937] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.281290092443937, 0.6351499782394897] ***
*** finished computation of 3 references, err: [Inf, 1.281290092443937, 0.6351499782394897] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [28, 2, 0]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(1, 28), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 22]]
** centroid: 3, normalized-entropy: 0.9666186325481027, [(2, 34), (3, 22)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.267113591568862] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.267113591568862, 0.4705800352492125] ***
*** finished computation of 3 references, err: [Inf, 1.267113591568862, 0.4705800352492125] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 14, 31]]
** centroid: 2, normalized-entropy: 0.8944518845341284, [(2, 14), (3, 31)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.432908922917626] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.432908922917626, 0.34797172929618697] ***
*** finished computation of 3 references, err: [Inf, 0.432908922917626, 0.34797172929618697] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 27]]
** centroid: 1, normalized-entropy: 0.5547781633412736, [(2, 4), (3, 27)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 23, 8]]
** centroid: 2, normalized-entropy: 0.8238116333123173, [(2, 23), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.48229999733351264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48229999733351264, 0.3031453242600957] ***
*** starting iteration: 2; err: [Inf, 0.48229999733351264, 0.3031453242600957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48229999733351264, 0.3031453242600957, 0.2936595190367992] ***
*** starting iteration: 3; err: [Inf, 0.48229999733351264, 0.3031453242600957, 0.2936595190367992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48229999733351264, 0.3031453242600957, 0.2936595190367992, 0.28782114181018825] ***
*** starting iteration: 4; err: [Inf, 0.48229999733351264, 0.3031453242600957, 0.2936595190367992, 0.28782114181018825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48229999733351264, 0.3031453242600957, 0.2936595190367992, 0.28782114181018825, 0.27954676832535336] ***
*** starting iteration: 5; err: [Inf, 0.48229999733351264, 0.3031453242600957, 0.2936595190367992, 0.28782114181018825, 0.27954676832535336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48229999733351264, 0.3031453242600957, 0.2936595190367992, 0.28782114181018825, 0.27954676832535336, 0.27004596999861774] ***
*** starting iteration: 6; err: [Inf, 0.48229999733351264, 0.3031453242600957, 0.2936595190367992, 0.28782114181018825, 0.27954676832535336, 0.27004596999861774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48229999733351264, 0.3031453242600957, 0.2936595190367992, 0.28782114181018825, 0.27954676832535336, 0.27004596999861774, 0.26752297245236784] ***
*** starting iteration: 7; err: [Inf, 0.48229999733351264, 0.3031453242600957, 0.2936595190367992, 0.28782114181018825, 0.27954676832535336, 0.27004596999861774, 0.26752297245236784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48229999733351264, 0.3031453242600957, 0.2936595190367992, 0.28782114181018825, 0.27954676832535336, 0.27004596999861774, 0.26752297245236784, 0.26752297245236784] ***
*** finished computation of 7 references, err: [Inf, 0.48229999733351264, 0.3031453242600957, 0.2936595190367992, 0.28782114181018825, 0.27954676832535336, 0.27004596999861774, 0.26752297245236784, 0.26752297245236784] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 18]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 4, 1]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7484999962913749] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7484999962913749, 0.40568875303047236] ***
*** starting iteration: 2; err: [Inf, 0.7484999962913749, 0.40568875303047236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7484999962913749, 0.40568875303047236, 0.3095106009737314] ***
*** starting iteration: 3; err: [Inf, 0.7484999962913749, 0.40568875303047236, 0.3095106009737314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7484999962913749, 0.40568875303047236, 0.3095106009737314, 0.2722809075511449] ***
*** starting iteration: 4; err: [Inf, 0.7484999962913749, 0.40568875303047236, 0.3095106009737314, 0.2722809075511449] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7484999962913749, 0.40568875303047236, 0.3095106009737314, 0.2722809075511449, 0.2545712722999199] ***
*** starting iteration: 5; err: [Inf, 0.7484999962913749, 0.40568875303047236, 0.3095106009737314, 0.2722809075511449, 0.2545712722999199] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7484999962913749, 0.40568875303047236, 0.3095106009737314, 0.2722809075511449, 0.2545712722999199, 0.24307394902671994] ***
*** starting iteration: 6; err: [Inf, 0.7484999962913749, 0.40568875303047236, 0.3095106009737314, 0.2722809075511449, 0.2545712722999199, 0.24307394902671994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7484999962913749, 0.40568875303047236, 0.3095106009737314, 0.2722809075511449, 0.2545712722999199, 0.24307394902671994, 0.24259203639112428] ***
*** finished computation of 7 references, err: [Inf, 0.7484999962913749, 0.40568875303047236, 0.3095106009737314, 0.2722809075511449, 0.2545712722999199, 0.24307394902671994, 0.24259203639112428] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 4, 17]]
** centroid: 4, normalized-entropy: 0.7024665512903904, [(2, 4), (3, 17)]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6439000006515664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6439000006515664, 0.3249174141562639] ***
*** starting iteration: 2; err: [Inf, 0.6439000006515664, 0.3249174141562639] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6439000006515664, 0.3249174141562639, 0.2336135734024873] ***
*** starting iteration: 3; err: [Inf, 0.6439000006515664, 0.3249174141562639, 0.2336135734024873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6439000006515664, 0.3249174141562639, 0.2336135734024873, 0.2187832335649386] ***
*** starting iteration: 4; err: [Inf, 0.6439000006515664, 0.3249174141562639, 0.2336135734024873, 0.2187832335649386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6439000006515664, 0.3249174141562639, 0.2336135734024873, 0.2187832335649386, 0.2145116155707549] ***
*** starting iteration: 5; err: [Inf, 0.6439000006515664, 0.3249174141562639, 0.2336135734024873, 0.2187832335649386, 0.2145116155707549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6439000006515664, 0.3249174141562639, 0.2336135734024873, 0.2187832335649386, 0.2145116155707549, 0.21326905141665242] ***
*** starting iteration: 6; err: [Inf, 0.6439000006515664, 0.3249174141562639, 0.2336135734024873, 0.2187832335649386, 0.2145116155707549, 0.21326905141665242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6439000006515664, 0.3249174141562639, 0.2336135734024873, 0.2187832335649386, 0.2145116155707549, 0.21326905141665242, 0.21256705974085682] ***
*** finished computation of 7 references, err: [Inf, 0.6439000006515664, 0.3249174141562639, 0.2336135734024873, 0.2187832335649386, 0.2145116155707549, 0.21326905141665242, 0.21256705974085682] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 5, 8]]
** centroid: 7, normalized-entropy: 0.961236604722876, [(2, 5), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8141195416748281] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8141195416748281, 0.41007704878927664] ***
*** starting iteration: 2; err: [Inf, 0.8141195416748281, 0.41007704878927664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8141195416748281, 0.41007704878927664, 0.391753569189148] ***
*** starting iteration: 3; err: [Inf, 0.8141195416748281, 0.41007704878927664, 0.391753569189148] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8141195416748281, 0.41007704878927664, 0.391753569189148, 0.38077166806769003] ***
*** finished computation of 3 references, err: [Inf, 0.8141195416748281, 0.41007704878927664, 0.391753569189148, 0.38077166806769003] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 9]]
** centroid: 1, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3205472037852581] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3205472037852581, 0.3486990705546406] ***
*** starting iteration: 2; err: [Inf, 1.3205472037852581, 0.3486990705546406] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3205472037852581, 0.3486990705546406, 0.34814617577163054] ***
*** finished computation of 3 references, err: [Inf, 1.3205472037852581, 0.3486990705546406, 0.34814617577163054] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 23, 8]]
** centroid: 1, normalized-entropy: 0.8238116333123173, [(2, 23), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 27]]
** centroid: 2, normalized-entropy: 0.5547781633412736, [(2, 4), (3, 27)]
*** center 3: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0395999998049401] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0395999998049401, 0.6665637316727338] ***
*** starting iteration: 2; err: [Inf, 1.0395999998049401, 0.6665637316727338] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0395999998049401, 0.6665637316727338, 0.5950626615632827] ***
*** starting iteration: 3; err: [Inf, 1.0395999998049401, 0.6665637316727338, 0.5950626615632827] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0395999998049401, 0.6665637316727338, 0.5950626615632827, 0.5414919711680832] ***
*** starting iteration: 4; err: [Inf, 1.0395999998049401, 0.6665637316727338, 0.5950626615632827, 0.5414919711680832] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0395999998049401, 0.6665637316727338, 0.5950626615632827, 0.5414919711680832, 0.5218572108332065] ***
*** starting iteration: 5; err: [Inf, 1.0395999998049401, 0.6665637316727338, 0.5950626615632827, 0.5414919711680832, 0.5218572108332065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0395999998049401, 0.6665637316727338, 0.5950626615632827, 0.5414919711680832, 0.5218572108332065, 0.5208234012847267] ***
*** starting iteration: 6; err: [Inf, 1.0395999998049401, 0.6665637316727338, 0.5950626615632827, 0.5414919711680832, 0.5218572108332065, 0.5208234012847267] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0395999998049401, 0.6665637316727338, 0.5950626615632827, 0.5414919711680832, 0.5218572108332065, 0.5208234012847267, 0.5199729184728444] ***
*** finished computation of 3 references, err: [Inf, 1.0395999998049401, 0.6665637316727338, 0.5950626615632827, 0.5414919711680832, 0.5218572108332065, 0.5208234012847267, 0.5199729184728444] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 37, 11]]
** centroid: 1, normalized-entropy: 0.7765557854444601, [(2, 37), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9791000012687044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9791000012687044, 0.614616487218467] ***
*** starting iteration: 2; err: [Inf, 0.9791000012687044, 0.614616487218467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9791000012687044, 0.614616487218467, 0.571835668651342] ***
*** starting iteration: 3; err: [Inf, 0.9791000012687044, 0.614616487218467, 0.571835668651342] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9791000012687044, 0.614616487218467, 0.571835668651342, 0.5526546719253835] ***
*** starting iteration: 4; err: [Inf, 0.9791000012687044, 0.614616487218467, 0.571835668651342, 0.5526546719253835] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9791000012687044, 0.614616487218467, 0.571835668651342, 0.5526546719253835, 0.5484089825398176] ***
*** starting iteration: 5; err: [Inf, 0.9791000012687044, 0.614616487218467, 0.571835668651342, 0.5526546719253835, 0.5484089825398176] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9791000012687044, 0.614616487218467, 0.571835668651342, 0.5526546719253835, 0.5484089825398176, 0.547692507217823] ***
*** finished computation of 3 references, err: [Inf, 0.9791000012687044, 0.614616487218467, 0.571835668651342, 0.5526546719253835, 0.5484089825398176, 0.547692507217823] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 9]]
** centroid: 1, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8308000104848265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8308000104848265, 0.5438333355791901] ***
*** starting iteration: 2; err: [Inf, 0.8308000104848265, 0.5438333355791901] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8308000104848265, 0.5438333355791901, 0.5130604735150548] ***
*** starting iteration: 3; err: [Inf, 0.8308000104848265, 0.5438333355791901, 0.5130604735150548] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8308000104848265, 0.5438333355791901, 0.5130604735150548, 0.5095610176159177] ***
*** starting iteration: 4; err: [Inf, 0.8308000104848265, 0.5438333355791901, 0.5130604735150548, 0.5095610176159177] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8308000104848265, 0.5438333355791901, 0.5130604735150548, 0.5095610176159177, 0.505259888862074] ***
*** starting iteration: 5; err: [Inf, 0.8308000104848265, 0.5438333355791901, 0.5130604735150548, 0.5095610176159177, 0.505259888862074] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8308000104848265, 0.5438333355791901, 0.5130604735150548, 0.5095610176159177, 0.505259888862074, 0.5026925005641796] ***
*** starting iteration: 6; err: [Inf, 0.8308000104848265, 0.5438333355791901, 0.5130604735150548, 0.5095610176159177, 0.505259888862074, 0.5026925005641796] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8308000104848265, 0.5438333355791901, 0.5130604735150548, 0.5095610176159177, 0.505259888862074, 0.5026925005641796, 0.49860231243516545] ***
*** starting iteration: 7; err: [Inf, 0.8308000104848265, 0.5438333355791901, 0.5130604735150548, 0.5095610176159177, 0.505259888862074, 0.5026925005641796, 0.49860231243516545] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8308000104848265, 0.5438333355791901, 0.5130604735150548, 0.5095610176159177, 0.505259888862074, 0.5026925005641796, 0.49860231243516545, 0.49782307807261417] ***
*** finished computation of 3 references, err: [Inf, 0.8308000104848265, 0.5438333355791901, 0.5130604735150548, 0.5095610176159177, 0.505259888862074, 0.5026925005641796, 0.49860231243516545, 0.49782307807261417] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 30]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(2, 4), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 23, 5]]
** centroid: 3, normalized-entropy: 0.6769418697808861, [(2, 23), (3, 5)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2676000111016892] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2676000111016892, 0.5594798330382327] ***
*** finished computation of 3 references, err: [Inf, 1.2676000111016892, 0.5594798330382327] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 38, 13]]
** centroid: 1, normalized-entropy: 0.8189555018403103, [(2, 38), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.3994999740831355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3994999740831355, 0.5501348399735076] ***
*** finished computation of 3 references, err: [Inf, 2.3994999740831355, 0.5501348399735076] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.426100001946619] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.426100001946619, 0.501822575105275] ***
*** finished computation of 3 references, err: [Inf, 1.426100001946619, 0.501822575105275] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 25, 9]]
** centroid: 1, normalized-entropy: 0.8337649072106652, [(2, 25), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8854853260904162] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8854853260904162, 0.36088624237686007] ***
*** starting iteration: 2; err: [Inf, 0.8854853260904162, 0.36088624237686007] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8854853260904162, 0.36088624237686007, 0.3603499208700336] ***
*** finished computation of 3 references, err: [Inf, 0.8854853260904162, 0.36088624237686007, 0.3603499208700336] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 37, 11]]
** centroid: 3, normalized-entropy: 0.7765557854444601, [(2, 37), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6912582485094498] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6912582485094498, 0.42744190439364843] ***
*** starting iteration: 2; err: [Inf, 0.6912582485094498, 0.42744190439364843] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6912582485094498, 0.42744190439364843, 0.4071190295119686] ***
*** starting iteration: 3; err: [Inf, 0.6912582485094498, 0.42744190439364843, 0.4071190295119686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6912582485094498, 0.42744190439364843, 0.4071190295119686, 0.3970455137657092] ***
*** finished computation of 3 references, err: [Inf, 0.6912582485094498, 0.42744190439364843, 0.4071190295119686, 0.3970455137657092] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 30]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 5), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 1]]
** centroid: 3, normalized-entropy: 0.2055925081850832, [(2, 30), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6930163722741779] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6930163722741779, 0.37181364438225345] ***
*** starting iteration: 2; err: [Inf, 0.6930163722741779, 0.37181364438225345] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6930163722741779, 0.37181364438225345, 0.35632421646174683] ***
*** starting iteration: 3; err: [Inf, 0.6930163722741779, 0.37181364438225345, 0.35632421646174683] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6930163722741779, 0.37181364438225345, 0.35632421646174683, 0.35514224551959755] ***
*** finished computation of 3 references, err: [Inf, 0.6930163722741779, 0.37181364438225345, 0.35632421646174683, 0.35514224551959755] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 33]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 6), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 21, 2]]
** centroid: 3, normalized-entropy: 0.42622865699814483, [(2, 21), (3, 2)]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 15)
[0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.96
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.7387326649051371] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7387326649051371, 0.6438644785664498] ***
*** starting iteration: 2; err: [Inf, 0.7387326649051371, 0.6438644785664498] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7387326649051371, 0.6438644785664498, 0.643185828429536] ***
*** finished computation of 3 references, err: [Inf, 0.7387326649051371, 0.6438644785664498, 0.643185828429536] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [12, 1, 0]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(1, 12), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 37, 34]]
** centroid: 2, normalized-entropy: 0.9987117514654895, [(2, 37), (3, 34)]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7171637754382942] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7171637754382942, 0.7229578556226286] ***
*** starting iteration: 2; err: [Inf, 1.7171637754382942, 0.7229578556226286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938] ***
*** starting iteration: 3; err: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452] ***
*** starting iteration: 4; err: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452, 0.4843066924704346] ***
*** starting iteration: 5; err: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452, 0.4843066924704346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452, 0.4843066924704346, 0.42458166921860496] ***
*** starting iteration: 6; err: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452, 0.4843066924704346, 0.42458166921860496] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452, 0.4843066924704346, 0.42458166921860496, 0.4071190295119686] ***
*** starting iteration: 7; err: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452, 0.4843066924704346, 0.42458166921860496, 0.4071190295119686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452, 0.4843066924704346, 0.42458166921860496, 0.4071190295119686, 0.3970455137657092] ***
*** starting iteration: 8; err: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452, 0.4843066924704346, 0.42458166921860496, 0.4071190295119686, 0.3970455137657092] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452, 0.4843066924704346, 0.42458166921860496, 0.4071190295119686, 0.3970455137657092, 0.3921350673332749] ***
*** starting iteration: 9; err: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452, 0.4843066924704346, 0.42458166921860496, 0.4071190295119686, 0.3970455137657092, 0.3921350673332749] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452, 0.4843066924704346, 0.42458166921860496, 0.4071190295119686, 0.3970455137657092, 0.3921350673332749, 0.3877871132215847] ***
*** starting iteration: 10; err: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452, 0.4843066924704346, 0.42458166921860496, 0.4071190295119686, 0.3970455137657092, 0.3921350673332749, 0.3877871132215847] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452, 0.4843066924704346, 0.42458166921860496, 0.4071190295119686, 0.3970455137657092, 0.3921350673332749, 0.3877871132215847, 0.3858715154560805] ***
*** finished computation of 3 references, err: [Inf, 1.7171637754382942, 0.7229578556226286, 0.6929332699228938, 0.631723362271452, 0.4843066924704346, 0.42458166921860496, 0.4071190295119686, 0.3970455137657092, 0.3921350673332749, 0.3877871132215847, 0.3858715154560805] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 5]]
** centroid: 2, normalized-entropy: 0.5713549744279549, [(2, 32), (3, 5)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 26]]
** centroid: 3, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.1213906557145417] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.1213906557145417, 0.5969313628743965] ***
*** starting iteration: 2; err: [Inf, 3.1213906557145417, 0.5969313628743965] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.1213906557145417, 0.5969313628743965, 0.5941502873946377] ***
*** starting iteration: 3; err: [Inf, 3.1213906557145417, 0.5969313628743965, 0.5941502873946377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.1213906557145417, 0.5969313628743965, 0.5941502873946377, 0.5875947430734143] ***
*** starting iteration: 4; err: [Inf, 3.1213906557145417, 0.5969313628743965, 0.5941502873946377, 0.5875947430734143] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.1213906557145417, 0.5969313628743965, 0.5941502873946377, 0.5875947430734143, 0.5844838748835235] ***
*** starting iteration: 5; err: [Inf, 3.1213906557145417, 0.5969313628743965, 0.5941502873946377, 0.5875947430734143, 0.5844838748835235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.1213906557145417, 0.5969313628743965, 0.5941502873946377, 0.5875947430734143, 0.5844838748835235, 0.5844838748835235] ***
*** finished computation of 3 references, err: [Inf, 3.1213906557145417, 0.5969313628743965, 0.5941502873946377, 0.5875947430734143, 0.5844838748835235, 0.5844838748835235] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 24, 35]]
** centroid: 1, normalized-entropy: 0.9747785474909672, [(2, 24), (3, 35)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [21, 3, 0]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(1, 21), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.557000000612499] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.557000000612499, 1.8160152878490572] ***
*** starting iteration: 2; err: [Inf, 4.557000000612499, 1.8160152878490572] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163] ***
*** starting iteration: 3; err: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387] ***
*** starting iteration: 4; err: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387, 0.5696262876900613] ***
*** starting iteration: 5; err: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387, 0.5696262876900613] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387, 0.5696262876900613, 0.5683921837044692] ***
*** starting iteration: 6; err: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387, 0.5696262876900613, 0.5683921837044692] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387, 0.5696262876900613, 0.5683921837044692, 0.5652728225282396] ***
*** starting iteration: 7; err: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387, 0.5696262876900613, 0.5683921837044692, 0.5652728225282396] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387, 0.5696262876900613, 0.5683921837044692, 0.5652728225282396, 0.5614342433075166] ***
*** starting iteration: 8; err: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387, 0.5696262876900613, 0.5683921837044692, 0.5652728225282396, 0.5614342433075166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387, 0.5696262876900613, 0.5683921837044692, 0.5652728225282396, 0.5614342433075166, 0.553174936561874] ***
*** starting iteration: 9; err: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387, 0.5696262876900613, 0.5683921837044692, 0.5652728225282396, 0.5614342433075166, 0.553174936561874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387, 0.5696262876900613, 0.5683921837044692, 0.5652728225282396, 0.5614342433075166, 0.553174936561874, 0.5461798418715399] ***
*** starting iteration: 10; err: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387, 0.5696262876900613, 0.5683921837044692, 0.5652728225282396, 0.5614342433075166, 0.553174936561874, 0.5461798418715399] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387, 0.5696262876900613, 0.5683921837044692, 0.5652728225282396, 0.5614342433075166, 0.553174936561874, 0.5461798418715399, 0.5387534038101393] ***
*** finished computation of 3 references, err: [Inf, 4.557000000612499, 1.8160152878490572, 0.577439840542163, 0.5734056467907387, 0.5696262876900613, 0.5683921837044692, 0.5652728225282396, 0.5614342433075166, 0.553174936561874, 0.5461798418715399, 0.5387534038101393] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 36, 8]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1776000122020642] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1776000122020642, 0.9120918774870962] ***
*** starting iteration: 2; err: [Inf, 1.1776000122020642, 0.9120918774870962] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1776000122020642, 0.9120918774870962, 0.5705555435090569] ***
*** starting iteration: 3; err: [Inf, 1.1776000122020642, 0.9120918774870962, 0.5705555435090569] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1776000122020642, 0.9120918774870962, 0.5705555435090569, 0.5583365335091897] ***
*** starting iteration: 4; err: [Inf, 1.1776000122020642, 0.9120918774870962, 0.5705555435090569, 0.5583365335091897] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1776000122020642, 0.9120918774870962, 0.5705555435090569, 0.5583365335091897, 0.5498342736994714] ***
*** starting iteration: 5; err: [Inf, 1.1776000122020642, 0.9120918774870962, 0.5705555435090569, 0.5583365335091897, 0.5498342736994714] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1776000122020642, 0.9120918774870962, 0.5705555435090569, 0.5583365335091897, 0.5498342736994714, 0.5472839552573672] ***
*** starting iteration: 6; err: [Inf, 1.1776000122020642, 0.9120918774870962, 0.5705555435090569, 0.5583365335091897, 0.5498342736994714, 0.5472839552573672] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1776000122020642, 0.9120918774870962, 0.5705555435090569, 0.5583365335091897, 0.5498342736994714, 0.5472839552573672, 0.5472839552573672] ***
*** finished computation of 3 references, err: [Inf, 1.1776000122020642, 0.9120918774870962, 0.5705555435090569, 0.5583365335091897, 0.5498342736994714, 0.5472839552573672, 0.5472839552573672] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 8]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(2, 34), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 2, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4188000094585704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4188000094585704, 0.8633972550995043] ***
*** starting iteration: 2; err: [Inf, 1.4188000094585704, 0.8633972550995043] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4188000094585704, 0.8633972550995043, 0.8589704759449509] ***
*** starting iteration: 3; err: [Inf, 1.4188000094585704, 0.8633972550995043, 0.8589704759449509] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4188000094585704, 0.8633972550995043, 0.8589704759449509, 0.8583272733615094] ***
*** finished computation of 3 references, err: [Inf, 1.4188000094585704, 0.8633972550995043, 0.8589704759449509, 0.8583272733615094] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [24, 3, 0]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(1, 24), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 24, 35]]
** centroid: 2, normalized-entropy: 0.9747785474909672, [(2, 24), (3, 35)]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 17)
[0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.96
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 1.0073999902170712] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0073999902170712, 0.5931810489402721] ***
*** starting iteration: 2; err: [Inf, 1.0073999902170712, 0.5931810489402721] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0073999902170712, 0.5931810489402721, 0.577439840542163] ***
*** starting iteration: 3; err: [Inf, 1.0073999902170712, 0.5931810489402721, 0.577439840542163] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0073999902170712, 0.5931810489402721, 0.577439840542163, 0.5734056467907387] ***
*** finished computation of 3 references, err: [Inf, 1.0073999902170712, 0.5931810489402721, 0.577439840542163, 0.5734056467907387] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 33]]
** centroid: 1, normalized-entropy: 0.8589810370425965, [(2, 13), (3, 33)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9621999966835288] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9621999966835288, 0.5504974173164155] ***
*** starting iteration: 2; err: [Inf, 0.9621999966835288, 0.5504974173164155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9621999966835288, 0.5504974173164155, 0.5472766865527329] ***
*** starting iteration: 3; err: [Inf, 0.9621999966835288, 0.5504974173164155, 0.5472766865527329] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9621999966835288, 0.5504974173164155, 0.5472766865527329, 0.5472766865527329] ***
*** finished computation of 3 references, err: [Inf, 0.9621999966835288, 0.5504974173164155, 0.5472766865527329, 0.5472766865527329] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 9]]
** centroid: 1, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 22]]
** centroid: 2, normalized-entropy: 0.2580186686648155, [(2, 1), (3, 22)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.365500108516313] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.365500108516313, 1.7025992968456927] ***
*** starting iteration: 2; err: [Inf, 7.365500108516313, 1.7025992968456927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.365500108516313, 1.7025992968456927, 0.7350553893028062] ***
*** starting iteration: 3; err: [Inf, 7.365500108516313, 1.7025992968456927, 0.7350553893028062] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.365500108516313, 1.7025992968456927, 0.7350553893028062, 0.5366473019552832] ***
*** finished computation of 3 references, err: [Inf, 7.365500108516313, 1.7025992968456927, 0.7350553893028062, 0.5366473019552832] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [38, 1, 0]]
** centroid: 1, normalized-entropy: 0.17203694935311387, [(1, 38), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 9]]
** centroid: 3, normalized-entropy: 0.8224042259549892, [(2, 26), (3, 9)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.96
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.4552460214052283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4552460214052283, 0.2527292859335864] ***
*** finished computation of 7 references, err: [Inf, 0.4552460214052283, 0.2527292859335864] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 24, 2]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 24), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 9]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 18]]
** centroid: 5, normalized-entropy: 0.2974722489192896, [(2, 1), (3, 18)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [10, 1, 0]]
** centroid: 6, normalized-entropy: 0.43949698692151346, [(1, 10), (2, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32975632530433524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32975632530433524, 0.22521681008572725] ***
*** finished computation of 7 references, err: [Inf, 0.32975632530433524, 0.22521681008572725] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 3]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 7), (3, 3)]
*** center 4: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 5]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 1), (3, 5)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 11]]
** centroid: 6, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5040777581251017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5040777581251017, 0.2746581871785513] ***
*** finished computation of 7 references, err: [Inf, 0.5040777581251017, 0.2746581871785513] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [2, 1, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 2), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 24, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.96
finished with 19
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.96
finished with 19
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.96
finished with 20
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.3898184748678549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3898184748678549, 0.17840241926924563] ***
*** starting iteration: 2; err: [Inf, 0.3898184748678549, 0.17840241926924563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3898184748678549, 0.17840241926924563, 0.17592991227379504] ***
*** starting iteration: 3; err: [Inf, 0.3898184748678549, 0.17840241926924563, 0.17592991227379504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3898184748678549, 0.17840241926924563, 0.17592991227379504, 0.17116754464562844] ***
*** finished computation of 7 references, err: [Inf, 0.3898184748678549, 0.17840241926924563, 0.17592991227379504, 0.17116754464562844] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 19, 9]]
** centroid: 5, normalized-entropy: 0.9059282160429994, [(2, 19), (3, 9)]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.377191431644204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.377191431644204, 0.21496590396002208] ***
*** starting iteration: 2; err: [Inf, 0.377191431644204, 0.21496590396002208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.377191431644204, 0.21496590396002208, 0.19573799146794987] ***
*** starting iteration: 3; err: [Inf, 0.377191431644204, 0.21496590396002208, 0.19573799146794987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.377191431644204, 0.21496590396002208, 0.19573799146794987, 0.1811891384206933] ***
*** finished computation of 7 references, err: [Inf, 0.377191431644204, 0.21496590396002208, 0.19573799146794987, 0.1811891384206933] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 5, 18]]
** centroid: 4, normalized-entropy: 0.7553754125614286, [(2, 5), (3, 18)]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42818114793929923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42818114793929923, 0.21630787248294212] ***
*** starting iteration: 2; err: [Inf, 0.42818114793929923, 0.21630787248294212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42818114793929923, 0.21630787248294212, 0.19831598235934805] ***
*** starting iteration: 3; err: [Inf, 0.42818114793929923, 0.21630787248294212, 0.19831598235934805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42818114793929923, 0.21630787248294212, 0.19831598235934805, 0.19409490413998834] ***
*** finished computation of 7 references, err: [Inf, 0.42818114793929923, 0.21630787248294212, 0.19831598235934805, 0.19409490413998834] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 15]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 8, 5]]
** centroid: 6, normalized-entropy: 0.961236604722876, [(2, 8), (3, 5)]
*** center 7: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 20
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 21
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.9344000017778769] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9344000017778769, 0.5079001765416334] ***
*** starting iteration: 2; err: [Inf, 0.9344000017778769, 0.5079001765416334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9344000017778769, 0.5079001765416334, 0.4582546024742453] ***
*** starting iteration: 3; err: [Inf, 0.9344000017778769, 0.5079001765416334, 0.4582546024742453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9344000017778769, 0.5079001765416334, 0.4582546024742453, 0.4069670167740784] ***
*** starting iteration: 4; err: [Inf, 0.9344000017778769, 0.5079001765416334, 0.4582546024742453, 0.4069670167740784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9344000017778769, 0.5079001765416334, 0.4582546024742453, 0.4069670167740784, 0.38513467781961713] ***
*** starting iteration: 5; err: [Inf, 0.9344000017778769, 0.5079001765416334, 0.4582546024742453, 0.4069670167740784, 0.38513467781961713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9344000017778769, 0.5079001765416334, 0.4582546024742453, 0.4069670167740784, 0.38513467781961713, 0.3767592641382441] ***
*** starting iteration: 6; err: [Inf, 0.9344000017778769, 0.5079001765416334, 0.4582546024742453, 0.4069670167740784, 0.38513467781961713, 0.3767592641382441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9344000017778769, 0.5079001765416334, 0.4582546024742453, 0.4069670167740784, 0.38513467781961713, 0.3767592641382441, 0.3687662488314993] ***
*** starting iteration: 7; err: [Inf, 0.9344000017778769, 0.5079001765416334, 0.4582546024742453, 0.4069670167740784, 0.38513467781961713, 0.3767592641382441, 0.3687662488314993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9344000017778769, 0.5079001765416334, 0.4582546024742453, 0.4069670167740784, 0.38513467781961713, 0.3767592641382441, 0.3687662488314993, 0.36713418092636574] ***
*** starting iteration: 8; err: [Inf, 0.9344000017778769, 0.5079001765416334, 0.4582546024742453, 0.4069670167740784, 0.38513467781961713, 0.3767592641382441, 0.3687662488314993, 0.36713418092636574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9344000017778769, 0.5079001765416334, 0.4582546024742453, 0.4069670167740784, 0.38513467781961713, 0.3767592641382441, 0.3687662488314993, 0.36713418092636574, 0.3664418845796868] ***
*** finished computation of 7 references, err: [Inf, 0.9344000017778769, 0.5079001765416334, 0.4582546024742453, 0.4069670167740784, 0.38513467781961713, 0.3767592641382441, 0.3687662488314993, 0.36713418092636574, 0.3664418845796868] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 29, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 9, 26]]
** centroid: 5, normalized-entropy: 0.8224042259549892, [(2, 9), (3, 26)]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5173000045995483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5173000045995483, 0.25969843528936276] ***
*** starting iteration: 2; err: [Inf, 0.5173000045995483, 0.25969843528936276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5173000045995483, 0.25969843528936276, 0.24312044165987795] ***
*** starting iteration: 3; err: [Inf, 0.5173000045995483, 0.25969843528936276, 0.24312044165987795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5173000045995483, 0.25969843528936276, 0.24312044165987795, 0.23636777900280864] ***
*** starting iteration: 4; err: [Inf, 0.5173000045995483, 0.25969843528936276, 0.24312044165987795, 0.23636777900280864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5173000045995483, 0.25969843528936276, 0.24312044165987795, 0.23636777900280864, 0.23139148025627815] ***
*** starting iteration: 5; err: [Inf, 0.5173000045995483, 0.25969843528936276, 0.24312044165987795, 0.23636777900280864, 0.23139148025627815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5173000045995483, 0.25969843528936276, 0.24312044165987795, 0.23636777900280864, 0.23139148025627815, 0.22601905419093415] ***
*** starting iteration: 6; err: [Inf, 0.5173000045995483, 0.25969843528936276, 0.24312044165987795, 0.23636777900280864, 0.23139148025627815, 0.22601905419093415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5173000045995483, 0.25969843528936276, 0.24312044165987795, 0.23636777900280864, 0.23139148025627815, 0.22601905419093415, 0.22548464491375927] ***
*** finished computation of 7 references, err: [Inf, 0.5173000045995483, 0.25969843528936276, 0.24312044165987795, 0.23636777900280864, 0.23139148025627815, 0.22601905419093415, 0.22548464491375927] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 4, 10]]
** centroid: 6, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
*** center 7: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0849999931890641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0849999931890641, 0.5920759160505004] ***
*** starting iteration: 2; err: [Inf, 1.0849999931890641, 0.5920759160505004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114] ***
*** starting iteration: 3; err: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524] ***
*** starting iteration: 4; err: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524, 0.33019043496681627] ***
*** starting iteration: 5; err: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524, 0.33019043496681627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524, 0.33019043496681627, 0.3112240683807805] ***
*** starting iteration: 6; err: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524, 0.33019043496681627, 0.3112240683807805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524, 0.33019043496681627, 0.3112240683807805, 0.3055079633401532] ***
*** starting iteration: 7; err: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524, 0.33019043496681627, 0.3112240683807805, 0.3055079633401532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524, 0.33019043496681627, 0.3112240683807805, 0.3055079633401532, 0.303081018679861] ***
*** starting iteration: 8; err: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524, 0.33019043496681627, 0.3112240683807805, 0.3055079633401532, 0.303081018679861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524, 0.33019043496681627, 0.3112240683807805, 0.3055079633401532, 0.303081018679861, 0.3004233725795007] ***
*** starting iteration: 9; err: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524, 0.33019043496681627, 0.3112240683807805, 0.3055079633401532, 0.303081018679861, 0.3004233725795007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524, 0.33019043496681627, 0.3112240683807805, 0.3055079633401532, 0.303081018679861, 0.3004233725795007, 0.29794142589336026] ***
*** starting iteration: 10; err: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524, 0.33019043496681627, 0.3112240683807805, 0.3055079633401532, 0.303081018679861, 0.3004233725795007, 0.29794142589336026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524, 0.33019043496681627, 0.3112240683807805, 0.3055079633401532, 0.303081018679861, 0.3004233725795007, 0.29794142589336026, 0.2974835872986453] ***
*** finished computation of 7 references, err: [Inf, 1.0849999931890641, 0.5920759160505004, 0.40731501061493114, 0.3482508788940524, 0.33019043496681627, 0.3112240683807805, 0.3055079633401532, 0.303081018679861, 0.3004233725795007, 0.29794142589336026, 0.2974835872986453] ***
*** center 1: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 17, 8]]
** centroid: 5, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
finished with 8 centroids; started with 7
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.52, 2.6100000000000003, 3.9799999999999995, 1.2500000000000002], [7.566666666666666, 2.766666666666667, 6.633333333333334, 2.033333333333333], [4.745454545454544, 3.1363636363636362, 1.3818181818181818, 0.19090909090909092], [6.482352941176471, 3.0411764705882356, 5.511764705882353, 2.1588235294117646], [6.363157894736842, 2.9052631578947374, 4.636842105263158, 1.4578947368421054], [6.022222222222222, 2.7444444444444445, 4.944444444444445, 1.8111111111111111], [5.135294117647058, 3.5823529411764703, 1.5470588235294116, 0.27058823529411774], [7.475, 3.4000000000000004, 6.199999999999999, 1.975]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 3, 1, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.244999999999999, 3.6700000000000004, 1.515, 0.2850000000000001], [7.539999999999999, 2.8600000000000003, 6.3999999999999995, 2.08], [5.999999999999999, 2.8750000000000004, 4.369999999999999, 1.355], [6.56, 2.84, 4.9, 1.52], [6.294444444444443, 2.866666666666667, 5.261111111111111, 1.911111111111111], [4.657142857142857, 3.021428571428572, 1.407142857142857, 0.19285714285714287], [7.316666666666666, 3.4333333333333336, 6.166666666666667, 2.15], [5.51, 2.46, 3.72, 1.1]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 2, 3, 1, 3, 2], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.450000000000001, 2.66875, 3.925, 1.2625000000000002], [7.035714285714286, 3.057142857142857, 5.978571428571429, 2.1142857142857143], [6.133333333333333, 2.6999999999999997, 4.533333333333333, 1.4000000000000001], [6.1000000000000005, 2.86, 5.2333333333333325, 1.9600000000000004], [5.425, 3.891666666666667, 1.4666666666666668, 0.275], [4.45, 2.5999999999999996, 1.35, 0.25], [6.624999999999999, 3.0625, 4.6625000000000005, 1.4625000000000001], [6.7, 3.08, 5.2, 2.1399999999999997], [4.875, 3.2833333333333337, 1.4416666666666664, 0.22916666666666674]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 3, 1, 1, 2, 3, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[40, 11, 32, 24, 25, 1, 17, 34, 25, 50, 14, 33, 29, 11, 1, 8, 27, 32, 13, 28, 27, 2, 27, 39, 26, 24, 26, 32, 1, 23, 22, 34, 42, 34, 31, 26, 51, 26, 31, 35, 32, 34, 43, 17, 40, 43, 34, 26, 36, 29, 26, 57, 18, 27, 34, 16, 42, 42, 26, 44, 23, 35, 42, 8, 18, 17, 31, 34, 31, 28, 57, 18, 18, 105, 18, 35, 11, 14, 38, 48, 30, 30, 43, 23, 51, 4, 28, 27, 18, 25, 18, 25, 35, 41, 15, 14, 34, 31, 40, 47, 49, 30, 26, 23, 23, 47, 30, 34, 36, 44, 26, 33, 19, 37, 30, 40, 34, 35, 29, 25, 35, 38, 31, 19, 5, 47, 33, 30, 37, 31, 38, 40, 33, 51, 21, 33, 41, 28, 26, 54, 30, 20, 33, 5, 51, 5, 20, 42, 35, 41, 23, 48, 34, 36, 38, 52, 42, 58, 36, 26, 43, 62, 34, 37, 40, 1, 54, 36, 46, 20, 1, 37, 52, 36, 33, 25, 4, 42, 39, 31, 67, 25, 36, 54, 25, 33, 55, 24, 37, 30, 37, 58, 37, 52, 22, 23, 46, 33, 32, 54, 25, 39, 23, 55, 49, 27, 32, 20, 37, 32, 40, 28, 15, 43, 39, 33, 30, 44, 49, 10, 54, 26, 66, 42, 33, 32, 31, 43, 37, 39, 29, 39, 42, 27, 34, 22, 33, 85, 45, 22, 46, 45, 35, 24, 45, 20, 23, 43, 29, 49, 27, 51, 38, 43, 57, 24, 31, 65, 52, 31, 47, 34, 50, 38, 27, 29, 48, 47, 33, 21, 40, 40, 66, 23, 20, 30, 19, 36, 25, 35, 41, 38, 21, 54, 39, 43, 33, 64, 18, 33, 41, 43, 30, 23, 7, 39, 33, 39, 52, 35]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6010000000000002, speedup = 0.36676081331555693, eval_ratio = 0.041419)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.39670138888888895,"recall":0.39670138888888895,"f1":null,"seconds":7.315725088119507e-5,"exhaustive_search_seconds":0.00035368651151657104,"evaluations":336.96875,"distances_sum":1746.8001775721707}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5564236111111112,"recall":0.5564236111111112,"f1":0.5564236111111112,"seconds":0.0001027137041091919,"exhaustive_search_seconds":0.00035368651151657104,"evaluations":375.1015625,"distances_sum":1630.696319556841}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6423611111111108,"recall":0.6423611111111108,"f1":0.6423611111111108,"seconds":0.00013286247849464417,"exhaustive_search_seconds":0.00035368651151657104,"evaluations":413.8359375,"distances_sum":1590.6799196687682}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7213541666666662,"recall":0.7213541666666662,"f1":0.7213541666666662,"seconds":0.0001696813851594925,"exhaustive_search_seconds":0.00035368651151657104,"evaluations":453.4296875,"distances_sum":1565.9812050904222}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7656249999999994,"recall":0.7656249999999994,"f1":0.7656249999999994,"seconds":0.0001940019428730011,"exhaustive_search_seconds":0.00035368651151657104,"evaluations":491.28125,"distances_sum":1555.5793941331005}
KCenters.DeloneInvIndex> reached performance {"precision":0.807291666666666,"recall":0.807291666666666,"f1":0.807291666666666,"seconds":0.00023172050714492798,"exhaustive_search_seconds":0.00035368651151657104,"evaluations":531.1875,"distances_sum":1546.1185034702207}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7789999999999999, speedup = 1.6537635759994136, eval_ratio = 0.053177999999999996)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
