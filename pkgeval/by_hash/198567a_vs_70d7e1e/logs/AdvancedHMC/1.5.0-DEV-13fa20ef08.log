Julia Version 1.5.0-DEV.606
Commit 13fa20ef08 (2020-04-09 02:49 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed InplaceOps ─────────────────── v0.3.0
  Installed DataAPI ────────────────────── v1.1.0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed DataStructures ─────────────── v0.17.11
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed OrderedCollections ─────────── v1.1.0
  Installed ProgressMeter ──────────────── v1.2.0
  Installed StatsBase ──────────────────── v0.32.2
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Rmath ──────────────────────── v0.6.1
  Installed StatsFuns ──────────────────── v0.9.4
  Installed Parameters ─────────────────── v0.12.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed Requires ───────────────────── v1.0.1
  Installed FillArrays ─────────────────── v0.8.7
  Installed LazyArrays ─────────────────── v0.15.1
  Installed Missings ───────────────────── v0.4.3
Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.11
  [1a297f60] + FillArrays v0.8.7
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.1
  [1914dd2f] + MacroTools v0.5.5
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.2
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing AdvancedHMC
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+0.
└ @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+1.
└ @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+2.
└ @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+3.
└ @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
Status `/tmp/jl_nFbH9H/Project.toml`
  [0bf59076] AdvancedHMC v0.2.21
  [dce04be8] ArgCheck v2.0.0
  [76274a88] Bijectors v0.6.7
  [31c24e10] Distributions v0.23.2
  [f6369f11] ForwardDiff v0.10.10
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.15.1
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [fce5fe82] Turing v0.10.1
  [b8865327] UnicodePlots v1.2.0
  [e88e6eb3] Zygote v0.4.13
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_nFbH9H/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.5.6
  [1520ce14] AbstractTrees v0.3.2
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [5b7e9947] AdvancedMH v0.4.1
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.7.0
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.6.7
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.7.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.11
  [2b5f629d] DiffEqBase v6.26.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.4.10
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.5.0
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.6.0
  [1a297f60] FillArrays v0.8.7
  [6a86dc24] FiniteDiff v2.3.0
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.3.0
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5078a376] LazyArrays v0.15.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.3.4
  [093fc24a] LightGraphs v1.3.1
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [e6f89c97] LoggingExtras v0.4.0
  [c7f686f2] MCMCChains v3.0.11
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.9+2
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v1.0.1
  [f27b6e38] Polynomials v0.5.3
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.0
  [731186ca] RecursiveArrayTools v2.3.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [37e2e3b7] ReverseDiff v1.1.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.5.0
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [5d786b92] TerminalLoggers v0.1.1
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.10.1
  [3a884ed6] UnPack v0.1.0
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.13
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.141530849
│   t_steps = 0.011202045
└   t_step / t_steps = 12.634376044731116
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/Oc5M9/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/Oc5M9/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 7:37:06[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.00017070038240429554
  log_density:                   -10.718968643012332
  hamiltonian_energy:            16.604037584327358
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  8.67560068795376
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▋                           |  ETA: 0:00:26[K
  iterations:                    1387
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.437667446273093
  hamiltonian_energy:            20.541971259102233
  hamiltonian_energy_error:      -0.2763163197165852
  max_hamiltonian_energy_error:  -0.755802111443586
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.669126216829437
  nom_step_size:                 0.669126216829437
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0388518087721554, 0.9064 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:21[K
  iterations:                    1689
  n_steps:                       67
  is_accept:                     true
  acceptance_rate:               0.9191219565364445
  log_density:                   -14.278513917222378
  hamiltonian_energy:            16.625955608742874
  hamiltonian_energy_error:      0.25364768713991026
  max_hamiltonian_energy_error:  0.3399790922893544
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.8026207730439567
  nom_step_size:                 0.8026207730439567
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0388518087721554, 0.9064 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:19[K
  iterations:                    1877
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.167641019643138
  hamiltonian_energy:            14.862995253860458
  hamiltonian_energy_error:      -0.9182814662932159
  max_hamiltonian_energy_error:  -0.9182814662932159
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.0260277792139445
  nom_step_size:                 1.0260277792139445
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0388518087721554, 0.9064 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▋                         |  ETA: 0:00:17[K
  iterations:                    2178
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9538561861882668
  log_density:                   -15.498488027701383
  hamiltonian_energy:            18.26158229591691
  hamiltonian_energy_error:      0.07734239136371812
  max_hamiltonian_energy_error:  -0.3629841208860718
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▉                        |  ETA: 0:00:13[K
  iterations:                    2685
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8275291740404759
  log_density:                   -16.826442546017972
  hamiltonian_energy:            23.12453749837124
  hamiltonian_energy_error:      0.2053450937806538
  max_hamiltonian_energy_error:  0.4647874368744809
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████                       |  ETA: 0:00:11[K
  iterations:                    3110
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9583102656585256
  log_density:                   -16.06168419725259
  hamiltonian_energy:            21.329553540804728
  hamiltonian_energy_error:      0.09068665551722077
  max_hamiltonian_energy_error:  0.09751467236819877
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|████████▉                      |  ETA: 0:00:10[K
  iterations:                    3437
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9403632299516124
  log_density:                   -13.146173570467
  hamiltonian_energy:            16.703586141076485
  hamiltonian_energy_error:      0.04563868678046745
  max_hamiltonian_energy_error:  0.10167513261248828
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▎                     |  ETA: 0:00:10[K
  iterations:                    3568
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9964127942432601
  log_density:                   -12.970349276190696
  hamiltonian_energy:            15.515775449720007
  hamiltonian_energy_error:      -0.09924429055709894
  max_hamiltonian_energy_error:  -0.2755728888735671
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 33%|██████████▎                    |  ETA: 0:00:09[K
  iterations:                    3956
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9919843640928293
  log_density:                   -14.056029225382632
  hamiltonian_energy:            20.43077660126538
  hamiltonian_energy_error:      -0.31099168463067883
  max_hamiltonian_energy_error:  -0.3913311453277686
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▍                   |  ETA: 0:00:07[K
  iterations:                    4415
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6974506565602202
  log_density:                   -16.199750950447857
  hamiltonian_energy:            19.38611778935612
  hamiltonian_energy_error:      0.5917687202757058
  max_hamiltonian_energy_error:  0.7858557305131129
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▌                  |  ETA: 0:00:07[K
  iterations:                    4832
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.754613722876866
  log_density:                   -16.23544454602367
  hamiltonian_energy:            21.763206274334404
  hamiltonian_energy_error:      0.2925004993554374
  max_hamiltonian_energy_error:  0.5010686756893072
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▍                 |  ETA: 0:00:06[K
  iterations:                    5179
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.557061384729158
  hamiltonian_energy:            15.409832582185864
  hamiltonian_energy_error:      -0.26077259341676395
  max_hamiltonian_energy_error:  -0.3005487728150591
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▌                |  ETA: 0:00:05[K
  iterations:                    5604
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8650074165035936
  log_density:                   -14.112342025907989
  hamiltonian_energy:            23.26728734647066
  hamiltonian_energy_error:      -0.23607141272024634
  max_hamiltonian_energy_error:  0.4417350203920414
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▊               |  ETA: 0:00:05[K
  iterations:                    6098
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.841785791794788
  log_density:                   -14.428181811050703
  hamiltonian_energy:            21.300400233721795
  hamiltonian_energy_error:      -0.01984128257443274
  max_hamiltonian_energy_error:  0.35536270143331805
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▊              |  ETA: 0:00:04[K
  iterations:                    6500
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.250888360088759
  hamiltonian_energy:            19.269031417387716
  hamiltonian_energy_error:      -0.12057307298596953
  max_hamiltonian_energy_error:  -0.4368023504640668
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▊             |  ETA: 0:00:04[K
  iterations:                    6890
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6741236409503618
  log_density:                   -10.562686145812687
  hamiltonian_energy:            19.00712400572793
  hamiltonian_energy_error:      -0.030048089218691842
  max_hamiltonian_energy_error:  0.8541437484594603
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|██████████████████▉            |  ETA: 0:00:03[K
  iterations:                    7298
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9619707703641287
  log_density:                   -12.636137082044854
  hamiltonian_energy:            16.924748300470995
  hamiltonian_energy_error:      -0.049572763275037346
  max_hamiltonian_energy_error:  0.0872338965073034
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████           |  ETA: 0:00:03[K
  iterations:                    7750
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9859300654971417
  log_density:                   -12.699761882110405
  hamiltonian_energy:            15.051947774143557
  hamiltonian_energy_error:      0.019942579567395313
  max_hamiltonian_energy_error:  -0.07358409027651902
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████▏         |  ETA: 0:00:02[K
  iterations:                    8173
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9423658418470848
  log_density:                   -14.109229910196206
  hamiltonian_energy:            20.783330409059726
  hamiltonian_energy_error:      -0.14720165310888333
  max_hamiltonian_energy_error:  -0.23048250462813158
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████▏        |  ETA: 0:00:02[K
  iterations:                    8567
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9685186947485508
  log_density:                   -15.248558866205352
  hamiltonian_energy:            19.15788945293438
  hamiltonian_energy_error:      0.058981677871024374
  max_hamiltonian_energy_error:  -0.14643850951798854
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▏       |  ETA: 0:00:02[K
  iterations:                    8966
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9185151610733967
  log_density:                   -16.22088109022223
  hamiltonian_energy:            19.710680506064534
  hamiltonian_energy_error:      0.22207972064140336
  max_hamiltonian_energy_error:  0.22207972064140336
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▋      |  ETA: 0:00:01[K
  iterations:                    9528
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8130538928044719
  log_density:                   -13.154382347048566
  hamiltonian_energy:            17.345203835789594
  hamiltonian_energy_error:      0.18606545714929368
  max_hamiltonian_energy_error:  0.5114139097392822
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▊     |  ETA: 0:00:01[K
  iterations:                    9962
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7415312528587025
  log_density:                   -11.965483993854583
  hamiltonian_energy:            19.123830219977915
  hamiltonian_energy_error:      0.056583281961579246
  max_hamiltonian_energy_error:  0.6278669105682013
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▊    |  ETA: 0:00:01[K
  iterations:                    10365
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9399742849432601
  log_density:                   -10.303334133046922
  hamiltonian_energy:            15.1266895651566
  hamiltonian_energy_error:      -0.3142901810023577
  max_hamiltonian_energy_error:  -0.3142901810023577
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 90%|████████████████████████████   |  ETA: 0:00:01[K
  iterations:                    10823
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9704760842473696
  log_density:                   -12.791183147177497
  hamiltonian_energy:            16.28656286919687
  hamiltonian_energy_error:      0.006678969730650408
  max_hamiltonian_energy_error:  -0.13638942101857054
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▌ |  ETA: 0:00:00[K
  iterations:                    11440
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9194120035140744
  log_density:                   -14.195828079631905
  hamiltonian_energy:            20.754466990196065
  hamiltonian_energy_error:      -0.1524974460449151
  max_hamiltonian_energy_error:  -0.27146598069503725
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 99%|██████████████████████████████▊|  ETA: 0:00:00[K
  iterations:                    11900
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9593396719492173
  log_density:                   -11.66042322000889
  hamiltonian_energy:            13.410215765481464
  hamiltonian_energy_error:      0.058410124283327036
  max_hamiltonian_energy_error:  0.09950192065480223
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.182146802611264
  hamiltonian_energy:            16.791981304865324
  hamiltonian_energy_error:      -0.5796117578366768
  max_hamiltonian_energy_error:  -0.6259773925969618
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6899013105617855
  nom_step_size:                 0.6899013105617855
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.897993762394687, 1.05145 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.180239121 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.897993762394687, 1.05145 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.69), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.1033106766580858
└   average_acceptance_rate = 0.8735953020667266
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.398381538 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠑⠢⡄⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢇⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠃⠀⠀⠀⠱⡀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠈⢆⡰⠁⠀⢰⡆⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⢣│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠈⠃⠀⠀⡸⢱⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠃⠀⠀⠀⠀⠀⠀⡇⠀⢇⠀⠀⡠⠊⢣⠀⡜⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⢸⠀⠀⠘⠔⠊⠁⠀⠀⠱⠇⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⢀⢄⣀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⢀⣀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⢀⡄⠀⠀⠀⠀⡜⠁⢠⠔⠁⠀⠑⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢀⠎⠱⡀⠀⠀⡜⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            1 │⠀⠀⣎⠀⠀⠱⣠⠼⠤⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
