Julia Version 1.5.0-DEV.604
Commit 70d7e1eb02 (2020-04-09 01:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Requires ───────────────────── v1.0.1
  Installed DataAPI ────────────────────── v1.1.0
  Installed ProgressMeter ──────────────── v1.2.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed StatsBase ──────────────────── v0.32.2
  Installed FillArrays ─────────────────── v0.8.7
  Installed ArgCheck ───────────────────── v2.0.0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed InplaceOps ─────────────────── v0.3.0
  Installed LazyArrays ─────────────────── v0.15.1
  Installed Rmath ──────────────────────── v0.6.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed Parameters ─────────────────── v0.12.0
  Installed DataStructures ─────────────── v0.17.11
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed Missings ───────────────────── v0.4.3
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed StatsFuns ──────────────────── v0.9.4
  Installed StaticArrays ───────────────── v0.12.1
  Installed MacroTools ─────────────────── v0.5.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.11
  [1a297f60] + FillArrays v0.8.7
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.1
  [1914dd2f] + MacroTools v0.5.5
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.2
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing AdvancedHMC
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+0.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+1.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+2.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+3.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
Status `/tmp/jl_E2vcoA/Project.toml`
  [0bf59076] AdvancedHMC v0.2.21
  [dce04be8] ArgCheck v2.0.0
  [76274a88] Bijectors v0.6.7
  [31c24e10] Distributions v0.23.2
  [f6369f11] ForwardDiff v0.10.10
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.15.1
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [fce5fe82] Turing v0.10.1
  [b8865327] UnicodePlots v1.2.0
  [e88e6eb3] Zygote v0.4.13
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_E2vcoA/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.5.6
  [1520ce14] AbstractTrees v0.3.2
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [5b7e9947] AdvancedMH v0.4.1
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.7.0
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.6.7
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.7.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.11
  [2b5f629d] DiffEqBase v6.26.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.4.10
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.5.0
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.6.0
  [1a297f60] FillArrays v0.8.7
  [6a86dc24] FiniteDiff v2.3.0
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.3.0
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5078a376] LazyArrays v0.15.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.3.4
  [093fc24a] LightGraphs v1.3.1
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [e6f89c97] LoggingExtras v0.4.0
  [c7f686f2] MCMCChains v3.0.11
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.9+2
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v1.0.1
  [f27b6e38] Polynomials v0.5.3
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.0
  [731186ca] RecursiveArrayTools v2.3.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [37e2e3b7] ReverseDiff v1.1.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.5.0
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [5d786b92] TerminalLoggers v0.1.1
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.10.1
  [3a884ed6] UnPack v0.1.0
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.13
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.154918411
│   t_steps = 0.00767647
└   t_step / t_steps = 20.180943975551262
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/Oc5M9/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/Oc5M9/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 6:35:38[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               8.045513774021808e-5
  log_density:                   -10.444163129411614
  hamiltonian_energy:            16.174928571309508
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  9.427810824038989
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███                            |  ETA: 0:00:28[K
  iterations:                    1165
  n_steps:                       27
  is_accept:                     true
  acceptance_rate:               0.8401266560700291
  log_density:                   -16.51748829045887
  hamiltonian_energy:            23.71986528122489
  hamiltonian_energy_error:      0.027835207385162875
  max_hamiltonian_energy_error:  0.5397549857575541
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.9015310063984405
  nom_step_size:                 0.9015310063984405
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9175672986832758, 0.9157 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:25[K
  iterations:                    1337
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9993435096401772
  log_density:                   -11.786943920860542
  hamiltonian_energy:            15.992892071192273
  hamiltonian_energy_error:      -0.7023948589404476
  max_hamiltonian_energy_error:  -0.7023948589404476
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.019074654930455
  nom_step_size:                 1.019074654930455
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9175672986832758, 0.9157 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▎                          |  ETA: 0:00:21[K
  iterations:                    1624
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.8917847269893339
  log_density:                   -14.589434352395337
  hamiltonian_energy:            17.495151166396315
  hamiltonian_energy_error:      0.2176318787003595
  max_hamiltonian_energy_error:  0.29479599055794736
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.909124065857535
  nom_step_size:                 0.909124065857535
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9175672986832758, 0.9157 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:18[K
  iterations:                    1870
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.8439094928623925
  log_density:                   -12.754113950306152
  hamiltonian_energy:            17.024678582015195
  hamiltonian_energy_error:      0.05265114457008835
  max_hamiltonian_energy_error:  0.49574913562271306
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8101574982817319
  nom_step_size:                 0.8101574982817319
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9175672986832758, 0.9157 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▍                         |  ETA: 0:00:16[K
  iterations:                    2098
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9105714716966327
  log_density:                   -14.503510319577309
  hamiltonian_energy:            18.836037797680206
  hamiltonian_energy_error:      0.08937140529173604
  max_hamiltonian_energy_error:  0.18524686674930635
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▍                        |  ETA: 0:00:14[K
  iterations:                    2451
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.986926161572416
  log_density:                   -15.928472052494385
  hamiltonian_energy:            21.721407797120897
  hamiltonian_energy_error:      -0.04335272643103849
  max_hamiltonian_energy_error:  -0.1302622499969388
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▌                       |  ETA: 0:00:11[K
  iterations:                    2896
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.820510473216304
  log_density:                   -13.465615570729874
  hamiltonian_energy:            20.77054563173754
  hamiltonian_energy_error:      -0.014304268068926262
  max_hamiltonian_energy_error:  0.37895395940908116
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▌                      |  ETA: 0:00:10[K
  iterations:                    3270
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9889061612400096
  log_density:                   -15.13169130677586
  hamiltonian_energy:            18.089164368192385
  hamiltonian_energy_error:      0.08083796773894036
  max_hamiltonian_energy_error:  -0.19014439595148858
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▎                     |  ETA: 0:00:09[K
  iterations:                    3596
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9240287478611876
  log_density:                   -13.593498297875136
  hamiltonian_energy:            21.928193446609193
  hamiltonian_energy_error:      -0.200513183378078
  max_hamiltonian_energy_error:  0.2903358442098032
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 33%|██████████▍                    |  ETA: 0:00:08[K
  iterations:                    4012
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9713162771151784
  log_density:                   -14.037953621137694
  hamiltonian_energy:            18.589151787691733
  hamiltonian_energy_error:      0.010778762748593351
  max_hamiltonian_energy_error:  0.05151188705460186
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████▏                   |  ETA: 0:00:07[K
  iterations:                    4327
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.871025223135181
  log_density:                   -16.438637003359418
  hamiltonian_energy:            19.60523588287544
  hamiltonian_energy_error:      0.3251349500884366
  max_hamiltonian_energy_error:  0.3251349500884366
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████▏                  |  ETA: 0:00:07[K
  iterations:                    4682
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9597973324446053
  log_density:                   -10.983759482832003
  hamiltonian_energy:            15.710574962173604
  hamiltonian_energy_error:      -0.24272747505060188
  max_hamiltonian_energy_error:  -0.2931354526072063
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▎                 |  ETA: 0:00:06[K
  iterations:                    5121
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8479641773010993
  log_density:                   -12.652954294420931
  hamiltonian_energy:            16.96326007686241
  hamiltonian_energy_error:      0.09513591225548623
  max_hamiltonian_energy_error:  0.35395711755189296
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 46%|██████████████▏                |  ETA: 0:00:05[K
  iterations:                    5484
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.905077841776912
  log_density:                   -13.40225618785128
  hamiltonian_energy:            22.380269824322944
  hamiltonian_energy_error:      -0.3467884469439966
  max_hamiltonian_energy_error:  -0.45615582480802885
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▏               |  ETA: 0:00:05[K
  iterations:                    5833
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9370502851708474
  log_density:                   -14.541835168211922
  hamiltonian_energy:            24.64706118252425
  hamiltonian_energy_error:      -0.4257530793887909
  max_hamiltonian_energy_error:  -0.4257530793887909
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████▏              |  ETA: 0:00:04[K
  iterations:                    6252
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9700776165965246
  log_density:                   -11.479464030730435
  hamiltonian_energy:            14.120564418280173
  hamiltonian_energy_error:      -0.01007224476086499
  max_hamiltonian_energy_error:  0.07420009861609422
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████              |  ETA: 0:00:04[K
  iterations:                    6581
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9537088137269254
  log_density:                   -12.518028270773554
  hamiltonian_energy:            19.489648914936346
  hamiltonian_energy_error:      -0.31872651665005236
  max_hamiltonian_energy_error:  -0.3426664496196423
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|██████████████████             |  ETA: 0:00:03[K
  iterations:                    6958
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9827973534666509
  log_density:                   -12.713673766164185
  hamiltonian_energy:            18.316475713353224
  hamiltonian_energy_error:      -0.22124550738673676
  max_hamiltonian_energy_error:  -0.22124550738673676
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|██████████████████▉            |  ETA: 0:00:03[K
  iterations:                    7314
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9575465075076502
  log_density:                   -11.254765938849955
  hamiltonian_energy:            13.874129330745635
  hamiltonian_energy_error:      -0.0003078415166157811
  max_hamiltonian_energy_error:  0.0875080499478198
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|███████████████████▊           |  ETA: 0:00:03[K
  iterations:                    7661
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9126369419327569
  log_density:                   -12.03761482485401
  hamiltonian_energy:            20.722766284621642
  hamiltonian_energy_error:      -0.4943107286016719
  max_hamiltonian_energy_error:  -0.4943107286016719
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▊          |  ETA: 0:00:03[K
  iterations:                    8018
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.94604423627878
  hamiltonian_energy:            16.77329030772473
  hamiltonian_energy_error:      -0.10951083002713347
  max_hamiltonian_energy_error:  -0.13522328583150411
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▉         |  ETA: 0:00:02[K
  iterations:                    8457
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9088399491104256
  log_density:                   -11.15895140484645
  hamiltonian_energy:            15.24760598093875
  hamiltonian_energy_error:      -0.029614762002729833
  max_hamiltonian_energy_error:  0.24128519210846733
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▊        |  ETA: 0:00:02[K
  iterations:                    8813
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9137783850095806
  log_density:                   -14.025644723974052
  hamiltonian_energy:            20.07278341974173
  hamiltonian_energy_error:      -0.017661036812796738
  max_hamiltonian_energy_error:  0.1946557908404003
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▊       |  ETA: 0:00:02[K
  iterations:                    9170
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5920159619158093
  log_density:                   -14.974053281884949
  hamiltonian_energy:            27.04608884856003
  hamiltonian_energy_error:      0.11330830320698482
  max_hamiltonian_energy_error:  1.0865648892560493
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▉      |  ETA: 0:00:01[K
  iterations:                    9608
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.92763181657786
  log_density:                   -11.670652421162162
  hamiltonian_energy:            18.382390006987663
  hamiltonian_energy_error:      -0.27086958929903204
  max_hamiltonian_energy_error:  -0.328496966188073
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▊     |  ETA: 0:00:01[K
  iterations:                    9968
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9559121318547563
  log_density:                   -12.207936027907444
  hamiltonian_energy:            18.32343002817181
  hamiltonian_energy_error:      -0.2720024756935153
  max_hamiltonian_energy_error:  -0.2720024756935153
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▋    |  ETA: 0:00:01[K
  iterations:                    10325
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7751937486641042
  log_density:                   -14.080445635247678
  hamiltonian_energy:            22.914660220493374
  hamiltonian_energy_error:      -0.01661476275889129
  max_hamiltonian_energy_error:  0.4769533418456753
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▊   |  ETA: 0:00:01[K
  iterations:                    10719
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8324429001472217
  log_density:                   -15.634513893812835
  hamiltonian_energy:            19.887894721592314
  hamiltonian_energy_error:      0.24784297964914614
  max_hamiltonian_energy_error:  0.356384335683984
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|████████████████████████████▊  |  ETA: 0:00:00[K
  iterations:                    11145
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.65885156911103
  hamiltonian_energy:            18.636932928303263
  hamiltonian_energy_error:      -0.5519869692797137
  max_hamiltonian_energy_error:  -0.5645057858996552
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▊ |  ETA: 0:00:00[K
  iterations:                    11506
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.673123211077099
  log_density:                   -10.850813609451825
  hamiltonian_energy:            19.18179374641486
  hamiltonian_energy_error:      -0.04126727354196902
  max_hamiltonian_energy_error:  0.8513901773154977
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 99%|██████████████████████████████▋|  ETA: 0:00:00[K
  iterations:                    11870
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.44838840990998
  hamiltonian_energy:            17.11073580976012
  hamiltonian_energy_error:      -0.13195846631890262
  max_hamiltonian_energy_error:  -0.4645647642094275
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8649971340295071
  log_density:                   -12.57963622911922
  hamiltonian_energy:            17.385873109579002
  hamiltonian_energy_error:      0.026107494374855378
  max_hamiltonian_energy_error:  0.2488691810707948
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.64437757219601
  nom_step_size:                 0.64437757219601
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024172895560604, 1.07216 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.238183399 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.024172895560604, 1.07216 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.644), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0790848147229737
└   average_acceptance_rate = 0.8846026543962883
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.193731602 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡆⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢣⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠘⡄│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⢸⠀⠀⢣│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠑⢄⡇⠀⠀⠸│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⢣⠀⠀⢀⢄⠀⢰⠁⠀⠀⠁⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠱⠔⠁⠀⠑⠇⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⢀⡎⠀⠀⠀⠀⠀⠀⠀⠀⣀⡠⠔⠣⡀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⢀⡞⠱⡀⠀⠀⣀⠔⠊⠉⠉⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⢀⡾⠀⠀⠱⠔⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⠢⡴⠥⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
