Julia Version 1.5.0-DEV.604
Commit 70d7e1eb02 (2020-04-09 01:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_T4Fwhs/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_T4Fwhs/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723219125374163
curgen: 20 fitness: 0.21723219125374163
curgen: 30 fitness: 0.21723219125374163
curgen: 40 fitness: 0.217233595178815
curgen: 50 fitness: 0.217233595178815
CoordinateCreature{Array{Float64,1}}([-0.22252084766840885], -0.217233595178815) -0.22252084766840885 -0.217233595178815
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257981762551535
curgen: 100 fitness: 3.2581196922055606
curgen: 150 fitness: 3.2581399465952705
curgen: 200 fitness: 3.2582570521763277
curgen: 250 fitness: 3.258348701487144
curgen: 300 fitness: 3.258378546348071
curgen: 350 fitness: 3.258378546348071
curgen: 400 fitness: 3.258414495191637
curgen: 450 fitness: 3.2584433354928546
curgen: 500 fitness: 3.2584467730889215
CoordinateCreature{Array{Float64,1}}([-0.2229045260267656, 0.22240435486836932, -0.2225403928543141, 0.22276233686980285, -0.22258463692220465, -0.22197178392227643, 0.2227421581737533, 0.22227876343497924, 0.22233445085823458, 0.22282910412968596, 0.22246938203018604, 0.22314137176862858, 0.2221246516102202, -0.222580424599081, 0.22258633033159733], -3.2584467730889215) [-0.2229045260267656, 0.22240435486836932, -0.2225403928543141, 0.22276233686980285, -0.22258463692220465, -0.22197178392227643, 0.2227421581737533, 0.22227876343497924, 0.22233445085823458, 0.22282910412968596, 0.22246938203018604, 0.22314137176862858, 0.2221246516102202, -0.222580424599081, 0.22258633033159733] -3.2584467730889215
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0025444197712545247
curgen: 100 fitness: -0.0018566038151277553
curgen: 150 fitness: -0.001622855701498338
curgen: 200 fitness: -0.0015686413824766987
curgen: 250 fitness: -0.0015686413824766987
curgen: 300 fitness: -0.0015686413824766987
curgen: 350 fitness: -0.0015686413824766987
curgen: 400 fitness: -0.0010281079125888937
curgen: 450 fitness: -0.0010202537345662677
curgen: 500 fitness: -0.0010202537345662677
CoordinateCreature{Array{Float64,1}}([-0.0005712350529027934, -0.000195381319431546, 0.0003544142371116419, 0.00016071670221645437, 0.00017998939214157027, 0.0004097023598904127, 0.00044033746605681283, 6.014688141029942e-5, -0.0016030914371537282, -0.00036020970245756456, -0.00015064946230510884, -0.0008090054653242736, 9.76230853084132e-5, 0.0008982396537705535, -0.0001890667423636968], 0.0010202537345662677) [-0.0005712350529027934, -0.000195381319431546, 0.0003544142371116419, 0.00016071670221645437, 0.00017998939214157027, 0.0004097023598904127, 0.00044033746605681283, 6.014688141029942e-5, -0.0016030914371537282, -0.00036020970245756456, -0.00015064946230510884, -0.0008090054653242736, 9.76230853084132e-5, 0.0008982396537705535, -0.0001890667423636968] 0.0010202537345662677
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
