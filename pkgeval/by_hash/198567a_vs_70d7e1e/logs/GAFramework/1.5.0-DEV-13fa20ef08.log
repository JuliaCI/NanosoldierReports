Julia Version 1.5.0-DEV.606
Commit 13fa20ef08 (2020-04-09 02:49 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FileIO ────── v1.2.4
  Installed GAFramework ─ v0.4.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_Jxkx78/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_Jxkx78/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721212706512305
curgen: 20 fitness: 0.21721212706512305
curgen: 30 fitness: 0.21721212706512305
curgen: 40 fitness: 0.21721212706512305
curgen: 50 fitness: 0.21723092714365644
CoordinateCreature{Array{Float64,1}}([0.22230135775854698], -0.21723092714365644) 0.22230135775854698 -0.21723092714365644
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2581882995566716
curgen: 100 fitness: 3.258288233525505
curgen: 150 fitness: 3.2583685363402775
curgen: 200 fitness: 3.2583791311967705
curgen: 250 fitness: 3.258391263733569
curgen: 300 fitness: 3.2584245988836558
curgen: 350 fitness: 3.258441855985928
curgen: 400 fitness: 3.258463578292041
curgen: 450 fitness: 3.258472469906197
curgen: 500 fitness: 3.2584829074688217
CoordinateCreature{Array{Float64,1}}([0.22267733694129127, 0.22277789693229505, -0.22242853518639033, -0.22259859939434384, -0.2227659199507898, 0.22250958542712077, 0.22285496183301615, 0.22302857959978276, -0.22249186905127002, -0.2225095297641289, -0.22256082814407158, -0.22249909125322367, 0.22254253617893074, -0.2226490704240884, 0.22264453036527607], -3.2584829074688217) [0.22267733694129127, 0.22277789693229505, -0.22242853518639033, -0.22259859939434384, -0.2227659199507898, 0.22250958542712077, 0.22285496183301615, 0.22302857959978276, -0.22249186905127002, -0.2225095297641289, -0.22256082814407158, -0.22249909125322367, 0.22254253617893074, -0.2226490704240884, 0.22264453036527607] -3.2584829074688217
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004305059652921273
curgen: 100 fitness: -0.0031401534631072536
curgen: 150 fitness: -0.0031401534631072536
curgen: 200 fitness: -0.0026464704231443648
curgen: 250 fitness: -0.0023036105881146796
curgen: 300 fitness: -0.0023036105881146796
curgen: 350 fitness: -0.0021005269404099636
curgen: 400 fitness: -0.0017268379762640507
curgen: 450 fitness: -0.0017268379762640507
curgen: 500 fitness: -0.0016897761549614643
CoordinateCreature{Array{Float64,1}}([-0.00018164469282562403, 0.0002943562485177997, 0.0009187188306414919, -2.9731042657777772e-5, -0.00015797727586138268, 0.00029333379784433477, 0.0020115834225067817, 0.0015257991941670154, 0.000719226738730899, -4.11648611821358e-6, -7.225853514919271e-5, -0.0006652014992017709, -0.0003117679854538302, 2.4718016797674108e-5, -6.709698995307979e-5], 0.0016897761549614643) [-0.00018164469282562403, 0.0002943562485177997, 0.0009187188306414919, -2.9731042657777772e-5, -0.00015797727586138268, 0.00029333379784433477, 0.0020115834225067817, 0.0015257991941670154, 0.000719226738730899, -4.11648611821358e-6, -7.225853514919271e-5, -0.0006652014992017709, -0.0003117679854538302, 2.4718016797674108e-5, -6.709698995307979e-5] 0.0016897761549614643
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
