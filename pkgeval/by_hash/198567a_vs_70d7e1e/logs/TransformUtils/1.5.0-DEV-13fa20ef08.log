Julia Version 1.5.0-DEV.606
Commit 13fa20ef08 (2020-04-09 02:49 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_IjzdvO/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_IjzdvO/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.1073915661071761 -0.09125365813354674; 0.1073915661071761 0.0 0.0984887030380556; 0.09125365813354674 -0.0984887030380556 0.0])
dAA = so3([0.0 0.015276641730203662 0.13616741726132117; -0.015276641730203662 0.0 0.08763435019686494; -0.13616741726132117 -0.08763435019686494 0.0])
dAA = so3([0.0 -0.19724838437434614 0.05313789506191529; 0.19724838437434614 0.0 -0.006235700908171597; -0.05313789506191529 0.006235700908171597 0.0])
dAA = Quaternion(0.9972645401759016, [-0.019761216408478364, 0.0159821603460735, -0.06940822562548])
dAA = SO3([0.9992380136385473 -0.026476065999365125 -0.02867769218203486; 0.02824148361811224 0.997612976294959 0.06301403122290614; 0.026940874201446755 -0.06377591596449833 0.9976005321972072])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9421322740114857 0.00036836047595061413 0.3352411707659227; -0.07392728905038241 0.9756102410896237 0.20668675190903635; -0.32698858420380367 -0.21950973051690917 0.9191811268780413]), [-0.9848870303805559, -0.9125365813354673, 1.0739156610717608])
xj = SE3(SO3([0.9371904909814173 0.33723418500517854 0.0891464417568242; -0.34473462299398233 0.9344510614470849 0.08921464829058667; -0.05321675791709544 -0.11434298502448319 0.9920149487041433]), [0.06235700908171597, 0.5313789506191529, 1.9724838437434613])
Dx = SE3(SO3([0.9258439768972417 0.28602662665709616 -0.24698522078509388; -0.3242998085264202 0.9368836469189639 -0.1306853715055718; 0.19401691841905627 0.20109152388647367 0.9601664618117991]), [0.5860761095860142, 1.2118400839267782, 1.4754644439226023])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
