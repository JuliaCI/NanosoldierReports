Julia Version 1.5.0-DEV.604
Commit 70d7e1eb02 (2020-04-09 01:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_zDdnJ4/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_zDdnJ4/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.0018106217966351865 0.02289994631245201; 0.0018106217966351865 0.0 -0.24056178634151776; -0.02289994631245201 0.24056178634151776 0.0])
dAA = so3([0.0 0.16252249700909172 -0.042734554106817126; -0.16252249700909172 0.0 -0.029547154137660066; 0.042734554106817126 0.029547154137660066 0.0])
dAA = so3([0.0 0.058813688144628264 0.1345234739067834; -0.058813688144628264 0.0 0.060458109144436036; -0.1345234739067834 -0.060458109144436036 0.0])
dAA = Quaternion(0.9927051981395233, [0.08638192015566165, 0.006921298289857953, -0.08382511012204838])
dAA = SO3([0.9935996473193315 -0.09576349355233278 -0.059909048978873655; 0.09111284344421848 0.992931414364041 -0.07606350063292605; 0.06676968328822667 0.07011818360224492 0.9953015873201011])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.913080642304914 0.39020984596584496 -0.11840615169558202; -0.39798268471593173 0.9160145227608516 -0.050271032986289314; 0.0888455024992537 0.09302510522714218 0.9916918909031848]), [2.4056178634151775, 0.22899946312452008, 0.018106217966351864])
xj = SE3(SO3([0.9139684512504973 0.40530069197767127 -0.019824711881590316; -0.37598624521050744 0.8274633789039945 -0.4170595880510227; -0.15263031655366316 0.38863312475290296 0.9086629082412923]), [-0.6045810914443603, 1.345234739067834, -0.5881368814462826])
Dx = SE3(SO3([0.9706023986285415 0.07528442437379698 0.2286115465658451; -0.0019678236493055386 0.9522734300401733 -0.30523997462588026; -0.24068051738062796 0.29581678432135805 0.9244270218179281]), [-3.246658679867297, -0.20851737503633494, -0.30089459189794804])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
