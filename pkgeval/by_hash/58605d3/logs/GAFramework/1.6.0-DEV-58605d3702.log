Julia Version 1.6.0-DEV.1167
Commit 58605d3702 (2020-10-09 10:49 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_uJEjSX/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_uJEjSX/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723356193713134
curgen: 20 fitness: 0.21723356193713134
curgen: 30 fitness: 0.21723356193713134
curgen: 40 fitness: 0.21723356193713134
curgen: 50 fitness: 0.21723356193713134
CoordinateCreature{Vector{Float64}}([0.22258685049303015], -0.21723356193713134) 0.22258685049303015 -0.21723356193713134
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580304280801204
curgen: 100 fitness: 3.258158889714342
curgen: 150 fitness: 3.2581825207857564
curgen: 200 fitness: 3.2582403440619485
curgen: 250 fitness: 3.258254519064196
curgen: 300 fitness: 3.2583283091305835
curgen: 350 fitness: 3.2583505456724504
curgen: 400 fitness: 3.258450073513646
curgen: 450 fitness: 3.258450073513646
curgen: 500 fitness: 3.258450073513646
CoordinateCreature{Vector{Float64}}([0.22242704869532692, -0.2219679937816149, -0.2227324964237347, -0.22243503599077896, -0.22241606990328142, -0.22244601105085132, 0.22241796614845785, 0.2225366504517212, -0.2225697344562359, -0.22278428077986193, -0.22219709762200643, 0.22312876958605599, 0.2225760349994321, -0.22284017217292457, -0.22297504104987756], -3.258450073513646) [0.22242704869532692, -0.2219679937816149, -0.2227324964237347, -0.22243503599077896, -0.22241606990328142, -0.22244601105085132, 0.22241796614845785, 0.2225366504517212, -0.2225697344562359, -0.22278428077986193, -0.22219709762200643, 0.22312876958605599, 0.2225760349994321, -0.22284017217292457, -0.22297504104987756] -3.258450073513646
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0024246997184320662
curgen: 100 fitness: -0.0023847577272988474
curgen: 150 fitness: -0.0023847577272988474
curgen: 200 fitness: -0.00189667006790728
curgen: 250 fitness: -0.001884670362670704
curgen: 300 fitness: -0.0013507816656499472
curgen: 350 fitness: -0.0012805447443611229
curgen: 400 fitness: -0.0011779717538615841
curgen: 450 fitness: -0.0011779717538615841
curgen: 500 fitness: -0.0011779717538615841
CoordinateCreature{Vector{Float64}}([0.00040001944754578336, -0.0006359800303261953, -0.0007647107819986458, -0.00025138947296710935, 0.0009280818554771595, -0.00046202421186094383, -0.0004124706237497895, -0.00011886305079333479, 0.00022560915074226642, -0.0001382199491850646, 0.0005227608849598421, -0.000664270857665095, 0.00017042002365465014, 0.0013579508633741006, -0.0008991509139877523], 0.0011779717538615841) [0.00040001944754578336, -0.0006359800303261953, -0.0007647107819986458, -0.00025138947296710935, 0.0009280818554771595, -0.00046202421186094383, -0.0004124706237497895, -0.00011886305079333479, 0.00022560915074226642, -0.0001382199491850646, 0.0005227608849598421, -0.000664270857665095, 0.00017042002365465014, 0.0013579508633741006, -0.0008991509139877523] 0.0011779717538615841
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
