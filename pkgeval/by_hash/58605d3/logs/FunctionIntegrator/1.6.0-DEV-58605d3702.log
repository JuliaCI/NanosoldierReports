Julia Version 1.6.0-DEV.1167
Commit 58605d3702 (2020-10-09 10:49 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed FunctionIntegrator ─────────── v0.6.0
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_TyGWq2/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_TyGWq2/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.242483 seconds (289.09 k allocations: 13.528 MiB, 6.01% gc time, 91.43% compilation time)
Running: chebyshev_quadrature with k=1
  1.784741 seconds (2.19 M allocations: 126.620 MiB, 8.30% gc time, 98.81% compilation time)
Running: chebyshev_quadrature with k=2
  0.223066 seconds (409.38 k allocations: 23.549 MiB, 88.67% compilation time)
Running: chebyshev_quadrature with k=3
  0.439483 seconds (473.75 k allocations: 26.637 MiB, 18.42% gc time, 91.66% compilation time)
Running: chebyshev_quadrature with k=4
  0.461832 seconds (418.56 k allocations: 23.256 MiB, 95.87% compilation time)
Running: jacobi_quadrature with α=β=1
 34.393680 seconds (36.46 M allocations: 3.003 GiB, 11.49% gc time, 81.53% compilation time)
Running: laguerre_quadrature with k=1
  2.725387 seconds (3.17 M allocations: 177.067 MiB, 3.73% gc time, 99.92% compilation time)
Running: legendre_quadrature
  0.257023 seconds (206.06 k allocations: 11.830 MiB, 81.86% compilation time)
Running: lobatto_quadrature
  0.347892 seconds (329.34 k allocations: 19.881 MiB, 99.00% compilation time)
Running: radau_quadrature
  0.358047 seconds (443.83 k allocations: 27.119 MiB, 99.28% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 47.391441 seconds (100.02 M allocations: 1.491 GiB, 2.01% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.087778 seconds (172.46 k allocations: 3.827 MiB, 26.55% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 45.787632 seconds (100.02 M allocations: 1.491 GiB, 0.28% gc time, 0.05% compilation time)
Running: rombergs_method
  0.569580 seconds (722.73 k allocations: 41.707 MiB, 2.53% gc time, 99.63% compilation time)
Running: simpsons_rule
  0.049811 seconds (46.55 k allocations: 2.532 MiB, 95.81% compilation time)
Running: simpsons38_rule
  0.078666 seconds (108.53 k allocations: 5.756 MiB, 97.70% compilation time)
Running: trapezoidal_rule
  0.280725 seconds (1.72 M allocations: 28.604 MiB, 4.84% gc time, 18.24% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.069510 seconds (29.79 k allocations: 1.767 MiB, 99.75% compilation time)
Running: chebyshev_quadrature with k=1
  0.365446 seconds (290.15 k allocations: 15.339 MiB, 99.70% compilation time)
Running: chebyshev_quadrature with k=2
  0.151106 seconds (93.80 k allocations: 2.675 MiB, 98.24% compilation time)
Running: chebyshev_quadrature with k=3
  0.149689 seconds (82.06 k allocations: 2.476 MiB, 98.55% compilation time)
Running: chebyshev_quadrature with k=4
  0.180331 seconds (64.67 k allocations: 2.122 MiB, 17.43% gc time, 99.01% compilation time)
Running: jacobi_quadrature with α=β=1
  1.742050 seconds (503.58 k allocations: 161.825 MiB, 4.00% gc time, 29.16% compilation time)
Running: legendre_quadrature
  0.158227 seconds (41.12 k allocations: 2.366 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.017600 seconds (15.51 k allocations: 985.981 KiB, 99.14% compilation time)
Running: radau_quadrature
  0.016364 seconds (15.62 k allocations: 993.196 KiB, 99.19% compilation time)
Running: rectangle_rule_left
 12.437956 seconds (471.41 M allocations: 7.025 GiB, 4.45% gc time)
Running: rectangle_rule_midpoint
  0.000016 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.482726 seconds (476.96 M allocations: 7.107 GiB, 4.42% gc time)
Running: rombergs_method
  0.295453 seconds (326.29 k allocations: 18.514 MiB, 99.88% compilation time)
Running: simpsons_rule
  0.000028 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.063844 seconds (18.91 k allocations: 1.146 MiB, 99.87% compilation time)
Running: trapezoidal_rule
  0.038805 seconds (16.49 k allocations: 1.000 MiB, 99.77% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.015887 seconds (1.03 k allocations: 34.125 KiB, 99.43% compilation time)
Running: chebyshev_quadrature with k=1
  0.093491 seconds (2.46 k allocations: 116.359 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.103578 seconds (2.71 k allocations: 124.266 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.084057 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.094927 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with α=β=1
  0.265169 seconds (363.64 k allocations: 18.977 MiB, 99.22% compilation time)
Running: legendre_quadrature
  0.052842 seconds (1.28 k allocations: 65.891 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000074 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000035 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000196 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000135 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000190 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.068444 seconds (1.04 k allocations: 56.531 KiB, 99.76% compilation time)
Running: simpsons_rule
  0.000019 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.022786 seconds (923 allocations: 39.281 KiB, 99.67% compilation time)
Running: trapezoidal_rule
  0.017957 seconds (44.29 k allocations: 702.859 KiB, 94.05% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.049992 seconds (80.91 k allocations: 4.823 MiB, 99.58% compilation time)
Running: chebyshev_quadrature with k=1
  0.207751 seconds (230.61 k allocations: 12.967 MiB, 11.96% gc time, 99.07% compilation time)
Running: chebyshev_quadrature with k=2
  0.204036 seconds (283.17 k allocations: 15.880 MiB, 98.57% compilation time)
Running: chebyshev_quadrature with k=3
  0.154242 seconds (234.76 k allocations: 13.158 MiB, 96.70% compilation time)
Running: chebyshev_quadrature with k=4
  0.204780 seconds (234.76 k allocations: 13.061 MiB, 27.50% gc time, 99.11% compilation time)
Running: jacobi_quadrature with α=β=1
  1.656504 seconds (446.72 k allocations: 163.187 MiB, 30.45% gc time, 21.91% compilation time)
Running: legendre_quadrature
  0.117754 seconds (185.44 k allocations: 10.709 MiB, 9.05% gc time, 98.62% compilation time)
Running: lobatto_quadrature
  0.147842 seconds (196.62 k allocations: 11.427 MiB, 98.76% compilation time)
Running: radau_quadrature
  0.151133 seconds (196.61 k allocations: 11.474 MiB, 98.77% compilation time)
Running: rectangle_rule_left
  0.607036 seconds (18.82 k allocations: 1.147 MiB, 4.62% compilation time)
Running: rectangle_rule_midpoint
  0.022042 seconds (24.67 k allocations: 1.555 MiB, 99.32% compilation time)
Running: rectangle_rule_right
  0.553589 seconds (17.39 k allocations: 1.062 MiB, 4.96% compilation time)
Running: rombergs_method
  0.131885 seconds (134.27 k allocations: 7.778 MiB, 98.03% compilation time)
Running: simpsons_rule
  0.020008 seconds (36.49 k allocations: 2.341 MiB, 99.28% compilation time)
Running: simpsons38_rule
  0.044415 seconds (42.37 k allocations: 2.678 MiB, 39.21% gc time, 99.64% compilation time)
Running: trapezoidal_rule
  0.019135 seconds (42.32 k allocations: 1.671 MiB, 96.52% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.026548 seconds (66.94 k allocations: 2.959 MiB, 95.35% compilation time)
Running: chebyshev_quadrature with k=1
  0.211810 seconds (237.20 k allocations: 13.095 MiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=2
  0.232610 seconds (290.20 k allocations: 15.872 MiB, 98.86% compilation time)
Running: chebyshev_quadrature with k=3
  0.210460 seconds (241.33 k allocations: 13.118 MiB, 7.12% gc time, 99.09% compilation time)
Running: chebyshev_quadrature with k=4
  0.194130 seconds (241.34 k allocations: 13.123 MiB, 99.07% compilation time)
Running: hermite_quadrature with k=2
 13.983543 seconds (20.10 M allocations: 1.056 GiB, 8.22% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.453096 seconds (455.90 k allocations: 49.456 MiB, 8.93% gc time, 94.12% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.180233 seconds (276.26 k allocations: 15.248 MiB, 98.11% compilation time)
Running: legendre_quadrature
  0.146303 seconds (191.98 k allocations: 11.035 MiB, 98.49% compilation time)
Running: lobatto_quadrature
  0.204083 seconds (217.27 k allocations: 37.185 MiB, 11.90% gc time, 75.58% compilation time)
Running: radau_quadrature
  0.207848 seconds (213.85 k allocations: 29.846 MiB, 9.07% gc time, 90.07% compilation time)
Running: rectangle_rule_left
  0.030365 seconds (21.73 k allocations: 1.293 MiB, 99.58% compilation time)
Running: rectangle_rule_midpoint
  0.027629 seconds (26.47 k allocations: 1.642 MiB, 99.54% compilation time)
Running: rectangle_rule_right
  0.024348 seconds (18.50 k allocations: 1.117 MiB, 99.44% compilation time)
Running: rombergs_method
  0.117944 seconds (136.74 k allocations: 7.803 MiB, 98.10% compilation time)
Running: simpsons_rule
  0.031258 seconds (43.97 k allocations: 2.609 MiB, 99.16% compilation time)
Running: simpsons38_rule
  0.039048 seconds (57.34 k allocations: 3.063 MiB, 98.99% compilation time)
Running: trapezoidal_rule
  0.036683 seconds (28.35 k allocations: 1.595 MiB, 99.31% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.053103 seconds (50.91 k allocations: 2.619 MiB, 98.91% compilation time)
Running: chebyshev_quadrature with k=1
  0.158745 seconds (232.72 k allocations: 12.857 MiB, 98.66% compilation time)
Running: chebyshev_quadrature with k=2
  0.272367 seconds (285.38 k allocations: 15.643 MiB, 98.78% compilation time)
Running: chebyshev_quadrature with k=3
  0.185962 seconds (236.87 k allocations: 12.943 MiB, 98.82% compilation time)
Running: chebyshev_quadrature with k=4
  0.220186 seconds (236.87 k allocations: 12.929 MiB, 99.01% compilation time)
Running: hermite_quadrature with k=2
  0.127786 seconds (170.79 k allocations: 9.790 MiB, 98.26% compilation time)
Running: jacobi_quadrature with α=β=1
  7.369298 seconds (449.16 k allocations: 1.175 GiB, 29.67% gc time, 4.79% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.240561 seconds (271.55 k allocations: 15.064 MiB, 98.59% compilation time)
Running: legendre_quadrature
  0.159977 seconds (187.55 k allocations: 10.819 MiB, 98.34% compilation time)
Running: lobatto_quadrature
  0.317501 seconds (208.03 k allocations: 22.931 MiB, 93.86% compilation time)
Running: radau_quadrature
  0.224863 seconds (207.18 k allocations: 20.845 MiB, 17.72% gc time, 93.61% compilation time)
Running: rectangle_rule_left
  0.036308 seconds (19.52 k allocations: 1.188 MiB, 99.62% compilation time)
Running: rectangle_rule_midpoint
  0.021691 seconds (25.36 k allocations: 1.591 MiB, 99.48% compilation time)
Running: rectangle_rule_right
  0.021049 seconds (17.36 k allocations: 1.062 MiB, 99.38% compilation time)
Running: rombergs_method
  0.120567 seconds (132.58 k allocations: 7.622 MiB, 98.07% compilation time)
Running: simpsons_rule
  0.032520 seconds (39.30 k allocations: 2.442 MiB, 99.36% compilation time)
Running: simpsons38_rule
  0.029097 seconds (48.16 k allocations: 2.821 MiB, 98.57% compilation time)
Running: trapezoidal_rule
  0.023444 seconds (23.26 k allocations: 1.433 MiB, 96.82% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.062192 seconds (39.05 k allocations: 2.475 MiB, 99.68% compilation time)
Running: chebyshev_quadrature with k=1
  0.197150 seconds (231.10 k allocations: 13.042 MiB, 98.58% compilation time)
Running: chebyshev_quadrature with k=2
  0.230837 seconds (283.67 k allocations: 16.001 MiB, 10.50% gc time, 98.39% compilation time)
Running: chebyshev_quadrature with k=3
  0.166326 seconds (235.25 k allocations: 13.141 MiB, 98.43% compilation time)
Running: chebyshev_quadrature with k=4
  0.216662 seconds (235.25 k allocations: 12.975 MiB, 98.86% compilation time)
Running: jacobi_quadrature with α=β=1
  1.979104 seconds (447.26 k allocations: 194.232 MiB, 3.85% gc time, 24.20% compilation time)
Running: legendre_quadrature
  0.155579 seconds (185.93 k allocations: 10.736 MiB, 98.50% compilation time)
Running: lobatto_quadrature
  0.222737 seconds (197.11 k allocations: 11.443 MiB, 98.80% compilation time)
Running: radau_quadrature
  0.254683 seconds (197.11 k allocations: 11.437 MiB, 7.65% gc time, 99.02% compilation time)
Running: rectangle_rule_left
  0.328393 seconds (19.34 k allocations: 1.173 MiB, 5.32% compilation time)
Running: rectangle_rule_midpoint
  0.047727 seconds (25.01 k allocations: 1.573 MiB, 99.68% compilation time)
Running: rectangle_rule_right
  0.170710 seconds (17.73 k allocations: 1.081 MiB, 17.27% compilation time)
Running: rombergs_method
  0.119160 seconds (145.02 k allocations: 8.485 MiB, 96.98% compilation time)
Running: simpsons_rule
  0.020374 seconds (37.11 k allocations: 2.369 MiB, 99.16% compilation time)
Running: simpsons38_rule
  0.044768 seconds (43.08 k allocations: 2.708 MiB, 99.00% compilation time)
Running: trapezoidal_rule
  0.017950 seconds (43.25 k allocations: 1.703 MiB, 96.08% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.023215 seconds (38.85 k allocations: 2.409 MiB, 99.09% compilation time)
Running: chebyshev_quadrature with k=1
  0.178614 seconds (231.69 k allocations: 12.988 MiB, 98.50% compilation time)
Running: chebyshev_quadrature with k=2
  0.231376 seconds (284.30 k allocations: 15.895 MiB, 11.08% gc time, 98.11% compilation time)
Running: chebyshev_quadrature with k=3
  0.191002 seconds (235.84 k allocations: 13.068 MiB, 98.56% compilation time)
Running: chebyshev_quadrature with k=4
  0.231682 seconds (235.84 k allocations: 13.142 MiB, 98.84% compilation time)
Running: jacobi_quadrature with α=β=1
  1.771523 seconds (447.97 k allocations: 148.916 MiB, 5.21% gc time, 27.70% compilation time)
Running: legendre_quadrature
  0.180454 seconds (186.53 k allocations: 10.750 MiB, 98.77% compilation time)
Running: lobatto_quadrature
  0.182785 seconds (197.71 k allocations: 11.460 MiB, 98.66% compilation time)
Running: radau_quadrature
  0.179051 seconds (197.70 k allocations: 11.454 MiB, 98.60% compilation time)
Running: rectangle_rule_left
  0.635953 seconds (19.59 k allocations: 1.186 MiB, 3.67% compilation time)
Running: rectangle_rule_midpoint
  0.067144 seconds (25.01 k allocations: 1.574 MiB, 40.48% gc time, 99.72% compilation time)
Running: rectangle_rule_right
  0.690596 seconds (17.69 k allocations: 1.078 MiB, 3.50% compilation time)
Running: rombergs_method
  0.252730 seconds (135.49 k allocations: 7.815 MiB, 98.17% compilation time)
Running: simpsons_rule
  0.051595 seconds (37.60 k allocations: 2.389 MiB, 99.60% compilation time)
Running: simpsons38_rule
  0.028569 seconds (43.78 k allocations: 2.734 MiB, 99.31% compilation time)
Running: trapezoidal_rule
  0.018987 seconds (55.40 k allocations: 1.899 MiB, 95.01% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.173094 seconds (147.47 k allocations: 8.799 MiB, 99.77% compilation time)
Running: chebyshev_quadrature with k=1
  0.136947 seconds (69.93 k allocations: 2.205 MiB, 98.63% compilation time)
Running: chebyshev_quadrature with k=2
  0.138866 seconds (105.09 k allocations: 2.868 MiB, 97.47% compilation time)
Running: chebyshev_quadrature with k=3
  0.152656 seconds (92.57 k allocations: 2.654 MiB, 97.84% compilation time)
Running: chebyshev_quadrature with k=4
  0.145746 seconds (72.10 k allocations: 2.248 MiB, 98.56% compilation time)
Running: jacobi_quadrature with α=β=1
  2.067512 seconds (480.05 k allocations: 167.768 MiB, 15.41% gc time, 18.06% compilation time)
Running: legendre_quadrature
  0.116546 seconds (18.73 k allocations: 1.094 MiB, 99.80% compilation time)
Running: lobatto_quadrature
  0.000098 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000038 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 19.166240 seconds (590.00 M allocations: 8.792 GiB, 6.45% gc time)
Running: rectangle_rule_midpoint
  0.000034 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 19.031858 seconds (592.75 M allocations: 8.833 GiB, 6.35% gc time)
Running: rombergs_method
  0.130651 seconds (20.51 k allocations: 1.165 MiB, 99.52% compilation time)
Running: simpsons_rule
  0.000073 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.023531 seconds (463 allocations: 22.578 KiB, 99.56% compilation time)
Running: trapezoidal_rule
  0.014352 seconds (171 allocations: 7.859 KiB, 99.24% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.492993 seconds (209.93 M allocations: 3.138 GiB, 1.64% gc time, 0.63% compilation time)
Running: chebyshev_quadrature with k=1
  0.444147 seconds (413.96 k allocations: 22.950 MiB, 99.28% compilation time)
Running: chebyshev_quadrature with k=2
 17.233834 seconds (468.60 k allocations: 4.040 GiB, 2.92% gc time, 2.80% compilation time)
Running: chebyshev_quadrature with k=3
  7.963222 seconds (249.12 k allocations: 1.642 GiB, 4.85% gc time, 3.05% compilation time)
Running: chebyshev_quadrature with k=4
 10.812502 seconds (249.12 k allocations: 2.260 GiB, 1.82% gc time, 2.54% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 33.570665 seconds (484.00 k allocations: 13.254 GiB, 7.68% gc time, 1.36% compilation time)
Running: legendre_quadrature.
  9.670552 seconds (223.22 k allocations: 1.976 GiB, 5.38% gc time, 2.88% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.344425 seconds (8.23 M allocations: 13.383 GiB, 11.61% gc time, 0.63% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.207233 seconds (7.23 M allocations: 13.369 GiB, 8.64% gc time, 2.00% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.390557 seconds (22.25 k allocations: 1.347 MiB, 0.33% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.457297 seconds (30.45 k allocations: 1.884 MiB, 0.50% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.232158 seconds (22.45 k allocations: 1.357 MiB, 0.74% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.481316 seconds (438.06 k allocations: 152.673 MiB, 1.08% gc time, 32.32% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.350030 seconds (200.04 M allocations: 2.983 GiB, 2.34% gc time, 1.16% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.237247 seconds (600.05 M allocations: 8.943 GiB, 6.45% gc time, 3.76% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.294376 seconds (600.03 M allocations: 8.943 GiB, 4.29% gc time, 1.42% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.045736 seconds (109.56 k allocations: 4.131 MiB, 93.85% compilation time)
Running: chebyshev_quadrature with k=1
  0.134630 seconds (247.70 k allocations: 13.511 MiB, 97.14% compilation time)
Running: chebyshev_quadrature with k=2
  0.361111 seconds (272.34 k allocations: 14.521 MiB, 99.36% compilation time)
Running: chebyshev_quadrature with k=3
  0.104699 seconds (220.25 k allocations: 11.633 MiB, 98.97% compilation time)
Running: chebyshev_quadrature with k=4
  0.782537 seconds (220.25 k allocations: 11.661 MiB, 8.61% gc time, 99.84% compilation time)
Running: jacobi_quadrature with α=β=1
  0.538839 seconds (388.84 k allocations: 34.975 MiB, 97.09% compilation time)
Running: laguerre_quadrature with k=2
  0.150009 seconds (180.54 k allocations: 10.481 MiB, 76.30% compilation time)
Running: legendre_quadrature
  0.090257 seconds (145.98 k allocations: 8.073 MiB, 99.82% compilation time)
Running: lobatto_quadrature
  0.020829 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017882 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.039096 seconds (18.88 k allocations: 1.122 MiB, 55.93% compilation time)
Running: rectangle_rule_midpoint
  0.033614 seconds (25.48 k allocations: 1.575 MiB, 63.37% compilation time)
Running: rectangle_rule_right
  0.037716 seconds (17.48 k allocations: 1.049 MiB, 54.47% compilation time)
Running: rombergs_method
  0.216435 seconds (172.69 k allocations: 9.856 MiB, 98.71% compilation time)
Running: simpsons_rule
  0.000498 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.039912 seconds (78.86 k allocations: 3.385 MiB, 97.46% compilation time)
Running: trapezoidal_rule
  0.115636 seconds (2.39 M allocations: 37.684 MiB, 33.79% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.000814 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.112906 seconds (2.46 k allocations: 1.691 MiB, 98.04% compilation time)
Running: chebyshev_quadrature with k=2
  0.118730 seconds (2.71 k allocations: 2.355 MiB, 97.39% compilation time)
Running: chebyshev_quadrature with k=3
  0.095639 seconds (2.31 k allocations: 2.028 MiB, 96.90% compilation time)
Running: chebyshev_quadrature with k=4
  0.098051 seconds (2.31 k allocations: 1.469 MiB, 97.49% compilation time)
Running: jacobi_quadrature with α=β=1
  4.178175 seconds (365.92 k allocations: 904.797 MiB, 6.13% gc time, 5.87% compilation time)
Running: legendre_quadrature
  0.066911 seconds (1.27 k allocations: 68.203 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000157 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000113 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.642275 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000362 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.260811 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.051855 seconds (997 allocations: 56.672 KiB, 99.36% compilation time)
Running: simpsons_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000967 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000148 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.124017 seconds (2.53 k allocations: 579.203 KiB, 99.48% compilation time)
Running: chebyshev_quadrature with k=2
  0.116639 seconds (2.79 k allocations: 780.188 KiB, 99.16% compilation time)
Running: chebyshev_quadrature with k=3
  0.119618 seconds (2.39 k allocations: 661.047 KiB, 99.19% compilation time)
Running: chebyshev_quadrature with k=4
  0.122395 seconds (2.39 k allocations: 491.547 KiB, 99.43% compilation time)
Running: jacobi_quadrature with α=β=1
  1.828998 seconds (372.48 k allocations: 252.924 MiB, 25.02% compilation time)
Running: legendre_quadrature
  0.076952 seconds (1.32 k allocations: 67.859 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000116 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000073 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.427651 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000135 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.368945 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.086923 seconds (1.21 k allocations: 64.938 KiB, 99.70% compilation time)
Running: simpsons_rule
  0.000016 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000011 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000473 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
