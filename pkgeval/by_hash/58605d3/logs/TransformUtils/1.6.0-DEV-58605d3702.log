Julia Version 1.6.0-DEV.1167
Commit 58605d3702 (2020-10-09 10:49 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Wj5Ng5/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Wj5Ng5/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.13947614104101824 0.046203482149987825; 0.13947614104101824 0.0 0.0763973472212629; -0.046203482149987825 -0.0763973472212629 0.0])
dAA = so3([0.0 -0.029388191976495965 -0.08901367325790964; 0.029388191976495965 0.0 0.05806356839590409; 0.08901367325790964 -0.05806356839590409 0.0])
dAA = so3([0.0 -0.15391189372664452 0.027523699026428733; 0.15391189372664452 0.0 0.11509506804699494; -0.027523699026428733 -0.11509506804699494 0.0])
dAA = Quaternion(0.9948903105066611, [-0.07184697894283554, 0.014846159366993034, 0.06936045868358577])
dAA = SO3([0.9878368271591756 0.08812974680179339 -0.12810757447061655; -0.09437043336522474 0.994587293019004 -0.043478015957375486; 0.12358245917019312 0.0550387526546697 0.9908067982667789])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9727137626680362 -0.05649410924613915 -0.22502522422314497; 0.088592889674165 0.9868490842007122 0.13520423407348173; 0.21442769367638273 -0.15145065411777167 0.9649266622660638]), [-0.7639734722126289, 0.46203482149987823, 1.3947614104101824])
xj = SE3(SO3([0.938281080546649 -0.3440313435333406 0.03565176790647776; 0.3098127563843754 0.8818047398576568 0.3555790443011031; -0.15376823426744693 -0.3225877174215019 0.9339660029674832]), [-1.1509506804699494, 0.27523699026428733, 1.539118937266445])
Dx = SE3(SO3([0.9071539598101132 -0.3256941328667116 0.26644891633675716; 0.276019380705971 0.9385000650918901 0.2074389772853956; -0.3176239831554345 -0.1146340247863579 0.9412619431835948]), [-0.3620127644161635, -0.1843423778756718, 0.20111820192095164])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
