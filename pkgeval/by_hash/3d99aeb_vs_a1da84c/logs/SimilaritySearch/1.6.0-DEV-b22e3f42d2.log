Julia Version 1.6.0-DEV.1216
Commit b22e3f42d2 (2020-10-13 18:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed SortingAlgorithms â”€â”€ v0.3.1
  Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
  Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
  Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
  Installed OrderedCollections â”€ v1.3.1
  Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.2
  Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
  Installed SimilaritySearch â”€â”€â”€ v0.3.20
  Installed DataStructures â”€â”€â”€â”€â”€ v0.17.20
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mOrderedCollections[39m
[90m[32m  âœ“ [39mDataAPI[39m
[90m[32m  âœ“ [39mMissings[39m
[90m[32m  âœ“ [39mDataStructures[39m
[90m[32m  âœ“ [39mSortingAlgorithms[39m
[90m[32m  âœ“ [39mParsers[39m
[90m[32m  âœ“ [39mJSON[39m
[90m[32m  âœ“ [39mStatsBase[39m
[32m  âœ“ [39mSimilaritySearch
9 dependencies successfully precompiled

    Testing SimilaritySearch
Status `/tmp/jl_Ds2Ma1/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_Ds2Ma1/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(3, 0.011671305f0), Item(42, 0.032276988f0), Item(9, 0.03357148f0), Item(23, 0.040723443f0)])
Vsorted = Item[Item(3, 0.011671305f0), Item(42, 0.032276988f0), Item(9, 0.03357148f0), Item(23, 0.040723443f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0036108811696370442, 0.004039303461710612, 301.0, 49.06393603235483))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00513452688852946, 0.0038115262985229494, 301.0, 71.55213344097137))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003571669260660807, 0.0037901639938354493, 301.0, 39.991992712020874))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0037030140558878583, 0.00306397279103597, 301.0, 8.879151660948992))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0028308788935343427, 0.004442636171976725, 301.0, 44.434264371171594))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.786087036132813e-5, 2.509752909342448e-5, 301.0, 175.63675811886787))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.113746643066406e-5, 0.0075406312942504885, 300.0, 26.60881231352687)
p = PerformanceResult(1.0, 1.0, 1.0, 2.9889742533365884e-5, 1.81277592976888e-5, 300.0, 26.60881231352687)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003729542096455892, 0.0026726007461547853, 300.0, 1.399053348824964)
p = PerformanceResult(1.0, 1.0, 1.0, 2.6133325364854598e-5, 1.4162063598632812e-5, 300.0, 1.399053348824964)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.113746643066406e-5, 0.0075406312942504885, 300.0, 26.60881231352687), PerformanceResult(1.0, 1.0, 1.0, 2.9889742533365884e-5, 1.81277592976888e-5, 300.0, 26.60881231352687), PerformanceResult(1.0, 1.0, 1.0, 0.003729542096455892, 0.0026726007461547853, 300.0, 1.399053348824964), PerformanceResult(1.0, 1.0, 1.0, 2.6133325364854598e-5, 1.4162063598632812e-5, 300.0, 1.399053348824964))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 121.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.009315109252929688, 0.003577264149983724, 345.93333333333334, 28705.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008870530128479003, 0.002414568265279134, 302.23333333333335, 7000.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.220703125e-5, 7.764498392740886e-6, 93.3, 49.14896912127733))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6880035400390624e-5, 5.364418029785156e-6, 85.63333333333334, 71.71302318572998))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5823046366373696e-5, 8.96453857421875e-6, 87.6, 40.040518045425415))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.4737586975097654e-5, 5.962848663330078e-5, 93.76666666666667, 44.50320405699313))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8066666666666664, 0.8066666666666664, 0.8066666666666665, 1.686414082845052e-5, 2.3627281188964842e-5, 71.23333333333333, 184.90054535865784))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-13T20:41:52.518
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9120000000000004, 0.9080000000000003, 0.909777777777778, 1.0113716125488282e-5, 1.4548301696777344e-5, 151.8, 54.47152718226425))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.0089874267578125e-5, 1.1341571807861328e-5, 155.08, 0.0))
*** advance 1 from 1000; 2020-10-13T20:41:53.030
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8840000000000002, 0.8800000000000001, 0.8817777777777779, 1.5163421630859375e-5, 1.4700889587402343e-5, 150.95, 80.70611947774887))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4886856079101562e-5, 1.1401176452636719e-5, 154.07, 0.0))
*** advance 1 from 1000; 2020-10-13T20:41:53.836
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8835436507936508, 0.8729999999999998, 0.8774623323013415, 1.262664794921875e-5, 1.639842987060547e-5, 151.9, 44.14104014728218))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5697479248046876e-5, 4.431009292602539e-5, 155.14, 0.0))
*** advance 1 from 1000; 2020-10-13T20:41:54.657
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8999999999999999, 0.8959999999999998, 0.8977777777777776, 4.266023635864258e-5, 0.0001965498924255371, 151.56, 49.71935537015088))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.255294799804687e-5, 0.00020977020263671876, 154.9, 0.0))
*** advance 1 from 1000; 2020-10-13T20:41:54.995
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8745555555555555, 0.8719999999999999, 0.8732105263157895, 2.874612808227539e-5, 8.035182952880859e-5, 152.05, 216.47362782713026))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.3114681243896485e-5, 9.600162506103516e-5, 155.27, 0.0))
*** advance 1 from 1000; 2020-10-13T20:41:55.632
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9120000000000004, 0.9080000000000003, 0.909777777777778, 1.3589859008789062e-5, 2.9449462890625e-5, 151.8, 54.485989646753296))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.9543170928955078e-5, 4.538059234619141e-5, 155.08, 0.014675825863378122))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T20:41:57.900
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.778, 0.778, 0.778, 0.001106119155883789, 6.395816802978515e-5, 202.71, 183.2500018775463))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T20:41:59.403
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7890000000000001, 0.7890000000000001, 0.7890000000000001, 0.0027552032470703125, 5.938053131103516e-5, 208.68, 104.53412906080484))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T20:42:01.188
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6240000000000001, 0.6240000000000001, 0.6240000000000001, 0.0012498879432678222, 5.906105041503906e-5, 254.58, 3.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T20:42:02.654
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.975, 0.97, 0.9716666666666667, 0.001259760856628418, 1.2519359588623046e-5, 219.87, 596.2000206112862))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T20:42:03.919
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.6040000000000003, 0.6040000000000003, 0.6040000000000003, 0.0015700340270996093, 0.00027594089508056643, 255.87, 2309.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T20:42:05.033
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.4130000000000002, 0.4130000000000002, NaN, 0.0013217782974243163, 0.0002793788909912109, 259.42, 3616.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T20:42:06.597
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6120000000000002, 0.6120000000000002, 0.6120000000000002, 0.001276862621307373, 1.8279552459716797e-5, 247.71, 2331.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.02491103202847, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.97265625,"f1":0.9853422619047623,"seconds":3.589317202568054e-6,"exhaustive_search_seconds":1.8998980522155762e-6,"evaluations":8.78125,"distances_sum":697.1658288091421}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.02491103202847,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9853422619047623,"seconds":3.589317202568054e-6,"exhaustive_search_seconds":1.8998980522155762e-6,"evaluations":8.78125,"distances_sum":697.1658288091421}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.02491103202847,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9853422619047623,"seconds":3.589317202568054e-6,"exhaustive_search_seconds":1.8998980522155762e-6,"evaluations":8.78125,"distances_sum":697.1658288091421}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.479843444227006, conf: {"restarts":4}, perf: {"precision":0.9062499999999989,"recall":0.9062499999999989,"f1":0.9062499999999989,"seconds":1.190975308418274e-5,"exhaustive_search_seconds":4.610046744346619e-6,"evaluations":39.921875,"distances_sum":302.5805491581559}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.479843444227006,"state":{"restarts":4},"perf":{"precision":0.9062499999999989,"recall":0.9062499999999989,"f1":0.9062499999999989,"seconds":1.190975308418274e-5,"exhaustive_search_seconds":4.610046744346619e-6,"evaluations":39.921875,"distances_sum":302.5805491581559}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.479843444227006,"state":{"restarts":4},"perf":{"precision":0.9062499999999989,"recall":0.9062499999999989,"f1":0.9062499999999989,"seconds":1.190975308418274e-5,"exhaustive_search_seconds":4.610046744346619e-6,"evaluations":39.921875,"distances_sum":302.5805491581559}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.479843444227006,"state":{"restarts":4},"perf":{"precision":0.9062499999999989,"recall":0.9062499999999989,"f1":0.9062499999999989,"seconds":1.190975308418274e-5,"exhaustive_search_seconds":4.610046744346619e-6,"evaluations":39.921875,"distances_sum":302.5805491581559}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8854166666666654, conf: {"restarts":12}, perf: {"precision":0.8854166666666654,"recall":0.8854166666666654,"f1":0.8854166666666654,"seconds":3.663264214992523e-5,"exhaustive_search_seconds":1.9030645489692688e-5,"evaluations":143.4921875,"distances_sum":127.56048791762441}, best_list's length: 5, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8854166666666654,"state":{"restarts":12},"perf":{"precision":0.8854166666666654,"recall":0.8854166666666654,"f1":0.8854166666666654,"seconds":3.663264214992523e-5,"exhaustive_search_seconds":1.9030645489692688e-5,"evaluations":143.4921875,"distances_sum":127.56048791762441}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8854166666666654,"state":{"restarts":12},"perf":{"precision":0.8854166666666654,"recall":0.8854166666666654,"f1":0.8854166666666654,"seconds":3.663264214992523e-5,"exhaustive_search_seconds":1.9030645489692688e-5,"evaluations":143.4921875,"distances_sum":127.56048791762441}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.83767361111111,"state":{"restarts":12},"perf":{"precision":0.83767361111111,"recall":0.83767361111111,"f1":0.83767361111111,"seconds":7.13057816028595e-5,"exhaustive_search_seconds":0.00022393092513084412,"evaluations":222.1953125,"distances_sum":58.14955803565681}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.83767361111111,"state":{"restarts":12},"perf":{"precision":0.83767361111111,"recall":0.83767361111111,"f1":0.83767361111111,"seconds":7.13057816028595e-5,"exhaustive_search_seconds":0.00022393092513084412,"evaluations":222.1953125,"distances_sum":58.14955803565681}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(12), SatNeighborhood(32), 2020-10-13T20:42:12.766
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5628, 0.015563798f0), Item(827, 0.020576196f0), Item(5796, 0.04054227f0), Item(8739, 0.043489434f0), Item(2341, 0.046522237f0), Item(7880, 0.050489407f0), Item(4793, 0.058124684f0), Item(863, 0.05824814f0), Item(8989, 0.05849826f0), Item(8657, 0.060577676f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0786516853932584, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9477943931068935,"seconds":4.364177584648132e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.34375,"distances_sum":649.1577196866274}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0786516853932584,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9477943931068935,"seconds":4.364177584648132e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.34375,"distances_sum":649.1577196866274}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.080675422138837, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.950766941391942,"seconds":3.6116689443588257e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.328125,"distances_sum":648.4054314643145}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.080675422138837,"state":{"bsize":5},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.950766941391942,"seconds":3.6116689443588257e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.328125,"distances_sum":648.4054314643145}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.080675422138837,"state":{"bsize":5},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.950766941391942,"seconds":3.6116689443588257e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.328125,"distances_sum":648.4054314643145}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.098288508557458, conf: {"bsize":3}, perf: {"precision":0.9791666666666663,"recall":0.9791666666666663,"f1":0.9791666666666663,"seconds":1.050904393196106e-5,"exhaustive_search_seconds":5.07943332195282e-6,"evaluations":31.953125,"distances_sum":286.88636887446046}, best_list's length: 2, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.9795438513990127, conf: {"bsize":4}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":9.998679161071777e-6,"exhaustive_search_seconds":5.07943332195282e-6,"evaluations":33.2265625,"distances_sum":286.14913007989526}, best_list's length: 3, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.098288508557458,"state":{"bsize":3},"perf":{"precision":0.9791666666666663,"recall":0.9791666666666663,"f1":0.9791666666666663,"seconds":1.050904393196106e-5,"exhaustive_search_seconds":5.07943332195282e-6,"evaluations":31.953125,"distances_sum":286.88636887446046}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.332106231922166, conf: {"bsize":2}, perf: {"precision":0.9357638888888882,"recall":0.9357638888888882,"f1":0.9357638888888882,"seconds":7.739290595054626e-6,"exhaustive_search_seconds":5.07943332195282e-6,"evaluations":29.7109375,"distances_sum":289.6011706776917}, best_list's length: 6, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.332106231922166,"state":{"bsize":2},"perf":{"precision":0.9357638888888882,"recall":0.9357638888888882,"f1":0.9357638888888882,"seconds":7.739290595054626e-6,"exhaustive_search_seconds":5.07943332195282e-6,"evaluations":29.7109375,"distances_sum":289.6011706776917}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.332106231922166,"state":{"bsize":2},"perf":{"precision":0.9357638888888882,"recall":0.9357638888888882,"f1":0.9357638888888882,"seconds":7.739290595054626e-6,"exhaustive_search_seconds":5.07943332195282e-6,"evaluations":29.7109375,"distances_sum":289.6011706776917}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.332106231922166,"state":{"bsize":2},"perf":{"precision":0.9357638888888882,"recall":0.9357638888888882,"f1":0.9357638888888882,"seconds":7.739290595054626e-6,"exhaustive_search_seconds":5.07943332195282e-6,"evaluations":29.7109375,"distances_sum":289.6011706776917}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.31020408163265, conf: {"bsize":3}, perf: {"precision":0.9782986111111106,"recall":0.9782986111111106,"f1":0.9782986111111106,"seconds":1.757591962814331e-5,"exhaustive_search_seconds":1.9451603293418884e-5,"evaluations":61.25,"distances_sum":120.52810938097537}, best_list's length: 5, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.31020408163265,"state":{"bsize":3},"perf":{"precision":0.9782986111111106,"recall":0.9782986111111106,"f1":0.9782986111111106,"seconds":1.757591962814331e-5,"exhaustive_search_seconds":1.9451603293418884e-5,"evaluations":61.25,"distances_sum":120.52810938097537}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.31020408163265,"state":{"bsize":3},"perf":{"precision":0.9782986111111106,"recall":0.9782986111111106,"f1":0.9782986111111106,"seconds":1.757591962814331e-5,"exhaustive_search_seconds":1.9451603293418884e-5,"evaluations":61.25,"distances_sum":120.52810938097537}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.31020408163265,"state":{"bsize":3},"perf":{"precision":0.9782986111111106,"recall":0.9782986111111106,"f1":0.9782986111111106,"seconds":1.757591962814331e-5,"exhaustive_search_seconds":1.9451603293418884e-5,"evaluations":61.25,"distances_sum":120.52810938097537}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.00455380095482, conf: {"bsize":4}, perf: {"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":4.6430155634880066e-5,"exhaustive_search_seconds":0.00022621825337409973,"evaluations":106.3671875,"distances_sum":54.36805509869009}, best_list's length: 2, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 94.22397843979897, conf: {"bsize":5}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":3.965944051742554e-5,"exhaustive_search_seconds":0.00022621825337409973,"evaluations":107.2578125,"distances_sum":54.361359366215765}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.37049180327868, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.4832006096839905e-5,"exhaustive_search_seconds":0.00022621825337409973,"evaluations":104.84375,"distances_sum":54.354025405831635}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.37049180327868,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.4832006096839905e-5,"exhaustive_search_seconds":0.00022621825337409973,"evaluations":104.84375,"distances_sum":54.354025405831635}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.37049180327868,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.4832006096839905e-5,"exhaustive_search_seconds":0.00022621825337409973,"evaluations":104.84375,"distances_sum":54.354025405831635}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":96.37049180327868,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.4832006096839905e-5,"exhaustive_search_seconds":0.00022621825337409973,"evaluations":104.84375,"distances_sum":54.354025405831635}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(7), SatNeighborhood(32), 2020-10-13T20:42:16.301
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(3697, 0.03658954f0), Item(9885, 0.0395523f0), Item(4964, 0.04151634f0), Item(865, 0.04783275f0), Item(6820, 0.05288243f0), Item(4650, 0.055685405f0), Item(2980, 0.058224164f0), Item(8910, 0.058620438f0), Item(6460, 0.058887728f0), Item(2813, 0.059503023f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
