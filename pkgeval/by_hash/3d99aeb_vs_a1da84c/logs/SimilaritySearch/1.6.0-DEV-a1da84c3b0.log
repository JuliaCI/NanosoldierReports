Julia Version 1.6.0-DEV.1210
Commit a1da84c3b0 (2020-10-13 13:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
  Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
  Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
  Installed OrderedCollections â”€ v1.3.1
  Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
  Installed DataStructures â”€â”€â”€â”€â”€ v0.17.20
  Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.2
  Installed SimilaritySearch â”€â”€â”€ v0.3.20
  Installed SortingAlgorithms â”€â”€ v0.3.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mDataAPI[39m
[90m[32m  âœ“ [39mOrderedCollections[39m
[90m[32m  âœ“ [39mMissings[39m
[90m[32m  âœ“ [39mDataStructures[39m
[90m[32m  âœ“ [39mSortingAlgorithms[39m
[90m[32m  âœ“ [39mParsers[39m
[90m[32m  âœ“ [39mJSON[39m
[90m[32m  âœ“ [39mStatsBase[39m
[32m  âœ“ [39mSimilaritySearch
9 dependencies successfully precompiled

    Testing SimilaritySearch
Status `/tmp/jl_tPUPcY/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_tPUPcY/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(38, 0.015254974f0), Item(16, 0.020887017f0), Item(44, 0.037868977f0), Item(42, 0.060065508f0)])
Vsorted = Item[Item(38, 0.015254974f0), Item(16, 0.020887017f0), Item(44, 0.037868977f0), Item(42, 0.060065508f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004375831286112467, 0.00364376703898112, 301.0, 48.155620120465755))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003255565961201986, 0.003230571746826172, 301.0, 70.81615340709686))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0038411537806193035, 0.0048035303751627605, 301.0, 38.80021512508392))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0035091559092203777, 0.003289230664571126, 301.0, 8.412777302553877))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.006304335594177246, 0.005475966135660807, 301.0, 43.32781435921788))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 4.038810729980469e-5, 2.6003519694010416e-5, 301.0, 174.45128001272678))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 4.0642420450846355e-5, 0.01082470417022705, 300.0, 25.919876751257107)
p = PerformanceResult(1.0, 1.0, 1.0, 3.4578641255696614e-5, 1.982847849527995e-5, 300.0, 25.919876751257107)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003458563486735026, 0.003305331865946452, 300.0, 1.2893133200518605)
p = PerformanceResult(1.0, 1.0, 1.0, 4.709296756320529e-5, 1.4170010884602864e-5, 300.0, 1.2893133200518605)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 4.0642420450846355e-5, 0.01082470417022705, 300.0, 25.919876751257107), PerformanceResult(1.0, 1.0, 1.0, 3.4578641255696614e-5, 1.982847849527995e-5, 300.0, 25.919876751257107), PerformanceResult(1.0, 1.0, 1.0, 0.003458563486735026, 0.003305331865946452, 300.0, 1.2893133200518605), PerformanceResult(1.0, 1.0, 1.0, 4.709296756320529e-5, 1.4170010884602864e-5, 300.0, 1.2893133200518605))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 126.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007455897331237793, 0.003768459955851237, 349.8, 28619.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007238984107971191, 0.002653066317240397, 303.03333333333336, 6946.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.013346060117085775, 7.295608520507813e-6, 95.56666666666666, 48.24237882345915))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6919771830240886e-5, 7.534027099609375e-6, 84.63333333333334, 71.02826964855194))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5894571940104168e-5, 9.067853291829427e-6, 89.8, 38.82557916641235))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.269513448079427e-5, 6.1798095703125e-5, 95.33333333333333, 43.37170450761914))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8433333333333333, 0.8433333333333333, 0.8433333333333333, 1.64031982421875e-5, 2.38339106241862e-5, 70.16666666666667, 181.35603769123554))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-13T20:38:29.897
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.897, 0.897, 0.897, 1.5554428100585936e-5, 1.4960765838623047e-5, 150.94, 52.97559047699906))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6961097717285156e-5, 1.1811256408691406e-5, 154.37, 0.0))
*** advance 1 from 1000; 2020-10-13T20:38:30.968
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9190000000000004, 0.9190000000000004, 0.9190000000000004, 1.5387535095214845e-5, 1.5211105346679687e-5, 150.96, 78.2126893196255))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4567375183105469e-5, 1.0700225830078126e-5, 154.53, 0.0))
*** advance 1 from 1000; 2020-10-13T20:38:31.625
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9583333333333335, 0.9560000000000002, 0.9571052631578948, 1.648902893066406e-5, 1.5828609466552735e-5, 165.52, 42.17135549522936))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.7061233520507813e-5, 1.3620853424072266e-5, 170.23, 0.0))
*** advance 1 from 1000; 2020-10-13T20:38:32.443
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9830000000000001, 0.9830000000000001, 0.9830000000000001, 4.61888313293457e-5, 0.00030373096466064454, 164.07, 46.37323684501462))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.723310470581055e-5, 0.00020756006240844728, 168.82, 0.0))
*** advance 1 from 1000; 2020-10-13T20:38:32.826
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9489999999999997, 0.9489999999999997, 0.9489999999999997, 2.8002262115478516e-5, 7.265090942382813e-5, 163.2, 198.20287020225078))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.626657485961914e-5, 7.07101821899414e-5, 167.84, 0.0))
*** advance 1 from 1000; 2020-10-13T20:38:33.540
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.897, 0.897, 0.897, 1.9583702087402344e-5, 4.7039985656738284e-5, 150.94, 52.9870157816913))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.9309520721435546e-5, 4.748106002807617e-5, 154.37, 0.01416300720302388))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T20:38:35.266
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.745, 0.745, 0.745, 0.0015070247650146485, 6.650924682617187e-5, 201.17, 189.78333520889282))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T20:38:36.525
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7410000000000001, 0.7410000000000001, 0.7410000000000001, 0.0011651158332824708, 0.00010748147964477539, 202.1, 109.3579388409853))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T20:38:37.367
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6160000000000001, 0.6160000000000001, 0.6160000000000001, 0.003207721710205078, 0.0018252301216125488, 251.3, 2.4500000029802322))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T20:38:40.113
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9780000000000004, 0.9780000000000004, 0.9780000000000004, 0.001298491954803467, 1.2829303741455079e-5, 221.26, 599.6000204831362))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T20:38:41.619
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5780000000000001, 0.5780000000000001, 0.5780000000000001, 0.0014403748512268066, 0.0004543399810791016, 250.99, 2324.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T20:38:43.144
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.4019999999999997, 0.4019999999999997, NaN, 0.001452181339263916, 0.00026129961013793946, 247.96, 3670.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T20:38:43.984
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.583, 0.583, 0.5830000000000001, 0.0013753986358642578, 1.8808841705322266e-5, 239.59, 2352.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0491803278688527, conf: {"restarts":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9715029761904763,"seconds":4.246830940246582e-6,"exhaustive_search_seconds":2.078711986541748e-6,"evaluations":8.578125,"distances_sum":679.1681348308921}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0491803278688527,"state":{"restarts":12},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9715029761904763,"seconds":4.246830940246582e-6,"exhaustive_search_seconds":2.078711986541748e-6,"evaluations":8.578125,"distances_sum":679.1681348308921}}, beam: 3, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.050136736554239, conf: {"restarts":13}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9711309523809528,"seconds":4.108995199203491e-6,"exhaustive_search_seconds":2.078711986541748e-6,"evaluations":8.5703125,"distances_sum":680.0681112930179}, best_list's length: 4, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0686456400742115, conf: {"restarts":11}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9607886904761908,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":2.078711986541748e-6,"evaluations":8.421875,"distances_sum":665.4968327507377}, best_list's length: 5, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.088846880907372, conf: {"restarts":9}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.949461996336997,"seconds":3.4403055906295776e-6,"exhaustive_search_seconds":2.078711986541748e-6,"evaluations":8.265625,"distances_sum":647.6913421675563}, best_list's length: 6, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.088846880907372,"state":{"restarts":9},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.949461996336997,"seconds":3.4403055906295776e-6,"exhaustive_search_seconds":2.078711986541748e-6,"evaluations":8.265625,"distances_sum":647.6913421675563}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.088846880907372,"state":{"restarts":9},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.949461996336997,"seconds":3.4403055906295776e-6,"exhaustive_search_seconds":2.078711986541748e-6,"evaluations":8.265625,"distances_sum":647.6913421675563}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.088846880907372,"state":{"restarts":9},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.949461996336997,"seconds":3.4403055906295776e-6,"exhaustive_search_seconds":2.078711986541748e-6,"evaluations":8.265625,"distances_sum":647.6913421675563}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.740181268882175, conf: {"restarts":12}, perf: {"precision":0.9114583333333318,"recall":0.9114583333333318,"f1":0.9114583333333318,"seconds":1.7933547496795654e-5,"exhaustive_search_seconds":4.71062958240509e-6,"evaluations":56.890625,"distances_sum":273.23543600179255}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.748585621636539, conf: {"restarts":11}, perf: {"precision":0.9123263888888875,"recall":0.9123263888888875,"f1":0.9123263888888875,"seconds":1.6907230019569397e-5,"exhaustive_search_seconds":4.71062958240509e-6,"evaluations":56.6171875,"distances_sum":272.7034948859364}, best_list's length: 6, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6395393970759478, conf: {"restarts":14}, perf: {"precision":0.9088541666666653,"recall":0.9088541666666653,"f1":0.9088541666666653,"seconds":1.8591061234474182e-5,"exhaustive_search_seconds":4.71062958240509e-6,"evaluations":60.3828125,"distances_sum":272.34508183039725}, best_list's length: 7, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.748585621636539,"state":{"restarts":11},"perf":{"precision":0.9123263888888875,"recall":0.9123263888888875,"f1":0.9123263888888875,"seconds":1.6907230019569397e-5,"exhaustive_search_seconds":4.71062958240509e-6,"evaluations":56.6171875,"distances_sum":272.7034948859364}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.748585621636539,"state":{"restarts":11},"perf":{"precision":0.9123263888888875,"recall":0.9123263888888875,"f1":0.9123263888888875,"seconds":1.6907230019569397e-5,"exhaustive_search_seconds":4.71062958240509e-6,"evaluations":56.6171875,"distances_sum":272.7034948859364}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.748585621636539,"state":{"restarts":11},"perf":{"precision":0.9123263888888875,"recall":0.9123263888888875,"f1":0.9123263888888875,"seconds":1.6907230019569397e-5,"exhaustive_search_seconds":4.71062958240509e-6,"evaluations":56.6171875,"distances_sum":272.7034948859364}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8489583333333324, conf: {"restarts":9}, perf: {"precision":0.8489583333333324,"recall":0.8489583333333324,"f1":0.8489583333333324,"seconds":3.254413604736328e-5,"exhaustive_search_seconds":2.123415470123291e-5,"evaluations":123.5859375,"distances_sum":129.34167563077062}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8645833333333324, conf: {"restarts":18}, perf: {"precision":0.8645833333333324,"recall":0.8645833333333324,"f1":0.8645833333333324,"seconds":5.068071186542511e-5,"exhaustive_search_seconds":2.123415470123291e-5,"evaluations":179.8671875,"distances_sum":128.40373123344034}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.862847222222221, conf: {"restarts":13}, perf: {"precision":0.862847222222221,"recall":0.862847222222221,"f1":0.862847222222221,"seconds":3.761798143386841e-5,"exhaustive_search_seconds":2.123415470123291e-5,"evaluations":147.015625,"distances_sum":129.00044458266348}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8663194444444433, conf: {"restarts":8}, perf: {"precision":0.8663194444444433,"recall":0.8663194444444433,"f1":0.8663194444444433,"seconds":3.084354102611542e-5,"exhaustive_search_seconds":2.123415470123291e-5,"evaluations":116.3984375,"distances_sum":128.43320356216282}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8758680555555544, conf: {"restarts":21}, perf: {"precision":0.8758680555555544,"recall":0.8758680555555544,"f1":0.8758680555555544,"seconds":5.326792597770691e-5,"exhaustive_search_seconds":2.123415470123291e-5,"evaluations":195.453125,"distances_sum":128.05487425532192}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8828124999999988, conf: {"restarts":19}, perf: {"precision":0.8828124999999988,"recall":0.8828124999999988,"f1":0.8828124999999988,"seconds":5.04814088344574e-5,"exhaustive_search_seconds":2.123415470123291e-5,"evaluations":183.546875,"distances_sum":127.63775450643152}, best_list's length: 7, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8828124999999988,"state":{"restarts":19},"perf":{"precision":0.8828124999999988,"recall":0.8828124999999988,"f1":0.8828124999999988,"seconds":5.04814088344574e-5,"exhaustive_search_seconds":2.123415470123291e-5,"evaluations":183.546875,"distances_sum":127.63775450643152}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8836805555555544, conf: {"restarts":16}, perf: {"precision":0.8836805555555544,"recall":0.8836805555555544,"f1":0.8836805555555544,"seconds":4.7598034143447876e-5,"exhaustive_search_seconds":2.123415470123291e-5,"evaluations":165.0703125,"distances_sum":127.49881151225418}, best_list's length: 5, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8836805555555544,"state":{"restarts":16},"perf":{"precision":0.8836805555555544,"recall":0.8836805555555544,"f1":0.8836805555555544,"seconds":4.7598034143447876e-5,"exhaustive_search_seconds":2.123415470123291e-5,"evaluations":165.0703125,"distances_sum":127.49881151225418}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8836805555555544,"state":{"restarts":16},"perf":{"precision":0.8836805555555544,"recall":0.8836805555555544,"f1":0.8836805555555544,"seconds":4.7598034143447876e-5,"exhaustive_search_seconds":2.123415470123291e-5,"evaluations":165.0703125,"distances_sum":127.49881151225418}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8420138888888876, conf: {"restarts":12}, perf: {"precision":0.8420138888888876,"recall":0.8420138888888876,"f1":null,"seconds":7.964856922626495e-5,"exhaustive_search_seconds":0.00021765753626823425,"evaluations":225.25,"distances_sum":56.54583762772381}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8437499999999988, conf: {"restarts":7}, perf: {"precision":0.8437499999999988,"recall":0.8437499999999988,"f1":0.8437499999999988,"seconds":6.549805402755737e-5,"exhaustive_search_seconds":0.00021765753626823425,"evaluations":184.46875,"distances_sum":56.51444624736905}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8402777777777767, conf: {"restarts":21}, perf: {"precision":0.8402777777777767,"recall":0.8402777777777767,"f1":0.8402777777777767,"seconds":0.00010757520794868469,"exhaustive_search_seconds":0.00021765753626823425,"evaluations":298.4453125,"distances_sum":56.51286863721907}, best_list's length: 8, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8463541666666656, conf: {"restarts":29}, perf: {"precision":0.8463541666666656,"recall":0.8463541666666656,"f1":0.8463541666666656,"seconds":0.00012722797691822052,"exhaustive_search_seconds":0.00021765753626823425,"evaluations":364.9375,"distances_sum":56.29051034897566}, best_list's length: 9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8411458333333321, conf: {"restarts":11}, perf: {"precision":0.8411458333333321,"recall":0.8411458333333321,"f1":0.8411458333333321,"seconds":8.063763380050659e-5,"exhaustive_search_seconds":0.00021765753626823425,"evaluations":217.2265625,"distances_sum":56.69156199879944}, best_list's length: 10, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8463541666666656,"state":{"restarts":29},"perf":{"precision":0.8463541666666656,"recall":0.8463541666666656,"f1":0.8463541666666656,"seconds":0.00012722797691822052,"exhaustive_search_seconds":0.00021765753626823425,"evaluations":364.9375,"distances_sum":56.29051034897566}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8463541666666656,"state":{"restarts":29},"perf":{"precision":0.8463541666666656,"recall":0.8463541666666656,"f1":0.8463541666666656,"seconds":0.00012722797691822052,"exhaustive_search_seconds":0.00021765753626823425,"evaluations":364.9375,"distances_sum":56.29051034897566}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(29), SatNeighborhood(32), 2020-10-13T20:38:51.780
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(611, 0.029127726f0), Item(1300, 0.040545113f0), Item(791, 0.048254192f0), Item(4409, 0.04934095f0), Item(9022, 0.053338937f0), Item(4054, 0.05799006f0), Item(4202, 0.059723392f0), Item(2163, 0.06015934f0), Item(7782, 0.06650492f0), Item(1352, 0.06952556f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0736253494874184, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.953486617549118,"seconds":3.93204391002655e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3828125,"distances_sum":657.502703435719}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0736253494874184,"state":{"bsize":5},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.953486617549118,"seconds":3.93204391002655e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3828125,"distances_sum":657.502703435719}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.089877010406812, conf: {"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9465144230769237,"seconds":4.682689905166626e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.2578125,"distances_sum":639.4218144789338}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.089877010406812,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9465144230769237,"seconds":4.682689905166626e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.2578125,"distances_sum":639.4218144789338}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0929791271347247, conf: {"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.944969093406594,"seconds":4.582107067108154e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.234375,"distances_sum":641.4998955503106}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0929791271347247, conf: {"bsize":10}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9460050366300371,"seconds":4.520639777183533e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.234375,"distances_sum":642.397249378264}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0929791271347247,"state":{"bsize":9},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.944969093406594,"seconds":4.582107067108154e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.234375,"distances_sum":641.4998955503106}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0929791271347247,"state":{"bsize":9},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.944969093406594,"seconds":4.582107067108154e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.234375,"distances_sum":641.4998955503106}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.006405693950178, conf: {"bsize":3}, perf: {"precision":0.9609374999999994,"recall":0.9609374999999994,"f1":0.9609374999999994,"seconds":1.0823830962181091e-5,"exhaustive_search_seconds":4.7888606786727905e-6,"evaluations":32.9296875,"distances_sum":288.40262661129236}, best_list's length: 2, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.558449424591157, conf: {"bsize":5}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":1.3299286365509033e-5,"exhaustive_search_seconds":4.7888606786727905e-6,"evaluations":38.6953125,"distances_sum":286.4983729198575}, best_list's length: 5, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.460104834012813, conf: {"bsize":6}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":1.329369843006134e-5,"exhaustive_search_seconds":4.7888606786727905e-6,"evaluations":40.2421875,"distances_sum":286.4983729198575}, best_list's length: 7, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.006405693950178,"state":{"bsize":3},"perf":{"precision":0.9609374999999994,"recall":0.9609374999999994,"f1":0.9609374999999994,"seconds":1.0823830962181091e-5,"exhaustive_search_seconds":4.7888606786727905e-6,"evaluations":32.9296875,"distances_sum":288.40262661129236}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.25674633770239, conf: {"bsize":2}, perf: {"precision":0.9340277777777768,"recall":0.9340277777777768,"f1":0.9340277777777768,"seconds":1.0017305612564087e-5,"exhaustive_search_seconds":4.7888606786727905e-6,"evaluations":30.3984375,"distances_sum":291.64275651425123}, best_list's length: 7, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.25674633770239,"state":{"bsize":2},"perf":{"precision":0.9340277777777768,"recall":0.9340277777777768,"f1":0.9340277777777768,"seconds":1.0017305612564087e-5,"exhaustive_search_seconds":4.7888606786727905e-6,"evaluations":30.3984375,"distances_sum":291.64275651425123}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.25674633770239,"state":{"bsize":2},"perf":{"precision":0.9340277777777768,"recall":0.9340277777777768,"f1":0.9340277777777768,"seconds":1.0017305612564087e-5,"exhaustive_search_seconds":4.7888606786727905e-6,"evaluations":30.3984375,"distances_sum":291.64275651425123}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.25674633770239,"state":{"bsize":2},"perf":{"precision":0.9340277777777768,"recall":0.9340277777777768,"f1":0.9340277777777768,"seconds":1.0017305612564087e-5,"exhaustive_search_seconds":4.7888606786727905e-6,"evaluations":30.3984375,"distances_sum":291.64275651425123}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.459261166173253,"state":{"bsize":2},"perf":{"precision":0.9461805555555546,"recall":0.9461805555555546,"f1":0.9461805555555546,"seconds":1.6707926988601685e-5,"exhaustive_search_seconds":1.846812665462494e-5,"evaluations":60.6953125,"distances_sum":119.4393396480009}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.459261166173253,"state":{"bsize":2},"perf":{"precision":0.9461805555555546,"recall":0.9461805555555546,"f1":0.9461805555555546,"seconds":1.6707926988601685e-5,"exhaustive_search_seconds":1.846812665462494e-5,"evaluations":60.6953125,"distances_sum":119.4393396480009}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.93112777305403, conf: {"bsize":5}, perf: {"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":4.0762126445770264e-5,"exhaustive_search_seconds":0.00021746009588241577,"evaluations":101.0703125,"distances_sum":55.170567576773465}, best_list's length: 2, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 94.6743028617434, conf: {"bsize":8}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.894286394119263e-5,"exhaustive_search_seconds":0.00021746009588241577,"evaluations":106.7421875,"distances_sum":55.15499019343406}, best_list's length: 7, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.93112777305403,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":4.0762126445770264e-5,"exhaustive_search_seconds":0.00021746009588241577,"evaluations":101.0703125,"distances_sum":55.170567576773465}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.93112777305403,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":4.0762126445770264e-5,"exhaustive_search_seconds":0.00021746009588241577,"evaluations":101.0703125,"distances_sum":55.170567576773465}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.93112777305403,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":4.0762126445770264e-5,"exhaustive_search_seconds":0.00021746009588241577,"evaluations":101.0703125,"distances_sum":55.170567576773465}}, n: 9999
added n=10000, neighborhood=3, BeamSearch(5), SatNeighborhood(32), 2020-10-13T20:38:54.982
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(455, 0.038683403f0), Item(7794, 0.041745808f0), Item(581, 0.04656004f0), Item(8531, 0.05287199f0), Item(4658, 0.055046145f0), Item(4816, 0.0572944f0), Item(2542, 0.058352612f0), Item(1513, 0.06549408f0), Item(3246, 0.066670716f0), Item(1973, 0.06782005f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
