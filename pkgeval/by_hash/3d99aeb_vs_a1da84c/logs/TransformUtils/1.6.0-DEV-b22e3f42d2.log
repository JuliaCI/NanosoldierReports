Julia Version 1.6.0-DEV.1216
Commit b22e3f42d2 (2020-10-13 18:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed TransformUtils â”€ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39mTransformUtils
1 dependency successfully precompiled

    Testing TransformUtils
Status `/tmp/jl_PFBDyX/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_PFBDyX/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
â”Œ Warning: Need better coverage on convert function tests
â”” @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.06058151703182768 -0.2762710831115671; 0.06058151703182768 0.0 -0.22585589664176872; 0.2762710831115671 0.22585589664176872 0.0])
dAA = so3([0.0 -0.13603534827112929 -0.12971138927290699; 0.13603534827112929 0.0 0.09207170766180403; 0.12971138927290699 -0.09207170766180403 0.0])
dAA = so3([0.0 0.04545953821899532 -0.07506825499624498; -0.04545953821899532 0.0 0.08907232510540489; 0.07506825499624498 -0.08907232510540489 0.0])
dAA = Quaternion(0.9913709470413026, [0.05832658313567307, -0.09810461183218375, 0.06447588851194667])
dAA = SO3([0.9953391665220838 0.04345551495159576 -0.08609042808242971; -0.05843616843169379 0.9819357016396116 -0.17996525238097197; 0.07671478218796608 0.1841572590635945 0.9798984366392457])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8920879483953553 -0.28830284871213196 -0.3479375802528887; 0.361257417967329 0.9175851535081577 0.1659233679292617; 0.2714261783456865 -0.27371326874282165 0.9227181997894999]), [2.258558966417687, -2.762710831115671, 0.6058151703182768])
xj = SE3(SO3([0.8322665326800367 -0.3422467030123085 -0.43611880589806484; 0.21287193530904677 0.9236698360036071 -0.3186213633999618; 0.511876897054878 0.1723404431184805 0.8415942097752309]), [-0.8907232510540488, -0.7506825499624497, -0.4545953821899532])
Dx = SE3(SO3([0.9582932993151584 0.07514612872369583 -0.27572996178418807; -0.1847241835081164 0.8990445616784627 -0.3969834406415975; 0.21806175390225552 0.4313605631652281 0.875429686514485]), [-2.3703997543204274, 3.044402752456704, 0.4511360270102506])
Test Summary:         | Pass  Total
SE3 âŠ• and âŠ– mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
