Julia Version 1.6.0-DEV.1216
Commit b22e3f42d2 (2020-10-13 18:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+3
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
5 dependencies successfully precompiled

    Testing FunctionIntegrator
Status `/tmp/jl_3ISjVY/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_3ISjVY/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.213406 seconds (289.08 k allocations: 13.531 MiB, 93.41% compilation time)
Running: chebyshev_quadrature with k=1
  1.287121 seconds (2.20 M allocations: 126.817 MiB, 4.09% gc time, 98.56% compilation time)
Running: chebyshev_quadrature with k=2
  0.215089 seconds (409.38 k allocations: 23.562 MiB, 86.77% compilation time)
Running: chebyshev_quadrature with k=3
  0.249667 seconds (473.75 k allocations: 26.613 MiB, 5.28% gc time, 88.01% compilation time)
Running: chebyshev_quadrature with k=4
  0.263917 seconds (418.56 k allocations: 23.256 MiB, 82.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 35.390667 seconds (34.88 M allocations: 2.928 GiB, 19.73% gc time, 79.84% compilation time)
Running: laguerre_quadrature with k=1
  2.857863 seconds (3.17 M allocations: 177.123 MiB, 4.34% gc time, 99.92% compilation time)
Running: legendre_quadrature
  0.162993 seconds (206.12 k allocations: 11.835 MiB, 14.81% gc time, 98.74% compilation time)
Running: lobatto_quadrature
  0.292808 seconds (329.56 k allocations: 19.897 MiB, 99.35% compilation time)
Running: radau_quadrature
  0.730771 seconds (447.56 k allocations: 27.310 MiB, 99.77% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 42.293368 seconds (100.02 M allocations: 1.491 GiB, 0.66% gc time, 0.04% compilation time)
Running: rectangle_rule_midpoint.
  0.088369 seconds (172.46 k allocations: 3.827 MiB, 27.10% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 42.415458 seconds (100.02 M allocations: 1.491 GiB, 0.45% gc time, 0.05% compilation time)
Running: rombergs_method
  0.590189 seconds (723.05 k allocations: 41.751 MiB, 4.07% gc time, 99.64% compilation time)
Running: simpsons_rule
  0.025826 seconds (46.55 k allocations: 2.532 MiB, 94.12% compilation time)
Running: simpsons38_rule
  0.067072 seconds (108.56 k allocations: 5.758 MiB, 97.08% compilation time)
Running: trapezoidal_rule
  0.231081 seconds (1.72 M allocations: 28.607 MiB, 18.95% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.081538 seconds (29.80 k allocations: 1.767 MiB, 99.79% compilation time)
Running: chebyshev_quadrature with k=1
  0.308258 seconds (290.21 k allocations: 15.344 MiB, 99.57% compilation time)
Running: chebyshev_quadrature with k=2
  0.193689 seconds (93.80 k allocations: 2.675 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=3
  0.145019 seconds (82.06 k allocations: 2.476 MiB, 98.30% compilation time)
Running: chebyshev_quadrature with k=4
  0.137602 seconds (64.67 k allocations: 2.122 MiB, 98.93% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.905703 seconds (504.09 k allocations: 161.851 MiB, 4.49% gc time, 18.62% compilation time)
Running: legendre_quadrature
  0.094993 seconds (41.17 k allocations: 2.371 MiB, 99.79% compilation time)
Running: lobatto_quadrature
  0.011688 seconds (15.56 k allocations: 990.919 KiB, 98.97% compilation time)
Running: radau_quadrature
  0.014828 seconds (15.67 k allocations: 998.134 KiB, 99.18% compilation time)
Running: rectangle_rule_left
  9.271161 seconds (471.41 M allocations: 7.025 GiB, 7.19% gc time)
Running: rectangle_rule_midpoint
  0.000033 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
  9.827606 seconds (476.96 M allocations: 7.107 GiB, 7.90% gc time)
Running: rombergs_method
  0.177722 seconds (326.48 k allocations: 18.526 MiB, 99.85% compilation time)
Running: simpsons_rule
  0.000014 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.028326 seconds (18.91 k allocations: 1.146 MiB, 99.86% compilation time)
Running: trapezoidal_rule
  0.020741 seconds (16.49 k allocations: 1.000 MiB, 99.84% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.011840 seconds (1.03 k allocations: 34.125 KiB, 99.35% compilation time)
Running: chebyshev_quadrature with k=1
  0.068039 seconds (2.46 k allocations: 116.359 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.064274 seconds (2.71 k allocations: 124.266 KiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=3
  0.064860 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.065350 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.259735 seconds (364.10 k allocations: 18.986 MiB, 44.10% gc time, 99.51% compilation time)
Running: legendre_quadrature
  0.045534 seconds (1.28 k allocations: 65.891 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000077 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000037 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000171 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000116 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000180 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.095271 seconds (1.04 k allocations: 56.469 KiB, 99.88% compilation time)
Running: simpsons_rule
  0.000015 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.020738 seconds (923 allocations: 39.281 KiB, 99.60% compilation time)
Running: trapezoidal_rule
  0.010590 seconds (44.29 k allocations: 702.859 KiB, 92.03% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.038783 seconds (80.86 k allocations: 4.822 MiB, 99.43% compilation time)
Running: chebyshev_quadrature with k=1
  0.209263 seconds (230.61 k allocations: 12.969 MiB, 99.20% compilation time)
Running: chebyshev_quadrature with k=2
  0.157331 seconds (283.17 k allocations: 15.880 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=3
  0.156879 seconds (234.76 k allocations: 13.158 MiB, 98.66% compilation time)
Running: chebyshev_quadrature with k=4
  0.263767 seconds (234.76 k allocations: 13.061 MiB, 6.73% gc time, 87.71% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.142011 seconds (447.19 k allocations: 163.211 MiB, 2.59% gc time, 34.72% compilation time)
Running: legendre_quadrature
  0.117275 seconds (185.44 k allocations: 10.707 MiB, 98.53% compilation time)
Running: lobatto_quadrature
  0.115280 seconds (196.77 k allocations: 11.434 MiB, 98.76% compilation time)
Running: radau_quadrature
  0.191914 seconds (196.76 k allocations: 11.419 MiB, 7.87% gc time, 99.06% compilation time)
Running: rectangle_rule_left
  0.618187 seconds (18.82 k allocations: 1.147 MiB, 3.77% compilation time)
Running: rectangle_rule_midpoint
  0.018514 seconds (24.67 k allocations: 1.555 MiB, 98.96% compilation time)
Running: rectangle_rule_right
  0.537163 seconds (17.39 k allocations: 1.062 MiB, 3.95% compilation time)
Running: rombergs_method
  0.093382 seconds (134.24 k allocations: 7.778 MiB, 97.38% compilation time)
Running: simpsons_rule
  0.033677 seconds (36.49 k allocations: 2.341 MiB, 99.51% compilation time)
Running: simpsons38_rule
  0.022422 seconds (42.37 k allocations: 2.678 MiB, 99.23% compilation time)
Running: trapezoidal_rule
  0.022576 seconds (42.32 k allocations: 1.671 MiB, 97.61% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.023697 seconds (66.94 k allocations: 2.959 MiB, 96.45% compilation time)
Running: chebyshev_quadrature with k=1
  0.148552 seconds (237.20 k allocations: 13.032 MiB, 98.07% compilation time)
Running: chebyshev_quadrature with k=2
  0.151923 seconds (290.20 k allocations: 15.872 MiB, 98.23% compilation time)
Running: chebyshev_quadrature with k=3
  0.201445 seconds (241.34 k allocations: 13.123 MiB, 33.93% gc time, 99.16% compilation time)
Running: chebyshev_quadrature with k=4
  0.156323 seconds (241.34 k allocations: 13.123 MiB, 98.78% compilation time)
Running: hermite_quadrature with k=2
 12.730071 seconds (20.10 M allocations: 1.056 GiB, 9.39% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.624316 seconds (456.36 k allocations: 49.417 MiB, 4.70% gc time, 95.29% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.138232 seconds (276.26 k allocations: 15.249 MiB, 97.93% compilation time)
Running: legendre_quadrature
  0.156784 seconds (191.98 k allocations: 11.035 MiB, 17.44% gc time, 98.68% compilation time)
Running: lobatto_quadrature
  0.158249 seconds (217.43 k allocations: 37.197 MiB, 85.85% compilation time)
Running: radau_quadrature
  0.197903 seconds (214.01 k allocations: 29.943 MiB, 9.15% gc time, 78.91% compilation time)
Running: rectangle_rule_left
  0.032788 seconds (21.73 k allocations: 1.293 MiB, 99.59% compilation time)
Running: rectangle_rule_midpoint
  0.023493 seconds (26.47 k allocations: 1.642 MiB, 99.44% compilation time)
Running: rectangle_rule_right
  0.020456 seconds (18.50 k allocations: 1.117 MiB, 99.37% compilation time)
Running: rombergs_method
  0.108306 seconds (136.71 k allocations: 7.802 MiB, 97.85% compilation time)
Running: simpsons_rule
  0.038634 seconds (43.97 k allocations: 2.609 MiB, 99.41% compilation time)
Running: simpsons38_rule
  0.035286 seconds (57.34 k allocations: 3.063 MiB, 98.56% compilation time)
Running: trapezoidal_rule
  0.022024 seconds (28.35 k allocations: 1.595 MiB, 98.66% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.025842 seconds (50.91 k allocations: 2.619 MiB, 97.84% compilation time)
Running: chebyshev_quadrature with k=1
  0.489850 seconds (232.72 k allocations: 12.830 MiB, 6.56% gc time, 99.59% compilation time)
Running: chebyshev_quadrature with k=2
  0.130010 seconds (285.38 k allocations: 15.643 MiB, 98.13% compilation time)
Running: chebyshev_quadrature with k=3
  0.134829 seconds (236.87 k allocations: 12.928 MiB, 98.69% compilation time)
Running: chebyshev_quadrature with k=4
  0.122626 seconds (236.87 k allocations: 12.991 MiB, 16.86% gc time, 98.78% compilation time)
Running: hermite_quadrature with k=2
  0.115668 seconds (170.79 k allocations: 9.794 MiB, 98.84% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.913844 seconds (449.62 k allocations: 1.175 GiB, 16.68% gc time, 6.84% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.271254 seconds (271.55 k allocations: 15.060 MiB, 98.79% compilation time)
Running: legendre_quadrature
  0.318279 seconds (187.55 k allocations: 10.818 MiB, 92.86% compilation time)
Running: lobatto_quadrature
  0.431085 seconds (208.18 k allocations: 22.923 MiB, 10.66% gc time, 96.75% compilation time)
Running: radau_quadrature
  0.295078 seconds (207.34 k allocations: 20.854 MiB, 94.77% compilation time)
Running: rectangle_rule_left
  0.057154 seconds (19.52 k allocations: 1.188 MiB, 99.72% compilation time)
Running: rectangle_rule_midpoint
  0.023346 seconds (25.36 k allocations: 1.591 MiB, 99.38% compilation time)
Running: rectangle_rule_right
  0.026927 seconds (17.36 k allocations: 1.062 MiB, 99.45% compilation time)
Running: rombergs_method
  0.261026 seconds (132.56 k allocations: 7.684 MiB, 99.21% compilation time)
Running: simpsons_rule
  0.018360 seconds (39.30 k allocations: 2.442 MiB, 98.98% compilation time)
Running: simpsons38_rule
  0.039477 seconds (48.16 k allocations: 2.821 MiB, 99.25% compilation time)
Running: trapezoidal_rule
  0.018871 seconds (23.26 k allocations: 1.433 MiB, 98.93% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.350741 seconds (39.05 k allocations: 2.475 MiB, 97.78% compilation time)
Running: chebyshev_quadrature with k=1
  0.202396 seconds (231.10 k allocations: 13.043 MiB, 98.51% compilation time)
Running: chebyshev_quadrature with k=2
  0.302075 seconds (283.67 k allocations: 15.996 MiB, 8.37% gc time, 87.14% compilation time)
Running: chebyshev_quadrature with k=3
  0.149623 seconds (235.25 k allocations: 13.204 MiB, 98.32% compilation time)
Running: chebyshev_quadrature with k=4
  0.161108 seconds (235.25 k allocations: 12.975 MiB, 98.34% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.407940 seconds (447.72 k allocations: 194.259 MiB, 6.65% gc time, 24.61% compilation time)
Running: legendre_quadrature
  0.143506 seconds (185.93 k allocations: 10.732 MiB, 98.47% compilation time)
Running: lobatto_quadrature
  0.154042 seconds (197.26 k allocations: 11.447 MiB, 98.51% compilation time)
Running: radau_quadrature
  0.142341 seconds (197.26 k allocations: 11.446 MiB, 11.31% gc time, 98.39% compilation time)
Running: rectangle_rule_left
  0.350631 seconds (19.34 k allocations: 1.173 MiB, 6.74% compilation time)
Running: rectangle_rule_midpoint
  0.014869 seconds (25.01 k allocations: 1.573 MiB, 99.06% compilation time)
Running: rectangle_rule_right
  0.164393 seconds (17.73 k allocations: 1.081 MiB, 12.46% compilation time)
Running: rombergs_method
  0.159352 seconds (145.00 k allocations: 8.489 MiB, 97.87% compilation time)
Running: simpsons_rule
  0.054722 seconds (37.11 k allocations: 2.369 MiB, 99.60% compilation time)
Running: simpsons38_rule
  0.037328 seconds (43.08 k allocations: 2.708 MiB, 99.38% compilation time)
Running: trapezoidal_rule
  0.020663 seconds (43.25 k allocations: 1.703 MiB, 97.05% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.051391 seconds (38.85 k allocations: 2.409 MiB, 99.42% compilation time)
Running: chebyshev_quadrature with k=1
  0.166227 seconds (231.69 k allocations: 12.988 MiB, 98.04% compilation time)
Running: chebyshev_quadrature with k=2
  0.168857 seconds (284.30 k allocations: 15.895 MiB, 97.69% compilation time)
Running: chebyshev_quadrature with k=3
  0.139291 seconds (235.84 k allocations: 13.067 MiB, 98.37% compilation time)
Running: chebyshev_quadrature with k=4
  0.151318 seconds (235.84 k allocations: 13.142 MiB, 19.35% gc time, 98.31% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.641489 seconds (448.44 k allocations: 149.002 MiB, 5.20% gc time, 48.18% compilation time)
Running: legendre_quadrature
  0.132292 seconds (186.53 k allocations: 10.750 MiB, 98.03% compilation time)
Running: lobatto_quadrature
  0.226796 seconds (197.86 k allocations: 11.484 MiB, 98.90% compilation time)
Running: radau_quadrature
  0.192330 seconds (197.85 k allocations: 11.462 MiB, 83.84% compilation time)
Running: rectangle_rule_left
  0.624676 seconds (19.59 k allocations: 1.186 MiB, 3.45% compilation time)
Running: rectangle_rule_midpoint
  0.020487 seconds (25.01 k allocations: 1.574 MiB, 99.06% compilation time)
Running: rectangle_rule_right
  0.662401 seconds (17.69 k allocations: 1.078 MiB, 3.89% compilation time)
Running: rombergs_method
  0.174958 seconds (135.46 k allocations: 7.815 MiB, 17.68% gc time, 97.76% compilation time)
Running: simpsons_rule
  0.014465 seconds (37.60 k allocations: 2.389 MiB, 99.01% compilation time)
Running: simpsons38_rule
  0.052942 seconds (43.78 k allocations: 2.735 MiB, 99.66% compilation time)
Running: trapezoidal_rule
  0.031353 seconds (55.40 k allocations: 1.899 MiB, 96.97% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.128362 seconds (147.45 k allocations: 8.794 MiB, 99.76% compilation time)
Running: chebyshev_quadrature with k=1
  0.178862 seconds (69.93 k allocations: 2.205 MiB, 98.65% compilation time)
Running: chebyshev_quadrature with k=2
  0.141556 seconds (105.09 k allocations: 2.868 MiB, 97.39% compilation time)
Running: chebyshev_quadrature with k=3
  0.157454 seconds (92.57 k allocations: 2.654 MiB, 97.96% compilation time)
Running: chebyshev_quadrature with k=4
  0.129073 seconds (72.10 k allocations: 2.248 MiB, 98.11% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.091832 seconds (480.52 k allocations: 167.789 MiB, 8.33% gc time, 21.68% compilation time)
Running: legendre_quadrature
  0.109723 seconds (18.73 k allocations: 1.094 MiB, 99.79% compilation time)
Running: lobatto_quadrature
  0.000099 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000050 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 21.863806 seconds (590.00 M allocations: 8.792 GiB, 8.29% gc time)
Running: rectangle_rule_midpoint
  0.000031 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 21.743384 seconds (592.75 M allocations: 8.833 GiB, 7.71% gc time)
Running: rombergs_method
  0.134515 seconds (20.50 k allocations: 1.165 MiB, 98.55% compilation time)
Running: simpsons_rule
  0.000083 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.027027 seconds (463 allocations: 22.578 KiB, 99.49% compilation time)
Running: trapezoidal_rule
  0.016495 seconds (171 allocations: 7.859 KiB, 99.09% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.622267 seconds (209.93 M allocations: 3.138 GiB, 1.94% gc time, 0.69% compilation time)
Running: chebyshev_quadrature with k=1
  0.626340 seconds (413.96 k allocations: 22.954 MiB, 4.87% gc time, 99.34% compilation time)
Running: chebyshev_quadrature with k=2
 17.729833 seconds (468.60 k allocations: 4.040 GiB, 3.09% gc time, 3.25% compilation time)
Running: chebyshev_quadrature with k=3
  8.033354 seconds (249.08 k allocations: 1.642 GiB, 4.06% gc time, 3.46% compilation time)
Running: chebyshev_quadrature with k=4
 10.691593 seconds (249.08 k allocations: 2.260 GiB, 2.02% gc time, 1.54% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 36.275932 seconds (484.45 k allocations: 13.254 GiB, 19.55% gc time, 1.55% compilation time)
Running: legendre_quadrature.
  9.250281 seconds (223.22 k allocations: 1.976 GiB, 5.60% gc time, 3.15% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.699328 seconds (8.23 M allocations: 13.383 GiB, 15.75% gc time, 1.85% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.051760 seconds (7.23 M allocations: 13.369 GiB, 14.99% gc time, 0.79% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.793949 seconds (22.24 k allocations: 1.347 MiB, 0.29% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.962410 seconds (30.43 k allocations: 1.884 MiB, 0.44% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.377777 seconds (22.44 k allocations: 1.357 MiB, 1.10% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.369347 seconds (438.04 k allocations: 152.678 MiB, 1.76% gc time, 21.76% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.650618 seconds (200.04 M allocations: 2.983 GiB, 2.33% gc time, 0.14% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.508852 seconds (600.05 M allocations: 8.943 GiB, 6.05% gc time, 0.24% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.253011 seconds (600.03 M allocations: 8.943 GiB, 4.00% gc time, 0.12% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.138569 seconds (109.56 k allocations: 4.131 MiB, 97.55% compilation time)
Running: chebyshev_quadrature with k=1
  0.659306 seconds (247.70 k allocations: 13.448 MiB, 99.39% compilation time)
Running: chebyshev_quadrature with k=2
  0.376359 seconds (272.34 k allocations: 14.521 MiB, 99.27% compilation time)
Running: chebyshev_quadrature with k=3
  0.523343 seconds (220.25 k allocations: 11.633 MiB, 99.74% compilation time)
Running: chebyshev_quadrature with k=4
  0.496525 seconds (220.25 k allocations: 11.661 MiB, 25.14% gc time, 99.72% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.297545 seconds (389.30 k allocations: 35.025 MiB, 90.47% compilation time)
Running: laguerre_quadrature with k=2
  0.377098 seconds (180.54 k allocations: 10.493 MiB, 90.44% compilation time)
Running: legendre_quadrature
  0.401532 seconds (145.98 k allocations: 8.073 MiB, 99.96% compilation time)
Running: lobatto_quadrature
  0.017062 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.016601 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.064582 seconds (18.88 k allocations: 1.121 MiB, 78.89% compilation time)
Running: rectangle_rule_midpoint
  0.273948 seconds (25.48 k allocations: 1.575 MiB, 97.73% compilation time)
Running: rectangle_rule_right
  0.189947 seconds (17.48 k allocations: 1.049 MiB, 95.09% compilation time)
Running: rombergs_method
  0.484959 seconds (172.13 k allocations: 9.828 MiB, 99.51% compilation time)
Running: simpsons_rule
  0.000474 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.038035 seconds (78.86 k allocations: 3.385 MiB, 97.54% compilation time)
Running: trapezoidal_rule
  0.079112 seconds (2.39 M allocations: 37.684 MiB, 37.10% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000476 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.111299 seconds (2.46 k allocations: 1.691 MiB, 98.72% compilation time)
Running: chebyshev_quadrature with k=2
  0.091877 seconds (2.71 k allocations: 2.355 MiB, 97.23% compilation time)
Running: chebyshev_quadrature with k=3
  0.094569 seconds (2.31 k allocations: 2.028 MiB, 97.62% compilation time)
Running: chebyshev_quadrature with k=4
  0.098604 seconds (2.31 k allocations: 1.469 MiB, 97.61% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.547168 seconds (366.38 k allocations: 904.821 MiB, 5.42% gc time, 13.73% compilation time)
Running: legendre_quadrature
  0.093285 seconds (1.27 k allocations: 68.203 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000147 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000183 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.173284 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000369 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.228461 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.062902 seconds (993 allocations: 56.609 KiB, 99.64% compilation time)
Running: simpsons_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001016 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000133 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.096465 seconds (2.53 k allocations: 579.203 KiB, 99.45% compilation time)
Running: chebyshev_quadrature with k=2
  0.074753 seconds (2.79 k allocations: 780.188 KiB, 98.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.212263 seconds (2.39 k allocations: 661.047 KiB, 99.65% compilation time)
Running: chebyshev_quadrature with k=4
  0.088923 seconds (2.39 k allocations: 491.547 KiB, 99.43% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.281319 seconds (372.94 k allocations: 252.932 MiB, 12.52% compilation time)
Running: legendre_quadrature
  0.054109 seconds (1.32 k allocations: 67.859 KiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.000081 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000038 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  0.996273 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000131 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.970531 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.098800 seconds (1.21 k allocations: 64.875 KiB, 99.80% compilation time)
Running: simpsons_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000458 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
