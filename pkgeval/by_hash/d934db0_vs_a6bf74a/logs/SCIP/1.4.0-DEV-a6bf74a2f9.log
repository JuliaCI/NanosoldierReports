Julia Version 1.4.0-DEV.611
Commit a6bf74a2f9 (2019-12-15 22:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed CEnum ────────────── v0.1.2
 Installed Parsers ──────────── v0.3.10
 Installed OrderedCollections ─ v1.1.0
 Installed BenchmarkTools ───── v0.4.3
 Installed SCIP ─────────────── v0.9.2
 Installed JSON ─────────────── v0.21.0
 Installed MathOptInterface ─── v0.9.5
  Updating `~/.julia/environments/v1.4/Project.toml`
  [82193955] + SCIP v0.9.2
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [fa961155] + CEnum v0.1.2
  [682c06a0] + JSON v0.21.0
  [b8f27783] + MathOptInterface v0.9.5
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [82193955] + SCIP v0.9.2
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
  Building SCIP → `~/.julia/packages/SCIP/deKjz/deps/build.log`
Path `/home/pkgeval/.julia/packages/SCIP/deKjz` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_mhD09c/Project.toml`
  [82193955] + SCIP v0.9.2 [`~/.julia/packages/SCIP/deKjz`]
  Updating `/tmp/jl_mhD09c/Manifest.toml`
  [82193955] ~ SCIP v0.9.2 ⇒ v0.9.2 [`~/.julia/packages/SCIP/deKjz`]
┌ Error: Error building `SCIP`: 
│ ERROR: LoadError: Unable to locate SCIP installation.
│ Tried:
│ 	libscip.so
│ Note that this must be downloaded separately from scip.zib.de.
│ Please set the environment variable SCIPOPTDIR to SCIP's installation path.
│ 
│ Stacktrace:
│  [1] error(::String) at ./error.jl:33
│  [2] top-level scope at /home/pkgeval/.julia/packages/SCIP/deKjz/deps/build.jl:48
│  [3] include(::String) at ./client.jl:439
│  [4] top-level scope at none:5
│ in expression starting at /home/pkgeval/.julia/packages/SCIP/deKjz/deps/build.jl:47
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:892
   Testing SCIP
Path `/home/pkgeval/.julia/packages/SCIP/deKjz` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_lvcqog/Project.toml`
  [82193955] + SCIP v0.9.2 [`~/.julia/packages/SCIP/deKjz`]
  Updating `/tmp/jl_lvcqog/Manifest.toml`
  [82193955] ~ SCIP v0.9.2 ⇒ v0.9.2 [`~/.julia/packages/SCIP/deKjz`]
Running sandbox
Status `/tmp/jl_lvcqog/Project.toml`
  [fa961155] CEnum v0.1.2
  [b8f27783] MathOptInterface v0.9.5
  [82193955] SCIP v0.9.2 [`~/.julia/packages/SCIP/deKjz`]
  [8f399da3] Libdl 
  [8dfed614] Test 
ERROR: LoadError: LoadError: SCIP was not built properly, please run Pkg.build("SCIP")
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] top-level scope at /home/pkgeval/.julia/packages/SCIP/deKjz/src/init.jl:4
 [3] include(::Module, ::String) at ./Base.jl:377
 [4] include(::String) at /home/pkgeval/.julia/packages/SCIP/deKjz/src/SCIP.jl:1
 [5] top-level scope at /home/pkgeval/.julia/packages/SCIP/deKjz/src/SCIP.jl:7
 [6] include(::Module, ::String) at ./Base.jl:377
 [7] top-level scope at none:2
 [8] eval at ./boot.jl:331 [inlined]
 [9] eval(::Expr) at ./client.jl:449
 [10] top-level scope at ./none:3
in expression starting at /home/pkgeval/.julia/packages/SCIP/deKjz/src/init.jl:3
in expression starting at /home/pkgeval/.julia/packages/SCIP/deKjz/src/SCIP.jl:7
ERROR: LoadError: Failed to precompile SCIP [82193955-e24f-5292-bf16-6f2c5261a85f] to /home/pkgeval/.julia/compiled/v1.4/SCIP/a0EUw_rDxSH.ji.
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] compilecache(::Base.PkgId, ::String) at ./loading.jl:1263
 [3] _require(::Base.PkgId) at ./loading.jl:1022
 [4] require(::Base.PkgId) at ./loading.jl:920
 [5] require(::Module, ::Symbol) at ./loading.jl:915
 [6] include(::String) at ./client.jl:439
 [7] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/SCIP/deKjz/test/runtests.jl:2
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/SCIP/deKjz/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/SCIP/deKjz/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package SCIP errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1475
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:300
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [11] top-level scope at none:12
