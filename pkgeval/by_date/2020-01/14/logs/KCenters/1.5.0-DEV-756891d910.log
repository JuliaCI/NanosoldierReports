Julia Version 1.5.0-DEV.62
Commit 756891d910 (2020-01-14 06:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed DataAPI ───────────────────── v1.1.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed KCenters ──────────────────── v0.1.8
 Installed Parsers ───────────────────── v0.3.10
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed CategoricalArrays ─────────── v0.7.6
 Installed DataFrames ────────────────── v0.20.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed LearnBase ─────────────────── v0.2.2
 Installed JSON ──────────────────────── v0.21.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed Compat ────────────────────── v3.2.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed Reexport ──────────────────── v0.2.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataStructures ────────────── v0.17.7
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed TableTraits ───────────────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed MLDataUtils ───────────────── v0.5.0
 Installed Tables ────────────────────── v0.2.11
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.6
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.7
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_m8ktuU/Project.toml`
 [no changes]
  Updating `/tmp/jl_m8ktuU/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_m8ktuU/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 153.66999999999996
[ Info: 78.59999999999997
[ Info: 37.47
[ Info: 27.84999999999999
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.2399983987154
[ Info: 76.3000011447471
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 17.928185104121262
inertia(cdnet.distances) = 23.874955494625762
inertia(crand.distances) = 23.344346640943535
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8544622044622053,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.2265625,"distances_sum":2042.2491924969008}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8544622044622053,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.2265625,"distances_sum":2042.2491924969008}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9074181027306035,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.4453125,"distances_sum":2373.358384534085}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9101190476190485,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.4453125,"distances_sum":2404.6679887002847}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9101190476190485,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.4453125,"distances_sum":2404.6679887002847}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.971394230769231,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2838.509472784018}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9453614094239098,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.75,"distances_sum":2638.665681802037}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9625603563103569,"seconds":6.3087791204452515e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8828125,"distances_sum":2768.386369560985}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.971394230769231,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2838.509472784018}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.971394230769231,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2838.509472784018}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.171875,"f1":null,"seconds":0.0008973069489002228,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":5.2890625,"distances_sum":437.2540532285771}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.7000215062715068,"seconds":3.939494490623474e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":7.4140625,"distances_sum":1322.2706867584732}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.552734375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.552734375,"f1":0.7000215062715068,"seconds":3.939494490623474e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":7.4140625,"distances_sum":1322.2706867584732}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7962839244089254,"seconds":4.451721906661987e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":7.96875,"distances_sum":1666.496171176105}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.8368459665334673,"seconds":4.639849066734314e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.078125,"distances_sum":1870.4942713761168}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.734375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.734375,"f1":0.8368459665334673,"seconds":4.639849066734314e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.078125,"distances_sum":1870.4942713761168}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9480368589743596,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8359375,"distances_sum":2408.8978806648765}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8715180652680662,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.3359375,"distances_sum":2021.2409779797852}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9480368589743596,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8359375,"distances_sum":2408.8978806648765}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9091796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9480368589743596,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8359375,"distances_sum":2408.8978806648765}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8161359473859482,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9921875,"distances_sum":1659.0125186383063}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5810546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5810546875,"f1":0.716019050394051,"seconds":4.0940940380096436e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.25,"distances_sum":1362.2238925664055}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3681640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3681640625,"f1":null,"seconds":3.87243926525116e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.9921875,"distances_sum":825.1517735641088}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.703125,"f1":0.8161359473859482,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9921875,"distances_sum":1659.0125186383063}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.949822573260074,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":2410.457435685659}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8641207750582758,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.390625,"distances_sum":1842.4923208462799}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8793992465867475,"seconds":5.109235644340515e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5,"distances_sum":1974.1997946605593}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8758177586302593,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5,"distances_sum":1930.525152934867}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8633385711510718,"seconds":4.941597580909729e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.3125,"distances_sum":1889.93800748859}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.949822573260074,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":2410.457435685659}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9729910714285718,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2577.088284869489}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9636790293040296,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":2472.174308656027}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9548763736263743,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":2447.1776502697876}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9729910714285718,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2577.088284869489}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9729910714285718,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2577.088284869489}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.22265625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.22265625,"f1":null,"seconds":3.0603259801864624e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.09375,"distances_sum":552.5858619388838}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.7383288145065308e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.6953125,"distances_sum":929.8446468258002}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3955078125,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.7383288145065308e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.6953125,"distances_sum":929.8446468258002}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8061001498501505,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.046875,"distances_sum":1608.3299697200457}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8663695679320688,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.3359375,"distances_sum":1869.8437024842535}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8663695679320688,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.3359375,"distances_sum":1869.8437024842535}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.868873314185815,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.3515625,"distances_sum":1907.6692156826866}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8676349691974701,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.40625,"distances_sum":1945.1812995179455}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628376831501835,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8984375,"distances_sum":2507.201920109355}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628376831501835,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8984375,"distances_sum":2507.201920109355}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628376831501835,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8984375,"distances_sum":2507.201920109355}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8566938270063278,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.3359375,"distances_sum":1827.3550620411008}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":4.155561327934265e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.4765625,"distances_sum":913.8282610519348}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.60546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.60546875,"f1":0.7433127636252643,"seconds":4.2710453271865845e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.453125,"distances_sum":1367.643539967193}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8599707584082594,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.2109375,"distances_sum":1858.3798773611993}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8599707584082594,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.2109375,"distances_sum":1858.3798773611993}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8996768856143864,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5859375,"distances_sum":2036.34738692564}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9514594780219785,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.859375,"distances_sum":2383.4181483687275}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9361149267399275,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7421875,"distances_sum":2271.406308084933}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8966262903762914,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5546875,"distances_sum":2019.5243938655183}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9246425449550457,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.671875,"distances_sum":2206.5334032700653}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8658716283716291,"seconds":5.133450031280518e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.40625,"distances_sum":1857.4412921866365}, best_list's length: 16, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9514594780219785,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.859375,"distances_sum":2383.4181483687275}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9697265625, conf: {"ssize":9,"bsize":13}, perf: {"precision":1.0,"recall":0.9697265625,"f1":0.9836309523809527,"seconds":9.240582585334778e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9765625,"distances_sum":2632.496044398086}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9666494963369969,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9453125,"distances_sum":2505.361982284551}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":11,"bsize":13}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9770833333333337,"seconds":6.154179573059082e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9765625,"distances_sum":2580.8232737156013}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9616674991674998,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8984375,"distances_sum":2485.7248971894455}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9668612637362641,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.84375,"distances_sum":2551.7351289101534}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9529990842490847,"seconds":6.336718797683716e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8046875,"distances_sum":2426.1115953508365}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9697265625,"state":{"ssize":9,"bsize":13},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9836309523809527,"seconds":9.240582585334778e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9765625,"distances_sum":2632.496044398086}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9697265625,"state":{"ssize":9,"bsize":13},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9836309523809527,"seconds":9.240582585334778e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9765625,"distances_sum":2632.496044398086}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.1422823667526245e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.7421875,"distances_sum":516.6128600620524}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.7225009365634373,"seconds":4.369765520095825e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.5546875,"distances_sum":1295.6447589658285}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8638188200688207,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.2265625,"distances_sum":1900.1545390109004}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8638188200688207,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.2265625,"distances_sum":1900.1545390109004}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9310038919413928,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.71875,"distances_sum":2266.608781825765}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9310038919413928,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.71875,"distances_sum":2266.608781825765}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9329727564102569,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6484375,"distances_sum":2289.65977879895}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9547847985347989,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.84375,"distances_sum":2464.3320567246774}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9562385531135537,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8359375,"distances_sum":2477.9651720258344}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9614411630036636,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8203125,"distances_sum":2498.0467860024924}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9402586996337003,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7578125,"distances_sum":2329.2783270535897}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9614411630036636,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8203125,"distances_sum":2498.0467860024924}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9614411630036636,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8203125,"distances_sum":2498.0467860024924}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8647491397491407,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.3515625,"distances_sum":1846.767917542451}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.548828125,"f1":null,"seconds":4.274770617485046e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.4453125,"distances_sum":1235.7676449535388}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3916015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.3916015625,"f1":0.5399988899988898,"seconds":3.470107913017273e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.2890625,"distances_sum":899.030892944374}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8647491397491407,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.3515625,"distances_sum":1846.767917542451}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.934515484515485,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.796875,"distances_sum":2261.388533051486}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.934515484515485,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.796875,"distances_sum":2261.388533051486}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9493189102564108,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8046875,"distances_sum":2384.747057592856}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9493189102564108,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8046875,"distances_sum":2384.747057592856}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9493189102564108,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8046875,"distances_sum":2384.747057592856}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1923828125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1923828125,"f1":null,"seconds":2.609565854072571e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.3203125,"distances_sum":462.9149168739979}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2041015625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2041015625,"f1":null,"seconds":2.808868885040283e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.3828125,"distances_sum":501.24620133254376}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1884765625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1884765625,"f1":null,"seconds":2.810731530189514e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.4375,"distances_sum":461.03741225696467}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2041015625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.2041015625,"f1":null,"seconds":2.808868885040283e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.3828125,"distances_sum":501.24620133254376}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.513671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.513671875,"f1":0.664666583416584,"seconds":3.7085264921188354e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.65625,"distances_sum":1264.9310581389666}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8054984945609953,"seconds":4.524365067481995e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.890625,"distances_sum":1632.7617235681885}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":8,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":3.7066638469696045e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.34375,"distances_sum":533.5908819380311}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.33203125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.33203125,"f1":null,"seconds":3.214925527572632e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.5625,"distances_sum":829.5492549122223}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.720703125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.720703125,"f1":0.827294060106561,"seconds":4.569068551063538e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.046875,"distances_sum":1761.9958978429802}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8637716450216459,"seconds":5.112960934638977e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.40625,"distances_sum":1882.7786629517684}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3310546875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3310546875,"f1":null,"seconds":3.0566006898880005e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.4765625,"distances_sum":788.5870790495303}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8637716450216459,"seconds":5.112960934638977e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.40625,"distances_sum":1882.7786629517684}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9118849900099909,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.5703125,"distances_sum":2130.10557440659}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9522581585081591,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7578125,"distances_sum":2400.869490844755}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9370827089577095,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7265625,"distances_sum":2282.4595944478756}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9462683150183155,"seconds":6.888061761856079e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.75,"distances_sum":2371.9113191738825}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9106372793872805,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6171875,"distances_sum":2120.6211044302977}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9522581585081591,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7578125,"distances_sum":2400.869490844755}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9522581585081591,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7578125,"distances_sum":2400.869490844755}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.630859375, conf: {"ssize":3,"bsize":4}, perf: {"precision":0.9724516369047617,"recall":0.630859375,"f1":0.7498819756632259,"seconds":4.7292560338974e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.4296875,"distances_sum":1335.1393342784338}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.630859375,"state":{"ssize":3,"bsize":4},"perf":{"precision":0.9724516369047617,"recall":0.630859375,"f1":0.7498819756632259,"seconds":4.7292560338974e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.4296875,"distances_sum":1335.1393342784338}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":4,"bsize":5}, perf: {"precision":0.9696428571428569,"recall":0.7099609375,"f1":0.8100685772560776,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.125,"distances_sum":1518.3800175035}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":0.9792503720238093,"recall":0.810546875,"f1":0.8803209160631038,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.6796875,"distances_sum":1759.4482020108176}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9765997023809523,"recall":0.7177734375,"f1":0.8185106560106564,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.2109375,"distances_sum":1531.4422142735627}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.810546875,"state":{"ssize":2,"bsize":6},"perf":{"precision":0.9792503720238093,"recall":0.810546875,"f1":0.8803209160631038,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.6796875,"distances_sum":1759.4482020108176}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":6,"bsize":8}, perf: {"precision":0.9774460565476191,"recall":0.8876953125,"f1":0.9268737122252748,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.7578125,"distances_sum":2028.6143297117826}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9737909226190476,"recall":0.84375,"f1":0.897765645812521,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.6484375,"distances_sum":1892.324199306387}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.9760974702380952,"recall":0.916015625,"f1":0.9429701808608059,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.8828125,"distances_sum":2116.545148877034}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":0.9797247023809523,"recall":0.9296875,"f1":0.9520318223443227,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9140625,"distances_sum":2142.362464014207}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":0.9797247023809523,"recall":0.9296875,"f1":0.9520318223443227,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9140625,"distances_sum":2142.362464014207}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":0.9797247023809523,"recall":0.9296875,"f1":0.9520318223443227,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9140625,"distances_sum":2142.362464014207}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7779056013431019,"seconds":4.82611358165741e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.71875,"distances_sum":1446.7527729699586}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.59375,"f1":0.7295993936618943,"seconds":4.332512617111206e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.15625,"distances_sum":1265.1360582463744}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8668815559440567,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.2890625,"distances_sum":1751.850079063823}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8668815559440567,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.2890625,"distances_sum":1751.850079063823}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9520890567765574,"seconds":6.51925802230835e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8125,"distances_sum":2203.7118295990044}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9268517940392947,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.796875,"distances_sum":2029.02408479195}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9521863553113556,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8125,"distances_sum":2196.6127573237673}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9189909049284058,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.796875,"distances_sum":1969.99687218182}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9031388750138756,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.53125,"distances_sum":1933.6842835389439}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9358802655677662,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.78125,"distances_sum":2076.390163412789}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9521863553113556,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8125,"distances_sum":2196.6127573237673}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.970703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.970703125,"f1":0.9839114010989014,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9609375,"distances_sum":2395.5031960817396}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9729567307692311,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9375,"distances_sum":2312.7729891824697}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9755437271062273,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9453125,"distances_sum":2319.979141171279}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9751888736263739,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9453125,"distances_sum":2326.173336434323}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.970703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9839114010989014,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9609375,"distances_sum":2395.5031960817396}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.970703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9839114010989014,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9609375,"distances_sum":2395.5031960817396}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2080078125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2080078125,"f1":null,"seconds":2.8330832719802856e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":4.8125,"distances_sum":417.7716429021133}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":3.2652169466018677e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.3671875,"distances_sum":684.9856563683591}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.2614916563034058e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.421875,"distances_sum":767.6333442581733}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3955078125,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.2614916563034058e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.421875,"distances_sum":767.6333442581733}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8599161255411267,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.140625,"distances_sum":1603.7207946674328}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8230467449217457,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.03125,"distances_sum":1478.4804152579043}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5625,"f1":null,"seconds":3.87243926525116e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.8203125,"distances_sum":1112.1493517173803}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":7,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8599161255411267,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.140625,"distances_sum":1603.7207946674328}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9339228479853486,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.703125,"distances_sum":1948.8564345742568}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9247882326007335,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6875,"distances_sum":1887.3252907776382}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9537259615384621,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8046875,"distances_sum":2041.3675250277038}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8735379204129214,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.171875,"distances_sum":1658.0416089931387}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.895301573426574,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.4296875,"distances_sum":1705.0695660115016}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9537259615384621,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8046875,"distances_sum":2041.3675250277038}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9537259615384621,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8046875,"distances_sum":2041.3675250277038}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.388671875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.388671875,"f1":null,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":6.1796875,"distances_sum":835.8040338660995}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5927734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5927734375,"f1":null,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.6171875,"distances_sum":1289.9074979771601}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5927734375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5927734375,"f1":null,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.6171875,"distances_sum":1289.9074979771601}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9120707417582425,"seconds":7.342547178268433e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.6875,"distances_sum":2014.452749646547}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9120707417582425,"seconds":7.342547178268433e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.6875,"distances_sum":2014.452749646547}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9360061813186821,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.7421875,"distances_sum":2158.8815327730294}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9614239926739931,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.921875,"distances_sum":2299.082888076456}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9603880494505497,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.875,"distances_sum":2315.2985828141136}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9614239926739931,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.921875,"distances_sum":2299.082888076456}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9614239926739931,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.921875,"distances_sum":2299.082888076456}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8622002997003004,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.421875,"distances_sum":1667.2284482723335}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.783592796092797,"seconds":4.7907233238220215e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.859375,"distances_sum":1404.7617029938283}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8622002997003004,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.421875,"distances_sum":1667.2284482723335}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9146207958707966,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.53125,"distances_sum":1934.79109804808}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.941360722610723,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8125,"distances_sum":2090.6885350693024}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.941360722610723,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8125,"distances_sum":2090.6885350693024}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":12,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9522550366300372,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7109375,"distances_sum":2176.8419298833364}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688072344322349,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.921875,"distances_sum":2238.963906210098}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688072344322349,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.921875,"distances_sum":2238.963906210098}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688072344322349,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.921875,"distances_sum":2238.963906210098}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7163709554334561,"seconds":4.073604941368103e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.3671875,"distances_sum":1021.2217813582255}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8198957292707301,"seconds":6.990507245063782e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.0,"distances_sum":1385.1232944827639}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.22265625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.22265625,"f1":null,"seconds":2.777203917503357e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":5.4375,"distances_sum":426.34614417598374}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7109375,"f1":0.8198957292707301,"seconds":6.990507245063782e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.0,"distances_sum":1385.1232944827639}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9468406593406598,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.78125,"distances_sum":1924.9088779164472}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9442937271062275,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6953125,"distances_sum":1960.2412058249495}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8801573426573435,"seconds":4.811212420463562e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.390625,"distances_sum":1551.600284649687}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9468406593406598,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.78125,"distances_sum":1924.9088779164472}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707417582417586,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8515625,"distances_sum":2092.249524450079}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.950644147519148,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.75,"distances_sum":1996.8102289879591}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598099816849822,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8203125,"distances_sum":2019.269186383599}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591403388278392,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8125,"distances_sum":2006.0864004698556}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9687900641025645,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9296875,"distances_sum":2048.796718778013}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707417582417586,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8515625,"distances_sum":2092.249524450079}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707417582417586,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8515625,"distances_sum":2092.249524450079}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.232421875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.232421875,"f1":null,"seconds":2.993270754814148e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.484375,"distances_sum":480.43866431319566}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.232421875,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.232421875,"f1":null,"seconds":2.993270754814148e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.484375,"distances_sum":480.43866431319566}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.248046875, conf: {"ssize":6,"bsize":1}, perf: {"precision":null,"recall":0.248046875,"f1":null,"seconds":3.0063092708587646e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.4453125,"distances_sum":555.2404921133498}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.609375, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.609375,"f1":0.7426419067044073,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.71875,"distances_sum":1242.6074444374017}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.609375,"state":{"ssize":7,"bsize":3},"perf":{"precision":1.0,"recall":0.609375,"f1":0.7426419067044073,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.71875,"distances_sum":1242.6074444374017}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":10,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8722678363303372,"seconds":4.157423973083496e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.4375,"distances_sum":1744.245228190804}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9229801448551456,"seconds":3.859400749206543e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.796875,"distances_sum":2010.9286102867693}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.85982246919747,"seconds":3.5408884286880493e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.3125,"distances_sum":1723.0183759699723}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8662109375,"state":{"ssize":10,"bsize":7},"perf":{"precision":1.0,"recall":0.8662109375,"f1":0.9229801448551456,"seconds":3.859400749206543e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.796875,"distances_sum":2010.9286102867693}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8662109375,"state":{"ssize":10,"bsize":7},"perf":{"precision":1.0,"recall":0.8662109375,"f1":0.9229801448551456,"seconds":3.859400749206543e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.796875,"distances_sum":2010.9286102867693}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8856398809523817,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.3984375,"distances_sum":1787.8600223836524}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2080078125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2080078125,"f1":null,"seconds":2.7902424335479736e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.328125,"distances_sum":425.3071849928085}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5234375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5234375,"f1":0.6700459262959269,"seconds":3.7439167499542236e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.984375,"distances_sum":1079.4298521469914}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8856398809523817,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.3984375,"distances_sum":1787.8600223836524}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9374916749916756,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8203125,"distances_sum":2038.81580315718}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9374916749916756,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8203125,"distances_sum":2038.81580315718}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9745364010989013,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.921875,"distances_sum":2277.287537037317}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9572089368964373,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7890625,"distances_sum":2201.532455605515}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654075091575094,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9296875,"distances_sum":2230.0692803635766}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9633928571428576,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.859375,"distances_sum":2230.9185719487236}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9745364010989013,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.921875,"distances_sum":2277.287537037317}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9745364010989013,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.921875,"distances_sum":2277.287537037317}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8603115634365643,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.0625,"distances_sum":1473.4105677984096}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8603115634365643,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.0625,"distances_sum":1473.4105677984096}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9553800366300371,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8671875,"distances_sum":1946.5009910891263}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9593978937728941,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8828125,"distances_sum":1974.251343754394}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9593978937728941,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8828125,"distances_sum":1974.251343754394}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.972693452380953,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.953125,"distances_sum":2050.8492322679454}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.968772893772894,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9296875,"distances_sum":2015.8609611419479}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9650526556776562,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8984375,"distances_sum":1994.4954445775352}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.972693452380953,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.953125,"distances_sum":2050.8492322679454}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.972693452380953,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.953125,"distances_sum":2050.8492322679454}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.52734375, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.52734375,"f1":null,"seconds":3.7550926208496094e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.6171875,"distances_sum":1004.667136009347}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7922468156843163,"seconds":4.217028617858887e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.2578125,"distances_sum":1341.6601323945497}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8529245060495069,"seconds":4.464760422706604e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.6796875,"distances_sum":1608.5782191453995}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8529245060495069,"seconds":4.464760422706604e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.6796875,"distances_sum":1608.5782191453995}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.894686043123544,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.5546875,"distances_sum":1925.9540535859717}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8565653096903105,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.7890625,"distances_sum":1632.270399897255}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9206043956043962,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.625,"distances_sum":2071.2226393143887}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9435725732600739,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.75,"distances_sum":2207.25994043737}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9312333499833507,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6640625,"distances_sum":2167.812025958011}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9292905011655015,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.5703125,"distances_sum":2191.866609005735}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9435725732600739,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.75,"distances_sum":2207.25994043737}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9480540293040299,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7890625,"distances_sum":2245.9541361961037}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9738495879120884,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9296875,"distances_sum":2420.1350729481337}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9571116383616387,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.71875,"distances_sum":2367.838995576941}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9657738095238099,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.890625,"distances_sum":2346.631356291208}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9613324175824179,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.875,"distances_sum":2334.9390806013384}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9724702380952385,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9296875,"distances_sum":2399.2948480831096}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9738495879120884,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9296875,"distances_sum":2420.1350729481337}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9738495879120884,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9296875,"distances_sum":2420.1350729481337}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2333984375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.8370490074157715e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.0546875,"distances_sum":543.6607815722506}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8626670204795214,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.9765625,"distances_sum":1781.704788045577}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7898141788766797,"seconds":4.328787326812744e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.703125,"distances_sum":1470.2480036200486}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8626670204795214,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.9765625,"distances_sum":1781.704788045577}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9649610805860809,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9453125,"distances_sum":2477.6921099542874}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9082766192141201,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.7265625,"distances_sum":2096.2030319699506}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9293649059274066,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8828125,"distances_sum":2221.128672213211}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9649610805860809,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9453125,"distances_sum":2477.6921099542874}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9771577380952383,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.984375,"distances_sum":2558.471105846639}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9746279761904765,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9375,"distances_sum":2556.6156271305013}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9766369047619052,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.984375,"distances_sum":2541.989260222808}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9771577380952383,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.984375,"distances_sum":2558.471105846639}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9771577380952383,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.984375,"distances_sum":2558.471105846639}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":2.8908252716064453e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":6.296875,"distances_sum":456.828334028446}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.212890625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.212890625,"f1":null,"seconds":2.8908252716064453e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":6.296875,"distances_sum":456.828334028446}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.212890625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.212890625,"f1":null,"seconds":2.8908252716064453e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":6.296875,"distances_sum":456.828334028446}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.8342782217782226,"seconds":4.5318156480789185e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.796875,"distances_sum":1820.0697679843647}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7815849081474089,"seconds":4.06801700592041e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.3359375,"distances_sum":1491.382948735426}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.728515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.728515625,"f1":0.8342782217782226,"seconds":4.5318156480789185e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.796875,"distances_sum":1820.0697679843647}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9367647977022984,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6015625,"distances_sum":2419.041021831885}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9367647977022984,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6015625,"distances_sum":2419.041021831885}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9662946428571432,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8203125,"distances_sum":2599.397225857567}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662946428571432,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8203125,"distances_sum":2599.397225857567}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662946428571432,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8203125,"distances_sum":2599.397225857567}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8740930944055949,"seconds":4.697591066360474e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.109375,"distances_sum":1886.650880310601}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8740930944055949,"seconds":4.697591066360474e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.109375,"distances_sum":1886.650880310601}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8740930944055949,"seconds":4.697591066360474e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.109375,"distances_sum":1886.650880310601}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7880859375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8740930944055949,"seconds":4.697591066360474e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.109375,"distances_sum":1886.650880310601}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.123655915260315e-6,"exhaustive_search_seconds":2.1550804376602173e-6,"evaluations":5.703125,"distances_sum":848.7230496145297}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3955078125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.123655915260315e-6,"exhaustive_search_seconds":2.1550804376602173e-6,"evaluations":5.703125,"distances_sum":848.7230496145297}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8525276806526815,"seconds":4.697591066360474e-6,"exhaustive_search_seconds":2.1550804376602173e-6,"evaluations":7.875,"distances_sum":1881.4864316182213}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8525276806526815,"seconds":4.697591066360474e-6,"exhaustive_search_seconds":2.1550804376602173e-6,"evaluations":7.875,"distances_sum":1881.4864316182213}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9346096611721618,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":2.1550804376602173e-6,"evaluations":8.703125,"distances_sum":2402.569547564049}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.853657627095128,"seconds":4.453584551811218e-6,"exhaustive_search_seconds":2.1550804376602173e-6,"evaluations":7.75,"distances_sum":1905.3539027014617}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9346096611721618,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":2.1550804376602173e-6,"evaluations":8.703125,"distances_sum":2402.569547564049}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.88671875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9346096611721618,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":2.1550804376602173e-6,"evaluations":8.703125,"distances_sum":2402.569547564049}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2626953125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2626953125,"f1":null,"seconds":2.86102294921875e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.1171875,"distances_sum":629.9914320059104}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7890161921411929,"seconds":4.285946488380432e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.65625,"distances_sum":1585.8654264528393}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.671875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.671875,"f1":0.7890161921411929,"seconds":4.285946488380432e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.65625,"distances_sum":1585.8654264528393}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9293669871794881,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6171875,"distances_sum":2382.472160521493}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9293669871794881,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6171875,"distances_sum":2382.472160521493}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.951087454212455,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.84375,"distances_sum":2486.7835135858754}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.951087454212455,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.84375,"distances_sum":2486.7835135858754}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.951087454212455,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.84375,"distances_sum":2486.7835135858754}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2236328125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2236328125,"f1":null,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.96875,"distances_sum":504.8090403127756}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2236328125,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.2236328125,"f1":null,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.96875,"distances_sum":504.8090403127756}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2236328125,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.2236328125,"f1":null,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.96875,"distances_sum":504.8090403127756}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.703125,"f1":null,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.265625,"distances_sum":1538.6272888037108}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8689877830502839,"seconds":4.716217517852783e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.359375,"distances_sum":1777.6963687406637}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8689877830502839,"seconds":4.716217517852783e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.359375,"distances_sum":1777.6963687406637}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8689877830502839,"seconds":4.716217517852783e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.359375,"distances_sum":1777.6963687406637}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.78515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8689877830502839,"seconds":4.716217517852783e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.359375,"distances_sum":1777.6963687406637}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":2.983957529067993e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.46875,"distances_sum":428.64672084443663}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1796875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1796875,"f1":null,"seconds":2.859160304069519e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.2421875,"distances_sum":391.1878046154591}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.201171875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.201171875,"f1":null,"seconds":2.983957529067993e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.46875,"distances_sum":428.64672084443663}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.6943359375,"f1":null,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.2109375,"distances_sum":1543.700049405594}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6943359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":null,"recall":0.6943359375,"f1":null,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.2109375,"distances_sum":1543.700049405594}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9458593489843498,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.78125,"distances_sum":2185.7948780075208}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9458593489843498,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.78125,"distances_sum":2185.7948780075208}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9072265625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9458593489843498,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.78125,"distances_sum":2185.7948780075208}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8818520021645029,"seconds":4.818663001060486e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.515625,"distances_sum":1776.9700805116931}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8732985764235771,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5625,"distances_sum":1752.689458263143}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.802734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.802734375,"f1":0.8818520021645029,"seconds":4.818663001060486e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.515625,"distances_sum":1776.9700805116931}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.915078671328672,"seconds":4.990026354789734e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.65625,"distances_sum":1985.7060955514553}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9542811355311361,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2206.676468694117}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9328442390942396,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.75,"distances_sum":2049.7418033786785}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9144376456876465,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6796875,"distances_sum":1948.934326217819}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9563358516483522,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2223.784634534858}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9563358516483522,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2223.784634534858}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.977438186813187,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.953125,"distances_sum":2347.3372009816253}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9674507783882785,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":2290.608874121662}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9777186355311356,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9765625,"distances_sum":2345.513341596811}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9694768772893777,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9375,"distances_sum":2278.2984437587156}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9777186355311356,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9765625,"distances_sum":2345.513341596811}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9777186355311356,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9765625,"distances_sum":2345.513341596811}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1953125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1953125,"f1":null,"seconds":2.8908252716064453e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.0234375,"distances_sum":427.06221917672536}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1953125,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.1953125,"f1":null,"seconds":2.8908252716064453e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.0234375,"distances_sum":427.06221917672536}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3916015625, conf: {"ssize":8,"bsize":2}, perf: {"precision":null,"recall":0.3916015625,"f1":null,"seconds":3.296881914138794e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.4296875,"distances_sum":803.0401916886484}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3916015625,"state":{"ssize":8,"bsize":2},"perf":{"precision":null,"recall":0.3916015625,"f1":null,"seconds":3.296881914138794e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.4296875,"distances_sum":803.0401916886484}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4345703125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4345703125,"f1":null,"seconds":3.3918768167495728e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.7265625,"distances_sum":915.6092419595195}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53125, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.53125,"f1":0.6707686410811416,"seconds":3.810971975326538e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.921875,"distances_sum":1101.01196947272}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.42578125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.42578125,"f1":null,"seconds":3.3564865589141846e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.7265625,"distances_sum":896.4094736627712}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8647441100566109,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.3125,"distances_sum":1767.480936517051}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8647441100566109,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.3125,"distances_sum":1767.480936517051}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.775390625,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8647441100566109,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.3125,"distances_sum":1767.480936517051}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5537109375,"f1":0.6964937839937845,"seconds":3.851950168609619e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.5078125,"distances_sum":1165.3884563855568}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1748046875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1748046875,"f1":null,"seconds":2.6542693376541138e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":5.2109375,"distances_sum":412.1643880837869}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5537109375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5537109375,"f1":0.6964937839937845,"seconds":3.851950168609619e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.5078125,"distances_sum":1165.3884563855568}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8405120920745929,"seconds":4.626810550689697e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.03125,"distances_sum":1719.4339816751767}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.8405120920745929,"seconds":4.626810550689697e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.03125,"distances_sum":1719.4339816751767}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9337912087912095,"seconds":5.0496309995651245e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.59375,"distances_sum":2190.6217993010737}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9272898976023982,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.5546875,"distances_sum":2138.4571828085614}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9440190018315027,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.6484375,"distances_sum":2239.1944496108677}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9134443681318689,"seconds":4.8745423555374146e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.546875,"distances_sum":2084.1723022749716}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9440190018315027,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.6484375,"distances_sum":2239.1944496108677}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9013671875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9440190018315027,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.6484375,"distances_sum":2239.1944496108677}}, n: 9
inertia(cfft.distances) = 17.945173076923073
inertia(cdnet.distances) = 23.820341748129024
inertia(crand.distances) = 21.57370507825243
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9311111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8822222222222221
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9177777777777778
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9466666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9288888888888889
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8755555555555555
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9155555555555556
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8777777777777778
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9133333333333334
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 1, 2, 2, 3, 3, 3, 3, 1, 2, 1, 3, 3, 2, 1, 3, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 14]]
** centroid: 10, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 2, 2]]
** centroid: 12, normalized-entropy: 1.0, [(2, 2), (3, 2)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 3, 1, 2, 2, 3, 1, 2, 3, 3, 2, 3]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.3006666715709903] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3006666715709903, 0.18134493823611994] ***
*** starting iteration: 2; err: [Inf, 0.3006666715709903, 0.18134493823611994] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3006666715709903, 0.18134493823611994, 0.16871010206085002] ***
*** starting iteration: 3; err: [Inf, 0.3006666715709903, 0.18134493823611994, 0.16871010206085002] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3006666715709903, 0.18134493823611994, 0.16871010206085002, 0.1632014111954479] ***
*** starting iteration: 4; err: [Inf, 0.3006666715709903, 0.18134493823611994, 0.16871010206085002, 0.1632014111954479] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3006666715709903, 0.18134493823611994, 0.16871010206085002, 0.1632014111954479, 0.16079223933467723] ***
*** starting iteration: 5; err: [Inf, 0.3006666715709903, 0.18134493823611994, 0.16871010206085002, 0.1632014111954479, 0.16079223933467723] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3006666715709903, 0.18134493823611994, 0.16871010206085002, 0.1632014111954479, 0.16079223933467723, 0.15996472784681284] ***
*** finished computation of 12 references, err: [Inf, 0.3006666715709903, 0.18134493823611994, 0.16871010206085002, 0.1632014111954479, 0.16079223933467723, 0.15996472784681284] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 9: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 10, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 12, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
finished with 13 centroids; started with 12
acc = 0.94
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 8.080799954986773] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.080799954986773, 2.276055891079768] ***
*** finished computation of 3 references, err: [Inf, 8.080799954986773, 2.276055891079768] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 31]]
** centroid: 1, normalized-entropy: 0.6394571324851642, [(2, 6), (3, 31)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [32, 23, 1]]
** centroid: 2, normalized-entropy: 0.6891775336965191, [(1, 32), (2, 23), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5116999990769449] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5116999990769449, 0.5945907919454225] ***
*** finished computation of 3 references, err: [Inf, 1.5116999990769449, 0.5945907919454225] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 17]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 34), (3, 17)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.040099983376865] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.040099983376865, 1.002727190361456] ***
*** finished computation of 3 references, err: [Inf, 4.040099983376865, 1.002727190361456] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 9]]
** centroid: 1, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [36, 3, 0]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(1, 36), (2, 3)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.519900024229874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.519900024229874, 1.0483149425708063] ***
*** starting iteration: 2; err: [Inf, 1.519900024229874, 1.0483149425708063] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.519900024229874, 1.0483149425708063, 1.029498424034335] ***
*** starting iteration: 3; err: [Inf, 1.519900024229874, 1.0483149425708063, 1.029498424034335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.519900024229874, 1.0483149425708063, 1.029498424034335, 1.0234635179405418] ***
*** finished computation of 3 references, err: [Inf, 1.519900024229874, 1.0483149425708063, 1.029498424034335, 1.0234635179405418] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [10, 4, 0]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(1, 10), (2, 4)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 25, 39]]
** centroid: 3, normalized-entropy: 0.9652016987500656, [(2, 25), (3, 39)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.727100021270798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.727100021270798, 1.2410988891165229] ***
*** starting iteration: 2; err: [Inf, 5.727100021270798, 1.2410988891165229] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.727100021270798, 1.2410988891165229, 0.5226120313309128] ***
*** starting iteration: 3; err: [Inf, 5.727100021270798, 1.2410988891165229, 0.5226120313309128] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.727100021270798, 1.2410988891165229, 0.5226120313309128, 0.48667642267616545] ***
*** finished computation of 3 references, err: [Inf, 5.727100021270798, 1.2410988891165229, 0.5226120313309128, 0.48667642267616545] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.840299977913242] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.840299977913242, 1.0317540197263966] ***
*** starting iteration: 2; err: [Inf, 2.840299977913242, 1.0317540197263966] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.840299977913242, 1.0317540197263966, 0.9954383497295374] ***
*** starting iteration: 3; err: [Inf, 2.840299977913242, 1.0317540197263966, 0.9954383497295374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.840299977913242, 1.0317540197263966, 0.9954383497295374, 0.9881732286613701] ***
*** finished computation of 3 references, err: [Inf, 2.840299977913242, 1.0317540197263966, 0.9954383497295374, 0.9881732286613701] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [20, 2, 0]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(1, 20), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 27]]
** centroid: 3, normalized-entropy: 0.9879565014919159, [(2, 35), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9389028667339134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9389028667339134, 0.354902609929253] ***
*** finished computation of 7 references, err: [Inf, 0.9389028667339134, 0.354902609929253] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 8]]
** centroid: 1, normalized-entropy: 0.775512658133148, [(2, 27), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 31]]
** centroid: 2, normalized-entropy: 0.32984607020714635, [(2, 2), (3, 31)]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3894536421198177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3894536421198177, 0.29873578741507595] ***
*** finished computation of 7 references, err: [Inf, 0.3894536421198177, 0.29873578741507595] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 24, 3]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 24), (3, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 31]]
** centroid: 4, normalized-entropy: 0.8014698931335286, [(2, 10), (3, 31)]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5825339624965928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5825339624965928, 0.2491389614241205] ***
*** finished computation of 7 references, err: [Inf, 0.5825339624965928, 0.2491389614241205] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 6]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
*** center 4: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.1846999992720355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.1846999992720355, 0.9521823787428112] ***
*** finished computation of 7 references, err: [Inf, 2.1846999992720355, 0.9521823787428112] ***
*** center 1: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 23, 39]]
** centroid: 3, normalized-entropy: 0.9514122535330207, [(2, 23), (3, 39)]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.842700003092262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.842700003092262, 0.449728483546068] ***
*** finished computation of 7 references, err: [Inf, 0.842700003092262, 0.449728483546068] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 2]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 28), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 6, 32]]
** centroid: 2, normalized-entropy: 0.6292492238560344, [(2, 6), (3, 32)]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5755000016077229] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5755000016077229, 0.33281334168855325] ***
*** finished computation of 7 references, err: [Inf, 0.5755000016077229, 0.33281334168855325] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 3]]
** centroid: 2, normalized-entropy: 0.43055186701043935, [(2, 31), (3, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 6, 15]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 6), (3, 15)]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2910086760266605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2910086760266605, 0.20022913997928576] ***
*** starting iteration: 2; err: [Inf, 0.2910086760266605, 0.20022913997928576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2910086760266605, 0.20022913997928576, 0.1734577212597086] ***
*** starting iteration: 3; err: [Inf, 0.2910086760266605, 0.20022913997928576, 0.1734577212597086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2910086760266605, 0.20022913997928576, 0.1734577212597086, 0.17222073207061445] ***
*** starting iteration: 4; err: [Inf, 0.2910086760266605, 0.20022913997928576, 0.1734577212597086, 0.17222073207061445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2910086760266605, 0.20022913997928576, 0.1734577212597086, 0.17222073207061445, 0.17222073207061445] ***
*** finished computation of 7 references, err: [Inf, 0.2910086760266605, 0.20022913997928576, 0.1734577212597086, 0.17222073207061445, 0.17222073207061445] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 10]]
** centroid: 4, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43640507608989054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43640507608989054, 0.2813477807695288] ***
*** starting iteration: 2; err: [Inf, 0.43640507608989054, 0.2813477807695288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43640507608989054, 0.2813477807695288, 0.26208577196363886] ***
*** starting iteration: 3; err: [Inf, 0.43640507608989054, 0.2813477807695288, 0.26208577196363886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43640507608989054, 0.2813477807695288, 0.26208577196363886, 0.222085581031609] ***
*** starting iteration: 4; err: [Inf, 0.43640507608989054, 0.2813477807695288, 0.26208577196363886, 0.222085581031609] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43640507608989054, 0.2813477807695288, 0.26208577196363886, 0.222085581031609, 0.20306138454445707] ***
*** starting iteration: 5; err: [Inf, 0.43640507608989054, 0.2813477807695288, 0.26208577196363886, 0.222085581031609, 0.20306138454445707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43640507608989054, 0.2813477807695288, 0.26208577196363886, 0.222085581031609, 0.20306138454445707, 0.19518423344112526] ***
*** starting iteration: 6; err: [Inf, 0.43640507608989054, 0.2813477807695288, 0.26208577196363886, 0.222085581031609, 0.20306138454445707, 0.19518423344112526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43640507608989054, 0.2813477807695288, 0.26208577196363886, 0.222085581031609, 0.20306138454445707, 0.19518423344112526, 0.19096902747366823] ***
*** starting iteration: 7; err: [Inf, 0.43640507608989054, 0.2813477807695288, 0.26208577196363886, 0.222085581031609, 0.20306138454445707, 0.19518423344112526, 0.19096902747366823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43640507608989054, 0.2813477807695288, 0.26208577196363886, 0.222085581031609, 0.20306138454445707, 0.19518423344112526, 0.19096902747366823, 0.19084831552176837] ***
*** finished computation of 7 references, err: [Inf, 0.43640507608989054, 0.2813477807695288, 0.26208577196363886, 0.222085581031609, 0.20306138454445707, 0.19518423344112526, 0.19096902747366823, 0.19084831552176837] ***
*** center 1: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 22, 13]]
** centroid: 5, normalized-entropy: 0.9517626756348312, [(2, 22), (3, 13)]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3530771752347796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3530771752347796, 0.23532928047599339] ***
*** starting iteration: 2; err: [Inf, 0.3530771752347796, 0.23532928047599339] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463] ***
*** starting iteration: 3; err: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463, 0.22082722455931858] ***
*** starting iteration: 4; err: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463, 0.22082722455931858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463, 0.22082722455931858, 0.21501560371434558] ***
*** starting iteration: 5; err: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463, 0.22082722455931858, 0.21501560371434558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463, 0.22082722455931858, 0.21501560371434558, 0.20615317550226306] ***
*** starting iteration: 6; err: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463, 0.22082722455931858, 0.21501560371434558, 0.20615317550226306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463, 0.22082722455931858, 0.21501560371434558, 0.20615317550226306, 0.19494155938831592] ***
*** starting iteration: 7; err: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463, 0.22082722455931858, 0.21501560371434558, 0.20615317550226306, 0.19494155938831592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463, 0.22082722455931858, 0.21501560371434558, 0.20615317550226306, 0.19494155938831592, 0.19202213652122022] ***
*** starting iteration: 8; err: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463, 0.22082722455931858, 0.21501560371434558, 0.20615317550226306, 0.19494155938831592, 0.19202213652122022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463, 0.22082722455931858, 0.21501560371434558, 0.20615317550226306, 0.19494155938831592, 0.19202213652122022, 0.19006771975592887] ***
*** starting iteration: 9; err: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463, 0.22082722455931858, 0.21501560371434558, 0.20615317550226306, 0.19494155938831592, 0.19202213652122022, 0.19006771975592887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463, 0.22082722455931858, 0.21501560371434558, 0.20615317550226306, 0.19494155938831592, 0.19202213652122022, 0.19006771975592887, 0.18937103510222847] ***
*** finished computation of 7 references, err: [Inf, 0.3530771752347796, 0.23532928047599339, 0.22887772130081463, 0.22082722455931858, 0.21501560371434558, 0.20615317550226306, 0.19494155938831592, 0.19202213652122022, 0.19006771975592887, 0.18937103510222847] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 7, 6]]
** centroid: 3, normalized-entropy: 0.9957274520849256, [(2, 7), (3, 6)]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.5868000072429334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5868000072429334, 0.5949733606815396] ***
*** finished computation of 7 references, err: [Inf, 1.5868000072429334, 0.5949733606815396] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 25, 21]]
** centroid: 1, normalized-entropy: 0.9945386816500111, [(2, 25), (3, 21)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 3: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [2, 4, 0]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(1, 2), (2, 4)]
*** center 5: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6926999922681893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6926999922681893, 0.3660311810615252] ***
*** finished computation of 7 references, err: [Inf, 0.6926999922681893, 0.3660311810615252] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 15, 11]]
** centroid: 2, normalized-entropy: 0.9828586897127057, [(2, 15), (3, 11)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 19, 4]]
** centroid: 3, normalized-entropy: 0.6665783579949205, [(2, 19), (3, 4)]
*** center 4: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7211000110295305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7211000110295305, 0.3039887273171619] ***
*** finished computation of 7 references, err: [Inf, 0.7211000110295305, 0.3039887273171619] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 2]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 8, 9]]
** centroid: 4, normalized-entropy: 0.9975025463691153, [(2, 8), (3, 9)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6584333912484016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6584333912484016, 0.2731867680277724] ***
*** finished computation of 7 references, err: [Inf, 0.6584333912484016, 0.2731867680277724] ***
*** center 1: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 27, 10]]
** centroid: 4, normalized-entropy: 0.8418521897563208, [(2, 27), (3, 10)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 1, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 7.677268983721069] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 7.677268983721069, 0.5173856596096035] ***
*** finished computation of 7 references, err: [Inf, 7.677268983721069, 0.5173856596096035] ***
*** center 1: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 34]]
** centroid: 2, normalized-entropy: 0.9984628557283827, [(2, 31), (3, 34)]
*** center 3: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38129038820483385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38129038820483385, 0.22424369968114885] ***
*** finished computation of 7 references, err: [Inf, 0.38129038820483385, 0.22424369968114885] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 13, 9]]
** centroid: 2, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 24, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7203815100332507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7203815100332507, 0.334802434609806] ***
*** starting iteration: 2; err: [Inf, 0.7203815100332507, 0.334802434609806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7203815100332507, 0.334802434609806, 0.22162799571438452] ***
*** starting iteration: 3; err: [Inf, 0.7203815100332507, 0.334802434609806, 0.22162799571438452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7203815100332507, 0.334802434609806, 0.22162799571438452, 0.18619109550956073] ***
*** finished computation of 7 references, err: [Inf, 0.7203815100332507, 0.334802434609806, 0.22162799571438452, 0.18619109550956073] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 8]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 22]]
** centroid: 4, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7775344657209909] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7775344657209909, 0.2903328016587034] ***
*** starting iteration: 2; err: [Inf, 0.7775344657209909, 0.2903328016587034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7775344657209909, 0.2903328016587034, 0.2602776779342953] ***
*** starting iteration: 3; err: [Inf, 0.7775344657209909, 0.2903328016587034, 0.2602776779342953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7775344657209909, 0.2903328016587034, 0.2602776779342953, 0.24881655649204673] ***
*** finished computation of 7 references, err: [Inf, 0.7775344657209909, 0.2903328016587034, 0.2602776779342953, 0.24881655649204673] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 19]]
** centroid: 1, normalized-entropy: 0.7382848661434506, [(2, 5), (3, 19)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 8]]
** centroid: 2, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4294200742312103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4294200742312103, 0.24733363503093247] ***
*** starting iteration: 2; err: [Inf, 0.4294200742312103, 0.24733363503093247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4294200742312103, 0.24733363503093247, 0.21305094560085217] ***
*** starting iteration: 3; err: [Inf, 0.4294200742312103, 0.24733363503093247, 0.21305094560085217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4294200742312103, 0.24733363503093247, 0.21305094560085217, 0.21058569304267] ***
*** finished computation of 7 references, err: [Inf, 0.4294200742312103, 0.24733363503093247, 0.21305094560085217, 0.21058569304267] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 10]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4365289735270146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4365289735270146, 0.25758404900500076] ***
*** starting iteration: 2; err: [Inf, 0.4365289735270146, 0.25758404900500076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4365289735270146, 0.25758404900500076, 0.22734872928337807] ***
*** starting iteration: 3; err: [Inf, 0.4365289735270146, 0.25758404900500076, 0.22734872928337807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4365289735270146, 0.25758404900500076, 0.22734872928337807, 0.20957545538500189] ***
*** finished computation of 7 references, err: [Inf, 0.4365289735270146, 0.25758404900500076, 0.22734872928337807, 0.20957545538500189] ***
*** center 1: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 1]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 23]]
** centroid: 3, normalized-entropy: 0.7355085815538399, [(2, 6), (3, 23)]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.5524375482946484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5524375482946484, 0.22895836645089906] ***
*** starting iteration: 2; err: [Inf, 1.5524375482946484, 0.22895836645089906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5524375482946484, 0.22895836645089906, 0.19549735293715073] ***
*** starting iteration: 3; err: [Inf, 1.5524375482946484, 0.22895836645089906, 0.19549735293715073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5524375482946484, 0.22895836645089906, 0.19549735293715073, 0.18777178756086793] ***
*** finished computation of 7 references, err: [Inf, 1.5524375482946484, 0.22895836645089906, 0.19549735293715073, 0.18777178756086793] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31904066529884906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31904066529884906, 0.2009852582879955] ***
*** starting iteration: 2; err: [Inf, 0.31904066529884906, 0.2009852582879955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31904066529884906, 0.2009852582879955, 0.1862106230327347] ***
*** starting iteration: 3; err: [Inf, 0.31904066529884906, 0.2009852582879955, 0.1862106230327347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31904066529884906, 0.2009852582879955, 0.1862106230327347, 0.18195194102376547] ***
*** finished computation of 7 references, err: [Inf, 0.31904066529884906, 0.2009852582879955, 0.1862106230327347, 0.18195194102376547] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 7, 4]]
** centroid: 6, normalized-entropy: 0.9456603046006401, [(2, 7), (3, 4)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 9]]
** centroid: 7, normalized-entropy: 0.8904916402194913, [(2, 4), (3, 9)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4566000025131023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4566000025131023, 0.6413538735480918] ***
*** starting iteration: 2; err: [Inf, 1.4566000025131023, 0.6413538735480918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4566000025131023, 0.6413538735480918, 0.5797062941887711] ***
*** starting iteration: 3; err: [Inf, 1.4566000025131023, 0.6413538735480918, 0.5797062941887711] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4566000025131023, 0.6413538735480918, 0.5797062941887711, 0.5728063907097908] ***
*** starting iteration: 4; err: [Inf, 1.4566000025131023, 0.6413538735480918, 0.5797062941887711, 0.5728063907097908] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4566000025131023, 0.6413538735480918, 0.5797062941887711, 0.5728063907097908, 0.5719252356693096] ***
*** finished computation of 3 references, err: [Inf, 1.4566000025131023, 0.6413538735480918, 0.5797062941887711, 0.5728063907097908, 0.5719252356693096] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 12]]
** centroid: 2, normalized-entropy: 0.8721617883411698, [(2, 29), (3, 12)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 27]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.842199955728478] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.842199955728478, 1.158930614375659] ***
*** starting iteration: 2; err: [Inf, 4.842199955728478, 1.158930614375659] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.842199955728478, 1.158930614375659, 0.514661464440058] ***
*** starting iteration: 3; err: [Inf, 4.842199955728478, 1.158930614375659, 0.514661464440058] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.842199955728478, 1.158930614375659, 0.514661464440058, 0.4849639057271196] ***
*** starting iteration: 4; err: [Inf, 4.842199955728478, 1.158930614375659, 0.514661464440058, 0.4849639057271196] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.842199955728478, 1.158930614375659, 0.514661464440058, 0.4849639057271196, 0.48419136048128747] ***
*** finished computation of 3 references, err: [Inf, 4.842199955728478, 1.158930614375659, 0.514661464440058, 0.4849639057271196, 0.48419136048128747] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 2, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6992000133702431] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6992000133702431, 0.544367773255848] ***
*** starting iteration: 2; err: [Inf, 0.6992000133702431, 0.544367773255848] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6992000133702431, 0.544367773255848, 0.5183373975006087] ***
*** starting iteration: 3; err: [Inf, 0.6992000133702431, 0.544367773255848, 0.5183373975006087] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6992000133702431, 0.544367773255848, 0.5183373975006087, 0.5050006272230955] ***
*** starting iteration: 4; err: [Inf, 0.6992000133702431, 0.544367773255848, 0.5183373975006087, 0.5050006272230955] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6992000133702431, 0.544367773255848, 0.5183373975006087, 0.5050006272230955, 0.5023324926613053] ***
*** starting iteration: 5; err: [Inf, 0.6992000133702431, 0.544367773255848, 0.5183373975006087, 0.5050006272230955, 0.5023324926613053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6992000133702431, 0.544367773255848, 0.5183373975006087, 0.5050006272230955, 0.5023324926613053, 0.5023324926613053] ***
*** finished computation of 3 references, err: [Inf, 0.6992000133702431, 0.544367773255848, 0.5183373975006087, 0.5050006272230955, 0.5023324926613053, 0.5023324926613053] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 6]]
** centroid: 2, normalized-entropy: 0.6098403047164005, [(2, 34), (3, 6)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 21]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.395599994038642] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.395599994038642, 1.1270232741323127] ***
*** finished computation of 3 references, err: [Inf, 6.395599994038642, 1.1270232741323127] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [32, 4, 0]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(1, 32), (2, 4)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 25, 11]]
** centroid: 2, normalized-entropy: 0.887976319515135, [(2, 25), (3, 11)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 28]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.858900030627338] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.858900030627338, 1.8765664417616876] ***
*** finished computation of 3 references, err: [Inf, 4.858900030627338, 1.8765664417616876] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 22, 18]]
** centroid: 2, normalized-entropy: 0.9927744539878083, [(2, 22), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [32, 12, 0]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(1, 32), (2, 12)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7638999953523744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7638999953523744, 0.8894645851612566] ***
*** finished computation of 3 references, err: [Inf, 1.7638999953523744, 0.8894645851612566] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 1, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 34, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1443692562980194] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1443692562980194, 0.42416725274667477] ***
*** finished computation of 3 references, err: [Inf, 1.1443692562980194, 0.42416725274667477] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 16]]
** centroid: 3, normalized-entropy: 0.9389320105807949, [(2, 29), (3, 16)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6374268899572313] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6374268899572313, 0.37842552774818117] ***
*** finished computation of 3 references, err: [Inf, 0.6374268899572313, 0.37842552774818117] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 16]]
** centroid: 1, normalized-entropy: 0.9043814577244941, [(2, 34), (3, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8105537488932683] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8105537488932683, 0.41728328459639824] ***
*** finished computation of 3 references, err: [Inf, 0.8105537488932683, 0.41728328459639824] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 11]]
** centroid: 1, normalized-entropy: 0.7849920887641585, [(2, 36), (3, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [36, 1, 0]]
** centroid: 2, normalized-entropy: 0.1792560669283214, [(1, 36), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4578000017899166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4578000017899166, 0.7187307255895692] ***
*** finished computation of 3 references, err: [Inf, 1.4578000017899166, 0.7187307255895692] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 27]]
** centroid: 1, normalized-entropy: 0.9997615248696311, [(2, 28), (3, 27)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1782999923048245] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1782999923048245, 0.5202529832378455] ***
*** finished computation of 3 references, err: [Inf, 1.1782999923048245, 0.5202529832378455] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 13]]
** centroid: 3, normalized-entropy: 0.8507707040532602, [(2, 34), (3, 13)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.26249999577366] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.26249999577366, 0.5841254944323708] ***
*** finished computation of 3 references, err: [Inf, 1.26249999577366, 0.5841254944323708] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 37, 9]]
** centroid: 1, normalized-entropy: 0.7131467486384921, [(2, 37), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3602633717016259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3602633717016259, 0.18961780257555358] ***
*** finished computation of 7 references, err: [Inf, 0.3602633717016259, 0.18961780257555358] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 2]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 9]]
** centroid: 4, normalized-entropy: 0.9980008838722993, [(2, 10), (3, 9)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3664372702615422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3664372702615422, 0.17804949179327548] ***
*** finished computation of 7 references, err: [Inf, 0.3664372702615422, 0.17804949179327548] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 13]]
** centroid: 1, normalized-entropy: 0.9517626756348312, [(2, 22), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4743735658982724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4743735658982724, 0.1970705509575732] ***
*** finished computation of 7 references, err: [Inf, 0.4743735658982724, 0.1970705509575732] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 5]]
** centroid: 1, normalized-entropy: 0.6373874992221911, [(2, 26), (3, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 4, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3900880136586967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3900880136586967, 0.19902449899924257] ***
*** finished computation of 7 references, err: [Inf, 0.3900880136586967, 0.19902449899924257] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 12, 8]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 7, 3]]
** centroid: 6, normalized-entropy: 0.8812908992306927, [(2, 7), (3, 3)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3170074804431768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3170074804431768, 0.1680264092578653] ***
*** finished computation of 7 references, err: [Inf, 0.3170074804431768, 0.1680264092578653] ***
*** center 1: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 13, 9]]
** centroid: 3, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47120318650091036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47120318650091036, 0.16540430943274237] ***
*** finished computation of 7 references, err: [Inf, 0.47120318650091036, 0.16540430943274237] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 5]]
** centroid: 4, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5803000015809999] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5803000015809999, 0.24872027842392158] ***
*** starting iteration: 2; err: [Inf, 0.5803000015809999, 0.24872027842392158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5803000015809999, 0.24872027842392158, 0.2380420755735744] ***
*** starting iteration: 3; err: [Inf, 0.5803000015809999, 0.24872027842392158, 0.2380420755735744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5803000015809999, 0.24872027842392158, 0.2380420755735744, 0.23696516755756558] ***
*** starting iteration: 4; err: [Inf, 0.5803000015809999, 0.24872027842392158, 0.2380420755735744, 0.23696516755756558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5803000015809999, 0.24872027842392158, 0.2380420755735744, 0.23696516755756558, 0.23696516755756558] ***
*** finished computation of 7 references, err: [Inf, 0.5803000015809999, 0.24872027842392158, 0.2380420755735744, 0.23696516755756558, 0.23696516755756558] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 6]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(2, 1), (3, 6)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 10, 7]]
** centroid: 7, normalized-entropy: 0.9774178175281716, [(2, 10), (3, 7)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5428000067536146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5428000067536146, 0.2500080050146554] ***
*** starting iteration: 2; err: [Inf, 0.5428000067536146, 0.2500080050146554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5428000067536146, 0.2500080050146554, 0.2311441710920776] ***
*** starting iteration: 3; err: [Inf, 0.5428000067536146, 0.2500080050146554, 0.2311441710920776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5428000067536146, 0.2500080050146554, 0.2311441710920776, 0.21698205123776484] ***
*** starting iteration: 4; err: [Inf, 0.5428000067536146, 0.2500080050146554, 0.2311441710920776, 0.21698205123776484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5428000067536146, 0.2500080050146554, 0.2311441710920776, 0.21698205123776484, 0.20965029642202912] ***
*** starting iteration: 5; err: [Inf, 0.5428000067536146, 0.2500080050146554, 0.2311441710920776, 0.21698205123776484, 0.20965029642202912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5428000067536146, 0.2500080050146554, 0.2311441710920776, 0.21698205123776484, 0.20965029642202912, 0.20965029642202912] ***
*** finished computation of 7 references, err: [Inf, 0.5428000067536146, 0.2500080050146554, 0.2311441710920776, 0.21698205123776484, 0.20965029642202912, 0.20965029642202912] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 11]]
** centroid: 1, normalized-entropy: 0.998363672593813, [(2, 10), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5931000100361219] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5931000100361219, 0.24745930221411253] ***
*** starting iteration: 2; err: [Inf, 0.5931000100361219, 0.24745930221411253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5931000100361219, 0.24745930221411253, 0.23834096398795407] ***
*** starting iteration: 3; err: [Inf, 0.5931000100361219, 0.24745930221411253, 0.23834096398795407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5931000100361219, 0.24745930221411253, 0.23834096398795407, 0.231957406951635] ***
*** starting iteration: 4; err: [Inf, 0.5931000100361219, 0.24745930221411253, 0.23834096398795407, 0.231957406951635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5931000100361219, 0.24745930221411253, 0.23834096398795407, 0.231957406951635, 0.2305384413205226] ***
*** starting iteration: 5; err: [Inf, 0.5931000100361219, 0.24745930221411253, 0.23834096398795407, 0.231957406951635, 0.2305384413205226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5931000100361219, 0.24745930221411253, 0.23834096398795407, 0.231957406951635, 0.2305384413205226, 0.229556142432155] ***
*** finished computation of 7 references, err: [Inf, 0.5931000100361219, 0.24745930221411253, 0.23834096398795407, 0.231957406951635, 0.2305384413205226, 0.229556142432155] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 13, 6]]
** centroid: 7, normalized-entropy: 0.8997437586982626, [(2, 13), (3, 6)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.92, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8733333333333334, 0.8066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 1) => 0.98
finished with 18
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.6136000048134767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6136000048134767, 0.34020961435749514] ***
*** starting iteration: 2; err: [Inf, 0.6136000048134767, 0.34020961435749514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6136000048134767, 0.34020961435749514, 0.31939468346835637] ***
*** starting iteration: 3; err: [Inf, 0.6136000048134767, 0.34020961435749514, 0.31939468346835637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6136000048134767, 0.34020961435749514, 0.31939468346835637, 0.31836558048524877] ***
*** starting iteration: 4; err: [Inf, 0.6136000048134767, 0.34020961435749514, 0.31939468346835637, 0.31836558048524877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6136000048134767, 0.34020961435749514, 0.31939468346835637, 0.31836558048524877, 0.31817974464672827] ***
*** finished computation of 7 references, err: [Inf, 0.6136000048134767, 0.34020961435749514, 0.31939468346835637, 0.31836558048524877, 0.31817974464672827] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 5, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 7, 30]]
** centroid: 6, normalized-entropy: 0.699772221773307, [(2, 7), (3, 30)]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9719000033121423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9719000033121423, 0.45561029757712146] ***
*** starting iteration: 2; err: [Inf, 0.9719000033121423, 0.45561029757712146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743] ***
*** starting iteration: 3; err: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743, 0.3672446391429687] ***
*** starting iteration: 4; err: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743, 0.3672446391429687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743, 0.3672446391429687, 0.31283078297965883] ***
*** starting iteration: 5; err: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743, 0.3672446391429687, 0.31283078297965883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743, 0.3672446391429687, 0.31283078297965883, 0.285187215390861] ***
*** starting iteration: 6; err: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743, 0.3672446391429687, 0.31283078297965883, 0.285187215390861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743, 0.3672446391429687, 0.31283078297965883, 0.285187215390861, 0.2793008284570042] ***
*** starting iteration: 7; err: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743, 0.3672446391429687, 0.31283078297965883, 0.285187215390861, 0.2793008284570042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743, 0.3672446391429687, 0.31283078297965883, 0.285187215390861, 0.2793008284570042, 0.27712561737935776] ***
*** starting iteration: 8; err: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743, 0.3672446391429687, 0.31283078297965883, 0.285187215390861, 0.2793008284570042, 0.27712561737935776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743, 0.3672446391429687, 0.31283078297965883, 0.285187215390861, 0.2793008284570042, 0.27712561737935776, 0.27601598563009305] ***
*** starting iteration: 9; err: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743, 0.3672446391429687, 0.31283078297965883, 0.285187215390861, 0.2793008284570042, 0.27712561737935776, 0.27601598563009305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743, 0.3672446391429687, 0.31283078297965883, 0.285187215390861, 0.2793008284570042, 0.27712561737935776, 0.27601598563009305, 0.27601598563009305] ***
*** finished computation of 7 references, err: [Inf, 0.9719000033121423, 0.45561029757712146, 0.4171484257075743, 0.3672446391429687, 0.31283078297965883, 0.285187215390861, 0.2793008284570042, 0.27712561737935776, 0.27601598563009305, 0.27601598563009305] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 13]]
** centroid: 3, normalized-entropy: 0.9672947789468944, [(2, 20), (3, 13)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 1, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 1, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43410000176407776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43410000176407776, 0.2966108245045705] ***
*** starting iteration: 2; err: [Inf, 0.43410000176407776, 0.2966108245045705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43410000176407776, 0.2966108245045705, 0.27954317622634317] ***
*** starting iteration: 3; err: [Inf, 0.43410000176407776, 0.2966108245045705, 0.27954317622634317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43410000176407776, 0.2966108245045705, 0.27954317622634317, 0.27459974050035324] ***
*** starting iteration: 4; err: [Inf, 0.43410000176407776, 0.2966108245045705, 0.27954317622634317, 0.27459974050035324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43410000176407776, 0.2966108245045705, 0.27954317622634317, 0.27459974050035324, 0.27435591871281306] ***
*** finished computation of 7 references, err: [Inf, 0.43410000176407776, 0.2966108245045705, 0.27954317622634317, 0.27459974050035324, 0.27435591871281306] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 4]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 2]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 9), (3, 2)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47576102592905783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47576102592905783, 0.24694846011681928] ***
*** starting iteration: 2; err: [Inf, 0.47576102592905783, 0.24694846011681928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973] ***
*** starting iteration: 3; err: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973, 0.21929971605048948] ***
*** starting iteration: 4; err: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973, 0.21929971605048948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973, 0.21929971605048948, 0.2049675449090325] ***
*** starting iteration: 5; err: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973, 0.21929971605048948, 0.2049675449090325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973, 0.21929971605048948, 0.2049675449090325, 0.1968409509605298] ***
*** starting iteration: 6; err: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973, 0.21929971605048948, 0.2049675449090325, 0.1968409509605298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973, 0.21929971605048948, 0.2049675449090325, 0.1968409509605298, 0.18261810385056715] ***
*** starting iteration: 7; err: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973, 0.21929971605048948, 0.2049675449090325, 0.1968409509605298, 0.18261810385056715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973, 0.21929971605048948, 0.2049675449090325, 0.1968409509605298, 0.18261810385056715, 0.17011940122891972] ***
*** starting iteration: 8; err: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973, 0.21929971605048948, 0.2049675449090325, 0.1968409509605298, 0.18261810385056715, 0.17011940122891972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973, 0.21929971605048948, 0.2049675449090325, 0.1968409509605298, 0.18261810385056715, 0.17011940122891972, 0.16857518322139625] ***
*** starting iteration: 9; err: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973, 0.21929971605048948, 0.2049675449090325, 0.1968409509605298, 0.18261810385056715, 0.17011940122891972, 0.16857518322139625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973, 0.21929971605048948, 0.2049675449090325, 0.1968409509605298, 0.18261810385056715, 0.17011940122891972, 0.16857518322139625, 0.16857518322139625] ***
*** finished computation of 7 references, err: [Inf, 0.47576102592905783, 0.24694846011681928, 0.23204442526088973, 0.21929971605048948, 0.2049675449090325, 0.1968409509605298, 0.18261810385056715, 0.17011940122891972, 0.16857518322139625, 0.16857518322139625] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3056577600683133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3056577600683133, 0.23200087173962033] ***
*** starting iteration: 2; err: [Inf, 0.3056577600683133, 0.23200087173962033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3056577600683133, 0.23200087173962033, 0.20432770578995083] ***
*** starting iteration: 3; err: [Inf, 0.3056577600683133, 0.23200087173962033, 0.20432770578995083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3056577600683133, 0.23200087173962033, 0.20432770578995083, 0.18513795068568495] ***
*** starting iteration: 4; err: [Inf, 0.3056577600683133, 0.23200087173962033, 0.20432770578995083, 0.18513795068568495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3056577600683133, 0.23200087173962033, 0.20432770578995083, 0.18513795068568495, 0.180744180404936] ***
*** starting iteration: 5; err: [Inf, 0.3056577600683133, 0.23200087173962033, 0.20432770578995083, 0.18513795068568495, 0.180744180404936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3056577600683133, 0.23200087173962033, 0.20432770578995083, 0.18513795068568495, 0.180744180404936, 0.18049666080366528] ***
*** finished computation of 7 references, err: [Inf, 0.3056577600683133, 0.23200087173962033, 0.20432770578995083, 0.18513795068568495, 0.180744180404936, 0.18049666080366528] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 14]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 1), (3, 14)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 19, 3]]
** centroid: 5, normalized-entropy: 0.5746356978376794, [(2, 19), (3, 3)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5076619373802178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5076619373802178, 0.244481638130246] ***
*** starting iteration: 2; err: [Inf, 0.5076619373802178, 0.244481638130246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5076619373802178, 0.244481638130246, 0.22259792872108697] ***
*** starting iteration: 3; err: [Inf, 0.5076619373802178, 0.244481638130246, 0.22259792872108697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5076619373802178, 0.244481638130246, 0.22259792872108697, 0.21783879655920463] ***
*** starting iteration: 4; err: [Inf, 0.5076619373802178, 0.244481638130246, 0.22259792872108697, 0.21783879655920463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5076619373802178, 0.244481638130246, 0.22259792872108697, 0.21783879655920463, 0.21661856845331393] ***
*** starting iteration: 5; err: [Inf, 0.5076619373802178, 0.244481638130246, 0.22259792872108697, 0.21783879655920463, 0.21661856845331393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5076619373802178, 0.244481638130246, 0.22259792872108697, 0.21783879655920463, 0.21661856845331393, 0.2162455924733106] ***
*** finished computation of 7 references, err: [Inf, 0.5076619373802178, 0.244481638130246, 0.22259792872108697, 0.21783879655920463, 0.21661856845331393, 0.2162455924733106] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 11]]
** centroid: 3, normalized-entropy: 0.9986359641585719, [(2, 12), (3, 11)]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 7, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.92, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8733333333333334, 0.8733333333333334, 0.8066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 1) => 0.98
finished with 18
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.92, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8733333333333334, 0.8733333333333334, 0.8066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 1) => 0.98
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 2.497135799628993] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.497135799628993, 0.8646147457526441] ***
*** finished computation of 3 references, err: [Inf, 2.497135799628993, 0.8646147457526441] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [32, 7, 0]]
** centroid: 1, normalized-entropy: 0.6789538995185759, [(1, 32), (2, 7)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 22, 25]]
** centroid: 2, normalized-entropy: 0.9970590569034106, [(2, 22), (3, 25)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6145595018420126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6145595018420126, 0.337400677865521] ***
*** finished computation of 3 references, err: [Inf, 0.6145595018420126, 0.337400677865521] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 10]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 30), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 24]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 4), (3, 24)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.864349392051647] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.864349392051647, 1.3956340237152431] ***
*** finished computation of 3 references, err: [Inf, 5.864349392051647, 1.3956340237152431] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [36, 17, 1]]
** centroid: 2, normalized-entropy: 0.6444802174435211, [(1, 36), (2, 17), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 11]]
** centroid: 3, normalized-entropy: 0.9383153522334071, [(2, 20), (3, 11)]
finished with 6 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.92, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8733333333333334, 0.8733333333333334, 0.8066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 1) => 0.98
finished with 21
iteration 5 finished
*** starting iteration: 1; err: [Inf, 1.1668000030802923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1668000030802923, 0.6135524609298872] ***
*** starting iteration: 2; err: [Inf, 1.1668000030802923, 0.6135524609298872] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1668000030802923, 0.6135524609298872, 0.5995286412777189] ***
*** starting iteration: 3; err: [Inf, 1.1668000030802923, 0.6135524609298872, 0.5995286412777189] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1668000030802923, 0.6135524609298872, 0.5995286412777189, 0.592271190568701] ***
*** finished computation of 3 references, err: [Inf, 1.1668000030802923, 0.6135524609298872, 0.5995286412777189, 0.592271190568701] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 38]]
** centroid: 1, normalized-entropy: 0.45371633918694493, [(2, 4), (3, 38)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 3, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9571000102249971] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9571000102249971, 0.5305770685098172] ***
*** starting iteration: 2; err: [Inf, 0.9571000102249971, 0.5305770685098172] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9571000102249971, 0.5305770685098172, 0.5171856710713076] ***
*** starting iteration: 3; err: [Inf, 0.9571000102249971, 0.5305770685098172, 0.5171856710713076] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9571000102249971, 0.5305770685098172, 0.5171856710713076, 0.5139296505799555] ***
*** finished computation of 3 references, err: [Inf, 0.9571000102249971, 0.5305770685098172, 0.5171856710713076, 0.5139296505799555] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 34]]
** centroid: 1, normalized-entropy: 0.8507707040532602, [(2, 13), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.547299996037767] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.547299996037767, 0.5114075155733104] ***
*** starting iteration: 2; err: [Inf, 1.547299996037767, 0.5114075155733104] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.547299996037767, 0.5114075155733104, 0.503931540819333] ***
*** starting iteration: 3; err: [Inf, 1.547299996037767, 0.5114075155733104, 0.503931540819333] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.547299996037767, 0.5114075155733104, 0.503931540819333, 0.5023370202587855] ***
*** finished computation of 3 references, err: [Inf, 1.547299996037767, 0.5114075155733104, 0.503931540819333, 0.5023370202587855] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 21]]
** centroid: 2, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 6]]
** centroid: 3, normalized-entropy: 0.6006085754131871, [(2, 35), (3, 6)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7045227804966132] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7045227804966132, 0.4157472049967163] ***
*** starting iteration: 2; err: [Inf, 0.7045227804966132, 0.4157472049967163] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7045227804966132, 0.4157472049967163, 0.4106495296247419] ***
*** starting iteration: 3; err: [Inf, 0.7045227804966132, 0.4157472049967163, 0.4106495296247419] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7045227804966132, 0.4157472049967163, 0.4106495296247419, 0.4067250035643145] ***
*** finished computation of 3 references, err: [Inf, 0.7045227804966132, 0.4157472049967163, 0.4106495296247419, 0.4067250035643145] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 37]]
** centroid: 1, normalized-entropy: 0.4612160405139095, [(2, 4), (3, 37)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 2]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 25), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7007897659090202] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7007897659090202, 0.3622976768446206] ***
*** starting iteration: 2; err: [Inf, 0.7007897659090202, 0.3622976768446206] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7007897659090202, 0.3622976768446206, 0.342518660973923] ***
*** starting iteration: 3; err: [Inf, 0.7007897659090202, 0.3622976768446206, 0.342518660973923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7007897659090202, 0.3622976768446206, 0.342518660973923, 0.3387163685652571] ***
*** finished computation of 3 references, err: [Inf, 0.7007897659090202, 0.3622976768446206, 0.342518660973923, 0.3387163685652571] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.077997462270271] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.077997462270271, 0.3663194696056033] ***
*** starting iteration: 2; err: [Inf, 1.077997462270271, 0.3663194696056033] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.077997462270271, 0.3663194696056033, 0.3562006391691638] ***
*** starting iteration: 3; err: [Inf, 1.077997462270271, 0.3663194696056033, 0.3562006391691638] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.077997462270271, 0.3663194696056033, 0.3562006391691638, 0.35530644538179074] ***
*** finished computation of 3 references, err: [Inf, 1.077997462270271, 0.3663194696056033, 0.3562006391691638, 0.35530644538179074] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 37, 6]]
** centroid: 3, normalized-entropy: 0.5830194167347007, [(2, 37), (3, 6)]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.92, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9, 0.8933333333333332, 0.8733333333333334, 0.8733333333333334, 0.8066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 1) => 0.98
finished with 21
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.92, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9, 0.8933333333333332, 0.8733333333333334, 0.8733333333333334, 0.8066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 1) => 0.98
finished with 22
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.6324000013675994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6324000013675994, 0.4935497329307673] ***
*** starting iteration: 2; err: [Inf, 0.6324000013675994, 0.4935497329307673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6324000013675994, 0.4935497329307673, 0.39073345410470056] ***
*** starting iteration: 3; err: [Inf, 0.6324000013675994, 0.4935497329307673, 0.39073345410470056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6324000013675994, 0.4935497329307673, 0.39073345410470056, 0.35545026244814665] ***
*** finished computation of 7 references, err: [Inf, 0.6324000013675994, 0.4935497329307673, 0.39073345410470056, 0.35545026244814665] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 20]]
** centroid: 4, normalized-entropy: 0.8935711016541908, [(2, 9), (3, 20)]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6196000018592441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6196000018592441, 0.42427681183355503] ***
*** starting iteration: 2; err: [Inf, 0.6196000018592441, 0.42427681183355503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6196000018592441, 0.42427681183355503, 0.40942332635957635] ***
*** starting iteration: 3; err: [Inf, 0.6196000018592441, 0.42427681183355503, 0.40942332635957635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6196000018592441, 0.42427681183355503, 0.40942332635957635, 0.33587894716928174] ***
*** finished computation of 7 references, err: [Inf, 0.6196000018592441, 0.42427681183355503, 0.40942332635957635, 0.33587894716928174] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 25, 11]]
** centroid: 1, normalized-entropy: 0.887976319515135, [(2, 25), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 4, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8837999965415303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8837999965415303, 0.37179288289805534] ***
*** starting iteration: 2; err: [Inf, 0.8837999965415303, 0.37179288289805534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8837999965415303, 0.37179288289805534, 0.3456454765645446] ***
*** starting iteration: 3; err: [Inf, 0.8837999965415303, 0.37179288289805534, 0.3456454765645446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8837999965415303, 0.37179288289805534, 0.3456454765645446, 0.33512671228266017] ***
*** finished computation of 7 references, err: [Inf, 0.8837999965415303, 0.37179288289805534, 0.3456454765645446, 0.33512671228266017] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 15]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 5]]
** centroid: 2, normalized-entropy: 0.552495114325111, [(2, 34), (3, 5)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.92, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9, 0.8933333333333332, 0.8733333333333334, 0.8733333333333334, 0.8066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 1) => 0.98
finished with 22
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.92, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9, 0.8933333333333332, 0.8733333333333334, 0.8733333333333334, 0.8066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 1) => 0.98
finished with 23
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.41540000655427634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41540000655427634, 0.3119905330803557] ***
*** starting iteration: 2; err: [Inf, 0.41540000655427634, 0.3119905330803557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41540000655427634, 0.3119905330803557, 0.29726095603236913] ***
*** starting iteration: 3; err: [Inf, 0.41540000655427634, 0.3119905330803557, 0.29726095603236913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41540000655427634, 0.3119905330803557, 0.29726095603236913, 0.2854527739780605] ***
*** finished computation of 7 references, err: [Inf, 0.41540000655427634, 0.3119905330803557, 0.29726095603236913, 0.2854527739780605] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 17]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6131000003354995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6131000003354995, 0.33122608824123717] ***
*** starting iteration: 2; err: [Inf, 0.6131000003354995, 0.33122608824123717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6131000003354995, 0.33122608824123717, 0.250820035473937] ***
*** starting iteration: 3; err: [Inf, 0.6131000003354995, 0.33122608824123717, 0.250820035473937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6131000003354995, 0.33122608824123717, 0.250820035473937, 0.24043407570012731] ***
*** finished computation of 7 references, err: [Inf, 0.6131000003354995, 0.33122608824123717, 0.250820035473937, 0.24043407570012731] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 22, 11]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 22), (3, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.8726000140619476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8726000140619476, 0.48729560282134315] ***
*** starting iteration: 2; err: [Inf, 1.8726000140619476, 0.48729560282134315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8726000140619476, 0.48729560282134315, 0.32310361783821806] ***
*** starting iteration: 3; err: [Inf, 1.8726000140619476, 0.48729560282134315, 0.32310361783821806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8726000140619476, 0.48729560282134315, 0.32310361783821806, 0.2870607672246441] ***
*** finished computation of 7 references, err: [Inf, 1.8726000140619476, 0.48729560282134315, 0.32310361783821806, 0.2870607672246441] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 14]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 28, 6]]
** centroid: 7, normalized-entropy: 0.6722948170756378, [(2, 28), (3, 6)]
finished with 8 centroids; started with 7
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 1), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.416666666666667, 2.966666666666667, 4.683333333333334, 1.4666666666666668], [6.35483870967742, 2.9580645161290318, 5.3032258064516125, 2.0161290322580636], [5.0125, 3.475000000000001, 1.453125, 0.23750000000000004], [5.643478260869566, 2.634782608695651, 4.004347826086956, 1.2304347826086959], [4.9, 2.5, 4.5, 1.7], [7.657142857142858, 3.1285714285714286, 6.528571428571429, 2.1]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.144444444444446, 3.0555555555555554, 6.011111111111112, 1.9555555555555553], [4.9676470588235295, 3.3000000000000007, 1.5735294117647056, 0.28235294117647064], [6.044117647058823, 2.7970588235294125, 4.341176470588235, 1.3411764705882354], [6.158823529411765, 2.8352941176470594, 5.152941176470588, 1.8764705882352943]], [0.0, 0.0, 0.0, 0.0], [3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.002941176470589, 2.823529411764706, 4.364705882352942, 1.3764705882352943], [5.98888888888889, 2.788888888888889, 5.055555555555555, 1.8666666666666667], [5.0361111111111105, 3.408333333333333, 1.4777777777777779, 0.2555555555555556], [5.233333333333333, 2.5, 3.266666666666667, 1.0333333333333334], [7.1125, 3.0500000000000003, 6.06875, 2.11875]], [0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[56, 1, 18, 23, 15, 19, 21, 14, 33, 24, 35, 1, 12, 39, 31, 5, 4, 27, 24, 30, 19, 8, 43, 1, 23, 30, 1, 23, 30, 3, 1, 42, 14, 20, 49, 9, 20, 23, 24, 54, 42, 10, 31, 31, 21, 33, 49, 24, 39, 12, 38, 14, 54, 14, 13, 10, 41, 18, 28, 40, 40, 34, 30, 20, 30, 31, 32, 49, 46, 40, 23, 22, 47, 42, 16, 38, 48, 31, 55, 37, 19, 6, 24, 45, 16, 32, 51, 49, 30, 39, 30, 27, 46, 20, 18, 45, 26, 48, 35, 46, 1, 27, 39, 20, 28, 52, 20, 31, 48, 62, 38, 26, 20, 1, 42, 39, 91, 30, 31, 44, 23, 24, 30, 22, 30, 43, 13, 36, 49, 37, 24, 21, 43, 45, 26, 17, 1, 38, 40, 46, 30, 24, 21, 35, 37, 39, 26, 47, 52, 56, 35, 24, 43, 23, 39, 49, 23, 31, 40, 21, 42, 39, 26, 3, 53, 39, 21, 30, 60, 30, 28, 25, 37, 35, 53, 53, 28, 47, 34, 17, 52, 44, 24, 42, 1, 48, 43, 36, 25, 45, 29, 34, 70, 28, 24, 53, 34, 31, 31, 42, 35, 44, 44, 42, 48, 40, 38, 43, 22, 23, 43, 29, 38, 34, 61, 33, 34, 37, 49, 38, 25, 47, 50, 37, 41, 47, 31, 35, 22, 46, 41, 40, 52, 42, 21, 31, 13, 44, 23, 33, 52, 37, 36, 15, 32, 47, 31, 34, 41, 31, 48, 30, 36, 47, 36, 59, 36, 18, 51, 13, 40, 46, 51, 42, 38, 27, 34, 49, 25, 32, 40, 40, 68, 41, 47, 30, 46, 58, 30, 20, 32, 31, 19, 57, 34, 35, 39, 35, 35, 30, 14, 85, 28, 32, 16, 41, 34, 53, 37, 60]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.619, speedup = 0.37734372413923556, eval_ratio = 0.042337)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3967013888888888,"recall":0.3967013888888888,"f1":null,"seconds":6.940029561519623e-5,"exhaustive_search_seconds":0.0003958512097597122,"evaluations":340.7109375,"distances_sum":1711.7374902877955}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5581597222222222,"recall":0.5581597222222222,"f1":null,"seconds":0.00010157003998756409,"exhaustive_search_seconds":0.0003958512097597122,"evaluations":378.8125,"distances_sum":1599.0438386727885}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6545138888888883,"recall":0.6545138888888883,"f1":0.6545138888888883,"seconds":0.0001306142657995224,"exhaustive_search_seconds":0.0003958512097597122,"evaluations":416.3203125,"distances_sum":1554.7795025214702}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7326388888888884,"recall":0.7326388888888884,"f1":0.7326388888888884,"seconds":0.0001606922596693039,"exhaustive_search_seconds":0.0003958512097597122,"evaluations":457.0078125,"distances_sum":1529.9805390817473}
KCenters.DeloneInvIndex> reached performance {"precision":0.8012152777777768,"recall":0.8012152777777768,"f1":0.8012152777777768,"seconds":0.00019468367099761963,"exhaustive_search_seconds":0.0003958512097597122,"evaluations":497.3984375,"distances_sum":1513.4738275169414}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7509999999999997, speedup = 1.9043374500328145, eval_ratio = 0.05057)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
