Julia Version 1.5.0-DEV.62
Commit 756891d910 (2020-01-14 06:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_JvIk2O/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_JvIk2O/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_JvIk2O/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.02938900219389319 -0.06516715304328775; 0.02938900219389319 0.0 0.0429028147525439; 0.06516715304328775 -0.0429028147525439 0.0])
dAA = so3([0.0 -0.009054111021807185 0.07560250825564448; 0.009054111021807185 0.0 -0.02996125893049599; -0.07560250825564448 0.02996125893049599 0.0])
dAA = so3([0.0 -0.12744891876753942 -0.12010765834236768; 0.12744891876753942 0.0 0.07247811145600769; 0.12010765834236768 -0.07247811145600769 0.0])
dAA = Quaternion(0.9929029123822211, [-0.11729762914760739, 0.019336219994573873, 0.0033441554353000127])
dAA = SO3([0.9980320812334603 -0.049219601458494716 -0.038850941572565405; 0.047965201467732435 0.9983173509116862 -0.032585369674647535; 0.04038940797991206 0.03065775107441096 0.9987135715619829])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.981945229193432 -0.015423808423060773 0.18853560140723302; 0.02953167313270619 0.9969492422151361 -0.07225018151291318; -0.1868460519953294 0.07651349279960118 0.9794050430099714]), [-0.429028147525439, -0.6516715304328775, 0.2938900219389319])
xj = SE3(SO3([0.9953267833575712 -0.03291629085871404 0.0907805713089261; -0.022997381767495693 0.8322558086061231 0.5539146048563877; -0.09378547202477862 -0.5534137573619512 0.8276095084033392]), [-0.7247811145600769, -1.2010765834236767, 1.274489187675394])
Dx = SE3(SO3([0.9942006804274942 0.09565908741407624 -0.04913599528465423; -0.04545480598936059 0.7878808727441082 0.6141478575851675; 0.09746213444193098 -0.6083527507615034 0.7876598650375268]), [-0.489859148149618, -0.46813824693737793, 0.9443384193885098])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
