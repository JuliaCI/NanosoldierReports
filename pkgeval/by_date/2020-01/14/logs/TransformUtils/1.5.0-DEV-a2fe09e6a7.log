Julia Version 1.5.0-DEV.57
Commit a2fe09e6a7 (2020-01-13 17:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_epQ5P1/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_epQ5P1/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_epQ5P1/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.019804024588994815 0.033887370025436805; 0.019804024588994815 0.0 -0.052840383059678475; -0.033887370025436805 0.052840383059678475 0.0])
dAA = so3([0.0 -0.0103212644490399 0.1829942527043533; 0.0103212644490399 0.0 0.016175276855614366; -0.1829942527043533 -0.016175276855614366 0.0])
dAA = so3([0.0 0.09550908585249693 -0.06567433788626903; -0.09550908585249693 0.0 0.07569970002571871; 0.06567433788626903 -0.07569970002571871 0.0])
dAA = Quaternion(0.9953360629559922, [-0.039306770720098964, -0.011395972606161065, -0.08735691937781648])
dAA = SO3([0.9977126673076437 -0.044694413635599034 0.05071334029264609; 0.052682495992893874 0.9841955709096253 -0.1690669477391605; -0.04235549680769266 0.17135194072915336 0.9842990014718733])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8968586265971484 -0.033990762717073665 0.44100933317582786; 0.015814784485009233 0.9988696192332077 0.04482606791365285; -0.4420344969456224 -0.033228178144735866 0.8963823914419629]), [0.5284038305967848, 0.338873700254368, 0.19804024588994815])
xj = SE3(SO3([0.9045654351139452 0.4252522931744293 -0.030362159788267683; -0.41141492035504956 0.8893685335481449 0.19940254472716867; 0.11179953893629127 -0.16788120408286178 0.979447172852789]), [-0.7569970002571871, -0.6567433788626903, -0.9550908585249692])
Dx = SE3(SO3([0.7553416225517563 0.46966564289291235 -0.45702649499440096; -0.4454116289052078 0.8794869452274664 0.16766393175179015; 0.4806948242667996 0.07692136933548985 0.8735076352629458]), [-0.6588445656699592, -0.9124834523201129, -1.6451497791046144])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
