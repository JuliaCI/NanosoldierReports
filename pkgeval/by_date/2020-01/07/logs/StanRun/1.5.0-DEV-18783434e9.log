Julia Version 1.5.0-DEV.11
Commit 18783434e9 (2020-01-04 00:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed ArgCheck ──────────── v1.0.1
 Installed StanRun ───────────── v0.2.1
 Installed StanDump ──────────── v0.2.0
 Installed OrderedCollections ── v1.1.0
 Installed Parameters ────────── v0.12.0
 Installed DocStringExtensions ─ v0.8.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [d49c3b98] + StanRun v0.2.1
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [dce04be8] + ArgCheck v1.0.1
  [ffbed154] + DocStringExtensions v0.8.1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [9713c8f3] + StanDump v0.2.0
  [d49c3b98] + StanRun v0.2.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing StanRun
  Updating `/tmp/jl_En27kB/Project.toml`
 [no changes]
  Updating `/tmp/jl_En27kB/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_En27kB/Project.toml`
  [dce04be8] ArgCheck v1.0.1
  [ffbed154] DocStringExtensions v0.8.1
  [d96e819e] Parameters v0.12.0
  [9713c8f3] StanDump v0.2.0
  [d49c3b98] StanRun v0.2.1
  [8ba89e20] Distributed 
  [8dfed614] Test 
cmdstan run and results: Error During Test at /home/pkgeval/.julia/packages/StanRun/E3YcJ/test/runtests.jl:3
  Got exception outside of a @test
  The environment variable JULIA_CMDSTAN_HOME needs to be set.
  Stacktrace:
   [1] (::StanRun.var"#1#2")() at /home/pkgeval/.julia/packages/StanRun/E3YcJ/src/StanRun.jl:25
   [2] (::Base.var"#463#464"{StanRun.var"#1#2"})(::String) at ./env.jl:81
   [3] access_env at ./env.jl:43 [inlined]
   [4] get at ./env.jl:81 [inlined]
   [5] get_cmdstan_home at /home/pkgeval/.julia/packages/StanRun/E3YcJ/src/StanRun.jl:24 [inlined]
   [6] StanModel(::String) at /home/pkgeval/.julia/packages/StanRun/E3YcJ/src/StanRun.jl:82
   [7] top-level scope at /home/pkgeval/.julia/packages/StanRun/E3YcJ/test/runtests.jl:11
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1116
   [9] top-level scope at /home/pkgeval/.julia/packages/StanRun/E3YcJ/test/runtests.jl:5
   [10] include(::String) at ./client.jl:439
   [11] top-level scope at none:6
   [12] eval(::Module, ::Any) at ./boot.jl:331
   [13] exec_options(::Base.JLOptions) at ./client.jl:264
   [14] _start() at ./client.jl:484
  
Test Summary:           | Error  Total
cmdstan run and results |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/StanRun/E3YcJ/test/runtests.jl:3
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/StanRun/E3YcJ/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/StanRun/E3YcJ/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package StanRun errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
