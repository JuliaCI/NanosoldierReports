Julia Version 1.5.0-DEV.107
Commit 248bc460bb (2020-01-19 02:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed ArgCheck ─────────── v1.0.1
 Installed DataAPI ──────────── v1.1.0
 Installed Requires ─────────── v1.0.0
 Installed OrderedCollections ─ v1.1.0
 Installed Parameters ───────── v0.12.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed SpecialFunctions ─── v0.9.0
 Installed LazyArrays ───────── v0.14.11
 Installed Missings ─────────── v0.4.3
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed InplaceOps ───────── v0.3.0
 Installed StatsFuns ────────── v0.9.3
 Installed MacroTools ───────── v0.5.3
 Installed ArrayLayouts ─────── v0.1.5
 Installed BinaryProvider ───── v0.5.8
 Installed DataStructures ───── v0.17.9
 Installed StatsBase ────────── v0.32.0
 Installed SortingAlgorithms ── v0.3.1
 Installed Rmath ────────────── v0.6.0
 Installed ProgressMeter ────── v1.2.0
 Installed StaticArrays ─────── v0.12.1
 Installed FillArrays ───────── v0.8.4
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_51MPAy/Project.toml`
 [no changes]
  Updating `/tmp/jl_51MPAy/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed Bijectors ─────────────────── v0.5.2
 Installed ForwardDiff ───────────────── v0.10.9
 Installed SimpleTraits ──────────────── v0.9.1
 Installed Zygote ────────────────────── v0.4.6
 Installed Distributions ─────────────── v0.22.3
 Installed OrdinaryDiffEq ────────────── v5.27.1
 Installed UnicodePlots ──────────────── v1.1.0
 Installed Turing ────────────────────── v0.8.3
 Installed Compat ────────────────────── v2.2.0
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed FunctionWrappers ──────────── v1.0.0
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed CommonSubexpressions ──────── v0.2.0
 Installed TreeViews ─────────────────── v0.3.0
 Installed PositiveFactorizations ────── v0.2.3
 Installed Libtask ───────────────────── v0.3.1
 Installed PooledArrays ──────────────── v0.5.3
 Installed JSON ──────────────────────── v0.21.0
 Installed NNlib ─────────────────────── v0.6.4
 Installed ChainRulesCore ────────────── v0.5.5
 Installed Interpolations ────────────── v0.12.7
 Installed ExponentialUtilities ──────── v1.6.0
 Installed RecipesBase ───────────────── v0.7.0
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed IterTools ─────────────────── v1.3.0
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed IterativeSolvers ──────────── v0.8.1
 Installed Arpack ────────────────────── v0.4.0
 Installed IRTools ───────────────────── v0.3.0
 Installed Polynomials ───────────────── v0.6.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed MuladdMacro ───────────────── v0.2.2
 Installed DiffEqBase ────────────────── v6.12.3
 Installed LightGraphs ───────────────── v1.3.0
 Installed Showoff ───────────────────── v0.3.1
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed Combinatorics ─────────────── v0.7.0
 Installed IntervalSets ──────────────── v0.3.2
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed Tracker ───────────────────── v0.2.6
 Installed TableTraits ───────────────── v1.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed Ratios ────────────────────── v0.3.1
 Installed RecursiveFactorization ────── v0.1.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed DistributionsAD ───────────── v0.2.0
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed Parsers ───────────────────── v0.3.10
 Installed FFTW ──────────────────────── v1.2.0
 Installed ArrayInterface ────────────── v2.3.1
 Installed NLSolversBase ─────────────── v7.5.0
 Installed TransformVariables ────────── v0.3.9
 Installed LineSearches ──────────────── v7.0.1
 Installed Calculus ──────────────────── v0.5.1
 Installed SparseDiffTools ───────────── v1.2.0
 Installed DataFrames ────────────────── v0.20.0
 Installed ZygoteRules ───────────────── v0.2.0
 Installed MCMCChains ────────────────── v1.0.1
 Installed Inflate ───────────────────── v0.1.1
 Installed RangeArrays ───────────────── v0.3.2
 Installed GenericSVD ────────────────── v0.2.2
 Installed DynamicPPL ────────────────── v0.1.1
 Installed DiffResults ───────────────── v1.0.2
 Installed LogDensityProblems ────────── v0.10.1
 Installed Tables ────────────────────── v0.2.11
 Installed QuadGK ────────────────────── v2.3.1
 Installed InvertedIndices ───────────── v1.0.0
 Installed KernelDensity ─────────────── v0.5.1
 Installed Adapt ─────────────────────── v1.0.0
 Installed DiffEqDiffTools ───────────── v1.7.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed Reexport ──────────────────── v0.2.0
 Installed RecursiveArrayTools ───────── v2.0.2
 Installed PDMats ────────────────────── v0.9.10
 Installed Roots ─────────────────────── v0.8.4
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed DocStringExtensions ───────── v0.8.1
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed NaNMath ───────────────────── v0.3.3
 Installed BenchmarkTools ────────────── v0.4.3
 Installed Optim ─────────────────────── v0.19.7
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed DiffRules ─────────────────── v1.0.0
 Installed OffsetArrays ──────────────── v1.0.1
 Installed AxisArrays ────────────────── v0.4.0
  Updating `/tmp/jl_Q2WPg2/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.22.3
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_Q2WPg2/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.0
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [49dc2e85] + Calculus v0.5.1
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.5.5
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.12.3
  [01453d9d] + DiffEqDiffTools v1.7.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.22.3
  [ced4e74d] + DistributionsAD v0.2.0
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.0
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.7
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.1
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.5.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v1.0.1
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.19.7
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [90014a1f] + PDMats v0.9.10
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.2
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.2.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_X41N4o/Project.toml`
 [no changes]
  Updating `/tmp/jl_X41N4o/Manifest.toml`
 [no changes]
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_UVq8bH/Project.toml`
 [no changes]
  Updating `/tmp/jl_UVq8bH/Manifest.toml`
 [no changes]
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_lX95Sb/Project.toml`
 [no changes]
  Updating `/tmp/jl_lX95Sb/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_Q2WPg2/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.22.3
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.27.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.154330054
│   t_steps = 0.01860227
└   t_step / t_steps = 8.296302225481083
Sampling  0%|                               |  ETA: 5:24:29[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.786544725765412
  log_density:                   -12.566779192589221
  hamiltonian_energy:            14.596901448212792
  hamiltonian_energy_error:      0.2654039873559473
  max_hamiltonian_energy_error:  0.34725401936890243
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9
  nom_step_size:                 0.9
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▊                            |  ETA: 0:00:26[K
  iterations:                    1080
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6247505513399167
  log_density:                   -11.420225451998999
  hamiltonian_energy:            16.471264390596275
  hamiltonian_energy_error:      -0.025868325137974324
  max_hamiltonian_energy_error:  0.8158080486061543
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.981477940741653
  nom_step_size:                 0.981477940741653
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0777742971718571, 1.0226 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:22[K
  iterations:                    1305
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8144997879140459
  log_density:                   -12.051328991050475
  hamiltonian_energy:            15.142051017895348
  hamiltonian_energy_error:      0.04108367252783829
  max_hamiltonian_energy_error:  0.371635022053983
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9450646416898334
  nom_step_size:                 0.9450646416898334
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0777742971718571, 1.0226 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|███▉                           |  ETA: 0:00:19[K
  iterations:                    1505
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6227371623486142
  log_density:                   -17.63403095918909
  hamiltonian_energy:            20.439877961475354
  hamiltonian_energy_error:      0.9860168961942897
  max_hamiltonian_energy_error:  0.9860168961942897
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9621646898672047
  nom_step_size:                 0.9621646898672047
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0777742971718571, 1.0226 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:17[K
  iterations:                    1770
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8525663639100844
  log_density:                   -11.491839400930923
  hamiltonian_energy:            15.343581832587809
  hamiltonian_energy_error:      -0.005812757224916254
  max_hamiltonian_energy_error:  0.29429155648094607
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7422352157142571
  nom_step_size:                 0.7422352157142571
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0777742971718571, 1.0226 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████▏                         |  ETA: 0:00:15[K
  iterations:                    1969
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.964107841615177
  log_density:                   -14.445657245729816
  hamiltonian_energy:            19.95094384277978
  hamiltonian_energy_error:      -0.20104215363258504
  max_hamiltonian_energy_error:  -0.3628726427393154
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.7772253364580598
  nom_step_size:                 0.7772253364580598
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▏                        |  ETA: 0:00:13[K
  iterations:                    2358
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8191925843181487
  log_density:                   -15.589545094190262
  hamiltonian_energy:            26.840483622708614
  hamiltonian_energy_error:      -0.23104613118963258
  max_hamiltonian_energy_error:  0.6602525760384772
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████                        |  ETA: 0:00:11[K
  iterations:                    2703
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9372066534221342
  log_density:                   -13.20573014566672
  hamiltonian_energy:            19.148622890418565
  hamiltonian_energy_error:      -0.20768563827704867
  max_hamiltonian_energy_error:  -0.23830220940746472
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████                       |  ETA: 0:00:09[K
  iterations:                    3093
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7069114795860411
  log_density:                   -14.171395596678082
  hamiltonian_energy:            21.458195127354724
  hamiltonian_energy_error:      0.1242788407519555
  max_hamiltonian_energy_error:  0.6932647273760253
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|████████▉                      |  ETA: 0:00:08[K
  iterations:                    3431
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9971600410039959
  log_density:                   -12.458158792478056
  hamiltonian_energy:            19.80490989703533
  hamiltonian_energy_error:      -0.6951891416214906
  max_hamiltonian_energy_error:  -0.7655538341108183
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|█████████▉                     |  ETA: 0:00:08[K
  iterations:                    3800
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.918821361919275
  log_density:                   -15.30026456940157
  hamiltonian_energy:            20.72494621461369
  hamiltonian_energy_error:      -0.1465403567000827
  max_hamiltonian_energy_error:  -0.6178478507791105
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▉                    |  ETA: 0:00:07[K
  iterations:                    4231
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7659437977689347
  log_density:                   -17.447814861050684
  hamiltonian_energy:            20.585517013625815
  hamiltonian_energy_error:      0.5707113396321262
  max_hamiltonian_energy_error:  0.5707113396321262
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▊                   |  ETA: 0:00:06[K
  iterations:                    4554
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8494012991188116
  log_density:                   -14.251671818305756
  hamiltonian_energy:            17.86744187046167
  hamiltonian_energy_error:      0.15451209246364073
  max_hamiltonian_energy_error:  0.3279569458891274
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▉                  |  ETA: 0:00:05[K
  iterations:                    4969
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9859252423298857
  log_density:                   -11.367772506299909
  hamiltonian_energy:            13.065791273639528
  hamiltonian_energy_error:      0.02246914577209047
  max_hamiltonian_energy_error:  0.04398620797876163
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 44%|█████████████▊                 |  ETA: 0:00:05[K
  iterations:                    5311
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8601104706723005
  log_density:                   -11.878778363517018
  hamiltonian_energy:            17.855994753519
  hamiltonian_energy_error:      -0.13164367701918067
  max_hamiltonian_energy_error:  0.3988317176823415
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▋                |  ETA: 0:00:04[K
  iterations:                    5650
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -9.670305969555521
  hamiltonian_energy:            14.384703145237463
  hamiltonian_energy_error:      -0.5862924785772954
  max_hamiltonian_energy_error:  -0.5862924785772954
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▎               |  ETA: 0:00:04[K
  iterations:                    5916
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6277913976351773
  log_density:                   -19.185649970750042
  hamiltonian_energy:            27.984611030633992
  hamiltonian_energy_error:      0.3871160868081809
  max_hamiltonian_energy_error:  0.8675897754616848
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████▎              |  ETA: 0:00:04[K
  iterations:                    6297
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.990797407421077
  log_density:                   -13.937542352679568
  hamiltonian_energy:            18.15158147071182
  hamiltonian_energy_error:      -0.13274662915154067
  max_hamiltonian_energy_error:  -0.30799932681913234
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████▏             |  ETA: 0:00:04[K
  iterations:                    6613
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.891984727402388
  log_density:                   -12.883925315263834
  hamiltonian_energy:            16.35622842732649
  hamiltonian_energy_error:      0.07091412198678881
  max_hamiltonian_energy_error:  0.22457219556491737
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▏            |  ETA: 0:00:03[K
  iterations:                    7033
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9286548326470024
  log_density:                   -13.520609791049843
  hamiltonian_energy:            16.4215863343789
  hamiltonian_energy_error:      0.07583446818710016
  max_hamiltonian_energy_error:  0.23000218287872798
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|███████████████████            |  ETA: 0:00:03[K
  iterations:                    7351
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7828836487720812
  log_density:                   -15.438153953600967
  hamiltonian_energy:            21.451493406172805
  hamiltonian_energy_error:      0.18954161420697702
  max_hamiltonian_energy_error:  0.5803697062109983
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████           |  ETA: 0:00:03[K
  iterations:                    7758
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8462821240388768
  log_density:                   -12.693429297096202
  hamiltonian_energy:            16.393752891708914
  hamiltonian_energy_error:      0.08652965913780619
  max_hamiltonian_energy_error:  0.29721252165652956
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▊          |  ETA: 0:00:02[K
  iterations:                    8012
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9841822579367048
  log_density:                   -14.571118809112068
  hamiltonian_energy:            20.951326222464708
  hamiltonian_energy_error:      -0.28877490674715744
  max_hamiltonian_energy_error:  -0.509461844880267
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▊         |  ETA: 0:00:02[K
  iterations:                    8396
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8183369725880432
  log_density:                   -13.898442834390496
  hamiltonian_energy:            17.975105673599984
  hamiltonian_energy_error:      0.20490052811548765
  max_hamiltonian_energy_error:  0.4158132559035863
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▌        |  ETA: 0:00:02[K
  iterations:                    8710
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.607038913423356
  hamiltonian_energy:            18.519095813507008
  hamiltonian_energy_error:      -0.3819168667263959
  max_hamiltonian_energy_error:  -0.5653159969373256
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▍       |  ETA: 0:00:02[K
  iterations:                    9026
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9989412274587277
  log_density:                   -12.687291020112387
  hamiltonian_energy:            19.86389878668703
  hamiltonian_energy_error:      -0.6433949811598154
  max_hamiltonian_energy_error:  -0.6433949811598154
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████       |  ETA: 0:00:01[K
  iterations:                    9309
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -20.384432937864155
  hamiltonian_energy:            24.452095357775676
  hamiltonian_energy_error:      -0.08307074587001395
  max_hamiltonian_energy_error:  -0.9374259153446047
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▉      |  ETA: 0:00:01[K
  iterations:                    9643
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9441225620325505
  log_density:                   -12.978270945971632
  hamiltonian_energy:            17.267896362302025
  hamiltonian_energy_error:      -0.058269614699490546
  max_hamiltonian_energy_error:  0.12395993632477342
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|█████████████████████████▉     |  ETA: 0:00:01[K
  iterations:                    10040
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.808002420466937
  log_density:                   -13.709059983877376
  hamiltonian_energy:            19.933543672580775
  hamiltonian_energy_error:      0.021018921598603413
  max_hamiltonian_energy_error:  0.3567001210431435
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▊    |  ETA: 0:00:01[K
  iterations:                    10351
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8632713968032737
  log_density:                   -18.014182530721612
  hamiltonian_energy:            23.066996264411173
  hamiltonian_energy_error:      0.209554312971715
  max_hamiltonian_energy_error:  0.3911133301696168
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▋   |  ETA: 0:00:01[K
  iterations:                    10690
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.914137530357559
  log_density:                   -17.77263279034255
  hamiltonian_energy:            20.66621323423541
  hamiltonian_energy_error:      0.2979785099654926
  max_hamiltonian_energy_error:  -0.4165747366792658
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▏  |  ETA: 0:00:01[K
  iterations:                    10885
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9400836365031741
  log_density:                   -14.358548382017696
  hamiltonian_energy:            18.410834108172295
  hamiltonian_energy_error:      0.08391921983924533
  max_hamiltonian_energy_error:  0.12676854068632792
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████  |  ETA: 0:00:00[K
  iterations:                    11246
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7975665668978827
  log_density:                   -12.39038047032571
  hamiltonian_energy:            16.029104043834703
  hamiltonian_energy_error:      0.16111675289159244
  max_hamiltonian_energy_error:  0.46696968409541917
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▉ |  ETA: 0:00:00[K
  iterations:                    11563
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6230728552431012
  log_density:                   -16.714733219262428
  hamiltonian_energy:            18.429901999404617
  hamiltonian_energy_error:      0.6792003193873128
  max_hamiltonian_energy_error:  0.6792003193873128
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 99%|██████████████████████████████▊|  ETA: 0:00:00[K
  iterations:                    11905
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9966836118444281
  log_density:                   -12.669781726740569
  hamiltonian_energy:            16.83663198023293
  hamiltonian_energy_error:      -0.3519691153459199
  max_hamiltonian_energy_error:  -0.5982276503480826
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8718947930354605
  log_density:                   -12.009886783025859
  hamiltonian_energy:            17.06633641990235
  hamiltonian_energy_error:      -0.06951281903735307
  max_hamiltonian_energy_error:  0.2985822202978774
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7069476847569071
  nom_step_size:                 0.7069476847569071
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9976113153219056, 1.0513 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.009623827 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9976113153219056, 1.0513 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.707), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0691162129240475
└   average_acceptance_rate = 0.8665207670780989
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.122753935 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            5 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⢱⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠈⡆│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢄⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⡄⠀⠀⠀⡜⠀⠀⢣│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠉⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠎⠀⠈⠢⠤⠤⠇⠀⠀⠘│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⡠⠤⠤⢄⡀⢀⠤⠒⢄⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⢀⡠⠤⠎⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⢎⣀⣀⣀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢆⠀⠀⠀⠀⡠⡮⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡈⢆⠀⢀⡮⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⢌⡝⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
