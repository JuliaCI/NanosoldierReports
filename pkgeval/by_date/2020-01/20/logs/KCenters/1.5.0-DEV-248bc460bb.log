Julia Version 1.5.0-DEV.107
Commit 248bc460bb (2020-01-19 02:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed DataAPI ───────────────────── v1.1.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed LearnBase ─────────────────── v0.2.2
 Installed Missings ──────────────────── v0.4.3
 Installed KCenters ──────────────────── v0.1.9
 Installed Compat ────────────────────── v3.2.0
 Installed OrderedCollections ────────── v1.1.0
 Installed JSON ──────────────────────── v0.21.0
 Installed TableTraits ───────────────── v1.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataValueInterfaces ───────── v1.0.0
 Installed DataStructures ────────────── v0.17.9
 Installed MLDataUtils ───────────────── v0.5.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Parsers ───────────────────── v0.3.10
 Installed Tables ────────────────────── v0.2.11
 Installed Reexport ──────────────────── v0.2.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed InvertedIndices ───────────── v1.0.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed DataFrames ────────────────── v0.20.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_RWI7Hq/Project.toml`
 [no changes]
  Updating `/tmp/jl_RWI7Hq/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_RWI7Hq/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 122.4900000000001
[ Info: 76.92000000000003
[ Info: 37.09999999999999
[ Info: 29.35999999999998
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999835129265
[ Info: 76.90000120870405
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.173242268068883
inertia(cdnet.distances) = 28.0248967697005
inertia(crand.distances) = 19.564830230472662
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.171875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.171875,"f1":null,"seconds":2.859160304069519e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":4.90625,"distances_sum":505.9065069150655}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7810854076479085,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":7.6328125,"distances_sum":1950.5834921852127}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6572265625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6572265625,"f1":0.7810854076479085,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":7.6328125,"distances_sum":1950.5834921852127}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9274355852480859,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.578125,"distances_sum":2819.607236587083}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9291437728937737,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.53125,"distances_sum":2875.5207727251914}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8584420787545798,"seconds":4.600733518600464e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.2109375,"distances_sum":2379.1236319176155}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9274355852480859,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.578125,"distances_sum":2819.607236587083}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9674336080586083,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.875,"distances_sum":3109.348586899011}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9360665376290384,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.640625,"distances_sum":2910.5690515733854}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9658341658341664,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.84375,"distances_sum":3092.570643750671}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":13,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9727678571428576,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.8203125,"distances_sum":3154.5635002684944}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":13,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9727678571428576,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.8203125,"distances_sum":3154.5635002684944}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":13,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9727678571428576,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.8203125,"distances_sum":3154.5635002684944}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.224609375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.224609375,"f1":null,"seconds":3.4421682357788086e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.5078125,"distances_sum":550.7301751293766}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.224609375,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.224609375,"f1":null,"seconds":3.4421682357788086e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.5078125,"distances_sum":550.7301751293766}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.224609375,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.224609375,"f1":null,"seconds":3.4421682357788086e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.5078125,"distances_sum":550.7301751293766}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.34375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.34375,"f1":null,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":5.828125,"distances_sum":818.1384252480881}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.34375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.34375,"f1":null,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":5.828125,"distances_sum":818.1384252480881}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.515625,"f1":null,"seconds":4.22261655330658e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.0234375,"distances_sum":1191.776621715738}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.879347215284716,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.546875,"distances_sum":1982.9721471377013}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7978515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7978515625,"f1":0.879347215284716,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.546875,"distances_sum":1982.9721471377013}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9593406593406596,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8125,"distances_sum":2519.6891581762384}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9453010531135537,"seconds":8.199363946914673e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.796875,"distances_sum":2410.315814523667}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9110379204129211,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.5,"distances_sum":2177.746717583355}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9593406593406596,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8125,"distances_sum":2519.6891581762384}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9593406593406596,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8125,"distances_sum":2519.6891581762384}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8101313616938627,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":7.9140625,"distances_sum":1697.352261245622}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.69921875,"f1":0.8101313616938627,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":7.9140625,"distances_sum":1697.352261245622}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8950721153846161,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.2890625,"distances_sum":2142.15780434584}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.826171875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.826171875,"f1":0.8950721153846161,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.2890625,"distances_sum":2142.15780434584}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9519402472527476,"seconds":6.334856152534485e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.71875,"distances_sum":2477.798603463036}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9579670329670334,"seconds":6.450340151786804e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.8125,"distances_sum":2493.3304391137776}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9579670329670334,"seconds":6.450340151786804e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.8125,"distances_sum":2493.3304391137776}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9579670329670334,"seconds":6.450340151786804e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.8125,"distances_sum":2493.3304391137776}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8678202006327015,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.4609375,"distances_sum":1867.6897326509088}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3935546875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3935546875,"f1":null,"seconds":4.4014304876327515e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":7.265625,"distances_sum":877.8930514510505}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5908203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5908203125,"f1":0.7290691946941954,"seconds":5.025416612625122e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":7.765625,"distances_sum":1306.9979303503778}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8678202006327015,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.4609375,"distances_sum":1867.6897326509088}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9533539377289383,"seconds":6.854534149169922e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.8046875,"distances_sum":2357.3215645117725}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9394860347985352,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.703125,"distances_sum":2249.4204252564195}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9408570596070601,"seconds":6.319954991340637e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.65625,"distances_sum":2239.4321963189795}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9533539377289383,"seconds":6.854534149169922e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.8046875,"distances_sum":2357.3215645117725}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.968641254578755,"seconds":6.712973117828369e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.890625,"distances_sum":2441.008504591084}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9789491758241761,"seconds":6.776303052902222e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.9609375,"distances_sum":2529.0012976011694}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758012820512822,"seconds":6.910413503646851e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.96875,"distances_sum":2485.792816971889}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9640682234432241,"seconds":6.910413503646851e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.90625,"distances_sum":2400.7340386521882}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9551427738927742,"seconds":6.919726729393005e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.828125,"distances_sum":2378.3403377877817}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9789491758241761,"seconds":6.776303052902222e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.9609375,"distances_sum":2529.0012976011694}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9789491758241761,"seconds":6.776303052902222e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.9609375,"distances_sum":2529.0012976011694}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6917166167166172,"seconds":4.976987838745117e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":7.1796875,"distances_sum":1301.8069999254571}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.55078125,"f1":0.6917166167166172,"seconds":4.976987838745117e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":7.1796875,"distances_sum":1301.8069999254571}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8665069305694313,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.0546875,"distances_sum":1962.1561995920224}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8578255078255085,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.0,"distances_sum":1964.7048958061055}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8085062506937514,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":7.9921875,"distances_sum":1747.255378342078}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8665069305694313,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.0546875,"distances_sum":1962.1561995920224}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.8990160880785889,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.1015625,"distances_sum":2273.4000391675067}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9365441849816855,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.546875,"distances_sum":2449.212112973896}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9316022519147525,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.6171875,"distances_sum":2414.931984619711}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9365441849816855,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.546875,"distances_sum":2449.212112973896}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9365441849816855,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.546875,"distances_sum":2449.212112973896}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8027092698967707,"seconds":4.580244421958923e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.1796875,"distances_sum":1665.7612744653325}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6875,"f1":0.8027092698967707,"seconds":4.580244421958923e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.1796875,"distances_sum":1665.7612744653325}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9477964743589748,"seconds":0.00013109296560287476,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.7734375,"distances_sum":2494.4513456520212}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9477964743589748,"seconds":0.00013109296560287476,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.7734375,"distances_sum":2494.4513456520212}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9659455128205132,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.8671875,"distances_sum":2588.486893255226}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659455128205132,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.8671875,"distances_sum":2588.486893255226}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659455128205132,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.8671875,"distances_sum":2588.486893255226}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8573910464535474,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.578125,"distances_sum":1898.0092691924522}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7091802294927301,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.0,"distances_sum":1326.2016635289033}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8573910464535474,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.578125,"distances_sum":1898.0092691924522}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9208307317682326,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.78125,"distances_sum":2252.6347376467684}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9032368672993678,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.59375,"distances_sum":2163.486643123235}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9126805486180491,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6484375,"distances_sum":2203.0423541501495}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8662109375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8662109375,"f1":0.9208307317682326,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.78125,"distances_sum":2252.6347376467684}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9626144688644693,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.890625,"distances_sum":2516.448839737361}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9630666208791214,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9140625,"distances_sum":2505.701928784742}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9546531593406598,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.890625,"distances_sum":2481.306188168725}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9689019314019317,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.890625,"distances_sum":2581.1228082101075}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9689019314019317,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.890625,"distances_sum":2581.1228082101075}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9689019314019317,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.890625,"distances_sum":2581.1228082101075}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8474681568431575,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.28125,"distances_sum":1864.9218463558304}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5830078125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5830078125,"f1":0.7154442779442786,"seconds":4.518777132034302e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.6640625,"distances_sum":1388.9133106532627}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.0078125,"distances_sum":496.012549043742}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.835294913419914,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.078125,"distances_sum":1854.0087179599839}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8474681568431575,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.28125,"distances_sum":1864.9218463558304}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8887690434565443,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.265625,"distances_sum":2133.576153732573}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9463635323010329,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.71875,"distances_sum":2460.6064015290085}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8567671911421921,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.25,"distances_sum":1914.2232062168564}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.8968302530802538,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.40625,"distances_sum":2164.538159064778}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9463635323010329,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.71875,"distances_sum":2460.6064015290085}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9780505952380956,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9296875,"distances_sum":2631.4329854772755}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9767685439560443,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8515625,"distances_sum":2642.7994019073603}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9575778388278394,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7890625,"distances_sum":2508.746759991554}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9569826007326012,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8203125,"distances_sum":2494.3814924313006}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9780505952380956,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9296875,"distances_sum":2631.4329854772755}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9780505952380956,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9296875,"distances_sum":2631.4329854772755}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7060546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7060546875,"f1":0.8134806166056174,"seconds":4.693865776062012e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.25,"distances_sum":1723.7910973570868}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7060546875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7060546875,"f1":0.8134806166056174,"seconds":4.693865776062012e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.25,"distances_sum":1723.7910973570868}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9576522435897443,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.734375,"distances_sum":2548.2494124231175}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9576522435897443,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.734375,"distances_sum":2548.2494124231175}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.968475274725275,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2601.6306853526335}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968475274725275,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2601.6306853526335}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968475274725275,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2601.6306853526335}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.63960862159729e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.9453125,"distances_sum":531.6029472157398}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8622055028305038,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.3046875,"distances_sum":1968.097573965608}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8622055028305038,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.3046875,"distances_sum":1968.097573965608}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9597527472527478,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8671875,"distances_sum":2568.895927887667}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9597527472527478,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8671875,"distances_sum":2568.895927887667}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9772722069597072,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9140625,"distances_sum":2682.080006194778}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9769745879120881,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2671.5010121631967}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9772722069597072,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9140625,"distances_sum":2682.080006194778}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9772722069597072,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9140625,"distances_sum":2682.080006194778}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4052734375,"f1":null,"seconds":3.6675482988357544e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.7265625,"distances_sum":930.6790920237152}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1796875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1796875,"f1":null,"seconds":3.164634108543396e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.0078125,"distances_sum":417.90038884839583}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8063353313353321,"seconds":4.542991518974304e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7265625,"distances_sum":1668.782346999048}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.8063353313353321,"seconds":4.542991518974304e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7265625,"distances_sum":1668.782346999048}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9459909881784887,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.671875,"distances_sum":2431.1130569304673}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8944206834831842,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.1875,"distances_sum":2126.766037538357}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9459909881784887,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.671875,"distances_sum":2431.1130569304673}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758928571428576,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8828125,"distances_sum":2597.272028390069}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9560897435897442,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8046875,"distances_sum":2470.6977664589726}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9716346153846157,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8984375,"distances_sum":2562.0013214655096}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758928571428576,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8828125,"distances_sum":2597.272028390069}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758928571428576,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8828125,"distances_sum":2597.272028390069}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8472203144078152,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.328125,"distances_sum":1798.980504874715}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8472203144078152,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.328125,"distances_sum":1798.980504874715}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9069711538461545,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.625,"distances_sum":2093.7039261243385}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519974816849822,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8515625,"distances_sum":2402.5751177458533}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9519974816849822,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8515625,"distances_sum":2402.5751177458533}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.976842948717949,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9375,"distances_sum":2554.1990878917304}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9682119963369966,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8984375,"distances_sum":2507.7404835187754}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.966872710622711,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9140625,"distances_sum":2495.4217253425045}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9521634615384621,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8828125,"distances_sum":2398.6543079179733}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.976842948717949,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9375,"distances_sum":2554.1990878917304}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.976842948717949,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9375,"distances_sum":2554.1990878917304}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.798953477078478,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.8046875,"distances_sum":1241.267493665345}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8640198343323352,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.1875,"distances_sum":1394.8213296370557}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8640198343323352,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.1875,"distances_sum":1394.8213296370557}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9413576007326012,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.734375,"distances_sum":1803.7223358092872}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9057322885447894,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.625,"distances_sum":1637.8240277129964}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.943149038461539,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7421875,"distances_sum":1835.4882051967566}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.943149038461539,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7421875,"distances_sum":1835.4882051967566}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9601991758241765,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8125,"distances_sum":1934.720694074312}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.963472985347986,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.796875,"distances_sum":1981.1321924600688}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.965979853479854,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.875,"distances_sum":1966.2083058634869}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9705757783882787,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":1973.3933720779582}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9571714743589749,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8125,"distances_sum":1927.574384668998}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9705757783882787,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":1973.3933720779582}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9705757783882787,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":1973.3933720779582}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5478515625,"f1":null,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.1328125,"distances_sum":1042.2665939197118}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.435546875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.435546875,"f1":null,"seconds":3.7439167499542236e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.234375,"distances_sum":760.9111050634037}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5478515625,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5478515625,"f1":null,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.1328125,"distances_sum":1042.2665939197118}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7902602605727614,"seconds":4.552304744720459e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.515625,"distances_sum":1307.449118788186}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5546875,"f1":null,"seconds":4.395842552185059e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.1640625,"distances_sum":1016.493824000384}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6689453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6689453125,"f1":0.7902602605727614,"seconds":4.552304744720459e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.515625,"distances_sum":1307.449118788186}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9463770604395612,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8125,"distances_sum":2014.3756829636604}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9154163544788549,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.6875,"distances_sum":1859.9456310854873}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8688878829503839,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.140625,"distances_sum":1543.3176772719394}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9017430486180493,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.515625,"distances_sum":1727.796443528689}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9463770604395612,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8125,"distances_sum":2014.3756829636604}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9463770604395612,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8125,"distances_sum":2014.3756829636604}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8745166292041301,"seconds":4.8782676458358765e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.1796875,"distances_sum":1577.7332817341132}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5263671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5263671875,"f1":null,"seconds":4.231929779052734e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.8671875,"distances_sum":953.0318073203767}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3798828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3798828125,"f1":null,"seconds":3.648921847343445e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.796875,"distances_sum":709.2111610198002}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8745166292041301,"seconds":4.8782676458358765e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.1796875,"distances_sum":1577.7332817341132}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9272638819513825,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6796875,"distances_sum":1898.933325836046}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.903133845321346,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.53125,"distances_sum":1800.955397969751}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9007268772893781,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.421875,"distances_sum":1744.6264176094166}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9272638819513825,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6796875,"distances_sum":1898.933325836046}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9484603937728945,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7109375,"distances_sum":2068.9456542959715}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9704644314019315,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9296875,"distances_sum":2162.0944861118755}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9662030677655681,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9140625,"distances_sum":2121.4858637275493}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9704644314019315,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9296875,"distances_sum":2162.0944861118755}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9704644314019315,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9296875,"distances_sum":2162.0944861118755}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.0625,"distances_sum":700.5761721708528}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.854321026196027,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.9140625,"distances_sum":1405.8385569302225}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.854321026196027,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.9140625,"distances_sum":1405.8385569302225}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9202125999001008,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.25,"distances_sum":1691.489803256774}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9521291208791214,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7421875,"distances_sum":1915.7774002427218}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9521291208791214,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7421875,"distances_sum":1915.7774002427218}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9682864010989016,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8515625,"distances_sum":2017.0373660289918}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9729166666666669,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2048.8258801007646}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9729166666666669,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2048.8258801007646}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9729166666666669,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2048.8258801007646}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8130999209124218,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.0546875,"distances_sum":1331.745460300339}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5419921875,"f1":0.6878036893661899,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.2734375,"distances_sum":974.9671295912292}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5439453125,"f1":0.6878108003108009,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.2578125,"distances_sum":1024.2555866031246}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7001953125,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.7001953125,"f1":0.8130999209124218,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.0546875,"distances_sum":1331.745460300339}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8963229478854488,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.3203125,"distances_sum":1650.7406385402824}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8624916749916758,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.9140625,"distances_sum":1508.6964357013858}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9148185148185155,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.453125,"distances_sum":1717.8646824740576}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8787977647352656,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.2421875,"distances_sum":1569.3851135884565}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8525390625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8525390625,"f1":0.9148185148185155,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.453125,"distances_sum":1717.8646824740576}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9702609890109892,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.953125,"distances_sum":2086.1509174819057}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9377461080586088,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.8828125,"distances_sum":1867.294044210002}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9516998626373631,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.875,"distances_sum":1991.5853540651278}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9702609890109892,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.953125,"distances_sum":2086.1509174819057}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9702609890109892,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.953125,"distances_sum":2086.1509174819057}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.255859375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.255859375,"f1":null,"seconds":3.553926944732666e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.1953125,"distances_sum":477.41502505360216}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.43359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.43359375,"f1":null,"seconds":3.9637088775634766e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.4453125,"distances_sum":746.8384413895693}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8070783383283392,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.8203125,"distances_sum":1318.4492506852255}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.689453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.689453125,"f1":0.8070783383283392,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.8203125,"distances_sum":1318.4492506852255}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8696922868797878,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.0,"distances_sum":1520.6068650828279}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.898549367299368,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.3359375,"distances_sum":1642.9375097678267}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9223157051282059,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7734375,"distances_sum":1785.4307705833965}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9033346861471869,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.390625,"distances_sum":1710.1247356313725}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8138054653679662,"seconds":4.8745423555374146e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.8046875,"distances_sum":1334.4634699817018}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8642578125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8642578125,"f1":0.9223157051282059,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7734375,"distances_sum":1785.4307705833965}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9228740009990017,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7734375,"distances_sum":1804.3505507267037}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9662946428571433,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.890625,"distances_sum":2098.3202980322394}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9515853937728943,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7890625,"distances_sum":2031.2545787475135}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9480368589743594,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7578125,"distances_sum":2004.790685933825}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9460482226107231,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.765625,"distances_sum":1995.6480120463682}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628205128205134,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.875,"distances_sum":2064.5187141625493}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662946428571433,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.890625,"distances_sum":2098.3202980322394}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662946428571433,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.890625,"distances_sum":2098.3202980322394}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.400390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.400390625,"f1":null,"seconds":3.822147846221924e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.1953125,"distances_sum":740.929670023543}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.400390625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.400390625,"f1":null,"seconds":3.822147846221924e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.1953125,"distances_sum":740.929670023543}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8074732559107568,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.828125,"distances_sum":1353.3086803275294}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7138671875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.7138671875,"f1":0.8210893273393283,"seconds":4.969537258148193e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.0078125,"distances_sum":1404.2464513280665}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7138671875,"state":{"ssize":6,"bsize":4},"perf":{"precision":1.0,"recall":0.7138671875,"f1":0.8210893273393283,"seconds":4.969537258148193e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.0078125,"distances_sum":1404.2464513280665}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9520547161172165,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8125,"distances_sum":2053.012043036169}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9465144230769237,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.75,"distances_sum":2052.3841020628447}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8941053737928746,"seconds":4.973262548446655e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.328125,"distances_sum":1688.3991802043822}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9500801282051287,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7421875,"distances_sum":2065.374588239365}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9491872710622717,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.796875,"distances_sum":2059.4991910805875}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9520547161172165,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8125,"distances_sum":2053.012043036169}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9520547161172165,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8125,"distances_sum":2053.012043036169}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.55078125,"f1":null,"seconds":4.526227712631226e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.3125,"distances_sum":1007.3809891293156}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.55078125,"f1":null,"seconds":4.526227712631226e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.3125,"distances_sum":1007.3809891293156}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8027335511710519,"seconds":4.779547452926636e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.7890625,"distances_sum":1327.752151153321}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6875,"f1":0.8027335511710519,"seconds":4.779547452926636e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.7890625,"distances_sum":1327.752151153321}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9426968864468868,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.7265625,"distances_sum":1973.7732609969294}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9480540293040299,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.671875,"distances_sum":2041.9973952723306}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8990873709623717,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.515625,"distances_sum":1683.9479160774652}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9340487637362643,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.734375,"distances_sum":1868.5628603111068}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9480540293040299,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.671875,"distances_sum":2041.9973952723306}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.908203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9480540293040299,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.671875,"distances_sum":2041.9973952723306}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8131914960039968,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.2421875,"distances_sum":1462.9896570622793}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.24609375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.24609375,"f1":null,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.5859375,"distances_sum":502.15217618130174}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7001953125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7001953125,"f1":0.8131914960039968,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.2421875,"distances_sum":1462.9896570622793}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8580102189477198,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.3515625,"distances_sum":1599.2974098680586}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8580102189477198,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.3515625,"distances_sum":1599.2974098680586}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9375972985347991,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9375,"distances_sum":2008.1538530279122}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8838775807525813,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.625,"distances_sum":1715.7605441892053}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9375972985347991,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9375,"distances_sum":2008.1538530279122}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.888671875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9375972985347991,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9375,"distances_sum":2008.1538530279122}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23828125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.23828125,"f1":null,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":5.671875,"distances_sum":458.809487610639}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8807322885447896,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.9765625,"distances_sum":1598.2528846382945}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.724609375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.724609375,"f1":0.8287847569097577,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.5390625,"distances_sum":1387.579920096455}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7978515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7978515625,"f1":0.8807322885447896,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.9765625,"distances_sum":1598.2528846382945}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9240670787545795,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.71875,"distances_sum":1792.3747088701016}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8793586621711632,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.421875,"distances_sum":1611.4675852180196}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9387019230769236,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.7265625,"distances_sum":1880.9650511775467}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9387019230769236,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.7265625,"distances_sum":1880.9650511775467}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.97011217948718,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.890625,"distances_sum":2044.8591630784115}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9636618589743595,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.84375,"distances_sum":2026.970491022301}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.97011217948718,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.890625,"distances_sum":2044.8591630784115}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.97011217948718,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.890625,"distances_sum":2044.8591630784115}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3291015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3291015625,"f1":null,"seconds":3.6973506212234497e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.1171875,"distances_sum":666.5302786732493}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8468245296370304,"seconds":6.930902600288391e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.140625,"distances_sum":1461.2227647987988}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8468245296370304,"seconds":6.930902600288391e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.140625,"distances_sum":1461.2227647987988}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9011217948717956,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.53125,"distances_sum":1665.7207498747616}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9476419413919419,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6953125,"distances_sum":1890.1758748564444}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9557291666666672,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7734375,"distances_sum":1939.031213995858}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8511337620712629,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.109375,"distances_sum":1470.3063591902956}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9557291666666672,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7734375,"distances_sum":1939.031213995858}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9643486721611725,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.90625,"distances_sum":1966.5120615032597}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9604567307692311,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.828125,"distances_sum":1955.3181777602897}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9643486721611725,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.90625,"distances_sum":1966.5120615032597}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9643486721611725,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.90625,"distances_sum":1966.5120615032597}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8044549200799209,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.6484375,"distances_sum":1273.2025025413814}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.357421875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.357421875,"f1":null,"seconds":3.7830322980880737e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.75,"distances_sum":644.6520622234868}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6884765625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6884765625,"f1":0.8044549200799209,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.6484375,"distances_sum":1273.2025025413814}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.871197032134533,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.2890625,"distances_sum":1564.0235902764946}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.871197032134533,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.2890625,"distances_sum":1564.0235902764946}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.932119963369964,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7109375,"distances_sum":1853.3516784297099}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9093723984348994,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.453125,"distances_sum":1785.6256484899832}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9417868589743594,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7265625,"distances_sum":1937.7895811404703}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9114354395604404,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.5234375,"distances_sum":1741.57838640251}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9141145313020321,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.703125,"distances_sum":1788.9048199414178}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9417868589743594,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7265625,"distances_sum":1937.7895811404703}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8974609375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9417868589743594,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7265625,"distances_sum":1937.7895811404703}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8373610764235773,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.2421875,"distances_sum":1443.0811235478352}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7353515625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7353515625,"f1":0.8373610764235773,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.2421875,"distances_sum":1443.0811235478352}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8708629911754919,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.421875,"distances_sum":1568.1192414479099}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9074092574092583,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.5625,"distances_sum":1702.8045244419645}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.84375,"f1":0.9074092574092583,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.5625,"distances_sum":1702.8045244419645}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.912666500166501,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.671875,"distances_sum":1716.7866152649192}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9565533424908428,"seconds":6.0908496379852295e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8203125,"distances_sum":2001.2179099910786}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9297733516483525,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8046875,"distances_sum":1830.5653363398428}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9455471611721618,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7578125,"distances_sum":1943.6093945637608}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9565533424908428,"seconds":6.0908496379852295e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8203125,"distances_sum":2001.2179099910786}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9565533424908428,"seconds":6.0908496379852295e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8203125,"distances_sum":2001.2179099910786}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8117340992341,"seconds":4.9658119678497314e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.8203125,"distances_sum":1418.0013116212297}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":3.606081008911133e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.2109375,"distances_sum":489.4872394913319}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2265625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2265625,"f1":null,"seconds":3.5315752029418945e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.09375,"distances_sum":475.81283566696465}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.697265625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.697265625,"f1":0.8117340992341,"seconds":4.9658119678497314e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.8203125,"distances_sum":1418.0013116212297}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.870435814185815,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.4921875,"distances_sum":1642.0958424120665}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9450091575091578,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8359375,"distances_sum":2011.0926350702234}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8657743298368308,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.578125,"distances_sum":1646.6101487870267}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8574925074925083,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.4296875,"distances_sum":1544.0976069625956}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9450091575091578,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8359375,"distances_sum":2011.0926350702234}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.959380723443224,"seconds":6.543472409248352e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.84375,"distances_sum":2146.2337084666015}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752060439560446,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9375,"distances_sum":2209.253754838001}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752060439560446,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9375,"distances_sum":2209.253754838001}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752060439560446,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9375,"distances_sum":2209.253754838001}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.201171875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.201171875,"f1":null,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":5.2734375,"distances_sum":471.01654858989895}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.201171875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.201171875,"f1":null,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":5.2734375,"distances_sum":471.01654858989895}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8585424991674999,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.3671875,"distances_sum":1579.1744938757952}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8134350024975031,"seconds":4.7460198402404785e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.0390625,"distances_sum":1421.4321268710776}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8585424991674999,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.3671875,"distances_sum":1579.1744938757952}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9267258782883789,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7265625,"distances_sum":1997.2181051820519}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.944522664835165,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7421875,"distances_sum":2116.2344653198124}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9112554112554121,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7734375,"distances_sum":1885.8693207238546}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.944522664835165,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7421875,"distances_sum":2116.2344653198124}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9710222069597072,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9296875,"distances_sum":2232.5691385210275}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9729395604395608,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.921875,"distances_sum":2264.9396579653085}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9773065476190481,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.953125,"distances_sum":2283.4160873476158}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773065476190481,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.953125,"distances_sum":2283.4160873476158}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773065476190481,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.953125,"distances_sum":2283.4160873476158}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8515068265068273,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.1953125,"distances_sum":1781.6528657999377}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8515068265068273,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.1953125,"distances_sum":1781.6528657999377}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9506581959706963,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.796875,"distances_sum":2273.3634906834454}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9174049908424914,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.703125,"distances_sum":2028.556816745782}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9506581959706963,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.796875,"distances_sum":2273.3634906834454}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":11,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.966317536630037,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8359375,"distances_sum":2409.165219964808}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.965052655677656,"seconds":4.507601261138916e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9296875,"distances_sum":2346.902746488676}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":11,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.966317536630037,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8359375,"distances_sum":2409.165219964808}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":11,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.966317536630037,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8359375,"distances_sum":2409.165219964808}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3671875,"f1":null,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":5.609375,"distances_sum":803.8914723960636}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7834772866022874,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.953125,"distances_sum":1396.299517821882}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.7834772866022874,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.953125,"distances_sum":1396.299517821882}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9407337454212458,"seconds":6.495043635368347e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8203125,"distances_sum":2241.269427400144}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9407337454212458,"seconds":6.495043635368347e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8203125,"distances_sum":2241.269427400144}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.966243131868132,"seconds":6.973743438720703e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9140625,"distances_sum":2403.011723693299}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9692193223443227,"seconds":6.735324859619141e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8984375,"distances_sum":2429.8488526874667}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9733115842490847,"seconds":6.727874279022217e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.953125,"distances_sum":2448.486092651485}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9686011904761911,"seconds":6.673857569694519e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9375,"distances_sum":2408.397687425274}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9733115842490847,"seconds":6.727874279022217e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.953125,"distances_sum":2448.486092651485}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9733115842490847,"seconds":6.727874279022217e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.953125,"distances_sum":2448.486092651485}}, n: 9
inertia(cfft.distances) = 20.4547321700039
inertia(cdnet.distances) = 23.857030511155507
inertia(crand.distances) = 21.5961576086722
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9333333333333332
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9488888888888889
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.94
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666666
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8822222222222224
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9066666666666666
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9244444444444445
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9133333333333332
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 3, 1, 3, 1, 3, 2, 2, 1, 3, 3, 1, 2, 3, 3, 2, 3, 3, 2, 3, 1]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 10, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 3, 2, 1, 2, 3, 1, 2, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.31080000508349637] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31080000508349637, 0.16519010918196053] ***
*** starting iteration: 2; err: [Inf, 0.31080000508349637, 0.16519010918196053] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31080000508349637, 0.16519010918196053, 0.15792258043901602] ***
*** starting iteration: 3; err: [Inf, 0.31080000508349637, 0.16519010918196053, 0.15792258043901602] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31080000508349637, 0.16519010918196053, 0.15792258043901602, 0.15506145627199844] ***
*** starting iteration: 4; err: [Inf, 0.31080000508349637, 0.16519010918196053, 0.15792258043901602, 0.15506145627199844] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31080000508349637, 0.16519010918196053, 0.15792258043901602, 0.15506145627199844, 0.154329547573849] ***
*** finished computation of 12 references, err: [Inf, 0.31080000508349637, 0.16519010918196053, 0.15792258043901602, 0.15506145627199844, 0.154329547573849] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 8, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 9: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 10, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 12, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
finished with 15 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 2.5550236377853595] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5550236377853595, 0.6492925292082162] ***
*** starting iteration: 2; err: [Inf, 2.5550236377853595, 0.6492925292082162] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5550236377853595, 0.6492925292082162, 0.6438366049145194] ***
*** starting iteration: 3; err: [Inf, 2.5550236377853595, 0.6492925292082162, 0.6438366049145194] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5550236377853595, 0.6492925292082162, 0.6438366049145194, 0.6438366049145194] ***
*** finished computation of 3 references, err: [Inf, 2.5550236377853595, 0.6492925292082162, 0.6438366049145194, 0.6438366049145194] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 32]]
** centroid: 1, normalized-entropy: 0.9985532860835362, [(2, 35), (3, 32)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [17, 1, 0]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(1, 17), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.42650762751947086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42650762751947086, 0.16512469792749043] ***
*** starting iteration: 2; err: [Inf, 0.42650762751947086, 0.16512469792749043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42650762751947086, 0.16512469792749043, 0.15547494014754806] ***
*** starting iteration: 3; err: [Inf, 0.42650762751947086, 0.16512469792749043, 0.15547494014754806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42650762751947086, 0.16512469792749043, 0.15547494014754806, 0.15346457249770404] ***
*** starting iteration: 4; err: [Inf, 0.42650762751947086, 0.16512469792749043, 0.15547494014754806, 0.15346457249770404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42650762751947086, 0.16512469792749043, 0.15547494014754806, 0.15346457249770404, 0.15346457249770404] ***
*** finished computation of 7 references, err: [Inf, 0.42650762751947086, 0.16512469792749043, 0.15547494014754806, 0.15346457249770404, 0.15346457249770404] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 9]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.376335070581807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.376335070581807, 0.17519340131367844] ***
*** starting iteration: 2; err: [Inf, 0.376335070581807, 0.17519340131367844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.376335070581807, 0.17519340131367844, 0.16438363698799854] ***
*** starting iteration: 3; err: [Inf, 0.376335070581807, 0.17519340131367844, 0.16438363698799854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.376335070581807, 0.17519340131367844, 0.16438363698799854, 0.16389150387927884] ***
*** finished computation of 7 references, err: [Inf, 0.376335070581807, 0.17519340131367844, 0.16438363698799854, 0.16389150387927884] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 15, 4]]
** centroid: 7, normalized-entropy: 0.7424875695421234, [(2, 15), (3, 4)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43675750436708904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43675750436708904, 0.23575832518418707] ***
*** starting iteration: 2; err: [Inf, 0.43675750436708904, 0.23575832518418707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43675750436708904, 0.23575832518418707, 0.2202932887369213] ***
*** starting iteration: 3; err: [Inf, 0.43675750436708904, 0.23575832518418707, 0.2202932887369213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43675750436708904, 0.23575832518418707, 0.2202932887369213, 0.2068164298830734] ***
*** starting iteration: 4; err: [Inf, 0.43675750436708904, 0.23575832518418707, 0.2202932887369213, 0.2068164298830734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43675750436708904, 0.23575832518418707, 0.2202932887369213, 0.2068164298830734, 0.19885578168181794] ***
*** starting iteration: 5; err: [Inf, 0.43675750436708904, 0.23575832518418707, 0.2202932887369213, 0.2068164298830734, 0.19885578168181794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43675750436708904, 0.23575832518418707, 0.2202932887369213, 0.2068164298830734, 0.19885578168181794, 0.19716700593774944] ***
*** starting iteration: 6; err: [Inf, 0.43675750436708904, 0.23575832518418707, 0.2202932887369213, 0.2068164298830734, 0.19885578168181794, 0.19716700593774944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43675750436708904, 0.23575832518418707, 0.2202932887369213, 0.2068164298830734, 0.19885578168181794, 0.19716700593774944, 0.1958145252134199] ***
*** starting iteration: 7; err: [Inf, 0.43675750436708904, 0.23575832518418707, 0.2202932887369213, 0.2068164298830734, 0.19885578168181794, 0.19716700593774944, 0.1958145252134199] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43675750436708904, 0.23575832518418707, 0.2202932887369213, 0.2068164298830734, 0.19885578168181794, 0.19716700593774944, 0.1958145252134199, 0.1955093450022203] ***
*** finished computation of 7 references, err: [Inf, 0.43675750436708904, 0.23575832518418707, 0.2202932887369213, 0.2068164298830734, 0.19885578168181794, 0.19716700593774944, 0.1958145252134199, 0.1955093450022203] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 19]]
** centroid: 1, normalized-entropy: 0.9480782435939054, [(2, 11), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 15, 2]]
** centroid: 5, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 6: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38330137935004704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38330137935004704, 0.17320587788303976] ***
*** starting iteration: 2; err: [Inf, 0.38330137935004704, 0.17320587788303976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38330137935004704, 0.17320587788303976, 0.16234586279433427] ***
*** starting iteration: 3; err: [Inf, 0.38330137935004704, 0.17320587788303976, 0.16234586279433427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38330137935004704, 0.17320587788303976, 0.16234586279433427, 0.15648392677567588] ***
*** starting iteration: 4; err: [Inf, 0.38330137935004704, 0.17320587788303976, 0.16234586279433427, 0.15648392677567588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38330137935004704, 0.17320587788303976, 0.16234586279433427, 0.15648392677567588, 0.15509257301668597] ***
*** starting iteration: 5; err: [Inf, 0.38330137935004704, 0.17320587788303976, 0.16234586279433427, 0.15648392677567588, 0.15509257301668597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38330137935004704, 0.17320587788303976, 0.16234586279433427, 0.15648392677567588, 0.15509257301668597, 0.15456736148318131] ***
*** finished computation of 7 references, err: [Inf, 0.38330137935004704, 0.17320587788303976, 0.16234586279433427, 0.15648392677567588, 0.15509257301668597, 0.15456736148318131] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 13, 9]]
** centroid: 7, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34376495398897733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34376495398897733, 0.18153345331244605] ***
*** starting iteration: 2; err: [Inf, 0.34376495398897733, 0.18153345331244605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34376495398897733, 0.18153345331244605, 0.17212798550057978] ***
*** starting iteration: 3; err: [Inf, 0.34376495398897733, 0.18153345331244605, 0.17212798550057978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34376495398897733, 0.18153345331244605, 0.17212798550057978, 0.16332236443388623] ***
*** starting iteration: 4; err: [Inf, 0.34376495398897733, 0.18153345331244605, 0.17212798550057978, 0.16332236443388623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34376495398897733, 0.18153345331244605, 0.17212798550057978, 0.16332236443388623, 0.16325994381804598] ***
*** finished computation of 7 references, err: [Inf, 0.34376495398897733, 0.18153345331244605, 0.17212798550057978, 0.16332236443388623, 0.16325994381804598] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 4]]
** centroid: 7, normalized-entropy: 0.7424875695421234, [(2, 15), (3, 4)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3821577241430759] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3821577241430759, 0.2232247366361429] ***
*** starting iteration: 2; err: [Inf, 0.3821577241430759, 0.2232247366361429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3821577241430759, 0.2232247366361429, 0.20721383878304164] ***
*** starting iteration: 3; err: [Inf, 0.3821577241430759, 0.2232247366361429, 0.20721383878304164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3821577241430759, 0.2232247366361429, 0.20721383878304164, 0.1948412324958034] ***
*** starting iteration: 4; err: [Inf, 0.3821577241430759, 0.2232247366361429, 0.20721383878304164, 0.1948412324958034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3821577241430759, 0.2232247366361429, 0.20721383878304164, 0.1948412324958034, 0.18738900505345824] ***
*** starting iteration: 5; err: [Inf, 0.3821577241430759, 0.2232247366361429, 0.20721383878304164, 0.1948412324958034, 0.18738900505345824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3821577241430759, 0.2232247366361429, 0.20721383878304164, 0.1948412324958034, 0.18738900505345824, 0.18529287634213326] ***
*** starting iteration: 6; err: [Inf, 0.3821577241430759, 0.2232247366361429, 0.20721383878304164, 0.1948412324958034, 0.18738900505345824, 0.18529287634213326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3821577241430759, 0.2232247366361429, 0.20721383878304164, 0.1948412324958034, 0.18738900505345824, 0.18529287634213326, 0.18288334775115517] ***
*** starting iteration: 7; err: [Inf, 0.3821577241430759, 0.2232247366361429, 0.20721383878304164, 0.1948412324958034, 0.18738900505345824, 0.18529287634213326, 0.18288334775115517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3821577241430759, 0.2232247366361429, 0.20721383878304164, 0.1948412324958034, 0.18738900505345824, 0.18529287634213326, 0.18288334775115517, 0.18102360582804175] ***
*** starting iteration: 8; err: [Inf, 0.3821577241430759, 0.2232247366361429, 0.20721383878304164, 0.1948412324958034, 0.18738900505345824, 0.18529287634213326, 0.18288334775115517, 0.18102360582804175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3821577241430759, 0.2232247366361429, 0.20721383878304164, 0.1948412324958034, 0.18738900505345824, 0.18529287634213326, 0.18288334775115517, 0.18102360582804175, 0.1803758929424797] ***
*** finished computation of 7 references, err: [Inf, 0.3821577241430759, 0.2232247366361429, 0.20721383878304164, 0.1948412324958034, 0.18738900505345824, 0.18529287634213326, 0.18288334775115517, 0.18102360582804175, 0.1803758929424797] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 6]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 18]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(2, 3), (3, 18)]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38267172651060427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38267172651060427, 0.18114569419028675] ***
*** finished computation of 7 references, err: [Inf, 0.38267172651060427, 0.18114569419028675] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 9]]
** centroid: 1, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43049116082912176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43049116082912176, 0.20289107257248049] ***
*** finished computation of 7 references, err: [Inf, 0.43049116082912176, 0.20289107257248049] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 5, 25]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 5), (3, 25)]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40101241654336284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40101241654336284, 0.1914107039183654] ***
*** finished computation of 7 references, err: [Inf, 0.40101241654336284, 0.1914107039183654] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 6]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4712271594002062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4712271594002062, 0.17562471360689055] ***
*** starting iteration: 2; err: [Inf, 0.4712271594002062, 0.17562471360689055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4712271594002062, 0.17562471360689055, 0.15821628487132774] ***
*** starting iteration: 3; err: [Inf, 0.4712271594002062, 0.17562471360689055, 0.15821628487132774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4712271594002062, 0.17562471360689055, 0.15821628487132774, 0.15395295989672061] ***
*** starting iteration: 4; err: [Inf, 0.4712271594002062, 0.17562471360689055, 0.15821628487132774, 0.15395295989672061] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4712271594002062, 0.17562471360689055, 0.15821628487132774, 0.15395295989672061, 0.15364005538487116] ***
*** finished computation of 7 references, err: [Inf, 0.4712271594002062, 0.17562471360689055, 0.15821628487132774, 0.15395295989672061, 0.15364005538487116] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 9]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.383864840601442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.383864840601442, 0.20480643406143068] ***
*** starting iteration: 2; err: [Inf, 0.383864840601442, 0.20480643406143068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.383864840601442, 0.20480643406143068, 0.1793805119374784] ***
*** starting iteration: 3; err: [Inf, 0.383864840601442, 0.20480643406143068, 0.1793805119374784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.383864840601442, 0.20480643406143068, 0.1793805119374784, 0.17057549932577679] ***
*** starting iteration: 4; err: [Inf, 0.383864840601442, 0.20480643406143068, 0.1793805119374784, 0.17057549932577679] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.383864840601442, 0.20480643406143068, 0.1793805119374784, 0.17057549932577679, 0.16450654347374147] ***
*** starting iteration: 5; err: [Inf, 0.383864840601442, 0.20480643406143068, 0.1793805119374784, 0.17057549932577679, 0.16450654347374147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.383864840601442, 0.20480643406143068, 0.1793805119374784, 0.17057549932577679, 0.16450654347374147, 0.16395181511823215] ***
*** finished computation of 7 references, err: [Inf, 0.383864840601442, 0.20480643406143068, 0.1793805119374784, 0.17057549932577679, 0.16450654347374147, 0.16395181511823215] ***
*** center 1: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 9]]
** centroid: 3, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 17]]
** centroid: 4, normalized-entropy: 0.6098403047164005, [(2, 3), (3, 17)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9299448357397972] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9299448357397972, 0.6050170357540796] ***
*** starting iteration: 2; err: [Inf, 0.9299448357397972, 0.6050170357540796] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9299448357397972, 0.6050170357540796, 0.6050170357540796] ***
*** finished computation of 3 references, err: [Inf, 0.9299448357397972, 0.6050170357540796, 0.6050170357540796] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 36]]
** centroid: 2, normalized-entropy: 0.995978956518722, [(2, 31), (3, 36)]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7750935807708081] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7750935807708081, 0.6910853434844807] ***
*** starting iteration: 2; err: [Inf, 0.7750935807708081, 0.6910853434844807] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7750935807708081, 0.6910853434844807, 0.6842303333915909] ***
*** starting iteration: 3; err: [Inf, 0.7750935807708081, 0.6910853434844807, 0.6842303333915909] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7750935807708081, 0.6910853434844807, 0.6842303333915909, 0.6791131188007139] ***
*** finished computation of 3 references, err: [Inf, 0.7750935807708081, 0.6910853434844807, 0.6842303333915909, 0.6791131188007139] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [27, 2, 0]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(1, 27), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 32]]
** centroid: 2, normalized-entropy: 0.9998182469603427, [(2, 31), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7345535388867428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7345535388867428, 0.3138969512753537] ***
*** starting iteration: 2; err: [Inf, 0.7345535388867428, 0.3138969512753537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7345535388867428, 0.3138969512753537, 0.21855733896694612] ***
*** starting iteration: 3; err: [Inf, 0.7345535388867428, 0.3138969512753537, 0.21855733896694612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7345535388867428, 0.3138969512753537, 0.21855733896694612, 0.20903316881961687] ***
*** finished computation of 7 references, err: [Inf, 0.7345535388867428, 0.3138969512753537, 0.21855733896694612, 0.20903316881961687] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 2: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 22, 4]]
** centroid: 6, normalized-entropy: 0.6193821946787638, [(2, 22), (3, 4)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 7]]
** centroid: 7, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30621096302496975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30621096302496975, 0.20617119379608012] ***
*** starting iteration: 2; err: [Inf, 0.30621096302496975, 0.20617119379608012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30621096302496975, 0.20617119379608012, 0.20069393311592204] ***
*** starting iteration: 3; err: [Inf, 0.30621096302496975, 0.20617119379608012, 0.20069393311592204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30621096302496975, 0.20617119379608012, 0.20069393311592204, 0.1991990424233098] ***
*** finished computation of 7 references, err: [Inf, 0.30621096302496975, 0.20617119379608012, 0.20069393311592204, 0.1991990424233098] ***
*** center 1: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 5 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3147593418971903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147593418971903, 0.20186865026756343] ***
*** starting iteration: 2; err: [Inf, 0.3147593418971903, 0.20186865026756343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147593418971903, 0.20186865026756343, 0.1820163097437642] ***
*** starting iteration: 3; err: [Inf, 0.3147593418971903, 0.20186865026756343, 0.1820163097437642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147593418971903, 0.20186865026756343, 0.1820163097437642, 0.17842648643923226] ***
*** finished computation of 7 references, err: [Inf, 0.3147593418971903, 0.20186865026756343, 0.1820163097437642, 0.17842648643923226] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 16, 6]]
** centroid: 6, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5035783537427294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5035783537427294, 0.3873230018274036] ***
*** finished computation of 3 references, err: [Inf, 0.5035783537427294, 0.3873230018274036] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 31]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 10), (3, 31)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 26, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9339210717274689] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9339210717274689, 0.604443987572273] ***
*** finished computation of 3 references, err: [Inf, 0.9339210717274689, 0.604443987572273] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 36]]
** centroid: 2, normalized-entropy: 0.995978956518722, [(2, 31), (3, 36)]
*** center 3: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7750964291142368] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7750964291142368, 0.4143519670472915] ***
*** finished computation of 3 references, err: [Inf, 0.7750964291142368, 0.4143519670472915] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 31]]
** centroid: 3, normalized-entropy: 0.8541802051521676, [(2, 12), (3, 31)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1166000029839296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1166000029839296, 0.460049494538932] ***
*** starting iteration: 2; err: [Inf, 1.1166000029839296, 0.460049494538932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1166000029839296, 0.460049494538932, 0.37396922752104783] ***
*** starting iteration: 3; err: [Inf, 1.1166000029839296, 0.460049494538932, 0.37396922752104783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1166000029839296, 0.460049494538932, 0.37396922752104783, 0.31841902631661223] ***
*** starting iteration: 4; err: [Inf, 1.1166000029839296, 0.460049494538932, 0.37396922752104783, 0.31841902631661223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1166000029839296, 0.460049494538932, 0.37396922752104783, 0.31841902631661223, 0.3126562017946602] ***
*** starting iteration: 5; err: [Inf, 1.1166000029839296, 0.460049494538932, 0.37396922752104783, 0.31841902631661223, 0.3126562017946602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1166000029839296, 0.460049494538932, 0.37396922752104783, 0.31841902631661223, 0.3126562017946602, 0.31109313223819524] ***
*** starting iteration: 6; err: [Inf, 1.1166000029839296, 0.460049494538932, 0.37396922752104783, 0.31841902631661223, 0.3126562017946602, 0.31109313223819524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1166000029839296, 0.460049494538932, 0.37396922752104783, 0.31841902631661223, 0.3126562017946602, 0.31109313223819524, 0.30976737164930307] ***
*** starting iteration: 7; err: [Inf, 1.1166000029839296, 0.460049494538932, 0.37396922752104783, 0.31841902631661223, 0.3126562017946602, 0.31109313223819524, 0.30976737164930307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1166000029839296, 0.460049494538932, 0.37396922752104783, 0.31841902631661223, 0.3126562017946602, 0.31109313223819524, 0.30976737164930307, 0.3092922765406775] ***
*** finished computation of 7 references, err: [Inf, 1.1166000029839296, 0.460049494538932, 0.37396922752104783, 0.31841902631661223, 0.3126562017946602, 0.31109313223819524, 0.30976737164930307, 0.3092922765406775] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 17]]
** centroid: 3, normalized-entropy: 0.9971803988942641, [(2, 15), (3, 17)]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8491999996409336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8491999996409336, 0.3767178170727098] ***
*** starting iteration: 2; err: [Inf, 0.8491999996409336, 0.3767178170727098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8491999996409336, 0.3767178170727098, 0.32522615239986963] ***
*** starting iteration: 3; err: [Inf, 0.8491999996409336, 0.3767178170727098, 0.32522615239986963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8491999996409336, 0.3767178170727098, 0.32522615239986963, 0.30947065229798587] ***
*** starting iteration: 4; err: [Inf, 0.8491999996409336, 0.3767178170727098, 0.32522615239986963, 0.30947065229798587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8491999996409336, 0.3767178170727098, 0.32522615239986963, 0.30947065229798587, 0.30452263837410226] ***
*** starting iteration: 5; err: [Inf, 0.8491999996409336, 0.3767178170727098, 0.32522615239986963, 0.30947065229798587, 0.30452263837410226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8491999996409336, 0.3767178170727098, 0.32522615239986963, 0.30947065229798587, 0.30452263837410226, 0.3022199740494209] ***
*** starting iteration: 6; err: [Inf, 0.8491999996409336, 0.3767178170727098, 0.32522615239986963, 0.30947065229798587, 0.30452263837410226, 0.3022199740494209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8491999996409336, 0.3767178170727098, 0.32522615239986963, 0.30947065229798587, 0.30452263837410226, 0.3022199740494209, 0.2988387759159597] ***
*** starting iteration: 7; err: [Inf, 0.8491999996409336, 0.3767178170727098, 0.32522615239986963, 0.30947065229798587, 0.30452263837410226, 0.3022199740494209, 0.2988387759159597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8491999996409336, 0.3767178170727098, 0.32522615239986963, 0.30947065229798587, 0.30452263837410226, 0.3022199740494209, 0.2988387759159597, 0.29777886797355607] ***
*** starting iteration: 8; err: [Inf, 0.8491999996409336, 0.3767178170727098, 0.32522615239986963, 0.30947065229798587, 0.30452263837410226, 0.3022199740494209, 0.2988387759159597, 0.29777886797355607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8491999996409336, 0.3767178170727098, 0.32522615239986963, 0.30947065229798587, 0.30452263837410226, 0.3022199740494209, 0.2988387759159597, 0.29777886797355607, 0.29679219323744493] ***
*** finished computation of 7 references, err: [Inf, 0.8491999996409336, 0.3767178170727098, 0.32522615239986963, 0.30947065229798587, 0.30452263837410226, 0.3022199740494209, 0.2988387759159597, 0.29777886797355607, 0.29679219323744493] ***
*** center 1: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 13, 19]]
** centroid: 5, normalized-entropy: 0.9744894033980525, [(2, 13), (3, 19)]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.596500006910822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.596500006910822, 0.29595024276371257] ***
*** starting iteration: 2; err: [Inf, 0.596500006910822, 0.29595024276371257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.596500006910822, 0.29595024276371257, 0.2719151630351122] ***
*** starting iteration: 3; err: [Inf, 0.596500006910822, 0.29595024276371257, 0.2719151630351122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.596500006910822, 0.29595024276371257, 0.2719151630351122, 0.2682212865522817] ***
*** starting iteration: 4; err: [Inf, 0.596500006910822, 0.29595024276371257, 0.2719151630351122, 0.2682212865522817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.596500006910822, 0.29595024276371257, 0.2719151630351122, 0.2682212865522817, 0.26722043886673813] ***
*** starting iteration: 5; err: [Inf, 0.596500006910822, 0.29595024276371257, 0.2719151630351122, 0.2682212865522817, 0.26722043886673813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.596500006910822, 0.29595024276371257, 0.2719151630351122, 0.2682212865522817, 0.26722043886673813, 0.2667212019371332] ***
*** finished computation of 7 references, err: [Inf, 0.596500006910822, 0.29595024276371257, 0.2719151630351122, 0.2682212865522817, 0.26722043886673813, 0.2667212019371332] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 12, 6]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 12), (3, 6)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5311271365488871] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5311271365488871, 0.27004917004820256] ***
*** starting iteration: 2; err: [Inf, 0.5311271365488871, 0.27004917004820256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5311271365488871, 0.27004917004820256, 0.21670191770195527] ***
*** starting iteration: 3; err: [Inf, 0.5311271365488871, 0.27004917004820256, 0.21670191770195527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5311271365488871, 0.27004917004820256, 0.21670191770195527, 0.19160974704611308] ***
*** starting iteration: 4; err: [Inf, 0.5311271365488871, 0.27004917004820256, 0.21670191770195527, 0.19160974704611308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5311271365488871, 0.27004917004820256, 0.21670191770195527, 0.19160974704611308, 0.18716417603156504] ***
*** starting iteration: 5; err: [Inf, 0.5311271365488871, 0.27004917004820256, 0.21670191770195527, 0.19160974704611308, 0.18716417603156504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5311271365488871, 0.27004917004820256, 0.21670191770195527, 0.19160974704611308, 0.18716417603156504, 0.1833739882817298] ***
*** starting iteration: 6; err: [Inf, 0.5311271365488871, 0.27004917004820256, 0.21670191770195527, 0.19160974704611308, 0.18716417603156504, 0.1833739882817298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5311271365488871, 0.27004917004820256, 0.21670191770195527, 0.19160974704611308, 0.18716417603156504, 0.1833739882817298, 0.18316012610724083] ***
*** finished computation of 7 references, err: [Inf, 0.5311271365488871, 0.27004917004820256, 0.21670191770195527, 0.19160974704611308, 0.18716417603156504, 0.1833739882817298, 0.18316012610724083] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 12]]
** centroid: 6, normalized-entropy: 0.9910760598382222, [(2, 15), (3, 12)]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3100506971358865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3100506971358865, 0.19637967498149714] ***
*** starting iteration: 2; err: [Inf, 0.3100506971358865, 0.19637967498149714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3100506971358865, 0.19637967498149714, 0.17595981498911997] ***
*** starting iteration: 3; err: [Inf, 0.3100506971358865, 0.19637967498149714, 0.17595981498911997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3100506971358865, 0.19637967498149714, 0.17595981498911997, 0.17166551861702473] ***
*** starting iteration: 4; err: [Inf, 0.3100506971358865, 0.19637967498149714, 0.17595981498911997, 0.17166551861702473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3100506971358865, 0.19637967498149714, 0.17595981498911997, 0.17166551861702473, 0.1714065456592596] ***
*** finished computation of 7 references, err: [Inf, 0.3100506971358865, 0.19637967498149714, 0.17595981498911997, 0.17166551861702473, 0.1714065456592596] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 13]]
** centroid: 4, normalized-entropy: 0.9990102708804813, [(2, 14), (3, 13)]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3656678388281144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3656678388281144, 0.23648323708584076] ***
*** starting iteration: 2; err: [Inf, 0.3656678388281144, 0.23648323708584076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3656678388281144, 0.23648323708584076, 0.20975470658446937] ***
*** starting iteration: 3; err: [Inf, 0.3656678388281144, 0.23648323708584076, 0.20975470658446937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3656678388281144, 0.23648323708584076, 0.20975470658446937, 0.20683602954181624] ***
*** starting iteration: 4; err: [Inf, 0.3656678388281144, 0.23648323708584076, 0.20975470658446937, 0.20683602954181624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3656678388281144, 0.23648323708584076, 0.20975470658446937, 0.20683602954181624, 0.20616795721071618] ***
*** finished computation of 7 references, err: [Inf, 0.3656678388281144, 0.23648323708584076, 0.20975470658446937, 0.20683602954181624, 0.20616795721071618] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 14, 18]]
** centroid: 2, normalized-entropy: 0.9886994082884974, [(2, 14), (3, 18)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9292717700204295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9292717700204295, 0.6579419069433429] ***
*** starting iteration: 2; err: [Inf, 0.9292717700204295, 0.6579419069433429] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9292717700204295, 0.6579419069433429, 0.6534354870083326] ***
*** starting iteration: 3; err: [Inf, 0.9292717700204295, 0.6579419069433429, 0.6534354870083326] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9292717700204295, 0.6579419069433429, 0.6534354870083326, 0.6446383595417836] ***
*** finished computation of 3 references, err: [Inf, 0.9292717700204295, 0.6579419069433429, 0.6534354870083326, 0.6446383595417836] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 35, 32]]
** centroid: 2, normalized-entropy: 0.9985532860835362, [(2, 35), (3, 32)]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8094184158298048] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8094184158298048, 0.3843555510469009] ***
*** starting iteration: 2; err: [Inf, 0.8094184158298048, 0.3843555510469009] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8094184158298048, 0.3843555510469009, 0.3600666972117297] ***
*** starting iteration: 3; err: [Inf, 0.8094184158298048, 0.3843555510469009, 0.3600666972117297] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8094184158298048, 0.3843555510469009, 0.3600666972117297, 0.34677790635112726] ***
*** finished computation of 3 references, err: [Inf, 0.8094184158298048, 0.3843555510469009, 0.3600666972117297, 0.34677790635112726] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 4]]
** centroid: 1, normalized-entropy: 0.5547781633412736, [(2, 27), (3, 4)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 32]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 4), (3, 32)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5663406758231075] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5663406758231075, 0.4329058869086668] ***
*** starting iteration: 2; err: [Inf, 0.5663406758231075, 0.4329058869086668] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5663406758231075, 0.4329058869086668, 0.411346375658339] ***
*** starting iteration: 3; err: [Inf, 0.5663406758231075, 0.4329058869086668, 0.411346375658339] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5663406758231075, 0.4329058869086668, 0.411346375658339, 0.4011770634606255] ***
*** finished computation of 3 references, err: [Inf, 0.5663406758231075, 0.4329058869086668, 0.411346375658339, 0.4011770634606255] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 8, 31]]
** centroid: 2, normalized-entropy: 0.7320666900931937, [(2, 8), (3, 31)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5452932040732473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5452932040732473, 0.27086784225511135] ***
*** finished computation of 7 references, err: [Inf, 0.5452932040732473, 0.27086784225511135] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 29, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 19]]
** centroid: 2, normalized-entropy: 0.8403586716091169, [(2, 7), (3, 19)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4877331513322939] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4877331513322939, 0.2186800651435559] ***
*** finished computation of 7 references, err: [Inf, 0.4877331513322939, 0.2186800651435559] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 15]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 27, 3]]
** centroid: 4, normalized-entropy: 0.46899559358928133, [(2, 27), (3, 3)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.3987498435897443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.3987498435897443, 0.5008519168669135] ***
*** finished computation of 7 references, err: [Inf, 2.3987498435897443, 0.5008519168669135] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 6]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 15), (3, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 2, 0]]
** centroid: 2, normalized-entropy: 0.30337483608641397, [(1, 35), (2, 2)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 9]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3363331726004142] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3363331726004142, 0.18957922755799927] ***
*** starting iteration: 2; err: [Inf, 0.3363331726004142, 0.18957922755799927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3363331726004142, 0.18957922755799927, 0.186179760457002] ***
*** starting iteration: 3; err: [Inf, 0.3363331726004142, 0.18957922755799927, 0.186179760457002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3363331726004142, 0.18957922755799927, 0.186179760457002, 0.18569077234096784] ***
*** finished computation of 7 references, err: [Inf, 0.3363331726004142, 0.18957922755799927, 0.186179760457002, 0.18569077234096784] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 12]]
** centroid: 6, normalized-entropy: 0.9910760598382222, [(2, 15), (3, 12)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 7, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40027605367497665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40027605367497665, 0.1885651811345947] ***
*** starting iteration: 2; err: [Inf, 0.40027605367497665, 0.1885651811345947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40027605367497665, 0.1885651811345947, 0.17099556025212015] ***
*** starting iteration: 3; err: [Inf, 0.40027605367497665, 0.1885651811345947, 0.17099556025212015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40027605367497665, 0.1885651811345947, 0.17099556025212015, 0.16755765857054952] ***
*** starting iteration: 4; err: [Inf, 0.40027605367497665, 0.1885651811345947, 0.17099556025212015, 0.16755765857054952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40027605367497665, 0.1885651811345947, 0.17099556025212015, 0.16755765857054952, 0.1671009136245722] ***
*** finished computation of 7 references, err: [Inf, 0.40027605367497665, 0.1885651811345947, 0.17099556025212015, 0.16755765857054952, 0.1671009136245722] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 5, 6]]
** centroid: 6, normalized-entropy: 0.9940302114769566, [(2, 5), (3, 6)]
*** center 7: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6019927560772146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6019927560772146, 0.3633138746386553] ***
*** starting iteration: 2; err: [Inf, 0.6019927560772146, 0.3633138746386553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6019927560772146, 0.3633138746386553, 0.35184461621735497] ***
*** starting iteration: 3; err: [Inf, 0.6019927560772146, 0.3633138746386553, 0.35184461621735497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6019927560772146, 0.3633138746386553, 0.35184461621735497, 0.34425396353794463] ***
*** starting iteration: 4; err: [Inf, 0.6019927560772146, 0.3633138746386553, 0.35184461621735497, 0.34425396353794463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6019927560772146, 0.3633138746386553, 0.35184461621735497, 0.34425396353794463, 0.3343131815329143] ***
*** starting iteration: 5; err: [Inf, 0.6019927560772146, 0.3633138746386553, 0.35184461621735497, 0.34425396353794463, 0.3343131815329143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6019927560772146, 0.3633138746386553, 0.35184461621735497, 0.34425396353794463, 0.3343131815329143, 0.3297943806670783] ***
*** starting iteration: 6; err: [Inf, 0.6019927560772146, 0.3633138746386553, 0.35184461621735497, 0.34425396353794463, 0.3343131815329143, 0.3297943806670783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6019927560772146, 0.3633138746386553, 0.35184461621735497, 0.34425396353794463, 0.3343131815329143, 0.3297943806670783, 0.32826594359067146] ***
*** starting iteration: 7; err: [Inf, 0.6019927560772146, 0.3633138746386553, 0.35184461621735497, 0.34425396353794463, 0.3343131815329143, 0.3297943806670783, 0.32826594359067146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6019927560772146, 0.3633138746386553, 0.35184461621735497, 0.34425396353794463, 0.3343131815329143, 0.3297943806670783, 0.32826594359067146, 0.3284877356970444] ***
*** finished computation of 7 references, err: [Inf, 0.6019927560772146, 0.3633138746386553, 0.35184461621735497, 0.34425396353794463, 0.3343131815329143, 0.3297943806670783, 0.32826594359067146, 0.3284877356970444] ***
*** center 1: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 25]]
** centroid: 5, normalized-entropy: 0.5787946246321198, [(2, 4), (3, 25)]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 29, 7]]
** centroid: 7, normalized-entropy: 0.710676853856123, [(2, 29), (3, 7)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2815000108641368] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2815000108641368, 0.9764920550825751] ***
*** finished computation of 3 references, err: [Inf, 1.2815000108641368, 0.9764920550825751] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [15, 1, 0]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(1, 15), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 32]]
** centroid: 2, normalized-entropy: 0.9985532860835362, [(2, 35), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1786000037623838] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1786000037623838, 0.9098103304769851] ***
*** finished computation of 3 references, err: [Inf, 1.1786000037623838, 0.9098103304769851] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [14, 1, 0]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(1, 14), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 36]]
** centroid: 2, normalized-entropy: 0.9940302114769566, [(2, 30), (3, 36)]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.9741000323606603] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9741000323606603, 0.6395538575356611] ***
*** finished computation of 3 references, err: [Inf, 2.9741000323606603, 0.6395538575356611] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [35, 2, 0]]
** centroid: 2, normalized-entropy: 0.30337483608641397, [(1, 35), (2, 2)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4550000028052405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4550000028052405, 0.2865210302668197] ***
*** finished computation of 7 references, err: [Inf, 0.4550000028052405, 0.2865210302668197] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 24, 1]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 12, 10]]
** centroid: 7, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7365000070229236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7365000070229236, 0.3150189800347281] ***
*** finished computation of 7 references, err: [Inf, 0.7365000070229236, 0.3150189800347281] ***
*** center 1: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 7]]
** centroid: 3, normalized-entropy: 0.9957274520849256, [(2, 6), (3, 7)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 25, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5417999992407517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5417999992407517, 0.3199002527143502] ***
*** finished computation of 7 references, err: [Inf, 0.5417999992407517, 0.3199002527143502] ***
*** center 1: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 17, 6]]
** centroid: 6, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 8.925131775274028] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.925131775274028, 1.418577971170051] ***
*** finished computation of 3 references, err: [Inf, 8.925131775274028, 1.418577971170051] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 32]]
** centroid: 1, normalized-entropy: 1.0, [(2, 32), (3, 32)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7469490275287265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7469490275287265, 0.608660532784187] ***
*** finished computation of 3 references, err: [Inf, 0.7469490275287265, 0.608660532784187] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 36]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(2, 30), (3, 36)]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0074802031762065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0074802031762065, 0.47791623353667845] ***
*** finished computation of 3 references, err: [Inf, 1.0074802031762065, 0.47791623353667845] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 23]]
** centroid: 3, normalized-entropy: 0.980597440991727, [(2, 32), (3, 23)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6505000027367762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6505000027367762, 0.49347418665234505] ***
*** starting iteration: 2; err: [Inf, 0.6505000027367762, 0.49347418665234505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6505000027367762, 0.49347418665234505, 0.4692552481457565] ***
*** starting iteration: 3; err: [Inf, 0.6505000027367762, 0.49347418665234505, 0.4692552481457565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6505000027367762, 0.49347418665234505, 0.4692552481457565, 0.4641991912301493] ***
*** finished computation of 7 references, err: [Inf, 0.6505000027367762, 0.49347418665234505, 0.4692552481457565, 0.4641991912301493] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 27, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 9, 31]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 9), (3, 31)]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7379000004431834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7379000004431834, 0.37480859746757306] ***
*** starting iteration: 2; err: [Inf, 0.7379000004431834, 0.37480859746757306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7379000004431834, 0.37480859746757306, 0.32157285128745383] ***
*** starting iteration: 3; err: [Inf, 0.7379000004431834, 0.37480859746757306, 0.32157285128745383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7379000004431834, 0.37480859746757306, 0.32157285128745383, 0.2683645242798141] ***
*** finished computation of 7 references, err: [Inf, 0.7379000004431834, 0.37480859746757306, 0.32157285128745383, 0.2683645242798141] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 19]]
** centroid: 1, normalized-entropy: 0.5746356978376794, [(2, 3), (3, 19)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6513999982779967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6513999982779967, 0.31907330362919156] ***
*** starting iteration: 2; err: [Inf, 0.6513999982779967, 0.31907330362919156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6513999982779967, 0.31907330362919156, 0.2807847308977204] ***
*** starting iteration: 3; err: [Inf, 0.6513999982779967, 0.31907330362919156, 0.2807847308977204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6513999982779967, 0.31907330362919156, 0.2807847308977204, 0.2728424918926536] ***
*** finished computation of 7 references, err: [Inf, 0.6513999982779967, 0.31907330362919156, 0.2807847308977204, 0.2728424918926536] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 7, 2]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 7), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 15, 5]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4127905466641437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4127905466641437, 0.23754428847261963] ***
*** starting iteration: 2; err: [Inf, 0.4127905466641437, 0.23754428847261963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4127905466641437, 0.23754428847261963, 0.22908592251341495] ***
*** starting iteration: 3; err: [Inf, 0.4127905466641437, 0.23754428847261963, 0.22908592251341495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4127905466641437, 0.23754428847261963, 0.22908592251341495, 0.22677714284260492] ***
*** starting iteration: 4; err: [Inf, 0.4127905466641437, 0.23754428847261963, 0.22908592251341495, 0.22677714284260492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4127905466641437, 0.23754428847261963, 0.22908592251341495, 0.22677714284260492, 0.22423198973115813] ***
*** starting iteration: 5; err: [Inf, 0.4127905466641437, 0.23754428847261963, 0.22908592251341495, 0.22677714284260492, 0.22423198973115813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4127905466641437, 0.23754428847261963, 0.22908592251341495, 0.22677714284260492, 0.22423198973115813, 0.22171130821508783] ***
*** starting iteration: 6; err: [Inf, 0.4127905466641437, 0.23754428847261963, 0.22908592251341495, 0.22677714284260492, 0.22423198973115813, 0.22171130821508783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4127905466641437, 0.23754428847261963, 0.22908592251341495, 0.22677714284260492, 0.22423198973115813, 0.22171130821508783, 0.22066822235873784] ***
*** starting iteration: 7; err: [Inf, 0.4127905466641437, 0.23754428847261963, 0.22908592251341495, 0.22677714284260492, 0.22423198973115813, 0.22171130821508783, 0.22066822235873784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4127905466641437, 0.23754428847261963, 0.22908592251341495, 0.22677714284260492, 0.22423198973115813, 0.22171130821508783, 0.22066822235873784, 0.2190102311490114] ***
*** starting iteration: 8; err: [Inf, 0.4127905466641437, 0.23754428847261963, 0.22908592251341495, 0.22677714284260492, 0.22423198973115813, 0.22171130821508783, 0.22066822235873784, 0.2190102311490114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4127905466641437, 0.23754428847261963, 0.22908592251341495, 0.22677714284260492, 0.22423198973115813, 0.22171130821508783, 0.22066822235873784, 0.2190102311490114, 0.21847450331691026] ***
*** finished computation of 7 references, err: [Inf, 0.4127905466641437, 0.23754428847261963, 0.22908592251341495, 0.22677714284260492, 0.22423198973115813, 0.22171130821508783, 0.22066822235873784, 0.2190102311490114, 0.21847450331691026] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 19]]
** centroid: 4, normalized-entropy: 0.9833761901392238, [(2, 14), (3, 19)]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.98
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.3314771610572589] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3314771610572589, 0.19677182020441827] ***
*** finished computation of 7 references, err: [Inf, 0.3314771610572589, 0.19677182020441827] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 22]]
** centroid: 5, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5815610177482219] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5815610177482219, 0.2620716571020408] ***
*** finished computation of 7 references, err: [Inf, 0.5815610177482219, 0.2620716571020408] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 7]]
** centroid: 2, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 4, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4644875925668566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4644875925668566, 0.21969821652193056] ***
*** finished computation of 7 references, err: [Inf, 0.4644875925668566, 0.21969821652193056] ***
*** center 1: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 10]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.98
finished with 17
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.98
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.4776854622915655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4776854622915655, 0.32120456187820634] ***
*** starting iteration: 2; err: [Inf, 0.4776854622915655, 0.32120456187820634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4776854622915655, 0.32120456187820634, 0.3187629133627516] ***
*** starting iteration: 3; err: [Inf, 0.4776854622915655, 0.32120456187820634, 0.3187629133627516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4776854622915655, 0.32120456187820634, 0.3187629133627516, 0.3187629133627516] ***
*** finished computation of 7 references, err: [Inf, 0.4776854622915655, 0.32120456187820634, 0.3187629133627516, 0.3187629133627516] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 26, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 10, 31]]
** centroid: 2, normalized-entropy: 0.8014698931335286, [(2, 10), (3, 31)]
*** center 3: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 4: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3834927973690692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3834927973690692, 0.23802613402884895] ***
*** starting iteration: 2; err: [Inf, 0.3834927973690692, 0.23802613402884895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3834927973690692, 0.23802613402884895, 0.212378342756418] ***
*** starting iteration: 3; err: [Inf, 0.3834927973690692, 0.23802613402884895, 0.212378342756418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3834927973690692, 0.23802613402884895, 0.212378342756418, 0.20433664664652698] ***
*** starting iteration: 4; err: [Inf, 0.3834927973690692, 0.23802613402884895, 0.212378342756418, 0.20433664664652698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3834927973690692, 0.23802613402884895, 0.212378342756418, 0.20433664664652698, 0.20338135369573834] ***
*** finished computation of 7 references, err: [Inf, 0.3834927973690692, 0.23802613402884895, 0.212378342756418, 0.20433664664652698, 0.20338135369573834] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 14, 18]]
** centroid: 7, normalized-entropy: 0.9886994082884974, [(2, 14), (3, 18)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.501835073465157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.501835073465157, 0.23061707150621472] ***
*** starting iteration: 2; err: [Inf, 0.501835073465157, 0.23061707150621472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.501835073465157, 0.23061707150621472, 0.19571505228941638] ***
*** starting iteration: 3; err: [Inf, 0.501835073465157, 0.23061707150621472, 0.19571505228941638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.501835073465157, 0.23061707150621472, 0.19571505228941638, 0.17903960858996634] ***
*** starting iteration: 4; err: [Inf, 0.501835073465157, 0.23061707150621472, 0.19571505228941638, 0.17903960858996634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.501835073465157, 0.23061707150621472, 0.19571505228941638, 0.17903960858996634, 0.17735707323227168] ***
*** starting iteration: 5; err: [Inf, 0.501835073465157, 0.23061707150621472, 0.19571505228941638, 0.17903960858996634, 0.17735707323227168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.501835073465157, 0.23061707150621472, 0.19571505228941638, 0.17903960858996634, 0.17735707323227168, 0.17722487852232915] ***
*** finished computation of 7 references, err: [Inf, 0.501835073465157, 0.23061707150621472, 0.19571505228941638, 0.17903960858996634, 0.17735707323227168, 0.17722487852232915] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 16, 7]]
** centroid: 3, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.98
finished with 18
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.98
finished with 19
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.4835000046946453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4835000046946453, 0.24634653832815412] ***
*** starting iteration: 2; err: [Inf, 0.4835000046946453, 0.24634653832815412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4835000046946453, 0.24634653832815412, 0.23374075675687575] ***
*** starting iteration: 3; err: [Inf, 0.4835000046946453, 0.24634653832815412, 0.23374075675687575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4835000046946453, 0.24634653832815412, 0.23374075675687575, 0.23088771013022158] ***
*** starting iteration: 4; err: [Inf, 0.4835000046946453, 0.24634653832815412, 0.23374075675687575, 0.23088771013022158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4835000046946453, 0.24634653832815412, 0.23374075675687575, 0.23088771013022158, 0.22865047150735] ***
*** starting iteration: 5; err: [Inf, 0.4835000046946453, 0.24634653832815412, 0.23374075675687575, 0.23088771013022158, 0.22865047150735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4835000046946453, 0.24634653832815412, 0.23374075675687575, 0.23088771013022158, 0.22865047150735, 0.22865047150735] ***
*** finished computation of 7 references, err: [Inf, 0.4835000046946453, 0.24634653832815412, 0.23374075675687575, 0.23088771013022158, 0.22865047150735, 0.22865047150735] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 4, 10]]
** centroid: 5, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5407000050680435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5407000050680435, 0.2460307791263513] ***
*** starting iteration: 2; err: [Inf, 0.5407000050680435, 0.2460307791263513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5407000050680435, 0.2460307791263513, 0.23034502783186067] ***
*** starting iteration: 3; err: [Inf, 0.5407000050680435, 0.2460307791263513, 0.23034502783186067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5407000050680435, 0.2460307791263513, 0.23034502783186067, 0.22598118797406777] ***
*** starting iteration: 4; err: [Inf, 0.5407000050680435, 0.2460307791263513, 0.23034502783186067, 0.22598118797406777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5407000050680435, 0.2460307791263513, 0.23034502783186067, 0.22598118797406777, 0.22580448128763447] ***
*** finished computation of 7 references, err: [Inf, 0.5407000050680435, 0.2460307791263513, 0.23034502783186067, 0.22598118797406777, 0.22580448128763447] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 12]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 15), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4609000011675032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4609000011675032, 0.26224310930740063] ***
*** starting iteration: 2; err: [Inf, 0.4609000011675032, 0.26224310930740063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4609000011675032, 0.26224310930740063, 0.24858225337715784] ***
*** starting iteration: 3; err: [Inf, 0.4609000011675032, 0.26224310930740063, 0.24858225337715784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4609000011675032, 0.26224310930740063, 0.24858225337715784, 0.2480109431060877] ***
*** finished computation of 7 references, err: [Inf, 0.4609000011675032, 0.26224310930740063, 0.24858225337715784, 0.2480109431060877] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 16, 6]]
** centroid: 7, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.98
finished with 20
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.47069999991642647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47069999991642647, 0.30664776039901914] ***
*** starting iteration: 2; err: [Inf, 0.47069999991642647, 0.30664776039901914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524] ***
*** starting iteration: 3; err: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524, 0.2694922903937828] ***
*** starting iteration: 4; err: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524, 0.2694922903937828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524, 0.2694922903937828, 0.25479691898443413] ***
*** starting iteration: 5; err: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524, 0.2694922903937828, 0.25479691898443413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524, 0.2694922903937828, 0.25479691898443413, 0.25199345566385917] ***
*** starting iteration: 6; err: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524, 0.2694922903937828, 0.25479691898443413, 0.25199345566385917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524, 0.2694922903937828, 0.25479691898443413, 0.25199345566385917, 0.24913500907821823] ***
*** starting iteration: 7; err: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524, 0.2694922903937828, 0.25479691898443413, 0.25199345566385917, 0.24913500907821823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524, 0.2694922903937828, 0.25479691898443413, 0.25199345566385917, 0.24913500907821823, 0.24127905432595242] ***
*** starting iteration: 8; err: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524, 0.2694922903937828, 0.25479691898443413, 0.25199345566385917, 0.24913500907821823, 0.24127905432595242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524, 0.2694922903937828, 0.25479691898443413, 0.25199345566385917, 0.24913500907821823, 0.24127905432595242, 0.23204489189992641] ***
*** starting iteration: 9; err: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524, 0.2694922903937828, 0.25479691898443413, 0.25199345566385917, 0.24913500907821823, 0.24127905432595242, 0.23204489189992641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524, 0.2694922903937828, 0.25479691898443413, 0.25199345566385917, 0.24913500907821823, 0.24127905432595242, 0.23204489189992641, 0.23121759422451482] ***
*** finished computation of 7 references, err: [Inf, 0.47069999991642647, 0.30664776039901914, 0.28088024423173524, 0.2694922903937828, 0.25479691898443413, 0.25199345566385917, 0.24913500907821823, 0.24127905432595242, 0.23204489189992641, 0.23121759422451482] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 18]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 6: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9531999949141242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9531999949141242, 0.2846590407365806] ***
*** starting iteration: 2; err: [Inf, 0.9531999949141242, 0.2846590407365806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9531999949141242, 0.2846590407365806, 0.22817474647313415] ***
*** starting iteration: 3; err: [Inf, 0.9531999949141242, 0.2846590407365806, 0.22817474647313415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9531999949141242, 0.2846590407365806, 0.22817474647313415, 0.22647083313343763] ***
*** starting iteration: 4; err: [Inf, 0.9531999949141242, 0.2846590407365806, 0.22817474647313415, 0.22647083313343763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9531999949141242, 0.2846590407365806, 0.22817474647313415, 0.22647083313343763, 0.22647083313343763] ***
*** finished computation of 7 references, err: [Inf, 0.9531999949141242, 0.2846590407365806, 0.22817474647313415, 0.22647083313343763, 0.22647083313343763] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 7]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.542100002951289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.542100002951289, 0.2536810396173358] ***
*** starting iteration: 2; err: [Inf, 0.542100002951289, 0.2536810396173358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.542100002951289, 0.2536810396173358, 0.23769441977594125] ***
*** starting iteration: 3; err: [Inf, 0.542100002951289, 0.2536810396173358, 0.23769441977594125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.542100002951289, 0.2536810396173358, 0.23769441977594125, 0.22893069891649198] ***
*** starting iteration: 4; err: [Inf, 0.542100002951289, 0.2536810396173358, 0.23769441977594125, 0.22893069891649198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.542100002951289, 0.2536810396173358, 0.23769441977594125, 0.22893069891649198, 0.22853229229124172] ***
*** finished computation of 7 references, err: [Inf, 0.542100002951289, 0.2536810396173358, 0.23769441977594125, 0.22893069891649198, 0.22853229229124172] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 6]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(2, 14), (3, 6)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.98
finished with 21
iteration 8 finished
*** starting iteration: 1; err: [Inf, 1.2344000086752993] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2344000086752993, 0.9717604911935135] ***
*** starting iteration: 2; err: [Inf, 1.2344000086752993, 0.9717604911935135] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2344000086752993, 0.9717604911935135, 0.9692627033024286] ***
*** starting iteration: 3; err: [Inf, 1.2344000086752993, 0.9717604911935135, 0.9692627033024286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2344000086752993, 0.9717604911935135, 0.9692627033024286, 0.9692627033024286] ***
*** finished computation of 3 references, err: [Inf, 1.2344000086752993, 0.9717604911935135, 0.9692627033024286, 0.9692627033024286] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 32]]
** centroid: 1, normalized-entropy: 0.9998292601233937, [(2, 33), (3, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [12, 3, 0]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(1, 12), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 11.631800083202233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.631800083202233, 1.0934581244747161] ***
*** starting iteration: 2; err: [Inf, 11.631800083202233, 1.0934581244747161] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.631800083202233, 1.0934581244747161, 0.9114071489811443] ***
*** starting iteration: 3; err: [Inf, 11.631800083202233, 1.0934581244747161, 0.9114071489811443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.631800083202233, 1.0934581244747161, 0.9114071489811443, 0.9098146602915328] ***
*** finished computation of 3 references, err: [Inf, 11.631800083202233, 1.0934581244747161, 0.9114071489811443, 0.9098146602915328] ***
*** center 1: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 36]]
** centroid: 2, normalized-entropy: 0.9940302114769566, [(2, 30), (3, 36)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [22, 1, 0]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(1, 22), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.031200006969559] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.031200006969559, 0.788838909201754] ***
*** starting iteration: 2; err: [Inf, 5.031200006969559, 0.788838909201754] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.031200006969559, 0.788838909201754, 0.5612133428498616] ***
*** starting iteration: 3; err: [Inf, 5.031200006969559, 0.788838909201754, 0.5612133428498616] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.031200006969559, 0.788838909201754, 0.5612133428498616, 0.5431984608386383] ***
*** finished computation of 3 references, err: [Inf, 5.031200006969559, 0.788838909201754, 0.5612133428498616, 0.5431984608386383] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.98
finished with 22
iteration 9 finished
*** starting iteration: 1; err: [Inf, 3.98009996902759] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.98009996902759, 1.5415462999180378] ***
*** finished computation of 3 references, err: [Inf, 3.98009996902759, 1.5415462999180378] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [32, 16, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 32), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 23]]
** centroid: 3, normalized-entropy: 0.996485989886783, [(2, 20), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.9055999942372943] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9055999942372943, 0.8851258462628241] ***
*** finished computation of 3 references, err: [Inf, 2.9055999942372943, 0.8851258462628241] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [33, 1, 0]]
** centroid: 1, normalized-entropy: 0.1914332548141934, [(1, 33), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 25]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 11]]
** centroid: 3, normalized-entropy: 0.8680403986166402, [(2, 27), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.551900021056918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.551900021056918, 1.0036828815146897] ***
*** finished computation of 3 references, err: [Inf, 1.551900021056918, 1.0036828815146897] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [17, 1, 0]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(1, 17), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 32]]
** centroid: 3, normalized-entropy: 1.0, [(2, 32), (3, 32)]
finished with 4 centroids; started with 3
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.992857142857143, 3.15, 1.4857142857142858, 0.22142857142857147], [4.6, 3.1888888888888887, 1.3666666666666667, 0.19999999999999998], [7.471428571428572, 3.1571428571428575, 6.200000000000001, 2.028571428571429], [6.560000000000001, 3.013333333333333, 5.5, 2.0866666666666664], [5.333333333333333, 3.8666666666666663, 1.6, 0.34444444444444444], [5.738709677419355, 2.667741935483872, 4.0935483870967735, 1.2741935483870965], [6.341666666666666, 2.8666666666666667, 4.691666666666667, 1.5000000000000002], [6.0, 2.73, 5.04, 1.8]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 1, 3, 3, 1, 2, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.096774193548387, 3.512903225806452, 1.467741935483871, 0.24193548387096778], [7.006666666666667, 3.013333333333333, 5.926666666666665, 1.9066666666666665], [6.616666666666667, 3.066666666666667, 4.783333333333334, 1.5666666666666664], [6.185714285714285, 2.7857142857142856, 5.185714285714285, 1.7714285714285718], [6.527272727272727, 3.1999999999999997, 5.563636363636364, 2.372727272727273], [5.949999999999998, 2.789285714285715, 4.2142857142857135, 1.2785714285714285], [5.8, 2.7, 5.1, 1.9], [4.6, 2.95, 1.4, 0.15000000000000002]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 3, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.8, 3.4, 1.9, 0.2], [5.092, 3.571999999999999, 1.4399999999999997, 0.268], [7.106666666666667, 3.02, 5.793333333333334, 2.06], [6.554545454545454, 3.1545454545454543, 5.681818181818182, 2.1909090909090914], [4.666666666666666, 2.966666666666667, 1.4111111111111112, 0.18888888888888888], [6.376470588235294, 2.911764705882353, 4.647058823529412, 1.464705882352941], [6.116666666666667, 2.75, 4.95, 1.7], [5.431250000000001, 2.625, 3.9625, 1.2562499999999999]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 1, 3, 3, 1, 2, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[33, 6, 2, 24, 7, 20, 11, 43, 50, 31, 15, 22, 7, 6, 1, 5, 27, 26, 14, 5, 44, 9, 42, 22, 15, 1, 15, 24, 29, 35, 30, 19, 22, 31, 26, 17, 27, 21, 15, 40, 37, 36, 28, 33, 31, 25, 32, 37, 41, 41, 27, 40, 4, 30, 21, 34, 23, 32, 25, 38, 33, 35, 54, 10, 25, 33, 29, 16, 2, 12, 37, 2, 32, 34, 16, 13, 34, 28, 15, 44, 6, 66, 63, 22, 21, 22, 24, 36, 28, 22, 33, 54, 37, 52, 39, 26, 22, 2, 36, 49, 55, 32, 14, 46, 40, 23, 26, 37, 40, 40, 45, 44, 43, 45, 30, 61, 51, 14, 43, 52, 62, 41, 40, 45, 39, 37, 31, 42, 56, 32, 38, 30, 31, 33, 1, 32, 39, 43, 35, 24, 43, 15, 37, 28, 18, 13, 20, 15, 24, 36, 42, 22, 42, 36, 36, 31, 62, 42, 34, 19, 50, 29, 45, 42, 52, 24, 58, 24, 21, 42, 22, 75, 29, 38, 43, 42, 28, 34, 85, 37, 25, 44, 64, 39, 32, 15, 28, 30, 13, 51, 43, 40, 39, 36, 42, 44, 13, 37, 29, 50, 32, 30, 32, 36, 53, 51, 23, 35, 28, 63, 35, 20, 21, 46, 25, 35, 18, 40, 35, 38, 21, 49, 29, 44, 66, 51, 48, 23, 40, 35, 51, 24, 50, 52, 18, 23, 37, 30, 35, 47, 50, 39, 48, 36, 33, 28, 42, 66, 44, 30, 28, 45, 25, 57, 28, 25, 70, 52, 53, 31, 45, 40, 32, 60, 24, 69, 12, 48, 38, 8, 30, 34, 51, 54, 46, 52, 25, 25, 45, 33, 1, 40, 1, 42, 55, 35, 52, 25, 33, 40, 31, 28, 15, 22, 25, 42, 44, 37, 34, 49]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.63, speedup = 0.4513742122887776, eval_ratio = 0.041823)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.4288194444444443,"recall":0.4288194444444443,"f1":null,"seconds":7.032603025436401e-5,"exhaustive_search_seconds":0.0003967359662055969,"evaluations":338.9375,"distances_sum":1772.770273751431}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5946180555555554,"recall":0.5946180555555554,"f1":null,"seconds":0.00010159052908420563,"exhaustive_search_seconds":0.0003967359662055969,"evaluations":376.0546875,"distances_sum":1652.8965735248298}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6831597222222219,"recall":0.6831597222222219,"f1":0.6831597222222219,"seconds":0.00013563036918640137,"exhaustive_search_seconds":0.0003967359662055969,"evaluations":415.7734375,"distances_sum":1607.511307055401}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7430555555555546,"recall":0.7430555555555546,"f1":0.7430555555555546,"seconds":0.00016960129141807556,"exhaustive_search_seconds":0.0003967359662055969,"evaluations":455.3515625,"distances_sum":1586.1121974442585}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7977430555555544,"recall":0.7977430555555544,"f1":0.7977430555555544,"seconds":0.00020929984748363495,"exhaustive_search_seconds":0.0003967359662055969,"evaluations":495.8125,"distances_sum":1571.0460232400108}
KCenters.DeloneInvIndex> reached performance {"precision":0.8368055555555544,"recall":0.8368055555555544,"f1":0.8368055555555544,"seconds":0.00023561157286167145,"exhaustive_search_seconds":0.0003967359662055969,"evaluations":536.09375,"distances_sum":1562.2694440292307}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.82, speedup = 1.881994950257014, eval_ratio = 0.053730999999999994)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
