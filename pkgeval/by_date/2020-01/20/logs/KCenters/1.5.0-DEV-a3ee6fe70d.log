Julia Version 1.5.0-DEV.122
Commit a3ee6fe70d (2020-01-20 16:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed LearnBase ─────────────────── v0.2.2
 Installed MappedArrays ──────────────── v0.2.2
 Installed DataAPI ───────────────────── v1.1.0
 Installed KCenters ──────────────────── v0.1.9
 Installed TableTraits ───────────────── v1.0.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed JSON ──────────────────────── v0.21.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed Missings ──────────────────── v0.4.3
 Installed InvertedIndices ───────────── v1.0.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataStructures ────────────── v0.17.9
 Installed Compat ────────────────────── v3.2.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed DataFrames ────────────────── v0.20.0
 Installed Parsers ───────────────────── v0.3.10
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Reexport ──────────────────── v0.2.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed StatsBase ─────────────────── v0.32.0
 Installed Tables ────────────────────── v0.2.11
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_10cKVg/Project.toml`
 [no changes]
  Updating `/tmp/jl_10cKVg/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_10cKVg/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 183.07000000000002
[ Info: 76.60000000000004
[ Info: 42.629999999999995
[ Info: 25.009999999999998
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999835129265
[ Info: 75.68000114231452
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.29975259584014
inertia(cdnet.distances) = 28.25717449517164
inertia(crand.distances) = 21.278695446574158
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4794921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4794921875,"f1":null,"seconds":4.3585896492004395e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":6.53125,"distances_sum":1292.2240626205464}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2177734375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2177734375,"f1":null,"seconds":4.837289452552795e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":6.515625,"distances_sum":615.5145320775832}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4794921875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4794921875,"f1":null,"seconds":4.3585896492004395e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":6.53125,"distances_sum":1292.2240626205464}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8741165084915096,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.0703125,"distances_sum":2280.4454576683925}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8741165084915096,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.0703125,"distances_sum":2280.4454576683925}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8741165084915096,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.0703125,"distances_sum":2280.4454576683925}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.787109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8741165084915096,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.0703125,"distances_sum":2280.4454576683925}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8583078379953389,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.65625,"distances_sum":1971.9508803837975}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7982923326673335,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.2734375,"distances_sum":1671.5133854800588}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.43359375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.43359375,"f1":null,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.84375,"distances_sum":1004.67555655892}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8583078379953389,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.65625,"distances_sum":1971.9508803837975}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9507013819513824,"seconds":7.141381502151489e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9140625,"distances_sum":2612.0165809735454}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9507013819513824,"seconds":7.141381502151489e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9140625,"distances_sum":2612.0165809735454}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.971560210622711,"seconds":8.227303624153137e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.96875,"distances_sum":2750.9462953480306}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9618704212454215,"seconds":6.273388862609863e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9765625,"distances_sum":2678.1102501168125}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.971560210622711,"seconds":8.227303624153137e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.96875,"distances_sum":2750.9462953480306}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.971560210622711,"seconds":8.227303624153137e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.96875,"distances_sum":2750.9462953480306}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8673831376956385,"seconds":9.791925549507141e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.59375,"distances_sum":2090.5719972336656}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5341796875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5341796875,"f1":0.6812416749916754,"seconds":4.941597580909729e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":7.1796875,"distances_sum":1389.4135666951424}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8673831376956385,"seconds":9.791925549507141e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.59375,"distances_sum":2090.5719972336656}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9541926823176827,"seconds":6.455928087234497e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.7890625,"distances_sum":2718.1989913332186}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9541926823176827,"seconds":6.455928087234497e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.7890625,"distances_sum":2718.1989913332186}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.975950091575092,"seconds":7.206574082374573e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.9453125,"distances_sum":2855.9402647313}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975950091575092,"seconds":7.206574082374573e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.9453125,"distances_sum":2855.9402647313}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975950091575092,"seconds":7.206574082374573e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.9453125,"distances_sum":2855.9402647313}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4384765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4384765625,"f1":null,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":6.6484375,"distances_sum":1009.1242506842831}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8630556943056953,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.484375,"distances_sum":1981.2189105451605}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.259765625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.259765625,"f1":null,"seconds":4.159286618232727e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":6.78125,"distances_sum":670.9145268010624}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7117569930069936,"seconds":9.449198842048645e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":7.3203125,"distances_sum":1407.6946137660889}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8630556943056953,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.484375,"distances_sum":1981.2189105451605}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604567307692311,"seconds":6.765127182006836e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.953125,"distances_sum":2678.829639906951}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.964961080586081,"seconds":6.809830665588379e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9140625,"distances_sum":2703.0948410802575}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8755640193140203,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.5234375,"distances_sum":2037.63942319744}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.931968552281053,"seconds":1.1239200830459595e-5,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9296875,"distances_sum":2446.5212781130917}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.964961080586081,"seconds":6.809830665588379e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9140625,"distances_sum":2703.0948410802575}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752804487179491,"seconds":7.210299372673035e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":9.0,"distances_sum":2768.538780835579}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9748340201465204,"seconds":7.320195436477661e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.96875,"distances_sum":2772.852189224736}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9722298534798538,"seconds":7.3444098234176636e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.984375,"distances_sum":2749.772583752993}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763965201465207,"seconds":7.180497050285339e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9921875,"distances_sum":2784.6535670454223}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9677655677655681,"seconds":7.119029760360718e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9765625,"distances_sum":2711.3464418586136}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657967032967038,"seconds":8.186325430870056e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9375,"distances_sum":2701.2921747382948}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763965201465207,"seconds":7.180497050285339e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9921875,"distances_sum":2784.6535670454223}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763965201465207,"seconds":7.180497050285339e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9921875,"distances_sum":2784.6535670454223}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":6.9296875,"distances_sum":603.8267149855207}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.546875,"f1":0.6870979714729719,"seconds":6.688758730888367e-5,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":7.0078125,"distances_sum":1321.0522293820968}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.546875,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.546875,"f1":0.6870979714729719,"seconds":6.688758730888367e-5,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":7.0078125,"distances_sum":1321.0522293820968}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.7272741147741154,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":7.1953125,"distances_sum":1405.8273837553554}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9281510156510162,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.8359375,"distances_sum":2449.7191328812555}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8659148143523155,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.5703125,"distances_sum":2029.2081999798186}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9281510156510162,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.8359375,"distances_sum":2449.7191328812555}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619276556776559,"seconds":6.338581442832947e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.9453125,"distances_sum":2680.000640896592}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9680288461538464,"seconds":7.286667823791504e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.9296875,"distances_sum":2743.0616071570535}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9505666208791216,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.859375,"distances_sum":2644.542538435768}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9532795329670332,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.875,"distances_sum":2619.394779926615}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739068223443226,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.9609375,"distances_sum":2765.1579126412817}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739068223443226,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.9609375,"distances_sum":2765.1579126412817}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739068223443226,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.9609375,"distances_sum":2765.1579126412817}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2353515625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.4375,"distances_sum":640.9164162877635}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2353515625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.4375,"distances_sum":640.9164162877635}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1640625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1640625,"f1":null,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":5.6953125,"distances_sum":447.0736399099392}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.564453125,"f1":null,"seconds":4.207715392112732e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.5546875,"distances_sum":1339.2824289725063}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8108637889887897,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.1171875,"distances_sum":1754.3015286320308}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.703125,"f1":0.8108637889887897,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.1171875,"distances_sum":1754.3015286320308}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9434638278388283,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8046875,"distances_sum":2475.214045650661}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9434638278388283,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8046875,"distances_sum":2475.214045650661}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9587454212454218,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8671875,"distances_sum":2581.991595229332}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9587454212454218,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8671875,"distances_sum":2581.991595229332}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9587454212454218,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8671875,"distances_sum":2581.991595229332}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.169921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.169921875,"f1":null,"seconds":3.1944364309310913e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":5.890625,"distances_sum":420.31849361001565}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.169921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.169921875,"f1":null,"seconds":3.1944364309310913e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":5.890625,"distances_sum":420.31849361001565}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":3.7532299757003784e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":6.75,"distances_sum":500.09712848050157}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8752938034188043,"seconds":6.864219903945923e-5,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.296875,"distances_sum":1969.5090794326745}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8706106393606402,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.2109375,"distances_sum":1902.8643997003705}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8752938034188043,"seconds":6.864219903945923e-5,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.296875,"distances_sum":1969.5090794326745}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9003007409257415,"seconds":6.198883056640625e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.890625,"distances_sum":2074.1917248159093}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8291015625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8291015625,"f1":0.9003007409257415,"seconds":6.198883056640625e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.890625,"distances_sum":2074.1917248159093}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9344150641025648,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.875,"distances_sum":2300.994530666209}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9344150641025648,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.875,"distances_sum":2300.994530666209}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8837890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9344150641025648,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.875,"distances_sum":2300.994530666209}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.255859375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.255859375,"f1":null,"seconds":4.084780812263489e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.4609375,"distances_sum":638.4985222781669}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.255859375,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.255859375,"f1":null,"seconds":4.084780812263489e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.4609375,"distances_sum":638.4985222781669}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":3.9227306842803955e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.09375,"distances_sum":845.7023240914623}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8543758325008335,"seconds":6.398186087608337e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.875,"distances_sum":1828.444425159765}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.595703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.595703125,"f1":0.7337454212454219,"seconds":4.952773451805115e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.2109375,"distances_sum":1399.6920593045165}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.7243258477633483,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.0390625,"distances_sum":1351.540026904052}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8543758325008335,"seconds":6.398186087608337e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.875,"distances_sum":1828.444425159765}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9493246336996345,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.78125,"distances_sum":2484.089031912157}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9579842032967039,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.859375,"distances_sum":2518.3880276575424}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9579842032967039,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.859375,"distances_sum":2518.3880276575424}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9579842032967039,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.859375,"distances_sum":2518.3880276575424}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8634022227772237,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.2109375,"distances_sum":1837.8509639642034}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8634022227772237,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.2109375,"distances_sum":1837.8509639642034}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9523897977022983,"seconds":6.571412086486816e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.890625,"distances_sum":2384.426656475334}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9315190018315025,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8359375,"distances_sum":2233.469127290163}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9523897977022983,"seconds":6.571412086486816e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.890625,"distances_sum":2384.426656475334}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":13,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9623054029304033,"seconds":6.211921572685242e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9296875,"distances_sum":2464.7462777639307}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9631353021978027,"seconds":6.290152668952942e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.890625,"distances_sum":2454.2698834668927}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":13,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9623054029304033,"seconds":6.211921572685242e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9296875,"distances_sum":2464.7462777639307}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":13,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9623054029304033,"seconds":6.211921572685242e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9296875,"distances_sum":2464.7462777639307}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8032784923409932,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.8359375,"distances_sum":1554.7881556134055}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4267578125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4267578125,"f1":null,"seconds":3.7383288145065308e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":6.453125,"distances_sum":930.5414146124632}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6865234375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6865234375,"f1":0.8032784923409932,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.8359375,"distances_sum":1554.7881556134055}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9549164377289382,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.875,"distances_sum":2450.496089502132}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9317796786546794,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.828125,"distances_sum":2250.5017921371273}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8098141441891449,"seconds":5.209818482398987e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.90625,"distances_sum":1623.6461023375202}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9549164377289382,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.875,"distances_sum":2450.496089502132}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.958207417582418,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.890625,"distances_sum":2445.2631162410157}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.958207417582418,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.890625,"distances_sum":2445.2631162410157}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.958207417582418,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.890625,"distances_sum":2445.2631162410157}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8548144563769572,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.3359375,"distances_sum":1799.2479850790533}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7094447219447225,"seconds":4.524365067481995e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":7.1796875,"distances_sum":1228.1185513478279}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8548144563769572,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.3359375,"distances_sum":1799.2479850790533}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9622996794871799,"seconds":6.405636668205261e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.8203125,"distances_sum":2433.2507606596305}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.896340118215119,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.7265625,"distances_sum":1962.9666934924282}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9578525641025648,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.8984375,"distances_sum":2381.283887215242}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9163690476190485,"seconds":6.20819628238678e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.796875,"distances_sum":2128.1214537090723}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8554211413586422,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.4765625,"distances_sum":1783.1799140467842}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9622996794871799,"seconds":6.405636668205261e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.8203125,"distances_sum":2433.2507606596305}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9713598901098905,"seconds":7.534399628639221e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.9609375,"distances_sum":2475.9552757532406}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9652758699633704,"seconds":6.701797246932983e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.9375,"distances_sum":2416.6514524643358}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":10,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":6.515532732009888e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.984375,"distances_sum":2553.5719634959123}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9697802197802201,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.9609375,"distances_sum":2474.289180997524}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9710565476190478,"seconds":6.534159183502197e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.984375,"distances_sum":2452.2484604932392}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9642316017316022,"seconds":6.3963234424591064e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.90625,"distances_sum":2429.6706391227935}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":10,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":6.515532732009888e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.984375,"distances_sum":2553.5719634959123}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":10,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":6.515532732009888e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.984375,"distances_sum":2553.5719634959123}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8693223443223453,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.359375,"distances_sum":1855.720262367447}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.22265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.22265625,"f1":null,"seconds":3.4794211387634277e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":6.3125,"distances_sum":493.52435012222395}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.8693223443223453,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.359375,"distances_sum":1855.720262367447}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9166240009990018,"seconds":6.4354389905929565e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.5703125,"distances_sum":2146.5622466896166}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8544921875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8544921875,"f1":0.9166240009990018,"seconds":6.4354389905929565e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.5703125,"distances_sum":2146.5622466896166}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9391254578754584,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.8828125,"distances_sum":2300.827624590152}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9391254578754584,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.8828125,"distances_sum":2300.827624590152}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8916015625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9391254578754584,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.8828125,"distances_sum":2300.827624590152}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8791411713286722,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.2734375,"distances_sum":2285.2477658830544}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.794921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.794921875,"f1":0.8791411713286722,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.2734375,"distances_sum":2285.2477658830544}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9549049908424914,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8125,"distances_sum":2936.0105036030213}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9549049908424914,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8125,"distances_sum":2936.0105036030213}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.970890567765568,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8671875,"distances_sum":3056.720010532237}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9597386988011993,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7890625,"distances_sum":3010.6966932351074}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9733459249084253,"seconds":6.599351763725281e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":3053.5246901617425}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9733459249084253,"seconds":6.599351763725281e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":3053.5246901617425}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9733459249084253,"seconds":6.599351763725281e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":3053.5246901617425}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7160677863802871,"seconds":2.769753336906433e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":7.3984375,"distances_sum":1361.3909027954057}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19140625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.19140625,"f1":null,"seconds":1.8905848264694214e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":5.5390625,"distances_sum":494.4458871948647}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5732421875,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5732421875,"f1":0.7160677863802871,"seconds":2.769753336906433e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":7.3984375,"distances_sum":1361.3909027954057}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8836200258075265,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.2421875,"distances_sum":2195.664475271387}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8001059704184713,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":7.984375,"distances_sum":1679.7040157670942}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9117533508158515,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.3828125,"distances_sum":2355.87695431563}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8807161588411596,"seconds":4.699453711509705e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.28125,"distances_sum":2162.802276811003}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84765625,"state":{"ssize":9,"bsize":6},"perf":{"precision":1.0,"recall":0.84765625,"f1":0.9117533508158515,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.3828125,"distances_sum":2355.87695431563}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9538919413919418,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.8203125,"distances_sum":2696.8062223784177}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9451579670329675,"seconds":6.105750799179077e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.6875,"distances_sum":2668.4778734543033}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":13,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9710393772893775,"seconds":6.366521120071411e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.8828125,"distances_sum":2844.1095260799875}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9175995879120887,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.40625,"distances_sum":2406.106656167412}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.958373397435898,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.765625,"distances_sum":2719.9263441166}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.955248397435898,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.7578125,"distances_sum":2751.5730270791382}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9288060897435902,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.5234375,"distances_sum":2462.7994829788927}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9644745879120883,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.8515625,"distances_sum":2783.2067381636393}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9454529845154853,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.703125,"distances_sum":2667.7625677840483}, best_list's length: 15, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":10,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9113672785547793,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.4921875,"distances_sum":2380.8053072361863}, best_list's length: 16, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":13,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9710393772893775,"seconds":6.366521120071411e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.8828125,"distances_sum":2844.1095260799875}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":13,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9710393772893775,"seconds":6.366521120071411e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.8828125,"distances_sum":2844.1095260799875}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2119140625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2119140625,"f1":null,"seconds":3.721565008163452e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.5859375,"distances_sum":560.7670985184967}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.7049844252969258,"seconds":4.773959517478943e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.1875,"distances_sum":1389.1810121069138}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1982421875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1982421875,"f1":null,"seconds":3.0919909477233887e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.421875,"distances_sum":518.3865110660375}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.564453125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.564453125,"f1":0.7049844252969258,"seconds":4.773959517478943e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.1875,"distances_sum":1389.1810121069138}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7771913850038858,"seconds":4.798173904418945e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.53125,"distances_sum":1682.5870672057017}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9359317765567775,"seconds":9.290874004364014e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.65625,"distances_sum":2568.6714971631245}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.771270396270397,"seconds":4.902482032775879e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.515625,"distances_sum":1645.0910031300218}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8645578379953387,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.1484375,"distances_sum":2047.5208912465657}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9359317765567775,"seconds":9.290874004364014e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.65625,"distances_sum":2568.6714971631245}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9407623626373635,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7421875,"distances_sum":2623.0956152044637}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9630208333333339,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":2772.5263220481643}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9630208333333339,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":2772.5263220481643}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9630208333333339,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":2772.5263220481643}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.255859375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.255859375,"f1":null,"seconds":3.123655915260315e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.734375,"distances_sum":454.836887960021}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.816559910774231e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.0390625,"distances_sum":685.5106530573228}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8500570609945618,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.921875,"distances_sum":1495.4905609222983}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8500570609945618,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.921875,"distances_sum":1495.4905609222983}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.89951662920413,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.2578125,"distances_sum":1649.8061275673983}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8989812271062279,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.2421875,"distances_sum":1615.2404183134527}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9261961996337,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.484375,"distances_sum":1740.7438999459882}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9261961996337,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.484375,"distances_sum":1740.7438999459882}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882786,"seconds":6.513670086860657e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8828125,"distances_sum":1945.3748142927573}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9719894688644691,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8984375,"distances_sum":2011.315966784268}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9317822802197807,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.5703125,"distances_sum":1756.170285716812}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9569654304029309,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.828125,"distances_sum":1914.3889096306496}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9631581959706966,"seconds":6.2230974435806274e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8125,"distances_sum":1956.0594363742464}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696829212454217,"seconds":6.528571248054504e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.90625,"distances_sum":1977.9869501866876}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9719894688644691,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8984375,"distances_sum":2011.315966784268}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9719894688644691,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8984375,"distances_sum":2011.315966784268}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8473021769896779,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.953125,"distances_sum":1466.9146208914913}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.857232350982352,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.9921875,"distances_sum":1492.9694248554927}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.857232350982352,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.9921875,"distances_sum":1492.9694248554927}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9572229853479859,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.75,"distances_sum":1956.596328738228}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8642576173826182,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.9765625,"distances_sum":1516.051573185363}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9572229853479859,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.75,"distances_sum":1956.596328738228}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9572229853479859,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.75,"distances_sum":1956.596328738228}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9572229853479859,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.75,"distances_sum":1956.596328738228}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3779296875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3779296875,"f1":null,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.015625,"distances_sum":654.9130365235509}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5556640625,"f1":null,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.140625,"distances_sum":991.109074181008}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3642578125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3642578125,"f1":null,"seconds":3.8053840398788452e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.015625,"distances_sum":624.462030674798}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5556640625,"state":{"ssize":4,"bsize":3},"perf":{"precision":null,"recall":0.5556640625,"f1":null,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.140625,"distances_sum":991.109074181008}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6484375,"f1":0.7740882381507388,"seconds":4.500150680541992e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.7421875,"distances_sum":1200.4438202406732}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.859825591075592,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.2890625,"distances_sum":1450.8357100395062}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9072000915750925,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.390625,"distances_sum":1607.1899361116696}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7794573482073487,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.7890625,"distances_sum":1189.4617743669526}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9021181943056951,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.390625,"distances_sum":1615.4023033725564}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7886004620379627,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.9296875,"distances_sum":1253.8278332342734}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83984375,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.83984375,"f1":0.9072000915750925,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.390625,"distances_sum":1607.1899361116696}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9644345238095243,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.875,"distances_sum":1925.670343216019}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9308009698634703,"seconds":3.5688281059265137e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.578125,"distances_sum":1749.740475628474}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9389797702297709,"seconds":3.9637088775634766e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6953125,"distances_sum":1777.140616308899}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644345238095243,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.875,"distances_sum":1925.670343216019}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644345238095243,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.875,"distances_sum":1925.670343216019}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2216796875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2216796875,"f1":null,"seconds":1.7583370208740234e-6,"exhaustive_search_seconds":9.611248970031738e-7,"evaluations":4.921875,"distances_sum":426.80843024555304}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.23046875,"f1":null,"seconds":1.7862766981124878e-6,"exhaustive_search_seconds":9.611248970031738e-7,"evaluations":5.1484375,"distances_sum":430.16128292198607}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.23046875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.23046875,"f1":null,"seconds":1.7862766981124878e-6,"exhaustive_search_seconds":9.611248970031738e-7,"evaluations":5.1484375,"distances_sum":430.16128292198607}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.8368719821844832,"seconds":4.149973392486572e-6,"exhaustive_search_seconds":9.611248970031738e-7,"evaluations":7.828125,"distances_sum":1429.610234390322}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8537842365967374,"seconds":3.207474946975708e-6,"exhaustive_search_seconds":9.611248970031738e-7,"evaluations":7.828125,"distances_sum":1480.6222958279386}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8537842365967374,"seconds":3.207474946975708e-6,"exhaustive_search_seconds":9.611248970031738e-7,"evaluations":7.828125,"distances_sum":1480.6222958279386}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9369963369963376,"seconds":3.9208680391311646e-6,"exhaustive_search_seconds":9.611248970031738e-7,"evaluations":8.546875,"distances_sum":1865.1640716147028}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9432577838827845,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":9.611248970031738e-7,"evaluations":8.6015625,"distances_sum":1890.0570719099842}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8716778013653022,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":9.611248970031738e-7,"evaluations":8.0625,"distances_sum":1536.827446086585}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9380895146520155,"seconds":3.844499588012695e-6,"exhaustive_search_seconds":9.611248970031738e-7,"evaluations":8.578125,"distances_sum":1872.3478000424789}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9432577838827845,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":9.611248970031738e-7,"evaluations":8.6015625,"distances_sum":1890.0570719099842}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.900390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9432577838827845,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":9.611248970031738e-7,"evaluations":8.6015625,"distances_sum":1890.0570719099842}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7058790168165174,"seconds":3.039836883544922e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":7.359375,"distances_sum":1128.1369288587812}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5458984375,"f1":null,"seconds":2.9187649488449097e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":7.2421875,"distances_sum":1079.0469896087811}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5634765625,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5634765625,"f1":0.7058790168165174,"seconds":3.039836883544922e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":7.359375,"distances_sum":1128.1369288587812}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8594015359640368,"seconds":3.4924596548080444e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.3671875,"distances_sum":1612.5162477848548}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7999151889776898,"seconds":4.494562745094299e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":7.90625,"distances_sum":1361.5912358910882}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7842371170496177,"seconds":4.606321454048157e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":7.7578125,"distances_sum":1317.1296418932252}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9271691849816858,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.7109375,"distances_sum":1901.0832760058136}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.873046875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.873046875,"f1":0.9271691849816858,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.7109375,"distances_sum":1901.0832760058136}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9778846153846156,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.9609375,"distances_sum":2207.102801486213}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9506410256410261,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.859375,"distances_sum":2045.1365213865604}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9616331585081586,"seconds":3.6731362342834473e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.8828125,"distances_sum":2125.9457003783705}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9778846153846156,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.9609375,"distances_sum":2207.102801486213}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9778846153846156,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.9609375,"distances_sum":2207.102801486213}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7956078643578652,"seconds":3.3583492040634155e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.96875,"distances_sum":1318.0643015671367}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.7008030164280169,"seconds":3.0118972063064575e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.1171875,"distances_sum":1057.4118365140484}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.224609375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.224609375,"f1":null,"seconds":2.5779008865356445e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":5.3125,"distances_sum":437.02621318254387}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.55078125,"f1":null,"seconds":3.550201654434204e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.0234375,"distances_sum":1077.5388616766697}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6767578125,"f1":0.7956078643578652,"seconds":3.3583492040634155e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.96875,"distances_sum":1318.0643015671367}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8496253746253754,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.28125,"distances_sum":1484.4931555906192}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9296276640026646,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.703125,"distances_sum":1868.0995948141322}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8909772519147526,"seconds":3.688037395477295e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.59375,"distances_sum":1677.7144033935112}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9296276640026646,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.703125,"distances_sum":1868.0995948141322}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9593635531135537,"seconds":3.6526471376419067e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.84375,"distances_sum":2040.632519905797}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9461939102564109,"seconds":3.734603524208069e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.8125,"distances_sum":1961.040201952866}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9317994505494511,"seconds":4.014000296592712e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.78125,"distances_sum":1853.0334850134814}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9634901556776558,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.90625,"distances_sum":2044.16886911548}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9481284340659348,"seconds":3.5744160413742065e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.84375,"distances_sum":1959.3718161515758}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9427598443223448,"seconds":3.846362233161926e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.7890625,"distances_sum":1933.334443481666}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9634901556776558,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.90625,"distances_sum":2044.16886911548}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9634901556776558,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.90625,"distances_sum":2044.16886911548}}, n: 9
inertia(cfft.distances) = 23.227956693794887
inertia(cdnet.distances) = 32.15988336738631
inertia(crand.distances) = 20.289700089126562
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9111111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9444444444444445
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9044444444444445
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9222222222222222
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.92
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9177777777777777
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.928888888888889
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9111111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.88
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8711111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9266666666666667
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222224
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8866666666666667
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8666666666666666
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9133333333333332
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9066666666666666
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 3, 1, 3, 1, 2, 2, 3, 1, 3, 3, 3, 2, 1, 3, 3, 3, 2, 1, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.3940000033834476] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3940000033834476, 0.18046031864305512] ***
*** starting iteration: 2; err: [Inf, 0.3940000033834476, 0.18046031864305512] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3940000033834476, 0.18046031864305512, 0.1693480246100245] ***
*** starting iteration: 3; err: [Inf, 0.3940000033834476, 0.18046031864305512, 0.1693480246100245] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3940000033834476, 0.18046031864305512, 0.1693480246100245, 0.16623308135521941] ***
*** starting iteration: 4; err: [Inf, 0.3940000033834476, 0.18046031864305512, 0.1693480246100245, 0.16623308135521941] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3940000033834476, 0.18046031864305512, 0.1693480246100245, 0.16623308135521941, 0.16563043541887676] ***
*** finished computation of 12 references, err: [Inf, 0.3940000033834476, 0.18046031864305512, 0.1693480246100245, 0.16623308135521941, 0.16563043541887676] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 3.1230000162946094] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.1230000162946094, 0.7221166928702287] ***
*** finished computation of 3 references, err: [Inf, 3.1230000162946094, 0.7221166928702287] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 24]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 36), (3, 24)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [1] (freq >= 2) [from [29, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4006209793798051] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4006209793798051, 0.18962679221077688] ***
*** starting iteration: 2; err: [Inf, 0.4006209793798051, 0.18962679221077688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4006209793798051, 0.18962679221077688, 0.1860683774429518] ***
*** starting iteration: 3; err: [Inf, 0.4006209793798051, 0.18962679221077688, 0.1860683774429518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4006209793798051, 0.18962679221077688, 0.1860683774429518, 0.18573474023224848] ***
*** finished computation of 7 references, err: [Inf, 0.4006209793798051, 0.18962679221077688, 0.1860683774429518, 0.18573474023224848] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 6]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 12), (3, 6)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31875592572999134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31875592572999134, 0.16165609970885633] ***
*** starting iteration: 2; err: [Inf, 0.31875592572999134, 0.16165609970885633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31875592572999134, 0.16165609970885633, 0.15309902516298152] ***
*** starting iteration: 3; err: [Inf, 0.31875592572999134, 0.16165609970885633, 0.15309902516298152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31875592572999134, 0.16165609970885633, 0.15309902516298152, 0.15309902516298152] ***
*** finished computation of 7 references, err: [Inf, 0.31875592572999134, 0.16165609970885633, 0.15309902516298152, 0.15309902516298152] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 16]]
** centroid: 1, normalized-entropy: 0.6292492238560344, [(2, 3), (3, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6274999981335354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6274999981335354, 0.2456673050215338] ***
*** starting iteration: 2; err: [Inf, 0.6274999981335354, 0.2456673050215338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6274999981335354, 0.2456673050215338, 0.22721970042113793] ***
*** starting iteration: 3; err: [Inf, 0.6274999981335354, 0.2456673050215338, 0.22721970042113793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6274999981335354, 0.2456673050215338, 0.22721970042113793, 0.22338724167017143] ***
*** starting iteration: 4; err: [Inf, 0.6274999981335354, 0.2456673050215338, 0.22721970042113793, 0.22338724167017143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6274999981335354, 0.2456673050215338, 0.22721970042113793, 0.22338724167017143, 0.22035987312568983] ***
*** starting iteration: 5; err: [Inf, 0.6274999981335354, 0.2456673050215338, 0.22721970042113793, 0.22338724167017143, 0.22035987312568983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6274999981335354, 0.2456673050215338, 0.22721970042113793, 0.22338724167017143, 0.22035987312568983, 0.21904331403518668] ***
*** starting iteration: 6; err: [Inf, 0.6274999981335354, 0.2456673050215338, 0.22721970042113793, 0.22338724167017143, 0.22035987312568983, 0.21904331403518668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6274999981335354, 0.2456673050215338, 0.22721970042113793, 0.22338724167017143, 0.22035987312568983, 0.21904331403518668, 0.21843094629361873] ***
*** finished computation of 7 references, err: [Inf, 0.6274999981335354, 0.2456673050215338, 0.22721970042113793, 0.22338724167017143, 0.22035987312568983, 0.21904331403518668, 0.21843094629361873] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 7, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6146000069566733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6146000069566733, 0.25541764651102844] ***
*** starting iteration: 2; err: [Inf, 0.6146000069566733, 0.25541764651102844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6146000069566733, 0.25541764651102844, 0.24845175338721898] ***
*** starting iteration: 3; err: [Inf, 0.6146000069566733, 0.25541764651102844, 0.24845175338721898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6146000069566733, 0.25541764651102844, 0.24845175338721898, 0.2478461338574633] ***
*** finished computation of 7 references, err: [Inf, 0.6146000069566733, 0.25541764651102844, 0.24845175338721898, 0.2478461338574633] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 19]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 1), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 21, 6]]
** centroid: 6, normalized-entropy: 0.7642045065086204, [(2, 21), (3, 6)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4942000069582282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4942000069582282, 0.22215695599373522] ***
*** starting iteration: 2; err: [Inf, 0.4942000069582282, 0.22215695599373522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4942000069582282, 0.22215695599373522, 0.2186009173480921] ***
*** starting iteration: 3; err: [Inf, 0.4942000069582282, 0.22215695599373522, 0.2186009173480921] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4942000069582282, 0.22215695599373522, 0.2186009173480921, 0.21709980383632194] ***
*** starting iteration: 4; err: [Inf, 0.4942000069582282, 0.22215695599373522, 0.2186009173480921, 0.21709980383632194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4942000069582282, 0.22215695599373522, 0.2186009173480921, 0.21709980383632194, 0.21669981234832872] ***
*** finished computation of 7 references, err: [Inf, 0.4942000069582282, 0.22215695599373522, 0.2186009173480921, 0.21709980383632194, 0.21669981234832872] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 4]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 12), (3, 4)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.6206999989167463] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6206999989167463, 1.1277202388564571] ***
*** finished computation of 3 references, err: [Inf, 1.6206999989167463, 1.1277202388564571] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 34]]
** centroid: 1, normalized-entropy: 0.9954515828457716, [(2, 29), (3, 34)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [21, 4, 0]]
** centroid: 2, normalized-entropy: 0.634309554640566, [(1, 21), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.9976999480743505] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.9976999480743505, 1.5609564319172693] ***
*** finished computation of 3 references, err: [Inf, 6.9976999480743505, 1.5609564319172693] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 26]]
** centroid: 1, normalized-entropy: 0.9587118829771317, [(2, 16), (3, 26)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [38, 14, 0]]
** centroid: 3, normalized-entropy: 0.8403586716091169, [(1, 38), (2, 14)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.649499994240647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.649499994240647, 0.35573357264929567] ***
*** finished computation of 7 references, err: [Inf, 0.649499994240647, 0.35573357264929567] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 20, 12]]
** centroid: 5, normalized-entropy: 0.954434002924965, [(2, 20), (3, 12)]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 7, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39140000255349006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39140000255349006, 0.2792384737246271] ***
*** finished computation of 7 references, err: [Inf, 0.39140000255349006, 0.2792384737246271] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 3]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 10, 4]]
** centroid: 6, normalized-entropy: 0.8631205685666311, [(2, 10), (3, 4)]
*** center 7: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4771000087244826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4771000087244826, 0.28775691452014235] ***
*** finished computation of 7 references, err: [Inf, 0.4771000087244826, 0.28775691452014235] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 8, 15]]
** centroid: 7, normalized-entropy: 0.9321115676166747, [(2, 8), (3, 15)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41650000739820425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41650000739820425, 0.280486043768489] ***
*** starting iteration: 2; err: [Inf, 0.41650000739820425, 0.280486043768489] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189] ***
*** starting iteration: 3; err: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329] ***
*** starting iteration: 4; err: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329, 0.23067520558895996] ***
*** starting iteration: 5; err: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329, 0.23067520558895996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329, 0.23067520558895996, 0.2272027696214723] ***
*** starting iteration: 6; err: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329, 0.23067520558895996, 0.2272027696214723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329, 0.23067520558895996, 0.2272027696214723, 0.2238113440790053] ***
*** starting iteration: 7; err: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329, 0.23067520558895996, 0.2272027696214723, 0.2238113440790053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329, 0.23067520558895996, 0.2272027696214723, 0.2238113440790053, 0.2213434255933912] ***
*** starting iteration: 8; err: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329, 0.23067520558895996, 0.2272027696214723, 0.2238113440790053, 0.2213434255933912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329, 0.23067520558895996, 0.2272027696214723, 0.2238113440790053, 0.2213434255933912, 0.21903424765939408] ***
*** starting iteration: 9; err: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329, 0.23067520558895996, 0.2272027696214723, 0.2238113440790053, 0.2213434255933912, 0.21903424765939408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329, 0.23067520558895996, 0.2272027696214723, 0.2238113440790053, 0.2213434255933912, 0.21903424765939408, 0.21798732829715983] ***
*** starting iteration: 10; err: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329, 0.23067520558895996, 0.2272027696214723, 0.2238113440790053, 0.2213434255933912, 0.21903424765939408, 0.21798732829715983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329, 0.23067520558895996, 0.2272027696214723, 0.2238113440790053, 0.2213434255933912, 0.21903424765939408, 0.21798732829715983, 0.21798732829715983] ***
*** finished computation of 7 references, err: [Inf, 0.41650000739820425, 0.280486043768489, 0.25800977242189, 0.2441310197804329, 0.23067520558895996, 0.2272027696214723, 0.2238113440790053, 0.2213434255933912, 0.21903424765939408, 0.21798732829715983, 0.21798732829715983] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 12]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6624999981084911] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6624999981084911, 0.30148574962570357] ***
*** starting iteration: 2; err: [Inf, 0.6624999981084911, 0.30148574962570357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6624999981084911, 0.30148574962570357, 0.26151659657257215] ***
*** starting iteration: 3; err: [Inf, 0.6624999981084911, 0.30148574962570357, 0.26151659657257215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6624999981084911, 0.30148574962570357, 0.26151659657257215, 0.26112288291883834] ***
*** finished computation of 7 references, err: [Inf, 0.6624999981084911, 0.30148574962570357, 0.26151659657257215, 0.26112288291883834] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 13, 6]]
** centroid: 6, normalized-entropy: 0.8997437586982626, [(2, 13), (3, 6)]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5328000052759276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5328000052759276, 0.2713555680038058] ***
*** starting iteration: 2; err: [Inf, 0.5328000052759276, 0.2713555680038058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5328000052759276, 0.2713555680038058, 0.23841682221070085] ***
*** starting iteration: 3; err: [Inf, 0.5328000052759276, 0.2713555680038058, 0.23841682221070085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5328000052759276, 0.2713555680038058, 0.23841682221070085, 0.22561968280362582] ***
*** starting iteration: 4; err: [Inf, 0.5328000052759276, 0.2713555680038058, 0.23841682221070085, 0.22561968280362582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5328000052759276, 0.2713555680038058, 0.23841682221070085, 0.22561968280362582, 0.2219169030587002] ***
*** starting iteration: 5; err: [Inf, 0.5328000052759276, 0.2713555680038058, 0.23841682221070085, 0.22561968280362582, 0.2219169030587002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5328000052759276, 0.2713555680038058, 0.23841682221070085, 0.22561968280362582, 0.2219169030587002, 0.22085264924179196] ***
*** starting iteration: 6; err: [Inf, 0.5328000052759276, 0.2713555680038058, 0.23841682221070085, 0.22561968280362582, 0.2219169030587002, 0.22085264924179196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5328000052759276, 0.2713555680038058, 0.23841682221070085, 0.22561968280362582, 0.2219169030587002, 0.22085264924179196, 0.22037500040053096] ***
*** finished computation of 7 references, err: [Inf, 0.5328000052759276, 0.2713555680038058, 0.23841682221070085, 0.22561968280362582, 0.2219169030587002, 0.22085264924179196, 0.22037500040053096] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 8]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 8)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 6: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 11, 9]]
** centroid: 7, normalized-entropy: 0.9927744539878083, [(2, 11), (3, 9)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7568487450734546] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7568487450734546, 0.6579086245735098] ***
*** starting iteration: 2; err: [Inf, 0.7568487450734546, 0.6579086245735098] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7568487450734546, 0.6579086245735098, 0.6542317035270915] ***
*** starting iteration: 3; err: [Inf, 0.7568487450734546, 0.6579086245735098, 0.6542317035270915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7568487450734546, 0.6579086245735098, 0.6542317035270915, 0.653983814256297] ***
*** finished computation of 3 references, err: [Inf, 0.7568487450734546, 0.6579086245735098, 0.6542317035270915, 0.653983814256297] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 37, 34]]
** centroid: 1, normalized-entropy: 0.9987117514654895, [(2, 37), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.074414914184997] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.074414914184997, 0.7479332150142123] ***
*** starting iteration: 2; err: [Inf, 3.074414914184997, 0.7479332150142123] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.074414914184997, 0.7479332150142123, 0.7241737081876626] ***
*** starting iteration: 3; err: [Inf, 3.074414914184997, 0.7479332150142123, 0.7241737081876626] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.074414914184997, 0.7479332150142123, 0.7241737081876626, 0.7239741841800285] ***
*** finished computation of 3 references, err: [Inf, 3.074414914184997, 0.7479332150142123, 0.7241737081876626, 0.7239741841800285] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 34]]
** centroid: 2, normalized-entropy: 0.9971803988942641, [(2, 30), (3, 34)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [12, 3, 0]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(1, 12), (2, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.81648420357265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.81648420357265, 0.6283119951913195] ***
*** starting iteration: 2; err: [Inf, 2.81648420357265, 0.6283119951913195] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.81648420357265, 0.6283119951913195, 0.33214620620521984] ***
*** starting iteration: 3; err: [Inf, 2.81648420357265, 0.6283119951913195, 0.33214620620521984] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.81648420357265, 0.6283119951913195, 0.33214620620521984, 0.3180572346757728] ***
*** starting iteration: 4; err: [Inf, 2.81648420357265, 0.6283119951913195, 0.33214620620521984, 0.3180572346757728] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.81648420357265, 0.6283119951913195, 0.33214620620521984, 0.3180572346757728, 0.31663718868783053] ***
*** starting iteration: 5; err: [Inf, 2.81648420357265, 0.6283119951913195, 0.33214620620521984, 0.3180572346757728, 0.31663718868783053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.81648420357265, 0.6283119951913195, 0.33214620620521984, 0.3180572346757728, 0.31663718868783053, 0.31620109241683486] ***
*** finished computation of 3 references, err: [Inf, 2.81648420357265, 0.6283119951913195, 0.33214620620521984, 0.3180572346757728, 0.31663718868783053, 0.31620109241683486] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 1, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 7]]
** centroid: 2, normalized-entropy: 0.7335379291086666, [(2, 27), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.270899993634461] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.270899993634461, 1.0098766502853922] ***
*** finished computation of 3 references, err: [Inf, 1.270899993634461, 1.0098766502853922] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 36, 34]]
** centroid: 2, normalized-entropy: 0.9994110647387552, [(2, 36), (3, 34)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [12, 1, 0]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(1, 12), (2, 1)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.4923000002827305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.4923000002827305, 1.3057888136039437] ***
*** finished computation of 3 references, err: [Inf, 4.4923000002827305, 1.3057888136039437] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 10, 0]]
** centroid: 2, normalized-entropy: 0.7824441294066888, [(1, 33), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 23, 24]]
** centroid: 3, normalized-entropy: 0.9996734260048917, [(2, 23), (3, 24)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.883699987251713] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.883699987251713, 1.1693757170496946] ***
*** finished computation of 3 references, err: [Inf, 3.883699987251713, 1.1693757170496946] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [38, 7, 0]]
** centroid: 2, normalized-entropy: 0.6235702082127973, [(1, 38), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 23, 18]]
** centroid: 3, normalized-entropy: 0.9892452969285004, [(2, 23), (3, 18)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4550000100326952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4550000100326952, 0.28803279642309904] ***
*** finished computation of 7 references, err: [Inf, 0.4550000100326952, 0.28803279642309904] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 3, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 3: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 11]]
** centroid: 4, normalized-entropy: 0.9666186325481027, [(2, 17), (3, 11)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8370000041656617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8370000041656617, 0.3834855728568833] ***
*** finished computation of 7 references, err: [Inf, 0.8370000041656617, 0.3834855728568833] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 11, 10]]
** centroid: 4, normalized-entropy: 0.998363672593813, [(2, 11), (3, 10)]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5073000111313675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5073000111313675, 0.3778970056617768] ***
*** finished computation of 7 references, err: [Inf, 0.5073000111313675, 0.3778970056617768] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 16]]
** centroid: 1, normalized-entropy: 0.6292492238560344, [(2, 3), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 27, 5]]
** centroid: 4, normalized-entropy: 0.625262405223423, [(2, 27), (3, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.007748846466044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.007748846466044, 0.41022618468251154] ***
*** starting iteration: 2; err: [Inf, 1.007748846466044, 0.41022618468251154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.007748846466044, 0.41022618468251154, 0.3935998814990964] ***
*** starting iteration: 3; err: [Inf, 1.007748846466044, 0.41022618468251154, 0.3935998814990964] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.007748846466044, 0.41022618468251154, 0.3935998814990964, 0.3826175366526354] ***
*** finished computation of 3 references, err: [Inf, 1.007748846466044, 0.41022618468251154, 0.3935998814990964, 0.3826175366526354] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 37, 14]]
** centroid: 2, normalized-entropy: 0.8478617451660525, [(2, 37), (3, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.9781544644684157] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9781544644684157, 0.7485143353319924] ***
*** starting iteration: 2; err: [Inf, 1.9781544644684157, 0.7485143353319924] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9781544644684157, 0.7485143353319924, 0.7419693484749237] ***
*** starting iteration: 3; err: [Inf, 1.9781544644684157, 0.7485143353319924, 0.7419693484749237] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9781544644684157, 0.7485143353319924, 0.7419693484749237, 0.728818247343981] ***
*** finished computation of 3 references, err: [Inf, 1.9781544644684157, 0.7485143353319924, 0.7419693484749237, 0.728818247343981] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 34]]
** centroid: 1, normalized-entropy: 0.9971803988942641, [(2, 30), (3, 34)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [17, 3, 0]]
** centroid: 2, normalized-entropy: 0.6098403047164005, [(1, 17), (2, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6944956539595478] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6944956539595478, 0.33155128396815753] ***
*** starting iteration: 2; err: [Inf, 0.6944956539595478, 0.33155128396815753] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6944956539595478, 0.33155128396815753, 0.3182438219459799] ***
*** starting iteration: 3; err: [Inf, 0.6944956539595478, 0.33155128396815753, 0.3182438219459799] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6944956539595478, 0.33155128396815753, 0.3182438219459799, 0.31663718868783053] ***
*** finished computation of 3 references, err: [Inf, 0.6944956539595478, 0.33155128396815753, 0.3182438219459799, 0.31663718868783053] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 8]]
** centroid: 1, normalized-entropy: 0.775512658133148, [(2, 27), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 24]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0373748401415055] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0373748401415055, 0.6615843406506017] ***
*** starting iteration: 2; err: [Inf, 1.0373748401415055, 0.6615843406506017] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0373748401415055, 0.6615843406506017, 0.6562631166426688] ***
*** starting iteration: 3; err: [Inf, 1.0373748401415055, 0.6615843406506017, 0.6562631166426688] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0373748401415055, 0.6615843406506017, 0.6562631166426688, 0.653983814256297] ***
*** finished computation of 3 references, err: [Inf, 1.0373748401415055, 0.6615843406506017, 0.6562631166426688, 0.653983814256297] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 37, 34]]
** centroid: 3, normalized-entropy: 0.9987117514654895, [(2, 37), (3, 34)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.556707732628381] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.556707732628381, 0.9984699445612404] ***
*** starting iteration: 2; err: [Inf, 4.556707732628381, 0.9984699445612404] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.556707732628381, 0.9984699445612404, 0.42622178417834844] ***
*** starting iteration: 3; err: [Inf, 4.556707732628381, 0.9984699445612404, 0.42622178417834844] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.556707732628381, 0.9984699445612404, 0.42622178417834844, 0.3915161631362457] ***
*** finished computation of 3 references, err: [Inf, 4.556707732628381, 0.9984699445612404, 0.42622178417834844, 0.3915161631362457] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 7]]
** centroid: 2, normalized-entropy: 0.6789538995185759, [(2, 32), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4244902210028221] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4244902210028221, 0.31273396495078143] ***
*** starting iteration: 2; err: [Inf, 0.4244902210028221, 0.31273396495078143] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4244902210028221, 0.31273396495078143, 0.3126435218495482] ***
*** finished computation of 3 references, err: [Inf, 0.4244902210028221, 0.31273396495078143, 0.3126435218495482] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 3]]
** centroid: 1, normalized-entropy: 0.47983202361612853, [(2, 26), (3, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 29]]
** centroid: 2, normalized-entropy: 0.5328350630342235, [(2, 4), (3, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41976528310469463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41976528310469463, 0.21773584505517773] ***
*** starting iteration: 2; err: [Inf, 0.41976528310469463, 0.21773584505517773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41976528310469463, 0.21773584505517773, 0.21480691793244305] ***
*** starting iteration: 3; err: [Inf, 0.41976528310469463, 0.21773584505517773, 0.21480691793244305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41976528310469463, 0.21773584505517773, 0.21480691793244305, 0.2109017736691071] ***
*** starting iteration: 4; err: [Inf, 0.41976528310469463, 0.21773584505517773, 0.21480691793244305, 0.2109017736691071] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41976528310469463, 0.21773584505517773, 0.21480691793244305, 0.2109017736691071, 0.20556134483457014] ***
*** starting iteration: 5; err: [Inf, 0.41976528310469463, 0.21773584505517773, 0.21480691793244305, 0.2109017736691071, 0.20556134483457014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41976528310469463, 0.21773584505517773, 0.21480691793244305, 0.2109017736691071, 0.20556134483457014, 0.2008882881482188] ***
*** starting iteration: 6; err: [Inf, 0.41976528310469463, 0.21773584505517773, 0.21480691793244305, 0.2109017736691071, 0.20556134483457014, 0.2008882881482188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41976528310469463, 0.21773584505517773, 0.21480691793244305, 0.2109017736691071, 0.20556134483457014, 0.2008882881482188, 0.2008882881482188] ***
*** finished computation of 7 references, err: [Inf, 0.41976528310469463, 0.21773584505517773, 0.21480691793244305, 0.2109017736691071, 0.20556134483457014, 0.2008882881482188, 0.2008882881482188] ***
*** center 1: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 19, 3]]
** centroid: 3, normalized-entropy: 0.5746356978376794, [(2, 19), (3, 3)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 17]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0532431784609775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0532431784609775, 0.48860068376880805] ***
*** starting iteration: 2; err: [Inf, 1.0532431784609775, 0.48860068376880805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704] ***
*** starting iteration: 3; err: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625] ***
*** starting iteration: 4; err: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625, 0.2798891968291188] ***
*** starting iteration: 5; err: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625, 0.2798891968291188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625, 0.2798891968291188, 0.25742813659642855] ***
*** starting iteration: 6; err: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625, 0.2798891968291188, 0.25742813659642855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625, 0.2798891968291188, 0.25742813659642855, 0.23690566244708738] ***
*** starting iteration: 7; err: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625, 0.2798891968291188, 0.25742813659642855, 0.23690566244708738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625, 0.2798891968291188, 0.25742813659642855, 0.23690566244708738, 0.2210746378425058] ***
*** starting iteration: 8; err: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625, 0.2798891968291188, 0.25742813659642855, 0.23690566244708738, 0.2210746378425058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625, 0.2798891968291188, 0.25742813659642855, 0.23690566244708738, 0.2210746378425058, 0.21453900426732442] ***
*** starting iteration: 9; err: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625, 0.2798891968291188, 0.25742813659642855, 0.23690566244708738, 0.2210746378425058, 0.21453900426732442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625, 0.2798891968291188, 0.25742813659642855, 0.23690566244708738, 0.2210746378425058, 0.21453900426732442, 0.21241573415161125] ***
*** starting iteration: 10; err: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625, 0.2798891968291188, 0.25742813659642855, 0.23690566244708738, 0.2210746378425058, 0.21453900426732442, 0.21241573415161125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625, 0.2798891968291188, 0.25742813659642855, 0.23690566244708738, 0.2210746378425058, 0.21453900426732442, 0.21241573415161125, 0.20772717777984046] ***
*** finished computation of 7 references, err: [Inf, 1.0532431784609775, 0.48860068376880805, 0.42558670873985704, 0.3376487480424625, 0.2798891968291188, 0.25742813659642855, 0.23690566244708738, 0.2210746378425058, 0.21453900426732442, 0.21241573415161125, 0.20772717777984046] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 10, 16]]
** centroid: 3, normalized-entropy: 0.961236604722876, [(2, 10), (3, 16)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7218850627868656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7218850627868656, 0.5028287460601284] ***
*** starting iteration: 2; err: [Inf, 0.7218850627868656, 0.5028287460601284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145] ***
*** starting iteration: 3; err: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145, 0.48344254112537444] ***
*** starting iteration: 4; err: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145, 0.48344254112537444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145, 0.48344254112537444, 0.4083120717341853] ***
*** starting iteration: 5; err: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145, 0.48344254112537444, 0.4083120717341853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145, 0.48344254112537444, 0.4083120717341853, 0.31748739462903586] ***
*** starting iteration: 6; err: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145, 0.48344254112537444, 0.4083120717341853, 0.31748739462903586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145, 0.48344254112537444, 0.4083120717341853, 0.31748739462903586, 0.27117200835775385] ***
*** starting iteration: 7; err: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145, 0.48344254112537444, 0.4083120717341853, 0.31748739462903586, 0.27117200835775385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145, 0.48344254112537444, 0.4083120717341853, 0.31748739462903586, 0.27117200835775385, 0.2605129288502652] ***
*** starting iteration: 8; err: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145, 0.48344254112537444, 0.4083120717341853, 0.31748739462903586, 0.27117200835775385, 0.2605129288502652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145, 0.48344254112537444, 0.4083120717341853, 0.31748739462903586, 0.27117200835775385, 0.2605129288502652, 0.25822599599773777] ***
*** starting iteration: 9; err: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145, 0.48344254112537444, 0.4083120717341853, 0.31748739462903586, 0.27117200835775385, 0.2605129288502652, 0.25822599599773777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145, 0.48344254112537444, 0.4083120717341853, 0.31748739462903586, 0.27117200835775385, 0.2605129288502652, 0.25822599599773777, 0.25732240031414283] ***
*** finished computation of 7 references, err: [Inf, 0.7218850627868656, 0.5028287460601284, 0.4977346764021145, 0.48344254112537444, 0.4083120717341853, 0.31748739462903586, 0.27117200835775385, 0.2605129288502652, 0.25822599599773777, 0.25732240031414283] ***
*** center 1: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 32]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(2, 6), (3, 32)]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 24, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9012000118303114] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9012000118303114, 0.573305810732316] ***
*** starting iteration: 2; err: [Inf, 0.9012000118303114, 0.573305810732316] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9012000118303114, 0.573305810732316, 0.5542608705232689] ***
*** starting iteration: 3; err: [Inf, 0.9012000118303114, 0.573305810732316, 0.5542608705232689] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9012000118303114, 0.573305810732316, 0.5542608705232689, 0.5320003099594879] ***
*** starting iteration: 4; err: [Inf, 0.9012000118303114, 0.573305810732316, 0.5542608705232689, 0.5320003099594879] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9012000118303114, 0.573305810732316, 0.5542608705232689, 0.5320003099594879, 0.5279636645750166] ***
*** starting iteration: 5; err: [Inf, 0.9012000118303114, 0.573305810732316, 0.5542608705232689, 0.5320003099594879, 0.5279636645750166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9012000118303114, 0.573305810732316, 0.5542608705232689, 0.5320003099594879, 0.5279636645750166, 0.5265926833874934] ***
*** starting iteration: 6; err: [Inf, 0.9012000118303114, 0.573305810732316, 0.5542608705232689, 0.5320003099594879, 0.5279636645750166, 0.5265926833874934] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9012000118303114, 0.573305810732316, 0.5542608705232689, 0.5320003099594879, 0.5279636645750166, 0.5265926833874934, 0.5259781352880689] ***
*** finished computation of 3 references, err: [Inf, 0.9012000118303114, 0.573305810732316, 0.5542608705232689, 0.5320003099594879, 0.5279636645750166, 0.5265926833874934, 0.5259781352880689] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 37, 12]]
** centroid: 1, normalized-entropy: 0.8030909760146977, [(2, 37), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1777000001500162] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1777000001500162, 0.6151257280425899] ***
*** starting iteration: 2; err: [Inf, 1.1777000001500162, 0.6151257280425899] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258] ***
*** starting iteration: 3; err: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374] ***
*** starting iteration: 4; err: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374, 0.591671188946842] ***
*** starting iteration: 5; err: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374, 0.591671188946842] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374, 0.591671188946842, 0.5847157339534452] ***
*** starting iteration: 6; err: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374, 0.591671188946842, 0.5847157339534452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374, 0.591671188946842, 0.5847157339534452, 0.5800218485284302] ***
*** starting iteration: 7; err: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374, 0.591671188946842, 0.5847157339534452, 0.5800218485284302] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374, 0.591671188946842, 0.5847157339534452, 0.5800218485284302, 0.5706270309881822] ***
*** starting iteration: 8; err: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374, 0.591671188946842, 0.5847157339534452, 0.5800218485284302, 0.5706270309881822] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374, 0.591671188946842, 0.5847157339534452, 0.5800218485284302, 0.5706270309881822, 0.5651001159025905] ***
*** starting iteration: 9; err: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374, 0.591671188946842, 0.5847157339534452, 0.5800218485284302, 0.5706270309881822, 0.5651001159025905] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374, 0.591671188946842, 0.5847157339534452, 0.5800218485284302, 0.5706270309881822, 0.5651001159025905, 0.5589593312266099] ***
*** starting iteration: 10; err: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374, 0.591671188946842, 0.5847157339534452, 0.5800218485284302, 0.5706270309881822, 0.5651001159025905, 0.5589593312266099] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374, 0.591671188946842, 0.5847157339534452, 0.5800218485284302, 0.5706270309881822, 0.5651001159025905, 0.5589593312266099, 0.5589593312266099] ***
*** finished computation of 3 references, err: [Inf, 1.1777000001500162, 0.6151257280425899, 0.5950811786058258, 0.5935108101589374, 0.591671188946842, 0.5847157339534452, 0.5800218485284302, 0.5706270309881822, 0.5651001159025905, 0.5589593312266099, 0.5589593312266099] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 1, normalized-entropy: 0.2222848306856879, [(2, 1), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 7]]
** centroid: 3, normalized-entropy: 0.6789538995185759, [(2, 32), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3221999943171125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3221999943171125, 0.4679330230512299] ***
*** starting iteration: 2; err: [Inf, 1.3221999943171125, 0.4679330230512299] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3221999943171125, 0.4679330230512299, 0.46143529717828485] ***
*** starting iteration: 3; err: [Inf, 1.3221999943171125, 0.4679330230512299, 0.46143529717828485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3221999943171125, 0.4679330230512299, 0.46143529717828485, 0.45909023139504795] ***
*** starting iteration: 4; err: [Inf, 1.3221999943171125, 0.4679330230512299, 0.46143529717828485, 0.45909023139504795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3221999943171125, 0.4679330230512299, 0.46143529717828485, 0.45909023139504795, 0.4572716499554049] ***
*** starting iteration: 5; err: [Inf, 1.3221999943171125, 0.4679330230512299, 0.46143529717828485, 0.45909023139504795, 0.4572716499554049] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3221999943171125, 0.4679330230512299, 0.46143529717828485, 0.45909023139504795, 0.4572716499554049, 0.45455946270810604] ***
*** starting iteration: 6; err: [Inf, 1.3221999943171125, 0.4679330230512299, 0.46143529717828485, 0.45909023139504795, 0.4572716499554049, 0.45455946270810604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3221999943171125, 0.4679330230512299, 0.46143529717828485, 0.45909023139504795, 0.4572716499554049, 0.45455946270810604, 0.4524288024163041] ***
*** starting iteration: 7; err: [Inf, 1.3221999943171125, 0.4679330230512299, 0.46143529717828485, 0.45909023139504795, 0.4572716499554049, 0.45455946270810604, 0.4524288024163041] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3221999943171125, 0.4679330230512299, 0.46143529717828485, 0.45909023139504795, 0.4572716499554049, 0.45455946270810604, 0.4524288024163041, 0.4518570041854481] ***
*** finished computation of 3 references, err: [Inf, 1.3221999943171125, 0.4679330230512299, 0.46143529717828485, 0.45909023139504795, 0.4572716499554049, 0.45455946270810604, 0.4524288024163041, 0.4518570041854481] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 25, 4]]
** centroid: 1, normalized-entropy: 0.5787946246321198, [(2, 25), (3, 4)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 28]]
** centroid: 2, normalized-entropy: 0.6136190195993708, [(2, 5), (3, 28)]
*** center 3: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7369403672078579] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7369403672078579, 0.3956045745618137] ***
*** starting iteration: 2; err: [Inf, 0.7369403672078579, 0.3956045745618137] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7369403672078579, 0.3956045745618137, 0.3863309215291569] ***
*** starting iteration: 3; err: [Inf, 0.7369403672078579, 0.3956045745618137, 0.3863309215291569] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7369403672078579, 0.3956045745618137, 0.3863309215291569, 0.379768891123792] ***
*** finished computation of 3 references, err: [Inf, 0.7369403672078579, 0.3956045745618137, 0.3863309215291569, 0.379768891123792] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 37, 12]]
** centroid: 1, normalized-entropy: 0.8030909760146977, [(2, 37), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1611723937440583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1611723937440583, 0.4091099752180217] ***
*** starting iteration: 2; err: [Inf, 1.1611723937440583, 0.4091099752180217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1611723937440583, 0.4091099752180217, 0.3916194153168929] ***
*** starting iteration: 3; err: [Inf, 1.1611723937440583, 0.4091099752180217, 0.3916194153168929] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1611723937440583, 0.4091099752180217, 0.3916194153168929, 0.3909657725377006] ***
*** finished computation of 3 references, err: [Inf, 1.1611723937440583, 0.4091099752180217, 0.3916194153168929, 0.3909657725377006] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 7]]
** centroid: 3, normalized-entropy: 0.6789538995185759, [(2, 32), (3, 7)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.741175768550329] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.741175768550329, 0.3365395073927992] ***
*** starting iteration: 2; err: [Inf, 0.741175768550329, 0.3365395073927992] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.741175768550329, 0.3365395073927992, 0.32209288116054824] ***
*** starting iteration: 3; err: [Inf, 0.741175768550329, 0.3365395073927992, 0.32209288116054824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.741175768550329, 0.3365395073927992, 0.32209288116054824, 0.31663718868783053] ***
*** finished computation of 3 references, err: [Inf, 0.741175768550329, 0.3365395073927992, 0.32209288116054824, 0.31663718868783053] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 8]]
** centroid: 1, normalized-entropy: 0.775512658133148, [(2, 27), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 24]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7057999983216388] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7057999983216388, 0.5296888931303714] ***
*** finished computation of 3 references, err: [Inf, 1.7057999983216388, 0.5296888931303714] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 37, 12]]
** centroid: 3, normalized-entropy: 0.8030909760146977, [(2, 37), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1959999954467813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1959999954467813, 0.6092270983334275] ***
*** finished computation of 3 references, err: [Inf, 1.1959999954467813, 0.6092270983334275] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 33]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 9), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 24, 1]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9896000018726154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9896000018726154, 0.5519666065008554] ***
*** finished computation of 3 references, err: [Inf, 0.9896000018726154, 0.5519666065008554] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 13]]
** centroid: 1, normalized-entropy: 0.8926230133850988, [(2, 29), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5626185874407554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5626185874407554, 0.3822110977250726] ***
*** starting iteration: 2; err: [Inf, 1.5626185874407554, 0.3822110977250726] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5626185874407554, 0.3822110977250726, 0.37699300023989835] ***
*** starting iteration: 3; err: [Inf, 1.5626185874407554, 0.3822110977250726, 0.37699300023989835] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5626185874407554, 0.3822110977250726, 0.37699300023989835, 0.37376212996549085] ***
*** starting iteration: 4; err: [Inf, 1.5626185874407554, 0.3822110977250726, 0.37699300023989835, 0.37376212996549085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5626185874407554, 0.3822110977250726, 0.37699300023989835, 0.37376212996549085, 0.37376212996549085] ***
*** finished computation of 3 references, err: [Inf, 1.5626185874407554, 0.3822110977250726, 0.37699300023989835, 0.37376212996549085, 0.37376212996549085] ***
*** center 1: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 37, 12]]
** centroid: 3, normalized-entropy: 0.8030909760146977, [(2, 37), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2701069866242125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2701069866242125, 0.39837722690070876] ***
*** starting iteration: 2; err: [Inf, 1.2701069866242125, 0.39837722690070876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2701069866242125, 0.39837722690070876, 0.3916194153168929] ***
*** starting iteration: 3; err: [Inf, 1.2701069866242125, 0.39837722690070876, 0.3916194153168929] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2701069866242125, 0.39837722690070876, 0.3916194153168929, 0.3909657725377006] ***
*** finished computation of 3 references, err: [Inf, 1.2701069866242125, 0.39837722690070876, 0.3916194153168929, 0.3909657725377006] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 7]]
** centroid: 3, normalized-entropy: 0.6789538995185759, [(2, 32), (3, 7)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.713525177860053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.713525177860053, 0.3580297695402905] ***
*** starting iteration: 2; err: [Inf, 0.713525177860053, 0.3580297695402905] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.713525177860053, 0.3580297695402905, 0.3249447964601289] ***
*** starting iteration: 3; err: [Inf, 0.713525177860053, 0.3580297695402905, 0.3249447964601289] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.713525177860053, 0.3580297695402905, 0.3249447964601289, 0.31710298304671264] ***
*** starting iteration: 4; err: [Inf, 0.713525177860053, 0.3580297695402905, 0.3249447964601289, 0.31710298304671264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.713525177860053, 0.3580297695402905, 0.3249447964601289, 0.31710298304671264, 0.3148160501941852] ***
*** starting iteration: 5; err: [Inf, 0.713525177860053, 0.3580297695402905, 0.3249447964601289, 0.31710298304671264, 0.3148160501941852] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.713525177860053, 0.3580297695402905, 0.3249447964601289, 0.31710298304671264, 0.3148160501941852, 0.31391245451059024] ***
*** finished computation of 3 references, err: [Inf, 0.713525177860053, 0.3580297695402905, 0.3249447964601289, 0.31710298304671264, 0.3148160501941852, 0.31391245451059024] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 32]]
** centroid: 1, normalized-entropy: 0.6292492238560344, [(2, 6), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 24, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6591585492907782] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6591585492907782, 0.3956045745618137] ***
*** finished computation of 3 references, err: [Inf, 0.6591585492907782, 0.3956045745618137] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 37, 18]]
** centroid: 1, normalized-entropy: 0.9121156307204275, [(2, 37), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8760993710586104] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8760993710586104, 0.4325009606057496] ***
*** finished computation of 3 references, err: [Inf, 0.8760993710586104, 0.4325009606057496] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 10]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6617991984644308] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6617991984644308, 0.3604522952900996] ***
*** finished computation of 3 references, err: [Inf, 0.6617991984644308, 0.3604522952900996] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 13]]
** centroid: 3, normalized-entropy: 0.8926230133850988, [(2, 29), (3, 13)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.46896592277764826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46896592277764826, 0.2446486831320859] ***
*** starting iteration: 2; err: [Inf, 0.46896592277764826, 0.2446486831320859] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46896592277764826, 0.2446486831320859, 0.22848432394950793] ***
*** starting iteration: 3; err: [Inf, 0.46896592277764826, 0.2446486831320859, 0.22848432394950793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46896592277764826, 0.2446486831320859, 0.22848432394950793, 0.21752521985227286] ***
*** starting iteration: 4; err: [Inf, 0.46896592277764826, 0.2446486831320859, 0.22848432394950793, 0.21752521985227286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46896592277764826, 0.2446486831320859, 0.22848432394950793, 0.21752521985227286, 0.20981383837907902] ***
*** starting iteration: 5; err: [Inf, 0.46896592277764826, 0.2446486831320859, 0.22848432394950793, 0.21752521985227286, 0.20981383837907902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46896592277764826, 0.2446486831320859, 0.22848432394950793, 0.21752521985227286, 0.20981383837907902, 0.2083006923536059] ***
*** starting iteration: 6; err: [Inf, 0.46896592277764826, 0.2446486831320859, 0.22848432394950793, 0.21752521985227286, 0.20981383837907902, 0.2083006923536059] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46896592277764826, 0.2446486831320859, 0.22848432394950793, 0.21752521985227286, 0.20981383837907902, 0.2083006923536059, 0.2081119515304629] ***
*** finished computation of 7 references, err: [Inf, 0.46896592277764826, 0.2446486831320859, 0.22848432394950793, 0.21752521985227286, 0.20981383837907902, 0.2083006923536059, 0.2081119515304629] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 18]]
** centroid: 1, normalized-entropy: 0.9975025463691153, [(2, 16), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 6, 2]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 6), (3, 2)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333334, 0.88, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.3991197985203858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3991197985203858, 0.24905742900000366] ***
*** finished computation of 7 references, err: [Inf, 0.3991197985203858, 0.24905742900000366] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 18]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 4), (3, 18)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 5, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4629251650794183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4629251650794183, 0.21354984233483812] ***
*** finished computation of 7 references, err: [Inf, 0.4629251650794183, 0.21354984233483812] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 8]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 10), (3, 8)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 4, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.7721358988907863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7721358988907863, 0.2047257092095973] ***
*** finished computation of 7 references, err: [Inf, 2.7721358988907863, 0.2047257092095973] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 9, 3]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 9), (3, 3)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333334, 0.88, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 2.4132999884307287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.4132999884307287, 0.3543216510543759] ***
*** starting iteration: 2; err: [Inf, 2.4132999884307287, 0.3543216510543759] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.4132999884307287, 0.3543216510543759, 0.2838487907733336] ***
*** starting iteration: 3; err: [Inf, 2.4132999884307287, 0.3543216510543759, 0.2838487907733336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.4132999884307287, 0.3543216510543759, 0.2838487907733336, 0.2644537865109178] ***
*** starting iteration: 4; err: [Inf, 2.4132999884307287, 0.3543216510543759, 0.2838487907733336, 0.2644537865109178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.4132999884307287, 0.3543216510543759, 0.2838487907733336, 0.2644537865109178, 0.25669295397935854] ***
*** starting iteration: 5; err: [Inf, 2.4132999884307287, 0.3543216510543759, 0.2838487907733336, 0.2644537865109178, 0.25669295397935854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.4132999884307287, 0.3543216510543759, 0.2838487907733336, 0.2644537865109178, 0.25669295397935854, 0.2558105277572569] ***
*** finished computation of 7 references, err: [Inf, 2.4132999884307287, 0.3543216510543759, 0.2838487907733336, 0.2644537865109178, 0.25669295397935854, 0.2558105277572569] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 4, 11]]
** centroid: 4, normalized-entropy: 0.8366407419411671, [(2, 4), (3, 11)]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6321000060050914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6321000060050914, 0.33281394814083876] ***
*** starting iteration: 2; err: [Inf, 0.6321000060050914, 0.33281394814083876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6321000060050914, 0.33281394814083876, 0.29774324718714823] ***
*** starting iteration: 3; err: [Inf, 0.6321000060050914, 0.33281394814083876, 0.29774324718714823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6321000060050914, 0.33281394814083876, 0.29774324718714823, 0.28453058818081073] ***
*** starting iteration: 4; err: [Inf, 0.6321000060050914, 0.33281394814083876, 0.29774324718714823, 0.28453058818081073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6321000060050914, 0.33281394814083876, 0.29774324718714823, 0.28453058818081073, 0.28181243079297663] ***
*** starting iteration: 5; err: [Inf, 0.6321000060050914, 0.33281394814083876, 0.29774324718714823, 0.28453058818081073, 0.28181243079297663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6321000060050914, 0.33281394814083876, 0.29774324718714823, 0.28453058818081073, 0.28181243079297663, 0.281320762383581] ***
*** finished computation of 7 references, err: [Inf, 0.6321000060050914, 0.33281394814083876, 0.29774324718714823, 0.28453058818081073, 0.28181243079297663, 0.281320762383581] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 9]]
** centroid: 3, normalized-entropy: 0.8904916402194913, [(2, 4), (3, 9)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8951000068917678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8951000068917678, 0.43177701114293954] ***
*** starting iteration: 2; err: [Inf, 0.8951000068917678, 0.43177701114293954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8951000068917678, 0.43177701114293954, 0.39395876680501973] ***
*** starting iteration: 3; err: [Inf, 0.8951000068917678, 0.43177701114293954, 0.39395876680501973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8951000068917678, 0.43177701114293954, 0.39395876680501973, 0.3858532107511257] ***
*** starting iteration: 4; err: [Inf, 0.8951000068917678, 0.43177701114293954, 0.39395876680501973, 0.3858532107511257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8951000068917678, 0.43177701114293954, 0.39395876680501973, 0.3858532107511257, 0.38268251236443496] ***
*** starting iteration: 5; err: [Inf, 0.8951000068917678, 0.43177701114293954, 0.39395876680501973, 0.3858532107511257, 0.38268251236443496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8951000068917678, 0.43177701114293954, 0.39395876680501973, 0.3858532107511257, 0.38268251236443496, 0.38148801026777507] ***
*** starting iteration: 6; err: [Inf, 0.8951000068917678, 0.43177701114293954, 0.39395876680501973, 0.3858532107511257, 0.38268251236443496, 0.38148801026777507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8951000068917678, 0.43177701114293954, 0.39395876680501973, 0.3858532107511257, 0.38268251236443496, 0.38148801026777507, 0.38072309367123486] ***
*** finished computation of 7 references, err: [Inf, 0.8951000068917678, 0.43177701114293954, 0.39395876680501973, 0.3858532107511257, 0.38268251236443496, 0.38148801026777507, 0.38072309367123486] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 24, 0]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 32]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(2, 6), (3, 32)]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333334, 0.88, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.4750502935447847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4750502935447847, 0.27607098978027994] ***
*** finished computation of 7 references, err: [Inf, 0.4750502935447847, 0.27607098978027994] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 18]]
** centroid: 6, normalized-entropy: 0.5916727785823274, [(2, 3), (3, 18)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 7, 15]]
** centroid: 7, normalized-entropy: 0.9023932827949788, [(2, 7), (3, 15)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42121641347481004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42121641347481004, 0.23187689691603025] ***
*** finished computation of 7 references, err: [Inf, 0.42121641347481004, 0.23187689691603025] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 11]]
** centroid: 3, normalized-entropy: 0.8960382325345574, [(2, 5), (3, 11)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.389072409593896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.389072409593896, 0.17163761047722803] ***
*** finished computation of 7 references, err: [Inf, 0.389072409593896, 0.17163761047722803] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 6]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 2]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 7, 3]]
** centroid: 6, normalized-entropy: 0.8812908992306927, [(2, 7), (3, 3)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 10 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333334, 0.88, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 19
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333334, 0.88, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 19
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333334, 0.88, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 19
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333334, 0.88, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 19
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333334, 0.88, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1), 0.9666666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.133333333333335, 3.573333333333333, 1.4666666666666666, 0.2733333333333334], [4.6909090909090905, 3.036363636363637, 1.4272727272727275, 0.17272727272727273], [5.576470588235294, 2.6647058823529415, 3.9647058823529413, 1.241176470588235], [5.2, 4.1, 1.5, 0.1], [6.325, 2.9, 4.6, 1.445], [6.0, 2.6750000000000003, 5.066666666666666, 1.8333333333333333], [5.75, 4.2, 1.35, 0.30000000000000004], [6.928571428571429, 3.099999999999999, 5.567857142857143, 1.9678571428571423]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 1, 2, 1, 2, 3, 1, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.68, 3.04, 6.6, 2.1800000000000006], [5.766666666666667, 2.9499999999999997, 4.366666666666666, 1.4166666666666667], [5.533333333333334, 2.733333333333333, 4.8999999999999995, 1.8], [7.38, 3.1, 6.1, 1.8800000000000001], [5.466666666666666, 2.4250000000000003, 3.6666666666666665, 1.1083333333333334], [6.495238095238095, 2.9809523809523815, 5.433333333333333, 2.0904761904761906], [6.460000000000001, 2.77, 4.6899999999999995, 1.49], [6.225, 2.825, 4.925000000000001, 1.725], [5.024242424242424, 3.393939393939395, 1.4696969696969697, 0.2575757575757576]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 3, 2, 3, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.0, 2.3000000000000003, 3.266666666666667, 1.0333333333333334], [5.4799999999999995, 2.5599999999999996, 3.84, 1.24], [5.791666666666667, 2.808333333333333, 4.241666666666666, 1.2666666666666668], [6.76875, 3.0250000000000004, 5.8374999999999995, 2.04375], [5.8, 2.7, 4.1, 1.0], [4.9868421052631575, 3.4289473684210523, 1.4736842105263157, 0.24210526315789468], [6.6125, 3.0625, 4.7124999999999995, 1.475], [6.079999999999999, 2.8400000000000003, 5.093333333333333, 1.9266666666666665]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 2, 2, 3, 2, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[47, 1, 2, 1, 2, 29, 17, 1, 7, 21, 29, 1, 8, 25, 32, 15, 25, 30, 22, 33, 1, 22, 37, 39, 12, 34, 23, 1, 56, 1, 48, 32, 29, 24, 22, 3, 21, 25, 19, 23, 57, 1, 26, 29, 1, 42, 19, 50, 1, 31, 45, 30, 13, 42, 13, 30, 26, 26, 41, 44, 68, 40, 21, 43, 9, 1, 35, 36, 37, 36, 1, 33, 34, 3, 45, 15, 1, 14, 36, 33, 33, 21, 27, 43, 38, 27, 41, 35, 54, 47, 47, 51, 50, 21, 35, 53, 29, 20, 38, 19, 42, 37, 18, 34, 40, 4, 29, 59, 32, 35, 30, 21, 62, 42, 28, 32, 31, 43, 24, 31, 41, 40, 36, 58, 35, 39, 41, 26, 18, 40, 16, 37, 30, 45, 43, 41, 45, 26, 37, 34, 35, 33, 34, 20, 42, 63, 63, 36, 19, 32, 22, 38, 42, 49, 29, 34, 31, 27, 32, 17, 62, 36, 40, 41, 37, 24, 36, 62, 6, 30, 24, 36, 31, 36, 51, 40, 34, 27, 57, 37, 1, 38, 27, 33, 24, 75, 30, 53, 27, 69, 39, 23, 36, 31, 19, 48, 63, 47, 26, 38, 35, 24, 24, 36, 37, 66, 38, 53, 28, 33, 20, 44, 64, 25, 26, 31, 54, 23, 44, 31, 34, 31, 27, 55, 34, 49, 50, 16, 66, 29, 47, 37, 41, 42, 30, 40, 51, 18, 40, 43, 20, 3, 42, 25, 32, 31, 26, 16, 33, 62, 36, 38, 26, 27, 2, 27, 1, 25, 41, 36, 29, 64, 67, 33, 35, 50, 59, 37, 38, 24, 36, 60, 47, 58, 37, 50, 25, 70, 24, 51, 23, 40, 57, 34, 32, 43, 35, 46, 76, 43, 39, 36, 51, 23, 30, 50, 32, 28, 38, 34]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5949999999999998, speedup = 0.39112143855172826, eval_ratio = 0.042007)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.45312499999999994,"recall":0.4461805555555555,"f1":null,"seconds":7.369369268417358e-5,"exhaustive_search_seconds":0.0004279129207134247,"evaluations":340.546875,"distances_sum":1704.3404065449317}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.6284722222222221,"recall":0.6284722222222221,"f1":null,"seconds":9.908899664878845e-5,"exhaustive_search_seconds":0.0004279129207134247,"evaluations":380.1796875,"distances_sum":1622.0766161232978}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.7204861111111108,"recall":0.7204861111111108,"f1":0.7204861111111108,"seconds":0.00012782588601112366,"exhaustive_search_seconds":0.0004279129207134247,"evaluations":420.515625,"distances_sum":1586.5724236703068}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7829861111111105,"recall":0.7829861111111105,"f1":0.7829861111111105,"seconds":0.00015668943524360657,"exhaustive_search_seconds":0.0004279129207134247,"evaluations":458.890625,"distances_sum":1568.168718779586}
KCenters.DeloneInvIndex> reached performance {"precision":0.8194444444444436,"recall":0.8194444444444436,"f1":0.8194444444444436,"seconds":0.0001855790615081787,"exhaustive_search_seconds":0.0004279129207134247,"evaluations":498.25,"distances_sum":1559.6387488293956}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7389999999999999, speedup = 2.612892998008852, eval_ratio = 0.050183)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
