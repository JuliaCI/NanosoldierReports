Julia Version 1.5.0-DEV.122
Commit a3ee6fe70d (2020-01-20 16:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_Vz5GNj/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_Vz5GNj/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_Vz5GNj/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.06666911233930693 0.13505589066347443; -0.06666911233930693 0.0 0.07108761058223932; -0.13505589066347443 -0.07108761058223932 0.0])
dAA = so3([0.0 -0.07814710480969725 -0.10429819710274756; 0.07814710480969725 0.0 0.10962575983125722; 0.10429819710274756 -0.10962575983125722 0.0])
dAA = so3([0.0 0.06898011799732497 -0.040061678158092806; -0.06898011799732497 0.0 0.08821734818555899; 0.040061678158092806 -0.08821734818555899 0.0])
dAA = Quaternion(0.9983210662517749, [-0.04885221865763501, -0.011845811928823611, 0.028778223536091874])
dAA = SO3([0.9984767405359699 -0.026516912536113615 -0.048384418547890044; 0.03220179190367196 0.9921570400884362 0.12077852624181981; 0.044802267876279576 -0.12215261418612969 0.9914996195867333])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9477185685674819 -0.15432465853367594 -0.2793088157593087; 0.22471274949094064 0.944210502465403 0.2407710681337213; 0.2265694043965886 -0.29094746399048677 0.9295245441562474]), [-0.7108761058223932, 1.3505589066347443, -0.6666911233930694])
xj = SE3(SO3([0.9879734554173562 -0.13823252139453665 -0.06928363024263563; 0.150960135034571 0.9592750015001285 0.2387519824572619; 0.03345876598192714 -0.2463396872731586 0.9686058380234599]), [-0.8821734818555899, -0.40061678158092806, -0.6898011799732496])
Dx = SE3(SO3([0.9778241886383179 0.028742759574794628 0.20744567936170866; -0.019665264305074853 0.9987621251237323 -0.045689110279555384; -0.2085021186789881 0.040596443075119004 0.9771789986056915]), [-0.5610892395091237, -1.6203192550565997, -0.3952689385070999])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
