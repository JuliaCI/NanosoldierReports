Julia Version 1.5.0-DEV.107
Commit 248bc460bb (2020-01-19 02:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_TkpaZu/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_TkpaZu/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_TkpaZu/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.06236840239673668 0.002359663776549439; -0.06236840239673668 0.0 0.09949356806155174; -0.002359663776549439 -0.09949356806155174 0.0])
dAA = so3([0.0 0.04875119083587 0.04269250587235498; -0.04875119083587 0.0 0.05086406940714147; -0.04269250587235498 -0.05086406940714147 0.0])
dAA = so3([0.0 0.03634878165392567 0.010423401266226297; -0.03634878165392567 0.0 0.08571693521520204; -0.010423401266226297 -0.08571693521520204 0.0])
dAA = Quaternion(0.9968786089974299, [-0.03037490910567467, 0.052330454762091014, -0.05071417281751189])
dAA = SO3([0.9864689849700442 0.14026222454215923 -0.08488492244595505; -0.14981510215588986 0.9814987872275643 -0.1192290477897093; 0.06659111696158271 0.13033280107979497 0.9892315118841007])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9869234169418536 0.1142561852629333 0.113700014164373; -0.1277802473466623 0.9845427760587568 0.11978201241648284; -0.09825669178148716 -0.13274428891548934 0.98626800428711]), [-0.9949356806155174, 0.023596637765494387, -0.6236840239673668])
xj = SE3(SO3([0.934270924034078 0.2348607237922976 0.2682876831393277; -0.2763028061750466 0.9524552214833918 0.12839708084227539; -0.2253765733262995 -0.19408629907538877 0.9547438969204851]), [-0.8571693521520204, 0.10423401266226295, -0.36348781653925666])
Dx = SE3(SO3([0.9795046501128495 0.12915486191002343 0.15456280940869127; -0.13536824707778622 0.9903310459585175 0.03032914594571151; -0.14915119205152882 -0.05063043606084819 0.9875173319258232]), [0.1000949333610579, 0.06059203954932301, 0.2819461347619877])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
