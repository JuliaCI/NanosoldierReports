Julia Version 1.5.0-DEV.35
Commit 375347ea52 (2020-01-09 03:35 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed MappedArrays ──────────────── v0.2.2
 Installed Tables ────────────────────── v0.2.11
 Installed LearnBase ─────────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.8
 Installed Parsers ───────────────────── v0.3.10
 Installed TableTraits ───────────────── v1.0.0
 Installed DataStructures ────────────── v0.17.7
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed Missings ──────────────────── v0.4.3
 Installed DataValueInterfaces ───────── v1.0.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed DataFrames ────────────────── v0.20.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed Reexport ──────────────────── v0.2.0
 Installed OrderedCollections ────────── v1.1.0
 Installed JSON ──────────────────────── v0.21.0
 Installed Compat ────────────────────── v3.2.0
 Installed CategoricalArrays ─────────── v0.7.6
 Installed SimilaritySearch ──────────── v0.3.17
 Installed PooledArrays ──────────────── v0.5.3
 Installed MLDataUtils ───────────────── v0.5.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.6
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.7
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_MyuJQU/Project.toml`
 [no changes]
  Updating `/tmp/jl_MyuJQU/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_MyuJQU/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 152.7200000000001
[ Info: 71.94
[ Info: 41.12
[ Info: 23.410000000000007
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.19999834944844
[ Info: 76.90000120870405
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.10666720311205
inertia(cdnet.distances) = 28.705201732558898
inertia(crand.distances) = 22.056933109209854
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5908203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5908203125,"f1":0.7288454600954607,"seconds":4.481524229049683e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.125,"distances_sum":1640.7359825950025}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5908203125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5908203125,"f1":0.7288454600954607,"seconds":4.481524229049683e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.125,"distances_sum":1640.7359825950025}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.851966783216784,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.1328125,"distances_sum":2219.9067554539665}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.599609375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.599609375,"f1":0.7303668553668561,"seconds":3.995373845100403e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.0078125,"distances_sum":1718.5865500185969}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.851966783216784,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.1328125,"distances_sum":2219.9067554539665}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.970501373626374,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.8984375,"distances_sum":3120.6358891948576}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9514797702297707,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.8046875,"distances_sum":2973.632070778017}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9522035256410258,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.78125,"distances_sum":3003.7781913455087}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.970501373626374,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.8984375,"distances_sum":3120.6358891948576}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.970501373626374,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.8984375,"distances_sum":3120.6358891948576}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4833984375, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.4833984375,"f1":null,"seconds":3.857538104057312e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.609375,"distances_sum":1329.406608505809}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.46484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.46484375,"f1":0.616574397824398,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.265625,"distances_sum":1319.4901557202659}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4833984375,"state":{"ssize":4,"bsize":3},"perf":{"precision":null,"recall":0.4833984375,"f1":null,"seconds":3.857538104057312e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.609375,"distances_sum":1329.406608505809}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9316943473193479,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8359375,"distances_sum":2712.436497853524}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9088942307692316,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.7734375,"distances_sum":2544.428456397933}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9316943473193479,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8359375,"distances_sum":2712.436497853524}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.954395604395605,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8671875,"distances_sum":2883.809388068873}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.954395604395605,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8671875,"distances_sum":2883.809388068873}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.954395604395605,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8671875,"distances_sum":2883.809388068873}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3779296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3779296875,"f1":null,"seconds":3.4011900424957275e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.140625,"distances_sum":851.4415079560526}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8856945138195147,"seconds":5.153939127922058e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.3515625,"distances_sum":2244.3103372883825}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8856945138195147,"seconds":5.153939127922058e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.3515625,"distances_sum":2244.3103372883825}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9321173618048625,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7421875,"distances_sum":2552.248406443507}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9321173618048625,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7421875,"distances_sum":2552.248406443507}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9508470695970699,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.84375,"distances_sum":2710.0064473017455}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9776442307692308,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":2971.6060919456345}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9776442307692308,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":2971.6060919456345}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9776442307692308,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":2971.6060919456345}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8528610278610286,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.03125,"distances_sum":2171.0133122379725}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8528610278610286,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.03125,"distances_sum":2171.0133122379725}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8528610278610286,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.03125,"distances_sum":2171.0133122379725}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8528610278610286,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.03125,"distances_sum":2171.0133122379725}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8670303654678663,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.5625,"distances_sum":2123.792627354735}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.58203125,"f1":null,"seconds":4.298985004425049e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.71875,"distances_sum":1432.2234133269533}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8670303654678663,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.5625,"distances_sum":2123.792627354735}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9703697344322347,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.921875,"distances_sum":2915.755733566468}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9703697344322347,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.921875,"distances_sum":2915.755733566468}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9789262820512823,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9375,"distances_sum":2968.161313238336}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9802827380952384,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9453125,"distances_sum":2995.3001244615198}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9802827380952384,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9453125,"distances_sum":2995.3001244615198}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9802827380952384,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9453125,"distances_sum":2995.3001244615198}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23828125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.23828125,"f1":null,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.3359375,"distances_sum":617.4944978019179}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8703645313020321,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.4296875,"distances_sum":2119.315679654124}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2421875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2421875,"f1":null,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.15625,"distances_sum":625.9436980968705}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8687421953046963,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.421875,"distances_sum":2179.5827205793926}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8687421953046963,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.421875,"distances_sum":2179.5827205793926}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9333250083250089,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7578125,"distances_sum":2616.837325226582}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9450580669330673,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.796875,"distances_sum":2700.23829722294}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9553056318681323,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8828125,"distances_sum":2803.8574211667424}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9553056318681323,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8828125,"distances_sum":2803.8574211667424}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9781822344322347,"seconds":6.375834345817566e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9296875,"distances_sum":2997.0557440779994}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9777529761904763,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.984375,"distances_sum":2974.761519183149}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598843864468868,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.90625,"distances_sum":2831.846523696972}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9568884240759246,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.90625,"distances_sum":2807.907641451101}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9781822344322347,"seconds":6.375834345817566e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9296875,"distances_sum":2997.0557440779994}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9781822344322347,"seconds":6.375834345817566e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9296875,"distances_sum":2997.0557440779994}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7846233627483635,"seconds":4.697591066360474e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.8203125,"distances_sum":1735.1535077968076}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.7846233627483635,"seconds":4.697591066360474e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.8203125,"distances_sum":1735.1535077968076}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.832161068098569,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.2421875,"distances_sum":2008.607376001602}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8917441933066941,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6875,"distances_sum":2329.938175240905}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9502174908424911,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8046875,"distances_sum":2747.535816498296}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9502174908424911,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8046875,"distances_sum":2747.535816498296}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9701865842490847,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9140625,"distances_sum":2886.3996993982378}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678972069597075,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2829.4595770519745}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9583390567765574,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2774.6438938757606}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9701865842490847,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9140625,"distances_sum":2886.3996993982378}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9701865842490847,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9140625,"distances_sum":2886.3996993982378}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2412109375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2412109375,"f1":null,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":6.4609375,"distances_sum":627.2903452773214}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7946520493395501,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":7.6015625,"distances_sum":1799.227759252098}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.7946520493395501,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":7.6015625,"distances_sum":1799.227759252098}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8605113636363646,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.140625,"distances_sum":2118.757368644498}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8863704004329012,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.6484375,"distances_sum":2298.359279210776}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8095703125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8095703125,"f1":0.8863704004329012,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.6484375,"distances_sum":2298.359279210776}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591975732600735,"seconds":6.448477506637573e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.875,"distances_sum":2807.1255645335987}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8944799991675,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.5703125,"distances_sum":2356.427788319369}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9590487637362637,"seconds":6.73346221446991e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.84375,"distances_sum":2816.969095154783}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9591975732600735,"seconds":6.448477506637573e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.875,"distances_sum":2807.1255645335987}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9591975732600735,"seconds":6.448477506637573e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.875,"distances_sum":2807.1255645335987}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.875158175158176,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.34375,"distances_sum":2203.6594289213467}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.875158175158176,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.34375,"distances_sum":2203.6594289213467}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9032139735264743,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.5859375,"distances_sum":2343.237454161352}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.833984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.9032139735264743,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.5859375,"distances_sum":2343.237454161352}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9519267191142196,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8046875,"distances_sum":2730.1294056437796}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9596268315018319,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.890625,"distances_sum":2770.2352504313562}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9596268315018319,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.890625,"distances_sum":2770.2352504313562}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9596268315018319,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.890625,"distances_sum":2770.2352504313562}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7935867951492959,"seconds":4.187226295471191e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.6015625,"distances_sum":1446.3784959099507}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3408203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3408203125,"f1":null,"seconds":3.7383288145065308e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.5390625,"distances_sum":673.6636646893442}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.34765625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.34765625,"f1":null,"seconds":2.99699604511261e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.6953125,"distances_sum":665.2638781321195}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6748046875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6748046875,"f1":0.7935867951492959,"seconds":4.187226295471191e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.6015625,"distances_sum":1446.3784959099507}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9188592657342666,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.515625,"distances_sum":2006.3863510688006}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.864257097069598,"seconds":4.468485713005066e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9609375,"distances_sum":1690.5105224367567}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8623046875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9188592657342666,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.515625,"distances_sum":2006.3863510688006}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.933104395604396,"seconds":6.623566150665283e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.59375,"distances_sum":2089.616330075654}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708161630036635,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.90625,"distances_sum":2274.3671751483553}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9653331043956048,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2258.039684276335}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622424450549455,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":2222.2679198618794}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.945512820512821,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.65625,"distances_sum":2166.0817521380945}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9444654304029311,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7734375,"distances_sum":2118.4999462153874}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708161630036635,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.90625,"distances_sum":2274.3671751483553}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708161630036635,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.90625,"distances_sum":2274.3671751483553}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8471762612387622,"seconds":4.697591066360474e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7265625,"distances_sum":1575.007521570058}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5322265625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5322265625,"f1":0.682219863469864,"seconds":3.7886202335357666e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.640625,"distances_sum":1007.4055216698131}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.541015625,"f1":null,"seconds":3.771856427192688e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.828125,"distances_sum":1020.1129147214392}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.8471762612387622,"seconds":4.697591066360474e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7265625,"distances_sum":1575.007521570058}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9438358516483522,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6015625,"distances_sum":2133.2499898716737}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8802546411921421,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.125,"distances_sum":1693.8543232525374}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9071974900099907,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.328125,"distances_sum":1880.987182025477}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8801833583083593,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.0625,"distances_sum":1740.5693429967398}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9438358516483522,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6015625,"distances_sum":2133.2499898716737}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9466975732600741,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6875,"distances_sum":2121.614543206355}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":12,"bsize":10}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9514365842490848,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.671875,"distances_sum":2190.687335221715}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9692708333333335,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.828125,"distances_sum":2264.814544595516}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9692708333333335,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.828125,"distances_sum":2264.814544595516}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9692708333333335,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.828125,"distances_sum":2264.814544595516}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.5744160413742065e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.8359375,"distances_sum":407.47750260312785}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7141953532578539,"seconds":4.755333065986633e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.2109375,"distances_sum":1134.4519540693213}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8572063353313363,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.1328125,"distances_sum":1600.887492945364}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8572063353313363,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.1328125,"distances_sum":1600.887492945364}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.905079816017317,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.4375,"distances_sum":1851.683269180161}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.948969780219781,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.71875,"distances_sum":2144.0294223762253}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.86502507908758,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.2265625,"distances_sum":1654.4454153161387}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.948969780219781,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.71875,"distances_sum":2144.0294223762253}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9648122710622714,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2214.4742167013414}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9627861721611727,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8125,"distances_sum":2207.9393688723308}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9648122710622714,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2214.4742167013414}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9648122710622714,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2214.4742167013414}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7138671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7138671875,"f1":0.8198567057942067,"seconds":4.82611358165741e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.7578125,"distances_sum":1509.2410766391265}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8519730269730278,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.0078125,"distances_sum":1625.5228082385543}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5439453125,"f1":0.6862899253524258,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.9765625,"distances_sum":1068.4081749998563}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8519730269730278,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.0078125,"distances_sum":1625.5228082385543}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9099275724275733,"seconds":3.844499588012695e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.5078125,"distances_sum":1875.1095444678851}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9099275724275733,"seconds":3.844499588012695e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.5078125,"distances_sum":1875.1095444678851}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9364671786546794,"seconds":4.3567270040512085e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6484375,"distances_sum":2057.933783716359}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.941606830669331,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7421875,"distances_sum":2083.822481073845}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.941606830669331,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7421875,"distances_sum":2083.822481073845}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8984375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.941606830669331,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7421875,"distances_sum":2083.822481073845}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8631835178710188,"seconds":7.051974534988403e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.3125,"distances_sum":1657.6659349379736}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8631835178710188,"seconds":7.051974534988403e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.3125,"distances_sum":1657.6659349379736}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8631835178710188,"seconds":7.051974534988403e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.3125,"distances_sum":1657.6659349379736}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8631835178710188,"seconds":7.051974534988403e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.3125,"distances_sum":1657.6659349379736}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7693298021423028,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":7.3125,"distances_sum":1301.583792684305}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.646484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.646484375,"f1":0.7693298021423028,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":7.3125,"distances_sum":1301.583792684305}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.851720675158176,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":7.7890625,"distances_sum":1627.7644374555641}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8009797494172503,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":7.6796875,"distances_sum":1417.1962037472788}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.851720675158176,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":7.7890625,"distances_sum":1627.7644374555641}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9284626831501839,"seconds":6.876885890960693e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":8.71875,"distances_sum":2035.7134725310686}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.949336080586081,"seconds":7.061287760734558e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":8.75,"distances_sum":2153.5162844505994}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8902592199467207,"seconds":6.472691893577576e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":8.4921875,"distances_sum":1774.1307696768988}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.900017170329671,"seconds":6.577000021934509e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":8.578125,"distances_sum":1802.5925482396335}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.949336080586081,"seconds":7.061287760734558e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":8.75,"distances_sum":2153.5162844505994}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.949336080586081,"seconds":7.061287760734558e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":8.75,"distances_sum":2153.5162844505994}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8131018287268296,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":7.6796875,"distances_sum":1439.7394467274398}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.357421875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.357421875,"f1":null,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":6.3671875,"distances_sum":663.0477693496496}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.703125,"f1":0.8131018287268296,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":7.6796875,"distances_sum":1439.7394467274398}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9022123709623716,"seconds":6.6533684730529785e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.3125,"distances_sum":1813.2456107769444}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9322203837828842,"seconds":6.951391696929932e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.625,"distances_sum":2004.9422400637816}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9402847152847158,"seconds":7.08363950252533e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.640625,"distances_sum":2125.545163894385}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9402847152847158,"seconds":7.08363950252533e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.640625,"distances_sum":2125.545163894385}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.953130723443224,"seconds":6.983056664466858e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.796875,"distances_sum":2155.2616789140675}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9635473901098903,"seconds":7.107853889465332e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.859375,"distances_sum":2195.19460531469}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.949278846153847,"seconds":6.938353180885315e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.8125,"distances_sum":2109.3517163398365}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.961258012820513,"seconds":6.949529051780701e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.84375,"distances_sum":2196.6561168031526}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9635473901098903,"seconds":7.107853889465332e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.859375,"distances_sum":2195.19460531469}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9635473901098903,"seconds":7.107853889465332e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.859375,"distances_sum":2195.19460531469}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.375,"f1":null,"seconds":4.289671778678894e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":6.1015625,"distances_sum":708.8961990878545}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7917769730269739,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":7.765625,"distances_sum":1388.9844239796512}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.24609375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.24609375,"f1":null,"seconds":4.030764102935791e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":6.171875,"distances_sum":446.0009995970407}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.7917769730269739,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":7.765625,"distances_sum":1388.9844239796512}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9185897435897444,"seconds":6.718561053276062e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.453125,"distances_sum":1943.5764913122923}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.8995884324009331,"seconds":6.532296538352966e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.3984375,"distances_sum":1873.0370082059662}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8988266941391948,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.4375,"distances_sum":1852.6136278781876}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8952615093240103,"seconds":6.474554538726807e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.4296875,"distances_sum":1793.4219473404846}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8564453125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8564453125,"f1":0.9185897435897444,"seconds":6.718561053276062e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.453125,"distances_sum":1943.5764913122923}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.963564560439561,"seconds":6.921589374542236e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.875,"distances_sum":2224.8066747096977}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9513481310356318,"seconds":7.033348083496094e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.7265625,"distances_sum":2198.6775928174484}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.94130608974359,"seconds":6.798654794692993e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.6328125,"distances_sum":2156.010547915724}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9608173076923081,"seconds":7.12275505065918e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.8828125,"distances_sum":2187.9894980396957}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9543211996337001,"seconds":7.010996341705322e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.7734375,"distances_sum":2189.0277406456835}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9251316391941398,"seconds":6.856396794319153e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.5234375,"distances_sum":1995.892045593932}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9547504578754583,"seconds":7.016584277153015e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.765625,"distances_sum":2203.2044678352727}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.963564560439561,"seconds":6.921589374542236e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.875,"distances_sum":2224.8066747096977}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.963564560439561,"seconds":6.921589374542236e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.875,"distances_sum":2224.8066747096977}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4375,"f1":0.5854867354867356,"seconds":4.59328293800354e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":6.46875,"distances_sum":924.5473726841429}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4609375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4609375,"f1":null,"seconds":4.5280903577804565e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":6.703125,"distances_sum":1025.0204586371963}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4609375,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.4609375,"f1":null,"seconds":4.5280903577804565e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":6.703125,"distances_sum":1025.0204586371963}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8140926781551792,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.078125,"distances_sum":1720.0452588109995}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8459254287379296,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.3828125,"distances_sum":1827.662453519879}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7116796398046404,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":7.6171875,"distances_sum":1311.7717616598752}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7180092476967483,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":7.5546875,"distances_sum":1364.0546705740737}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6958069708069716,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":7.5625,"distances_sum":1281.3025155538373}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8459254287379296,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.3828125,"distances_sum":1827.662453519879}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9068800990676001,"seconds":6.9160014390945435e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.6796875,"distances_sum":2144.906076570401}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9584535256410261,"seconds":7.105991244316101e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.8984375,"distances_sum":2539.255868838296}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9583962912087914,"seconds":7.160007953643799e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.9296875,"distances_sum":2518.7803346140136}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9545501373626379,"seconds":7.137656211853027e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.90625,"distances_sum":2503.979420462734}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9009074259074267,"seconds":6.837770342826843e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.78125,"distances_sum":2133.6476008124864}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.872945804195805,"seconds":6.327405571937561e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.4453125,"distances_sum":1996.917204285479}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9584535256410261,"seconds":7.105991244316101e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.8984375,"distances_sum":2539.255868838296}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9584535256410261,"seconds":7.105991244316101e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.8984375,"distances_sum":2539.255868838296}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.689453125,"f1":null,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.7639249563217163e-6,"evaluations":7.65625,"distances_sum":1535.2456572342505}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.689453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":null,"recall":0.689453125,"f1":null,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.7639249563217163e-6,"evaluations":7.65625,"distances_sum":1535.2456572342505}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9441334706959713,"seconds":6.945803761482239e-6,"exhaustive_search_seconds":1.7639249563217163e-6,"evaluations":8.7109375,"distances_sum":2273.027852309185}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9535027472527478,"seconds":7.119029760360718e-6,"exhaustive_search_seconds":1.7639249563217163e-6,"evaluations":8.765625,"distances_sum":2322.647144469059}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8729489260739269,"seconds":6.271526217460632e-6,"exhaustive_search_seconds":1.7639249563217163e-6,"evaluations":8.1875,"distances_sum":1844.414288797703}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9535027472527478,"seconds":7.119029760360718e-6,"exhaustive_search_seconds":1.7639249563217163e-6,"evaluations":8.765625,"distances_sum":2322.647144469059}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612210705960709,"seconds":7.245689630508423e-6,"exhaustive_search_seconds":1.7639249563217163e-6,"evaluations":8.84375,"distances_sum":2388.2837437941075}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9781822344322348,"seconds":7.404014468193054e-6,"exhaustive_search_seconds":1.7639249563217163e-6,"evaluations":8.9140625,"distances_sum":2506.131361637602}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9702209249084253,"seconds":7.7858567237854e-6,"exhaustive_search_seconds":1.7639249563217163e-6,"evaluations":8.859375,"distances_sum":2438.305589323697}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9561984890109894,"seconds":7.757917046546936e-6,"exhaustive_search_seconds":1.7639249563217163e-6,"evaluations":8.7890625,"distances_sum":2350.2843100095283}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781822344322348,"seconds":7.404014468193054e-6,"exhaustive_search_seconds":1.7639249563217163e-6,"evaluations":8.9140625,"distances_sum":2506.131361637602}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781822344322348,"seconds":7.404014468193054e-6,"exhaustive_search_seconds":1.7639249563217163e-6,"evaluations":8.9140625,"distances_sum":2506.131361637602}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8507253163503171,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.84375,"distances_sum":1854.8997855782625}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8507253163503171,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.84375,"distances_sum":1854.8997855782625}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9547478563103567,"seconds":7.037073373794556e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.7734375,"distances_sum":2489.051679316682}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.92443337912088,"seconds":6.780028343200684e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.5078125,"distances_sum":2272.7574166514764}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9547478563103567,"seconds":7.037073373794556e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.7734375,"distances_sum":2489.051679316682}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670787545787549,"seconds":7.1711838245391846e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8515625,"distances_sum":2534.5084677509208}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670787545787549,"seconds":7.1711838245391846e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8515625,"distances_sum":2534.5084677509208}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670787545787549,"seconds":7.1711838245391846e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8515625,"distances_sum":2534.5084677509208}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.773802586302587,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.28125,"distances_sum":1555.377944324661}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.63671875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.63671875,"f1":0.7670579420579428,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.2109375,"distances_sum":1560.382504204598}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.646484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.646484375,"f1":0.773802586302587,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.28125,"distances_sum":1555.377944324661}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8413631507381516,"seconds":4.265457391738892e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.859375,"distances_sum":1755.1079410660486}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9474931318681324,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.6796875,"distances_sum":2458.6374292210576}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9478136446886454,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.7109375,"distances_sum":2464.078191845781}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9072604478854488,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.2265625,"distances_sum":2167.9631150406317}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7814185814185822,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.328125,"distances_sum":1594.063889451649}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9478136446886454,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.7109375,"distances_sum":2464.078191845781}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9529246794871803,"seconds":6.550922989845276e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.765625,"distances_sum":2466.1535967536893}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9785714285714291,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.890625,"distances_sum":2655.7285627728165}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.962949550449551,"seconds":4.056841135025024e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.796875,"distances_sum":2549.7598020421074}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9713541666666672,"seconds":6.8265944719314575e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8828125,"distances_sum":2604.3663651426637}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785714285714291,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.890625,"distances_sum":2655.7285627728165}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785714285714291,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.890625,"distances_sum":2655.7285627728165}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3740234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3740234375,"f1":null,"seconds":4.019588232040405e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":5.7578125,"distances_sum":883.8989593261516}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3740234375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3740234375,"f1":null,"seconds":4.019588232040405e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":5.7578125,"distances_sum":883.8989593261516}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7759667415917424,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.3671875,"distances_sum":1558.9681803135481}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7799101939726947,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.4921875,"distances_sum":1576.187467857534}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8439690517815527,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.0234375,"distances_sum":1850.922168202739}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8483037795537803,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.0625,"distances_sum":1857.591015638217}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.852771187146188,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.046875,"distances_sum":1880.5497990890296}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":8,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.852771187146188,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.046875,"distances_sum":1880.5497990890296}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524267399267408,"seconds":7.126480340957642e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.765625,"distances_sum":2553.7313898808143}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8951038544788554,"seconds":6.8675726652145386e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.3359375,"distances_sum":2119.3426861683415}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9521062271062275,"seconds":6.722286343574524e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.859375,"distances_sum":2517.809168263587}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9349072802197811,"seconds":6.631016731262207e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.6875,"distances_sum":2401.727894905678}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.884882305194806,"seconds":6.88992440700531e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.34375,"distances_sum":2065.219558921263}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9524267399267408,"seconds":7.126480340957642e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.765625,"distances_sum":2553.7313898808143}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9524267399267408,"seconds":7.126480340957642e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.765625,"distances_sum":2553.7313898808143}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8070693195693204,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":7.8671875,"distances_sum":1681.6116699196307}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2021484375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2021484375,"f1":null,"seconds":3.6563724279403687e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":4.9296875,"distances_sum":543.6556902433086}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.8070693195693204,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":7.8671875,"distances_sum":1681.6116699196307}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8526853354978361,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.125,"distances_sum":1894.0401484757135}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9437588453213459,"seconds":6.942078471183777e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.6953125,"distances_sum":2499.6914674952386}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8559216824841833,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.109375,"distances_sum":1884.54231782054}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9437588453213459,"seconds":6.942078471183777e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.6953125,"distances_sum":2499.6914674952386}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9672447344322348,"seconds":7.210299372673035e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.9296875,"distances_sum":2631.0324988777993}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9438129578754584,"seconds":6.94766640663147e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.703125,"distances_sum":2521.469036887744}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9634558150183155,"seconds":6.966292858123779e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.8515625,"distances_sum":2630.138614924009}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9672447344322348,"seconds":7.210299372673035e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.9296875,"distances_sum":2631.0324988777993}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9672447344322348,"seconds":7.210299372673035e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.9296875,"distances_sum":2631.0324988777993}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.7040483821733827,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":6.8828125,"distances_sum":1335.9883774973484}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.6997873654123661,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":6.703125,"distances_sum":1283.4343710724006}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8542384698634707,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":7.8828125,"distances_sum":1918.8781731864995}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8542384698634707,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":7.8828125,"distances_sum":1918.8781731864995}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9498969780219787,"seconds":7.081776857376099e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.7109375,"distances_sum":2579.2768977024552}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9556979478854482,"seconds":7.070600986480713e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8125,"distances_sum":2585.686766089291}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9252263361638371,"seconds":6.901100277900696e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.5390625,"distances_sum":2376.7998584516963}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9393372252747261,"seconds":7.45430588722229e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.6640625,"distances_sum":2448.740545125368}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9125972985347993,"seconds":7.154420018196106e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.3203125,"distances_sum":2255.11869213875}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9556979478854482,"seconds":7.070600986480713e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8125,"distances_sum":2585.686766089291}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":12,"bsize":13}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9798363095238098,"seconds":7.681548595428467e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9296875,"distances_sum":2757.895036502141}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9705929487179491,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.90625,"distances_sum":2694.6470123071394}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667410714285719,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8828125,"distances_sum":2658.46602412377}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":12,"bsize":13},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9798363095238098,"seconds":7.681548595428467e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9296875,"distances_sum":2757.895036502141}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":12,"bsize":13},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9798363095238098,"seconds":7.681548595428467e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9296875,"distances_sum":2757.895036502141}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.537109375,"f1":0.6830879190254195,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":6.5703125,"distances_sum":1314.6446234904358}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":4.297122359275818e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":5.5,"distances_sum":968.0301510186712}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.537109375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.537109375,"f1":0.6830879190254195,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":6.5703125,"distances_sum":1314.6446234904358}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9356284340659345,"seconds":6.92903995513916e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.6875,"distances_sum":2536.2922567059295}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9356284340659345,"seconds":6.92903995513916e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.6875,"distances_sum":2536.2922567059295}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9541151556776563,"seconds":6.658956408500671e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.75,"distances_sum":2705.0333951365883}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9541151556776563,"seconds":6.658956408500671e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.75,"distances_sum":2705.0333951365883}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9541151556776563,"seconds":6.658956408500671e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.75,"distances_sum":2705.0333951365883}}, n: 9
inertia(cfft.distances) = 20.655304335649728
inertia(cdnet.distances) = 22.5563989010396
inertia(crand.distances) = 18.536236111111112
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9022222222222224
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9533333333333333
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9133333333333334
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.928888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8933333333333332
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9222222222222222
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9177777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9155555555555557
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 3, 1, 3, 3, 2, 2, 3, 3, 3, 3, 1, 2, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.3914000029134965] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3914000029134965, 0.1760802376463254] ***
*** starting iteration: 2; err: [Inf, 0.3914000029134965, 0.1760802376463254] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3914000029134965, 0.1760802376463254, 0.16318945914185368] ***
*** starting iteration: 3; err: [Inf, 0.3914000029134965, 0.1760802376463254, 0.16318945914185368] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3914000029134965, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754] ***
*** starting iteration: 4; err: [Inf, 0.3914000029134965, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3914000029134965, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754, 0.15913698527851505] ***
*** finished computation of 12 references, err: [Inf, 0.3914000029134965, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754, 0.15913698527851505] ***
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
acc = 0.92
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 4.48090002052277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.48090002052277, 1.5880770179223742] ***
*** finished computation of 3 references, err: [Inf, 4.48090002052277, 1.5880770179223742] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [36, 16, 0]]
** centroid: 1, normalized-entropy: 0.8904916402194913, [(1, 36), (2, 16)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 20]]
** centroid: 2, normalized-entropy: 0.5586293734521991, [(2, 3), (3, 20)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 11, 14]]
** centroid: 3, normalized-entropy: 0.9895875212220558, [(2, 11), (3, 14)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.695899978967766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.695899978967766, 1.7311986522474365] ***
*** finished computation of 3 references, err: [Inf, 4.695899978967766, 1.7311986522474365] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [30, 7, 1]]
** centroid: 1, normalized-entropy: 0.699772221773307, [(1, 30), (2, 7)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 3]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 27), (3, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 30]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 2), (3, 30)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.121200013898197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.121200013898197, 0.9099864383877755] ***
*** finished computation of 3 references, err: [Inf, 2.121200013898197, 0.9099864383877755] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 32]]
** centroid: 1, normalized-entropy: 0.9998292601233937, [(2, 33), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.22517556676989986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22517556676989986, 0.1695073097044971] ***
*** starting iteration: 2; err: [Inf, 0.22517556676989986, 0.1695073097044971] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22517556676989986, 0.1695073097044971, 0.16931283261264413] ***
*** finished computation of 7 references, err: [Inf, 0.22517556676989986, 0.1695073097044971, 0.16931283261264413] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 11, 2]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.408485443977357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.408485443977357, 0.5908736888759109] ***
*** starting iteration: 2; err: [Inf, 3.408485443977357, 0.5908736888759109] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.408485443977357, 0.5908736888759109, 0.2724179237096444] ***
*** starting iteration: 3; err: [Inf, 3.408485443977357, 0.5908736888759109, 0.2724179237096444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.408485443977357, 0.5908736888759109, 0.2724179237096444, 0.24084814562789422] ***
*** finished computation of 7 references, err: [Inf, 3.408485443977357, 0.5908736888759109, 0.2724179237096444, 0.24084814562789422] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 4]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 11), (3, 4)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 5, 16]]
** centroid: 4, normalized-entropy: 0.7918583525674836, [(2, 5), (3, 16)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5312354206928983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5312354206928983, 0.3261996409417499] ***
*** starting iteration: 2; err: [Inf, 0.5312354206928983, 0.3261996409417499] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5312354206928983, 0.3261996409417499, 0.2627727531655521] ***
*** starting iteration: 3; err: [Inf, 0.5312354206928983, 0.3261996409417499, 0.2627727531655521] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5312354206928983, 0.3261996409417499, 0.2627727531655521, 0.21050726701469707] ***
*** finished computation of 7 references, err: [Inf, 0.5312354206928983, 0.3261996409417499, 0.2627727531655521, 0.21050726701469707] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 12]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(2, 16), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.7741000089918848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7741000089918848, 0.27808477013536054] ***
*** starting iteration: 2; err: [Inf, 1.7741000089918848, 0.27808477013536054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7741000089918848, 0.27808477013536054, 0.2500574380130422] ***
*** starting iteration: 3; err: [Inf, 1.7741000089918848, 0.27808477013536054, 0.2500574380130422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7741000089918848, 0.27808477013536054, 0.2500574380130422, 0.23961393319647692] ***
*** finished computation of 7 references, err: [Inf, 1.7741000089918848, 0.27808477013536054, 0.2500574380130422, 0.23961393319647692] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 3]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5481000032830368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5481000032830368, 0.3242223378255407] ***
*** starting iteration: 2; err: [Inf, 0.5481000032830368, 0.3242223378255407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5481000032830368, 0.3242223378255407, 0.30466736749023016] ***
*** starting iteration: 3; err: [Inf, 0.5481000032830368, 0.3242223378255407, 0.30466736749023016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5481000032830368, 0.3242223378255407, 0.30466736749023016, 0.29976202177787914] ***
*** finished computation of 7 references, err: [Inf, 0.5481000032830368, 0.3242223378255407, 0.30466736749023016, 0.29976202177787914] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 2]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(2, 17), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6427000075280372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6427000075280372, 0.2652865458683297] ***
*** starting iteration: 2; err: [Inf, 0.6427000075280372, 0.2652865458683297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6427000075280372, 0.2652865458683297, 0.24794552079361318] ***
*** starting iteration: 3; err: [Inf, 0.6427000075280372, 0.2652865458683297, 0.24794552079361318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6427000075280372, 0.2652865458683297, 0.24794552079361318, 0.24318823741477455] ***
*** finished computation of 7 references, err: [Inf, 0.6427000075280372, 0.2652865458683297, 0.24794552079361318, 0.24318823741477455] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 15]]
** centroid: 5, normalized-entropy: 0.3372900666170139, [(2, 1), (3, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38353010118515485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38353010118515485, 0.33523229741648936] ***
*** starting iteration: 2; err: [Inf, 0.38353010118515485, 0.33523229741648936] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38353010118515485, 0.33523229741648936, 0.33095526030654826] ***
*** starting iteration: 3; err: [Inf, 0.38353010118515485, 0.33523229741648936, 0.33095526030654826] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38353010118515485, 0.33523229741648936, 0.33095526030654826, 0.3307771385022781] ***
*** finished computation of 3 references, err: [Inf, 0.38353010118515485, 0.33523229741648936, 0.33095526030654826, 0.3307771385022781] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 3]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 27), (3, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 31]]
** centroid: 3, normalized-entropy: 0.43055186701043935, [(2, 3), (3, 31)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.902295653992494] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.902295653992494, 1.3497836362625777] ***
*** starting iteration: 2; err: [Inf, 3.902295653992494, 1.3497836362625777] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.902295653992494, 1.3497836362625777, 0.6596955600140606] ***
*** starting iteration: 3; err: [Inf, 3.902295653992494, 1.3497836362625777, 0.6596955600140606] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.902295653992494, 1.3497836362625777, 0.6596955600140606, 0.4787586468235024] ***
*** finished computation of 3 references, err: [Inf, 3.902295653992494, 1.3497836362625777, 0.6596955600140606, 0.4787586468235024] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 20]]
** centroid: 1, normalized-entropy: 0.9509560484549724, [(2, 34), (3, 20)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [30, 2, 0]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(1, 30), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5293490302777917] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5293490302777917, 0.6136214875535988] ***
*** starting iteration: 2; err: [Inf, 1.5293490302777917, 0.6136214875535988] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5293490302777917, 0.6136214875535988, 0.6058756473835959] ***
*** starting iteration: 3; err: [Inf, 1.5293490302777917, 0.6136214875535988, 0.6058756473835959] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5293490302777917, 0.6136214875535988, 0.6058756473835959, 0.603928982176326] ***
*** finished computation of 3 references, err: [Inf, 1.5293490302777917, 0.6136214875535988, 0.6058756473835959, 0.603928982176326] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 32]]
** centroid: 3, normalized-entropy: 0.9993375041688846, [(2, 34), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3893000040063268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3893000040063268, 0.28749074775728906] ***
*** starting iteration: 2; err: [Inf, 0.3893000040063268, 0.28749074775728906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3893000040063268, 0.28749074775728906, 0.2695607465872363] ***
*** starting iteration: 3; err: [Inf, 0.3893000040063268, 0.28749074775728906, 0.2695607465872363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3893000040063268, 0.28749074775728906, 0.2695607465872363, 0.26528597954597216] ***
*** starting iteration: 4; err: [Inf, 0.3893000040063268, 0.28749074775728906, 0.2695607465872363, 0.26528597954597216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3893000040063268, 0.28749074775728906, 0.2695607465872363, 0.26528597954597216, 0.2643935701738283] ***
*** finished computation of 7 references, err: [Inf, 0.3893000040063268, 0.28749074775728906, 0.2695607465872363, 0.26528597954597216, 0.2643935701738283] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 4]]
** centroid: 4, normalized-entropy: 0.8904916402194913, [(2, 9), (3, 4)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7631000103846306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7631000103846306, 0.3568052389103862] ***
*** starting iteration: 2; err: [Inf, 0.7631000103846306, 0.3568052389103862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764] ***
*** starting iteration: 3; err: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244] ***
*** starting iteration: 4; err: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244, 0.27563969830483065] ***
*** starting iteration: 5; err: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244, 0.27563969830483065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244, 0.27563969830483065, 0.2713088962238114] ***
*** starting iteration: 6; err: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244, 0.27563969830483065, 0.2713088962238114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244, 0.27563969830483065, 0.2713088962238114, 0.26781160682109634] ***
*** starting iteration: 7; err: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244, 0.27563969830483065, 0.2713088962238114, 0.26781160682109634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244, 0.27563969830483065, 0.2713088962238114, 0.26781160682109634, 0.26412666967647763] ***
*** starting iteration: 8; err: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244, 0.27563969830483065, 0.2713088962238114, 0.26781160682109634, 0.26412666967647763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244, 0.27563969830483065, 0.2713088962238114, 0.26781160682109634, 0.26412666967647763, 0.26055882981641504] ***
*** starting iteration: 9; err: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244, 0.27563969830483065, 0.2713088962238114, 0.26781160682109634, 0.26412666967647763, 0.26055882981641504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244, 0.27563969830483065, 0.2713088962238114, 0.26781160682109634, 0.26412666967647763, 0.26055882981641504, 0.25709327651165775] ***
*** starting iteration: 10; err: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244, 0.27563969830483065, 0.2713088962238114, 0.26781160682109634, 0.26412666967647763, 0.26055882981641504, 0.25709327651165775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244, 0.27563969830483065, 0.2713088962238114, 0.26781160682109634, 0.26412666967647763, 0.26055882981641504, 0.25709327651165775, 0.25618040977144646] ***
*** finished computation of 7 references, err: [Inf, 0.7631000103846306, 0.3568052389103862, 0.29129474152587764, 0.2783142003197244, 0.27563969830483065, 0.2713088962238114, 0.26781160682109634, 0.26412666967647763, 0.26055882981641504, 0.25709327651165775, 0.25618040977144646] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 6, 7]]
** centroid: 4, normalized-entropy: 0.9957274520849256, [(2, 6), (3, 7)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7159000067910073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7159000067910073, 0.348215031218968] ***
*** starting iteration: 2; err: [Inf, 0.7159000067910073, 0.348215031218968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7159000067910073, 0.348215031218968, 0.2931429677712286] ***
*** starting iteration: 3; err: [Inf, 0.7159000067910073, 0.348215031218968, 0.2931429677712286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7159000067910073, 0.348215031218968, 0.2931429677712286, 0.2877884322611839] ***
*** starting iteration: 4; err: [Inf, 0.7159000067910073, 0.348215031218968, 0.2931429677712286, 0.2877884322611839] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7159000067910073, 0.348215031218968, 0.2931429677712286, 0.2877884322611839, 0.28542281826126403] ***
*** starting iteration: 5; err: [Inf, 0.7159000067910073, 0.348215031218968, 0.2931429677712286, 0.2877884322611839, 0.28542281826126403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7159000067910073, 0.348215031218968, 0.2931429677712286, 0.2877884322611839, 0.28542281826126403, 0.28423099193423007] ***
*** starting iteration: 6; err: [Inf, 0.7159000067910073, 0.348215031218968, 0.2931429677712286, 0.2877884322611839, 0.28542281826126403, 0.28423099193423007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7159000067910073, 0.348215031218968, 0.2931429677712286, 0.2877884322611839, 0.28542281826126403, 0.28423099193423007, 0.2824769131664061] ***
*** starting iteration: 7; err: [Inf, 0.7159000067910073, 0.348215031218968, 0.2931429677712286, 0.2877884322611839, 0.28542281826126403, 0.28423099193423007, 0.2824769131664061] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7159000067910073, 0.348215031218968, 0.2931429677712286, 0.2877884322611839, 0.28542281826126403, 0.28423099193423007, 0.2824769131664061, 0.2816256563390487] ***
*** finished computation of 7 references, err: [Inf, 0.7159000067910073, 0.348215031218968, 0.2931429677712286, 0.2877884322611839, 0.28542281826126403, 0.28423099193423007, 0.2824769131664061, 0.2816256563390487] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 14]]
** centroid: 5, normalized-entropy: 0.9967916319816367, [(2, 16), (3, 14)]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 7, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5703000011543576] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5703000011543576, 0.47816653789978447] ***
*** starting iteration: 2; err: [Inf, 0.5703000011543576, 0.47816653789978447] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5703000011543576, 0.47816653789978447, 0.47406229154944307] ***
*** starting iteration: 3; err: [Inf, 0.5703000011543576, 0.47816653789978447, 0.47406229154944307] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5703000011543576, 0.47816653789978447, 0.47406229154944307, 0.47335853198258077] ***
*** finished computation of 3 references, err: [Inf, 0.5703000011543576, 0.47816653789978447, 0.47406229154944307, 0.47335853198258077] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 6]]
** centroid: 2, normalized-entropy: 0.6609623351442084, [(2, 29), (3, 6)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 28]]
** centroid: 3, normalized-entropy: 0.21639693245126485, [(2, 1), (3, 28)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.151800003961076] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.151800003961076, 0.6310656942445302] ***
*** starting iteration: 2; err: [Inf, 1.151800003961076, 0.6310656942445302] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.151800003961076, 0.6310656942445302, 0.6238683813863107] ***
*** starting iteration: 3; err: [Inf, 1.151800003961076, 0.6310656942445302, 0.6238683813863107] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.151800003961076, 0.6310656942445302, 0.6238683813863107, 0.6211528060541286] ***
*** finished computation of 3 references, err: [Inf, 1.151800003961076, 0.6310656942445302, 0.6238683813863107, 0.6211528060541286] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 27, 2]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 32]]
** centroid: 3, normalized-entropy: 0.7592757847892834, [(2, 9), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1278999921499986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1278999921499986, 0.9062688623075457] ***
*** starting iteration: 2; err: [Inf, 1.1278999921499986, 0.9062688623075457] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1278999921499986, 0.9062688623075457, 0.9060065373000397] ***
*** finished computation of 3 references, err: [Inf, 1.1278999921499986, 0.9062688623075457, 0.9060065373000397] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [19, 1, 0]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(1, 19), (2, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 32]]
** centroid: 3, normalized-entropy: 0.9998292601233937, [(2, 33), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3197763871215079] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3197763871215079, 0.2126566441415932] ***
*** starting iteration: 2; err: [Inf, 0.3197763871215079, 0.2126566441415932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3197763871215079, 0.2126566441415932, 0.19024446473568932] ***
*** starting iteration: 3; err: [Inf, 0.3197763871215079, 0.2126566441415932, 0.19024446473568932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3197763871215079, 0.2126566441415932, 0.19024446473568932, 0.17849037502071977] ***
*** starting iteration: 4; err: [Inf, 0.3197763871215079, 0.2126566441415932, 0.19024446473568932, 0.17849037502071977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3197763871215079, 0.2126566441415932, 0.19024446473568932, 0.17849037502071977, 0.17790646729962084] ***
*** finished computation of 7 references, err: [Inf, 0.3197763871215079, 0.2126566441415932, 0.19024446473568932, 0.17849037502071977, 0.17790646729962084] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 8]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 10), (3, 8)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 2]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5615613453805836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5615613453805836, 0.29372671327811917] ***
*** starting iteration: 2; err: [Inf, 0.5615613453805836, 0.29372671327811917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5615613453805836, 0.29372671327811917, 0.2511482226037996] ***
*** starting iteration: 3; err: [Inf, 0.5615613453805836, 0.29372671327811917, 0.2511482226037996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5615613453805836, 0.29372671327811917, 0.2511482226037996, 0.21959652225093465] ***
*** starting iteration: 4; err: [Inf, 0.5615613453805836, 0.29372671327811917, 0.2511482226037996, 0.21959652225093465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5615613453805836, 0.29372671327811917, 0.2511482226037996, 0.21959652225093465, 0.1877126084380141] ***
*** starting iteration: 5; err: [Inf, 0.5615613453805836, 0.29372671327811917, 0.2511482226037996, 0.21959652225093465, 0.1877126084380141] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5615613453805836, 0.29372671327811917, 0.2511482226037996, 0.21959652225093465, 0.1877126084380141, 0.1792997324650161] ***
*** starting iteration: 6; err: [Inf, 0.5615613453805836, 0.29372671327811917, 0.2511482226037996, 0.21959652225093465, 0.1877126084380141, 0.1792997324650161] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5615613453805836, 0.29372671327811917, 0.2511482226037996, 0.21959652225093465, 0.1877126084380141, 0.1792997324650161, 0.17687033408283576] ***
*** starting iteration: 7; err: [Inf, 0.5615613453805836, 0.29372671327811917, 0.2511482226037996, 0.21959652225093465, 0.1877126084380141, 0.1792997324650161, 0.17687033408283576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5615613453805836, 0.29372671327811917, 0.2511482226037996, 0.21959652225093465, 0.1877126084380141, 0.1792997324650161, 0.17687033408283576, 0.17687033408283576] ***
*** finished computation of 7 references, err: [Inf, 0.5615613453805836, 0.29372671327811917, 0.2511482226037996, 0.21959652225093465, 0.1877126084380141, 0.1792997324650161, 0.17687033408283576, 0.17687033408283576] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 8]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 8)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 7: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31259157832684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31259157832684, 0.19876049444732047] ***
*** starting iteration: 2; err: [Inf, 0.31259157832684, 0.19876049444732047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31259157832684, 0.19876049444732047, 0.19430737070672877] ***
*** starting iteration: 3; err: [Inf, 0.31259157832684, 0.19876049444732047, 0.19430737070672877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31259157832684, 0.19876049444732047, 0.19430737070672877, 0.1933702713149122] ***
*** finished computation of 7 references, err: [Inf, 0.31259157832684, 0.19876049444732047, 0.19430737070672877, 0.1933702713149122] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 16]]
** centroid: 4, normalized-entropy: 1.0, [(2, 16), (3, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.478563262837044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.478563262837044, 0.6110036581057966] ***
*** starting iteration: 2; err: [Inf, 2.478563262837044, 0.6110036581057966] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.478563262837044, 0.6110036581057966, 0.3692276379422735] ***
*** starting iteration: 3; err: [Inf, 2.478563262837044, 0.6110036581057966, 0.3692276379422735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.478563262837044, 0.6110036581057966, 0.3692276379422735, 0.330735491793896] ***
*** finished computation of 3 references, err: [Inf, 2.478563262837044, 0.6110036581057966, 0.3692276379422735, 0.330735491793896] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 8]]
** centroid: 1, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 2, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.827707286096417] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.827707286096417, 0.5328719929385229] ***
*** starting iteration: 2; err: [Inf, 0.827707286096417, 0.5328719929385229] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.827707286096417, 0.5328719929385229, 0.41519973913456054] ***
*** starting iteration: 3; err: [Inf, 0.827707286096417, 0.5328719929385229, 0.41519973913456054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.827707286096417, 0.5328719929385229, 0.41519973913456054, 0.41091993130931626] ***
*** finished computation of 3 references, err: [Inf, 0.827707286096417, 0.5328719929385229, 0.41519973913456054, 0.41091993130931626] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 8]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 26]]
** centroid: 2, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.500452103802557] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.500452103802557, 0.6788291128563151] ***
*** starting iteration: 2; err: [Inf, 2.500452103802557, 0.6788291128563151] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.500452103802557, 0.6788291128563151, 0.3532858410608965] ***
*** starting iteration: 3; err: [Inf, 2.500452103802557, 0.6788291128563151, 0.3532858410608965] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.500452103802557, 0.6788291128563151, 0.3532858410608965, 0.3527458567893851] ***
*** finished computation of 3 references, err: [Inf, 2.500452103802557, 0.6788291128563151, 0.3532858410608965, 0.3527458567893851] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 2, normalized-entropy: 0.2761954276479391, [(2, 1), (3, 20)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.2594309769240963] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2594309769240963, 0.7011062262015498] ***
*** starting iteration: 2; err: [Inf, 2.2594309769240963, 0.7011062262015498] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2594309769240963, 0.7011062262015498, 0.4954011784714359] ***
*** starting iteration: 3; err: [Inf, 2.2594309769240963, 0.7011062262015498, 0.4954011784714359] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2594309769240963, 0.7011062262015498, 0.4954011784714359, 0.4188160156993454] ***
*** finished computation of 3 references, err: [Inf, 2.2594309769240963, 0.7011062262015498, 0.4954011784714359, 0.4188160156993454] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 15]]
** centroid: 2, normalized-entropy: 0.9256859869821296, [(2, 29), (3, 15)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.2042535668184127] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.2042535668184127, 1.0260881950525225] ***
*** starting iteration: 2; err: [Inf, 3.2042535668184127, 1.0260881950525225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.2042535668184127, 1.0260881950525225, 0.521446447615466] ***
*** starting iteration: 3; err: [Inf, 3.2042535668184127, 1.0260881950525225, 0.521446447615466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.2042535668184127, 1.0260881950525225, 0.521446447615466, 0.4619730109969696] ***
*** finished computation of 3 references, err: [Inf, 3.2042535668184127, 1.0260881950525225, 0.521446447615466, 0.4619730109969696] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 20]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(2, 35), (3, 20)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.089827339195538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.089827339195538, 1.821860396586896] ***
*** starting iteration: 2; err: [Inf, 4.089827339195538, 1.821860396586896] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.089827339195538, 1.821860396586896, 1.0899833063072335] ***
*** starting iteration: 3; err: [Inf, 4.089827339195538, 1.821860396586896, 1.0899833063072335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.089827339195538, 1.821860396586896, 1.0899833063072335, 0.5087909655077931] ***
*** finished computation of 3 references, err: [Inf, 4.089827339195538, 1.821860396586896, 1.0899833063072335, 0.5087909655077931] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 23]]
** centroid: 1, normalized-entropy: 0.9768740126265281, [(2, 33), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5365000061598688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5365000061598688, 0.28306978862492077] ***
*** starting iteration: 2; err: [Inf, 0.5365000061598688, 0.28306978862492077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5365000061598688, 0.28306978862492077, 0.2632438170661223] ***
*** starting iteration: 3; err: [Inf, 0.5365000061598688, 0.28306978862492077, 0.2632438170661223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5365000061598688, 0.28306978862492077, 0.2632438170661223, 0.23951465061558505] ***
*** finished computation of 7 references, err: [Inf, 0.5365000061598688, 0.28306978862492077, 0.2632438170661223, 0.23951465061558505] ***
*** center 1: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 9]]
** centroid: 2, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 5]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 1), (3, 5)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.5468000257578243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5468000257578243, 0.3333312341294727] ***
*** starting iteration: 2; err: [Inf, 1.5468000257578243, 0.3333312341294727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5468000257578243, 0.3333312341294727, 0.28440047978228566] ***
*** starting iteration: 3; err: [Inf, 1.5468000257578243, 0.3333312341294727, 0.28440047978228566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5468000257578243, 0.3333312341294727, 0.28440047978228566, 0.278263453441661] ***
*** finished computation of 7 references, err: [Inf, 1.5468000257578243, 0.3333312341294727, 0.28440047978228566, 0.278263453441661] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 16, 6]]
** centroid: 6, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5820999957949868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5820999957949868, 0.30806184886143173] ***
*** starting iteration: 2; err: [Inf, 0.5820999957949868, 0.30806184886143173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5820999957949868, 0.30806184886143173, 0.2724915813837119] ***
*** starting iteration: 3; err: [Inf, 0.5820999957949868, 0.30806184886143173, 0.2724915813837119] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5820999957949868, 0.30806184886143173, 0.2724915813837119, 0.2622125670417023] ***
*** finished computation of 7 references, err: [Inf, 0.5820999957949868, 0.30806184886143173, 0.2724915813837119, 0.2622125670417023] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 1]]
** centroid: 1, normalized-entropy: 0.22853814395352806, [(2, 26), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 6, 11]]
** centroid: 4, normalized-entropy: 0.9366673818775627, [(2, 6), (3, 11)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6280644624291951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280644624291951, 0.29256935824689184] ***
*** starting iteration: 2; err: [Inf, 0.6280644624291951, 0.29256935824689184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555] ***
*** starting iteration: 3; err: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555, 0.2816417562972415] ***
*** starting iteration: 4; err: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555, 0.2816417562972415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555, 0.2816417562972415, 0.27774760276105676] ***
*** starting iteration: 5; err: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555, 0.2816417562972415, 0.27774760276105676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555, 0.2816417562972415, 0.27774760276105676, 0.2760308623625571] ***
*** starting iteration: 6; err: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555, 0.2816417562972415, 0.27774760276105676, 0.2760308623625571] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555, 0.2816417562972415, 0.27774760276105676, 0.2760308623625571, 0.27371485791316447] ***
*** starting iteration: 7; err: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555, 0.2816417562972415, 0.27774760276105676, 0.2760308623625571, 0.27371485791316447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555, 0.2816417562972415, 0.27774760276105676, 0.2760308623625571, 0.27371485791316447, 0.2711253042240096] ***
*** starting iteration: 8; err: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555, 0.2816417562972415, 0.27774760276105676, 0.2760308623625571, 0.27371485791316447, 0.2711253042240096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555, 0.2816417562972415, 0.27774760276105676, 0.2760308623625571, 0.27371485791316447, 0.2711253042240096, 0.27006027348091133] ***
*** starting iteration: 9; err: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555, 0.2816417562972415, 0.27774760276105676, 0.2760308623625571, 0.27371485791316447, 0.2711253042240096, 0.27006027348091133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555, 0.2816417562972415, 0.27774760276105676, 0.2760308623625571, 0.27371485791316447, 0.2711253042240096, 0.27006027348091133, 0.27006027348091133] ***
*** finished computation of 7 references, err: [Inf, 0.6280644624291951, 0.29256935824689184, 0.28671555686778555, 0.2816417562972415, 0.27774760276105676, 0.2760308623625571, 0.27371485791316447, 0.2711253042240096, 0.27006027348091133, 0.27006027348091133] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 31]]
** centroid: 1, normalized-entropy: 0.43055186701043935, [(2, 3), (3, 31)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 27, 3]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 27), (3, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6682776761091377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6682776761091377, 0.30240177429631815] ***
*** starting iteration: 2; err: [Inf, 0.6682776761091377, 0.30240177429631815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046] ***
*** starting iteration: 3; err: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793] ***
*** starting iteration: 4; err: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793, 0.2253828834294244] ***
*** starting iteration: 5; err: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793, 0.2253828834294244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793, 0.2253828834294244, 0.2228645594996685] ***
*** starting iteration: 6; err: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793, 0.2253828834294244, 0.2228645594996685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793, 0.2253828834294244, 0.2228645594996685, 0.2173816868007807] ***
*** starting iteration: 7; err: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793, 0.2253828834294244, 0.2228645594996685, 0.2173816868007807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793, 0.2253828834294244, 0.2228645594996685, 0.2173816868007807, 0.21186883006126958] ***
*** starting iteration: 8; err: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793, 0.2253828834294244, 0.2228645594996685, 0.2173816868007807, 0.21186883006126958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793, 0.2253828834294244, 0.2228645594996685, 0.2173816868007807, 0.21186883006126958, 0.20626257733284908] ***
*** starting iteration: 9; err: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793, 0.2253828834294244, 0.2228645594996685, 0.2173816868007807, 0.21186883006126958, 0.20626257733284908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793, 0.2253828834294244, 0.2228645594996685, 0.2173816868007807, 0.21186883006126958, 0.20626257733284908, 0.20463972730653526] ***
*** starting iteration: 10; err: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793, 0.2253828834294244, 0.2228645594996685, 0.2173816868007807, 0.21186883006126958, 0.20626257733284908, 0.20463972730653526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793, 0.2253828834294244, 0.2228645594996685, 0.2173816868007807, 0.21186883006126958, 0.20626257733284908, 0.20463972730653526, 0.2013043241186678] ***
*** finished computation of 7 references, err: [Inf, 0.6682776761091377, 0.30240177429631815, 0.24480357406140046, 0.22826336886724793, 0.2253828834294244, 0.2228645594996685, 0.2173816868007807, 0.21186883006126958, 0.20626257733284908, 0.20463972730653526, 0.2013043241186678] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 21]]
** centroid: 1, normalized-entropy: 0.8812908992306927, [(2, 9), (3, 21)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 5, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5226714494902115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5226714494902115, 0.3218762854177657] ***
*** starting iteration: 2; err: [Inf, 0.5226714494902115, 0.3218762854177657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5226714494902115, 0.3218762854177657, 0.2820369312516563] ***
*** starting iteration: 3; err: [Inf, 0.5226714494902115, 0.3218762854177657, 0.2820369312516563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5226714494902115, 0.3218762854177657, 0.2820369312516563, 0.23494371668669445] ***
*** starting iteration: 4; err: [Inf, 0.5226714494902115, 0.3218762854177657, 0.2820369312516563, 0.23494371668669445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5226714494902115, 0.3218762854177657, 0.2820369312516563, 0.23494371668669445, 0.20965375382900903] ***
*** starting iteration: 5; err: [Inf, 0.5226714494902115, 0.3218762854177657, 0.2820369312516563, 0.23494371668669445, 0.20965375382900903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5226714494902115, 0.3218762854177657, 0.2820369312516563, 0.23494371668669445, 0.20965375382900903, 0.19368891779847405] ***
*** starting iteration: 6; err: [Inf, 0.5226714494902115, 0.3218762854177657, 0.2820369312516563, 0.23494371668669445, 0.20965375382900903, 0.19368891779847405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5226714494902115, 0.3218762854177657, 0.2820369312516563, 0.23494371668669445, 0.20965375382900903, 0.19368891779847405, 0.18981846343161302] ***
*** starting iteration: 7; err: [Inf, 0.5226714494902115, 0.3218762854177657, 0.2820369312516563, 0.23494371668669445, 0.20965375382900903, 0.19368891779847405, 0.18981846343161302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5226714494902115, 0.3218762854177657, 0.2820369312516563, 0.23494371668669445, 0.20965375382900903, 0.19368891779847405, 0.18981846343161302, 0.18838482777305324] ***
*** starting iteration: 8; err: [Inf, 0.5226714494902115, 0.3218762854177657, 0.2820369312516563, 0.23494371668669445, 0.20965375382900903, 0.19368891779847405, 0.18981846343161302, 0.18838482777305324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5226714494902115, 0.3218762854177657, 0.2820369312516563, 0.23494371668669445, 0.20965375382900903, 0.19368891779847405, 0.18981846343161302, 0.18838482777305324, 0.18838482777305324] ***
*** finished computation of 7 references, err: [Inf, 0.5226714494902115, 0.3218762854177657, 0.2820369312516563, 0.23494371668669445, 0.20965375382900903, 0.19368891779847405, 0.18981846343161302, 0.18838482777305324, 0.18838482777305324] ***
*** center 1: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 16, 16]]
** centroid: 6, normalized-entropy: 1.0, [(2, 16), (3, 16)]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.229900000339144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.229900000339144, 0.37998876087100486] ***
*** finished computation of 7 references, err: [Inf, 2.229900000339144, 0.37998876087100486] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 26, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8106999976897262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8106999976897262, 0.3276060721654646] ***
*** finished computation of 7 references, err: [Inf, 0.8106999976897262, 0.3276060721654646] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 8]]
** centroid: 2, normalized-entropy: 0.876716288999464, [(2, 19), (3, 8)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.959299999220199] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.959299999220199, 0.3325734875190641] ***
*** finished computation of 7 references, err: [Inf, 0.959299999220199, 0.3325734875190641] ***
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 15]]
** centroid: 3, normalized-entropy: 0.9023932827949788, [(2, 7), (3, 15)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 5, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4988999964659353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4988999964659353, 0.4755526822436225] ***
*** starting iteration: 2; err: [Inf, 1.4988999964659353, 0.4755526822436225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4988999964659353, 0.4755526822436225, 0.4731569293737685] ***
*** starting iteration: 3; err: [Inf, 1.4988999964659353, 0.4755526822436225, 0.4731569293737685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4988999964659353, 0.4755526822436225, 0.4731569293737685, 0.4731569293737685] ***
*** finished computation of 3 references, err: [Inf, 1.4988999964659353, 0.4755526822436225, 0.4731569293737685, 0.4731569293737685] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 26]]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 8]]
** centroid: 3, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1347000011941397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1347000011941397, 0.6631612300534906] ***
*** starting iteration: 2; err: [Inf, 1.1347000011941397, 0.6631612300534906] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816] ***
*** starting iteration: 3; err: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107] ***
*** starting iteration: 4; err: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107, 0.6211528060541286] ***
*** starting iteration: 5; err: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107, 0.6211528060541286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107, 0.6211528060541286, 0.6162913669327658] ***
*** starting iteration: 6; err: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107, 0.6211528060541286, 0.6162913669327658] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107, 0.6211528060541286, 0.6162913669327658, 0.6127509364930704] ***
*** starting iteration: 7; err: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107, 0.6211528060541286, 0.6162913669327658, 0.6127509364930704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107, 0.6211528060541286, 0.6162913669327658, 0.6127509364930704, 0.6085664332474132] ***
*** starting iteration: 8; err: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107, 0.6211528060541286, 0.6162913669327658, 0.6127509364930704, 0.6085664332474132] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107, 0.6211528060541286, 0.6162913669327658, 0.6127509364930704, 0.6085664332474132, 0.604922231265146] ***
*** starting iteration: 9; err: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107, 0.6211528060541286, 0.6162913669327658, 0.6127509364930704, 0.6085664332474132, 0.604922231265146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107, 0.6211528060541286, 0.6162913669327658, 0.6127509364930704, 0.6085664332474132, 0.604922231265146, 0.6017718366945772] ***
*** starting iteration: 10; err: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107, 0.6211528060541286, 0.6162913669327658, 0.6127509364930704, 0.6085664332474132, 0.604922231265146, 0.6017718366945772] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107, 0.6211528060541286, 0.6162913669327658, 0.6127509364930704, 0.6085664332474132, 0.604922231265146, 0.6017718366945772, 0.5975474765645165] ***
*** finished computation of 3 references, err: [Inf, 1.1347000011941397, 0.6631612300534906, 0.6310075068388816, 0.6238683813863107, 0.6211528060541286, 0.6162913669327658, 0.6127509364930704, 0.6085664332474132, 0.604922231265146, 0.6017718366945772, 0.5975474765645165] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 26]]
** centroid: 1, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 3, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1817999938209967] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1817999938209967, 0.4989093206056282] ***
*** starting iteration: 2; err: [Inf, 1.1817999938209967, 0.4989093206056282] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1817999938209967, 0.4989093206056282, 0.49636537238144757] ***
*** starting iteration: 3; err: [Inf, 1.1817999938209967, 0.4989093206056282, 0.49636537238144757] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1817999938209967, 0.4989093206056282, 0.49636537238144757, 0.49636537238144757] ***
*** finished computation of 3 references, err: [Inf, 1.1817999938209967, 0.4989093206056282, 0.49636537238144757, 0.49636537238144757] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 20]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 12]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 32), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0067999955632276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0067999955632276, 0.5569974778851561] ***
*** finished computation of 3 references, err: [Inf, 1.0067999955632276, 0.5569974778851561] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [36, 1, 0]]
** centroid: 1, normalized-entropy: 0.1792560669283214, [(1, 36), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 10]]
** centroid: 3, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4369000078041552] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4369000078041552, 0.6342788062874661] ***
*** finished computation of 3 references, err: [Inf, 1.4369000078041552, 0.6342788062874661] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 33]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 12), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 1]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 24), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9535999994716852] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9535999994716852, 0.5963536846702673] ***
*** finished computation of 3 references, err: [Inf, 0.9535999994716852, 0.5963536846702673] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 31]]
** centroid: 1, normalized-entropy: 0.8541802051521676, [(2, 12), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6907672805377979] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6907672805377979, 0.3962499748098307] ***
*** finished computation of 3 references, err: [Inf, 0.6907672805377979, 0.3962499748098307] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 13]]
** centroid: 3, normalized-entropy: 0.8926230133850988, [(2, 29), (3, 13)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9385293944294709] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9385293944294709, 0.42036074621751923] ***
*** finished computation of 3 references, err: [Inf, 0.9385293944294709, 0.42036074621751923] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 33]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 10), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 26, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6755140768208612] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6755140768208612, 0.35915139330019796] ***
*** finished computation of 3 references, err: [Inf, 0.6755140768208612, 0.35915139330019796] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 15]]
** centroid: 1, normalized-entropy: 0.8886466698980794, [(2, 34), (3, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2790250478309787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2790250478309787, 0.16921166968560694] ***
*** starting iteration: 2; err: [Inf, 0.2790250478309787, 0.16921166968560694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2790250478309787, 0.16921166968560694, 0.1534803688389794] ***
*** starting iteration: 3; err: [Inf, 0.2790250478309787, 0.16921166968560694, 0.1534803688389794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2790250478309787, 0.16921166968560694, 0.1534803688389794, 0.14853003153933805] ***
*** finished computation of 7 references, err: [Inf, 0.2790250478309787, 0.16921166968560694, 0.1534803688389794, 0.14853003153933805] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 8]]
** centroid: 1, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 22]]
** centroid: 6, normalized-entropy: 0.2580186686648155, [(2, 1), (3, 22)]
*** center 7: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36050554480632796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36050554480632796, 0.2221004393861381] ***
*** starting iteration: 2; err: [Inf, 0.36050554480632796, 0.2221004393861381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36050554480632796, 0.2221004393861381, 0.20791674298549837] ***
*** starting iteration: 3; err: [Inf, 0.36050554480632796, 0.2221004393861381, 0.20791674298549837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36050554480632796, 0.2221004393861381, 0.20791674298549837, 0.2057232611113626] ***
*** finished computation of 7 references, err: [Inf, 0.36050554480632796, 0.2221004393861381, 0.20791674298549837, 0.2057232611113626] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 20]]
** centroid: 1, normalized-entropy: 0.9383153522334071, [(2, 11), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 19, 2]]
** centroid: 5, normalized-entropy: 0.45371633918694493, [(2, 19), (3, 2)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46915793563980274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46915793563980274, 0.19094693689233208] ***
*** starting iteration: 2; err: [Inf, 0.46915793563980274, 0.19094693689233208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46915793563980274, 0.19094693689233208, 0.17783931630679423] ***
*** starting iteration: 3; err: [Inf, 0.46915793563980274, 0.19094693689233208, 0.17783931630679423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46915793563980274, 0.19094693689233208, 0.17783931630679423, 0.168334920308356] ***
*** finished computation of 7 references, err: [Inf, 0.46915793563980274, 0.19094693689233208, 0.17783931630679423, 0.168334920308356] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 2]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 4, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.98
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.4093032516899349] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4093032516899349, 0.17990006463187672] ***
*** starting iteration: 2; err: [Inf, 0.4093032516899349, 0.17990006463187672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4093032516899349, 0.17990006463187672, 0.17335427346368434] ***
*** starting iteration: 3; err: [Inf, 0.4093032516899349, 0.17990006463187672, 0.17335427346368434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4093032516899349, 0.17990006463187672, 0.17335427346368434, 0.17235639410609774] ***
*** finished computation of 7 references, err: [Inf, 0.4093032516899349, 0.17990006463187672, 0.17335427346368434, 0.17235639410609774] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 6]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5146293464675874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5146293464675874, 0.28088953501618874] ***
*** starting iteration: 2; err: [Inf, 0.5146293464675874, 0.28088953501618874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5146293464675874, 0.28088953501618874, 0.22058861536332625] ***
*** starting iteration: 3; err: [Inf, 0.5146293464675874, 0.28088953501618874, 0.22058861536332625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5146293464675874, 0.28088953501618874, 0.22058861536332625, 0.20898945873878866] ***
*** finished computation of 7 references, err: [Inf, 0.5146293464675874, 0.28088953501618874, 0.22058861536332625, 0.20898945873878866] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 3]]
** centroid: 2, normalized-entropy: 0.6098403047164005, [(2, 17), (3, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 14]]
** centroid: 4, normalized-entropy: 0.3533593350214213, [(2, 1), (3, 14)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32746988763776913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32746988763776913, 0.24257933960290803] ***
*** starting iteration: 2; err: [Inf, 0.32746988763776913, 0.24257933960290803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32746988763776913, 0.24257933960290803, 0.2069881088944816] ***
*** starting iteration: 3; err: [Inf, 0.32746988763776913, 0.24257933960290803, 0.2069881088944816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32746988763776913, 0.24257933960290803, 0.2069881088944816, 0.18538722795260196] ***
*** finished computation of 7 references, err: [Inf, 0.32746988763776913, 0.24257933960290803, 0.2069881088944816, 0.18538722795260196] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 8]]
** centroid: 1, normalized-entropy: 0.9819407868640977, [(2, 11), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.98
finished with 17
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.98
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.46490000497565886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46490000497565886, 0.28182804949061746] ***
*** starting iteration: 2; err: [Inf, 0.46490000497565886, 0.28182804949061746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46490000497565886, 0.28182804949061746, 0.2717803885455753] ***
*** starting iteration: 3; err: [Inf, 0.46490000497565886, 0.28182804949061746, 0.2717803885455753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46490000497565886, 0.28182804949061746, 0.2717803885455753, 0.25210198857910227] ***
*** finished computation of 7 references, err: [Inf, 0.46490000497565886, 0.28182804949061746, 0.2717803885455753, 0.25210198857910227] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 9]]
** centroid: 3, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 4: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.2324999692033494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2324999692033494, 0.6623443100687048] ***
*** starting iteration: 2; err: [Inf, 3.2324999692033494, 0.6623443100687048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2324999692033494, 0.6623443100687048, 0.3154250691385331] ***
*** starting iteration: 3; err: [Inf, 3.2324999692033494, 0.6623443100687048, 0.3154250691385331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2324999692033494, 0.6623443100687048, 0.3154250691385331, 0.2966511429939915] ***
*** finished computation of 7 references, err: [Inf, 3.2324999692033494, 0.6623443100687048, 0.3154250691385331, 0.2966511429939915] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 9]]
** centroid: 2, normalized-entropy: 0.9886994082884974, [(2, 7), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6840000050759666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6840000050759666, 0.3301408291108092] ***
*** starting iteration: 2; err: [Inf, 0.6840000050759666, 0.3301408291108092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6840000050759666, 0.3301408291108092, 0.2587032700708052] ***
*** starting iteration: 3; err: [Inf, 0.6840000050759666, 0.3301408291108092, 0.2587032700708052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6840000050759666, 0.3301408291108092, 0.2587032700708052, 0.24296032030874623] ***
*** finished computation of 7 references, err: [Inf, 0.6840000050759666, 0.3301408291108092, 0.2587032700708052, 0.24296032030874623] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 16, 11]]
** centroid: 5, normalized-entropy: 0.975119064940866, [(2, 16), (3, 11)]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.98
finished with 19
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.8175951454855563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8175951454855563, 0.590038889032931] ***
*** starting iteration: 2; err: [Inf, 0.8175951454855563, 0.590038889032931] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8175951454855563, 0.590038889032931, 0.5887386189267975] ***
*** starting iteration: 3; err: [Inf, 0.8175951454855563, 0.590038889032931, 0.5887386189267975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8175951454855563, 0.590038889032931, 0.5887386189267975, 0.5883298474737123] ***
*** finished computation of 3 references, err: [Inf, 0.8175951454855563, 0.590038889032931, 0.5887386189267975, 0.5883298474737123] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [19, 2, 0]]
** centroid: 2, normalized-entropy: 0.45371633918694493, [(1, 19), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 34]]
** centroid: 3, normalized-entropy: 0.9932338197397066, [(2, 28), (3, 34)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6464558928863249] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6464558928863249, 0.41517751891992305] ***
*** starting iteration: 2; err: [Inf, 0.6464558928863249, 0.41517751891992305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6464558928863249, 0.41517751891992305, 0.411893310268087] ***
*** starting iteration: 3; err: [Inf, 0.6464558928863249, 0.41517751891992305, 0.411893310268087] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6464558928863249, 0.41517751891992305, 0.411893310268087, 0.411893310268087] ***
*** finished computation of 3 references, err: [Inf, 0.6464558928863249, 0.41517751891992305, 0.411893310268087, 0.411893310268087] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 36, 8]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1632185056315194] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1632185056315194, 0.6262197020793772] ***
*** starting iteration: 2; err: [Inf, 1.1632185056315194, 0.6262197020793772] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1632185056315194, 0.6262197020793772, 0.6185645856717872] ***
*** starting iteration: 3; err: [Inf, 1.1632185056315194, 0.6262197020793772, 0.6185645856717872] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1632185056315194, 0.6262197020793772, 0.6185645856717872, 0.6090495352425438] ***
*** starting iteration: 4; err: [Inf, 1.1632185056315194, 0.6262197020793772, 0.6185645856717872, 0.6090495352425438] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1632185056315194, 0.6262197020793772, 0.6185645856717872, 0.6090495352425438, 0.6047651068798885] ***
*** starting iteration: 5; err: [Inf, 1.1632185056315194, 0.6262197020793772, 0.6185645856717872, 0.6090495352425438, 0.6047651068798885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1632185056315194, 0.6262197020793772, 0.6185645856717872, 0.6090495352425438, 0.6047651068798885, 0.6037803465415169] ***
*** finished computation of 3 references, err: [Inf, 1.1632185056315194, 0.6262197020793772, 0.6185645856717872, 0.6090495352425438, 0.6047651068798885, 0.6037803465415169] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 32]]
** centroid: 3, normalized-entropy: 0.9993375041688846, [(2, 34), (3, 32)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.98
finished with 19
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.98
finished with 19
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.98
finished with 20
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.5828000108576933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5828000108576933, 0.4179921288994801] ***
*** starting iteration: 2; err: [Inf, 0.5828000108576933, 0.4179921288994801] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5828000108576933, 0.4179921288994801, 0.41316497776967753] ***
*** starting iteration: 3; err: [Inf, 0.5828000108576933, 0.4179921288994801, 0.41316497776967753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5828000108576933, 0.4179921288994801, 0.41316497776967753, 0.4120173875511256] ***
*** starting iteration: 4; err: [Inf, 0.5828000108576933, 0.4179921288994801, 0.41316497776967753, 0.4120173875511256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5828000108576933, 0.4179921288994801, 0.41316497776967753, 0.4120173875511256, 0.41139247991641525] ***
*** finished computation of 7 references, err: [Inf, 0.5828000108576933, 0.4179921288994801, 0.41316497776967753, 0.4120173875511256, 0.41139247991641525] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 34]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(2, 6), (3, 34)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 24, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6477999965969893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6477999965969893, 0.3296194939028196] ***
*** starting iteration: 2; err: [Inf, 0.6477999965969893, 0.3296194939028196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6477999965969893, 0.3296194939028196, 0.2932313485083119] ***
*** starting iteration: 3; err: [Inf, 0.6477999965969893, 0.3296194939028196, 0.2932313485083119] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6477999965969893, 0.3296194939028196, 0.2932313485083119, 0.2729595726209652] ***
*** starting iteration: 4; err: [Inf, 0.6477999965969893, 0.3296194939028196, 0.2932313485083119, 0.2729595726209652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6477999965969893, 0.3296194939028196, 0.2932313485083119, 0.2729595726209652, 0.2617636669471857] ***
*** starting iteration: 5; err: [Inf, 0.6477999965969893, 0.3296194939028196, 0.2932313485083119, 0.2729595726209652, 0.2617636669471857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6477999965969893, 0.3296194939028196, 0.2932313485083119, 0.2729595726209652, 0.2617636669471857, 0.25957590720050283] ***
*** starting iteration: 6; err: [Inf, 0.6477999965969893, 0.3296194939028196, 0.2932313485083119, 0.2729595726209652, 0.2617636669471857, 0.25957590720050283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6477999965969893, 0.3296194939028196, 0.2932313485083119, 0.2729595726209652, 0.2617636669471857, 0.25957590720050283, 0.25839124936264524] ***
*** starting iteration: 7; err: [Inf, 0.6477999965969893, 0.3296194939028196, 0.2932313485083119, 0.2729595726209652, 0.2617636669471857, 0.25957590720050283, 0.25839124936264524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6477999965969893, 0.3296194939028196, 0.2932313485083119, 0.2729595726209652, 0.2617636669471857, 0.25957590720050283, 0.25839124936264524, 0.25797821560923634] ***
*** finished computation of 7 references, err: [Inf, 0.6477999965969893, 0.3296194939028196, 0.2932313485083119, 0.2729595726209652, 0.2617636669471857, 0.25957590720050283, 0.25839124936264524, 0.25797821560923634] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 2]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 16), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 18]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(2, 1), (3, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 2]]
** centroid: 6, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9442000024761583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9442000024761583, 0.2678824358435671] ***
*** starting iteration: 2; err: [Inf, 0.9442000024761583, 0.2678824358435671] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9442000024761583, 0.2678824358435671, 0.25677408631514487] ***
*** starting iteration: 3; err: [Inf, 0.9442000024761583, 0.2678824358435671, 0.25677408631514487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9442000024761583, 0.2678824358435671, 0.25677408631514487, 0.2532572103612123] ***
*** starting iteration: 4; err: [Inf, 0.9442000024761583, 0.2678824358435671, 0.25677408631514487, 0.2532572103612123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9442000024761583, 0.2678824358435671, 0.25677408631514487, 0.2532572103612123, 0.2526797274515616] ***
*** finished computation of 7 references, err: [Inf, 0.9442000024761583, 0.2678824358435671, 0.25677408631514487, 0.2532572103612123, 0.2526797274515616] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 11]]
** centroid: 5, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 6: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.98
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.22608695652174, 3.6260869565217386, 1.5217391304347823, 0.27826086956521745], [6.153846153846152, 2.961538461538461, 4.6230769230769235, 1.4615384615384615], [5.966666666666666, 2.7333333333333334, 5.055555555555555, 1.7999999999999998], [4.699999999999999, 3.069230769230769, 1.4307692307692308, 0.2076923076923077], [6.93125, 3.0124999999999997, 5.918749999999999, 2.1125000000000003], [6.416666666666667, 3.0833333333333335, 5.449999999999999, 2.0833333333333335], [6.9, 3.1, 4.9, 1.5], [6.8, 3.06, 5.36, 2.2399999999999998], [5.5625, 2.5812500000000003, 3.7937499999999997, 1.15625]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 3, 1, 3, 3, 2, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.7749999999999995, 2.9416666666666664, 4.325, 1.4000000000000004], [5.34, 2.38, 3.6900000000000004, 1.14], [7.42857142857143, 3.342857142857143, 6.142857142857143, 2.0714285714285716], [6.405882352941177, 3.0352941176470587, 5.517647058823529, 2.117647058823529], [5.0566666666666675, 3.4566666666666674, 1.4699999999999998, 0.25000000000000006], [6.46875, 2.8875, 4.681250000000001, 1.4749999999999999], [6.083333333333333, 2.65, 4.983333333333333, 1.7833333333333334], [7.666666666666667, 2.8000000000000003, 6.733333333333334, 2.1333333333333333]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 2, 3, 3, 1, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.844827586206896, 2.7413793103448283, 4.193103448275862, 1.2965517241379314], [4.673684210526315, 3.1052631578947367, 1.3894736842105264, 0.19473684210526318], [7.3, 2.8857142857142857, 6.128571428571428, 1.9571428571428573], [6.3500000000000005, 2.966666666666667, 4.716666666666666, 1.5], [5.972727272727273, 2.7545454545454544, 4.972727272727273, 1.8454545454545455], [6.85, 3.1, 4.85, 1.5499999999999998], [6.6000000000000005, 3.1363636363636362, 5.454545454545455, 2.2], [5.253333333333334, 3.7199999999999998, 1.4866666666666668, 0.2733333333333334], [7.800000000000001, 3.8, 6.550000000000001, 2.1]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 3, 2, 3, 2, 3, 1, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[53, 1, 26, 15, 24, 26, 24, 35, 24, 26, 2, 2, 1, 1, 1, 1, 21, 28, 18, 1, 24, 34, 16, 34, 16, 32, 32, 25, 38, 1, 33, 27, 50, 22, 1, 25, 25, 35, 38, 38, 32, 31, 26, 24, 19, 1, 36, 32, 28, 18, 20, 55, 24, 32, 36, 28, 33, 10, 30, 17, 28, 30, 17, 24, 1, 18, 32, 26, 33, 47, 30, 30, 24, 36, 36, 27, 7, 52, 44, 38, 15, 21, 17, 35, 39, 31, 40, 38, 38, 43, 35, 40, 37, 35, 29, 41, 36, 25, 57, 23, 17, 36, 35, 16, 28, 27, 16, 44, 11, 28, 20, 27, 35, 35, 19, 27, 27, 22, 36, 41, 33, 39, 40, 36, 31, 33, 31, 72, 40, 48, 1, 53, 43, 34, 48, 41, 27, 35, 46, 25, 37, 35, 41, 95, 35, 47, 39, 42, 34, 33, 44, 28, 40, 40, 28, 46, 36, 25, 52, 30, 41, 26, 42, 20, 40, 36, 46, 33, 40, 36, 46, 19, 47, 20, 37, 31, 28, 65, 24, 53, 37, 19, 32, 17, 43, 52, 47, 12, 17, 65, 57, 49, 25, 32, 48, 51, 31, 35, 32, 47, 22, 42, 12, 26, 34, 58, 46, 39, 40, 48, 24, 26, 38, 34, 59, 53, 62, 44, 33, 40, 35, 34, 36, 38, 31, 34, 33, 40, 40, 25, 24, 48, 47, 28, 34, 33, 42, 20, 30, 48, 40, 46, 23, 25, 43, 55, 48, 44, 41, 31, 31, 16, 26, 29, 38, 30, 37, 30, 28, 42, 51, 25, 82, 50, 51, 32, 24, 50, 48, 10, 48, 49, 42, 37, 43, 35, 54, 35, 34, 29, 2, 50, 30, 24, 34, 26, 37, 39, 39, 41, 38, 62, 40, 10, 33, 45, 46, 55, 40, 46]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6159999999999999, speedup = 0.4017093165970011, eval_ratio = 0.041417)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3854166666666665,"recall":0.3854166666666665,"f1":null,"seconds":7.061846554279327e-5,"exhaustive_search_seconds":0.00038832053542137146,"evaluations":341.3125,"distances_sum":1759.3472075890097}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5373263888888892,"recall":0.5373263888888892,"f1":0.5373263888888892,"seconds":0.00010270252823829651,"exhaustive_search_seconds":0.00038832053542137146,"evaluations":379.859375,"distances_sum":1645.5263760938242}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6493055555555555,"recall":0.6493055555555555,"f1":0.6493055555555555,"seconds":0.00013183057308197021,"exhaustive_search_seconds":0.00038832053542137146,"evaluations":418.453125,"distances_sum":1599.3238258881543}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.720486111111111,"recall":0.720486111111111,"f1":0.720486111111111,"seconds":0.0001655425876379013,"exhaustive_search_seconds":0.00038832053542137146,"evaluations":459.3359375,"distances_sum":1578.352340283593}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7760416666666663,"recall":0.7760416666666663,"f1":0.7760416666666663,"seconds":0.00019230321049690247,"exhaustive_search_seconds":0.00038832053542137146,"evaluations":497.84375,"distances_sum":1562.9111286279253}
KCenters.DeloneInvIndex> reached performance {"precision":0.8116319444444438,"recall":0.8116319444444438,"f1":0.8116319444444438,"seconds":0.0002328045666217804,"exhaustive_search_seconds":0.00038832053542137146,"evaluations":537.1875,"distances_sum":1553.8532287232927}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7990000000000002, speedup = 1.7189440828370848, eval_ratio = 0.052873)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
