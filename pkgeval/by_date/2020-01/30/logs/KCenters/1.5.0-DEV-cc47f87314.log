Julia Version 1.5.0-DEV.199
Commit cc47f87314 (2020-01-29 16:52 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed InvertedIndices ───────────── v1.0.0
 Installed Tables ────────────────────── v0.2.11
 Installed LearnBase ─────────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.9
 Installed Parsers ───────────────────── v0.3.10
 Installed OrderedCollections ────────── v1.1.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed TableTraits ───────────────── v1.0.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed Reexport ──────────────────── v0.2.0
 Installed Missings ──────────────────── v0.4.3
 Installed DataValueInterfaces ───────── v1.0.0
 Installed DataFrames ────────────────── v0.20.0
 Installed JSON ──────────────────────── v0.21.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed MappedArrays ──────────────── v0.2.2
 Installed PooledArrays ──────────────── v0.5.3
 Installed Compat ────────────────────── v3.2.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed DataStructures ────────────── v0.17.9
 Installed MLDataUtils ───────────────── v0.5.0
 Installed MLLabelUtils ──────────────── v0.5.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_Vs1824/Project.toml`
 [no changes]
  Updating `/tmp/jl_Vs1824/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_Vs1824/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 135.38999999999993
[ Info: 82.55000000000007
[ Info: 39.02000000000001
[ Info: 27.75999999999999
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999839687118
[ Info: 75.7800011588304
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.7977060097429
inertia(cdnet.distances) = 24.307172244737867
inertia(crand.distances) = 19.923726794103942
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2509765625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2509765625,"f1":null,"seconds":4.131346940994263e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.0625,"distances_sum":605.7663115692758}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4248046875,"f1":null,"seconds":2.9709190130233765e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.90625,"distances_sum":1011.4111727938773}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4130859375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4130859375,"f1":null,"seconds":2.551823854446411e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.078125,"distances_sum":961.1539583296509}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4248046875,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.4248046875,"f1":null,"seconds":2.9709190130233765e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.90625,"distances_sum":1011.4111727938773}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.880592324342325,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7890625,"distances_sum":2106.8065794691347}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8787982850482858,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8125,"distances_sum":2075.8885676188315}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.796875,"f1":0.880592324342325,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7890625,"distances_sum":2106.8065794691347}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9674336080586086,"seconds":7.368624210357666e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9921875,"distances_sum":2642.8504597865995}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9104858682983691,"seconds":6.536021828651428e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9765625,"distances_sum":2258.30650073018}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646062271062273,"seconds":6.988644599914551e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.984375,"distances_sum":2591.3054241158766}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9646062271062273,"seconds":6.763264536857605e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.984375,"distances_sum":2623.687303607839}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670215201465207,"seconds":6.671994924545288e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9765625,"distances_sum":2645.376152980253}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9443681318681322,"seconds":6.662681698799133e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9765625,"distances_sum":2474.560447408857}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.962780448717949,"seconds":6.92903995513916e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9921875,"distances_sum":2591.3500724765863}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9674336080586086,"seconds":7.368624210357666e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9921875,"distances_sum":2642.8504597865995}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9674336080586086,"seconds":7.368624210357666e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9921875,"distances_sum":2642.8504597865995}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.70703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.70703125,"f1":0.8178014693639702,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.3046875,"distances_sum":1645.2570019161697}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5361328125,"f1":null,"seconds":5.04031777381897e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.4453125,"distances_sum":1192.9514622075458}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1728515625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1728515625,"f1":null,"seconds":3.7178397178649902e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":5.34375,"distances_sum":424.00729610882456}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.70703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.70703125,"f1":0.8178014693639702,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.3046875,"distances_sum":1645.2570019161697}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8932525807525813,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.75,"distances_sum":2034.414256873283}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.868353001165502,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.609375,"distances_sum":1901.4375992300343}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8193359375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.8193359375,"f1":0.8932525807525813,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.75,"distances_sum":2034.414256873283}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9276385073260079,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8828125,"distances_sum":2209.022244165207}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9183569902319909,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.78125,"distances_sum":2126.2439587628846}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.912940705128206,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.765625,"distances_sum":2086.293426299692}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9544127747252753,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.859375,"distances_sum":2417.5909464350266}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9272435897435907,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.7578125,"distances_sum":2222.5951839403647}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9544127747252753,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.859375,"distances_sum":2417.5909464350266}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9544127747252753,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.859375,"distances_sum":2417.5909464350266}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":4.239380359649658e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.109375,"distances_sum":950.9610515251896}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":5,"bsize":4}, perf: {"precision":null,"recall":0.6630859375,"f1":null,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.0390625,"distances_sum":1483.3893330247367}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":5,"bsize":4},"perf":{"precision":null,"recall":0.6630859375,"f1":null,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.0390625,"distances_sum":1483.3893330247367}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9376030219780226,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.921875,"distances_sum":2227.430922181301}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8473708583083592,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.5078125,"distances_sum":1752.8644251049823}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.8174034299034308,"seconds":4.680827260017395e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.2578125,"distances_sum":1626.8579087852754}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9376030219780226,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.921875,"distances_sum":2227.430922181301}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9421531593406599,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.890625,"distances_sum":2302.680558806254}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9571485805860811,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.921875,"distances_sum":2380.96442838597}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9571485805860811,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.921875,"distances_sum":2380.96442838597}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9571485805860811,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.921875,"distances_sum":2380.96442838597}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.14453125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.14453125,"f1":null,"seconds":2.557411789894104e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":4.2421875,"distances_sum":383.9058910611907}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.62890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.62890625,"f1":0.7592943514818522,"seconds":4.474073648452759e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.546875,"distances_sum":1526.9245614791535}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.515625,"f1":0.6626380563880567,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.78125,"distances_sum":1276.2514064066768}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.62890625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.62890625,"f1":0.7592943514818522,"seconds":4.474073648452759e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.546875,"distances_sum":1526.9245614791535}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":null,"recall":0.7802734375,"f1":null,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.5,"distances_sum":1956.0802457239151}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8984265734265741,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.5703125,"distances_sum":2117.031981036674}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.861968240093241,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.578125,"distances_sum":1868.2230576981713}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.8984265734265741,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.5703125,"distances_sum":2117.031981036674}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9438332500832508,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.75,"distances_sum":2403.125921934672}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9569768772893776,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.75,"distances_sum":2496.6132334553868}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.924926115551116,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.6484375,"distances_sum":2307.2860010443264}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9528960622710626,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8671875,"distances_sum":2457.3572141339064}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9569768772893776,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.75,"distances_sum":2496.6132334553868}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9569768772893776,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.75,"distances_sum":2496.6132334553868}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7827601218226228,"seconds":4.425644874572754e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.6484375,"distances_sum":1548.371993101259}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6611328125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6611328125,"f1":0.7827601218226228,"seconds":4.425644874572754e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.6484375,"distances_sum":1548.371993101259}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.910588890276391,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.6953125,"distances_sum":2116.318200792208}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84765625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.84765625,"f1":0.910588890276391,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.6953125,"distances_sum":2116.318200792208}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9462282509157514,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.78125,"distances_sum":2360.8593433292376}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9448202838827843,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.765625,"distances_sum":2342.926453755584}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9462282509157514,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.78125,"distances_sum":2360.8593433292376}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9052734375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9462282509157514,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.78125,"distances_sum":2360.8593433292376}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.07522714138031e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":6.5859375,"distances_sum":503.56034409202687}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2177734375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2177734375,"f1":null,"seconds":3.21120023727417e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":6.3984375,"distances_sum":484.9415123806552}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8675803363303373,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.5,"distances_sum":1825.8355758295445}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8675803363303373,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.5,"distances_sum":1825.8355758295445}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8711658133533141,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.4375,"distances_sum":1839.1408519129184}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9199893856143863,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.546875,"distances_sum":2127.0134735871884}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8756446678321685,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.53125,"distances_sum":1862.0827628984648}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.859375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.859375,"f1":0.9199893856143863,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.546875,"distances_sum":2127.0134735871884}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620936355311359,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.9453125,"distances_sum":2378.597642330985}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9410058691308697,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.890625,"distances_sum":2245.2534490301027}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9530162545787554,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.9296875,"distances_sum":2327.212393551578}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9411172161172165,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.9140625,"distances_sum":2256.954886299134}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620936355311359,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.9453125,"distances_sum":2378.597642330985}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620936355311359,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.9453125,"distances_sum":2378.597642330985}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.16796875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.16796875,"f1":null,"seconds":3.205612301826477e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.375,"distances_sum":426.77468662973797}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5927734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5927734375,"f1":null,"seconds":4.53554093837738e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.8125,"distances_sum":1391.6035182081973}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5927734375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5927734375,"f1":null,"seconds":4.53554093837738e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.8125,"distances_sum":1391.6035182081973}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.70703125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.70703125,"f1":0.8183821386946396,"seconds":4.779547452926636e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.1953125,"distances_sum":1699.9173165371042}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8545085123210132,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.703125,"distances_sum":1852.3582692345587}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8545085123210132,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.703125,"distances_sum":1852.3582692345587}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8637945387945395,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.765625,"distances_sum":1895.2142321105816}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9626717032967037,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9375,"distances_sum":2480.550048723672}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8782316641691651,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8046875,"distances_sum":1942.5011210759262}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8739557317682327,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.796875,"distances_sum":1933.220556166349}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8640151515151524,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7421875,"distances_sum":1904.0351872931765}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9626717032967037,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9375,"distances_sum":2480.550048723672}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9626717032967037,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9375,"distances_sum":2480.550048723672}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7886030636030644,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.7578125,"distances_sum":1572.3504168934553}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.7886030636030644,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.7578125,"distances_sum":1572.3504168934553}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8600888694638703,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2421875,"distances_sum":1835.4952443707234}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9482059607059612,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.734375,"distances_sum":2340.3786037490954}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9482059607059612,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.734375,"distances_sum":2340.3786037490954}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9706101190476196,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.921875,"distances_sum":2432.0859063860557}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9706101190476196,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.921875,"distances_sum":2432.0859063860557}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9706101190476196,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.921875,"distances_sum":2432.0859063860557}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.3984375,"distances_sum":435.8050403185599}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8537925616050623,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.0078125,"distances_sum":1715.1056920005683}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.6923729048729055,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.25,"distances_sum":1088.0978476422665}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8537925616050623,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.0078125,"distances_sum":1715.1056920005683}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9576293498168503,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8515625,"distances_sum":2352.4979570700807}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9197490009990016,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.609375,"distances_sum":2055.3622452923664}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9189336704961713,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.71875,"distances_sum":2114.000728979801}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9576293498168503,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8515625,"distances_sum":2352.4979570700807}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672847985347989,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8671875,"distances_sum":2430.031643713535}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591918498168504,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8671875,"distances_sum":2342.017175412269}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9647722069597071,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.90625,"distances_sum":2386.6402582094897}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596955128205135,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.84375,"distances_sum":2359.7149391090124}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672847985347989,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8671875,"distances_sum":2430.031643713535}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672847985347989,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8671875,"distances_sum":2430.031643713535}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2470703125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2470703125,"f1":null,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":6.4609375,"distances_sum":502.2654526578423}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7168277902652909,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":7.90625,"distances_sum":1117.995743755598}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.576171875,"f1":0.7168277902652909,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":7.90625,"distances_sum":1117.995743755598}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8043766996892004,"seconds":4.626810550689697e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.1171875,"distances_sum":1443.6564032639028}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.8043766996892004,"seconds":4.626810550689697e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.1171875,"distances_sum":1443.6564032639028}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9116758241758249,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.703125,"distances_sum":2002.122810899733}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9570398351648357,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.921875,"distances_sum":2325.340043595475}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.875083770396271,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.3203125,"distances_sum":1786.5367046045283}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9570398351648357,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.921875,"distances_sum":2325.340043595475}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9570398351648357,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.921875,"distances_sum":2325.340043595475}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8406000249750257,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":7.9609375,"distances_sum":1656.1417952721126}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1904296875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1904296875,"f1":null,"seconds":3.0063092708587646e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":4.8828125,"distances_sum":413.17182099958666}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.181640625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.181640625,"f1":null,"seconds":2.983957529067993e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":4.75,"distances_sum":390.9695222373058}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5400390625,"f1":0.6839514652014658,"seconds":4.062429070472717e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":6.7109375,"distances_sum":1146.418307502348}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7373046875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7373046875,"f1":0.8406000249750257,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":7.9609375,"distances_sum":1656.1417952721126}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9438129578754585,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.6953125,"distances_sum":2233.241753806448}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9498028013653018,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.703125,"distances_sum":2294.242836193607}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9498028013653018,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.703125,"distances_sum":2294.242836193607}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763793498168499,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.9375,"distances_sum":2413.1081582191514}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9592261904761911,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.8515625,"distances_sum":2312.3920353298804}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9572744963369967,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.796875,"distances_sum":2322.458943636405}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9510702838827844,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.7265625,"distances_sum":2287.2258302528003}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763793498168499,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.9375,"distances_sum":2413.1081582191514}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763793498168499,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.9375,"distances_sum":2413.1081582191514}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7912394896769903,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.5390625,"distances_sum":1460.3127234020724}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8755447677322685,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.15625,"distances_sum":1774.9157190703356}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3798828125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3798828125,"f1":null,"seconds":3.9245933294296265e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":5.796875,"distances_sum":780.4155116751488}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8755447677322685,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.15625,"distances_sum":1774.9157190703356}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.903308150183151,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.3359375,"distances_sum":1962.1556255855528}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9551911630036638,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.8125,"distances_sum":2290.259436161164}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9551911630036638,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.8125,"distances_sum":2290.259436161164}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9819196428571431,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.953125,"distances_sum":2461.803003610122}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696085164835169,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.859375,"distances_sum":2393.155351848885}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9744276556776561,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.8984375,"distances_sum":2414.3173000906045}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9591575091575097,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.7890625,"distances_sum":2332.2114580605903}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819196428571431,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.953125,"distances_sum":2461.803003610122}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819196428571431,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.953125,"distances_sum":2461.803003610122}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8118948759573766,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":7.9609375,"distances_sum":1416.3950237285767}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.193359375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.193359375,"f1":null,"seconds":3.293156623840332e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":5.3515625,"distances_sum":384.9698466396229}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3515625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3515625,"f1":null,"seconds":3.730878233909607e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":5.921875,"distances_sum":743.449125148545}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8654085497835504,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.2265625,"distances_sum":1720.9599769371978}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8654085497835504,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.2265625,"distances_sum":1720.9599769371978}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9048935439560447,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.5859375,"distances_sum":1910.6344395678527}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.908745941558442,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.5859375,"distances_sum":1949.6252926374407}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9194113178488182,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.5859375,"distances_sum":1988.155424838384}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9099301739926746,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.6328125,"distances_sum":1959.8654214212352}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.9194113178488182,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.5859375,"distances_sum":1988.155424838384}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9423108141858147,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.7109375,"distances_sum":2168.5968730796753}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9400443306693312,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.7109375,"distances_sum":2148.4590300694977}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684008699633706,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.84375,"distances_sum":2337.2955422773175}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9617387820512823,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.859375,"distances_sum":2283.5792937960446}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9722298534798537,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.859375,"distances_sum":2357.0030961196135}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.957692307692308,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.8203125,"distances_sum":2262.2252348893276}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9722298534798537,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.859375,"distances_sum":2357.0030961196135}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9722298534798537,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.859375,"distances_sum":2357.0030961196135}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8597220487845494,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.9921875,"distances_sum":1696.3657648701749}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8628527722277731,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.015625,"distances_sum":1701.4106764225521}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8628527722277731,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.015625,"distances_sum":1701.4106764225521}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9299965659340667,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.59375,"distances_sum":2079.6207031640874}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8792186979686988,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.1875,"distances_sum":1768.5783501487365}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.939480311355312,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.578125,"distances_sum":2193.6657025071554}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9474416208791215,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6640625,"distances_sum":2200.4924022008904}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9474416208791215,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6640625,"distances_sum":2200.4924022008904}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9560496794871798,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7734375,"distances_sum":2249.340207190013}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":8,"bsize":13}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9751488095238101,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8828125,"distances_sum":2381.828573762822}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9709649725274727,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8828125,"distances_sum":2349.7215511689537}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9632841117216122,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.78125,"distances_sum":2312.8726958079524}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9526499542124548,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.734375,"distances_sum":2227.0500436894376}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9677858599733604,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8046875,"distances_sum":2339.8593494456527}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":8,"bsize":13},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9751488095238101,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8828125,"distances_sum":2381.828573762822}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":8,"bsize":13},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9751488095238101,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8828125,"distances_sum":2381.828573762822}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3681640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3681640625,"f1":null,"seconds":3.7048012018203735e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.2890625,"distances_sum":794.8154088995565}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3681640625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3681640625,"f1":null,"seconds":3.7048012018203735e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.2890625,"distances_sum":794.8154088995565}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.53515625,"f1":0.6775713869463873,"seconds":4.250556230545044e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.5234375,"distances_sum":1235.3203531348465}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.53515625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.53515625,"f1":0.6775713869463873,"seconds":4.250556230545044e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.5234375,"distances_sum":1235.3203531348465}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7854671370296378,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.578125,"distances_sum":1604.0062893154088}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9206075174825185,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.5546875,"distances_sum":2263.7507965158134}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":2,"bsize":5}, perf: {"precision":null,"recall":0.7412109375,"f1":null,"seconds":5.038455128669739e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.8203125,"distances_sum":1836.7108662286944}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8623046875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9206075174825185,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.5546875,"distances_sum":2263.7507965158134}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8623046875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9206075174825185,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.5546875,"distances_sum":2263.7507965158134}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.392578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.392578125,"f1":null,"seconds":3.5390257835388184e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.7578125,"distances_sum":807.0451992827705}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8549481768231777,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.921875,"distances_sum":1749.9080754101842}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8549481768231777,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.921875,"distances_sum":1749.9080754101842}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9320257867132873,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.7734375,"distances_sum":2197.3130383202647}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9643658424908427,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.875,"distances_sum":2431.9328945444154}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9643658424908427,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.875,"distances_sum":2431.9328945444154}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.972453067765568,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9453125,"distances_sum":2483.5013494515006}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.972453067765568,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9453125,"distances_sum":2483.5013494515006}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.972453067765568,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9453125,"distances_sum":2483.5013494515006}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.19921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.19921875,"f1":null,"seconds":3.1031668186187744e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":4.5703125,"distances_sum":510.75151146920956}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.19921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.19921875,"f1":null,"seconds":3.1031668186187744e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":4.5703125,"distances_sum":510.75151146920956}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3037109375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.3037109375,"f1":null,"seconds":3.378838300704956e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.53125,"distances_sum":716.7286416396993}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3037109375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.3037109375,"f1":null,"seconds":3.378838300704956e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.53125,"distances_sum":716.7286416396993}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.3037109375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.3037109375,"f1":null,"seconds":3.378838300704956e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.53125,"distances_sum":716.7286416396993}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4267578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4267578125,"f1":0.5692538364413366,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":5.8671875,"distances_sum":984.6761841678546}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2783203125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2783203125,"f1":null,"seconds":3.2298266887664795e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":5.4375,"distances_sum":741.4922948855356}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4267578125,"state":{"ssize":1,"bsize":2},"perf":{"precision":1.0,"recall":0.4267578125,"f1":0.5692538364413366,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":5.8671875,"distances_sum":984.6761841678546}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8436860014985021,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.875,"distances_sum":1886.3988607492852}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9019147519147527,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.3671875,"distances_sum":2187.8408218213476}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6396484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6396484375,"f1":0.7682664557664565,"seconds":4.688277840614319e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.328125,"distances_sum":1545.1838064090898}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5302734375, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.5302734375,"f1":0.6789706820956826,"seconds":4.680827260017395e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":6.4140625,"distances_sum":1255.6652607326837}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.9019147519147527,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.3671875,"distances_sum":2187.8408218213476}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9416385697635702,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.7578125,"distances_sum":2563.197891305445}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9345524267399273,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.828125,"distances_sum":2429.225937942805}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9285662254412261,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.78125,"distances_sum":2393.0014037416086}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9416385697635702,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.7578125,"distances_sum":2563.197891305445}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.900390625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9416385697635702,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.7578125,"distances_sum":2563.197891305445}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7838463619713627,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.5546875,"distances_sum":1614.4011395770979}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7822170884670893,"seconds":4.773959517478943e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.4765625,"distances_sum":1552.297278409599}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.521484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.521484375,"f1":0.6674539002664006,"seconds":4.308298230171204e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.6875,"distances_sum":1276.216720342531}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6591796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6591796875,"f1":0.7838463619713627,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.5546875,"distances_sum":1614.4011395770979}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8559235902985911,"seconds":7.973983883857727e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.203125,"distances_sum":1970.6294056105698}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.93086652930403,"seconds":6.4782798290252686e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6875,"distances_sum":2505.1116843614377}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9261707042957049,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.703125,"distances_sum":2437.808286176537}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.93086652930403,"seconds":6.4782798290252686e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6875,"distances_sum":2505.1116843614377}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.96229967948718,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8515625,"distances_sum":2681.9226858496645}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9755208333333336,"seconds":6.9588422775268555e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2762.609798025195}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964159798534799,"seconds":6.342306733131409e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.90625,"distances_sum":2704.3447561278804}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9434211621711629,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7109375,"distances_sum":2571.703612041118}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9755208333333336,"seconds":6.9588422775268555e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2762.609798025195}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9755208333333336,"seconds":6.9588422775268555e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2762.609798025195}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.333984375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.333984375,"f1":null,"seconds":3.7960708141326904e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.4140625,"distances_sum":827.9270307796228}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8500457875457883,"seconds":1.0084360837936401e-5,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.1875,"distances_sum":1972.8236750565513}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.75,"f1":0.8500457875457883,"seconds":1.0084360837936401e-5,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.1875,"distances_sum":1972.8236750565513}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9487293956043962,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8515625,"distances_sum":2568.0100445315957}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9487293956043962,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8515625,"distances_sum":2568.0100445315957}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9796875000000003,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":9.0,"distances_sum":2792.953511942256}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9540979853479858,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8984375,"distances_sum":2612.1863989753638}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635645604395607,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.9453125,"distances_sum":2668.0924468843664}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9796875000000003,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":9.0,"distances_sum":2792.953511942256}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9796875000000003,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":9.0,"distances_sum":2792.953511942256}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6416015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6416015625,"f1":0.7728698384948394,"seconds":4.3548643589019775e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.3046875,"distances_sum":1665.8521123941514}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5615234375,"f1":0.7038811882561888,"seconds":3.9692968130111694e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":6.6171875,"distances_sum":1460.280372753598}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6416015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6416015625,"f1":0.7728698384948394,"seconds":4.3548643589019775e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.3046875,"distances_sum":1665.8521123941514}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8402852355977364,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.828125,"distances_sum":2034.6690768770038}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9277446511821521,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.640625,"distances_sum":2642.789626769598}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9587282509157513,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8515625,"distances_sum":2857.271677040872}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9309440559440565,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.6796875,"distances_sum":2594.249444844897}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7777233183483191,"seconds":4.326924681663513e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.34375,"distances_sum":1739.2899167061041}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9587282509157513,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8515625,"distances_sum":2857.271677040872}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9792410714285716,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.96875,"distances_sum":3027.6985833464087}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9697265625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9697265625,"f1":0.9834649725274728,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.96875,"distances_sum":3068.01850943574}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9697265625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9834649725274728,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.96875,"distances_sum":3068.01850943574}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9697265625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9834649725274728,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.96875,"distances_sum":3068.01850943574}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7879727910977918,"seconds":4.867091774940491e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.5234375,"distances_sum":1690.6718775015152}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8715867465867475,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.1796875,"distances_sum":2155.101778828974}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3974609375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3974609375,"f1":null,"seconds":3.7159770727157593e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":5.65625,"distances_sum":1035.9782277534548}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8715867465867475,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.1796875,"distances_sum":2155.101778828974}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8827646312021321,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.4453125,"distances_sum":2234.7258119511457}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9170704295704304,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.7109375,"distances_sum":2480.4144074009523}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9462485431235437,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8203125,"distances_sum":2662.149112526706}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9308124167499175,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.84375,"distances_sum":2490.702875982766}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9462485431235437,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8203125,"distances_sum":2662.149112526706}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9502861721611726,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.7265625,"distances_sum":2732.3644690188676}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9738667582417584,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.9609375,"distances_sum":2853.130965504131}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9729395604395608,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.921875,"distances_sum":2858.672457679172}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9719150641025646,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8671875,"distances_sum":2885.913144327132}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9486320970695977,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.75,"distances_sum":2712.0920980377628}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9738667582417584,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.9609375,"distances_sum":2853.130965504131}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9738667582417584,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.9609375,"distances_sum":2853.130965504131}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6873015873015876,"seconds":3.825873136520386e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.765625,"distances_sum":1411.6320680924623}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.55078125,"f1":0.6873015873015876,"seconds":3.825873136520386e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.765625,"distances_sum":1411.6320680924623}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8573296495171503,"seconds":4.53554093837738e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.8515625,"distances_sum":2015.2733566169704}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8573296495171503,"seconds":4.53554093837738e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.8515625,"distances_sum":2015.2733566169704}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9540808150183155,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2721.5939235331143}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9540808150183155,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2721.5939235331143}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9540808150183155,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2721.5939235331143}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.501953125, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.501953125,"f1":null,"seconds":3.827735781669617e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.2265625,"distances_sum":1218.5758170270788}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8465777278277287,"seconds":4.526227712631226e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.7578125,"distances_sum":2032.3767087614624}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8465777278277287,"seconds":4.526227712631226e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.7578125,"distances_sum":2032.3767087614624}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8934154387279395,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.1875,"distances_sum":2226.988829448825}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9621336996337001,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8359375,"distances_sum":2798.4766843246857}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9220040376290385,"seconds":4.945322871208191e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.65625,"distances_sum":2457.5274378392533}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9621336996337001,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8359375,"distances_sum":2798.4766843246857}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":7,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9810840201465203,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":9.0,"distances_sum":2895.8020797736276}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9667467948717952,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.9140625,"distances_sum":2790.402012920932}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9765625000000002,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.96875,"distances_sum":2866.2642427627447}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714289,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.96875,"distances_sum":2830.6093868588378}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9709077380952381,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.9375,"distances_sum":2835.41148660067}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9651442307692312,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8828125,"distances_sum":2779.867112822667}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9810840201465203,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":9.0,"distances_sum":2895.8020797736276}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9810840201465203,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":9.0,"distances_sum":2895.8020797736276}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7841325341325349,"seconds":4.22261655330658e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":7.5234375,"distances_sum":1651.8092551183524}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.56640625,"f1":0.7065998237873246,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":6.796875,"distances_sum":1410.2393509929427}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66015625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.66015625,"f1":0.7841325341325349,"seconds":4.22261655330658e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":7.5234375,"distances_sum":1651.8092551183524}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8564565642690651,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.0703125,"distances_sum":2015.7339388367322}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9263163919413928,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.8203125,"distances_sum":2426.133773343266}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9548992673992679,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.9140625,"distances_sum":2649.430574817217}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.952721757409258,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.90625,"distances_sum":2645.284098677807}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9303628663003671,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.84375,"distances_sum":2479.3336122947003}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8936729936729944,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.2734375,"distances_sum":2181.422432859664}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9548992673992679,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.9140625,"distances_sum":2649.430574817217}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9756353021978024,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.96875,"distances_sum":2834.453286498989}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9788347069597072,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.984375,"distances_sum":2840.8311054604615}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9700148809523812,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.984375,"distances_sum":2768.2291675029655}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9730483058608064,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.9375,"distances_sum":2798.745098683998}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9768429487179489,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":9.0,"distances_sum":2834.706861593004}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":11,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9745364010989015,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.984375,"distances_sum":2806.6979042648222}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9761733058608061,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.984375,"distances_sum":2840.3993465727885}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9690132783882787,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.96875,"distances_sum":2755.492752933497}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9788347069597072,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.984375,"distances_sum":2840.8311054604615}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9788347069597072,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.984375,"distances_sum":2840.8311054604615}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.3125,"f1":null,"seconds":3.520399332046509e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.578125,"distances_sum":878.9231543347065}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3095703125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.3095703125,"f1":null,"seconds":3.2670795917510986e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.5859375,"distances_sum":784.3802556245009}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3125,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.3125,"f1":null,"seconds":3.520399332046509e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.578125,"distances_sum":878.9231543347065}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.68510551948052,"seconds":4.4405460357666016e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.7578125,"distances_sum":1397.924166454281}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8388465700965708,"seconds":4.8782676458358765e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.8515625,"distances_sum":2003.2706989898427}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8589877136752145,"seconds":4.854053258895874e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.921875,"distances_sum":2030.4291793815592}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8589877136752145,"seconds":4.854053258895874e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.921875,"distances_sum":2030.4291793815592}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9080560064935073,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.640625,"distances_sum":2405.6502710466507}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9286229395604403,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.765625,"distances_sum":2556.695980929383}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8653641497391504,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.1015625,"distances_sum":2114.9427990949584}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9186157592407596,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.734375,"distances_sum":2461.1866361603675}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8945658508158515,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.5078125,"distances_sum":2305.2877011254777}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9286229395604403,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.765625,"distances_sum":2556.695980929383}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8759765625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9286229395604403,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.765625,"distances_sum":2556.695980929383}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8443343115218123,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.0234375,"distances_sum":1860.2666456111538}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.740234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.740234375,"f1":0.8443343115218123,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.0234375,"distances_sum":1860.2666456111538}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.740234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.740234375,"f1":0.8443343115218123,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.0234375,"distances_sum":1860.2666456111538}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.740234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.740234375,"f1":0.8443343115218123,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.0234375,"distances_sum":1860.2666456111538}}, n: 9
inertia(cfft.distances) = 18.797705905205902
inertia(cdnet.distances) = 26.288629581306846
inertia(crand.distances) = 19.05656157135719
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9333333333333332
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9088888888888889
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8822222222222221
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9288888888888889
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9377777777777778
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.88
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9222222222222222
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8666666666666666
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.94
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8999999999999999
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8577777777777778
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9222222222222222
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8755555555555556
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 2, 3, 3, 1, 1, 3, 3, 2, 3, 3, 2, 3, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 8: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 12, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 2, 3, 1, 1, 3, 3, 2, 2, 3]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.34166667231149517] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34166667231149517, 0.17079571909213662] ***
*** starting iteration: 2; err: [Inf, 0.34166667231149517, 0.17079571909213662] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246] ***
*** starting iteration: 3; err: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246, 0.15777054515221403] ***
*** starting iteration: 4; err: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246, 0.15777054515221403] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246, 0.15777054515221403, 0.1565695013397027] ***
*** starting iteration: 5; err: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246, 0.15777054515221403, 0.1565695013397027] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246, 0.15777054515221403, 0.1565695013397027, 0.1565695013397027] ***
*** finished computation of 12 references, err: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246, 0.15777054515221403, 0.1565695013397027, 0.1565695013397027] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
acc = 0.9333333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 2.3513000259629666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3513000259629666, 0.9655885777035427] ***
*** finished computation of 3 references, err: [Inf, 2.3513000259629666, 0.9655885777035427] ***
*** center 1: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 36]]
** centroid: 2, normalized-entropy: 0.9986359641585719, [(2, 33), (3, 36)]
*** center 3: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6284999792394785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6284999792394785, 0.9487887055997993] ***
*** finished computation of 3 references, err: [Inf, 1.6284999792394785, 0.9487887055997993] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [23, 2, 0]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(1, 23), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 33]]
** centroid: 2, normalized-entropy: 0.9992954443621548, [(2, 31), (3, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.788299967000224] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.788299967000224, 1.6116492079636897] ***
*** finished computation of 3 references, err: [Inf, 6.788299967000224, 1.6116492079636897] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 31]]
** centroid: 1, normalized-entropy: 0.32984607020714635, [(2, 2), (3, 31)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 11, 0]]
** centroid: 2, normalized-entropy: 0.7935912300117066, [(1, 35), (2, 11)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6957503569455349] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6957503569455349, 0.6325555276170278] ***
*** starting iteration: 2; err: [Inf, 0.6957503569455349, 0.6325555276170278] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6957503569455349, 0.6325555276170278, 0.6245389063299095] ***
*** starting iteration: 3; err: [Inf, 0.6957503569455349, 0.6325555276170278, 0.6245389063299095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6957503569455349, 0.6325555276170278, 0.6245389063299095, 0.6200059105591041] ***
*** finished computation of 3 references, err: [Inf, 0.6957503569455349, 0.6325555276170278, 0.6245389063299095, 0.6200059105591041] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 36]]
** centroid: 1, normalized-entropy: 0.9986359641585719, [(2, 33), (3, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4873793173623814] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4873793173623814, 0.37040978743423464] ***
*** starting iteration: 2; err: [Inf, 0.4873793173623814, 0.37040978743423464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4873793173623814, 0.37040978743423464, 0.3674676110783823] ***
*** starting iteration: 3; err: [Inf, 0.4873793173623814, 0.37040978743423464, 0.3674676110783823] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4873793173623814, 0.37040978743423464, 0.3674676110783823, 0.3669016320371006] ***
*** finished computation of 3 references, err: [Inf, 0.4873793173623814, 0.37040978743423464, 0.3674676110783823, 0.3669016320371006] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 11]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.097816171280582] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.097816171280582, 1.329893007469015] ***
*** starting iteration: 2; err: [Inf, 5.097816171280582, 1.329893007469015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.097816171280582, 1.329893007469015, 0.8876865992948404] ***
*** starting iteration: 3; err: [Inf, 5.097816171280582, 1.329893007469015, 0.8876865992948404] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.097816171280582, 1.329893007469015, 0.8876865992948404, 0.7276853569041545] ***
*** finished computation of 3 references, err: [Inf, 5.097816171280582, 1.329893007469015, 0.8876865992948404, 0.7276853569041545] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [35, 3, 0]]
** centroid: 1, normalized-entropy: 0.39845927409523557, [(1, 35), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 26, 13]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 26), (3, 13)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 18]]
** centroid: 3, normalized-entropy: 0.7553754125614286, [(2, 5), (3, 18)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3846000071230434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3846000071230434, 0.28046356588124455] ***
*** finished computation of 7 references, err: [Inf, 0.3846000071230434, 0.28046356588124455] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 12]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(2, 10), (3, 12)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9347999989038089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9347999989038089, 0.3789961521790488] ***
*** finished computation of 7 references, err: [Inf, 0.9347999989038089, 0.3789961521790488] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 2: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 29, 12]]
** centroid: 7, normalized-entropy: 0.8721617883411698, [(2, 29), (3, 12)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48820000232314625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48820000232314625, 0.3104402115228556] ***
*** finished computation of 7 references, err: [Inf, 0.48820000232314625, 0.3104402115228556] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 2, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 9, 5]]
** centroid: 5, normalized-entropy: 0.940285958670631, [(2, 9), (3, 5)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2409416989606892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2409416989606892, 0.19722615668900847] ***
*** finished computation of 7 references, err: [Inf, 0.2409416989606892, 0.19722615668900847] ***
*** center 1: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 24, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 9, 16]]
** centroid: 6, normalized-entropy: 0.9426831892554921, [(2, 9), (3, 16)]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39643395984469054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39643395984469054, 0.19807210950070087] ***
*** finished computation of 7 references, err: [Inf, 0.39643395984469054, 0.19807210950070087] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 5, 13]]
** centroid: 5, normalized-entropy: 0.8524051786494784, [(2, 5), (3, 13)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3947294397108122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3947294397108122, 0.2597017889131796] ***
*** finished computation of 7 references, err: [Inf, 0.3947294397108122, 0.2597017889131796] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 22, 5]]
** centroid: 1, normalized-entropy: 0.6912898694057888, [(2, 22), (3, 5)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 15]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 4, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4777999900113576] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4777999900113576, 0.9506971259318386] ***
*** starting iteration: 2; err: [Inf, 1.4777999900113576, 0.9506971259318386] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4777999900113576, 0.9506971259318386, 0.9464115423885743] ***
*** starting iteration: 3; err: [Inf, 1.4777999900113576, 0.9506971259318386, 0.9464115423885743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4777999900113576, 0.9506971259318386, 0.9464115423885743, 0.9449481048373536] ***
*** finished computation of 3 references, err: [Inf, 1.4777999900113576, 0.9506971259318386, 0.9464115423885743, 0.9449481048373536] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 36]]
** centroid: 1, normalized-entropy: 0.9986359641585719, [(2, 33), (3, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1122999949833683] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1122999949833683, 0.8948299270144912] ***
*** starting iteration: 2; err: [Inf, 1.1122999949833683, 0.8948299270144912] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1122999949833683, 0.8948299270144912, 0.891149960963873] ***
*** starting iteration: 3; err: [Inf, 1.1122999949833683, 0.8948299270144912, 0.891149960963873] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1122999949833683, 0.8948299270144912, 0.891149960963873, 0.891149960963873] ***
*** finished computation of 3 references, err: [Inf, 1.1122999949833683, 0.8948299270144912, 0.891149960963873, 0.891149960963873] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 33]]
** centroid: 1, normalized-entropy: 0.998363672593813, [(2, 30), (3, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [21, 3, 0]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(1, 21), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3355000103637267] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3355000103637267, 0.6014868346737015] ***
*** starting iteration: 2; err: [Inf, 1.3355000103637267, 0.6014868346737015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3355000103637267, 0.6014868346737015, 0.5761665801506441] ***
*** starting iteration: 3; err: [Inf, 1.3355000103637267, 0.6014868346737015, 0.5761665801506441] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3355000103637267, 0.6014868346737015, 0.5761665801506441, 0.5749755211868743] ***
*** finished computation of 3 references, err: [Inf, 1.3355000103637267, 0.6014868346737015, 0.5761665801506441, 0.5749755211868743] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 6]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(2, 32), (3, 6)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6114999986242751] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6114999986242751, 0.2706252346898647] ***
*** starting iteration: 2; err: [Inf, 0.6114999986242751, 0.2706252346898647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6114999986242751, 0.2706252346898647, 0.25319347041566626] ***
*** starting iteration: 3; err: [Inf, 0.6114999986242751, 0.2706252346898647, 0.25319347041566626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6114999986242751, 0.2706252346898647, 0.25319347041566626, 0.24918362309101877] ***
*** starting iteration: 4; err: [Inf, 0.6114999986242751, 0.2706252346898647, 0.25319347041566626, 0.24918362309101877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6114999986242751, 0.2706252346898647, 0.25319347041566626, 0.24918362309101877, 0.2453710179042823] ***
*** starting iteration: 5; err: [Inf, 0.6114999986242751, 0.2706252346898647, 0.25319347041566626, 0.24918362309101877, 0.2453710179042823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6114999986242751, 0.2706252346898647, 0.25319347041566626, 0.24918362309101877, 0.2453710179042823, 0.24156672603537063] ***
*** starting iteration: 6; err: [Inf, 0.6114999986242751, 0.2706252346898647, 0.25319347041566626, 0.24918362309101877, 0.2453710179042823, 0.24156672603537063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6114999986242751, 0.2706252346898647, 0.25319347041566626, 0.24918362309101877, 0.2453710179042823, 0.24156672603537063, 0.23972170423273614] ***
*** starting iteration: 7; err: [Inf, 0.6114999986242751, 0.2706252346898647, 0.25319347041566626, 0.24918362309101877, 0.2453710179042823, 0.24156672603537063, 0.23972170423273614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6114999986242751, 0.2706252346898647, 0.25319347041566626, 0.24918362309101877, 0.2453710179042823, 0.24156672603537063, 0.23972170423273614, 0.2395743637550562] ***
*** finished computation of 7 references, err: [Inf, 0.6114999986242751, 0.2706252346898647, 0.25319347041566626, 0.24918362309101877, 0.2453710179042823, 0.24156672603537063, 0.23972170423273614, 0.2395743637550562] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 14]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 6), (3, 14)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5704000034383907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5704000034383907, 0.3374841600248132] ***
*** starting iteration: 2; err: [Inf, 0.5704000034383907, 0.3374841600248132] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5704000034383907, 0.3374841600248132, 0.31803343906010423] ***
*** starting iteration: 3; err: [Inf, 0.5704000034383907, 0.3374841600248132, 0.31803343906010423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5704000034383907, 0.3374841600248132, 0.31803343906010423, 0.30490146021462095] ***
*** starting iteration: 4; err: [Inf, 0.5704000034383907, 0.3374841600248132, 0.31803343906010423, 0.30490146021462095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5704000034383907, 0.3374841600248132, 0.31803343906010423, 0.30490146021462095, 0.2741391344176429] ***
*** starting iteration: 5; err: [Inf, 0.5704000034383907, 0.3374841600248132, 0.31803343906010423, 0.30490146021462095, 0.2741391344176429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5704000034383907, 0.3374841600248132, 0.31803343906010423, 0.30490146021462095, 0.2741391344176429, 0.2562790990789439] ***
*** starting iteration: 6; err: [Inf, 0.5704000034383907, 0.3374841600248132, 0.31803343906010423, 0.30490146021462095, 0.2741391344176429, 0.2562790990789439] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5704000034383907, 0.3374841600248132, 0.31803343906010423, 0.30490146021462095, 0.2741391344176429, 0.2562790990789439, 0.24689374203307676] ***
*** starting iteration: 7; err: [Inf, 0.5704000034383907, 0.3374841600248132, 0.31803343906010423, 0.30490146021462095, 0.2741391344176429, 0.2562790990789439, 0.24689374203307676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5704000034383907, 0.3374841600248132, 0.31803343906010423, 0.30490146021462095, 0.2741391344176429, 0.2562790990789439, 0.24689374203307676, 0.24603526837615888] ***
*** finished computation of 7 references, err: [Inf, 0.5704000034383907, 0.3374841600248132, 0.31803343906010423, 0.30490146021462095, 0.2741391344176429, 0.2562790990789439, 0.24689374203307676, 0.24603526837615888] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 19, 11]]
** centroid: 5, normalized-entropy: 0.9480782435939054, [(2, 19), (3, 11)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0203999885797028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0203999885797028, 0.5519303723539916] ***
*** starting iteration: 2; err: [Inf, 1.0203999885797028, 0.5519303723539916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647] ***
*** starting iteration: 3; err: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015] ***
*** starting iteration: 4; err: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015, 0.3807194764544033] ***
*** starting iteration: 5; err: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015, 0.3807194764544033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015, 0.3807194764544033, 0.3651735006372978] ***
*** starting iteration: 6; err: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015, 0.3807194764544033, 0.3651735006372978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015, 0.3807194764544033, 0.3651735006372978, 0.35255953300962956] ***
*** starting iteration: 7; err: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015, 0.3807194764544033, 0.3651735006372978, 0.35255953300962956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015, 0.3807194764544033, 0.3651735006372978, 0.35255953300962956, 0.34277696239916056] ***
*** starting iteration: 8; err: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015, 0.3807194764544033, 0.3651735006372978, 0.35255953300962956, 0.34277696239916056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015, 0.3807194764544033, 0.3651735006372978, 0.35255953300962956, 0.34277696239916056, 0.336172067625613] ***
*** starting iteration: 9; err: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015, 0.3807194764544033, 0.3651735006372978, 0.35255953300962956, 0.34277696239916056, 0.336172067625613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015, 0.3807194764544033, 0.3651735006372978, 0.35255953300962956, 0.34277696239916056, 0.336172067625613, 0.3328403335164662] ***
*** starting iteration: 10; err: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015, 0.3807194764544033, 0.3651735006372978, 0.35255953300962956, 0.34277696239916056, 0.336172067625613, 0.3328403335164662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015, 0.3807194764544033, 0.3651735006372978, 0.35255953300962956, 0.34277696239916056, 0.336172067625613, 0.3328403335164662, 0.33050076712986637] ***
*** finished computation of 7 references, err: [Inf, 1.0203999885797028, 0.5519303723539916, 0.48303281016975647, 0.4377407485371015, 0.3807194764544033, 0.3651735006372978, 0.35255953300962956, 0.34277696239916056, 0.336172067625613, 0.3328403335164662, 0.33050076712986637] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 11]]
** centroid: 4, normalized-entropy: 0.9828586897127057, [(2, 15), (3, 11)]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1060000188874026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1060000188874026, 0.9679908712824933] ***
*** starting iteration: 2; err: [Inf, 1.1060000188874026, 0.9679908712824933] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1060000188874026, 0.9679908712824933, 0.9492633611949127] ***
*** starting iteration: 3; err: [Inf, 1.1060000188874026, 0.9679908712824933, 0.9492633611949127] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1060000188874026, 0.9679908712824933, 0.9492633611949127, 0.9449547555693006] ***
*** starting iteration: 4; err: [Inf, 1.1060000188874026, 0.9679908712824933, 0.9492633611949127, 0.9449547555693006] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1060000188874026, 0.9679908712824933, 0.9492633611949127, 0.9449547555693006, 0.9448007643596735] ***
*** finished computation of 3 references, err: [Inf, 1.1060000188874026, 0.9679908712824933, 0.9492633611949127, 0.9449547555693006, 0.9448007643596735] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 36]]
** centroid: 1, normalized-entropy: 0.9986359641585719, [(2, 33), (3, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0871999982605804] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0871999982605804, 0.5637029760291477] ***
*** starting iteration: 2; err: [Inf, 1.0871999982605804, 0.5637029760291477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0871999982605804, 0.5637029760291477, 0.5514830606720271] ***
*** starting iteration: 3; err: [Inf, 1.0871999982605804, 0.5637029760291477, 0.5514830606720271] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0871999982605804, 0.5637029760291477, 0.5514830606720271, 0.5481262870422097] ***
*** starting iteration: 4; err: [Inf, 1.0871999982605804, 0.5637029760291477, 0.5514830606720271, 0.5481262870422097] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0871999982605804, 0.5637029760291477, 0.5514830606720271, 0.5481262870422097, 0.5387027946317915] ***
*** starting iteration: 5; err: [Inf, 1.0871999982605804, 0.5637029760291477, 0.5514830606720271, 0.5481262870422097, 0.5387027946317915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0871999982605804, 0.5637029760291477, 0.5514830606720271, 0.5481262870422097, 0.5387027946317915, 0.5351605455063942] ***
*** starting iteration: 6; err: [Inf, 1.0871999982605804, 0.5637029760291477, 0.5514830606720271, 0.5481262870422097, 0.5387027946317915, 0.5351605455063942] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0871999982605804, 0.5637029760291477, 0.5514830606720271, 0.5481262870422097, 0.5387027946317915, 0.5351605455063942, 0.5345852837248484] ***
*** finished computation of 3 references, err: [Inf, 1.0871999982605804, 0.5637029760291477, 0.5514830606720271, 0.5481262870422097, 0.5387027946317915, 0.5351605455063942, 0.5345852837248484] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 2, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.671199923024339] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.671199923024339, 1.0668441030520102] ***
*** starting iteration: 2; err: [Inf, 5.671199923024339, 1.0668441030520102] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.671199923024339, 1.0668441030520102, 0.607737819765353] ***
*** starting iteration: 3; err: [Inf, 5.671199923024339, 1.0668441030520102, 0.607737819765353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.671199923024339, 1.0668441030520102, 0.607737819765353, 0.5761665801506441] ***
*** starting iteration: 4; err: [Inf, 5.671199923024339, 1.0668441030520102, 0.607737819765353, 0.5761665801506441] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.671199923024339, 1.0668441030520102, 0.607737819765353, 0.5761665801506441, 0.5749755211868743] ***
*** starting iteration: 5; err: [Inf, 5.671199923024339, 1.0668441030520102, 0.607737819765353, 0.5761665801506441, 0.5749755211868743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.671199923024339, 1.0668441030520102, 0.607737819765353, 0.5761665801506441, 0.5749755211868743, 0.5739739297077275] ***
*** starting iteration: 6; err: [Inf, 5.671199923024339, 1.0668441030520102, 0.607737819765353, 0.5761665801506441, 0.5749755211868743, 0.5739739297077275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.671199923024339, 1.0668441030520102, 0.607737819765353, 0.5761665801506441, 0.5749755211868743, 0.5739739297077275, 0.5739739297077275] ***
*** finished computation of 3 references, err: [Inf, 5.671199923024339, 1.0668441030520102, 0.607737819765353, 0.5761665801506441, 0.5749755211868743, 0.5739739297077275, 0.5739739297077275] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 6]]
** centroid: 1, normalized-entropy: 0.6292492238560344, [(2, 32), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3970741240782539] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3970741240782539, 0.31788094519220383] ***
*** finished computation of 3 references, err: [Inf, 0.3970741240782539, 0.31788094519220383] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 31]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(2, 5), (3, 31)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 5]]
** centroid: 2, normalized-entropy: 0.6136190195993708, [(2, 28), (3, 5)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8215264958999895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8215264958999895, 0.5949661638336174] ***
*** finished computation of 3 references, err: [Inf, 0.8215264958999895, 0.5949661638336174] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 33]]
** centroid: 1, normalized-entropy: 0.998363672593813, [(2, 30), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [20, 3, 0]]
** centroid: 3, normalized-entropy: 0.5586293734521991, [(1, 20), (2, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8574626396164936] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8574626396164936, 0.4983630286414632] ***
*** finished computation of 3 references, err: [Inf, 0.8574626396164936, 0.4983630286414632] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [35, 1, 0]]
** centroid: 1, normalized-entropy: 0.18312206830137262, [(1, 35), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 17]]
** centroid: 2, normalized-entropy: 0.9248187049730301, [(2, 33), (3, 17)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6055000023495966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6055000023495966, 0.2464282350157957] ***
*** finished computation of 7 references, err: [Inf, 0.6055000023495966, 0.2464282350157957] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 14]]
** centroid: 3, normalized-entropy: 0.8314743880097292, [(2, 5), (3, 14)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5296000071015147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5296000071015147, 0.32328508591054117] ***
*** finished computation of 7 references, err: [Inf, 0.5296000071015147, 0.32328508591054117] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 9]]
** centroid: 1, normalized-entropy: 0.9980008838722993, [(2, 10), (3, 9)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 10, 2]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9307000155344547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9307000155344547, 0.4160725768957837] ***
*** finished computation of 7 references, err: [Inf, 0.9307000155344547, 0.4160725768957837] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 20, 6]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(2, 20), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 4: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5565999964347536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5565999964347536, 0.3598750842701361] ***
*** finished computation of 7 references, err: [Inf, 0.5565999964347536, 0.3598750842701361] ***
*** center 1: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 18, 11]]
** centroid: 3, normalized-entropy: 0.9575534837147484, [(2, 18), (3, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1782000009330709] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1782000009330709, 0.424728265774187] ***
*** finished computation of 7 references, err: [Inf, 1.1782000009330709, 0.424728265774187] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 24, 9]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 24), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 24]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6389000011766934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6389000011766934, 0.3293017519009534] ***
*** finished computation of 7 references, err: [Inf, 0.6389000011766934, 0.3293017519009534] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 10, 7]]
** centroid: 3, normalized-entropy: 0.9774178175281716, [(2, 10), (3, 7)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 8, 2]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0000999883226427] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0000999883226427, 0.5896900041468727] ***
*** finished computation of 3 references, err: [Inf, 1.0000999883226427, 0.5896900041468727] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 15]]
** centroid: 1, normalized-entropy: 0.8960382325345574, [(2, 33), (3, 15)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1351000022275495] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1351000022275495, 0.8603570558833994] ***
*** finished computation of 3 references, err: [Inf, 1.1351000022275495, 0.8603570558833994] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 33]]
** centroid: 1, normalized-entropy: 0.9969954265557693, [(2, 29), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [16, 4, 0]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(1, 16), (2, 4)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.839900020338556] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.839900020338556, 1.3360808339491257] ***
*** finished computation of 3 references, err: [Inf, 4.839900020338556, 1.3360808339491257] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [35, 9, 0]]
** centroid: 1, normalized-entropy: 0.7309263775906009, [(1, 35), (2, 9)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 23, 14]]
** centroid: 2, normalized-entropy: 0.9568886656798214, [(2, 23), (3, 14)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 17]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.24295868326212525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24295868326212525, 0.15910520525734617] ***
*** starting iteration: 2; err: [Inf, 0.24295868326212525, 0.15910520525734617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24295868326212525, 0.15910520525734617, 0.14411848228793084] ***
*** starting iteration: 3; err: [Inf, 0.24295868326212525, 0.15910520525734617, 0.14411848228793084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24295868326212525, 0.15910520525734617, 0.14411848228793084, 0.13743973746813395] ***
*** starting iteration: 4; err: [Inf, 0.24295868326212525, 0.15910520525734617, 0.14411848228793084, 0.13743973746813395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24295868326212525, 0.15910520525734617, 0.14411848228793084, 0.13743973746813395, 0.13701396409522718] ***
*** finished computation of 7 references, err: [Inf, 0.24295868326212525, 0.15910520525734617, 0.14411848228793084, 0.13743973746813395, 0.13701396409522718] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 10, 3]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 10), (3, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 4, 7]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5497339899992568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497339899992568, 0.3045381508438492] ***
*** starting iteration: 2; err: [Inf, 0.5497339899992568, 0.3045381508438492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682] ***
*** starting iteration: 3; err: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682, 0.22811249111081922] ***
*** starting iteration: 4; err: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682, 0.22811249111081922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682, 0.22811249111081922, 0.223910789066529] ***
*** starting iteration: 5; err: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682, 0.22811249111081922, 0.223910789066529] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682, 0.22811249111081922, 0.223910789066529, 0.2228175733358887] ***
*** starting iteration: 6; err: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682, 0.22811249111081922, 0.223910789066529, 0.2228175733358887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682, 0.22811249111081922, 0.223910789066529, 0.2228175733358887, 0.22097901937580042] ***
*** starting iteration: 7; err: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682, 0.22811249111081922, 0.223910789066529, 0.2228175733358887, 0.22097901937580042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682, 0.22811249111081922, 0.223910789066529, 0.2228175733358887, 0.22097901937580042, 0.2153643615738786] ***
*** starting iteration: 8; err: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682, 0.22811249111081922, 0.223910789066529, 0.2228175733358887, 0.22097901937580042, 0.2153643615738786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682, 0.22811249111081922, 0.223910789066529, 0.2228175733358887, 0.22097901937580042, 0.2153643615738786, 0.21293194064250687] ***
*** starting iteration: 9; err: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682, 0.22811249111081922, 0.223910789066529, 0.2228175733358887, 0.22097901937580042, 0.2153643615738786, 0.21293194064250687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682, 0.22811249111081922, 0.223910789066529, 0.2228175733358887, 0.22097901937580042, 0.2153643615738786, 0.21293194064250687, 0.21238086941635026] ***
*** finished computation of 7 references, err: [Inf, 0.5497339899992568, 0.3045381508438492, 0.23730217441287682, 0.22811249111081922, 0.223910789066529, 0.2228175733358887, 0.22097901937580042, 0.2153643615738786, 0.21293194064250687, 0.21238086941635026] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 19, 11]]
** centroid: 4, normalized-entropy: 0.9480782435939054, [(2, 19), (3, 11)]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5111705916532027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5111705916532027, 0.28345884444799857] ***
*** starting iteration: 2; err: [Inf, 0.5111705916532027, 0.28345884444799857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5111705916532027, 0.28345884444799857, 0.23068291863207413] ***
*** starting iteration: 3; err: [Inf, 0.5111705916532027, 0.28345884444799857, 0.23068291863207413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5111705916532027, 0.28345884444799857, 0.23068291863207413, 0.1928866499413086] ***
*** starting iteration: 4; err: [Inf, 0.5111705916532027, 0.28345884444799857, 0.23068291863207413, 0.1928866499413086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5111705916532027, 0.28345884444799857, 0.23068291863207413, 0.1928866499413086, 0.1799303052573106] ***
*** starting iteration: 5; err: [Inf, 0.5111705916532027, 0.28345884444799857, 0.23068291863207413, 0.1928866499413086, 0.1799303052573106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5111705916532027, 0.28345884444799857, 0.23068291863207413, 0.1928866499413086, 0.1799303052573106, 0.17855628344506588] ***
*** starting iteration: 6; err: [Inf, 0.5111705916532027, 0.28345884444799857, 0.23068291863207413, 0.1928866499413086, 0.1799303052573106, 0.17855628344506588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5111705916532027, 0.28345884444799857, 0.23068291863207413, 0.1928866499413086, 0.1799303052573106, 0.17855628344506588, 0.17855628344506588] ***
*** finished computation of 7 references, err: [Inf, 0.5111705916532027, 0.28345884444799857, 0.23068291863207413, 0.1928866499413086, 0.1799303052573106, 0.17855628344506588, 0.17855628344506588] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 15, 5]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34181735346208697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34181735346208697, 0.20635683644651104] ***
*** starting iteration: 2; err: [Inf, 0.34181735346208697, 0.20635683644651104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34181735346208697, 0.20635683644651104, 0.19901590520942303] ***
*** starting iteration: 3; err: [Inf, 0.34181735346208697, 0.20635683644651104, 0.19901590520942303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34181735346208697, 0.20635683644651104, 0.19901590520942303, 0.19768818814194958] ***
*** starting iteration: 4; err: [Inf, 0.34181735346208697, 0.20635683644651104, 0.19901590520942303, 0.19768818814194958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34181735346208697, 0.20635683644651104, 0.19901590520942303, 0.19768818814194958, 0.196946468913396] ***
*** finished computation of 7 references, err: [Inf, 0.34181735346208697, 0.20635683644651104, 0.19901590520942303, 0.19768818814194958, 0.196946468913396] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 7, 16]]
** centroid: 1, normalized-entropy: 0.8865408928220899, [(2, 7), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5701814432360922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5701814432360922, 0.32044039901759697] ***
*** starting iteration: 2; err: [Inf, 0.5701814432360922, 0.32044039901759697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904] ***
*** starting iteration: 3; err: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083] ***
*** starting iteration: 4; err: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083, 0.2338847609368263] ***
*** starting iteration: 5; err: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083, 0.2338847609368263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083, 0.2338847609368263, 0.22978213050401172] ***
*** starting iteration: 6; err: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083, 0.2338847609368263, 0.22978213050401172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083, 0.2338847609368263, 0.22978213050401172, 0.22643914608167232] ***
*** starting iteration: 7; err: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083, 0.2338847609368263, 0.22978213050401172, 0.22643914608167232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083, 0.2338847609368263, 0.22978213050401172, 0.22643914608167232, 0.22498438649784752] ***
*** starting iteration: 8; err: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083, 0.2338847609368263, 0.22978213050401172, 0.22643914608167232, 0.22498438649784752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083, 0.2338847609368263, 0.22978213050401172, 0.22643914608167232, 0.22498438649784752, 0.2230515131742375] ***
*** starting iteration: 9; err: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083, 0.2338847609368263, 0.22978213050401172, 0.22643914608167232, 0.22498438649784752, 0.2230515131742375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083, 0.2338847609368263, 0.22978213050401172, 0.22643914608167232, 0.22498438649784752, 0.2230515131742375, 0.21743685537231572] ***
*** starting iteration: 10; err: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083, 0.2338847609368263, 0.22978213050401172, 0.22643914608167232, 0.22498438649784752, 0.2230515131742375, 0.21743685537231572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083, 0.2338847609368263, 0.22978213050401172, 0.22643914608167232, 0.22498438649784752, 0.2230515131742375, 0.21743685537231572, 0.215004434440944] ***
*** finished computation of 7 references, err: [Inf, 0.5701814432360922, 0.32044039901759697, 0.28491916809620904, 0.25325632491826083, 0.2338847609368263, 0.22978213050401172, 0.22643914608167232, 0.22498438649784752, 0.2230515131742375, 0.21743685537231572, 0.215004434440944] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 19, 11]]
** centroid: 5, normalized-entropy: 0.9480782435939054, [(2, 19), (3, 11)]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3583951748057202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3583951748057202, 0.2058373527506077] ***
*** starting iteration: 2; err: [Inf, 0.3583951748057202, 0.2058373527506077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3583951748057202, 0.2058373527506077, 0.1870621754783638] ***
*** starting iteration: 3; err: [Inf, 0.3583951748057202, 0.2058373527506077, 0.1870621754783638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3583951748057202, 0.2058373527506077, 0.1870621754783638, 0.17821716913150637] ***
*** starting iteration: 4; err: [Inf, 0.3583951748057202, 0.2058373527506077, 0.1870621754783638, 0.17821716913150637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3583951748057202, 0.2058373527506077, 0.1870621754783638, 0.17821716913150637, 0.17170941307232618] ***
*** starting iteration: 5; err: [Inf, 0.3583951748057202, 0.2058373527506077, 0.1870621754783638, 0.17821716913150637, 0.17170941307232618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3583951748057202, 0.2058373527506077, 0.1870621754783638, 0.17821716913150637, 0.17170941307232618, 0.1715802930095763] ***
*** finished computation of 7 references, err: [Inf, 0.3583951748057202, 0.2058373527506077, 0.1870621754783638, 0.17821716913150637, 0.17170941307232618, 0.1715802930095763] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 5]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7165516223704076] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7165516223704076, 0.33998193993399206] ***
*** starting iteration: 2; err: [Inf, 0.7165516223704076, 0.33998193993399206] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7165516223704076, 0.33998193993399206, 0.323883499876697] ***
*** starting iteration: 3; err: [Inf, 0.7165516223704076, 0.33998193993399206, 0.323883499876697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7165516223704076, 0.33998193993399206, 0.323883499876697, 0.318953312964959] ***
*** finished computation of 3 references, err: [Inf, 0.7165516223704076, 0.33998193993399206, 0.323883499876697, 0.318953312964959] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 31]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(2, 5), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 5]]
** centroid: 3, normalized-entropy: 0.6136190195993708, [(2, 28), (3, 5)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.740091788063141] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.740091788063141, 0.40703008177374356] ***
*** starting iteration: 2; err: [Inf, 0.740091788063141, 0.40703008177374356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.740091788063141, 0.40703008177374356, 0.3761656907813649] ***
*** starting iteration: 3; err: [Inf, 0.740091788063141, 0.40703008177374356, 0.3761656907813649] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.740091788063141, 0.40703008177374356, 0.3761656907813649, 0.3674676110783823] ***
*** finished computation of 3 references, err: [Inf, 0.740091788063141, 0.40703008177374356, 0.3761656907813649, 0.3674676110783823] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 11]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6706060065573648] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6706060065573648, 0.41189666324570284] ***
*** starting iteration: 2; err: [Inf, 0.6706060065573648, 0.41189666324570284] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6706060065573648, 0.41189666324570284, 0.40974948344580925] ***
*** starting iteration: 3; err: [Inf, 0.6706060065573648, 0.41189666324570284, 0.40974948344580925] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6706060065573648, 0.41189666324570284, 0.40974948344580925, 0.4087369161714146] ***
*** finished computation of 3 references, err: [Inf, 0.6706060065573648, 0.41189666324570284, 0.40974948344580925, 0.4087369161714146] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 26]]
** centroid: 1, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 5]]
** centroid: 3, normalized-entropy: 0.581321498763703, [(2, 31), (3, 5)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1311000022467663] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1311000022467663, 0.4844030174623255] ***
*** starting iteration: 2; err: [Inf, 1.1311000022467663, 0.4844030174623255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1311000022467663, 0.4844030174623255, 0.4563190955404464] ***
*** starting iteration: 3; err: [Inf, 1.1311000022467663, 0.4844030174623255, 0.4563190955404464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1311000022467663, 0.4844030174623255, 0.4563190955404464, 0.4542126411603799] ***
*** starting iteration: 4; err: [Inf, 1.1311000022467663, 0.4844030174623255, 0.4563190955404464, 0.4542126411603799] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1311000022467663, 0.4844030174623255, 0.4563190955404464, 0.4542126411603799, 0.4542126411603799] ***
*** finished computation of 3 references, err: [Inf, 1.1311000022467663, 0.4844030174623255, 0.4563190955404464, 0.4542126411603799, 0.4542126411603799] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 1, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 3, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9400000007971195] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9400000007971195, 0.5936609886353575] ***
*** starting iteration: 2; err: [Inf, 0.9400000007971195, 0.5936609886353575] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9400000007971195, 0.5936609886353575, 0.5554323072117937] ***
*** starting iteration: 3; err: [Inf, 0.9400000007971195, 0.5936609886353575, 0.5554323072117937] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9400000007971195, 0.5936609886353575, 0.5554323072117937, 0.5380576177060503] ***
*** starting iteration: 4; err: [Inf, 0.9400000007971195, 0.5936609886353575, 0.5554323072117937, 0.5380576177060503] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9400000007971195, 0.5936609886353575, 0.5554323072117937, 0.5380576177060503, 0.537192541165923] ***
*** finished computation of 3 references, err: [Inf, 0.9400000007971195, 0.5936609886353575, 0.5554323072117937, 0.5380576177060503, 0.537192541165923] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 2, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 12]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 32), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5201000000405207] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5201000000405207, 0.5984116313720712] ***
*** starting iteration: 2; err: [Inf, 1.5201000000405207, 0.5984116313720712] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5201000000405207, 0.5984116313720712, 0.5778271677602227] ***
*** starting iteration: 3; err: [Inf, 1.5201000000405207, 0.5984116313720712, 0.5778271677602227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5201000000405207, 0.5984116313720712, 0.5778271677602227, 0.5749755211868743] ***
*** starting iteration: 4; err: [Inf, 1.5201000000405207, 0.5984116313720712, 0.5778271677602227, 0.5749755211868743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5201000000405207, 0.5984116313720712, 0.5778271677602227, 0.5749755211868743, 0.5739739297077275] ***
*** starting iteration: 5; err: [Inf, 1.5201000000405207, 0.5984116313720712, 0.5778271677602227, 0.5749755211868743, 0.5739739297077275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5201000000405207, 0.5984116313720712, 0.5778271677602227, 0.5749755211868743, 0.5739739297077275, 0.5739739297077275] ***
*** finished computation of 3 references, err: [Inf, 1.5201000000405207, 0.5984116313720712, 0.5778271677602227, 0.5749755211868743, 0.5739739297077275, 0.5739739297077275] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 6]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(2, 32), (3, 6)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41192310368156526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41192310368156526, 0.16034261177816347] ***
*** finished computation of 7 references, err: [Inf, 0.41192310368156526, 0.16034261177816347] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 9]]
** centroid: 4, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 5, 3]]
** centroid: 6, normalized-entropy: 0.954434002924965, [(2, 5), (3, 3)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3555262207474418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3555262207474418, 0.21168627692069963] ***
*** finished computation of 7 references, err: [Inf, 0.3555262207474418, 0.21168627692069963] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 26, 5]]
** centroid: 3, normalized-entropy: 0.6373874992221911, [(2, 26), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 21]]
** centroid: 4, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36338632448629954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36338632448629954, 0.21164702730202123] ***
*** finished computation of 7 references, err: [Inf, 0.36338632448629954, 0.21164702730202123] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 10, 3]]
** centroid: 4, normalized-entropy: 0.7793498372920851, [(2, 10), (3, 3)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 7, 12]]
** centroid: 5, normalized-entropy: 0.9494520153879484, [(2, 7), (3, 12)]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :rand, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 2.375963189263643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.375963189263643, 0.29984638775075184] ***
*** finished computation of 7 references, err: [Inf, 2.375963189263643, 0.29984638775075184] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 6, 1]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 1]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 6, 1]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 8]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6406877250244473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6406877250244473, 0.43402010595066853] ***
*** finished computation of 7 references, err: [Inf, 0.6406877250244473, 0.43402010595066853] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [11, 3, 0]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(1, 11), (2, 3)]
*** center 4: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7700015512273066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7700015512273066, 0.2562032767955042] ***
*** finished computation of 7 references, err: [Inf, 0.7700015512273066, 0.2562032767955042] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 3]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 8), (3, 3)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 15, 3]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 15), (3, 3)]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :rand, 0.3, 2) => 0.9733333333333333
finished with 19
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.3344667965257996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3344667965257996, 0.20682022411252826] ***
*** starting iteration: 2; err: [Inf, 0.3344667965257996, 0.20682022411252826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3344667965257996, 0.20682022411252826, 0.1896410990892888] ***
*** starting iteration: 3; err: [Inf, 0.3344667965257996, 0.20682022411252826, 0.1896410990892888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3344667965257996, 0.20682022411252826, 0.1896410990892888, 0.18361284670180006] ***
*** finished computation of 7 references, err: [Inf, 0.3344667965257996, 0.20682022411252826, 0.1896410990892888, 0.18361284670180006] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 8]]
** centroid: 2, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 8]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 8)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3573540023842379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3573540023842379, 0.19956815078434229] ***
*** starting iteration: 2; err: [Inf, 0.3573540023842379, 0.19956815078434229] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3573540023842379, 0.19956815078434229, 0.17501671633213853] ***
*** starting iteration: 3; err: [Inf, 0.3573540023842379, 0.19956815078434229, 0.17501671633213853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3573540023842379, 0.19956815078434229, 0.17501671633213853, 0.17310055010678022] ***
*** finished computation of 7 references, err: [Inf, 0.3573540023842379, 0.19956815078434229, 0.17501671633213853, 0.17310055010678022] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 19, 10]]
** centroid: 5, normalized-entropy: 0.9293636260137188, [(2, 19), (3, 10)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2800773923481556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2800773923481556, 0.23142356700658318] ***
*** starting iteration: 2; err: [Inf, 0.2800773923481556, 0.23142356700658318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2800773923481556, 0.23142356700658318, 0.21643314324432125] ***
*** starting iteration: 3; err: [Inf, 0.2800773923481556, 0.23142356700658318, 0.21643314324432125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2800773923481556, 0.23142356700658318, 0.21643314324432125, 0.20383512619552785] ***
*** finished computation of 7 references, err: [Inf, 0.2800773923481556, 0.23142356700658318, 0.21643314324432125, 0.20383512619552785] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 6]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5259999990633497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5259999990633497, 0.2728760354457842] ***
*** starting iteration: 2; err: [Inf, 0.5259999990633497, 0.2728760354457842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5259999990633497, 0.2728760354457842, 0.24723546385400572] ***
*** starting iteration: 3; err: [Inf, 0.5259999990633497, 0.2728760354457842, 0.24723546385400572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5259999990633497, 0.2728760354457842, 0.24723546385400572, 0.23892969806492406] ***
*** finished computation of 7 references, err: [Inf, 0.5259999990633497, 0.2728760354457842, 0.24723546385400572, 0.23892969806492406] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 10, 11]]
** centroid: 5, normalized-entropy: 0.998363672593813, [(2, 10), (3, 11)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.0941999826086843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.0941999826086843, 0.31507541329208144] ***
*** starting iteration: 2; err: [Inf, 2.0941999826086843, 0.31507541329208144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.0941999826086843, 0.31507541329208144, 0.26773634863787765] ***
*** starting iteration: 3; err: [Inf, 2.0941999826086843, 0.31507541329208144, 0.26773634863787765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.0941999826086843, 0.31507541329208144, 0.26773634863787765, 0.264702261705694] ***
*** finished computation of 7 references, err: [Inf, 2.0941999826086843, 0.31507541329208144, 0.26773634863787765, 0.264702261705694] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 7, 2]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 7), (3, 2)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 11]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 5: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8586000064443433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8586000064443433, 0.5269173638202749] ***
*** starting iteration: 2; err: [Inf, 0.8586000064443433, 0.5269173638202749] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8586000064443433, 0.5269173638202749, 0.47715206113351355] ***
*** starting iteration: 3; err: [Inf, 0.8586000064443433, 0.5269173638202749, 0.47715206113351355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8586000064443433, 0.5269173638202749, 0.47715206113351355, 0.4566532210604556] ***
*** finished computation of 7 references, err: [Inf, 0.8586000064443433, 0.5269173638202749, 0.47715206113351355, 0.4566532210604556] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 7]]
** centroid: 4, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :rand, 0.3, 2) => 0.9733333333333333
finished with 19
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :rand, 0.3, 2) => 0.9733333333333333
finished with 21
iteration 5 finished
*** starting iteration: 1; err: [Inf, 1.8588990465696436] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8588990465696436, 0.3439824165513332] ***
*** starting iteration: 2; err: [Inf, 1.8588990465696436, 0.3439824165513332] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8588990465696436, 0.3439824165513332, 0.3157534646149976] ***
*** starting iteration: 3; err: [Inf, 1.8588990465696436, 0.3439824165513332, 0.3157534646149976] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8588990465696436, 0.3439824165513332, 0.3157534646149976, 0.3157534646149976] ***
*** finished computation of 3 references, err: [Inf, 1.8588990465696436, 0.3439824165513332, 0.3157534646149976, 0.3157534646149976] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 11]]
** centroid: 3, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8228864234342614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8228864234342614, 0.5969630475629714] ***
*** starting iteration: 2; err: [Inf, 0.8228864234342614, 0.5969630475629714] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8228864234342614, 0.5969630475629714, 0.5863130695867332] ***
*** starting iteration: 3; err: [Inf, 0.8228864234342614, 0.5969630475629714, 0.5863130695867332] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8228864234342614, 0.5969630475629714, 0.5863130695867332, 0.5800848757577413] ***
*** finished computation of 3 references, err: [Inf, 0.8228864234342614, 0.5969630475629714, 0.5863130695867332, 0.5800848757577413] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [17, 3, 0]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(1, 17), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 33]]
** centroid: 2, normalized-entropy: 0.998363672593813, [(2, 30), (3, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7285187142135041] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7285187142135041, 0.4307771658802489] ***
*** starting iteration: 2; err: [Inf, 0.7285187142135041, 0.4307771658802489] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7285187142135041, 0.4307771658802489, 0.4228463286515817] ***
*** starting iteration: 3; err: [Inf, 0.7285187142135041, 0.4307771658802489, 0.4228463286515817] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7285187142135041, 0.4307771658802489, 0.4228463286515817, 0.42093909270797736] ***
*** finished computation of 3 references, err: [Inf, 0.7285187142135041, 0.4307771658802489, 0.4228463286515817, 0.42093909270797736] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 9, 30]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 9), (3, 30)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5472000039731022] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5472000039731022, 0.4565703325141709] ***
*** starting iteration: 2; err: [Inf, 0.5472000039731022, 0.4565703325141709] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5472000039731022, 0.4565703325141709, 0.4539113649349524] ***
*** starting iteration: 3; err: [Inf, 0.5472000039731022, 0.4565703325141709, 0.4539113649349524] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5472000039731022, 0.4565703325141709, 0.4539113649349524, 0.4539113649349524] ***
*** finished computation of 3 references, err: [Inf, 0.5472000039731022, 0.4565703325141709, 0.4539113649349524, 0.4539113649349524] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 11]]
** centroid: 3, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.030800001174831] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.030800001174831, 1.735043003337429] ***
*** starting iteration: 2; err: [Inf, 5.030800001174831, 1.735043003337429] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.030800001174831, 1.735043003337429, 0.6270439136349761] ***
*** starting iteration: 3; err: [Inf, 5.030800001174831, 1.735043003337429, 0.6270439136349761] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.030800001174831, 1.735043003337429, 0.6270439136349761, 0.5513120693271458] ***
*** finished computation of 3 references, err: [Inf, 5.030800001174831, 1.735043003337429, 0.6270439136349761, 0.5513120693271458] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 22]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 11]]
** centroid: 3, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.458100001667223] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.458100001667223, 1.0876154254392487] ***
*** starting iteration: 2; err: [Inf, 2.458100001667223, 1.0876154254392487] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.458100001667223, 1.0876154254392487, 0.991945733138914] ***
*** starting iteration: 3; err: [Inf, 2.458100001667223, 1.0876154254392487, 0.991945733138914] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.458100001667223, 1.0876154254392487, 0.991945733138914, 0.7460087993910683] ***
*** finished computation of 3 references, err: [Inf, 2.458100001667223, 1.0876154254392487, 0.991945733138914, 0.7460087993910683] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 18, 30]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(2, 18), (3, 30)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :rand, 0.3, 2) => 0.9733333333333333
finished with 22
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.27231923975716754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27231923975716754, 0.1568655539858792] ***
*** finished computation of 7 references, err: [Inf, 0.27231923975716754, 0.1568655539858792] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 7]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 5]]
** centroid: 5, normalized-entropy: 0.954434002924965, [(2, 3), (3, 5)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5608213079405077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5608213079405077, 0.25386215560366376] ***
*** finished computation of 7 references, err: [Inf, 0.5608213079405077, 0.25386215560366376] ***
*** center 1: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 12, 22]]
** centroid: 5, normalized-entropy: 0.9366673818775627, [(2, 12), (3, 22)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2845718105047262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2845718105047262, 0.20592932852656368] ***
*** finished computation of 7 references, err: [Inf, 0.2845718105047262, 0.20592932852656368] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 13]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 1) => 0.9733333333333333
finished with 24
iteration 7 finished
*** starting iteration: 1; err: [Inf, 1.6637000252907495] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6637000252907495, 0.6803041035842929] ***
*** finished computation of 3 references, err: [Inf, 1.6637000252907495, 0.6803041035842929] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 23]]
** centroid: 1, normalized-entropy: 0.9768740126265281, [(2, 33), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.9453000463381682] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9453000463381682, 0.9024646359789932] ***
*** finished computation of 3 references, err: [Inf, 1.9453000463381682, 0.9024646359789932] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [13, 2, 0]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(1, 13), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 33]]
** centroid: 2, normalized-entropy: 0.9992954443621548, [(2, 31), (3, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6544999935870761] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6544999935870761, 1.0821929132741692] ***
*** finished computation of 3 references, err: [Inf, 1.6544999935870761, 1.0821929132741692] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [35, 3, 0]]
** centroid: 1, normalized-entropy: 0.39845927409523557, [(1, 35), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 25, 27]]
** centroid: 2, normalized-entropy: 0.9989326546260583, [(2, 25), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 4]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 6), (3, 4)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3947611850363852] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3947611850363852, 0.31788094519220383] ***
*** finished computation of 3 references, err: [Inf, 0.3947611850363852, 0.31788094519220383] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 31]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(2, 5), (3, 31)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 28, 5]]
** centroid: 2, normalized-entropy: 0.6136190195993708, [(2, 28), (3, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8936664088527501] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8936664088527501, 0.3971028086694861] ***
*** finished computation of 3 references, err: [Inf, 0.8936664088527501, 0.3971028086694861] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 31]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 8), (3, 31)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 25, 2]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 25), (3, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.916386725031995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.916386725031995, 1.927585564906086] ***
*** finished computation of 3 references, err: [Inf, 7.916386725031995, 1.927585564906086] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 28, 1]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(1, 35), (2, 28)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 28]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(2, 6), (3, 28)]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 24)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.94, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9066666666666666, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 1) => 0.9733333333333333
finished with 24
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 24)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.94, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9066666666666666, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 1) => 0.9733333333333333
finished with 24
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 1), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.7200000000000015, 3.033333333333333, 5.64, 2.1733333333333333], [6.250000000000001, 3.0, 4.635714285714286, 1.4785714285714284], [6.185714285714285, 2.8857142857142857, 4.942857142857142, 1.842857142857143], [5.615384615384614, 2.5076923076923077, 3.853846153846154, 1.1384615384615384], [5.4, 3.8600000000000003, 1.44, 0.30000000000000004], [5.733333333333334, 2.733333333333333, 4.5, 1.5], [5.5600000000000005, 2.66, 4.92, 2.0], [7.566666666666667, 3.1833333333333336, 6.366666666666667, 2.1166666666666667], [4.892307692307692, 3.2692307692307696, 1.465384615384615, 0.2192307692307693]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 2, 1, 2, 3, 3, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.449999999999999, 4.15, 1.425, 0.275], [4.937037037037038, 3.3407407407407415, 1.462962962962963, 0.22592592592592595], [7.118181818181818, 3.1454545454545464, 6.127272727272728, 2.2090909090909094], [5.400000000000001, 3.8333333333333335, 1.7666666666666666, 0.3666666666666667], [6.475000000000001, 3.0083333333333333, 4.683333333333334, 1.5083333333333335], [6.20909090909091, 2.8909090909090907, 5.218181818181817, 1.9363636363636365], [5.732, 2.812, 4.223999999999999, 1.4040000000000001], [5.7, 2.9, 4.2, 1.3]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 1, 3, 1, 2, 3, 2, 2], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.494117647058823, 2.676470588235294, 3.864705882352942, 1.2529411764705882], [5.242105263157895, 3.6999999999999997, 1.4789473684210526, 0.28421052631578947], [6.2142857142857135, 2.7142857142857144, 5.0, 1.6785714285714286], [6.714285714285714, 3.0, 4.585714285714286, 1.3857142857142857], [7.0, 3.076190476190476, 5.919047619047619, 2.057142857142857], [4.718750000000001, 3.0562499999999995, 1.4062499999999998, 0.21875000000000006], [5.8, 2.75, 4.45, 1.2999999999999998]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 3, 2, 3, 1, 2], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[55, 1, 17, 1, 3, 1, 5, 1, 9, 36, 19, 30, 20, 13, 1, 2, 28, 30, 1, 34, 42, 23, 1, 32, 20, 43, 34, 17, 14, 4, 1, 57, 18, 39, 28, 43, 19, 1, 31, 33, 3, 39, 40, 30, 28, 28, 33, 1, 41, 42, 33, 30, 17, 26, 66, 57, 2, 19, 46, 31, 5, 37, 23, 28, 32, 17, 28, 38, 37, 24, 28, 44, 23, 47, 34, 45, 50, 14, 38, 29, 42, 29, 28, 13, 33, 30, 45, 35, 29, 42, 28, 36, 38, 46, 55, 11, 23, 11, 30, 24, 39, 30, 27, 51, 29, 36, 45, 28, 54, 38, 24, 29, 24, 23, 43, 41, 51, 37, 22, 1, 25, 46, 33, 37, 1, 27, 29, 35, 49, 33, 33, 27, 32, 33, 44, 35, 27, 22, 44, 30, 29, 42, 50, 33, 32, 41, 26, 60, 44, 45, 25, 39, 32, 32, 33, 37, 45, 54, 37, 38, 32, 49, 46, 29, 100, 34, 30, 26, 21, 33, 32, 40, 30, 68, 39, 53, 45, 23, 45, 36, 48, 41, 20, 54, 43, 42, 23, 38, 24, 31, 30, 23, 25, 45, 41, 52, 53, 41, 38, 45, 32, 11, 19, 20, 31, 33, 37, 49, 22, 31, 38, 30, 44, 27, 39, 52, 20, 18, 68, 45, 47, 43, 27, 43, 41, 43, 24, 38, 54, 71, 36, 42, 25, 30, 30, 39, 40, 48, 30, 46, 35, 34, 33, 25, 38, 32, 16, 27, 15, 45, 32, 38, 40, 53, 33, 26, 59, 34, 49, 49, 42, 33, 49, 61, 38, 38, 29, 44, 62, 43, 25, 34, 26, 34, 45, 65, 22, 42, 36, 44, 27, 21, 38, 58, 18, 49, 24, 46, 38, 49, 7, 46, 32, 60, 51, 22, 19, 21, 37, 25]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.607, speedup = 0.4250375706686387, eval_ratio = 0.041915)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3732638888888891,"recall":0.3732638888888891,"f1":null,"seconds":4.233606159687042e-5,"exhaustive_search_seconds":0.00026752986013889313,"evaluations":340.578125,"distances_sum":1719.911752329439}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5529513888888887,"recall":0.5529513888888887,"f1":null,"seconds":9.765848517417908e-5,"exhaustive_search_seconds":0.00026752986013889313,"evaluations":380.7734375,"distances_sum":1604.3371414700177}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6597222222222218,"recall":0.6597222222222218,"f1":null,"seconds":9.156949818134308e-5,"exhaustive_search_seconds":0.00026752986013889313,"evaluations":422.0546875,"distances_sum":1559.6629467506025}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7326388888888886,"recall":0.7326388888888886,"f1":0.7326388888888886,"seconds":0.00010391883552074432,"exhaustive_search_seconds":0.00026752986013889313,"evaluations":461.328125,"distances_sum":1535.4116723439931}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7838541666666662,"recall":0.7838541666666662,"f1":0.7838541666666662,"seconds":0.00012430734932422638,"exhaustive_search_seconds":0.00026752986013889313,"evaluations":502.109375,"distances_sum":1520.6032842069676}
KCenters.DeloneInvIndex> reached performance {"precision":0.8246527777777768,"recall":0.8246527777777768,"f1":0.8246527777777768,"seconds":0.00018494948744773865,"exhaustive_search_seconds":0.00026752986013889313,"evaluations":541.0546875,"distances_sum":1510.0163755432386}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.809, speedup = 2.2702065648441607, eval_ratio = 0.053745)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
