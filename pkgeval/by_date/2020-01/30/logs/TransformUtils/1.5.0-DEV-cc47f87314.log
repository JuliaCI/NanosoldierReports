Julia Version 1.5.0-DEV.199
Commit cc47f87314 (2020-01-29 16:52 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_zvTJRL/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_zvTJRL/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_zvTJRL/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.07457513493509797 -0.001838355256965082; 0.07457513493509797 0.0 0.026211960085680188; 0.001838355256965082 -0.026211960085680188 0.0])
dAA = so3([0.0 -0.04801467314885089 -0.1028018455710022; 0.04801467314885089 0.0 -0.03692534261281888; 0.1028018455710022 0.03692534261281888 0.0])
dAA = so3([0.0 -0.056914992860837434 -0.12111464555459157; 0.056914992860837434 0.0 -0.11495800955032671; 0.12111464555459157 0.11495800955032671 0.0])
dAA = Quaternion(0.998807360420843, [0.030162612988522013, -0.020310496065114956, -0.0325815484046086])
dAA = SO3([0.9746959282719865 -0.010592383031431637 -0.22328378542054114; 0.032333746501629755 0.9950525314910161 0.09394140945551578; 0.2211840325321409 -0.09878391060813478 0.9702161422888125])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.960067340767348 -0.13003918121770414 -0.24771054184297867; 0.10648962607568462 0.9886194846216089 -0.1062613484046078; 0.2587096069537694 0.07563944721330047 0.9629891034145156]), [-0.26211960085680186, -0.01838355256965082, 0.7457513493509798])
xj = SE3(SO3([0.9816511821753262 0.15694554551919632 -0.10830074919162144; -0.17175280646533436 0.9744659512680108 -0.14462739467546334; 0.082836767229691 0.16057461057406533 0.9835414909570014]), [1.1495800955032671, -1.2111464555459157, 0.5691499286083743])
Dx = SE3(SO3([0.9455920153855603 0.29599100169428333 0.1350743030894081; -0.2911855596993539 0.9551127310691176 -0.05450358494874728; -0.1451437572258914 0.01220646819133453 0.9893352777863756]), [1.1826214137637967, -1.376122952898168, -0.39301354613031997])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
