Julia Version 1.5.0-DEV.133
Commit c9940ed95b (2020-01-21 18:51 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed MappedArrays ──────────────── v0.2.2
 Installed Missings ──────────────────── v0.4.3
 Installed KCenters ──────────────────── v0.1.9
 Installed Parsers ───────────────────── v0.3.10
 Installed OrderedCollections ────────── v1.1.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed StatsBase ─────────────────── v0.32.0
 Installed DataFrames ────────────────── v0.20.0
 Installed Reexport ──────────────────── v0.2.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed Tables ────────────────────── v0.2.11
 Installed JSON ──────────────────────── v0.21.0
 Installed TableTraits ───────────────── v1.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataStructures ────────────── v0.17.9
 Installed MLDataUtils ───────────────── v0.5.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataAPI ───────────────────── v1.1.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed Compat ────────────────────── v3.2.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_OVyjAU/Project.toml`
 [no changes]
  Updating `/tmp/jl_OVyjAU/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_OVyjAU/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 138.36999999999995
[ Info: 76.8500000000001
[ Info: 37.909999999999975
[ Info: 24.830000000000005
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999839687118
[ Info: 75.46000112136034
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.7977060097429
inertia(cdnet.distances) = 22.60833907025367
inertia(crand.distances) = 20.584114814057887
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8405547577422589,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.9921875,"distances_sum":2047.450526678927}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7745658855033862,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.4765625,"distances_sum":1817.0680103998077}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5361328125,"f1":0.6832486957486962,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":6.703125,"distances_sum":1488.4144997177928}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.740234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.740234375,"f1":0.8405547577422589,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.9921875,"distances_sum":2047.450526678927}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8865046411921418,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.453125,"distances_sum":2318.8827707739815}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9373798076923084,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.7265625,"distances_sum":2662.464095733734}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9260416666666673,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.625,"distances_sum":2558.02417826822}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9373798076923084,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.7265625,"distances_sum":2662.464095733734}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.954527243589744,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.78125,"distances_sum":2784.85968579353}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9663175366300368,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8828125,"distances_sum":2851.4856739396428}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9663175366300368,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8828125,"distances_sum":2851.4856739396428}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9663175366300368,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8828125,"distances_sum":2851.4856739396428}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.59375,"f1":0.7287254412254418,"seconds":4.459172487258911e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.2734375,"distances_sum":1332.8054215772293}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5888671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5888671875,"f1":null,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.2421875,"distances_sum":1356.4700495839215}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.197265625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.197265625,"f1":null,"seconds":4.161149263381958e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":6.0859375,"distances_sum":462.15489907205995}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.59375,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.59375,"f1":0.7287254412254418,"seconds":4.459172487258911e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.2734375,"distances_sum":1332.8054215772293}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9247570138195145,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.8828125,"distances_sum":2282.094377541921}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9247570138195145,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.8828125,"distances_sum":2282.094377541921}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9624885531135536,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.9375,"distances_sum":2564.4641379274744}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.96073717948718,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.9296875,"distances_sum":2532.52577513996}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9659798534798538,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.984375,"distances_sum":2549.8230515851683}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659798534798538,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.984375,"distances_sum":2549.8230515851683}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659798534798538,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.984375,"distances_sum":2549.8230515851683}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.630859375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.630859375,"f1":0.759846230158731,"seconds":4.490837454795837e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.7109375,"distances_sum":1512.795177442918}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4150390625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4150390625,"f1":null,"seconds":3.769993782043457e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.7578125,"distances_sum":993.894594295332}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.630859375,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.630859375,"f1":0.759846230158731,"seconds":4.490837454795837e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.7109375,"distances_sum":1512.795177442918}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8728733072483079,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.484375,"distances_sum":1972.8137520656423}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8728733072483079,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.484375,"distances_sum":1972.8137520656423}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.958075778388279,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.859375,"distances_sum":2549.9029687633088}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.903082334332335,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.90625,"distances_sum":2142.6646354004047}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9297752594627601,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8359375,"distances_sum":2347.1076198605438}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.933585685148186,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8359375,"distances_sum":2365.7750316534275}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9011840589965598,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.84375,"distances_sum":2133.1881750179214}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.958075778388279,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.859375,"distances_sum":2549.9029687633088}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.958075778388279,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.859375,"distances_sum":2549.9029687633088}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.619140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.619140625,"f1":0.7510817307692315,"seconds":4.6193599700927734e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.40625,"distances_sum":1481.0298455674415}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4853515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4853515625,"f1":0.639952408702409,"seconds":4.110857844352722e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.5546875,"distances_sum":1177.525062893253}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.619140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.619140625,"f1":0.7510817307692315,"seconds":4.6193599700927734e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.40625,"distances_sum":1481.0298455674415}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.943529907592408,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.7421875,"distances_sum":2352.2069130817813}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.943529907592408,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.7421875,"distances_sum":2352.2069130817813}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9647550366300373,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9296875,"distances_sum":2457.791883543676}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9647550366300373,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9296875,"distances_sum":2457.791883543676}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9647550366300373,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9296875,"distances_sum":2457.791883543676}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.979296875,"recall":0.7861328125,"f1":0.8645564071345326,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.25,"distances_sum":2202.263279008355}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4755859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":0.9597656250000001,"recall":0.4755859375,"f1":0.620311025779776,"seconds":4.235655069351196e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":6.953125,"distances_sum":1314.1353070183118}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4755859375, conf: {"ssize":2,"bsize":3}, perf: {"precision":0.9567708333333333,"recall":0.4755859375,"f1":null,"seconds":4.32133674621582e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":6.9921875,"distances_sum":1344.4840092367847}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":0.979296875,"recall":0.7861328125,"f1":0.8645564071345326,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.25,"distances_sum":2202.263279008355}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":4,"bsize":6}, perf: {"precision":0.9809802827380951,"recall":0.837890625,"f1":0.8968831298909429,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.484375,"distances_sum":2448.854085780206}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9816778273809526,"recall":0.8466796875,"f1":0.9018932890026643,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.5,"distances_sum":2472.3581869397694}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":0.9859561011904762,"recall":0.884765625,"f1":0.9287502861721616,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.59375,"distances_sum":2619.3290330246605}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":5,"bsize":7},"perf":{"precision":0.9859561011904762,"recall":0.884765625,"f1":0.9287502861721616,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.59375,"distances_sum":2619.3290330246605}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":10}, perf: {"precision":0.9850725446428572,"recall":0.92578125,"f1":0.9510008871336999,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.90625,"distances_sum":2815.2815456793937}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.9820498511904762,"recall":0.91796875,"f1":0.9467648237179489,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8984375,"distances_sum":2814.547204453231}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":5,"bsize":8}, perf: {"precision":0.9873418898809524,"recall":0.890625,"f1":0.9327144860347989,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.828125,"distances_sum":2672.7828066329007}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":0.987397693452381,"recall":0.9296875,"f1":0.9556297218406599,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.890625,"distances_sum":2868.225467518907}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":6,"bsize":9}, perf: {"precision":0.9839099702380952,"recall":0.90625,"f1":0.939630551739927,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.859375,"distances_sum":2716.8812844288655}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":0.987397693452381,"recall":0.9296875,"f1":0.9556297218406599,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.890625,"distances_sum":2868.225467518907}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":0.987397693452381,"recall":0.9296875,"f1":0.9556297218406599,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.890625,"distances_sum":2868.225467518907}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.22265625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.22265625,"f1":null,"seconds":3.209337592124939e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":5.75,"distances_sum":550.014830010496}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.22265625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.22265625,"f1":null,"seconds":3.209337592124939e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":5.75,"distances_sum":550.014830010496}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7143243908868916,"seconds":4.038214683532715e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.96875,"distances_sum":1219.939793929391}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5771484375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5771484375,"f1":0.7143243908868916,"seconds":4.038214683532715e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.96875,"distances_sum":1219.939793929391}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8505936771561781,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.765625,"distances_sum":1773.6180419445145}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8505936771561781,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.765625,"distances_sum":1773.6180419445145}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8626071844821854,"seconds":4.975125193595886e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.8828125,"distances_sum":1813.2340676197773}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8977506868131875,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.3046875,"distances_sum":2012.3261463073738}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.826171875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.826171875,"f1":0.8977506868131875,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.3046875,"distances_sum":2012.3261463073738}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.826171875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.826171875,"f1":0.8977506868131875,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.3046875,"distances_sum":2012.3261463073738}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.583984375,"f1":null,"seconds":4.211440682411194e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.1484375,"distances_sum":1366.4731718430355}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8179237429237438,"seconds":4.425644874572754e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.5703125,"distances_sum":1763.4395524243826}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7109375,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.7109375,"f1":0.8179237429237438,"seconds":4.425644874572754e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.5703125,"distances_sum":1763.4395524243826}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9298305860805869,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.5859375,"distances_sum":2399.411691800184}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9505666208791215,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.7578125,"distances_sum":2506.531056433115}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9280448717948725,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.4296875,"distances_sum":2393.3847816130005}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9505666208791215,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.7578125,"distances_sum":2506.531056433115}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9728651556776562,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8828125,"distances_sum":2698.0354842035995}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9705586080586083,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8359375,"distances_sum":2665.3820475266225}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9771577380952382,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8984375,"distances_sum":2717.8292459727445}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.961887591575092,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8515625,"distances_sum":2600.744822039353}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9673592032967037,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.859375,"distances_sum":2631.506963301302}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.952810210622711,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.7265625,"distances_sum":2541.019137599194}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9771577380952382,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8984375,"distances_sum":2717.8292459727445}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9771577380952382,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8984375,"distances_sum":2717.8292459727445}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2109375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2109375,"f1":null,"seconds":3.0007213354110718e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.1484375,"distances_sum":513.5570868152639}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8739130661005672,"seconds":5.057081580162048e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.9765625,"distances_sum":2034.1315021179144}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8739130661005672,"seconds":5.057081580162048e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.9765625,"distances_sum":2034.1315021179144}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8753007409257416,"seconds":5.00120222568512e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.0078125,"distances_sum":2045.3901604082992}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9005099067599074,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.15625,"distances_sum":2269.0629701125717}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9336314726939734,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6328125,"distances_sum":2482.8105782165876}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9336314726939734,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6328125,"distances_sum":2482.8105782165876}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9355571511821519,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4921875,"distances_sum":2462.8144460117865}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9795787545787548,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.921875,"distances_sum":2769.6433364952077}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.948108662171163,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6796875,"distances_sum":2598.70199918739}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9656822344322348,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.796875,"distances_sum":2673.5653090964915}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9795787545787548,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.921875,"distances_sum":2769.6433364952077}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9795787545787548,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.921875,"distances_sum":2769.6433364952077}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8723307942057951,"seconds":4.934147000312805e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.9453125,"distances_sum":1975.5693091946166}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2236328125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2236328125,"f1":null,"seconds":3.345310688018799e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.8046875,"distances_sum":537.1342678978025}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8723307942057951,"seconds":4.934147000312805e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.9453125,"distances_sum":1975.5693091946166}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8924715909090918,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.171875,"distances_sum":2053.7721526621876}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8173828125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8924715909090918,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.171875,"distances_sum":2053.7721526621876}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8173828125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8924715909090918,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.171875,"distances_sum":2053.7721526621876}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8173828125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8924715909090918,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.171875,"distances_sum":2053.7721526621876}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7045908952158959,"seconds":4.30084764957428e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.0625,"distances_sum":1294.5586586957081}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8697573260073269,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.0234375,"distances_sum":1907.129753037522}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8697573260073269,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.0234375,"distances_sum":1907.129753037522}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.955122481684982,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.84375,"distances_sum":2442.6223252847103}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9416723901098908,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.703125,"distances_sum":2366.4985327581808}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9098989552114559,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.546875,"distances_sum":2168.742826616453}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.955122481684982,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.84375,"distances_sum":2442.6223252847103}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9823660714285717,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.953125,"distances_sum":2653.19322892655}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9556433150183155,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.828125,"distances_sum":2455.8695694817993}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9823660714285717,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.953125,"distances_sum":2653.19322892655}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9823660714285717,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.953125,"distances_sum":2653.19322892655}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8714837246087254,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.0,"distances_sum":1943.1572814409496}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8748943764568771,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.8984375,"distances_sum":1922.6659115908742}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8748943764568771,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.8984375,"distances_sum":1922.6659115908742}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.950211767399268,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7421875,"distances_sum":2463.572327653462}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9167582417582424,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.3984375,"distances_sum":2208.1532126734874}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9371539918414924,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.4765625,"distances_sum":2324.2503113623416}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.960491071428572,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8359375,"distances_sum":2514.198706507826}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.960491071428572,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8359375,"distances_sum":2514.198706507826}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9650927197802204,"seconds":7.061474025249481e-5,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.859375,"distances_sum":2566.2051443983078}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9686755952380959,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8671875,"distances_sum":2587.91220123258}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9617044413919418,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.796875,"distances_sum":2558.5615529512284}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657967032967038,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8515625,"distances_sum":2571.429151549344}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9686755952380959,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8671875,"distances_sum":2587.91220123258}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9686755952380959,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8671875,"distances_sum":2587.91220123258}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.777093566156067,"seconds":4.507601261138916e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.3984375,"distances_sum":1560.0114786030472}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3681640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3681640625,"f1":null,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":5.6171875,"distances_sum":830.4751293574399}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.777093566156067,"seconds":4.507601261138916e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.3984375,"distances_sum":1560.0114786030472}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8625301781551792,"seconds":4.697591066360474e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.9296875,"distances_sum":1955.519198615157}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9049252830502837,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.359375,"distances_sum":2169.3454749653265}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8359375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8359375,"f1":0.9049252830502837,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.359375,"distances_sum":2169.3454749653265}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9493017399267407,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.6796875,"distances_sum":2485.575010393262}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9376602564102571,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.6328125,"distances_sum":2424.8837109839596}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596440018315023,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8203125,"distances_sum":2538.5939388277134}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9596440018315023,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8203125,"distances_sum":2538.5939388277134}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9596440018315023,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8203125,"distances_sum":2538.5939388277134}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8141793969918979,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.4765625,"distances_sum":1654.3078790930988}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2275390625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2275390625,"f1":null,"seconds":3.1348317861557007e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.7265625,"distances_sum":547.8592978942927}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.703125,"f1":0.8141793969918979,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.4765625,"distances_sum":1654.3078790930988}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8890281593406602,"seconds":4.937872290611267e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.1171875,"distances_sum":2008.573396554033}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8095703125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.8095703125,"f1":0.8890281593406602,"seconds":4.937872290611267e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.1171875,"distances_sum":2008.573396554033}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9496539918414925,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7578125,"distances_sum":2441.6344775237385}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9496539918414925,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7578125,"distances_sum":2441.6344775237385}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.912109375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9496539918414925,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7578125,"distances_sum":2441.6344775237385}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8702760780885789,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.03125,"distances_sum":1981.2514296313316}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.537109375,"f1":0.6830466408591414,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.34375,"distances_sum":1278.300524287143}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8758018023643033,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.9765625,"distances_sum":1979.8360565208488}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8758018023643033,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.9765625,"distances_sum":1979.8360565208488}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9425714910089916,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6484375,"distances_sum":2506.6467436402527}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9629292582417588,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8203125,"distances_sum":2576.275907320761}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9569081959706963,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.71875,"distances_sum":2574.7075429014867}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9319310897435903,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.390625,"distances_sum":2361.0887804347544}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9629292582417588,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8203125,"distances_sum":2576.275907320761}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417585,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.921875,"distances_sum":2702.1173864822117}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9633756868131871,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8046875,"distances_sum":2591.3992374842173}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417585,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.921875,"distances_sum":2702.1173864822117}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417585,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.921875,"distances_sum":2702.1173864822117}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.41015625,"f1":0.5635329947829948,"seconds":3.822147846221924e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.078125,"distances_sum":843.5198014643431}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8133373570873579,"seconds":4.6193599700927734e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.7109375,"distances_sum":1656.3427119736066}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.427734375,"f1":null,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.1328125,"distances_sum":921.9783667740473}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8834660131535139,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.1015625,"distances_sum":2048.562108554726}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8046875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.8046875,"f1":0.8834660131535139,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.1015625,"distances_sum":2048.562108554726}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9365613553113559,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.484375,"distances_sum":2279.0233726683364}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9390942390942395,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.609375,"distances_sum":2335.824957257307}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9166208791208801,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.40625,"distances_sum":2188.407777451915}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9181433150183156,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.3984375,"distances_sum":2197.115365558862}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8859437437562446,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.203125,"distances_sum":2046.32829482417}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9390942390942395,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.609375,"distances_sum":2335.824957257307}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9442937271062276,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.734375,"distances_sum":2363.3841829872176}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679716117216122,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8671875,"distances_sum":2533.159519249064}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9583161630036633,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8046875,"distances_sum":2466.710355223561}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9612580128205135,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8203125,"distances_sum":2487.9789266596304}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9679716117216122,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8671875,"distances_sum":2533.159519249064}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9679716117216122,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8671875,"distances_sum":2533.159519249064}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.6948081432456439,"seconds":4.088506102561951e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.9609375,"distances_sum":1276.679264445178}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.6749988794326782e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.078125,"distances_sum":963.266839400601}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.556640625,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.556640625,"f1":0.6948081432456439,"seconds":4.088506102561951e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.9609375,"distances_sum":1276.679264445178}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9276218573093579,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.5078125,"distances_sum":2306.7622460979587}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9276218573093579,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.5078125,"distances_sum":2306.7622460979587}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9667239010989016,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8828125,"distances_sum":2531.9609933012816}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.965794101731602,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.859375,"distances_sum":2549.1122884622796}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9520547161172167,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.765625,"distances_sum":2466.055622839463}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9667239010989016,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8828125,"distances_sum":2531.9609933012816}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9667239010989016,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8828125,"distances_sum":2531.9609933012816}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.1329691410064697e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":5.09375,"distances_sum":494.8212376813899}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8645489926739935,"seconds":5.057081580162048e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.3046875,"distances_sum":1699.787700336215}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":5.9375,"distances_sum":845.8541254530774}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8645489926739935,"seconds":5.057081580162048e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.3046875,"distances_sum":1699.787700336215}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8951694139194146,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.6171875,"distances_sum":1869.3587653441612}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.90340596903097,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.7265625,"distances_sum":1927.4118982725724}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8349609375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8349609375,"f1":0.90340596903097,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.7265625,"distances_sum":1927.4118982725724}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9673363095238099,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.921875,"distances_sum":2350.2578224398694}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9713942307692311,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.8828125,"distances_sum":2401.517520607368}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.954395604395605,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.78125,"distances_sum":2286.5419952743714}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9713942307692311,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.8828125,"distances_sum":2401.517520607368}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9713942307692311,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.8828125,"distances_sum":2401.517520607368}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7333984375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7333984375,"f1":0.8357241716616725,"seconds":4.881992936134338e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.765625,"distances_sum":1611.2229413449606}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.51953125,"f1":null,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.4765625,"distances_sum":990.8825183307431}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3623046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.3623046875,"f1":0.5113768176268173,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":5.453125,"distances_sum":735.558391142553}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7333984375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7333984375,"f1":0.8357241716616725,"seconds":4.881992936134338e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.765625,"distances_sum":1611.2229413449606}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8509093337218345,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.875,"distances_sum":1693.3093858728103}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8991050616050623,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.5,"distances_sum":1834.5108297449185}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9433608058608065,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.6953125,"distances_sum":2181.841871325918}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9310127372627378,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7265625,"distances_sum":2072.135348442339}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9084425990675999,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.5625,"distances_sum":1980.6311610149862}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9018575174825186,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.5,"distances_sum":1843.1598298859722}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9433608058608065,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.6953125,"distances_sum":2181.841871325918}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9576293498168504,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8046875,"distances_sum":2256.1840893876993}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9455242673992679,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7421875,"distances_sum":2176.4990695591373}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9640453296703302,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8828125,"distances_sum":2272.654741189846}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9695684523809528,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9140625,"distances_sum":2309.826799095191}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9537608225108228,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8046875,"distances_sum":2236.919227491551}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9695684523809528,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9140625,"distances_sum":2309.826799095191}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9695684523809528,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9140625,"distances_sum":2309.826799095191}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5,"f1":0.648890692640693,"seconds":3.807246685028076e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.2890625,"distances_sum":1009.9608548569767}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5,"f1":0.648890692640693,"seconds":3.807246685028076e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.2890625,"distances_sum":1009.9608548569767}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7177734375,"f1":0.8253647394272404,"seconds":4.809349775314331e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.6484375,"distances_sum":1615.338675225408}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7177734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7177734375,"f1":0.8253647394272404,"seconds":4.809349775314331e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.6484375,"distances_sum":1615.338675225408}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7197265625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7197265625,"f1":0.8250112734487742,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.546875,"distances_sum":1630.1043017431296}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.944476877289378,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7421875,"distances_sum":2271.111739352169}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9451121794871798,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7265625,"distances_sum":2256.844513455057}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9451121794871798,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7265625,"distances_sum":2256.844513455057}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9033203125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9451121794871798,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7265625,"distances_sum":2256.844513455057}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2041015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2041015625,"f1":null,"seconds":3.116205334663391e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.3203125,"distances_sum":416.1183943662578}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2041015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2041015625,"f1":null,"seconds":3.116205334663391e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.3203125,"distances_sum":416.1183943662578}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7808845668220677,"seconds":4.699453711509705e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.3984375,"distances_sum":1388.0317183101556}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7850925116550125,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.3515625,"distances_sum":1414.3069926806681}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.7850925116550125,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.3515625,"distances_sum":1414.3069926806681}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8460118006993016,"seconds":4.69014048576355e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.703125,"distances_sum":1639.1914420125834}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.919528388278389,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.625,"distances_sum":2062.5352746174867}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8603515625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8603515625,"f1":0.919528388278389,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.625,"distances_sum":2062.5352746174867}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9698317307692311,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":2406.167786527948}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9734031593406598,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.921875,"distances_sum":2429.1606399304314}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9641769688644692,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.875,"distances_sum":2401.822198674311}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.964159798534799,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8984375,"distances_sum":2361.7823459845617}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9313530219780226,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.6875,"distances_sum":2140.280985260804}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9641197344322346,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8828125,"distances_sum":2365.0853404004265}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734031593406598,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.921875,"distances_sum":2429.1606399304314}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734031593406598,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.921875,"distances_sum":2429.1606399304314}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.388671875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.388671875,"f1":null,"seconds":3.7029385566711426e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":5.703125,"distances_sum":714.9269800972365}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.546875,"f1":null,"seconds":3.939494490623474e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":6.4921875,"distances_sum":1072.2439347758268}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.546875,"state":{"ssize":4,"bsize":3},"perf":{"precision":null,"recall":0.546875,"f1":null,"seconds":3.939494490623474e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":6.4921875,"distances_sum":1072.2439347758268}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6318359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6318359375,"f1":0.7605049464424473,"seconds":4.386529326438904e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.1875,"distances_sum":1249.6806875563436}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6318359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6318359375,"f1":0.7605049464424473,"seconds":4.386529326438904e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.1875,"distances_sum":1249.6806875563436}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8943457584082595,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.3515625,"distances_sum":1854.5238784877724}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9308556027306032,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.609375,"distances_sum":2111.88292014735}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8929086538461547,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.40625,"distances_sum":1816.0156444711993}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6357421875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6357421875,"f1":0.7648580586080593,"seconds":4.7441571950912476e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.1796875,"distances_sum":1265.4108877933686}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8521322427572435,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.9375,"distances_sum":1600.8747373399556}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8885822510822519,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.3359375,"distances_sum":1827.1864153206777}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9308556027306032,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.609375,"distances_sum":2111.88292014735}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8818359375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9308556027306032,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.609375,"distances_sum":2111.88292014735}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2841796875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2841796875,"f1":null,"seconds":3.3583492040634155e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.0546875,"distances_sum":592.7197085007997}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.451171875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.451171875,"f1":null,"seconds":3.762543201446533e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":5.9375,"distances_sum":832.472251808203}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":4,"bsize":4}, perf: {"precision":null,"recall":0.6689453125,"f1":null,"seconds":4.265457391738892e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.1953125,"distances_sum":1361.157353372192}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8511977605727613,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.03125,"distances_sum":1612.1557841000351}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8511977605727613,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.03125,"distances_sum":1612.1557841000351}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9539897602397607,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.765625,"distances_sum":2282.630042735581}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9539897602397607,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.765625,"distances_sum":2282.630042735581}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9734375000000004,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9296875,"distances_sum":2359.69631816551}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9734375000000004,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9296875,"distances_sum":2359.69631816551}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9734375000000004,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9296875,"distances_sum":2359.69631816551}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8598942723942732,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.828125,"distances_sum":1647.326794923844}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8598942723942732,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.828125,"distances_sum":1647.326794923844}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8598942723942732,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.828125,"distances_sum":1647.326794923844}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8598942723942732,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.828125,"distances_sum":1647.326794923844}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2666015625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2666015625,"f1":null,"seconds":3.4105032682418823e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.265625,"distances_sum":561.0150423411726}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5888671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5888671875,"f1":0.7275948010323017,"seconds":3.973022103309631e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.8046875,"distances_sum":1173.3691208507641}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5888671875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5888671875,"f1":0.7275948010323017,"seconds":3.973022103309631e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.8046875,"distances_sum":1173.3691208507641}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8511082667332676,"seconds":4.889443516731262e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.859375,"distances_sum":1686.950272470499}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9309841200466208,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.65625,"distances_sum":2145.413393823669}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9309841200466208,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.65625,"distances_sum":2145.413393823669}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9578182234432239,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8515625,"distances_sum":2330.7771098206167}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9578182234432239,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8515625,"distances_sum":2330.7771098206167}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9578182234432239,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8515625,"distances_sum":2330.7771098206167}}, n: 9
inertia(cfft.distances) = 20.298100997821876
inertia(cdnet.distances) = 23.080939033189043
inertia(crand.distances) = 20.831767464561583
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333332
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.94
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9133333333333332
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.92
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9155555555555556
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9266666666666666
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8644444444444445
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9066666666666667
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 2, 3, 1, 3, 1, 3, 3, 2, 3, 3, 2, 3, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 5, 1]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 5), (3, 1)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 2, 3, 3, 2, 3, 3, 2, 3, 1, 2]
acc = 0.9333333333333333
*** starting iteration: 1; err: [Inf, 0.32026667054136965] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.32026667054136965, 0.17962505115734853] ***
*** starting iteration: 2; err: [Inf, 0.32026667054136965, 0.17962505115734853] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.32026667054136965, 0.17962505115734853, 0.1684111028042586] ***
*** starting iteration: 3; err: [Inf, 0.32026667054136965, 0.17962505115734853, 0.1684111028042586] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.32026667054136965, 0.17962505115734853, 0.1684111028042586, 0.16232504067444925] ***
*** starting iteration: 4; err: [Inf, 0.32026667054136965, 0.17962505115734853, 0.1684111028042586, 0.16232504067444925] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.32026667054136965, 0.17962505115734853, 0.1684111028042586, 0.16232504067444925, 0.1605922694149112] ***
*** starting iteration: 5; err: [Inf, 0.32026667054136965, 0.17962505115734853, 0.1684111028042586, 0.16232504067444925, 0.1605922694149112] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.32026667054136965, 0.17962505115734853, 0.1684111028042586, 0.16232504067444925, 0.1605922694149112, 0.16022654751503704] ***
*** finished computation of 12 references, err: [Inf, 0.32026667054136965, 0.17962505115734853, 0.1684111028042586, 0.16232504067444925, 0.1605922694149112, 0.16022654751503704] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 11, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
finished with 15 centroids; started with 12
acc = 0.9666666666666667
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.0572804587937201] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0572804587937201, 0.652944007358502] ***
*** starting iteration: 2; err: [Inf, 1.0572804587937201, 0.652944007358502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0572804587937201, 0.652944007358502, 0.5735505711110265] ***
*** starting iteration: 3; err: [Inf, 1.0572804587937201, 0.652944007358502, 0.5735505711110265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0572804587937201, 0.652944007358502, 0.5735505711110265, 0.42715535233812907] ***
*** finished computation of 7 references, err: [Inf, 1.0572804587937201, 0.652944007358502, 0.5735505711110265, 0.42715535233812907] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 32]]
** centroid: 1, normalized-entropy: 0.9426831892554921, [(2, 18), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4136099537041633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4136099537041633, 0.21824807573850044] ***
*** finished computation of 7 references, err: [Inf, 0.4136099537041633, 0.21824807573850044] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 20]]
** centroid: 1, normalized-entropy: 0.9672947789468944, [(2, 13), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6584957246913058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6584957246913058, 0.20458095656710307] ***
*** finished computation of 7 references, err: [Inf, 0.6584957246913058, 0.20458095656710307] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 10, 6]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(2, 10), (3, 6)]
*** center 4: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 11, 19]]
** centroid: 5, normalized-entropy: 0.9480782435939054, [(2, 11), (3, 19)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3572980277580639] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3572980277580639, 0.17371043208259124] ***
*** finished computation of 7 references, err: [Inf, 0.3572980277580639, 0.17371043208259124] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 8, 11]]
** centroid: 5, normalized-entropy: 0.9819407868640977, [(2, 8), (3, 11)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5802000080041226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5802000080041226, 0.24555880884903755] ***
*** starting iteration: 2; err: [Inf, 0.5802000080041226, 0.24555880884903755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5802000080041226, 0.24555880884903755, 0.23136942507185396] ***
*** starting iteration: 3; err: [Inf, 0.5802000080041226, 0.24555880884903755, 0.23136942507185396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5802000080041226, 0.24555880884903755, 0.23136942507185396, 0.23088400987968793] ***
*** finished computation of 7 references, err: [Inf, 0.5802000080041226, 0.24555880884903755, 0.23136942507185396, 0.23088400987968793] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 9]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 18), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5531000064169125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5531000064169125, 0.23932910445653482] ***
*** starting iteration: 2; err: [Inf, 0.5531000064169125, 0.23932910445653482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5531000064169125, 0.23932910445653482, 0.23135790905728673] ***
*** starting iteration: 3; err: [Inf, 0.5531000064169125, 0.23932910445653482, 0.23135790905728673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5531000064169125, 0.23932910445653482, 0.23135790905728673, 0.22898858335505656] ***
*** starting iteration: 4; err: [Inf, 0.5531000064169125, 0.23932910445653482, 0.23135790905728673, 0.22898858335505656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5531000064169125, 0.23932910445653482, 0.23135790905728673, 0.22898858335505656, 0.22872810685565872] ***
*** finished computation of 7 references, err: [Inf, 0.5531000064169125, 0.23932910445653482, 0.23135790905728673, 0.22898858335505656, 0.22872810685565872] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 10]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 8), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43040000578707094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43040000578707094, 0.2551238472716309] ***
*** starting iteration: 2; err: [Inf, 0.43040000578707094, 0.2551238472716309] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43040000578707094, 0.2551238472716309, 0.2306692553254081] ***
*** starting iteration: 3; err: [Inf, 0.43040000578707094, 0.2551238472716309, 0.2306692553254081] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43040000578707094, 0.2551238472716309, 0.2306692553254081, 0.21651937565106238] ***
*** starting iteration: 4; err: [Inf, 0.43040000578707094, 0.2551238472716309, 0.2306692553254081, 0.21651937565106238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43040000578707094, 0.2551238472716309, 0.2306692553254081, 0.21651937565106238, 0.21247347584065465] ***
*** starting iteration: 5; err: [Inf, 0.43040000578707094, 0.2551238472716309, 0.2306692553254081, 0.21651937565106238, 0.21247347584065465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43040000578707094, 0.2551238472716309, 0.2306692553254081, 0.21651937565106238, 0.21247347584065465, 0.2115583576130908] ***
*** finished computation of 7 references, err: [Inf, 0.43040000578707094, 0.2551238472716309, 0.2306692553254081, 0.21651937565106238, 0.21247347584065465, 0.2115583576130908] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 11, 10]]
** centroid: 7, normalized-entropy: 0.998363672593813, [(2, 11), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.549800000817081] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.549800000817081, 0.2582033274832577] ***
*** starting iteration: 2; err: [Inf, 0.549800000817081, 0.2582033274832577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.549800000817081, 0.2582033274832577, 0.2395027896522089] ***
*** starting iteration: 3; err: [Inf, 0.549800000817081, 0.2582033274832577, 0.2395027896522089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.549800000817081, 0.2582033274832577, 0.2395027896522089, 0.2340449062673839] ***
*** finished computation of 7 references, err: [Inf, 0.549800000817081, 0.2582033274832577, 0.2395027896522089, 0.2340449062673839] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49929999941473424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49929999941473424, 0.2852803086658703] ***
*** starting iteration: 2; err: [Inf, 0.49929999941473424, 0.2852803086658703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49929999941473424, 0.2852803086658703, 0.2580557620196197] ***
*** starting iteration: 3; err: [Inf, 0.49929999941473424, 0.2852803086658703, 0.2580557620196197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49929999941473424, 0.2852803086658703, 0.2580557620196197, 0.25290904203116576] ***
*** finished computation of 7 references, err: [Inf, 0.49929999941473424, 0.2852803086658703, 0.2580557620196197, 0.25290904203116576] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 4, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5352000032145507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5352000032145507, 0.2706840114817355] ***
*** starting iteration: 2; err: [Inf, 0.5352000032145507, 0.2706840114817355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5352000032145507, 0.2706840114817355, 0.2595125298684346] ***
*** starting iteration: 3; err: [Inf, 0.5352000032145507, 0.2706840114817355, 0.2595125298684346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5352000032145507, 0.2706840114817355, 0.2595125298684346, 0.2544199132726041] ***
*** finished computation of 7 references, err: [Inf, 0.5352000032145507, 0.2706840114817355, 0.2595125298684346, 0.2544199132726041] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 9]]
** centroid: 1, normalized-entropy: 0.8935711016541908, [(2, 20), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 5, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8146783964391184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8146783964391184, 0.4196875381879677] ***
*** starting iteration: 2; err: [Inf, 0.8146783964391184, 0.4196875381879677] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8146783964391184, 0.4196875381879677, 0.40318807316878774] ***
*** starting iteration: 3; err: [Inf, 0.8146783964391184, 0.4196875381879677, 0.40318807316878774] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8146783964391184, 0.4196875381879677, 0.40318807316878774, 0.3895942220180189] ***
*** starting iteration: 4; err: [Inf, 0.8146783964391184, 0.4196875381879677, 0.40318807316878774, 0.3895942220180189] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8146783964391184, 0.4196875381879677, 0.40318807316878774, 0.3895942220180189, 0.3798401663232313] ***
*** starting iteration: 5; err: [Inf, 0.8146783964391184, 0.4196875381879677, 0.40318807316878774, 0.3895942220180189, 0.3798401663232313] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8146783964391184, 0.4196875381879677, 0.40318807316878774, 0.3895942220180189, 0.3798401663232313, 0.37263589471105507] ***
*** starting iteration: 6; err: [Inf, 0.8146783964391184, 0.4196875381879677, 0.40318807316878774, 0.3895942220180189, 0.3798401663232313, 0.37263589471105507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8146783964391184, 0.4196875381879677, 0.40318807316878774, 0.3895942220180189, 0.3798401663232313, 0.37263589471105507, 0.37187207390882676] ***
*** finished computation of 3 references, err: [Inf, 0.8146783964391184, 0.4196875381879677, 0.40318807316878774, 0.3895942220180189, 0.3798401663232313, 0.37263589471105507, 0.37187207390882676] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 9]]
** centroid: 3, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38076054666117687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38076054666117687, 0.2343527829833894] ***
*** starting iteration: 2; err: [Inf, 0.38076054666117687, 0.2343527829833894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38076054666117687, 0.2343527829833894, 0.2075221842857523] ***
*** starting iteration: 3; err: [Inf, 0.38076054666117687, 0.2343527829833894, 0.2075221842857523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38076054666117687, 0.2343527829833894, 0.2075221842857523, 0.19859662787135055] ***
*** finished computation of 7 references, err: [Inf, 0.38076054666117687, 0.2343527829833894, 0.2075221842857523, 0.19859662787135055] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 13]]
** centroid: 3, normalized-entropy: 0.998845535995202, [(2, 12), (3, 13)]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34282440264830283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34282440264830283, 0.2248441789333866] ***
*** starting iteration: 2; err: [Inf, 0.34282440264830283, 0.2248441789333866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34282440264830283, 0.2248441789333866, 0.21511327819253925] ***
*** starting iteration: 3; err: [Inf, 0.34282440264830283, 0.2248441789333866, 0.21511327819253925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34282440264830283, 0.2248441789333866, 0.21511327819253925, 0.2130397765517231] ***
*** finished computation of 7 references, err: [Inf, 0.34282440264830283, 0.2248441789333866, 0.21511327819253925, 0.2130397765517231] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 12]]
** centroid: 3, normalized-entropy: 0.9910760598382222, [(2, 15), (3, 12)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49660000140911736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49660000140911736, 0.3076470518483353] ***
*** starting iteration: 2; err: [Inf, 0.49660000140911736, 0.3076470518483353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49660000140911736, 0.3076470518483353, 0.29011758157049145] ***
*** starting iteration: 3; err: [Inf, 0.49660000140911736, 0.3076470518483353, 0.29011758157049145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49660000140911736, 0.3076470518483353, 0.29011758157049145, 0.2733527182251299] ***
*** starting iteration: 4; err: [Inf, 0.49660000140911736, 0.3076470518483353, 0.29011758157049145, 0.2733527182251299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49660000140911736, 0.3076470518483353, 0.29011758157049145, 0.2733527182251299, 0.25260387604556095] ***
*** starting iteration: 5; err: [Inf, 0.49660000140911736, 0.3076470518483353, 0.29011758157049145, 0.2733527182251299, 0.25260387604556095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49660000140911736, 0.3076470518483353, 0.29011758157049145, 0.2733527182251299, 0.25260387604556095, 0.2382363009676156] ***
*** starting iteration: 6; err: [Inf, 0.49660000140911736, 0.3076470518483353, 0.29011758157049145, 0.2733527182251299, 0.25260387604556095, 0.2382363009676156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49660000140911736, 0.3076470518483353, 0.29011758157049145, 0.2733527182251299, 0.25260387604556095, 0.2382363009676156, 0.23184839939825447] ***
*** starting iteration: 7; err: [Inf, 0.49660000140911736, 0.3076470518483353, 0.29011758157049145, 0.2733527182251299, 0.25260387604556095, 0.2382363009676156, 0.23184839939825447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49660000140911736, 0.3076470518483353, 0.29011758157049145, 0.2733527182251299, 0.25260387604556095, 0.2382363009676156, 0.23184839939825447, 0.23120843698836488] ***
*** finished computation of 7 references, err: [Inf, 0.49660000140911736, 0.3076470518483353, 0.29011758157049145, 0.2733527182251299, 0.25260387604556095, 0.2382363009676156, 0.23184839939825447, 0.23120843698836488] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 10]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.462300036869594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.462300036869594, 0.8340975323134907] ***
*** starting iteration: 2; err: [Inf, 4.462300036869594, 0.8340975323134907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517] ***
*** starting iteration: 3; err: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517, 0.3530559617118367] ***
*** starting iteration: 4; err: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517, 0.3530559617118367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517, 0.3530559617118367, 0.34600251461957965] ***
*** starting iteration: 5; err: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517, 0.3530559617118367, 0.34600251461957965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517, 0.3530559617118367, 0.34600251461957965, 0.33572998224356654] ***
*** starting iteration: 6; err: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517, 0.3530559617118367, 0.34600251461957965, 0.33572998224356654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517, 0.3530559617118367, 0.34600251461957965, 0.33572998224356654, 0.3161035046676377] ***
*** starting iteration: 7; err: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517, 0.3530559617118367, 0.34600251461957965, 0.33572998224356654, 0.3161035046676377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517, 0.3530559617118367, 0.34600251461957965, 0.33572998224356654, 0.3161035046676377, 0.3052700450439849] ***
*** starting iteration: 8; err: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517, 0.3530559617118367, 0.34600251461957965, 0.33572998224356654, 0.3161035046676377, 0.3052700450439849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517, 0.3530559617118367, 0.34600251461957965, 0.33572998224356654, 0.3161035046676377, 0.3052700450439849, 0.30142159434883703] ***
*** starting iteration: 9; err: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517, 0.3530559617118367, 0.34600251461957965, 0.33572998224356654, 0.3161035046676377, 0.3052700450439849, 0.30142159434883703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517, 0.3530559617118367, 0.34600251461957965, 0.33572998224356654, 0.3161035046676377, 0.3052700450439849, 0.30142159434883703, 0.30048943085047614] ***
*** finished computation of 7 references, err: [Inf, 4.462300036869594, 0.8340975323134907, 0.36810861897551517, 0.3530559617118367, 0.34600251461957965, 0.33572998224356654, 0.3161035046676377, 0.3052700450439849, 0.30142159434883703, 0.30048943085047614] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 2, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5086999993791085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5086999993791085, 0.34289356184690545] ***
*** starting iteration: 2; err: [Inf, 0.5086999993791085, 0.34289356184690545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5086999993791085, 0.34289356184690545, 0.32260421989004157] ***
*** starting iteration: 3; err: [Inf, 0.5086999993791085, 0.34289356184690545, 0.32260421989004157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5086999993791085, 0.34289356184690545, 0.32260421989004157, 0.3122241548421596] ***
*** starting iteration: 4; err: [Inf, 0.5086999993791085, 0.34289356184690545, 0.32260421989004157, 0.3122241548421596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5086999993791085, 0.34289356184690545, 0.32260421989004157, 0.3122241548421596, 0.3108666246292251] ***
*** starting iteration: 5; err: [Inf, 0.5086999993791085, 0.34289356184690545, 0.32260421989004157, 0.3122241548421596, 0.3108666246292251] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5086999993791085, 0.34289356184690545, 0.32260421989004157, 0.3122241548421596, 0.3108666246292251, 0.30911634097041885] ***
*** starting iteration: 6; err: [Inf, 0.5086999993791085, 0.34289356184690545, 0.32260421989004157, 0.3122241548421596, 0.3108666246292251, 0.30911634097041885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5086999993791085, 0.34289356184690545, 0.32260421989004157, 0.3122241548421596, 0.3108666246292251, 0.30911634097041885, 0.30849125374372366] ***
*** finished computation of 7 references, err: [Inf, 0.5086999993791085, 0.34289356184690545, 0.32260421989004157, 0.3122241548421596, 0.3108666246292251, 0.30911634097041885, 0.30849125374372366] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 12]]
** centroid: 4, normalized-entropy: 1.0, [(2, 12), (3, 12)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.0176035355038033] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.0176035355038033, 0.7052897511865838] ***
*** starting iteration: 2; err: [Inf, 3.0176035355038033, 0.7052897511865838] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.0176035355038033, 0.7052897511865838, 0.6982100101674036] ***
*** starting iteration: 3; err: [Inf, 3.0176035355038033, 0.7052897511865838, 0.6982100101674036] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.0176035355038033, 0.7052897511865838, 0.6982100101674036, 0.6959565061445518] ***
*** starting iteration: 4; err: [Inf, 3.0176035355038033, 0.7052897511865838, 0.6982100101674036, 0.6959565061445518] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.0176035355038033, 0.7052897511865838, 0.6982100101674036, 0.6959565061445518, 0.6955509942569446] ***
*** finished computation of 3 references, err: [Inf, 3.0176035355038033, 0.7052897511865838, 0.6982100101674036, 0.6959565061445518, 0.6955509942569446] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [16, 2, 0]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(1, 16), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 33]]
** centroid: 3, normalized-entropy: 1.0, [(2, 33), (3, 33)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8550687751237396] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8550687751237396, 0.41155093892980477] ***
*** starting iteration: 2; err: [Inf, 0.8550687751237396, 0.41155093892980477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8550687751237396, 0.41155093892980477, 0.3780254438253674] ***
*** starting iteration: 3; err: [Inf, 0.8550687751237396, 0.41155093892980477, 0.3780254438253674] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8550687751237396, 0.41155093892980477, 0.3780254438253674, 0.36804353810195695] ***
*** starting iteration: 4; err: [Inf, 0.8550687751237396, 0.41155093892980477, 0.3780254438253674, 0.36804353810195695] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8550687751237396, 0.41155093892980477, 0.3780254438253674, 0.36804353810195695, 0.36571172783946254] ***
*** starting iteration: 5; err: [Inf, 0.8550687751237396, 0.41155093892980477, 0.3780254438253674, 0.36804353810195695, 0.36571172783946254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8550687751237396, 0.41155093892980477, 0.3780254438253674, 0.36804353810195695, 0.36571172783946254, 0.3653832309617839] ***
*** finished computation of 3 references, err: [Inf, 0.8550687751237396, 0.41155093892980477, 0.3780254438253674, 0.36804353810195695, 0.36571172783946254, 0.3653832309617839] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 11]]
** centroid: 2, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.786496336323506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.786496336323506, 0.36399345788034165] ***
*** starting iteration: 2; err: [Inf, 0.786496336323506, 0.36399345788034165] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.786496336323506, 0.36399345788034165, 0.3573044521275895] ***
*** starting iteration: 3; err: [Inf, 0.786496336323506, 0.36399345788034165, 0.3573044521275895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.786496336323506, 0.36399345788034165, 0.3573044521275895, 0.35638851068060523] ***
*** finished computation of 3 references, err: [Inf, 0.786496336323506, 0.36399345788034165, 0.3573044521275895, 0.35638851068060523] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 32]]
** centroid: 2, normalized-entropy: 0.6789538995185759, [(2, 7), (3, 32)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 29, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5759699463590136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5759699463590136, 0.2646977652194964] ***
*** finished computation of 7 references, err: [Inf, 0.5759699463590136, 0.2646977652194964] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 23]]
** centroid: 2, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 11, 9]]
** centroid: 5, normalized-entropy: 0.9927744539878083, [(2, 11), (3, 9)]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7585894851969468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7585894851969468, 0.27811285131647256] ***
*** finished computation of 7 references, err: [Inf, 0.7585894851969468, 0.27811285131647256] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 7]]
** centroid: 1, normalized-entropy: 0.8256265261578954, [(2, 20), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 27]]
*** center 4: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7577778363835357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7577778363835357, 0.3616731819172725] ***
*** finished computation of 7 references, err: [Inf, 0.7577778363835357, 0.3616731819172725] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 7]]
** centroid: 3, normalized-entropy: 0.6892019851173655, [(2, 31), (3, 7)]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 3, 0]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(1, 1), (2, 3)]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 8.36648749398685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.36648749398685, 0.7445912449482567] ***
*** starting iteration: 2; err: [Inf, 8.36648749398685, 0.7445912449482567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.36648749398685, 0.7445912449482567, 0.6969055567612855] ***
*** starting iteration: 3; err: [Inf, 8.36648749398685, 0.7445912449482567, 0.6969055567612855] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.36648749398685, 0.7445912449482567, 0.6969055567612855, 0.6943329881745238] ***
*** starting iteration: 4; err: [Inf, 8.36648749398685, 0.7445912449482567, 0.6969055567612855, 0.6943329881745238] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.36648749398685, 0.7445912449482567, 0.6969055567612855, 0.6943329881745238, 0.6943329881745238] ***
*** finished computation of 3 references, err: [Inf, 8.36648749398685, 0.7445912449482567, 0.6969055567612855, 0.6943329881745238, 0.6943329881745238] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 33]]
** centroid: 2, normalized-entropy: 1.0, [(2, 33), (3, 33)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [16, 2, 0]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(1, 16), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0098095701165024] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0098095701165024, 0.598170303208574] ***
*** starting iteration: 2; err: [Inf, 1.0098095701165024, 0.598170303208574] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0098095701165024, 0.598170303208574, 0.5959412250724706] ***
*** starting iteration: 3; err: [Inf, 1.0098095701165024, 0.598170303208574, 0.5959412250724706] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0098095701165024, 0.598170303208574, 0.5959412250724706, 0.5955322018107398] ***
*** finished computation of 3 references, err: [Inf, 1.0098095701165024, 0.598170303208574, 0.5959412250724706, 0.5955322018107398] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 35]]
** centroid: 1, normalized-entropy: 0.9936507116910402, [(2, 29), (3, 35)]
*** center 2: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8231129648301706] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8231129648301706, 0.3606233302777207] ***
*** starting iteration: 2; err: [Inf, 0.8231129648301706, 0.3606233302777207] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8231129648301706, 0.3606233302777207, 0.3573044521275895] ***
*** starting iteration: 3; err: [Inf, 0.8231129648301706, 0.3606233302777207, 0.3573044521275895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8231129648301706, 0.3606233302777207, 0.3573044521275895, 0.35638851068060523] ***
*** finished computation of 3 references, err: [Inf, 0.8231129648301706, 0.3606233302777207, 0.3573044521275895, 0.35638851068060523] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 29, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 32]]
** centroid: 2, normalized-entropy: 0.6789538995185759, [(2, 7), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1663000164297685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1663000164297685, 1.034362206040095] ***
*** finished computation of 3 references, err: [Inf, 1.1663000164297685, 1.034362206040095] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 33]]
** centroid: 1, normalized-entropy: 1.0, [(2, 33), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [15, 2, 0]]
** centroid: 3, normalized-entropy: 0.5225593745369407, [(1, 15), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1141999963997227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1141999963997227, 0.8854231516346761] ***
*** finished computation of 3 references, err: [Inf, 1.1141999963997227, 0.8854231516346761] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 35]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(2, 28), (3, 35)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [19, 1, 0]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(1, 19), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 10.97219994083149] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.97219994083149, 1.4306089962197694] ***
*** finished computation of 3 references, err: [Inf, 10.97219994083149, 1.4306089962197694] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 32]]
** centroid: 1, normalized-entropy: 1.0, [(2, 32), (3, 32)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [32, 4, 0]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(1, 32), (2, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8244151288273622] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8244151288273622, 0.38298944493306875] ***
*** starting iteration: 2; err: [Inf, 0.8244151288273622, 0.38298944493306875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8244151288273622, 0.38298944493306875, 0.3716341345069419] ***
*** starting iteration: 3; err: [Inf, 0.8244151288273622, 0.38298944493306875, 0.3716341345069419] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8244151288273622, 0.38298944493306875, 0.3716341345069419, 0.37131490458509775] ***
*** finished computation of 3 references, err: [Inf, 0.8244151288273622, 0.38298944493306875, 0.3716341345069419, 0.37131490458509775] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9000378734117319] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9000378734117319, 0.6158936238389005] ***
*** starting iteration: 2; err: [Inf, 0.9000378734117319, 0.6158936238389005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9000378734117319, 0.6158936238389005, 0.5939012637720614] ***
*** starting iteration: 3; err: [Inf, 0.9000378734117319, 0.6158936238389005, 0.5939012637720614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9000378734117319, 0.6158936238389005, 0.5939012637720614, 0.5926021600455929] ***
*** finished computation of 3 references, err: [Inf, 0.9000378734117319, 0.6158936238389005, 0.5939012637720614, 0.5926021600455929] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 35]]
** centroid: 2, normalized-entropy: 0.9936507116910402, [(2, 29), (3, 35)]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4968154980232839] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4968154980232839, 0.3541905608587323] ***
*** starting iteration: 2; err: [Inf, 0.4968154980232839, 0.3541905608587323] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4968154980232839, 0.3541905608587323, 0.3545745882025675] ***
*** finished computation of 3 references, err: [Inf, 0.4968154980232839, 0.3541905608587323, 0.3545745882025675] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 31]]
** centroid: 1, normalized-entropy: 0.5127091420308771, [(2, 4), (3, 31)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 32, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.015864261699515] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.015864261699515, 0.7051408761989042] ***
*** starting iteration: 2; err: [Inf, 3.015864261699515, 0.7051408761989042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.015864261699515, 0.7051408761989042, 0.7006593648245043] ***
*** starting iteration: 3; err: [Inf, 3.015864261699515, 0.7051408761989042, 0.7006593648245043] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.015864261699515, 0.7051408761989042, 0.7006593648245043, 0.694866026873953] ***
*** finished computation of 3 references, err: [Inf, 3.015864261699515, 0.7051408761989042, 0.7006593648245043, 0.694866026873953] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [17, 2, 0]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(1, 17), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 33]]
** centroid: 3, normalized-entropy: 1.0, [(2, 33), (3, 33)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.69599600040367] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.69599600040367, 1.349330751331137] ***
*** starting iteration: 2; err: [Inf, 3.69599600040367, 1.349330751331137] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.69599600040367, 1.349330751331137, 0.5830130521289756] ***
*** starting iteration: 3; err: [Inf, 3.69599600040367, 1.349330751331137, 0.5830130521289756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.69599600040367, 1.349330751331137, 0.5830130521289756, 0.43835128792040706] ***
*** finished computation of 3 references, err: [Inf, 3.69599600040367, 1.349330751331137, 0.5830130521289756, 0.43835128792040706] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 22]]
** centroid: 1, normalized-entropy: 0.9863676072907089, [(2, 29), (3, 22)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6781453185010718] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6781453185010718, 0.43302484360588595] ***
*** starting iteration: 2; err: [Inf, 0.6781453185010718, 0.43302484360588595] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6781453185010718, 0.43302484360588595, 0.36726528587101326] ***
*** starting iteration: 3; err: [Inf, 0.6781453185010718, 0.43302484360588595, 0.36726528587101326] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6781453185010718, 0.43302484360588595, 0.36726528587101326, 0.3583109322686269] ***
*** finished computation of 3 references, err: [Inf, 0.6781453185010718, 0.43302484360588595, 0.36726528587101326, 0.3583109322686269] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 7]]
** centroid: 1, normalized-entropy: 0.6690158350565576, [(2, 33), (3, 7)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8363999940351289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8363999940351289, 0.33488872317610735] ***
*** starting iteration: 2; err: [Inf, 0.8363999940351289, 0.33488872317610735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8363999940351289, 0.33488872317610735, 0.3172426016363933] ***
*** starting iteration: 3; err: [Inf, 0.8363999940351289, 0.33488872317610735, 0.3172426016363933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8363999940351289, 0.33488872317610735, 0.3172426016363933, 0.31050164285529896] ***
*** finished computation of 7 references, err: [Inf, 0.8363999940351289, 0.33488872317610735, 0.3172426016363933, 0.31050164285529896] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 16, 15]]
** centroid: 3, normalized-entropy: 0.9992492479956566, [(2, 16), (3, 15)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.1881000127835724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.1881000127835724, 0.4716621172055326] ***
*** starting iteration: 2; err: [Inf, 2.1881000127835724, 0.4716621172055326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.1881000127835724, 0.4716621172055326, 0.4052180959109505] ***
*** starting iteration: 3; err: [Inf, 2.1881000127835724, 0.4716621172055326, 0.4052180959109505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.1881000127835724, 0.4716621172055326, 0.4052180959109505, 0.345100665834087] ***
*** finished computation of 7 references, err: [Inf, 2.1881000127835724, 0.4716621172055326, 0.4052180959109505, 0.345100665834087] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 20, 11]]
** centroid: 7, normalized-entropy: 0.9383153522334071, [(2, 20), (3, 11)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.0213000237228322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.0213000237228322, 0.932671528779399] ***
*** starting iteration: 2; err: [Inf, 2.0213000237228322, 0.932671528779399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.0213000237228322, 0.932671528779399, 0.8467666872693438] ***
*** starting iteration: 3; err: [Inf, 2.0213000237228322, 0.932671528779399, 0.8467666872693438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.0213000237228322, 0.932671528779399, 0.8467666872693438, 0.6687316886961068] ***
*** finished computation of 7 references, err: [Inf, 2.0213000237228322, 0.932671528779399, 0.8467666872693438, 0.6687316886961068] ***
*** center 1: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 25, 32]]
** centroid: 4, normalized-entropy: 0.9890934397021431, [(2, 25), (3, 32)]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.2330000225900535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.2330000225900535, 1.7764519942244226] ***
*** finished computation of 3 references, err: [Inf, 3.2330000225900535, 1.7764519942244226] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 23]]
** centroid: 1, normalized-entropy: 0.9892452969285004, [(2, 18), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [32, 17, 1]]
** centroid: 2, normalized-entropy: 0.9313043685793762, [(1, 32), (2, 17)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5517000076862097] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5517000076862097, 0.9075653189760317] ***
*** finished computation of 3 references, err: [Inf, 1.5517000076862097, 0.9075653189760317] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [27, 2, 0]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(1, 27), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 35]]
** centroid: 3, normalized-entropy: 0.9879565014919159, [(2, 27), (3, 35)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7761999979477294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7761999979477294, 0.9648714317217467] ***
*** finished computation of 3 references, err: [Inf, 1.7761999979477294, 0.9648714317217467] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 32]]
** centroid: 1, normalized-entropy: 0.9985532860835362, [(2, 35), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1861156270735065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1861156270735065, 0.37677623808777044] ***
*** starting iteration: 2; err: [Inf, 1.1861156270735065, 0.37677623808777044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1861156270735065, 0.37677623808777044, 0.3667026610409579] ***
*** starting iteration: 3; err: [Inf, 1.1861156270735065, 0.37677623808777044, 0.3667026610409579] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1861156270735065, 0.37677623808777044, 0.3667026610409579, 0.3653832309617839] ***
*** starting iteration: 4; err: [Inf, 1.1861156270735065, 0.37677623808777044, 0.3667026610409579, 0.3653832309617839] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1861156270735065, 0.37677623808777044, 0.3667026610409579, 0.3653832309617839, 0.3653832309617839] ***
*** finished computation of 3 references, err: [Inf, 1.1861156270735065, 0.37677623808777044, 0.3667026610409579, 0.3653832309617839, 0.3653832309617839] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 11]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6791365871927681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6791365871927681, 0.41145051840075114] ***
*** starting iteration: 2; err: [Inf, 0.6791365871927681, 0.41145051840075114] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6791365871927681, 0.41145051840075114, 0.3790680983729154] ***
*** starting iteration: 3; err: [Inf, 0.6791365871927681, 0.41145051840075114, 0.3790680983729154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6791365871927681, 0.41145051840075114, 0.3790680983729154, 0.3617947739725827] ***
*** starting iteration: 4; err: [Inf, 0.6791365871927681, 0.41145051840075114, 0.3790680983729154, 0.3617947739725827] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6791365871927681, 0.41145051840075114, 0.3790680983729154, 0.3617947739725827, 0.3570892114087836] ***
*** starting iteration: 5; err: [Inf, 0.6791365871927681, 0.41145051840075114, 0.3790680983729154, 0.3617947739725827, 0.3570892114087836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6791365871927681, 0.41145051840075114, 0.3790680983729154, 0.3617947739725827, 0.3570892114087836, 0.3556177617789305] ***
*** starting iteration: 6; err: [Inf, 0.6791365871927681, 0.41145051840075114, 0.3790680983729154, 0.3617947739725827, 0.3570892114087836, 0.3556177617789305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6791365871927681, 0.41145051840075114, 0.3790680983729154, 0.3617947739725827, 0.3570892114087836, 0.3556177617789305, 0.3556177617789305] ***
*** finished computation of 3 references, err: [Inf, 0.6791365871927681, 0.41145051840075114, 0.3790680983729154, 0.3617947739725827, 0.3570892114087836, 0.3556177617789305, 0.3556177617789305] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 6]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 26]]
** centroid: 3, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8988631116412872] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8988631116412872, 0.37142375692597585] ***
*** starting iteration: 2; err: [Inf, 0.8988631116412872, 0.37142375692597585] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8988631116412872, 0.37142375692597585, 0.37142375692597585] ***
*** finished computation of 3 references, err: [Inf, 0.8988631116412872, 0.37142375692597585, 0.37142375692597585] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 9]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0046504817017485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0046504817017485, 0.3667727659039959] ***
*** starting iteration: 2; err: [Inf, 1.0046504817017485, 0.3667727659039959] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0046504817017485, 0.3667727659039959, 0.3654964109503935] ***
*** starting iteration: 3; err: [Inf, 1.0046504817017485, 0.3667727659039959, 0.3654964109503935] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0046504817017485, 0.3667727659039959, 0.3654964109503935, 0.3655820286826483] ***
*** finished computation of 3 references, err: [Inf, 1.0046504817017485, 0.3667727659039959, 0.3654964109503935, 0.3655820286826483] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 11]]
** centroid: 3, normalized-entropy: 0.8582307926411409, [(2, 28), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7726554939377703] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7726554939377703, 0.38890818595468074] ***
*** starting iteration: 2; err: [Inf, 0.7726554939377703, 0.38890818595468074] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7726554939377703, 0.38890818595468074, 0.363638615818227] ***
*** starting iteration: 3; err: [Inf, 0.7726554939377703, 0.38890818595468074, 0.363638615818227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7726554939377703, 0.38890818595468074, 0.363638615818227, 0.3583109322686269] ***
*** starting iteration: 4; err: [Inf, 0.7726554939377703, 0.38890818595468074, 0.363638615818227, 0.3583109322686269] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7726554939377703, 0.38890818595468074, 0.363638615818227, 0.3583109322686269, 0.356259240992879] ***
*** starting iteration: 5; err: [Inf, 0.7726554939377703, 0.38890818595468074, 0.363638615818227, 0.3583109322686269, 0.356259240992879] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7726554939377703, 0.38890818595468074, 0.363638615818227, 0.3583109322686269, 0.356259240992879, 0.3556177617789305] ***
*** finished computation of 3 references, err: [Inf, 0.7726554939377703, 0.38890818595468074, 0.363638615818227, 0.3583109322686269, 0.356259240992879, 0.3556177617789305] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 26]]
** centroid: 2, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 6]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3802848265941472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3802848265941472, 0.18093107663121252] ***
*** starting iteration: 2; err: [Inf, 0.3802848265941472, 0.18093107663121252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3802848265941472, 0.18093107663121252, 0.17171837254403932] ***
*** starting iteration: 3; err: [Inf, 0.3802848265941472, 0.18093107663121252, 0.17171837254403932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3802848265941472, 0.18093107663121252, 0.17171837254403932, 0.16250491223373031] ***
*** finished computation of 7 references, err: [Inf, 0.3802848265941472, 0.18093107663121252, 0.17171837254403932, 0.16250491223373031] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 11]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5410593549567065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5410593549567065, 0.20766859059487083] ***
*** starting iteration: 2; err: [Inf, 0.5410593549567065, 0.20766859059487083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5410593549567065, 0.20766859059487083, 0.19964735563456304] ***
*** starting iteration: 3; err: [Inf, 0.5410593549567065, 0.20766859059487083, 0.19964735563456304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5410593549567065, 0.20766859059487083, 0.19964735563456304, 0.19746116911299436] ***
*** finished computation of 7 references, err: [Inf, 0.5410593549567065, 0.20766859059487083, 0.19964735563456304, 0.19746116911299436] ***
*** center 1: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 13, 5]]
** centroid: 3, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 8, 20]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 8), (3, 20)]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3271438428192235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3271438428192235, 0.17193994311220803] ***
*** starting iteration: 2; err: [Inf, 0.3271438428192235, 0.17193994311220803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3271438428192235, 0.17193994311220803, 0.16253224324265136] ***
*** starting iteration: 3; err: [Inf, 0.3271438428192235, 0.17193994311220803, 0.16253224324265136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3271438428192235, 0.17193994311220803, 0.16253224324265136, 0.158855346899227] ***
*** finished computation of 7 references, err: [Inf, 0.3271438428192235, 0.17193994311220803, 0.16253224324265136, 0.158855346899227] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 6, 9]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(2, 6), (3, 9)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9666666666666667
finished with 16
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9666666666666667
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 5.900999972089109] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.900999972089109, 2.3271277918697537] ***
*** starting iteration: 2; err: [Inf, 5.900999972089109, 2.3271277918697537] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.900999972089109, 2.3271277918697537, 1.0879326051623095] ***
*** starting iteration: 3; err: [Inf, 5.900999972089109, 2.3271277918697537, 1.0879326051623095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.900999972089109, 2.3271277918697537, 1.0879326051623095, 0.628105282529249] ***
*** finished computation of 3 references, err: [Inf, 5.900999972089109, 2.3271277918697537, 1.0879326051623095, 0.628105282529249] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 13, 32]]
** centroid: 2, normalized-entropy: 0.8672816222000259, [(2, 13), (3, 32)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.962300023271982] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.962300023271982, 0.8903940362441083] ***
*** starting iteration: 2; err: [Inf, 0.962300023271982, 0.8903940362441083] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.962300023271982, 0.8903940362441083, 0.8894619725677909] ***
*** finished computation of 3 references, err: [Inf, 0.962300023271982, 0.8903940362441083, 0.8894619725677909] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 35]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 28), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.40140000341749] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.40140000341749, 0.7667481999868769] ***
*** starting iteration: 2; err: [Inf, 2.40140000341749, 0.7667481999868769] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.40140000341749, 0.7667481999868769, 0.6428751091302729] ***
*** starting iteration: 3; err: [Inf, 2.40140000341749, 0.7667481999868769, 0.6428751091302729] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.40140000341749, 0.7667481999868769, 0.6428751091302729, 0.5730229521811353] ***
*** finished computation of 3 references, err: [Inf, 2.40140000341749, 0.7667481999868769, 0.6428751091302729, 0.5730229521811353] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 9]]
** centroid: 3, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.48559467238397147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48559467238397147, 0.38957099070835005] ***
*** starting iteration: 2; err: [Inf, 0.48559467238397147, 0.38957099070835005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48559467238397147, 0.38957099070835005, 0.37350067580950147] ***
*** starting iteration: 3; err: [Inf, 0.48559467238397147, 0.38957099070835005, 0.37350067580950147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48559467238397147, 0.38957099070835005, 0.37350067580950147, 0.37075824909639393] ***
*** finished computation of 3 references, err: [Inf, 0.48559467238397147, 0.38957099070835005, 0.37350067580950147, 0.37075824909639393] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 9]]
** centroid: 1, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.4275000561337605] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4275000561337605, 0.5854085586702278] ***
*** starting iteration: 2; err: [Inf, 3.4275000561337605, 0.5854085586702278] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4275000561337605, 0.5854085586702278, 0.3742933558384011] ***
*** starting iteration: 3; err: [Inf, 3.4275000561337605, 0.5854085586702278, 0.3742933558384011] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4275000561337605, 0.5854085586702278, 0.3742933558384011, 0.3662791021262676] ***
*** finished computation of 3 references, err: [Inf, 3.4275000561337605, 0.5854085586702278, 0.3742933558384011, 0.3662791021262676] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 10]]
** centroid: 2, normalized-entropy: 0.8418521897563208, [(2, 27), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.04860293900681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.04860293900681, 0.35888928507592593] ***
*** starting iteration: 2; err: [Inf, 1.04860293900681, 0.35888928507592593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.04860293900681, 0.35888928507592593, 0.3555723006379563] ***
*** starting iteration: 3; err: [Inf, 1.04860293900681, 0.35888928507592593, 0.3555723006379563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.04860293900681, 0.35888928507592593, 0.3555723006379563, 0.3555723006379563] ***
*** finished computation of 3 references, err: [Inf, 1.04860293900681, 0.35888928507592593, 0.3555723006379563, 0.3555723006379563] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 28]]
** centroid: 2, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 4]]
** centroid: 3, normalized-entropy: 0.4941829348497886, [(2, 33), (3, 4)]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9666666666666667
finished with 18
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9666666666666667
finished with 18
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9666666666666667
finished with 18
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9666666666666667
finished with 19
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.2591189168775252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2591189168775252, 0.18062856177646064] ***
*** starting iteration: 2; err: [Inf, 0.2591189168775252, 0.18062856177646064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2591189168775252, 0.18062856177646064, 0.17290650812985528] ***
*** starting iteration: 3; err: [Inf, 0.2591189168775252, 0.18062856177646064, 0.17290650812985528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2591189168775252, 0.18062856177646064, 0.17290650812985528, 0.1724642897257544] ***
*** finished computation of 7 references, err: [Inf, 0.2591189168775252, 0.18062856177646064, 0.17290650812985528, 0.1724642897257544] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 18, 8]]
** centroid: 5, normalized-entropy: 0.8904916402194913, [(2, 18), (3, 8)]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26269399744396105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26269399744396105, 0.21209704275397068] ***
*** starting iteration: 2; err: [Inf, 0.26269399744396105, 0.21209704275397068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26269399744396105, 0.21209704275397068, 0.20116993033060265] ***
*** starting iteration: 3; err: [Inf, 0.26269399744396105, 0.21209704275397068, 0.20116993033060265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26269399744396105, 0.21209704275397068, 0.20116993033060265, 0.19967331429299556] ***
*** starting iteration: 4; err: [Inf, 0.26269399744396105, 0.21209704275397068, 0.20116993033060265, 0.19967331429299556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26269399744396105, 0.21209704275397068, 0.20116993033060265, 0.19967331429299556, 0.19801304673793882] ***
*** starting iteration: 5; err: [Inf, 0.26269399744396105, 0.21209704275397068, 0.20116993033060265, 0.19967331429299556, 0.19801304673793882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26269399744396105, 0.21209704275397068, 0.20116993033060265, 0.19967331429299556, 0.19801304673793882, 0.1977397078307071] ***
*** finished computation of 7 references, err: [Inf, 0.26269399744396105, 0.21209704275397068, 0.20116993033060265, 0.19967331429299556, 0.19801304673793882, 0.1977397078307071] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 11, 2]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 17]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29348442671570396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29348442671570396, 0.2076483446557383] ***
*** starting iteration: 2; err: [Inf, 0.29348442671570396, 0.2076483446557383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29348442671570396, 0.2076483446557383, 0.17813304917661651] ***
*** starting iteration: 3; err: [Inf, 0.29348442671570396, 0.2076483446557383, 0.17813304917661651] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29348442671570396, 0.2076483446557383, 0.17813304917661651, 0.16923371848245874] ***
*** starting iteration: 4; err: [Inf, 0.29348442671570396, 0.2076483446557383, 0.17813304917661651, 0.16923371848245874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29348442671570396, 0.2076483446557383, 0.17813304917661651, 0.16923371848245874, 0.16760053181423792] ***
*** starting iteration: 5; err: [Inf, 0.29348442671570396, 0.2076483446557383, 0.17813304917661651, 0.16923371848245874, 0.16760053181423792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29348442671570396, 0.2076483446557383, 0.17813304917661651, 0.16923371848245874, 0.16760053181423792, 0.16662712046393185] ***
*** finished computation of 7 references, err: [Inf, 0.29348442671570396, 0.2076483446557383, 0.17813304917661651, 0.16923371848245874, 0.16760053181423792, 0.16662712046393185] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 4, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9666666666666667
finished with 20
iteration 8 finished
*** starting iteration: 1; err: [Inf, 1.4601000143532212] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4601000143532212, 0.7304197538080409] ***
*** starting iteration: 2; err: [Inf, 1.4601000143532212, 0.7304197538080409] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4601000143532212, 0.7304197538080409, 0.5255553756249648] ***
*** starting iteration: 3; err: [Inf, 1.4601000143532212, 0.7304197538080409, 0.5255553756249648] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4601000143532212, 0.7304197538080409, 0.5255553756249648, 0.5232029686583067] ***
*** finished computation of 3 references, err: [Inf, 1.4601000143532212, 0.7304197538080409, 0.5255553756249648, 0.5232029686583067] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 10]]
** centroid: 2, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.93780001622428] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.93780001622428, 1.57460891144965] ***
*** starting iteration: 2; err: [Inf, 4.93780001622428, 1.57460891144965] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.93780001622428, 1.57460891144965, 0.5821630308490751] ***
*** starting iteration: 3; err: [Inf, 4.93780001622428, 1.57460891144965, 0.5821630308490751] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.93780001622428, 1.57460891144965, 0.5821630308490751, 0.5190197174920727] ***
*** finished computation of 3 references, err: [Inf, 4.93780001622428, 1.57460891144965, 0.5821630308490751, 0.5190197174920727] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 11]]
** centroid: 1, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.2357000297653244] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2357000297653244, 0.7480705997269042] ***
*** starting iteration: 2; err: [Inf, 2.2357000297653244, 0.7480705997269042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2357000297653244, 0.7480705997269042, 0.5563465487914446] ***
*** starting iteration: 3; err: [Inf, 2.2357000297653244, 0.7480705997269042, 0.5563465487914446] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2357000297653244, 0.7480705997269042, 0.5563465487914446, 0.522137956563496] ***
*** finished computation of 3 references, err: [Inf, 2.2357000297653244, 0.7480705997269042, 0.5563465487914446, 0.522137956563496] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 8]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(2, 34), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9666666666666667
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2), 0.9666666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.653333333333334, 3.193333333333334, 5.64, 2.306666666666667], [5.706666666666667, 2.5866666666666664, 4.14, 1.2866666666666666], [5.949999999999999, 2.783333333333333, 5.083333333333333, 1.8083333333333336], [7.585714285714286, 2.985714285714286, 6.485714285714287, 2.085714285714286], [4.99375, 3.41875, 1.446875, 0.21562500000000007], [5.36, 2.56, 3.4200000000000004, 1.08], [6.428571428571429, 3.0, 4.642857142857144, 1.442857142857143]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 3, 1, 2, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.075, 3.0999999999999996, 5.9, 1.95], [6.392857142857143, 2.9857142857142853, 4.621428571428573, 1.4642857142857142], [6.01111111111111, 2.6888888888888887, 4.966666666666666, 1.7999999999999998], [6.5, 2.9812499999999997, 5.462499999999999, 2.0625], [5.5375, 2.6625, 4.0125, 1.2687499999999998], [5.005555555555556, 3.413888888888889, 1.4444444444444442, 0.2527777777777777], [7.6000000000000005, 3.733333333333333, 6.400000000000001, 2.2333333333333334], [7.7, 2.8, 6.5, 2.3]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 3, 2, 1, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.966666666666667, 2.233333333333333, 3.3666666666666667, 1.0], [6.8950000000000005, 3.0749999999999997, 5.805, 2.0799999999999996], [6.458333333333333, 2.8250000000000006, 4.658333333333333, 1.45], [6.175, 2.7916666666666665, 5.091666666666667, 1.8166666666666664], [5.716666666666668, 2.9250000000000003, 4.308333333333334, 1.3583333333333334], [5.6125, 2.4875000000000003, 3.9124999999999996, 1.1375000000000002], [5.01875, 3.421875, 1.5031249999999998, 0.2625]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 3, 2, 2, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[67, 1, 34, 8, 1, 1, 10, 7, 22, 1, 1, 15, 1, 17, 17, 32, 34, 31, 28, 29, 1, 27, 19, 1, 20, 26, 1, 24, 39, 47, 41, 52, 21, 1, 31, 33, 41, 42, 35, 23, 25, 38, 24, 30, 11, 42, 39, 24, 42, 43, 36, 42, 33, 37, 1, 37, 18, 27, 18, 27, 31, 1, 1, 22, 20, 30, 47, 39, 47, 17, 33, 51, 47, 41, 34, 47, 41, 33, 1, 37, 20, 34, 46, 30, 16, 50, 44, 46, 39, 36, 43, 34, 38, 29, 44, 32, 24, 41, 39, 22, 42, 44, 18, 38, 2, 34, 42, 13, 43, 31, 32, 59, 17, 44, 12, 33, 48, 35, 40, 26, 12, 44, 33, 40, 47, 25, 24, 42, 25, 55, 47, 20, 38, 48, 26, 34, 30, 39, 28, 28, 44, 2, 43, 48, 40, 30, 37, 30, 13, 50, 36, 53, 44, 39, 33, 35, 1, 50, 46, 30, 34, 37, 67, 30, 31, 47, 21, 37, 1, 31, 24, 55, 48, 21, 27, 20, 42, 26, 37, 38, 31, 23, 19, 41, 25, 47, 53, 9, 43, 24, 1, 58, 41, 48, 41, 17, 23, 31, 46, 22, 39, 51, 55, 36, 89, 67, 46, 23, 38, 45, 24, 20, 36, 24, 11, 37, 37, 37, 31, 38, 57, 1, 38, 7, 61, 56, 26, 44, 29, 32, 43, 41, 51, 38, 30, 51, 38, 32, 55, 36, 21, 52, 38, 36, 23, 33, 40, 14, 47, 40, 42, 74, 29, 46, 27, 21, 45, 27, 39, 29, 37, 57, 49, 19, 42, 42, 48, 32, 51, 47, 58, 32, 36, 42, 12, 30, 72, 35, 28, 36, 41, 17, 32, 24, 35, 57, 36, 79, 49, 36, 37, 46, 34, 25, 32, 42, 43, 40, 27, 28]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.591, speedup = 0.41352842599968564, eval_ratio = 0.042186)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.37065972222222227,"recall":0.37065972222222227,"f1":null,"seconds":7.291696965694427e-5,"exhaustive_search_seconds":0.0004351101815700531,"evaluations":340.125,"distances_sum":1744.0841243699565}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5512152777777777,"recall":0.5512152777777777,"f1":0.5512152777777777,"seconds":0.00010599754750728607,"exhaustive_search_seconds":0.0004351101815700531,"evaluations":378.953125,"distances_sum":1624.3403976216716}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6510416666666663,"recall":0.6510416666666663,"f1":0.6510416666666663,"seconds":0.00013825669884681702,"exhaustive_search_seconds":0.0004351101815700531,"evaluations":418.2890625,"distances_sum":1577.2832772930296}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.731770833333333,"recall":0.731770833333333,"f1":0.731770833333333,"seconds":0.0002500806003808975,"exhaustive_search_seconds":0.0004351101815700531,"evaluations":458.0546875,"distances_sum":1552.0136326082445}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7812499999999996,"recall":0.7812499999999996,"f1":0.7812499999999996,"seconds":0.0002904701977968216,"exhaustive_search_seconds":0.0004351101815700531,"evaluations":496.84375,"distances_sum":1537.401160333774}
KCenters.DeloneInvIndex> reached performance {"precision":0.8237847222222215,"recall":0.8237847222222215,"f1":0.8237847222222215,"seconds":0.00026316381990909576,"exhaustive_search_seconds":0.0004351101815700531,"evaluations":538.1640625,"distances_sum":1528.3969288669452}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7779999999999998, speedup = 1.426792050447668, eval_ratio = 0.05474)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
