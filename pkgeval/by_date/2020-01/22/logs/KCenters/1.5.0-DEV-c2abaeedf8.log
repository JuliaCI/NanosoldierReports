Julia Version 1.5.0-DEV.139
Commit c2abaeedf8 (2020-01-22 06:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed Missings ──────────────────── v0.4.3
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed MappedArrays ──────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.9
 Installed DataValueInterfaces ───────── v1.0.0
 Installed DataStructures ────────────── v0.17.9
 Installed StatsBase ─────────────────── v0.32.0
 Installed JSON ──────────────────────── v0.21.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed Compat ────────────────────── v3.2.0
 Installed TableTraits ───────────────── v1.0.0
 Installed Parsers ───────────────────── v0.3.10
 Installed DataFrames ────────────────── v0.20.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed SimilaritySearch ──────────── v0.3.17
 Installed OrderedCollections ────────── v1.1.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed Reexport ──────────────────── v0.2.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed CategoricalArrays ─────────── v0.7.7
 Installed MLDataUtils ───────────────── v0.5.0
 Installed Tables ────────────────────── v0.2.11
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_lyvUBs/Project.toml`
 [no changes]
  Updating `/tmp/jl_lyvUBs/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_lyvUBs/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 107.57000000000009
[ Info: 80.23000000000002
[ Info: 43.29
[ Info: 29.129999999999995
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999839687118
[ Info: 75.4800011366497
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.8411458572814
inertia(cdnet.distances) = 44.126690813801716
inertia(crand.distances) = 21.532238226475325
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6889568764568769,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.8671875,"distances_sum":1492.6208607912542}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8614047410922419,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.796875,"distances_sum":2346.1270460530322}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8614047410922419,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.796875,"distances_sum":2346.1270460530322}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9786858974358976,"seconds":3.800913691520691e-5,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9453125,"distances_sum":3228.0877227185665}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8670163170163179,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.96875,"distances_sum":2335.8374302917045}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9786858974358976,"seconds":3.800913691520691e-5,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9453125,"distances_sum":3228.0877227185665}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9786858974358976,"seconds":3.800913691520691e-5,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9453125,"distances_sum":3228.0877227185665}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9786858974358976,"seconds":3.800913691520691e-5,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9453125,"distances_sum":3228.0877227185665}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7158203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7158203125,"f1":0.824717990342991,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.8359375,"distances_sum":2110.553215000695}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.376953125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.376953125,"f1":null,"seconds":3.6694109439849854e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":5.765625,"distances_sum":1062.2261607418543}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5498046875,"f1":null,"seconds":4.1816383600234985e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.8671875,"distances_sum":1540.3647275085732}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7158203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7158203125,"f1":0.824717990342991,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.8359375,"distances_sum":2110.553215000695}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9507497710622719,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.75,"distances_sum":2915.429673702569}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9330872252747259,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.59375,"distances_sum":2819.0375746649747}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8987039002664012,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.25,"distances_sum":2547.292021184395}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9211767399267405,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.390625,"distances_sum":2677.235203213271}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8423321470196479,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.8125,"distances_sum":2244.2191814124694}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9507497710622719,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.75,"distances_sum":2915.429673702569}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9693452380952383,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.828125,"distances_sum":3040.589365135159}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604739010989016,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8125,"distances_sum":3002.6512709484687}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9642742673992679,"seconds":6.416812539100647e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8125,"distances_sum":3028.2132184892357}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9688816391941397,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8828125,"distances_sum":3051.231686162568}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9693452380952383,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.828125,"distances_sum":3040.589365135159}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9693452380952383,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.828125,"distances_sum":3040.589365135159}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1474609375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1474609375,"f1":null,"seconds":3.300607204437256e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":4.21875,"distances_sum":479.68354565307976}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8505104270729278,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.078125,"distances_sum":2216.1709015593783}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.615234375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.615234375,"f1":0.7502546065046073,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.1484375,"distances_sum":1722.0006594348963}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8505104270729278,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.078125,"distances_sum":2216.1709015593783}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8766010031635039,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.1640625,"distances_sum":2414.7281618728734}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.8989505286380294,"seconds":6.206333637237549e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.4453125,"distances_sum":2575.9580641922216}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9398580586080593,"seconds":6.722286343574524e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6328125,"distances_sum":2871.3987674038635}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9398580586080593,"seconds":6.722286343574524e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6328125,"distances_sum":2871.3987674038635}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9501602564102569,"seconds":6.580725312232971e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.7734375,"distances_sum":2875.7122036725414}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9457875457875461,"seconds":6.441026926040649e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6328125,"distances_sum":2903.9570517142583}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9416583416583422,"seconds":6.750226020812988e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6328125,"distances_sum":2863.0081422563267}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.960479624542125,"seconds":6.809830665588379e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8671875,"distances_sum":2961.275802645178}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9416266025641029,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.71875,"distances_sum":2843.1495571407922}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667067307692309,"seconds":6.582587957382202e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.84375,"distances_sum":3033.1646368580405}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9667067307692309,"seconds":6.582587957382202e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.84375,"distances_sum":3033.1646368580405}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9667067307692309,"seconds":6.582587957382202e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.84375,"distances_sum":3033.1646368580405}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4462890625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4462890625,"f1":null,"seconds":4.55416738986969e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":6.359375,"distances_sum":1105.880140621419}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4462890625,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.4462890625,"f1":null,"seconds":4.55416738986969e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":6.359375,"distances_sum":1105.880140621419}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8861617549117558,"seconds":6.3534826040267944e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.203125,"distances_sum":2322.937132126764}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.810546875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.810546875,"f1":0.8861617549117558,"seconds":6.3534826040267944e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.203125,"distances_sum":2322.937132126764}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.939895521145522,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.6796875,"distances_sum":2809.3897626096514}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.939895521145522,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.6796875,"distances_sum":2809.3897626096514}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8984375,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.939895521145522,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.6796875,"distances_sum":2809.3897626096514}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.62109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.62109375,"f1":0.7550225815850823,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.2578125,"distances_sum":1728.951757232581}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.642578125,"f1":0.7718411796536805,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.28125,"distances_sum":1795.3427238426236}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.642578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.642578125,"f1":0.7718411796536805,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.28125,"distances_sum":1795.3427238426236}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.926336684149185,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.609375,"distances_sum":2685.754146927358}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.867361631424132,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.3046875,"distances_sum":2288.084478088914}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.926336684149185,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.609375,"distances_sum":2685.754146927358}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599587912087918,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8125,"distances_sum":2966.3578597600554}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9459592490842494,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7421875,"distances_sum":2843.770035233194}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9599587912087918,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8125,"distances_sum":2966.3578597600554}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9599587912087918,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8125,"distances_sum":2966.3578597600554}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7890513999889008,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.25,"distances_sum":1763.9503103371496}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8474421411921422,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.0546875,"distances_sum":2106.961247380866}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4296875,"f1":null,"seconds":4.4405460357666016e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":6.25,"distances_sum":1060.2750090980762}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.74609375,"f1":0.8474421411921422,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.0546875,"distances_sum":2106.961247380866}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9088999542124551,"seconds":6.239861249923706e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.3359375,"distances_sum":2488.288155171143}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8913867382617392,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.21875,"distances_sum":2407.0458530354813}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9088999542124551,"seconds":6.239861249923706e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.3359375,"distances_sum":2488.288155171143}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9697000915750922,"seconds":6.800517439842224e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.90625,"distances_sum":3005.3440672932907}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9675283050283053,"seconds":6.746500730514526e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.890625,"distances_sum":3007.6207826385685}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047621,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.9453125,"distances_sum":3033.011978158298}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9196517024642031,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.6875,"distances_sum":2584.5561051406435}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9452271686646693,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.75,"distances_sum":2847.9993192747356}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047621,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.9453125,"distances_sum":3033.011978158298}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047621,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.9453125,"distances_sum":3033.011978158298}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2041015625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2041015625,"f1":null,"seconds":3.3099204301834106e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.4140625,"distances_sum":488.62253278330957}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7782002719502726,"seconds":4.937872290611267e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.703125,"distances_sum":1635.744572611925}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":3.382563591003418e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.4765625,"distances_sum":530.6766296183141}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6572265625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6572265625,"f1":0.7782002719502726,"seconds":4.937872290611267e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.703125,"distances_sum":1635.744572611925}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6572265625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6572265625,"f1":0.7782002719502726,"seconds":4.937872290611267e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.703125,"distances_sum":1635.744572611925}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.6572265625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6572265625,"f1":0.7782002719502726,"seconds":4.937872290611267e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.703125,"distances_sum":1635.744572611925}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.714955357142858,"seconds":4.526227712631226e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.7734375,"distances_sum":1256.5494962589228}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.359375,"f1":null,"seconds":3.773719072341919e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.5703125,"distances_sum":713.9667806058602}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.25390625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.25390625,"f1":null,"seconds":3.593042492866516e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.875,"distances_sum":542.455825285588}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5751953125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5751953125,"f1":0.714955357142858,"seconds":4.526227712631226e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.7734375,"distances_sum":1256.5494962589228}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8593094405594415,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.4453125,"distances_sum":1799.3971317650178}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.809740433177934,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.1875,"distances_sum":1606.4305163101596}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8666926823176833,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.46875,"distances_sum":1858.9321959282163}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8666926823176833,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.46875,"distances_sum":1858.9321959282163}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9498740842490848,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.84375,"distances_sum":2407.1301341968397}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9414725899100905,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.765625,"distances_sum":2345.9884538332144}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9587485431235434,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2470.1555437579077}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9296219405594413,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.765625,"distances_sum":2241.5844189726818}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9587485431235434,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2470.1555437579077}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9587485431235434,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2470.1555437579077}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8430697774447782,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.09375,"distances_sum":1848.2323390014735}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8430697774447782,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.09375,"distances_sum":1848.2323390014735}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9527815934065937,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.75,"distances_sum":2464.012207240867}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9220987345987351,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.40625,"distances_sum":2244.4180590591077}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9527815934065937,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.75,"distances_sum":2464.012207240867}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9770089285714287,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.90625,"distances_sum":2611.555231416183}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9642513736263741,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8671875,"distances_sum":2512.6757244668997}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9770089285714287,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.90625,"distances_sum":2611.555231416183}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9770089285714287,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.90625,"distances_sum":2611.555231416183}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1767578125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1767578125,"f1":null,"seconds":3.080815076828003e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":4.625,"distances_sum":450.6912698908229}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1767578125,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.1767578125,"f1":null,"seconds":3.080815076828003e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":4.625,"distances_sum":450.6912698908229}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1767578125,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.1767578125,"f1":null,"seconds":3.080815076828003e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":4.625,"distances_sum":450.6912698908229}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.630859375,"f1":0.7589382839382847,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.296875,"distances_sum":1433.1643344841193}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2099609375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2099609375,"f1":null,"seconds":3.244727849960327e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":4.8984375,"distances_sum":479.00086981675287}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.630859375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.630859375,"f1":0.7589382839382847,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.296875,"distances_sum":1433.1643344841193}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8898845945720952,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.5625,"distances_sum":1924.25324073635}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.814453125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.814453125,"f1":0.8898845945720952,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.5625,"distances_sum":1924.25324073635}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9578926282051285,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.875,"distances_sum":2329.547851817011}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9286203379953388,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.578125,"distances_sum":2179.9204558336523}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9578926282051285,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.875,"distances_sum":2329.547851817011}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9578926282051285,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.875,"distances_sum":2329.547851817011}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.43359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.43359375,"f1":null,"seconds":3.5874545574188232e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.359375,"distances_sum":855.3281846314921}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8677286255411265,"seconds":4.9620866775512695e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.1796875,"distances_sum":1834.7726152896885}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8677286255411265,"seconds":4.9620866775512695e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.1796875,"distances_sum":1834.7726152896885}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.941769688644689,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.71875,"distances_sum":2278.8426869606374}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9485748626373628,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.75,"distances_sum":2342.3720781325655}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9047140359640367,"seconds":5.055218935012817e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4375,"distances_sum":2033.7587726596887}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9485748626373628,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.75,"distances_sum":2342.3720781325655}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9801911630036635,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9375,"distances_sum":2531.7816220408386}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9517914377289382,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.765625,"distances_sum":2345.6495376568505}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9722699175824179,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.90625,"distances_sum":2481.3185184120066}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.960067536630037,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8046875,"distances_sum":2407.1608920318417}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9671703296703297,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":2425.0516117008738}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9801911630036635,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9375,"distances_sum":2531.7816220408386}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9801911630036635,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9375,"distances_sum":2531.7816220408386}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.6968713578088584,"seconds":4.144385457038879e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":7.3125,"distances_sum":1268.8081959803746}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5595703125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5595703125,"f1":0.6968713578088584,"seconds":4.144385457038879e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":7.3125,"distances_sum":1268.8081959803746}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7080078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7080078125,"f1":0.8191142191142201,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":7.84375,"distances_sum":1692.55360508295}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8820575258075266,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.390625,"distances_sum":1974.138233141797}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8037109375,"state":{"ssize":9,"bsize":5},"perf":{"precision":1.0,"recall":0.8037109375,"f1":0.8820575258075266,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.390625,"distances_sum":1974.138233141797}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9103396603396611,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.4375,"distances_sum":2197.8198643417722}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9520146520146526,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.7578125,"distances_sum":2456.501851170065}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":12,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9261275183150188,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.5234375,"distances_sum":2226.891832466122}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9391858141858146,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.6171875,"distances_sum":2418.4596385393506}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9520146520146526,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.7578125,"distances_sum":2456.501851170065}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9520146520146526,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.7578125,"distances_sum":2456.501851170065}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":3.3620744943618774e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.4140625,"distances_sum":834.7126749512154}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8034319846819854,"seconds":4.425644874572754e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.6171875,"distances_sum":1616.494780100743}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.19921875,"f1":null,"seconds":2.691522240638733e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":4.6953125,"distances_sum":429.22449740256604}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8756753663003672,"seconds":4.569068551063538e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.0234375,"distances_sum":1940.0447583594873}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8756753663003672,"seconds":4.569068551063538e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.0234375,"distances_sum":1940.0447583594873}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8888538544788552,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.109375,"distances_sum":2064.4178232424797}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9066220238095245,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.234375,"distances_sum":2127.4859704807013}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83984375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.83984375,"f1":0.9066220238095245,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.234375,"distances_sum":2127.4859704807013}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9269834332334338,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.53125,"distances_sum":2322.1373532488396}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9611263736263742,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8046875,"distances_sum":2526.0179528237218}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9422676282051288,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.65625,"distances_sum":2414.0261088727107}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9611263736263742,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8046875,"distances_sum":2526.0179528237218}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9611263736263742,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8046875,"distances_sum":2526.0179528237218}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5888671875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5888671875,"f1":0.7245105588855595,"seconds":4.172325134277344e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":7.4765625,"distances_sum":1281.793575684247}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6083984375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.6083984375,"f1":0.7369332056832064,"seconds":4.112720489501953e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":7.53125,"distances_sum":1380.1774486024233}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6083984375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.6083984375,"f1":0.7369332056832064,"seconds":4.112720489501953e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":7.53125,"distances_sum":1380.1774486024233}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9315590659340665,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":8.75,"distances_sum":2276.317071599893}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9310382326007329,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":8.71875,"distances_sum":2324.2157597518058}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9310382326007329,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":8.71875,"distances_sum":2324.2157597518058}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9661286630036635,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":8.9296875,"distances_sum":2526.8704882502975}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9695684523809528,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":8.90625,"distances_sum":2573.033431177101}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9695684523809528,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":8.90625,"distances_sum":2573.033431177101}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9695684523809528,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":8.90625,"distances_sum":2573.033431177101}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.62890625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.62890625,"f1":0.7610164141414151,"seconds":4.492700099945068e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.3046875,"distances_sum":1408.2831392661565}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.623046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.623046875,"f1":0.7539465742590751,"seconds":4.490837454795837e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.4453125,"distances_sum":1365.4561008986293}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.62890625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.62890625,"f1":0.7610164141414151,"seconds":4.492700099945068e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.3046875,"distances_sum":1408.2831392661565}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9471440018315023,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.71875,"distances_sum":2385.987030603901}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9360436438561445,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.6875,"distances_sum":2298.0852572185913}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9471440018315023,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.71875,"distances_sum":2385.987030603901}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9547161172161178,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.75,"distances_sum":2444.1955284074434}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9558436355311362,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.796875,"distances_sum":2424.9480046768776}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9749084249084252,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.890625,"distances_sum":2558.717189620856}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9749084249084252,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.890625,"distances_sum":2558.717189620856}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9749084249084252,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.890625,"distances_sum":2558.717189620856}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2197265625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2197265625,"f1":null,"seconds":3.0901283025741577e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.84375,"distances_sum":434.15374148926423}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7985930735930745,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.953125,"distances_sum":1537.3688583487817}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.21875,"f1":null,"seconds":2.993270754814148e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.7734375,"distances_sum":441.4697282188217}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.7985930735930745,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.953125,"distances_sum":1537.3688583487817}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.922284486346987,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6640625,"distances_sum":2129.283277301696}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9033513361638366,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.421875,"distances_sum":2028.0579167138405}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8662109375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8662109375,"f1":0.922284486346987,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6640625,"distances_sum":2129.283277301696}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9265911172161181,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6328125,"distances_sum":2179.9900310041457}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9364125457875463,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.671875,"distances_sum":2249.539105752663}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.958877060439561,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":2404.594979061508}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9444768772893779,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.71875,"distances_sum":2294.5073608436874}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.958877060439561,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":2404.594979061508}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.958877060439561,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":2404.594979061508}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8748969780219786,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.5,"distances_sum":1836.139074610105}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8748969780219786,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.5,"distances_sum":1836.139074610105}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9617075632700633,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.890625,"distances_sum":2428.54278238806}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9617075632700633,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.890625,"distances_sum":2428.54278238806}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":6,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857144,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9765625,"distances_sum":2529.647682647923}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9693681318681322,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9140625,"distances_sum":2472.093649701864}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857144,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9765625,"distances_sum":2529.647682647923}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857144,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9765625,"distances_sum":2529.647682647923}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":3.6712735891342163e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.5,"distances_sum":829.3313802944489}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8770151723276731,"seconds":4.881992936134338e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.9921875,"distances_sum":1772.8689993254254}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8770151723276731,"seconds":4.881992936134338e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.9921875,"distances_sum":1772.8689993254254}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9645089285714292,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.859375,"distances_sum":2289.8788794559446}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9154761904761913,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.09375,"distances_sum":1956.0943420116055}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9645089285714292,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.859375,"distances_sum":2289.8788794559446}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739068223443226,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.890625,"distances_sum":2346.5391947782646}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9768601190476193,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.953125,"distances_sum":2362.516706120194}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9675995879120884,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8671875,"distances_sum":2305.187327036166}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9702209249084254,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8671875,"distances_sum":2328.6120694009646}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9768601190476193,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.953125,"distances_sum":2362.516706120194}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9768601190476193,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.953125,"distances_sum":2362.516706120194}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5498046875,"f1":null,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.3515625,"distances_sum":1034.9899608816306}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2421875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2421875,"f1":null,"seconds":3.5446137189865112e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.5546875,"distances_sum":443.8575942826384}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.41015625,"f1":null,"seconds":3.810971975326538e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.5,"distances_sum":742.070836013965}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5498046875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5498046875,"f1":null,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.3515625,"distances_sum":1034.9899608816306}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9416437728937733,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7109375,"distances_sum":2093.4825825061134}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7130145895770902,"seconds":4.420056939125061e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.4140625,"distances_sum":1090.2533755778031}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8566943473193479,"seconds":4.781410098075867e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.0859375,"distances_sum":1601.7085191529293}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8794991466866475,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.203125,"distances_sum":1701.6614302789944}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8107744685869692,"seconds":4.995614290237427e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.96875,"distances_sum":1458.3109835346088}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7910119394494404,"seconds":4.67151403427124e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.8359375,"distances_sum":1374.120997937754}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.8007704101454108,"seconds":4.6622008085250854e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.921875,"distances_sum":1425.0825108226225}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9416437728937733,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7109375,"distances_sum":2093.4825825061134}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9595295329670335,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.875,"distances_sum":2184.2221054062647}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9531510156510162,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7734375,"distances_sum":2179.9655281812443}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9429429945054949,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.71875,"distances_sum":2098.0093141266293}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9595295329670335,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.875,"distances_sum":2184.2221054062647}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9595295329670335,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.875,"distances_sum":2184.2221054062647}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3779296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3779296875,"f1":null,"seconds":3.8035213947296143e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.109375,"distances_sum":721.9051225920422}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.9296875,"distances_sum":767.7465533354535}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8086299117549126,"seconds":4.766508936882019e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.0546875,"distances_sum":1508.2725137527955}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.8086299117549126,"seconds":4.766508936882019e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.0546875,"distances_sum":1508.2725137527955}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9388907967032974,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.78125,"distances_sum":2173.9312815616813}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9123834498834504,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.4921875,"distances_sum":2022.5111445866944}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8691332972582982,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.3515625,"distances_sum":1801.5711108899995}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8117328851703859,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.078125,"distances_sum":1563.3186639822163}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9388907967032974,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.78125,"distances_sum":2173.9312815616813}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9641197344322349,"seconds":6.3087791204452515e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8984375,"distances_sum":2350.3865662593826}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9646405677655683,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.875,"distances_sum":2348.9330395413754}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9670215201465207,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.90625,"distances_sum":2381.3941869567525}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9563504204129208,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.828125,"distances_sum":2323.2946110926127}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9670215201465207,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.90625,"distances_sum":2381.3941869567525}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9670215201465207,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.90625,"distances_sum":2381.3941869567525}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5830078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5830078125,"f1":0.7203085109335116,"seconds":3.973022103309631e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.140625,"distances_sum":1270.1878119797043}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.848123751248752,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.75,"distances_sum":1759.5205454037068}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5322265625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5322265625,"f1":0.6725028443778449,"seconds":3.956258296966553e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.90625,"distances_sum":1157.679776425437}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.848123751248752,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.75,"distances_sum":1759.5205454037068}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8909600815850823,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.1171875,"distances_sum":2009.8176321122062}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8570518023643031,"seconds":5.159527063369751e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.8671875,"distances_sum":1793.0856341156812}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9553228021978027,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.703125,"distances_sum":2410.714980179902}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9041869588744594,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.25,"distances_sum":2082.241978768596}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9055663086913095,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.2109375,"distances_sum":2050.5570633710804}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9553228021978027,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.703125,"distances_sum":2410.714980179902}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9699461996336998,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8515625,"distances_sum":2491.035185505566}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9782738095238099,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9296875,"distances_sum":2539.608431100138}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599015567765573,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7734375,"distances_sum":2440.076133910141}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.95917467948718,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8203125,"distances_sum":2402.452146736322}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9600503663003668,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7578125,"distances_sum":2450.621260031719}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9608516483516488,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7109375,"distances_sum":2465.002961869296}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9618532509157512,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7890625,"distances_sum":2446.9957269470588}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9782738095238099,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9296875,"distances_sum":2539.608431100138}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9782738095238099,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9296875,"distances_sum":2539.608431100138}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.864074467199468,"seconds":4.8745423555374146e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.1640625,"distances_sum":1693.5738124958727}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.864074467199468,"seconds":4.8745423555374146e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.1640625,"distances_sum":1693.5738124958727}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9095784423909431,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.25,"distances_sum":1955.5347888950462}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9033253205128212,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.1328125,"distances_sum":1884.5073533942445}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9095784423909431,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.25,"distances_sum":1955.5347888950462}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9372081043956052,"seconds":7.00727105140686e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7265625,"distances_sum":2123.3140854962085}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9569081959706964,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.796875,"distances_sum":2271.0945154366295}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679544413919419,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.828125,"distances_sum":2350.8839308598367}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9679544413919419,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.828125,"distances_sum":2350.8839308598367}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9679544413919419,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.828125,"distances_sum":2350.8839308598367}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5126953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5126953125,"f1":0.662613081363082,"seconds":3.8016587495803833e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":6.71875,"distances_sum":1168.0259666434943}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5126953125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5126953125,"f1":0.662613081363082,"seconds":3.8016587495803833e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":6.71875,"distances_sum":1168.0259666434943}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.6572265625,"f1":null,"seconds":4.455447196960449e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":7.34375,"distances_sum":1542.8524235765701}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9162176365301375,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.2578125,"distances_sum":2175.8651252507075}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9384214743589748,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.6015625,"distances_sum":2310.850437853825}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8345826048951058,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":7.828125,"distances_sum":1760.0120561848985}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9384214743589748,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.6015625,"distances_sum":2310.850437853825}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9595123626373632,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.7890625,"distances_sum":2439.4712356483797}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9543586621711627,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.75,"distances_sum":2443.837719514599}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9595123626373632,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.7890625,"distances_sum":2439.4712356483797}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9595123626373632,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.7890625,"distances_sum":2439.4712356483797}}, n: 9
inertia(cfft.distances) = 18.945471769852716
inertia(cdnet.distances) = 24.815454972541914
inertia(crand.distances) = 20.42236355047069
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9199999999999999
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8822222222222221
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9244444444444445
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8799999999999999
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9400000000000001
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9155555555555556
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8933333333333332
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.88
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9266666666666666
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9355555555555556
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444443
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9177777777777778
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9155555555555556
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 3, 2, 3, 3, 1, 2, 3, 3, 3, 3, 2, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 13]]
** centroid: 10, normalized-entropy: 0.6962122601251459, [(2, 3), (3, 13)]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 3, 2, 3, 3, 2, 3, 2, 1]
acc = 0.9333333333333333
*** starting iteration: 1; err: [Inf, 0.38806667033210973] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38806667033210973, 0.19534129184447974] ***
*** starting iteration: 2; err: [Inf, 0.38806667033210973, 0.19534129184447974] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332] ***
*** starting iteration: 3; err: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425] ***
*** starting iteration: 4; err: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073] ***
*** starting iteration: 5; err: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655] ***
*** starting iteration: 6; err: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655, 0.16209971251282457] ***
*** finished computation of 12 references, err: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655, 0.16209971251282457] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.46690000519525343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46690000519525343, 0.2708600044311194] ***
*** starting iteration: 2; err: [Inf, 0.46690000519525343, 0.2708600044311194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46690000519525343, 0.2708600044311194, 0.24703300606702985] ***
*** starting iteration: 3; err: [Inf, 0.46690000519525343, 0.2708600044311194, 0.24703300606702985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46690000519525343, 0.2708600044311194, 0.24703300606702985, 0.22851682338087723] ***
*** starting iteration: 4; err: [Inf, 0.46690000519525343, 0.2708600044311194, 0.24703300606702985, 0.22851682338087723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46690000519525343, 0.2708600044311194, 0.24703300606702985, 0.22851682338087723, 0.22637540043407536] ***
*** starting iteration: 5; err: [Inf, 0.46690000519525343, 0.2708600044311194, 0.24703300606702985, 0.22851682338087723, 0.22637540043407536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46690000519525343, 0.2708600044311194, 0.24703300606702985, 0.22851682338087723, 0.22637540043407536, 0.22360843668492084] ***
*** starting iteration: 6; err: [Inf, 0.46690000519525343, 0.2708600044311194, 0.24703300606702985, 0.22851682338087723, 0.22637540043407536, 0.22360843668492084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46690000519525343, 0.2708600044311194, 0.24703300606702985, 0.22851682338087723, 0.22637540043407536, 0.22360843668492084, 0.214676411281723] ***
*** starting iteration: 7; err: [Inf, 0.46690000519525343, 0.2708600044311194, 0.24703300606702985, 0.22851682338087723, 0.22637540043407536, 0.22360843668492084, 0.214676411281723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46690000519525343, 0.2708600044311194, 0.24703300606702985, 0.22851682338087723, 0.22637540043407536, 0.22360843668492084, 0.214676411281723, 0.20898529093339716] ***
*** starting iteration: 8; err: [Inf, 0.46690000519525343, 0.2708600044311194, 0.24703300606702985, 0.22851682338087723, 0.22637540043407536, 0.22360843668492084, 0.214676411281723, 0.20898529093339716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46690000519525343, 0.2708600044311194, 0.24703300606702985, 0.22851682338087723, 0.22637540043407536, 0.22360843668492084, 0.214676411281723, 0.20898529093339716, 0.20841522866400297] ***
*** finished computation of 7 references, err: [Inf, 0.46690000519525343, 0.2708600044311194, 0.24703300606702985, 0.22851682338087723, 0.22637540043407536, 0.22360843668492084, 0.214676411281723, 0.20898529093339716, 0.20841522866400297] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 7, 10]]
** centroid: 5, normalized-entropy: 0.9774178175281716, [(2, 7), (3, 10)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4073548853944061] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4073548853944061, 0.20440085760545576] ***
*** starting iteration: 2; err: [Inf, 0.4073548853944061, 0.20440085760545576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4073548853944061, 0.20440085760545576, 0.19745174039114757] ***
*** starting iteration: 3; err: [Inf, 0.4073548853944061, 0.20440085760545576, 0.19745174039114757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4073548853944061, 0.20440085760545576, 0.19745174039114757, 0.19732331635145706] ***
*** finished computation of 7 references, err: [Inf, 0.4073548853944061, 0.20440085760545576, 0.19745174039114757, 0.19732331635145706] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 4, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5816000010038104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5816000010038104, 0.3068239596571268] ***
*** starting iteration: 2; err: [Inf, 0.5816000010038104, 0.3068239596571268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5816000010038104, 0.3068239596571268, 0.2838228129872827] ***
*** starting iteration: 3; err: [Inf, 0.5816000010038104, 0.3068239596571268, 0.2838228129872827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5816000010038104, 0.3068239596571268, 0.2838228129872827, 0.2670632105401332] ***
*** finished computation of 7 references, err: [Inf, 0.5816000010038104, 0.3068239596571268, 0.2838228129872827, 0.2670632105401332] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 10]]
** centroid: 5, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5015000012767165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5015000012767165, 0.2868464794007102] ***
*** starting iteration: 2; err: [Inf, 0.5015000012767165, 0.2868464794007102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5015000012767165, 0.2868464794007102, 0.27700421622764493] ***
*** starting iteration: 3; err: [Inf, 0.5015000012767165, 0.2868464794007102, 0.27700421622764493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5015000012767165, 0.2868464794007102, 0.27700421622764493, 0.2719383642632608] ***
*** finished computation of 7 references, err: [Inf, 0.5015000012767165, 0.2868464794007102, 0.27700421622764493, 0.2719383642632608] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 6]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 12), (3, 6)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8109999970745966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8109999970745966, 0.35219733106674384] ***
*** starting iteration: 2; err: [Inf, 0.8109999970745966, 0.35219733106674384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8109999970745966, 0.35219733106674384, 0.26397483478486694] ***
*** starting iteration: 3; err: [Inf, 0.8109999970745966, 0.35219733106674384, 0.26397483478486694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8109999970745966, 0.35219733106674384, 0.26397483478486694, 0.2410476343063957] ***
*** starting iteration: 4; err: [Inf, 0.8109999970745966, 0.35219733106674384, 0.26397483478486694, 0.2410476343063957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8109999970745966, 0.35219733106674384, 0.26397483478486694, 0.2410476343063957, 0.2314367341355025] ***
*** starting iteration: 5; err: [Inf, 0.8109999970745966, 0.35219733106674384, 0.26397483478486694, 0.2410476343063957, 0.2314367341355025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8109999970745966, 0.35219733106674384, 0.26397483478486694, 0.2410476343063957, 0.2314367341355025, 0.22843357969125855] ***
*** starting iteration: 6; err: [Inf, 0.8109999970745966, 0.35219733106674384, 0.26397483478486694, 0.2410476343063957, 0.2314367341355025, 0.22843357969125855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8109999970745966, 0.35219733106674384, 0.26397483478486694, 0.2410476343063957, 0.2314367341355025, 0.22843357969125855, 0.22628015175218155] ***
*** starting iteration: 7; err: [Inf, 0.8109999970745966, 0.35219733106674384, 0.26397483478486694, 0.2410476343063957, 0.2314367341355025, 0.22843357969125855, 0.22628015175218155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8109999970745966, 0.35219733106674384, 0.26397483478486694, 0.2410476343063957, 0.2314367341355025, 0.22843357969125855, 0.22628015175218155, 0.2257335890535758] ***
*** finished computation of 7 references, err: [Inf, 0.8109999970745966, 0.35219733106674384, 0.26397483478486694, 0.2410476343063957, 0.2314367341355025, 0.22843357969125855, 0.22628015175218155, 0.2257335890535758] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 15]]
** centroid: 7, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6030000063175177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6030000063175177, 0.3655470979309608] ***
*** starting iteration: 2; err: [Inf, 0.6030000063175177, 0.3655470979309608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6030000063175177, 0.3655470979309608, 0.31419526793250013] ***
*** starting iteration: 3; err: [Inf, 0.6030000063175177, 0.3655470979309608, 0.31419526793250013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6030000063175177, 0.3655470979309608, 0.31419526793250013, 0.27753803393442117] ***
*** starting iteration: 4; err: [Inf, 0.6030000063175177, 0.3655470979309608, 0.31419526793250013, 0.27753803393442117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6030000063175177, 0.3655470979309608, 0.31419526793250013, 0.27753803393442117, 0.2670389300266674] ***
*** starting iteration: 5; err: [Inf, 0.6030000063175177, 0.3655470979309608, 0.31419526793250013, 0.27753803393442117, 0.2670389300266674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6030000063175177, 0.3655470979309608, 0.31419526793250013, 0.27753803393442117, 0.2670389300266674, 0.2662103098537412] ***
*** finished computation of 7 references, err: [Inf, 0.6030000063175177, 0.3655470979309608, 0.31419526793250013, 0.27753803393442117, 0.2670389300266674, 0.2662103098537412] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 6, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 10.547000138641605] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.547000138641605, 3.106871502904619] ***
*** starting iteration: 2; err: [Inf, 10.547000138641605, 3.106871502904619] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.547000138641605, 3.106871502904619, 2.1097238401320335] ***
*** starting iteration: 3; err: [Inf, 10.547000138641605, 3.106871502904619, 2.1097238401320335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.547000138641605, 3.106871502904619, 2.1097238401320335, 1.0024052125269334] ***
*** finished computation of 3 references, err: [Inf, 10.547000138641605, 3.106871502904619, 2.1097238401320335, 1.0024052125269334] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [34, 3, 0]]
** centroid: 2, normalized-entropy: 0.40597703847557104, [(1, 34), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 25]]
** centroid: 3, normalized-entropy: 0.9917033083725819, [(2, 31), (3, 25)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.496899997370213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.496899997370213, 0.7067822419427692] ***
*** starting iteration: 2; err: [Inf, 1.496899997370213, 0.7067822419427692] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.496899997370213, 0.7067822419427692, 0.5731630496375364] ***
*** starting iteration: 3; err: [Inf, 1.496899997370213, 0.7067822419427692, 0.5731630496375364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.496899997370213, 0.7067822419427692, 0.5731630496375364, 0.5130881969752079] ***
*** finished computation of 3 references, err: [Inf, 1.496899997370213, 0.7067822419427692, 0.5731630496375364, 0.5130881969752079] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 9]]
** centroid: 3, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3562000148165345] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3562000148165345, 0.7150628303726876] ***
*** starting iteration: 2; err: [Inf, 1.3562000148165345, 0.7150628303726876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3562000148165345, 0.7150628303726876, 0.659617584223188] ***
*** starting iteration: 3; err: [Inf, 1.3562000148165345, 0.7150628303726876, 0.659617584223188] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3562000148165345, 0.7150628303726876, 0.659617584223188, 0.6125988103935658] ***
*** finished computation of 3 references, err: [Inf, 1.3562000148165345, 0.7150628303726876, 0.659617584223188, 0.6125988103935658] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 13]]
** centroid: 2, normalized-entropy: 0.8672816222000259, [(2, 32), (3, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5382999976146876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5382999976146876, 0.2850488635340648] ***
*** starting iteration: 2; err: [Inf, 0.5382999976146876, 0.2850488635340648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5382999976146876, 0.2850488635340648, 0.2602333557503324] ***
*** starting iteration: 3; err: [Inf, 0.5382999976146876, 0.2850488635340648, 0.2602333557503324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5382999976146876, 0.2850488635340648, 0.2602333557503324, 0.24558831041159848] ***
*** finished computation of 7 references, err: [Inf, 0.5382999976146876, 0.2850488635340648, 0.2602333557503324, 0.24558831041159848] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 18]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44570000340271676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44570000340271676, 0.2767354296843062] ***
*** starting iteration: 2; err: [Inf, 0.44570000340271676, 0.2767354296843062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44570000340271676, 0.2767354296843062, 0.27446048742293855] ***
*** starting iteration: 3; err: [Inf, 0.44570000340271676, 0.2767354296843062, 0.27446048742293855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44570000340271676, 0.2767354296843062, 0.27446048742293855, 0.2707137218693274] ***
*** finished computation of 7 references, err: [Inf, 0.44570000340271676, 0.2767354296843062, 0.27446048742293855, 0.2707137218693274] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 12]]
** centroid: 5, normalized-entropy: 0.9910760598382222, [(2, 15), (3, 12)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8424000017095787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8424000017095787, 0.3385005085093829] ***
*** starting iteration: 2; err: [Inf, 0.8424000017095787, 0.3385005085093829] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8424000017095787, 0.3385005085093829, 0.30962577504683697] ***
*** starting iteration: 3; err: [Inf, 0.8424000017095787, 0.3385005085093829, 0.30962577504683697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8424000017095787, 0.3385005085093829, 0.30962577504683697, 0.30422977261470807] ***
*** finished computation of 7 references, err: [Inf, 0.8424000017095787, 0.3385005085093829, 0.30962577504683697, 0.30422977261470807] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 2, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 20]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 8), (3, 20)]
*** center 4: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1467503088643938] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1467503088643938, 0.6028025409880733] ***
*** finished computation of 3 references, err: [Inf, 1.1467503088643938, 0.6028025409880733] ***
*** center 1: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 32]]
** centroid: 3, normalized-entropy: 0.9993375041688846, [(2, 34), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7620385014991633] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7620385014991633, 0.6119351358974008] ***
*** finished computation of 3 references, err: [Inf, 1.7620385014991633, 0.6119351358974008] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [5, 5, 0]]
** centroid: 2, normalized-entropy: 1.0, [(1, 5), (2, 5)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 32]]
** centroid: 3, normalized-entropy: 0.9967916319816367, [(2, 28), (3, 32)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 9.0584332478462] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.0584332478462, 0.9149475038153382] ***
*** finished computation of 3 references, err: [Inf, 9.0584332478462, 0.9149475038153382] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 36]]
** centroid: 2, normalized-entropy: 0.9916178297881032, [(2, 29), (3, 36)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7919899638384031] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7919899638384031, 0.6107514126805955] ***
*** starting iteration: 2; err: [Inf, 1.7919899638384031, 0.6107514126805955] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7919899638384031, 0.6107514126805955, 0.5818305140190163] ***
*** starting iteration: 3; err: [Inf, 1.7919899638384031, 0.6107514126805955, 0.5818305140190163] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7919899638384031, 0.6107514126805955, 0.5818305140190163, 0.5780381324323288] ***
*** starting iteration: 4; err: [Inf, 1.7919899638384031, 0.6107514126805955, 0.5818305140190163, 0.5780381324323288] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7919899638384031, 0.6107514126805955, 0.5818305140190163, 0.5780381324323288, 0.5777143642792271] ***
*** finished computation of 3 references, err: [Inf, 1.7919899638384031, 0.6107514126805955, 0.5818305140190163, 0.5780381324323288, 0.5777143642792271] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 32]]
** centroid: 3, normalized-entropy: 0.9993375041688846, [(2, 34), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9855424345950222] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9855424345950222, 0.4112213127230234] ***
*** starting iteration: 2; err: [Inf, 0.9855424345950222, 0.4112213127230234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9855424345950222, 0.4112213127230234, 0.3629016469171507] ***
*** starting iteration: 3; err: [Inf, 0.9855424345950222, 0.4112213127230234, 0.3629016469171507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9855424345950222, 0.4112213127230234, 0.3629016469171507, 0.3504794575035628] ***
*** starting iteration: 4; err: [Inf, 0.9855424345950222, 0.4112213127230234, 0.3629016469171507, 0.3504794575035628] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9855424345950222, 0.4112213127230234, 0.3629016469171507, 0.3504794575035628, 0.34625566524841406] ***
*** starting iteration: 5; err: [Inf, 0.9855424345950222, 0.4112213127230234, 0.3629016469171507, 0.3504794575035628, 0.34625566524841406] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9855424345950222, 0.4112213127230234, 0.3629016469171507, 0.3504794575035628, 0.34625566524841406, 0.3441086674930189] ***
*** starting iteration: 6; err: [Inf, 0.9855424345950222, 0.4112213127230234, 0.3629016469171507, 0.3504794575035628, 0.34625566524841406, 0.3441086674930189] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9855424345950222, 0.4112213127230234, 0.3629016469171507, 0.3504794575035628, 0.34625566524841406, 0.3441086674930189, 0.339749267831851] ***
*** starting iteration: 7; err: [Inf, 0.9855424345950222, 0.4112213127230234, 0.3629016469171507, 0.3504794575035628, 0.34625566524841406, 0.3441086674930189, 0.339749267831851] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9855424345950222, 0.4112213127230234, 0.3629016469171507, 0.3504794575035628, 0.34625566524841406, 0.3441086674930189, 0.339749267831851, 0.33539546831280986] ***
*** starting iteration: 8; err: [Inf, 0.9855424345950222, 0.4112213127230234, 0.3629016469171507, 0.3504794575035628, 0.34625566524841406, 0.3441086674930189, 0.339749267831851, 0.33539546831280986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9855424345950222, 0.4112213127230234, 0.3629016469171507, 0.3504794575035628, 0.34625566524841406, 0.3441086674930189, 0.339749267831851, 0.33539546831280986, 0.33539546831280986] ***
*** finished computation of 3 references, err: [Inf, 0.9855424345950222, 0.4112213127230234, 0.3629016469171507, 0.3504794575035628, 0.34625566524841406, 0.3441086674930189, 0.339749267831851, 0.33539546831280986, 0.33539546831280986] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 3]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(2, 30), (3, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 29]]
** centroid: 3, normalized-entropy: 0.44886448872302936, [(2, 3), (3, 29)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8656487097941156] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8656487097941156, 0.7123296755358512] ***
*** starting iteration: 2; err: [Inf, 0.8656487097941156, 0.7123296755358512] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8656487097941156, 0.7123296755358512, 0.71138418222059] ***
*** finished computation of 3 references, err: [Inf, 0.8656487097941156, 0.7123296755358512, 0.71138418222059] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [17, 3, 0]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(1, 17), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 36]]
** centroid: 2, normalized-entropy: 0.9940302114769566, [(2, 30), (3, 36)]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4345000032796815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4345000032796815, 0.9057875906534808] ***
*** starting iteration: 2; err: [Inf, 1.4345000032796815, 0.9057875906534808] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4345000032796815, 0.9057875906534808, 0.8872677301539447] ***
*** starting iteration: 3; err: [Inf, 1.4345000032796815, 0.9057875906534808, 0.8872677301539447] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4345000032796815, 0.9057875906534808, 0.8872677301539447, 0.8721501217783566] ***
*** starting iteration: 4; err: [Inf, 1.4345000032796815, 0.9057875906534808, 0.8872677301539447, 0.8721501217783566] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4345000032796815, 0.9057875906534808, 0.8872677301539447, 0.8721501217783566, 0.8670132203968174] ***
*** starting iteration: 5; err: [Inf, 1.4345000032796815, 0.9057875906534808, 0.8872677301539447, 0.8721501217783566, 0.8670132203968174] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4345000032796815, 0.9057875906534808, 0.8872677301539447, 0.8721501217783566, 0.8670132203968174, 0.8659494117818265] ***
*** starting iteration: 6; err: [Inf, 1.4345000032796815, 0.9057875906534808, 0.8872677301539447, 0.8721501217783566, 0.8670132203968174, 0.8659494117818265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4345000032796815, 0.9057875906534808, 0.8872677301539447, 0.8721501217783566, 0.8670132203968174, 0.8659494117818265, 0.8657679188145668] ***
*** finished computation of 3 references, err: [Inf, 1.4345000032796815, 0.9057875906534808, 0.8872677301539447, 0.8721501217783566, 0.8670132203968174, 0.8659494117818265, 0.8657679188145668] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 32]]
** centroid: 3, normalized-entropy: 0.9993375041688846, [(2, 34), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.692400022432709] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.692400022432709, 0.6541748094652697] ***
*** starting iteration: 2; err: [Inf, 2.692400022432709, 0.6541748094652697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.692400022432709, 0.6541748094652697, 0.5271001430016345] ***
*** starting iteration: 3; err: [Inf, 2.692400022432709, 0.6541748094652697, 0.5271001430016345] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.692400022432709, 0.6541748094652697, 0.5271001430016345, 0.5011483395265348] ***
*** starting iteration: 4; err: [Inf, 2.692400022432709, 0.6541748094652697, 0.5271001430016345, 0.5011483395265348] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.692400022432709, 0.6541748094652697, 0.5271001430016345, 0.5011483395265348, 0.49714461501679325] ***
*** starting iteration: 5; err: [Inf, 2.692400022432709, 0.6541748094652697, 0.5271001430016345, 0.5011483395265348, 0.49714461501679325] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.692400022432709, 0.6541748094652697, 0.5271001430016345, 0.5011483395265348, 0.49714461501679325, 0.4962387984717067] ***
*** finished computation of 3 references, err: [Inf, 2.692400022432709, 0.6541748094652697, 0.5271001430016345, 0.5011483395265348, 0.49714461501679325, 0.4962387984717067] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 6]]
** centroid: 1, normalized-entropy: 0.6394571324851642, [(2, 31), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2542999917884372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2542999917884372, 0.5587118154267016] ***
*** starting iteration: 2; err: [Inf, 1.2542999917884372, 0.5587118154267016] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2542999917884372, 0.5587118154267016, 0.5581206351569027] ***
*** finished computation of 3 references, err: [Inf, 1.2542999917884372, 0.5587118154267016, 0.5581206351569027] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 2, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.44432541738480025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44432541738480025, 0.2778597971685956] ***
*** finished computation of 7 references, err: [Inf, 0.44432541738480025, 0.2778597971685956] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 17]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(2, 4), (3, 17)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2651864003915723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2651864003915723, 0.1952812900912715] ***
*** finished computation of 7 references, err: [Inf, 0.2651864003915723, 0.1952812900912715] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 16]]
** centroid: 3, normalized-entropy: 0.9922666387194963, [(2, 13), (3, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4080843223817287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4080843223817287, 0.22658480006959184] ***
*** finished computation of 7 references, err: [Inf, 0.4080843223817287, 0.22658480006959184] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 14]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 3, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 6, 5]]
** centroid: 4, normalized-entropy: 0.9940302114769566, [(2, 6), (3, 5)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9684999919326657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9684999919326657, 0.4893662341735406] ***
*** starting iteration: 2; err: [Inf, 0.9684999919326657, 0.4893662341735406] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9684999919326657, 0.4893662341735406, 0.4873070988626742] ***
*** starting iteration: 3; err: [Inf, 0.9684999919326657, 0.4893662341735406, 0.4873070988626742] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9684999919326657, 0.4893662341735406, 0.4873070988626742, 0.4863941187370925] ***
*** finished computation of 3 references, err: [Inf, 0.9684999919326657, 0.4893662341735406, 0.4873070988626742, 0.4863941187370925] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 10]]
** centroid: 2, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.634999984414197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.634999984414197, 1.2945621873407622] ***
*** starting iteration: 2; err: [Inf, 4.634999984414197, 1.2945621873407622] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.634999984414197, 1.2945621873407622, 0.6030105722488837] ***
*** starting iteration: 3; err: [Inf, 4.634999984414197, 1.2945621873407622, 0.6030105722488837] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.634999984414197, 1.2945621873407622, 0.6030105722488837, 0.5060291900351064] ***
*** finished computation of 3 references, err: [Inf, 4.634999984414197, 1.2945621873407622, 0.6030105722488837, 0.5060291900351064] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3603000017852518] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3603000017852518, 0.6224457425957278] ***
*** starting iteration: 2; err: [Inf, 1.3603000017852518, 0.6224457425957278] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3603000017852518, 0.6224457425957278, 0.6077316843106754] ***
*** starting iteration: 3; err: [Inf, 1.3603000017852518, 0.6224457425957278, 0.6077316843106754] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3603000017852518, 0.6224457425957278, 0.6077316843106754, 0.5911194390461134] ***
*** finished computation of 3 references, err: [Inf, 1.3603000017852518, 0.6224457425957278, 0.6077316843106754, 0.5911194390461134] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 7]]
** centroid: 1, normalized-entropy: 0.699772221773307, [(2, 30), (3, 7)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 29]]
** centroid: 2, normalized-entropy: 0.44886448872302936, [(2, 3), (3, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4699000024533477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4699000024533477, 0.8809480447902241] ***
*** starting iteration: 2; err: [Inf, 1.4699000024533477, 0.8809480447902241] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4699000024533477, 0.8809480447902241, 0.8742911077175143] ***
*** starting iteration: 3; err: [Inf, 1.4699000024533477, 0.8809480447902241, 0.8742911077175143] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4699000024533477, 0.8809480447902241, 0.8742911077175143, 0.8742911077175143] ***
*** finished computation of 3 references, err: [Inf, 1.4699000024533477, 0.8809480447902241, 0.8742911077175143, 0.8742911077175143] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [11, 1, 0]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(1, 11), (2, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 32]]
** centroid: 3, normalized-entropy: 0.9998292601233937, [(2, 33), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4071000096542445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4071000096542445, 0.9159298211253315] ***
*** starting iteration: 2; err: [Inf, 1.4071000096542445, 0.9159298211253315] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4071000096542445, 0.9159298211253315, 0.9024673096786304] ***
*** starting iteration: 3; err: [Inf, 1.4071000096542445, 0.9159298211253315, 0.9024673096786304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4071000096542445, 0.9159298211253315, 0.9024673096786304, 0.9024673096786304] ***
*** finished computation of 3 references, err: [Inf, 1.4071000096542445, 0.9159298211253315, 0.9024673096786304, 0.9024673096786304] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [12, 4, 0]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(1, 12), (2, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 32]]
** centroid: 3, normalized-entropy: 0.9982545693874832, [(2, 29), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2473999804924034] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2473999804924034, 1.0725853712077542] ***
*** starting iteration: 2; err: [Inf, 1.2473999804924034, 1.0725853712077542] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2473999804924034, 1.0725853712077542, 1.0587081996518242] ***
*** starting iteration: 3; err: [Inf, 1.2473999804924034, 1.0725853712077542, 1.0587081996518242] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2473999804924034, 1.0725853712077542, 1.0587081996518242, 1.0587081996518242] ***
*** finished computation of 3 references, err: [Inf, 1.2473999804924034, 1.0725853712077542, 1.0587081996518242, 1.0587081996518242] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 36]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(2, 30), (3, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [14, 3, 0]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(1, 14), (2, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0623000183492468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0623000183492468, 0.6059226295683294] ***
*** starting iteration: 2; err: [Inf, 1.0623000183492468, 0.6059226295683294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0623000183492468, 0.6059226295683294, 0.5674696946111832] ***
*** starting iteration: 3; err: [Inf, 1.0623000183492468, 0.6059226295683294, 0.5674696946111832] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0623000183492468, 0.6059226295683294, 0.5674696946111832, 0.5506783128956255] ***
*** finished computation of 3 references, err: [Inf, 1.0623000183492468, 0.6059226295683294, 0.5674696946111832, 0.5506783128956255] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 31]]
** centroid: 1, normalized-entropy: 0.6892019851173655, [(2, 7), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 1]]
** centroid: 3, normalized-entropy: 0.2222848306856879, [(2, 27), (3, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4049000008308172] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4049000008308172, 0.5083805325549775] ***
*** starting iteration: 2; err: [Inf, 1.4049000008308172, 0.5083805325549775] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4049000008308172, 0.5083805325549775, 0.49877743908069105] ***
*** starting iteration: 3; err: [Inf, 1.4049000008308172, 0.5083805325549775, 0.49877743908069105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4049000008308172, 0.5083805325549775, 0.49877743908069105, 0.4962387984717067] ***
*** finished computation of 3 references, err: [Inf, 1.4049000008308172, 0.5083805325549775, 0.49877743908069105, 0.4962387984717067] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 6]]
** centroid: 3, normalized-entropy: 0.6394571324851642, [(2, 31), (3, 6)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6016000026548187] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6016000026548187, 0.5821309812376418] ***
*** starting iteration: 2; err: [Inf, 1.6016000026548187, 0.5821309812376418] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6016000026548187, 0.5821309812376418, 0.5633055644853929] ***
*** starting iteration: 3; err: [Inf, 1.6016000026548187, 0.5821309812376418, 0.5633055644853929] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6016000026548187, 0.5821309812376418, 0.5633055644853929, 0.5581206351569027] ***
*** finished computation of 3 references, err: [Inf, 1.6016000026548187, 0.5821309812376418, 0.5633055644853929, 0.5581206351569027] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 1, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9168267103780922] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9168267103780922, 0.35539385149869873] ***
*** starting iteration: 2; err: [Inf, 0.9168267103780922, 0.35539385149869873] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9168267103780922, 0.35539385149869873, 0.3438759959465241] ***
*** starting iteration: 3; err: [Inf, 0.9168267103780922, 0.35539385149869873, 0.3438759959465241] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9168267103780922, 0.35539385149869873, 0.3438759959465241, 0.3415038420810334] ***
*** starting iteration: 4; err: [Inf, 0.9168267103780922, 0.35539385149869873, 0.3438759959465241, 0.3415038420810334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9168267103780922, 0.35539385149869873, 0.3438759959465241, 0.3415038420810334, 0.3415038420810334] ***
*** finished computation of 3 references, err: [Inf, 0.9168267103780922, 0.35539385149869873, 0.3438759959465241, 0.3415038420810334, 0.3415038420810334] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 9]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5019701965148318] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5019701965148318, 0.3490809964281658] ***
*** starting iteration: 2; err: [Inf, 1.5019701965148318, 0.3490809964281658] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5019701965148318, 0.3490809964281658, 0.34625566524841406] ***
*** starting iteration: 3; err: [Inf, 1.5019701965148318, 0.3490809964281658, 0.34625566524841406] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5019701965148318, 0.3490809964281658, 0.34625566524841406, 0.3441086674930189] ***
*** starting iteration: 4; err: [Inf, 1.5019701965148318, 0.3490809964281658, 0.34625566524841406, 0.3441086674930189] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5019701965148318, 0.3490809964281658, 0.34625566524841406, 0.3441086674930189, 0.339749267831851] ***
*** starting iteration: 5; err: [Inf, 1.5019701965148318, 0.3490809964281658, 0.34625566524841406, 0.3441086674930189, 0.339749267831851] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5019701965148318, 0.3490809964281658, 0.34625566524841406, 0.3441086674930189, 0.339749267831851, 0.33539546831280986] ***
*** starting iteration: 6; err: [Inf, 1.5019701965148318, 0.3490809964281658, 0.34625566524841406, 0.3441086674930189, 0.339749267831851, 0.33539546831280986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5019701965148318, 0.3490809964281658, 0.34625566524841406, 0.3441086674930189, 0.339749267831851, 0.33539546831280986, 0.33539546831280986] ***
*** finished computation of 3 references, err: [Inf, 1.5019701965148318, 0.3490809964281658, 0.34625566524841406, 0.3441086674930189, 0.339749267831851, 0.33539546831280986, 0.33539546831280986] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 3]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 30), (3, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 29]]
** centroid: 2, normalized-entropy: 0.44886448872302936, [(2, 3), (3, 29)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9467231826666063] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9467231826666063, 0.46483729613617675] ***
*** starting iteration: 2; err: [Inf, 0.9467231826666063, 0.46483729613617675] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9467231826666063, 0.46483729613617675, 0.43802365860381554] ***
*** starting iteration: 3; err: [Inf, 0.9467231826666063, 0.46483729613617675, 0.43802365860381554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9467231826666063, 0.46483729613617675, 0.43802365860381554, 0.4175155604055252] ***
*** starting iteration: 4; err: [Inf, 0.9467231826666063, 0.46483729613617675, 0.43802365860381554, 0.4175155604055252] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9467231826666063, 0.46483729613617675, 0.43802365860381554, 0.4175155604055252, 0.39511981396020135] ***
*** starting iteration: 5; err: [Inf, 0.9467231826666063, 0.46483729613617675, 0.43802365860381554, 0.4175155604055252, 0.39511981396020135] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9467231826666063, 0.46483729613617675, 0.43802365860381554, 0.4175155604055252, 0.39511981396020135, 0.39209225651022367] ***
*** starting iteration: 6; err: [Inf, 0.9467231826666063, 0.46483729613617675, 0.43802365860381554, 0.4175155604055252, 0.39511981396020135, 0.39209225651022367] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9467231826666063, 0.46483729613617675, 0.43802365860381554, 0.4175155604055252, 0.39511981396020135, 0.39209225651022367, 0.3906426110903073] ***
*** starting iteration: 7; err: [Inf, 0.9467231826666063, 0.46483729613617675, 0.43802365860381554, 0.4175155604055252, 0.39511981396020135, 0.39209225651022367, 0.3906426110903073] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9467231826666063, 0.46483729613617675, 0.43802365860381554, 0.4175155604055252, 0.39511981396020135, 0.39209225651022367, 0.3906426110903073, 0.38992656002404097] ***
*** finished computation of 3 references, err: [Inf, 0.9467231826666063, 0.46483729613617675, 0.43802365860381554, 0.4175155604055252, 0.39511981396020135, 0.39209225651022367, 0.3906426110903073, 0.38992656002404097] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9477591112186896] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9477591112186896, 0.35539385149869873] ***
*** starting iteration: 2; err: [Inf, 0.9477591112186896, 0.35539385149869873] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9477591112186896, 0.35539385149869873, 0.3438759959465241] ***
*** starting iteration: 3; err: [Inf, 0.9477591112186896, 0.35539385149869873, 0.3438759959465241] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9477591112186896, 0.35539385149869873, 0.3438759959465241, 0.3415038420810334] ***
*** starting iteration: 4; err: [Inf, 0.9477591112186896, 0.35539385149869873, 0.3438759959465241, 0.3415038420810334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9477591112186896, 0.35539385149869873, 0.3438759959465241, 0.3415038420810334, 0.3415038420810334] ***
*** finished computation of 3 references, err: [Inf, 0.9477591112186896, 0.35539385149869873, 0.3438759959465241, 0.3415038420810334, 0.3415038420810334] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 9]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9393478491310451] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9393478491310451, 0.3420018733655826] ***
*** starting iteration: 2; err: [Inf, 0.9393478491310451, 0.3420018733655826] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9393478491310451, 0.3420018733655826, 0.3350676873252834] ***
*** starting iteration: 3; err: [Inf, 0.9393478491310451, 0.3420018733655826, 0.3350676873252834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9393478491310451, 0.3420018733655826, 0.3350676873252834, 0.33445995981463555] ***
*** finished computation of 3 references, err: [Inf, 0.9393478491310451, 0.3420018733655826, 0.3350676873252834, 0.33445995981463555] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 31]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 8), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1976932505936149] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1976932505936149, 0.41257194872534975] ***
*** starting iteration: 2; err: [Inf, 1.1976932505936149, 0.41257194872534975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1976932505936149, 0.41257194872534975, 0.39358201272553184] ***
*** starting iteration: 3; err: [Inf, 1.1976932505936149, 0.41257194872534975, 0.39358201272553184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1976932505936149, 0.41257194872534975, 0.39358201272553184, 0.3906426110903073] ***
*** starting iteration: 4; err: [Inf, 1.1976932505936149, 0.41257194872534975, 0.39358201272553184, 0.3906426110903073] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1976932505936149, 0.41257194872534975, 0.39358201272553184, 0.3906426110903073, 0.38992656002404097] ***
*** finished computation of 3 references, err: [Inf, 1.1976932505936149, 0.41257194872534975, 0.39358201272553184, 0.3906426110903073, 0.38992656002404097] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 26]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8686000061629778] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8686000061629778, 0.5825600630879575] ***
*** finished computation of 3 references, err: [Inf, 0.8686000061629778, 0.5825600630879575] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 20]]
** centroid: 1, normalized-entropy: 0.9509560484549724, [(2, 34), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2285999993016552] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2285999993016552, 0.5011217024476771] ***
*** finished computation of 3 references, err: [Inf, 1.2285999993016552, 0.5011217024476771] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 31]]
** centroid: 1, normalized-entropy: 0.8296071030882032, [(2, 11), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.961400018900444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.961400018900444, 0.6765821317077123] ***
*** finished computation of 3 references, err: [Inf, 0.961400018900444, 0.6765821317077123] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 20]]
** centroid: 1, normalized-entropy: 0.961236604722876, [(2, 32), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [31, 1, 0]]
** centroid: 2, normalized-entropy: 0.2006223243127146, [(1, 31), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5305000069671114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5305000069671114, 0.24798974736451299] ***
*** starting iteration: 2; err: [Inf, 0.5305000069671114, 0.24798974736451299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5305000069671114, 0.24798974736451299, 0.23104205496269162] ***
*** starting iteration: 3; err: [Inf, 0.5305000069671114, 0.24798974736451299, 0.23104205496269162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5305000069671114, 0.24798974736451299, 0.23104205496269162, 0.22580252733136924] ***
*** starting iteration: 4; err: [Inf, 0.5305000069671114, 0.24798974736451299, 0.23104205496269162, 0.22580252733136924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5305000069671114, 0.24798974736451299, 0.23104205496269162, 0.22580252733136924, 0.22349437859613] ***
*** starting iteration: 5; err: [Inf, 0.5305000069671114, 0.24798974736451299, 0.23104205496269162, 0.22580252733136924, 0.22349437859613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5305000069671114, 0.24798974736451299, 0.23104205496269162, 0.22580252733136924, 0.22349437859613, 0.22303981921415944] ***
*** finished computation of 7 references, err: [Inf, 0.5305000069671114, 0.24798974736451299, 0.23104205496269162, 0.22580252733136924, 0.22349437859613, 0.22303981921415944] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 8, 10]]
** centroid: 7, normalized-entropy: 0.9910760598382222, [(2, 8), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5374000054539408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5374000054539408, 0.22229812333671542] ***
*** starting iteration: 2; err: [Inf, 0.5374000054539408, 0.22229812333671542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5374000054539408, 0.22229812333671542, 0.21716036682977777] ***
*** starting iteration: 3; err: [Inf, 0.5374000054539408, 0.22229812333671542, 0.21716036682977777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5374000054539408, 0.22229812333671542, 0.21716036682977777, 0.21590404370392577] ***
*** starting iteration: 4; err: [Inf, 0.5374000054539408, 0.22229812333671542, 0.21716036682977777, 0.21590404370392577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5374000054539408, 0.22229812333671542, 0.21716036682977777, 0.21590404370392577, 0.2155212740502337] ***
*** finished computation of 7 references, err: [Inf, 0.5374000054539408, 0.22229812333671542, 0.21716036682977777, 0.21590404370392577, 0.2155212740502337] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 10]]
** centroid: 1, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5620999947809534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5620999947809534, 0.30310657794718476] ***
*** starting iteration: 2; err: [Inf, 0.5620999947809534, 0.30310657794718476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5620999947809534, 0.30310657794718476, 0.28249187094044614] ***
*** starting iteration: 3; err: [Inf, 0.5620999947809534, 0.30310657794718476, 0.28249187094044614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5620999947809534, 0.30310657794718476, 0.28249187094044614, 0.2755365249571841] ***
*** starting iteration: 4; err: [Inf, 0.5620999947809534, 0.30310657794718476, 0.28249187094044614, 0.2755365249571841] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5620999947809534, 0.30310657794718476, 0.28249187094044614, 0.2755365249571841, 0.264325736883807] ***
*** starting iteration: 5; err: [Inf, 0.5620999947809534, 0.30310657794718476, 0.28249187094044614, 0.2755365249571841, 0.264325736883807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5620999947809534, 0.30310657794718476, 0.28249187094044614, 0.2755365249571841, 0.264325736883807, 0.25977992572736897] ***
*** starting iteration: 6; err: [Inf, 0.5620999947809534, 0.30310657794718476, 0.28249187094044614, 0.2755365249571841, 0.264325736883807, 0.25977992572736897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5620999947809534, 0.30310657794718476, 0.28249187094044614, 0.2755365249571841, 0.264325736883807, 0.25977992572736897, 0.2588556303740793] ***
*** finished computation of 7 references, err: [Inf, 0.5620999947809534, 0.30310657794718476, 0.28249187094044614, 0.2755365249571841, 0.264325736883807, 0.25977992572736897, 0.2588556303740793] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 8]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4756333817328023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4756333817328023, 0.21840568156519538] ***
*** starting iteration: 2; err: [Inf, 0.4756333817328023, 0.21840568156519538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4756333817328023, 0.21840568156519538, 0.2033883616720332] ***
*** starting iteration: 3; err: [Inf, 0.4756333817328023, 0.21840568156519538, 0.2033883616720332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4756333817328023, 0.21840568156519538, 0.2033883616720332, 0.19271266337484044] ***
*** starting iteration: 4; err: [Inf, 0.4756333817328023, 0.21840568156519538, 0.2033883616720332, 0.19271266337484044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4756333817328023, 0.21840568156519538, 0.2033883616720332, 0.19271266337484044, 0.18849755061055976] ***
*** starting iteration: 5; err: [Inf, 0.4756333817328023, 0.21840568156519538, 0.2033883616720332, 0.19271266337484044, 0.18849755061055976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4756333817328023, 0.21840568156519538, 0.2033883616720332, 0.19271266337484044, 0.18849755061055976, 0.1872931183824151] ***
*** starting iteration: 6; err: [Inf, 0.4756333817328023, 0.21840568156519538, 0.2033883616720332, 0.19271266337484044, 0.18849755061055976, 0.1872931183824151] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4756333817328023, 0.21840568156519538, 0.2033883616720332, 0.19271266337484044, 0.18849755061055976, 0.1872931183824151, 0.18650917619020352] ***
*** finished computation of 7 references, err: [Inf, 0.4756333817328023, 0.21840568156519538, 0.2033883616720332, 0.19271266337484044, 0.18849755061055976, 0.1872931183824151, 0.18650917619020352] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 6, 23]]
** centroid: 4, normalized-entropy: 0.7355085815538399, [(2, 6), (3, 23)]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35191998442748357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35191998442748357, 0.15619586994891402] ***
*** starting iteration: 2; err: [Inf, 0.35191998442748357, 0.15619586994891402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35191998442748357, 0.15619586994891402, 0.14997579488152918] ***
*** starting iteration: 3; err: [Inf, 0.35191998442748357, 0.15619586994891402, 0.14997579488152918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35191998442748357, 0.15619586994891402, 0.14997579488152918, 0.14758394970312044] ***
*** starting iteration: 4; err: [Inf, 0.35191998442748357, 0.15619586994891402, 0.14997579488152918, 0.14758394970312044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35191998442748357, 0.15619586994891402, 0.14997579488152918, 0.14758394970312044, 0.14758394970312044] ***
*** finished computation of 7 references, err: [Inf, 0.35191998442748357, 0.15619586994891402, 0.14997579488152918, 0.14758394970312044, 0.14758394970312044] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 6, 9]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 6), (3, 9)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5492000053797459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5492000053797459, 0.2903544656059378] ***
*** starting iteration: 2; err: [Inf, 0.5492000053797459, 0.2903544656059378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5492000053797459, 0.2903544656059378, 0.2652413522966185] ***
*** starting iteration: 3; err: [Inf, 0.5492000053797459, 0.2903544656059378, 0.2652413522966185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5492000053797459, 0.2903544656059378, 0.2652413522966185, 0.2534046556345474] ***
*** finished computation of 7 references, err: [Inf, 0.5492000053797459, 0.2903544656059378, 0.2652413522966185, 0.2534046556345474] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 18]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 1), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 6]]
** centroid: 6, normalized-entropy: 0.8997437586982626, [(2, 13), (3, 6)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 2]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(2, 14), (3, 2)]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.96
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.470163374673393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.470163374673393, 0.18888980437383196] ***
*** starting iteration: 2; err: [Inf, 0.470163374673393, 0.18888980437383196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.470163374673393, 0.18888980437383196, 0.17845254735979982] ***
*** starting iteration: 3; err: [Inf, 0.470163374673393, 0.18888980437383196, 0.17845254735979982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.470163374673393, 0.18888980437383196, 0.17845254735979982, 0.16855020550423608] ***
*** finished computation of 7 references, err: [Inf, 0.470163374673393, 0.18888980437383196, 0.17845254735979982, 0.16855020550423608] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 8]]
** centroid: 1, normalized-entropy: 0.876716288999464, [(2, 19), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39626250162971466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39626250162971466, 0.1563171281636194] ***
*** starting iteration: 2; err: [Inf, 0.39626250162971466, 0.1563171281636194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39626250162971466, 0.1563171281636194, 0.15305566346139698] ***
*** starting iteration: 3; err: [Inf, 0.39626250162971466, 0.1563171281636194, 0.15305566346139698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39626250162971466, 0.1563171281636194, 0.15305566346139698, 0.15302172664558245] ***
*** finished computation of 7 references, err: [Inf, 0.39626250162971466, 0.1563171281636194, 0.15305566346139698, 0.15302172664558245] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 12]]
** centroid: 1, normalized-entropy: 0.9986359641585719, [(2, 11), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 6, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4331135295732399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4331135295732399, 0.20856775448969858] ***
*** starting iteration: 2; err: [Inf, 0.4331135295732399, 0.20856775448969858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4331135295732399, 0.20856775448969858, 0.19106055570489391] ***
*** starting iteration: 3; err: [Inf, 0.4331135295732399, 0.20856775448969858, 0.19106055570489391] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4331135295732399, 0.20856775448969858, 0.19106055570489391, 0.17384203550822772] ***
*** finished computation of 7 references, err: [Inf, 0.4331135295732399, 0.20856775448969858, 0.19106055570489391, 0.17384203550822772] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 8]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.96
finished with 17
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.96
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.7351000022314257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7351000022314257, 0.45785698930184326] ***
*** finished computation of 7 references, err: [Inf, 0.7351000022314257, 0.45785698930184326] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 34, 13]]
** centroid: 5, normalized-entropy: 0.8507707040532602, [(2, 34), (3, 13)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6290999918270895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6290999918270895, 0.3511982996596332] ***
*** finished computation of 7 references, err: [Inf, 0.6290999918270895, 0.3511982996596332] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 10]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
*** center 4: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 28, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5678000049009406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5678000049009406, 0.2989531035622669] ***
*** finished computation of 7 references, err: [Inf, 0.5678000049009406, 0.2989531035622669] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 23, 9]]
** centroid: 2, normalized-entropy: 0.8571484374283717, [(2, 23), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 18]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 1), (3, 18)]
*** center 4: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.96
finished with 19
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.5413000037504284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5413000037504284, 0.27305872944459364] ***
*** starting iteration: 2; err: [Inf, 0.5413000037504284, 0.27305872944459364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5413000037504284, 0.27305872944459364, 0.2535507642529649] ***
*** starting iteration: 3; err: [Inf, 0.5413000037504284, 0.27305872944459364, 0.2535507642529649] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5413000037504284, 0.27305872944459364, 0.2535507642529649, 0.24622247494662836] ***
*** starting iteration: 4; err: [Inf, 0.5413000037504284, 0.27305872944459364, 0.2535507642529649, 0.24622247494662836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5413000037504284, 0.27305872944459364, 0.2535507642529649, 0.24622247494662836, 0.24140532906130016] ***
*** starting iteration: 5; err: [Inf, 0.5413000037504284, 0.27305872944459364, 0.2535507642529649, 0.24622247494662836, 0.24140532906130016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5413000037504284, 0.27305872944459364, 0.2535507642529649, 0.24622247494662836, 0.24140532906130016, 0.24096834766915534] ***
*** finished computation of 7 references, err: [Inf, 0.5413000037504284, 0.27305872944459364, 0.2535507642529649, 0.24622247494662836, 0.24140532906130016, 0.24096834766915534] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 10]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4986000032265733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4986000032265733, 0.2868464794007102] ***
*** starting iteration: 2; err: [Inf, 0.4986000032265733, 0.2868464794007102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4986000032265733, 0.2868464794007102, 0.27700421622764493] ***
*** starting iteration: 3; err: [Inf, 0.4986000032265733, 0.2868464794007102, 0.27700421622764493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4986000032265733, 0.2868464794007102, 0.27700421622764493, 0.2719383642632608] ***
*** starting iteration: 4; err: [Inf, 0.4986000032265733, 0.2868464794007102, 0.27700421622764493, 0.2719383642632608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4986000032265733, 0.2868464794007102, 0.27700421622764493, 0.2719383642632608, 0.2682288188621124] ***
*** starting iteration: 5; err: [Inf, 0.4986000032265733, 0.2868464794007102, 0.27700421622764493, 0.2719383642632608, 0.2682288188621124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4986000032265733, 0.2868464794007102, 0.27700421622764493, 0.2719383642632608, 0.2682288188621124, 0.2644148422562303] ***
*** starting iteration: 6; err: [Inf, 0.4986000032265733, 0.2868464794007102, 0.27700421622764493, 0.2719383642632608, 0.2682288188621124, 0.2644148422562303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4986000032265733, 0.2868464794007102, 0.27700421622764493, 0.2719383642632608, 0.2682288188621124, 0.2644148422562303, 0.26121384365444317] ***
*** starting iteration: 7; err: [Inf, 0.4986000032265733, 0.2868464794007102, 0.27700421622764493, 0.2719383642632608, 0.2682288188621124, 0.2644148422562303, 0.26121384365444317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4986000032265733, 0.2868464794007102, 0.27700421622764493, 0.2719383642632608, 0.2682288188621124, 0.2644148422562303, 0.26121384365444317, 0.26018998033989504] ***
*** starting iteration: 8; err: [Inf, 0.4986000032265733, 0.2868464794007102, 0.27700421622764493, 0.2719383642632608, 0.2682288188621124, 0.2644148422562303, 0.26121384365444317, 0.26018998033989504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4986000032265733, 0.2868464794007102, 0.27700421622764493, 0.2719383642632608, 0.2682288188621124, 0.2644148422562303, 0.26121384365444317, 0.26018998033989504, 0.26018998033989504] ***
*** finished computation of 7 references, err: [Inf, 0.4986000032265733, 0.2868464794007102, 0.27700421622764493, 0.2719383642632608, 0.2682288188621124, 0.2644148422562303, 0.26121384365444317, 0.26018998033989504, 0.26018998033989504] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 8, 8]]
** centroid: 7, normalized-entropy: 1.0, [(2, 8), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5933000009763449] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5933000009763449, 0.28546147276523487] ***
*** starting iteration: 2; err: [Inf, 0.5933000009763449, 0.28546147276523487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5933000009763449, 0.28546147276523487, 0.26563172688498576] ***
*** starting iteration: 3; err: [Inf, 0.5933000009763449, 0.28546147276523487, 0.26563172688498576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5933000009763449, 0.28546147276523487, 0.26563172688498576, 0.24794938604495464] ***
*** starting iteration: 4; err: [Inf, 0.5933000009763449, 0.28546147276523487, 0.26563172688498576, 0.24794938604495464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5933000009763449, 0.28546147276523487, 0.26563172688498576, 0.24794938604495464, 0.2387997523154083] ***
*** starting iteration: 5; err: [Inf, 0.5933000009763449, 0.28546147276523487, 0.26563172688498576, 0.24794938604495464, 0.2387997523154083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5933000009763449, 0.28546147276523487, 0.26563172688498576, 0.24794938604495464, 0.2387997523154083, 0.2387997523154083] ***
*** finished computation of 7 references, err: [Inf, 0.5933000009763449, 0.28546147276523487, 0.26563172688498576, 0.24794938604495464, 0.2387997523154083, 0.2387997523154083] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 1, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.96
finished with 19
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.96
finished with 20
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.3482544205563123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3482544205563123, 0.2159362562319125] ***
*** starting iteration: 2; err: [Inf, 0.3482544205563123, 0.2159362562319125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022] ***
*** starting iteration: 3; err: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701] ***
*** starting iteration: 4; err: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701, 0.18372173466250277] ***
*** starting iteration: 5; err: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701, 0.18372173466250277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701, 0.18372173466250277, 0.1775395714739095] ***
*** starting iteration: 6; err: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701, 0.18372173466250277, 0.1775395714739095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701, 0.18372173466250277, 0.1775395714739095, 0.17328719338775575] ***
*** starting iteration: 7; err: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701, 0.18372173466250277, 0.1775395714739095, 0.17328719338775575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701, 0.18372173466250277, 0.1775395714739095, 0.17328719338775575, 0.1703522790894421] ***
*** starting iteration: 8; err: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701, 0.18372173466250277, 0.1775395714739095, 0.17328719338775575, 0.1703522790894421] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701, 0.18372173466250277, 0.1775395714739095, 0.17328719338775575, 0.1703522790894421, 0.1659409148428794] ***
*** starting iteration: 9; err: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701, 0.18372173466250277, 0.1775395714739095, 0.17328719338775575, 0.1703522790894421, 0.1659409148428794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701, 0.18372173466250277, 0.1775395714739095, 0.17328719338775575, 0.1703522790894421, 0.1659409148428794, 0.16349844145108552] ***
*** starting iteration: 10; err: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701, 0.18372173466250277, 0.1775395714739095, 0.17328719338775575, 0.1703522790894421, 0.1659409148428794, 0.16349844145108552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701, 0.18372173466250277, 0.1775395714739095, 0.17328719338775575, 0.1703522790894421, 0.1659409148428794, 0.16349844145108552, 0.16083471495985122] ***
*** finished computation of 7 references, err: [Inf, 0.3482544205563123, 0.2159362562319125, 0.20380438992552022, 0.195565521205701, 0.18372173466250277, 0.1775395714739095, 0.17328719338775575, 0.1703522790894421, 0.1659409148428794, 0.16349844145108552, 0.16083471495985122] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 19, 7]]
** centroid: 4, normalized-entropy: 0.8403586716091169, [(2, 19), (3, 7)]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4001143682507521] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4001143682507521, 0.1869076606407091] ***
*** starting iteration: 2; err: [Inf, 0.4001143682507521, 0.1869076606407091] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4001143682507521, 0.1869076606407091, 0.1737002776889727] ***
*** starting iteration: 3; err: [Inf, 0.4001143682507521, 0.1869076606407091, 0.1737002776889727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4001143682507521, 0.1869076606407091, 0.1737002776889727, 0.16969890753450564] ***
*** starting iteration: 4; err: [Inf, 0.4001143682507521, 0.1869076606407091, 0.1737002776889727, 0.16969890753450564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4001143682507521, 0.1869076606407091, 0.1737002776889727, 0.16969890753450564, 0.1616638824391068] ***
*** starting iteration: 5; err: [Inf, 0.4001143682507521, 0.1869076606407091, 0.1737002776889727, 0.16969890753450564, 0.1616638824391068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4001143682507521, 0.1869076606407091, 0.1737002776889727, 0.16969890753450564, 0.1616638824391068, 0.15752896172473865] ***
*** starting iteration: 6; err: [Inf, 0.4001143682507521, 0.1869076606407091, 0.1737002776889727, 0.16969890753450564, 0.1616638824391068, 0.15752896172473865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4001143682507521, 0.1869076606407091, 0.1737002776889727, 0.16969890753450564, 0.1616638824391068, 0.15752896172473865, 0.15650812671383058] ***
*** starting iteration: 7; err: [Inf, 0.4001143682507521, 0.1869076606407091, 0.1737002776889727, 0.16969890753450564, 0.1616638824391068, 0.15752896172473865, 0.15650812671383058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4001143682507521, 0.1869076606407091, 0.1737002776889727, 0.16969890753450564, 0.1616638824391068, 0.15752896172473865, 0.15650812671383058, 0.15650812671383058] ***
*** finished computation of 7 references, err: [Inf, 0.4001143682507521, 0.1869076606407091, 0.1737002776889727, 0.16969890753450564, 0.1616638824391068, 0.15752896172473865, 0.15650812671383058, 0.15650812671383058] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 18]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 3), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 9, 2]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(2, 9), (3, 2)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39624856132839015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39624856132839015, 0.19081793433175157] ***
*** starting iteration: 2; err: [Inf, 0.39624856132839015, 0.19081793433175157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39624856132839015, 0.19081793433175157, 0.18192947737515597] ***
*** starting iteration: 3; err: [Inf, 0.39624856132839015, 0.19081793433175157, 0.18192947737515597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39624856132839015, 0.19081793433175157, 0.18192947737515597, 0.18112013404054556] ***
*** finished computation of 7 references, err: [Inf, 0.39624856132839015, 0.19081793433175157, 0.18192947737515597, 0.18112013404054556] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 8]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.96
finished with 20
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.9066666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.96
finished with 22
iteration 9 finished
*** starting iteration: 1; err: [Inf, 5.059811613979343] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.059811613979343, 1.092837148524936] ***
*** starting iteration: 2; err: [Inf, 5.059811613979343, 1.092837148524936] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.059811613979343, 1.092837148524936, 0.42439229847650806] ***
*** starting iteration: 3; err: [Inf, 5.059811613979343, 1.092837148524936, 0.42439229847650806] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.059811613979343, 1.092837148524936, 0.42439229847650806, 0.3639375774074466] ***
*** starting iteration: 4; err: [Inf, 5.059811613979343, 1.092837148524936, 0.42439229847650806, 0.3639375774074466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.059811613979343, 1.092837148524936, 0.42439229847650806, 0.3639375774074466, 0.35150851180285686] ***
*** starting iteration: 5; err: [Inf, 5.059811613979343, 1.092837148524936, 0.42439229847650806, 0.3639375774074466, 0.35150851180285686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.059811613979343, 1.092837148524936, 0.42439229847650806, 0.3639375774074466, 0.35150851180285686, 0.3438759959465241] ***
*** starting iteration: 6; err: [Inf, 5.059811613979343, 1.092837148524936, 0.42439229847650806, 0.3639375774074466, 0.35150851180285686, 0.3438759959465241] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.059811613979343, 1.092837148524936, 0.42439229847650806, 0.3639375774074466, 0.35150851180285686, 0.3438759959465241, 0.3415038420810334] ***
*** starting iteration: 7; err: [Inf, 5.059811613979343, 1.092837148524936, 0.42439229847650806, 0.3639375774074466, 0.35150851180285686, 0.3438759959465241, 0.3415038420810334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.059811613979343, 1.092837148524936, 0.42439229847650806, 0.3639375774074466, 0.35150851180285686, 0.3438759959465241, 0.3415038420810334, 0.3415038420810334] ***
*** finished computation of 3 references, err: [Inf, 5.059811613979343, 1.092837148524936, 0.42439229847650806, 0.3639375774074466, 0.35150851180285686, 0.3438759959465241, 0.3415038420810334, 0.3415038420810334] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 9]]
** centroid: 2, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.9805892294518435] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.9805892294518435, 2.2078573279835614] ***
*** starting iteration: 2; err: [Inf, 6.9805892294518435, 2.2078573279835614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844] ***
*** starting iteration: 3; err: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294] ***
*** starting iteration: 4; err: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294, 0.4236431221224939] ***
*** starting iteration: 5; err: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294, 0.4236431221224939] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294, 0.4236431221224939, 0.36631178958489485] ***
*** starting iteration: 6; err: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294, 0.4236431221224939, 0.36631178958489485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294, 0.4236431221224939, 0.36631178958489485, 0.3504794575035628] ***
*** starting iteration: 7; err: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294, 0.4236431221224939, 0.36631178958489485, 0.3504794575035628] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294, 0.4236431221224939, 0.36631178958489485, 0.3504794575035628, 0.34625566524841406] ***
*** starting iteration: 8; err: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294, 0.4236431221224939, 0.36631178958489485, 0.3504794575035628, 0.34625566524841406] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294, 0.4236431221224939, 0.36631178958489485, 0.3504794575035628, 0.34625566524841406, 0.3441086674930189] ***
*** starting iteration: 9; err: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294, 0.4236431221224939, 0.36631178958489485, 0.3504794575035628, 0.34625566524841406, 0.3441086674930189] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294, 0.4236431221224939, 0.36631178958489485, 0.3504794575035628, 0.34625566524841406, 0.3441086674930189, 0.339749267831851] ***
*** starting iteration: 10; err: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294, 0.4236431221224939, 0.36631178958489485, 0.3504794575035628, 0.34625566524841406, 0.3441086674930189, 0.339749267831851] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294, 0.4236431221224939, 0.36631178958489485, 0.3504794575035628, 0.34625566524841406, 0.3441086674930189, 0.339749267831851, 0.33539546831280986] ***
*** finished computation of 3 references, err: [Inf, 6.9805892294518435, 2.2078573279835614, 1.2170533889141844, 0.6543471258095294, 0.4236431221224939, 0.36631178958489485, 0.3504794575035628, 0.34625566524841406, 0.3441086674930189, 0.339749267831851, 0.33539546831280986] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 29]]
** centroid: 2, normalized-entropy: 0.44886448872302936, [(2, 3), (3, 29)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 3]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 30), (3, 3)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0186570668095691] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0186570668095691, 0.7217528931632197] ***
*** starting iteration: 2; err: [Inf, 1.0186570668095691, 0.7217528931632197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339] ***
*** starting iteration: 3; err: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911] ***
*** starting iteration: 4; err: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911, 0.6622581492683568] ***
*** starting iteration: 5; err: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911, 0.6622581492683568] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911, 0.6622581492683568, 0.5418284158884823] ***
*** starting iteration: 6; err: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911, 0.6622581492683568, 0.5418284158884823] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911, 0.6622581492683568, 0.5418284158884823, 0.44952782603893127] ***
*** starting iteration: 7; err: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911, 0.6622581492683568, 0.5418284158884823, 0.44952782603893127] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911, 0.6622581492683568, 0.5418284158884823, 0.44952782603893127, 0.4244349489673759] ***
*** starting iteration: 8; err: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911, 0.6622581492683568, 0.5418284158884823, 0.44952782603893127, 0.4244349489673759] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911, 0.6622581492683568, 0.5418284158884823, 0.44952782603893127, 0.4244349489673759, 0.4144901980531877] ***
*** starting iteration: 9; err: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911, 0.6622581492683568, 0.5418284158884823, 0.44952782603893127, 0.4244349489673759, 0.4144901980531877] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911, 0.6622581492683568, 0.5418284158884823, 0.44952782603893127, 0.4244349489673759, 0.4144901980531877, 0.4014274809365253] ***
*** starting iteration: 10; err: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911, 0.6622581492683568, 0.5418284158884823, 0.44952782603893127, 0.4244349489673759, 0.4144901980531877, 0.4014274809365253] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911, 0.6622581492683568, 0.5418284158884823, 0.44952782603893127, 0.4244349489673759, 0.4144901980531877, 0.4014274809365253, 0.3931643404628889] ***
*** finished computation of 3 references, err: [Inf, 1.0186570668095691, 0.7217528931632197, 0.7106090317705339, 0.6991832445357911, 0.6622581492683568, 0.5418284158884823, 0.44952782603893127, 0.4244349489673759, 0.4144901980531877, 0.4014274809365253, 0.3931643404628889] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.209599888178264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.209599888178264, 2.7572586636756764] ***
*** starting iteration: 2; err: [Inf, 8.209599888178264, 2.7572586636756764] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.209599888178264, 2.7572586636756764, 1.4159113616965653] ***
*** starting iteration: 3; err: [Inf, 8.209599888178264, 2.7572586636756764, 1.4159113616965653] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.209599888178264, 2.7572586636756764, 1.4159113616965653, 0.7191324638031423] ***
*** starting iteration: 4; err: [Inf, 8.209599888178264, 2.7572586636756764, 1.4159113616965653, 0.7191324638031423] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.209599888178264, 2.7572586636756764, 1.4159113616965653, 0.7191324638031423, 0.5657084572084369] ***
*** starting iteration: 5; err: [Inf, 8.209599888178264, 2.7572586636756764, 1.4159113616965653, 0.7191324638031423, 0.5657084572084369] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.209599888178264, 2.7572586636756764, 1.4159113616965653, 0.7191324638031423, 0.5657084572084369, 0.5212076915804823] ***
*** starting iteration: 6; err: [Inf, 8.209599888178264, 2.7572586636756764, 1.4159113616965653, 0.7191324638031423, 0.5657084572084369, 0.5212076915804823] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.209599888178264, 2.7572586636756764, 1.4159113616965653, 0.7191324638031423, 0.5657084572084369, 0.5212076915804823, 0.4921076412050397] ***
*** starting iteration: 7; err: [Inf, 8.209599888178264, 2.7572586636756764, 1.4159113616965653, 0.7191324638031423, 0.5657084572084369, 0.5212076915804823, 0.4921076412050397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.209599888178264, 2.7572586636756764, 1.4159113616965653, 0.7191324638031423, 0.5657084572084369, 0.5212076915804823, 0.4921076412050397, 0.4863941187370925] ***
*** starting iteration: 8; err: [Inf, 8.209599888178264, 2.7572586636756764, 1.4159113616965653, 0.7191324638031423, 0.5657084572084369, 0.5212076915804823, 0.4921076412050397, 0.4863941187370925] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.209599888178264, 2.7572586636756764, 1.4159113616965653, 0.7191324638031423, 0.5657084572084369, 0.5212076915804823, 0.4921076412050397, 0.4863941187370925, 0.4863941187370925] ***
*** finished computation of 3 references, err: [Inf, 8.209599888178264, 2.7572586636756764, 1.4159113616965653, 0.7191324638031423, 0.5657084572084369, 0.5212076915804823, 0.4921076412050397, 0.4863941187370925, 0.4863941187370925] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 10]]
** centroid: 1, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.8349999687763847] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8349999687763847, 1.3661034469754296] ***
*** starting iteration: 2; err: [Inf, 3.8349999687763847, 1.3661034469754296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8349999687763847, 1.3661034469754296, 0.6274155674148189] ***
*** starting iteration: 3; err: [Inf, 3.8349999687763847, 1.3661034469754296, 0.6274155674148189] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8349999687763847, 1.3661034469754296, 0.6274155674148189, 0.5134232397614714] ***
*** starting iteration: 4; err: [Inf, 3.8349999687763847, 1.3661034469754296, 0.6274155674148189, 0.5134232397614714] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8349999687763847, 1.3661034469754296, 0.6274155674148189, 0.5134232397614714, 0.5011483395265348] ***
*** starting iteration: 5; err: [Inf, 3.8349999687763847, 1.3661034469754296, 0.6274155674148189, 0.5134232397614714, 0.5011483395265348] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8349999687763847, 1.3661034469754296, 0.6274155674148189, 0.5134232397614714, 0.5011483395265348, 0.49714461501679325] ***
*** starting iteration: 6; err: [Inf, 3.8349999687763847, 1.3661034469754296, 0.6274155674148189, 0.5134232397614714, 0.5011483395265348, 0.49714461501679325] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8349999687763847, 1.3661034469754296, 0.6274155674148189, 0.5134232397614714, 0.5011483395265348, 0.49714461501679325, 0.4962387984717067] ***
*** finished computation of 3 references, err: [Inf, 3.8349999687763847, 1.3661034469754296, 0.6274155674148189, 0.5134232397614714, 0.5011483395265348, 0.49714461501679325, 0.4962387984717067] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 6]]
** centroid: 3, normalized-entropy: 0.6394571324851642, [(2, 31), (3, 6)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.522800001067244] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.522800001067244, 1.0669588470296927] ***
*** starting iteration: 2; err: [Inf, 1.522800001067244, 1.0669588470296927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.522800001067244, 1.0669588470296927, 1.0587081996518242] ***
*** starting iteration: 3; err: [Inf, 1.522800001067244, 1.0669588470296927, 1.0587081996518242] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.522800001067244, 1.0669588470296927, 1.0587081996518242, 1.0587081996518242] ***
*** finished computation of 3 references, err: [Inf, 1.522800001067244, 1.0669588470296927, 1.0587081996518242, 1.0587081996518242] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 36]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(2, 30), (3, 36)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [14, 3, 0]]
** centroid: 2, normalized-entropy: 0.6722948170756378, [(1, 14), (2, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 4 centroids; started with 3
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2), 0.96)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.075, 3.0062499999999996, 4.4437500000000005, 1.425], [4.713333333333333, 3.1133333333333337, 1.36, 0.2], [7.6499999999999995, 3.183333333333333, 6.499999999999999, 2.1166666666666667], [6.656250000000002, 3.05, 5.550000000000001, 2.1375], [5.226315789473685, 3.6315789473684212, 1.5368421052631578, 0.3052631578947369], [5.550000000000001, 2.6, 3.9200000000000004, 1.19], [6.6875, 2.925, 4.775, 1.4750000000000003], [6.06, 2.66, 5.05, 1.8]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 3, 3, 1, 2, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.384615384615386, 2.946153846153846, 4.607692307692307, 1.4692307692307696], [6.049999999999999, 2.75, 5.09, 1.7899999999999998], [4.827272727272727, 3.236363636363636, 1.4454545454545455, 0.2], [5.242857142857143, 2.3714285714285714, 3.442857142857143, 1.0285714285714287], [7.4, 2.9250000000000003, 6.275, 1.875], [5.43076923076923, 3.8, 1.4692307692307693, 0.2538461538461539], [5.628571428571429, 2.707142857142857, 4.1000000000000005, 1.285714285714286], [6.670588235294119, 3.1, 5.6117647058823525, 2.158823529411765]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.1625, 2.8249999999999997, 4.61875, 1.44375], [5.9125000000000005, 2.75, 4.949999999999999, 1.8250000000000002], [4.809090909090909, 3.2045454545454537, 1.4636363636363634, 0.2409090909090909], [7.62, 2.84, 6.4799999999999995, 2.1199999999999997], [6.515789473684211, 3.0736842105263156, 5.489473684210526, 2.1157894736842104], [5.333333333333334, 3.888888888888889, 1.5222222222222221, 0.2888888888888889], [5.45625, 2.54375, 3.8875, 1.1937499999999999], [7.5, 3.6000000000000005, 6.300000000000001, 2.125]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[37, 1, 1, 22, 4, 30, 1, 5, 18, 1, 22, 47, 8, 31, 24, 31, 29, 23, 37, 23, 13, 12, 1, 14, 20, 3, 39, 33, 35, 23, 35, 32, 32, 28, 39, 26, 43, 11, 44, 23, 22, 11, 3, 43, 51, 46, 1, 25, 40, 31, 3, 17, 42, 34, 32, 44, 39, 51, 44, 37, 26, 38, 16, 44, 37, 33, 27, 51, 32, 61, 28, 36, 38, 33, 13, 25, 53, 46, 25, 30, 22, 28, 43, 54, 40, 47, 38, 45, 20, 25, 59, 10, 19, 40, 2, 34, 30, 29, 35, 73, 1, 25, 56, 38, 57, 34, 35, 36, 41, 21, 32, 70, 24, 38, 36, 26, 16, 25, 49, 37, 42, 36, 48, 38, 13, 54, 38, 56, 8, 54, 10, 46, 39, 37, 21, 14, 44, 38, 43, 32, 32, 44, 23, 22, 43, 47, 29, 43, 37, 45, 29, 20, 36, 26, 1, 38, 15, 35, 31, 22, 40, 16, 38, 40, 45, 37, 39, 50, 49, 19, 37, 29, 86, 60, 28, 28, 23, 39, 43, 44, 35, 26, 16, 28, 35, 26, 34, 30, 28, 64, 30, 64, 66, 25, 30, 35, 22, 41, 42, 32, 44, 43, 25, 39, 27, 39, 38, 29, 17, 36, 55, 71, 30, 30, 24, 36, 36, 43, 31, 28, 20, 22, 24, 30, 37, 44, 31, 1, 9, 33, 39, 43, 15, 35, 36, 40, 42, 42, 26, 32, 35, 38, 28, 35, 46, 31, 50, 28, 33, 29, 26, 31, 28, 47, 47, 48, 56, 25, 29, 61, 35, 30, 71, 49, 43, 44, 39, 3, 62, 1, 20, 30, 35, 25, 41, 47, 59, 50, 1, 31, 36, 49, 29, 31, 32, 47, 47, 58, 45, 56, 32, 35, 12, 46, 49, 40, 50, 22, 39, 29]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6040000000000001, speedup = 0.27547114178895565, eval_ratio = 0.041318)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3871527777777778,"recall":0.3871527777777778,"f1":null,"seconds":7.111392915248871e-5,"exhaustive_search_seconds":0.0004827268421649933,"evaluations":340.9375,"distances_sum":1751.7006774054464}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5399305555555556,"recall":0.5399305555555556,"f1":0.5399305555555556,"seconds":0.00010081194341182709,"exhaustive_search_seconds":0.0004827268421649933,"evaluations":380.1796875,"distances_sum":1629.790298056206}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6467013888888886,"recall":0.6467013888888886,"f1":0.6467013888888886,"seconds":0.00013082846999168396,"exhaustive_search_seconds":0.0004827268421649933,"evaluations":418.6328125,"distances_sum":1581.7179089729084}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7135416666666665,"recall":0.7135416666666665,"f1":0.7135416666666665,"seconds":0.00016052275896072388,"exhaustive_search_seconds":0.0004827268421649933,"evaluations":457.6953125,"distances_sum":1559.4208041836769}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7760416666666661,"recall":0.7760416666666661,"f1":0.7760416666666661,"seconds":0.0002267397940158844,"exhaustive_search_seconds":0.0004827268421649933,"evaluations":496.4140625,"distances_sum":1542.6381171742341}
KCenters.DeloneInvIndex> reached performance {"precision":0.8263888888888878,"recall":0.8263888888888878,"f1":0.8263888888888878,"seconds":0.00026196427643299103,"exhaustive_search_seconds":0.0004827268421649933,"evaluations":536.9453125,"distances_sum":1531.9970884769532}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.804, speedup = 1.5468328527578832, eval_ratio = 0.053085)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
