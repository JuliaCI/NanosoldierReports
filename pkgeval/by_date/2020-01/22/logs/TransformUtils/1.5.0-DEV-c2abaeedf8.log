Julia Version 1.5.0-DEV.139
Commit c2abaeedf8 (2020-01-22 06:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_YOwfVL/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_YOwfVL/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_YOwfVL/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.008561566334517217 -0.05456528688508594; -0.008561566334517217 0.0 0.14541606124527537; 0.05456528688508594 -0.14541606124527537 0.0])
dAA = so3([0.0 -0.10979043672960619 0.0658393318919436; 0.10979043672960619 0.0 -0.10515909609207358; -0.0658393318919436 0.10515909609207358 0.0])
dAA = so3([0.0 -0.05698267869810522 0.052882138806503956; 0.05698267869810522 0.0 -0.04186438780316009; -0.052882138806503956 0.04186438780316009 0.0])
dAA = Quaternion(0.99040407205072, [0.08581185408776401, 0.08683542010544387, -0.06477429720563407])
dAA = SO3([0.9847162164563726 -0.07513347856841503 0.15712712511230026; 0.05792181030536174 0.9920873351206122 0.11139023020100315; -0.16425296630136282 -0.10058667849915466 0.9812763541274762])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9495130964370249 -0.2453669009233258 0.19549926758393757; 0.28802435761330913 0.9288004436120504 -0.2331774117866031; -0.12436578756239122 0.2777135572444047 0.9525798292041696]), [-1.4541606124527535, -0.5456528688508594, -0.08561566334517216])
xj = SE3(SO3([0.8578237017673903 0.3571827866339519 0.3695388391204587; -0.17757204696333292 0.8807277139491181 -0.4390750072814581; -0.48229313163608634 0.31102918000465063 0.8189347863916219]), [0.41864387803160086, 0.5288213880650395, 0.5698267869810522])
Dx = SE3(SO3([0.8233505296573852 0.5541393788470788 0.12257020079887662; -0.5093498804550847 0.8167564779837393 -0.2710563685877688; -0.2503130132320212 0.1607432875194834 0.9547277051202268]), [2.006212531864559, 0.7204731870568656, 0.739950037343535])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
