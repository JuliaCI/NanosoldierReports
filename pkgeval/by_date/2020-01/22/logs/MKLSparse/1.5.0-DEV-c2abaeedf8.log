Julia Version 1.5.0-DEV.139
Commit c2abaeedf8 (2020-01-22 06:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed MKLSparse â”€ v1.0.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0c723cd3] + MKLSparse v1.0.0
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0c723cd3] + MKLSparse v1.0.0
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [8dfed614] + Test 
   Testing MKLSparse
  Updating `/tmp/jl_e5SX6t/Project.toml`
 [no changes]
  Updating `/tmp/jl_e5SX6t/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_e5SX6t/Project.toml`
  [0c723cd3] MKLSparse v1.0.0
  [37e2e46d] LinearAlgebra 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
ERROR: LoadError: LoadError: InitError: could not load library "libmkl_rt"
libmkl_rt.so: cannot open shared object file: No such file or directory
Stacktrace:
 [1] __init__() at /home/pkgeval/.julia/packages/MKLSparse/7H04i/src/MKLSparse.jl:4
 [2] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:697
 [3] _require_from_serialized(::String) at ./loading.jl:748
 [4] _require(::Base.PkgId) at ./loading.jl:1039
 [5] require(::Base.PkgId) at ./loading.jl:927
 [6] require(::Module, ::Symbol) at ./loading.jl:922
 [7] include(::String) at ./client.jl:439
 [8] top-level scope at /home/pkgeval/.julia/packages/MKLSparse/7H04i/test/runtests.jl:1
 [9] include(::String) at ./client.jl:439
 [10] top-level scope at none:6
during initialization of module MKLSparse
in expression starting at /home/pkgeval/.julia/packages/MKLSparse/7H04i/test/test_BLAS.jl:3
in expression starting at /home/pkgeval/.julia/packages/MKLSparse/7H04i/test/runtests.jl:1
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/MKLSparse/7H04i/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/MKLSparse/7H04i/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package MKLSparse errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
