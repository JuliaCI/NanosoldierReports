Julia Version 1.5.0-DEV.158
Commit ed177d17d6 (2020-01-27 16:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed RecursiveFactorization ────── v0.1.0
 Installed OrderedCollections ────────── v1.1.0
 Installed Compat ────────────────────── v2.2.0
 Installed RecursiveArrayTools ───────── v1.2.1
 Installed Conda ─────────────────────── v1.3.0
 Installed ArrayInterface ────────────── v2.3.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Parameters ────────────────── v0.12.0
 Installed MuladdMacro ───────────────── v0.2.2
 Installed DocStringExtensions ───────── v0.8.1
 Installed DataStructures ────────────── v0.17.9
 Installed StaticArrays ──────────────── v0.12.1
 Installed Roots ─────────────────────── v0.8.4
 Installed JSON ──────────────────────── v0.21.0
 Installed FunctionWrappers ──────────── v1.0.0
 Installed PyCall ────────────────────── v1.91.2
 Installed TableTraits ───────────────── v1.0.0
 Installed VersionParsing ────────────── v1.2.0
 Installed MacroTools ────────────────── v0.5.3
 Installed RecipesBase ───────────────── v0.7.0
 Installed Requires ──────────────────── v0.5.2
 Installed TreeViews ─────────────────── v0.3.0
 Installed Parsers ───────────────────── v0.3.10
 Installed IterativeSolvers ──────────── v0.8.1
 Installed DiffEqBase ────────────────── v5.16.5
 Installed PyDSTool ──────────────────── v0.5.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [7186c646] + PyDSTool v0.5.0
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [4fba245c] + ArrayInterface v2.3.1
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [864edb3b] + DataStructures v0.17.9
  [2b5f629d] + DiffEqBase v5.16.5
  [ffbed154] + DocStringExtensions v0.8.1
  [069b7b12] + FunctionWrappers v1.0.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [1914dd2f] + MacroTools v0.5.3
  [46d2c3a1] + MuladdMacro v0.2.2
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  [438e738f] + PyCall v1.91.2
  [7186c646] + PyDSTool v0.5.0
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v1.2.1
  [f2c3362d] + RecursiveFactorization v0.1.0
  [ae029012] + Requires v0.5.2
  [f2b01f46] + Roots v0.8.4
  [90137ffa] + StaticArrays v0.12.1
  [3783bdb8] + TableTraits v1.0.0
  [a2a6695c] + TreeViews v0.3.0
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Conda ─→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Updating `/tmp/jl_uQa5qY/Project.toml`
 [no changes]
  Updating `/tmp/jl_uQa5qY/Manifest.toml`
 [no changes]
  Building PyCall → `~/.julia/packages/PyCall/ttONZ/deps/build.log`
  Updating `/tmp/jl_82T5xW/Project.toml`
 [no changes]
  Updating `/tmp/jl_82T5xW/Manifest.toml`
 [no changes]
   Testing PyDSTool
  Updating `/tmp/jl_KbUVQr/Project.toml`
 [no changes]
  Updating `/tmp/jl_KbUVQr/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_KbUVQr/Project.toml`
  [8f4d0f93] Conda v1.3.0
  [864edb3b] DataStructures v0.17.9
  [2b5f629d] DiffEqBase v5.16.5
  [438e738f] PyCall v1.91.2
  [7186c646] PyDSTool v0.5.0
  [3cdcf5f2] RecipesBase v0.7.0
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
┌ Warning: `getindex(o::PyObject, s::AbstractString)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o."s"` instead of `o["s"]`.
│   caller = __init__() at PyDSTool.jl:23
└ @ PyDSTool ~/.julia/packages/PyDSTool/nreJ8/src/PyDSTool.jl:23
ERROR: LoadError: InitError: PyError (PyImport_ImportModule

The Python package _pydstool_jl_hack could not be found by pyimport. Usually this means
that you did not install _pydstool_jl_hack in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the _pydstool_jl_hack module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the _pydstool_jl_hack module, you can use `pyimport_conda("_pydstool_jl_hack", PKG)`,
where PKG is the Anaconda package the contains the module _pydstool_jl_hack,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'scipy'",)
  File "/home/pkgeval/.julia/packages/PyDSTool/nreJ8/src/_pydstool_jl_hack.py", line 1, in <module>
    import scipy.special

Stacktrace:
 [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:544
 [2] __init__() at /home/pkgeval/.julia/packages/PyDSTool/nreJ8/src/PyDSTool.jl:24
 [3] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:697
 [4] _require_from_serialized(::String) at ./loading.jl:748
 [5] _require(::Base.PkgId) at ./loading.jl:1039
 [6] require(::Base.PkgId) at ./loading.jl:927
 [7] require(::Module, ::Symbol) at ./loading.jl:922
 [8] include(::String) at ./client.jl:439
 [9] top-level scope at none:6
during initialization of module PyDSTool
in expression starting at /home/pkgeval/.julia/packages/PyDSTool/nreJ8/test/runtests.jl:1
caused by [exception 1]
PyError (PyImport_ImportModule

The Python package PyDSTool could not be found by pyimport. Usually this means
that you did not install PyDSTool in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the PyDSTool module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the PyDSTool module, you can use `pyimport_conda("PyDSTool", PKG)`,
where PKG is the Anaconda package the contains the module PyDSTool,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'PyDSTool'",)

Stacktrace:
 [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:544
 [2] pyimport_conda(::String, ::String, ::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:702
 [3] __init__() at /home/pkgeval/.julia/packages/PyDSTool/nreJ8/src/PyDSTool.jl:11
 [4] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:697
 [5] _require_from_serialized(::String) at ./loading.jl:748
 [6] _require(::Base.PkgId) at ./loading.jl:1039
 [7] require(::Base.PkgId) at ./loading.jl:927
 [8] require(::Module, ::Symbol) at ./loading.jl:922
 [9] include(::String) at ./client.jl:439
 [10] top-level scope at none:6
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/PyDSTool/nreJ8/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/PyDSTool/nreJ8/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package PyDSTool errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
