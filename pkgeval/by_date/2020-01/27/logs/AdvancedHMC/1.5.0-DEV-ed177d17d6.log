Julia Version 1.5.0-DEV.158
Commit ed177d17d6 (2020-01-27 16:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed SortingAlgorithms ── v0.3.1
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed OrderedCollections ─ v1.1.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed StatsFuns ────────── v0.9.3
 Installed SpecialFunctions ─── v0.9.0
 Installed BinaryProvider ───── v0.5.8
 Installed LazyArrays ───────── v0.14.11
 Installed Parameters ───────── v0.12.0
 Installed ArrayLayouts ─────── v0.1.5
 Installed Missings ─────────── v0.4.3
 Installed StatsBase ────────── v0.32.0
 Installed DataStructures ───── v0.17.9
 Installed ArgCheck ─────────── v1.0.1
 Installed InplaceOps ───────── v0.3.0
 Installed StaticArrays ─────── v0.12.1
 Installed DataAPI ──────────── v1.1.0
 Installed ProgressMeter ────── v1.2.0
 Installed FillArrays ───────── v0.8.4
 Installed Rmath ────────────── v0.6.0
 Installed MacroTools ───────── v0.5.3
 Installed Requires ─────────── v1.0.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_0ibgby/Project.toml`
 [no changes]
  Updating `/tmp/jl_0ibgby/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed ForwardDiff ───────────────── v0.10.9
 Installed RecursiveArrayTools ───────── v2.0.4
 Installed Bijectors ─────────────────── v0.5.2
 Installed Parsers ───────────────────── v0.3.10
 Installed Zygote ────────────────────── v0.4.6
 Installed Distributions ─────────────── v0.22.3
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed UnicodePlots ──────────────── v1.1.0
 Installed OrdinaryDiffEq ────────────── v5.28.1
 Installed Turing ────────────────────── v0.8.3
 Installed Optim ─────────────────────── v0.20.0
 Installed Arpack ────────────────────── v0.4.0
 Installed PositiveFactorizations ────── v0.2.3
 Installed DiffResults ───────────────── v1.0.2
 Installed KernelDensity ─────────────── v0.5.1
 Installed ChainRulesCore ────────────── v0.6.1
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed DynamicPPL ────────────────── v0.1.1
 Installed QuadGK ────────────────────── v2.3.1
 Installed RecursiveFactorization ────── v0.1.0
 Installed FFTW ──────────────────────── v1.2.0
 Installed ZygoteRules ───────────────── v0.2.0
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed Compat ────────────────────── v2.2.0
 Installed OffsetArrays ──────────────── v1.0.2
 Installed IterTools ─────────────────── v1.3.0
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed ArrayInterface ────────────── v2.3.1
 Installed Tables ────────────────────── v0.2.11
 Installed Tracker ───────────────────── v0.2.6
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed NLSolversBase ─────────────── v7.6.0
 Installed Combinatorics ─────────────── v0.7.0
 Installed DistributionsAD ───────────── v0.2.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed BenchmarkTools ────────────── v0.4.3
 Installed DocStringExtensions ───────── v0.8.1
 Installed Ratios ────────────────────── v0.3.1
 Installed CommonSubexpressions ──────── v0.2.0
 Installed NNlib ─────────────────────── v0.6.4
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed DataValueInterfaces ───────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed Polynomials ───────────────── v0.6.0
 Installed LineSearches ──────────────── v7.0.1
 Installed MuladdMacro ───────────────── v0.2.2
 Installed Inflate ───────────────────── v0.1.1
 Installed SparseDiffTools ───────────── v1.3.3
 Installed LightGraphs ───────────────── v1.3.0
 Installed JSON ──────────────────────── v0.21.0
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed ExponentialUtilities ──────── v1.6.0
 Installed AxisArrays ────────────────── v0.4.1
 Installed Roots ─────────────────────── v0.8.4
 Installed IRTools ───────────────────── v0.3.1
 Installed FunctionWrappers ──────────── v1.0.0
 Installed TableTraits ───────────────── v1.0.0
 Installed TransformVariables ────────── v0.3.9
 Installed DiffEqBase ────────────────── v6.13.1
 Installed PooledArrays ──────────────── v0.5.3
 Installed CategoricalArrays ─────────── v0.7.7
 Installed IterativeSolvers ──────────── v0.8.1
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed RangeArrays ───────────────── v0.3.2
 Installed DataFrames ────────────────── v0.20.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed GenericSVD ────────────────── v0.2.2
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed Libtask ───────────────────── v0.3.1
 Installed FiniteDiff ────────────────── v2.1.0
 Installed NaNMath ───────────────────── v0.3.3
 Installed DiffRules ─────────────────── v1.0.0
 Installed RecipesBase ───────────────── v0.7.0
 Installed IntervalSets ──────────────── v0.3.2
 Installed Adapt ─────────────────────── v1.0.0
 Installed PDMats ────────────────────── v0.9.11
 Installed SimpleTraits ──────────────── v0.9.1
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed TreeViews ─────────────────── v0.3.0
 Installed LogDensityProblems ────────── v0.10.1
 Installed Reexport ──────────────────── v0.2.0
 Installed MCMCChains ────────────────── v1.0.2
 Installed Showoff ───────────────────── v0.3.1
 Installed Interpolations ────────────── v0.12.7
  Updating `/tmp/jl_bjXkbm/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.22.3
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_bjXkbm/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.6.1
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.13.1
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.22.3
  [ced4e74d] + DistributionsAD v0.2.0
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [6a86dc24] + FiniteDiff v2.1.0
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.1
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.7
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.2
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v1.0.2
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.20.0
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [90014a1f] + PDMats v0.9.11
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.4
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.3.3
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_N9CDiv/Project.toml`
 [no changes]
  Updating `/tmp/jl_N9CDiv/Manifest.toml`
 [no changes]
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_6RHaMN/Project.toml`
 [no changes]
  Updating `/tmp/jl_6RHaMN/Manifest.toml`
 [no changes]
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_XUS96h/Project.toml`
 [no changes]
  Updating `/tmp/jl_XUS96h/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_bjXkbm/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.22.3
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.174538174
│   t_steps = 0.007601817
└   t_step / t_steps = 22.96005994356349
Sampling  0%|                               |  ETA: 5:45:50[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.14500192405010254
  log_density:                   -11.4698640380446
  hamiltonian_energy:            16.450317333354995
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  7.574157297487531
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▋                            |  ETA: 0:00:29[K
  iterations:                    1016
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.153254128567946
  hamiltonian_energy:            16.030535588182154
  hamiltonian_energy_error:      -2.077770899675542
  max_hamiltonian_energy_error:  -2.077770899675542
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.1873837367422424
  nom_step_size:                 1.1873837367422424
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1558548773267858, 0.8823 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▏                           |  ETA: 0:00:25[K
  iterations:                    1189
  n_steps:                       127
  is_accept:                     true
  acceptance_rate:               0.9172915891625069
  log_density:                   -13.924749030269275
  hamiltonian_energy:            19.173437595327925
  hamiltonian_energy_error:      -0.06342157691880246
  max_hamiltonian_energy_error:  0.4892381047241301
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.7794337121855165
  nom_step_size:                 0.7794337121855165
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1558548773267858, 0.8823 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:22[K
  iterations:                    1353
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.44327162396319975
  log_density:                   -14.769710073080304
  hamiltonian_energy:            17.65694383743759
  hamiltonian_energy_error:      0.7538490246288774
  max_hamiltonian_energy_error:  0.9035235950339775
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8743546781190981
  nom_step_size:                 0.8743546781190981
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1558548773267858, 0.8823 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:18[K
  iterations:                    1695
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8209942153077746
  log_density:                   -13.028811737161455
  hamiltonian_energy:            14.243481515334011
  hamiltonian_energy_error:      0.421838642532272
  max_hamiltonian_energy_error:  0.421838642532272
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8578650089074638
  nom_step_size:                 0.8578650089074638
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1558548773267858, 0.8823 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:16[K
  iterations:                    1905
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               0.8495982969265224
  log_density:                   -15.868928821935572
  hamiltonian_energy:            23.47772189022988
  hamiltonian_energy_error:      -0.12775842604400367
  max_hamiltonian_energy_error:  -0.8845503822278289
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8300191543471854
  nom_step_size:                 0.8300191543471854
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1558548773267858, 0.8823 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|██████                         |  ETA: 0:00:13[K
  iterations:                    2302
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9606713832688418
  log_density:                   -10.930158059624645
  hamiltonian_energy:            14.031946375388847
  hamiltonian_energy_error:      -0.06842801217796257
  max_hamiltonian_energy_error:  0.10478995846627903
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▉                        |  ETA: 0:00:11[K
  iterations:                    2652
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9391016900013225
  log_density:                   -12.006555860429408
  hamiltonian_energy:            17.478495455645838
  hamiltonian_energy_error:      -0.23789536073265083
  max_hamiltonian_energy_error:  -0.3064539826184074
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▉                       |  ETA: 0:00:10[K
  iterations:                    3059
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7694445511917373
  log_density:                   -17.06508794708511
  hamiltonian_energy:            19.048032387777187
  hamiltonian_energy_error:      0.4742435114092842
  max_hamiltonian_energy_error:  0.5043644477629634
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▉                      |  ETA: 0:00:09[K
  iterations:                    3413
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9983163938879839
  log_density:                   -15.530341428718007
  hamiltonian_energy:            22.55778964982629
  hamiltonian_energy_error:      -0.21357100168957643
  max_hamiltonian_energy_error:  -0.3011362204351329
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|█████████▊                     |  ETA: 0:00:08[K
  iterations:                    3792
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8283310040144677
  log_density:                   -15.422439336099092
  hamiltonian_energy:            16.292160493943964
  hamiltonian_energy_error:      0.43016817373203153
  max_hamiltonian_energy_error:  0.43016817373203153
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▊                    |  ETA: 0:00:07[K
  iterations:                    4158
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9998540614328081
  log_density:                   -15.796246683720948
  hamiltonian_energy:            20.327388193987737
  hamiltonian_energy_error:      0.0010220921285899465
  max_hamiltonian_energy_error:  -0.13744700488264883
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▋                   |  ETA: 0:00:06[K
  iterations:                    4519
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7999745357301816
  log_density:                   -17.077443266095116
  hamiltonian_energy:            19.62822360054614
  hamiltonian_energy_error:      0.48878048992011003
  max_hamiltonian_energy_error:  0.5348925350519451
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▉                  |  ETA: 0:00:06[K
  iterations:                    4964
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9558095682441661
  log_density:                   -11.558280070638098
  hamiltonian_energy:            19.152378080649605
  hamiltonian_energy_error:      -0.3946521971419301
  max_hamiltonian_energy_error:  -0.3946521971419301
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 44%|█████████████▊                 |  ETA: 0:00:05[K
  iterations:                    5339
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.187737397769185
  hamiltonian_energy:            16.483297894526928
  hamiltonian_energy_error:      -0.1010491989579414
  max_hamiltonian_energy_error:  -0.17515070659740317
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▉                |  ETA: 0:00:04[K
  iterations:                    5778
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9526363870978357
  log_density:                   -14.138363845097285
  hamiltonian_energy:            18.53429231450001
  hamiltonian_energy_error:      -0.022021362493930496
  max_hamiltonian_energy_error:  -0.16566420961072126
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▊               |  ETA: 0:00:04[K
  iterations:                    6113
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9981304135725374
  log_density:                   -13.038266575605302
  hamiltonian_energy:            16.18958111941727
  hamiltonian_energy_error:      -0.10617617169143756
  max_hamiltonian_energy_error:  -0.2453594701362114
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▊              |  ETA: 0:00:04[K
  iterations:                    6471
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8776696270795691
  log_density:                   -12.04961023380571
  hamiltonian_energy:            17.168649774601743
  hamiltonian_energy_error:      -0.005504968162224344
  max_hamiltonian_energy_error:  0.31203547407173815
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▋             |  ETA: 0:00:03[K
  iterations:                    6807
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.91478845608496
  log_density:                   -11.346016346963223
  hamiltonian_energy:            19.067295679872807
  hamiltonian_energy_error:      -0.32164779832224966
  max_hamiltonian_energy_error:  0.37430906346815007
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▋            |  ETA: 0:00:03[K
  iterations:                    7193
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8755930222981197
  log_density:                   -13.100242455490237
  hamiltonian_energy:            18.570340098575244
  hamiltonian_energy_error:      0.02951451648896608
  max_hamiltonian_energy_error:  0.3197977055997008
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▌           |  ETA: 0:00:03[K
  iterations:                    7557
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9498545938627606
  log_density:                   -12.322358544510978
  hamiltonian_energy:            15.971717748322064
  hamiltonian_energy_error:      -0.0006919521286707919
  max_hamiltonian_energy_error:  0.14506249926837889
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▌          |  ETA: 0:00:02[K
  iterations:                    7932
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9535206371456356
  log_density:                   -10.023550210408006
  hamiltonian_energy:            12.27474340101833
  hamiltonian_energy_error:      -0.03838413291637366
  max_hamiltonian_energy_error:  0.12656846537964128
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▍         |  ETA: 0:00:02[K
  iterations:                    8296
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9880875513102121
  log_density:                   -12.971092064521468
  hamiltonian_energy:            16.951090647548885
  hamiltonian_energy_error:      -0.024938966597677137
  max_hamiltonian_energy_error:  0.03303427051806551
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▍        |  ETA: 0:00:02[K
  iterations:                    8653
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9843470990868978
  log_density:                   -13.232468934858366
  hamiltonian_energy:            17.495465777670518
  hamiltonian_energy_error:      -0.05093170707103312
  max_hamiltonian_energy_error:  -0.08577426833960544
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▍       |  ETA: 0:00:02[K
  iterations:                    9071
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8445179268646967
  log_density:                   -15.2002782518687
  hamiltonian_energy:            16.94062464332329
  hamiltonian_energy_error:      0.28254772762554836
  max_hamiltonian_energy_error:  0.28254772762554836
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████▎      |  ETA: 0:00:01[K
  iterations:                    9389
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.67112521003623
  hamiltonian_energy:            15.635643515572049
  hamiltonian_energy_error:      -0.16605175255216587
  max_hamiltonian_energy_error:  -0.34731703819442217
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▍     |  ETA: 0:00:01[K
  iterations:                    9811
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.35871214142118
  hamiltonian_energy:            20.637568650721366
  hamiltonian_energy_error:      -0.43681208073890687
  max_hamiltonian_energy_error:  -0.43681208073890687
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████▏    |  ETA: 0:00:01[K
  iterations:                    10134
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.791032438043496
  hamiltonian_energy:            20.8320175886344
  hamiltonian_energy_error:      -0.29251464511072456
  max_hamiltonian_energy_error:  -0.7193916740817237
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▌   |  ETA: 0:00:01[K
  iterations:                    10653
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.866704797781506
  log_density:                   -16.915639128470694
  hamiltonian_energy:            21.47004038852048
  hamiltonian_energy_error:      0.2175040742099128
  max_hamiltonian_energy_error:  0.2916304948172339
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|████████████████████████████▊  |  ETA: 0:00:00[K
  iterations:                    11119
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9499355313392625
  log_density:                   -14.737171632226255
  hamiltonian_energy:            17.45510453945312
  hamiltonian_energy_error:      0.12230977892079409
  max_hamiltonian_energy_error:  0.12230977892079409
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▊ |  ETA: 0:00:00[K
  iterations:                    11528
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.988198272828374
  log_density:                   -17.55469947236051
  hamiltonian_energy:            20.273768012325277
  hamiltonian_energy_error:      0.08622487567349069
  max_hamiltonian_energy_error:  -0.4585354085739688
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.987575971627071
  log_density:                   -14.393932212803058
  hamiltonian_energy:            21.99811420765345
  hamiltonian_energy_error:      -0.2706076764178036
  max_hamiltonian_energy_error:  -0.2706076764178036
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6489592837734866
  nom_step_size:                 0.6489592837734866
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0232685323747361, 0.9725 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.723929903 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0232685323747361, 0.9725 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.649), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0664401791145666
└   average_acceptance_rate = 0.8832326131382042
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.943155788 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Matrix mode: Test Failed at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:48
  Expression: ≈(mean(samples), zeros(D, n_chains), atol = RNDATOL * n_chains)
   Evaluated: [-0.013237150002422116 -0.06759495701656144 … 0.012526804715586969 -0.004945823892822947; -0.0007544853234347162 -0.027093489360633053 … -0.0039013158171852685 0.004051507405591674; … ; 0.009394175419051668 0.015554623882792962 … 0.0018966391562626672 -0.01658262534932129; -0.0044343775471560425 -0.02734988879396147 … 0.00834935031089411 0.013178501049989445] ≈ [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0] (atol=1.25)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:48
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
 [3] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:6
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            5 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡇⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢇⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢸⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠘⡄⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡆⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⡇⠀⠀⠀⠀⠀⢀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠸⡀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⢸⠀⠀⠀⠀⡔⠁│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⢱⡜⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠸⠔⠒⠉⠉⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⡸⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠔⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⢀⠇⠈⡆⠀⡔⠑⠤⡀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⡸⠀⠀⠸⠎⠀⠀⠀⠈⠑⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⢀⡜⢀⡀⠀⠀⡠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣣⠀⠀⠀⢀⠎⡠⠊⠈⠑⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            1 │⠀⠀⢣⡣⡠⢤⠞⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary:                                            | Pass  Fail  Total
AdvancedHMC                                              | 2874     1   2875
  Online v.s. naive v.s. true var/cov estimation         |   12           12
  Preconditioner constructors                            |    2            2
  Stan HMC adaptors                                      |   12           12
  Adapted mass v.s. true variance                        |   20           20
  Initialisation adaptor by metric                       |    2            2
  rand momentum variables from metric via vector of RNGs |    2            2
  Passing random number generator                        |   12           12
  TreeSampler                                            |    5            5
  TerminationCriterion                                   |    2            2
  Termination                                            |   20           20
  BinaryTree                                             |    4            4
  ClassicNoUTurn                                         |    4            4
  PhasePoint                                             |    4            4
  Metric                                                 |   60           60
  step(::Leapfrog) against step(::Leapfrog)              |    2            2
  jitter                                                 |    4            4
  temper                                                 |    7            7
  Eq (2.11) from (Neal, 2011)                            |    4            4
  `gdemo`                                                |    1            1
  HMC and NUTS                                           | 2664         2664
  drop_warmup                                            |    4            4
  Matrix mode                                            |   27     1     28
ERROR: LoadError: Some tests did not pass: 2874 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/runtests.jl:3
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package AdvancedHMC errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
