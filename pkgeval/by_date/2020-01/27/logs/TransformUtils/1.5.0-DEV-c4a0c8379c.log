Julia Version 1.5.0-DEV.152
Commit c4a0c8379c (2020-01-26 14:50 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_3zbniB/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_3zbniB/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_3zbniB/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.12010757210817963 -0.05502016453696319; -0.12010757210817963 0.0 0.03933693343799333; 0.05502016453696319 -0.03933693343799333 0.0])
dAA = so3([0.0 0.014064960102800764 0.05119314723100837; -0.014064960102800764 0.0 -0.0018610266545638202; -0.05119314723100837 0.0018610266545638202 0.0])
dAA = so3([0.0 -0.10091258819668665 -0.05532759424488909; 0.10091258819668665 0.0 0.10381692796905018; 0.05532759424488909 -0.10381692796905018 0.0])
dAA = Quaternion(0.9993001200150189, [0.020616586728409332, -0.03106672674792578, -0.003014129859260881])
dAA = SO3([0.9909088347926485 0.09130829311225326 -0.09880524651455973; -0.09421107973597607 0.9952354427584378 -0.02511346117918061; 0.09604141598736261 0.03419369951238822 0.9947898458110633])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9912049339800757 0.03535641472910217 0.12752530255230687; -0.03476184058609154 0.9993719036096044 -0.006885689129108607; -0.1276886576506341 0.002392114800609034 0.9918114157914093]), [-0.39336933437993327, -0.5502016453696319, -1.2010757210817962])
xj = SE3(SO3([0.9878536078598587 0.010176391915907246 -0.15505383092924335; -0.02620553558786624 0.9944711320393457 -0.10168794149227033; 0.15316174242549474 0.10451606856343273 0.982658573498054]), [-1.0381692796905018, -0.5532759424488909, 1.0091258819668665])
Dx = SE3(SO3([0.9605193055175459 -0.037828273580045875 -0.2756296164167499; 0.009104266336520995 0.9944563234784958 -0.10475558709733263; 0.27806433799134533 0.09811035832972151 0.9555388958728203]), [-0.9212396948274987, -0.02058312444108079, 2.1098960416466737])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
