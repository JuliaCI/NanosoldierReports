Julia Version 1.5.0-DEV.84
Commit 833e6bf451 (2020-01-17 18:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_QkjTtl/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_QkjTtl/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_QkjTtl/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.028501105864459614 0.11338346015725956; -0.028501105864459614 0.0 0.23021164067173477; -0.11338346015725956 -0.23021164067173477 0.0])
dAA = so3([0.0 0.0006485437126512269 0.028233341790821; -0.0006485437126512269 0.0 0.09667376652931087; -0.028233341790821 -0.09667376652931087 0.0])
dAA = so3([0.0 0.060102834409195276 0.00932413777345887; -0.060102834409195276 0.0 0.01303645007712811; -0.00932413777345887 -0.01303645007712811 0.0])
dAA = Quaternion(0.9993497124550562, [0.009959611891924116, 0.024122123086580526, 0.02488134893358618])
dAA = SO3([0.9933505719784069 0.10575370562707981 0.04550598747761881; -0.08985154339827209 0.9592519765110098 -0.2678849486415203; -0.07198153443155182 0.2620148837487338 0.9623756332093084])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9975208197619143 -0.0068802002353611355 0.07003482695230806; -0.010088764678206543 0.9709469818848852 0.2390819424295785; -0.06964503549274831 -0.2391957800910247 0.9684704165940538]), [-2.3021164067173476, 1.1338346015725955, -0.28501105864459614])
xj = SE3(SO3([0.9850170719524299 -0.12189248937391005 0.12199831554776766; 0.1281799937052206 0.9907267115847267 -0.04506076082628123; -0.11537442167131791 0.06002336200801264 0.9915069030709085]), [-0.1303645007712811, 0.0932413777345887, -0.6010283440919527])
Dx = SE3(SO3([0.9893171149927766 -0.135765833754117 0.05309693369130081; 0.14527593813004736 0.9484244203208141 -0.2817552497107418; -0.012105692165406398 0.28645899763173305 0.9580160201651218]), [2.1988750767611607, -0.9497129369149833, -0.40274217240609334])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
