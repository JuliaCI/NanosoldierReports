Julia Version 1.5.0-DEV.84
Commit 833e6bf451 (2020-01-17 18:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed Reexport ──────────────────── v0.2.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed KCenters ──────────────────── v0.1.8
 Installed OrderedCollections ────────── v1.1.0
 Installed DataStructures ────────────── v0.17.9
 Installed StatsBase ─────────────────── v0.32.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed JSON ──────────────────────── v0.21.0
 Installed TableTraits ───────────────── v1.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed InvertedIndices ───────────── v1.0.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Parsers ───────────────────── v0.3.10
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Missings ──────────────────── v0.4.3
 Installed Tables ────────────────────── v0.2.11
 Installed DataFrames ────────────────── v0.20.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed Compat ────────────────────── v3.2.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_PaJeH8/Project.toml`
 [no changes]
  Updating `/tmp/jl_PaJeH8/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_PaJeH8/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 147.10999999999996
[ Info: 86.17000000000013
[ Info: 41.46999999999998
[ Info: 28.39999999999998
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.2399983987154
[ Info: 76.3400011618807
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.06122865525321
inertia(cdnet.distances) = 23.575253754950744
inertia(crand.distances) = 21.036765231389744
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8036900599400607,"seconds":3.7085264921188354e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.078125,"distances_sum":1814.8262618937754}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4248046875,"f1":null,"seconds":4.0959566831588745e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.5546875,"distances_sum":1076.5400603439898}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":null,"recall":0.7626953125,"f1":null,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.734375,"distances_sum":2097.52857878218}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":2,"bsize":5},"perf":{"precision":null,"recall":0.7626953125,"f1":null,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.734375,"distances_sum":2097.52857878218}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9518086080586086,"seconds":6.373971700668335e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9921875,"distances_sum":2661.2948491080474}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882788,"seconds":6.2622129917144775e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":9.0,"distances_sum":2759.63483313534}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9448546245421252,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":9.0,"distances_sum":2595.02111950253}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9080815018315025,"seconds":2.030283212661743e-5,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9921875,"distances_sum":2364.122916112073}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882788,"seconds":6.2622129917144775e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":9.0,"distances_sum":2759.63483313534}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9676739926739931,"seconds":6.465241312980652e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.984375,"distances_sum":2816.919194889629}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9817708333333336,"seconds":6.77257776260376e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9921875,"distances_sum":2908.893361010553}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672676282051285,"seconds":6.387010216712952e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9921875,"distances_sum":2783.6755789355757}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9817708333333336,"seconds":6.77257776260376e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9921875,"distances_sum":2908.893361010553}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9817708333333336,"seconds":6.77257776260376e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9921875,"distances_sum":2908.893361010553}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3974609375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3974609375,"f1":null,"seconds":3.8780272006988525e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.3359375,"distances_sum":961.5452433663586}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5419921875,"f1":0.6865190365190371,"seconds":4.393979907035828e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.9921875,"distances_sum":1319.509065228431}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5419921875,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.5419921875,"f1":0.6865190365190371,"seconds":4.393979907035828e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.9921875,"distances_sum":1319.509065228431}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8412863178488188,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.03125,"distances_sum":1875.854554844517}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8599015567765578,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.078125,"distances_sum":2000.5085478027956}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.55859375,"f1":null,"seconds":4.116445779800415e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.03125,"distances_sum":1379.187304332812}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8599015567765578,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.078125,"distances_sum":2000.5085478027956}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8849905303030312,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.2734375,"distances_sum":2120.0888547829913}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.802734375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.802734375,"f1":0.8849905303030312,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.2734375,"distances_sum":2120.0888547829913}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.802734375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.802734375,"f1":0.8849905303030312,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.2734375,"distances_sum":2120.0888547829913}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2392578125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2392578125,"f1":null,"seconds":3.5874545574188232e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":6.5234375,"distances_sum":607.1943045925726}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2392578125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2392578125,"f1":null,"seconds":3.5874545574188232e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":6.5234375,"distances_sum":607.1943045925726}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.810957792207793,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.8984375,"distances_sum":1631.6089508038563}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2236328125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2236328125,"f1":null,"seconds":3.4123659133911133e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.1640625,"distances_sum":507.39015738629627}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6953125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6953125,"f1":0.810957792207793,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.8984375,"distances_sum":1631.6089508038563}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9366357600732605,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":2292.1706419930324}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9366357600732605,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":2292.1706419930324}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9366357600732605,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":2292.1706419930324}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.888671875,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9366357600732605,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":2292.1706419930324}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.607421875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.607421875,"f1":0.7423808830058837,"seconds":4.760921001434326e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.4453125,"distances_sum":1386.3996552393419}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.423828125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.423828125,"f1":null,"seconds":4.122033715248108e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":6.59375,"distances_sum":905.871523049787}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.607421875,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.607421875,"f1":0.7423808830058837,"seconds":4.760921001434326e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.4453125,"distances_sum":1386.3996552393419}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7829392829392837,"seconds":4.872679710388184e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.84375,"distances_sum":1532.4176891746274}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8440252455877463,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.3671875,"distances_sum":1719.8159184815468}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7957103660228669,"seconds":4.686415195465088e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.953125,"distances_sum":1553.9391568752817}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8169471153846163,"seconds":4.8317015171051025e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.0859375,"distances_sum":1652.0859299023796}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.8440252455877463,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.3671875,"distances_sum":1719.8159184815468}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9400927197802204,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.6796875,"distances_sum":2298.102653247782}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9546932234432242,"seconds":6.206333637237549e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.828125,"distances_sum":2412.2044621963096}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.893472673160174,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.484375,"distances_sum":1989.8294205331156}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9311500999001006,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.6484375,"distances_sum":2242.307436925521}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9408768315018321,"seconds":8.16788524389267e-5,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.7421875,"distances_sum":2307.116516412817}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9546932234432242,"seconds":6.206333637237549e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.828125,"distances_sum":2412.2044621963096}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9546932234432242,"seconds":6.206333637237549e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.828125,"distances_sum":2412.2044621963096}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2373046875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2373046875,"f1":null,"seconds":3.3099204301834106e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.359375,"distances_sum":542.3961412473145}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.7978002899877907,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.9375,"distances_sum":1550.5094513276438}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.41015625,"f1":null,"seconds":3.943219780921936e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.703125,"distances_sum":840.3633471244689}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5859375,"f1":null,"seconds":4.462897777557373e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.640625,"distances_sum":1248.1191420596215}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6845703125,"f1":0.7978002899877907,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.9375,"distances_sum":1550.5094513276438}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8595904095904104,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.375,"distances_sum":1716.7709607581617}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7080078125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.7080078125,"f1":0.8188457375957384,"seconds":4.69014048576355e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.0625,"distances_sum":1575.560704266511}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9513621794871803,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.71875,"distances_sum":2229.5780456677653}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.923094093406594,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.640625,"distances_sum":2043.0053377592071}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8612439643689652,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.421875,"distances_sum":1706.662975837917}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9513621794871803,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.71875,"distances_sum":2229.5780456677653}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9653502747252751,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.890625,"distances_sum":2356.372380341119}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9561043123543129,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.828125,"distances_sum":2305.060746470712}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9653502747252751,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.890625,"distances_sum":2356.372380341119}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9653502747252751,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.890625,"distances_sum":2356.372380341119}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.408203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.408203125,"f1":null,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.9140625,"distances_sum":912.3501822170643}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8452417374292382,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.453125,"distances_sum":1826.740772376775}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5888671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5888671875,"f1":null,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.7578125,"distances_sum":1376.0987261388705}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.8452417374292382,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.453125,"distances_sum":1826.740772376775}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9191849816849826,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.6953125,"distances_sum":2220.345054544649}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9041437728937737,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.609375,"distances_sum":2088.245227249999}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.929378434065935,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.75,"distances_sum":2269.8354939931974}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9176084332334341,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.6484375,"distances_sum":2220.8579864494236}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.929378434065935,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.75,"distances_sum":2269.8354939931974}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9565876831501837,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9140625,"distances_sum":2432.881035944764}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786458333333337,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9765625,"distances_sum":2584.600733354734}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604739010989013,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9140625,"distances_sum":2457.7500760765074}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.980952380952381,"seconds":6.2622129917144775e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9609375,"distances_sum":2596.959772651385}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9610347985347991,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.921875,"distances_sum":2476.6166305401885}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.980952380952381,"seconds":6.2622129917144775e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9609375,"distances_sum":2596.959772651385}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.980952380952381,"seconds":6.2622129917144775e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9609375,"distances_sum":2596.959772651385}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5849609375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5849609375,"f1":0.7235424297924304,"seconds":4.516914486885071e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.3671875,"distances_sum":1357.5397190341307}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6025390625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.6025390625,"f1":0.739857538295039,"seconds":4.405155777931213e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.484375,"distances_sum":1375.152758081027}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7060546875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.7060546875,"f1":0.815979333166834,"seconds":4.9658119678497314e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.8125,"distances_sum":1639.4895601334679}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7060546875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.7060546875,"f1":0.815979333166834,"seconds":4.9658119678497314e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.8125,"distances_sum":1639.4895601334679}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8745738636363646,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.296875,"distances_sum":1890.4738742835095}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9335711163836172,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6171875,"distances_sum":2268.788382733435}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9112382409257416,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.59375,"distances_sum":2151.2809378732272}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.86834987928738,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.34375,"distances_sum":1901.6014040638595}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9335711163836172,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6171875,"distances_sum":2268.788382733435}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670215201465207,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9296875,"distances_sum":2508.8255850761007}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9440934065934071,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.765625,"distances_sum":2394.7933059308893}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586939102564107,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.859375,"distances_sum":2473.819092302897}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9656078296703301,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8984375,"distances_sum":2498.5080802101998}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9535771520146524,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8125,"distances_sum":2438.9938144190464}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9514053654678659,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7578125,"distances_sum":2437.3863621193195}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9551198801198809,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.859375,"distances_sum":2432.280366584453}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670215201465207,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9296875,"distances_sum":2508.8255850761007}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670215201465207,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9296875,"distances_sum":2508.8255850761007}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.228515625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.228515625,"f1":null,"seconds":3.6712735891342163e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.703125,"distances_sum":482.7307512659852}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6917405511155519,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.78125,"distances_sum":1043.8013810517982}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5517578125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5517578125,"f1":0.6917405511155519,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.78125,"distances_sum":1043.8013810517982}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9145838536463544,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4921875,"distances_sum":1739.7659759706642}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.85546875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.9145838536463544,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4921875,"distances_sum":1739.7659759706642}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.85546875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.9145838536463544,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4921875,"distances_sum":1739.7659759706642}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.85546875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.9145838536463544,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4921875,"distances_sum":1739.7659759706642}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7764971139971149,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":7.4140625,"distances_sum":1187.8923682909744}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.705100975413476,"seconds":4.796311259269714e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":6.90625,"distances_sum":984.8133264439274}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65234375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.65234375,"f1":0.7764971139971149,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":7.4140625,"distances_sum":1187.8923682909744}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9304086538461547,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.4609375,"distances_sum":1753.1861626533841}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8596762612387623,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":7.9609375,"distances_sum":1411.0838594009188}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8515770687645696,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":7.8828125,"distances_sum":1382.9588131597247}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9304086538461547,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.4609375,"distances_sum":1753.1861626533841}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9560496794871801,"seconds":6.752088665962219e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.75,"distances_sum":1908.111268797954}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9747596153846158,"seconds":6.787478923797607e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.875,"distances_sum":2000.8440711383207}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9747596153846158,"seconds":6.787478923797607e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.875,"distances_sum":2000.8440711383207}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9747596153846158,"seconds":6.787478923797607e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.875,"distances_sum":2000.8440711383207}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.548828125,"f1":0.6909625097125104,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.1796875,"distances_sum":1036.8474132056665}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.548828125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.548828125,"f1":0.6909625097125104,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.1796875,"distances_sum":1036.8474132056665}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7917757589632598,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.7734375,"distances_sum":1287.6120316678894}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8057780760905771,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.7734375,"distances_sum":1305.9728973980789}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6865234375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6865234375,"f1":0.8057780760905771,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.7734375,"distances_sum":1305.9728973980789}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8992736430236437,"seconds":6.405636668205261e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.46875,"distances_sum":1656.554800126069}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9469036172161179,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.65625,"distances_sum":1890.8951785321526}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9469036172161179,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.65625,"distances_sum":1890.8951785321526}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9469036172161179,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.65625,"distances_sum":1890.8951785321526}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.291015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.291015625,"f1":null,"seconds":4.187226295471191e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.78125,"distances_sum":525.8384789363173}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.291015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.291015625,"f1":null,"seconds":4.187226295471191e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.78125,"distances_sum":525.8384789363173}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6959642787767794,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.2734375,"distances_sum":961.8143519309044}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.525390625,"f1":0.6695719211344215,"seconds":4.7441571950912476e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.875,"distances_sum":876.449913610359}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5361328125,"f1":0.6796958250083255,"seconds":4.686415195465088e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.9296875,"distances_sum":917.9460741342855}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5546875,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.5546875,"f1":0.6959642787767794,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.2734375,"distances_sum":961.8143519309044}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9119021603396612,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.3125,"distances_sum":1578.776434026694}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.8224910506160514,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.8203125,"distances_sum":1267.5005877743292}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.937228396603397,"seconds":6.575137376785278e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.53125,"distances_sum":1697.206424421245}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.841020958208459,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.84375,"distances_sum":1296.0512683415109}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8497721028971038,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.828125,"distances_sum":1366.7984465943073}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9101539085914094,"seconds":6.170943379402161e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.34375,"distances_sum":1579.685712741766}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.937228396603397,"seconds":6.575137376785278e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.53125,"distances_sum":1697.206424421245}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9672447344322352,"seconds":6.755813956260681e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8125,"distances_sum":1885.0714449711631}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9587282509157513,"seconds":6.489455699920654e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7734375,"distances_sum":1824.2691084309113}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9583962912087917,"seconds":6.528571248054504e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.78125,"distances_sum":1822.308421934454}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.946626290376291,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6484375,"distances_sum":1785.7364053439808}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9591918498168502,"seconds":6.532296538352966e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7421875,"distances_sum":1854.8553498289182}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9391311813186819,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.65625,"distances_sum":1739.0244836797003}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9672447344322352,"seconds":6.755813956260681e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8125,"distances_sum":1885.0714449711631}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9672447344322352,"seconds":6.755813956260681e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8125,"distances_sum":1885.0714449711631}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5673828125,"f1":0.7085480491730497,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.1640625,"distances_sum":1043.8490370784791}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.587890625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.587890625,"f1":0.7262915903540911,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.2109375,"distances_sum":1072.0471470433295}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.587890625,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.587890625,"f1":0.7262915903540911,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.2109375,"distances_sum":1072.0471470433295}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.843595467032968,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.2578125,"distances_sum":1437.245036840032}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8935075341325353,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.4609375,"distances_sum":1638.1043846378934}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8496571137196144,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.21875,"distances_sum":1456.6266933056897}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8203125,"f1":0.8935075341325353,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.4609375,"distances_sum":1638.1043846378934}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9606856684981689,"seconds":6.498768925666809e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9375,"distances_sum":2005.2015564163178}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9280453921078929,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.65625,"distances_sum":1808.736809701904}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586195054945061,"seconds":6.595626473426819e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.859375,"distances_sum":1989.0580543610452}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9082734973359983,"seconds":6.297603249549866e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.6328125,"distances_sum":1716.6420655410675}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9014714452214461,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.53125,"distances_sum":1677.1953169211665}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9662774725274728,"seconds":6.83218240737915e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.890625,"distances_sum":2047.7280772876686}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9662774725274728,"seconds":6.83218240737915e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.890625,"distances_sum":2047.7280772876686}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9662774725274728,"seconds":6.83218240737915e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.890625,"distances_sum":2047.7280772876686}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2939453125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2939453125,"f1":null,"seconds":4.231929779052734e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":6.8359375,"distances_sum":578.7777896162471}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2939453125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2939453125,"f1":null,"seconds":4.231929779052734e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":6.8359375,"distances_sum":578.7777896162471}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2275390625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2275390625,"f1":null,"seconds":3.507360816001892e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.0859375,"distances_sum":385.02048442511784}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.546875,"f1":0.6888318278943284,"seconds":4.848465323448181e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.0859375,"distances_sum":1037.7937866710483}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.546875,"f1":0.6888318278943284,"seconds":4.848465323448181e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.0859375,"distances_sum":1037.7937866710483}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9096325549450558,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.4375,"distances_sum":1724.4539830400336}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8981799450549457,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.359375,"distances_sum":1668.98663920574}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5791015625, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.5791015625,"f1":0.7161161754911761,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.171875,"distances_sum":1102.6726789930372}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7835416319791328,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.5703125,"distances_sum":1258.6242307270147}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9096325549450558,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.4375,"distances_sum":1724.4539830400336}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9567911255411261,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.765625,"distances_sum":2016.3802138803808}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9326350732600739,"seconds":6.299465894699097e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.40625,"distances_sum":1872.6508793696985}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.937866300366301,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.5234375,"distances_sum":1934.3761738343285}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9567911255411261,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.765625,"distances_sum":2016.3802138803808}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9567911255411261,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.765625,"distances_sum":2016.3802138803808}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.412109375,"f1":null,"seconds":4.500150680541992e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":6.3359375,"distances_sum":762.5431961146392}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7201590076590083,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":7.40625,"distances_sum":1076.463025870823}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7883245226995235,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":7.9140625,"distances_sum":1244.7962165355093}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6630859375,"f1":0.7883245226995235,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":7.9140625,"distances_sum":1244.7962165355093}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8704363344988352,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.3203125,"distances_sum":1539.8607343943822}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9115129662004668,"seconds":6.509944796562195e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.59375,"distances_sum":1714.4967134802998}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84765625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.84765625,"f1":0.9115129662004668,"seconds":6.509944796562195e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.59375,"distances_sum":1714.4967134802998}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9633985805860811,"seconds":7.152557373046875e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.8359375,"distances_sum":2013.047625735934}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9510130494505502,"seconds":6.880611181259155e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.796875,"distances_sum":1943.2147370694904}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.934741300366301,"seconds":7.763691246509552e-5,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.625,"distances_sum":1828.5475057758676}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9652014652014653,"seconds":7.057562470436096e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.7890625,"distances_sum":2053.4408318647884}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9385874542124546,"seconds":6.621703505516052e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.640625,"distances_sum":1857.9998201223923}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652014652014653,"seconds":7.057562470436096e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.7890625,"distances_sum":2053.4408318647884}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652014652014653,"seconds":7.057562470436096e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.7890625,"distances_sum":2053.4408318647884}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.400390625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.400390625,"f1":null,"seconds":4.084780812263489e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.640625,"distances_sum":748.7816881334243}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.400390625,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.400390625,"f1":null,"seconds":4.084780812263489e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.640625,"distances_sum":748.7816881334243}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9213541666666674,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.5625,"distances_sum":1766.980565534212}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8048513986013994,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.71875,"distances_sum":1325.8161188202625}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.865234375,"f1":0.9213541666666674,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.5625,"distances_sum":1766.980565534212}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9636561355311362,"seconds":6.638467311859131e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.828125,"distances_sum":2008.6502170327033}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9396551365301371,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6328125,"distances_sum":1878.714870305216}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9636561355311362,"seconds":6.638467311859131e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.828125,"distances_sum":2008.6502170327033}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9636561355311362,"seconds":6.638467311859131e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.828125,"distances_sum":2008.6502170327033}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2236328125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2236328125,"f1":null,"seconds":3.8370490074157715e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":5.4609375,"distances_sum":423.99029661198085}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8064123376623384,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.96875,"distances_sum":1353.5439829405013}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.8064123376623384,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.96875,"distances_sum":1353.5439829405013}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.941082875457876,"seconds":6.7427754402160645e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6015625,"distances_sum":1935.2419001433868}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8394329628704638,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.140625,"distances_sum":1448.659578593588}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.941082875457876,"seconds":6.7427754402160645e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6015625,"distances_sum":1935.2419001433868}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9546531593406598,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7421875,"distances_sum":2041.9963563330896}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9693853021978024,"seconds":6.42240047454834e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.890625,"distances_sum":2085.249839655596}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9490212912087916,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7421875,"distances_sum":2004.2929192256947}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9435554029304034,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.671875,"distances_sum":1937.073605778478}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9693853021978024,"seconds":6.42240047454834e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.890625,"distances_sum":2085.249839655596}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9693853021978024,"seconds":6.42240047454834e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.890625,"distances_sum":2085.249839655596}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6997939560439566,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.5546875,"distances_sum":1057.3238268334758}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8119000790875799,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.1953125,"distances_sum":1353.8225246027573}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.701171875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.701171875,"f1":0.8119000790875799,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.1953125,"distances_sum":1353.8225246027573}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8534751706626714,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.3046875,"distances_sum":1506.9213978994208}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9020292207792215,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.40625,"distances_sum":1703.6991200226907}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8499042624042632,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.296875,"distances_sum":1482.6918972801084}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9339400183150189,"seconds":6.20819628238678e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.5234375,"distances_sum":1865.9656589905421}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9339400183150189,"seconds":6.20819628238678e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.5234375,"distances_sum":1865.9656589905421}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9460107600732607,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.765625,"distances_sum":1935.1783406602415}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9673820970695972,"seconds":6.515532732009888e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8671875,"distances_sum":2065.04645466479}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9673820970695972,"seconds":6.515532732009888e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8671875,"distances_sum":2065.04645466479}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9673820970695972,"seconds":6.515532732009888e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8671875,"distances_sum":2065.04645466479}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8665267024642034,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.5,"distances_sum":1561.1230190140495}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5400390625,"f1":null,"seconds":4.362314939498901e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.46875,"distances_sum":1053.4363955151496}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8665267024642034,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.5,"distances_sum":1561.1230190140495}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9327838827838837,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7890625,"distances_sum":1838.8112128972452}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9327838827838837,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7890625,"distances_sum":1838.8112128972452}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9557921245421248,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7890625,"distances_sum":2005.0010052238104}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9609031593406596,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8046875,"distances_sum":2031.2080688597969}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.967857142857143,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.890625,"distances_sum":2054.829978325027}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.967857142857143,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.890625,"distances_sum":2054.829978325027}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.967857142857143,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.890625,"distances_sum":2054.829978325027}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.390014171600342e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.0546875,"distances_sum":735.384078117452}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.20703125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.20703125,"f1":null,"seconds":2.6747584342956543e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.015625,"distances_sum":397.2418483032742}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3681640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3681640625,"f1":null,"seconds":3.2316893339157104e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.9453125,"distances_sum":686.3042345512018}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8053243631368641,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.578125,"distances_sum":1252.0118695319943}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.689453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.689453125,"f1":0.8053243631368641,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.578125,"distances_sum":1252.0118695319943}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9112783050283059,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.34375,"distances_sum":1681.5604927730503}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9130036630036639,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.4296875,"distances_sum":1667.5848045528794}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9167842574092581,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.4609375,"distances_sum":1713.586984013827}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8579571470196479,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.1015625,"distances_sum":1462.048232224739}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8583984375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8583984375,"f1":0.9167842574092581,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.4609375,"distances_sum":1713.586984013827}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9626144688644692,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8125,"distances_sum":1952.8464302030677}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9486893315018321,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.6953125,"distances_sum":1898.516920415416}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9539179570429573,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.75,"distances_sum":1935.2945827676015}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9408195970695976,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.625,"distances_sum":1865.678793762078}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9519402472527475,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.71875,"distances_sum":1906.5318774926395}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9626144688644692,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8125,"distances_sum":1952.8464302030677}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9626144688644692,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8125,"distances_sum":1952.8464302030677}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":6.411783397197723e-5,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.8984375,"distances_sum":700.7329576880078}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2822265625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2822265625,"f1":null,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.6328125,"distances_sum":544.8632921178165}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4365234375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4365234375,"f1":null,"seconds":3.973022103309631e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.265625,"distances_sum":783.2981877092593}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4365234375,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.4365234375,"f1":null,"seconds":3.973022103309631e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.265625,"distances_sum":783.2981877092593}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.634765625, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.634765625,"f1":0.764987443112444,"seconds":4.200264811515808e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.5,"distances_sum":1181.7034537608877}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5615234375,"f1":null,"seconds":4.14624810218811e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.8828125,"distances_sum":1073.3636482286001}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7033603549228556,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.8046875,"distances_sum":1024.2571659580487}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.638671875,"f1":0.7668352480852488,"seconds":4.494562745094299e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.6015625,"distances_sum":1233.0852226709328}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8441995504495514,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.9453125,"distances_sum":1471.8242852903459}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.740234375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.740234375,"f1":0.8441995504495514,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.9453125,"distances_sum":1471.8242852903459}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9540407509157511,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8984375,"distances_sum":2023.0970006262264}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9495993589743595,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.875,"distances_sum":1991.7310532781685}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9621108058608066,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.984375,"distances_sum":2046.3647671506026}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9640713453213458,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8828125,"distances_sum":2120.1814912444947}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8589384573759582,"seconds":4.991888999938965e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.0078125,"distances_sum":1577.7631256582526}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9381181318681325,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9140625,"distances_sum":1901.4124834637869}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8999885531135542,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.671875,"distances_sum":1697.353408534047}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9548992673992678,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9375,"distances_sum":2010.0018960479865}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9640713453213458,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8828125,"distances_sum":2120.1814912444947}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9640713453213458,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8828125,"distances_sum":2120.1814912444947}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.64453125,"f1":0.7705010267510275,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.84375,"distances_sum":1322.0493998110833}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.44140625,"f1":0.5920732045732048,"seconds":4.000961780548096e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.09375,"distances_sum":837.0389351876333}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.64453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.64453125,"f1":0.7705010267510275,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.84375,"distances_sum":1322.0493998110833}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.954767628205129,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8671875,"distances_sum":2153.7403188728545}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.954767628205129,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8671875,"distances_sum":2153.7403188728545}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696085164835168,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9765625,"distances_sum":2214.0945179365717}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696085164835168,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9765625,"distances_sum":2214.0945179365717}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696085164835168,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9765625,"distances_sum":2214.0945179365717}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":3.8370490074157715e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.84375,"distances_sum":842.4803186101217}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2568359375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2568359375,"f1":null,"seconds":3.4011900424957275e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.328125,"distances_sum":557.4082216169842}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8503356018981029,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.8984375,"distances_sum":1759.3575561379178}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8503356018981029,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.8984375,"distances_sum":1759.3575561379178}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8817739552114561,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.46875,"distances_sum":1966.472360698086}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8909777722277731,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.5625,"distances_sum":1964.874158416051}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.814453125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.814453125,"f1":0.8909777722277731,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.5625,"distances_sum":1964.874158416051}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605711996337002,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8984375,"distances_sum":2418.5214621543823}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9621165293040299,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2435.01268337675}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9388163919413924,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7890625,"distances_sum":2303.597662893421}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9202724358974363,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7734375,"distances_sum":2139.969552517473}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9484661172161178,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.765625,"distances_sum":2381.8412460520776}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9621165293040299,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2435.01268337675}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9621165293040299,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2435.01268337675}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8584514443889452,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.9921875,"distances_sum":1799.459296424672}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7150327103452111,"seconds":4.196539521217346e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.234375,"distances_sum":1255.7038784116107}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8553670288045297,"seconds":4.976987838745117e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.0859375,"distances_sum":1757.1487415619204}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8584514443889452,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.9921875,"distances_sum":1799.459296424672}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8955679736929746,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.5078125,"distances_sum":1988.3265733749424}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9319685522810527,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8515625,"distances_sum":2205.455512347414}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8923966658341667,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.5390625,"distances_sum":1911.7676241656425}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9677312271062273,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9296875,"distances_sum":2450.9883877256266}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9051828379953386,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.6015625,"distances_sum":2006.4153481766723}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9677312271062273,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9296875,"distances_sum":2450.9883877256266}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9716796875, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.9716796875,"f1":0.9844322344322347,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.984375,"distances_sum":2582.59096044953}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.978405448717949,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":9.0,"distances_sum":2534.8515767894637}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9706101190476193,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.984375,"distances_sum":2454.9510349498805}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9716796875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9844322344322347,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.984375,"distances_sum":2582.59096044953}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9716796875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9844322344322347,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.984375,"distances_sum":2582.59096044953}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1748046875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1748046875,"f1":null,"seconds":2.866610884666443e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.1875,"distances_sum":457.71375362468}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7956231268731279,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.15625,"distances_sum":1511.366838506055}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6767578125,"f1":0.7956231268731279,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.15625,"distances_sum":1511.366838506055}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8536380286380295,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3515625,"distances_sum":1770.7950866101878}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9067885239760248,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7734375,"distances_sum":2010.4629662757754}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.943252060439561,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7734375,"distances_sum":2247.372028005123}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8513611388611397,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.359375,"distances_sum":1759.5000547942661}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.943252060439561,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7734375,"distances_sum":2247.372028005123}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599702380952385,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8515625,"distances_sum":2364.938982002306}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.950841346153847,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8046875,"distances_sum":2303.4898473838402}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9599702380952385,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8515625,"distances_sum":2364.938982002306}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9599702380952385,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8515625,"distances_sum":2364.938982002306}}, n: 9
inertia(cfft.distances) = 20.198673076923075
inertia(cdnet.distances) = 21.819618909685094
inertia(crand.distances) = 20.64421841122055
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333332
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9333333333333332
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9311111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.94
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9155555555555556
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.931111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9355555555555556
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9088888888888889
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9133333333333332
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8533333333333334
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 1, 2, 2, 3, 3, 3, 3, 2, 3, 1, 3, 2, 1, 3, 3, 1]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 8, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 4, 2]]
** centroid: 9, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 2)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 11, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 1, 2, 2, 3, 3, 2, 3, 3]
acc = 0.96
*** starting iteration: 1; err: [Inf, 0.4580666735998571] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4580666735998571, 0.1735610500225424] ***
*** starting iteration: 2; err: [Inf, 0.4580666735998571, 0.1735610500225424] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4580666735998571, 0.1735610500225424, 0.16463205963670907] ***
*** starting iteration: 3; err: [Inf, 0.4580666735998571, 0.1735610500225424, 0.16463205963670907] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4580666735998571, 0.1735610500225424, 0.16463205963670907, 0.163473004167319] ***
*** starting iteration: 4; err: [Inf, 0.4580666735998571, 0.1735610500225424, 0.16463205963670907, 0.163473004167319] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4580666735998571, 0.1735610500225424, 0.16463205963670907, 0.163473004167319, 0.163473004167319] ***
*** finished computation of 12 references, err: [Inf, 0.4580666735998571, 0.1735610500225424, 0.16463205963670907, 0.163473004167319, 0.163473004167319] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 10, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 12, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
finished with 13 centroids; started with 12
acc = 0.9666666666666667
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 5.623200028602562] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.623200028602562, 1.415977259252217] ***
*** starting iteration: 2; err: [Inf, 5.623200028602562, 1.415977259252217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.623200028602562, 1.415977259252217, 0.8612873416964321] ***
*** starting iteration: 3; err: [Inf, 5.623200028602562, 1.415977259252217, 0.8612873416964321] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.623200028602562, 1.415977259252217, 0.8612873416964321, 0.6561765247855313] ***
*** finished computation of 3 references, err: [Inf, 5.623200028602562, 1.415977259252217, 0.8612873416964321, 0.6561765247855313] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 16]]
** centroid: 1, normalized-entropy: 0.9321115676166747, [(2, 30), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [35, 1, 0]]
** centroid: 2, normalized-entropy: 0.18312206830137262, [(1, 35), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1130999977591793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1130999977591793, 0.5247986637047233] ***
*** starting iteration: 2; err: [Inf, 1.1130999977591793, 0.5247986637047233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1130999977591793, 0.5247986637047233, 0.49759868217228137] ***
*** starting iteration: 3; err: [Inf, 1.1130999977591793, 0.5247986637047233, 0.49759868217228137] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1130999977591793, 0.5247986637047233, 0.49759868217228137, 0.48806568208165935] ***
*** finished computation of 3 references, err: [Inf, 1.1130999977591793, 0.5247986637047233, 0.49759868217228137, 0.48806568208165935] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 7]]
** centroid: 2, normalized-entropy: 0.6789538995185759, [(2, 32), (3, 7)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 27]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 3), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.3867000134923506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3867000134923506, 0.9494711358405571] ***
*** starting iteration: 2; err: [Inf, 2.3867000134923506, 0.9494711358405571] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3867000134923506, 0.9494711358405571, 0.939950960234749] ***
*** starting iteration: 3; err: [Inf, 2.3867000134923506, 0.9494711358405571, 0.939950960234749] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3867000134923506, 0.9494711358405571, 0.939950960234749, 0.931383648139106] ***
*** finished computation of 3 references, err: [Inf, 2.3867000134923506, 0.9494711358405571, 0.939950960234749, 0.931383648139106] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 32]]
** centroid: 1, normalized-entropy: 0.9998182469603427, [(2, 31), (3, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [18, 3, 0]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(1, 18), (2, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.7032974905820453] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7032974905820453, 0.7796327915345319] ***
*** starting iteration: 2; err: [Inf, 2.7032974905820453, 0.7796327915345319] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7032974905820453, 0.7796327915345319, 0.7153890374062638] ***
*** starting iteration: 3; err: [Inf, 2.7032974905820453, 0.7796327915345319, 0.7153890374062638] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7032974905820453, 0.7796327915345319, 0.7153890374062638, 0.7069386620707965] ***
*** finished computation of 3 references, err: [Inf, 2.7032974905820453, 0.7796327915345319, 0.7153890374062638, 0.7069386620707965] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [18, 2, 0]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(1, 18), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 34]]
** centroid: 2, normalized-entropy: 0.9954515828457716, [(2, 29), (3, 34)]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7128772693361899] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7128772693361899, 0.40375929422102025] ***
*** starting iteration: 2; err: [Inf, 0.7128772693361899, 0.40375929422102025] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7128772693361899, 0.40375929422102025, 0.3651996408124463] ***
*** starting iteration: 3; err: [Inf, 0.7128772693361899, 0.40375929422102025, 0.3651996408124463] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7128772693361899, 0.40375929422102025, 0.3651996408124463, 0.3372620846665347] ***
*** finished computation of 3 references, err: [Inf, 0.7128772693361899, 0.40375929422102025, 0.3651996408124463, 0.3372620846665347] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 11]]
** centroid: 3, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.823611154056598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.823611154056598, 0.6246065059154365] ***
*** starting iteration: 2; err: [Inf, 0.823611154056598, 0.6246065059154365] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.823611154056598, 0.6246065059154365, 0.6197850041789286] ***
*** starting iteration: 3; err: [Inf, 0.823611154056598, 0.6246065059154365, 0.6197850041789286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.823611154056598, 0.6246065059154365, 0.6197850041789286, 0.6151998359042689] ***
*** finished computation of 3 references, err: [Inf, 0.823611154056598, 0.6246065059154365, 0.6197850041789286, 0.6151998359042689] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 32]]
** centroid: 3, normalized-entropy: 0.9998292601233937, [(2, 33), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3220092995897862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3220092995897862, 0.24625289067751752] ***
*** finished computation of 7 references, err: [Inf, 0.3220092995897862, 0.24625289067751752] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 3, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 28, 5]]
** centroid: 6, normalized-entropy: 0.6136190195993708, [(2, 28), (3, 5)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3444780204481117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3444780204481117, 0.21624536474224093] ***
*** finished computation of 7 references, err: [Inf, 0.3444780204481117, 0.21624536474224093] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39157212409400954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39157212409400954, 0.21413887135532875] ***
*** finished computation of 7 references, err: [Inf, 0.39157212409400954, 0.21413887135532875] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 16, 9]]
** centroid: 3, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 4]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9056530152772373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9056530152772373, 0.6456482415358334] ***
*** starting iteration: 2; err: [Inf, 0.9056530152772373, 0.6456482415358334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9056530152772373, 0.6456482415358334, 0.40623656597283486] ***
*** starting iteration: 3; err: [Inf, 0.9056530152772373, 0.6456482415358334, 0.40623656597283486] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9056530152772373, 0.6456482415358334, 0.40623656597283486, 0.38694603710085523] ***
*** starting iteration: 4; err: [Inf, 0.9056530152772373, 0.6456482415358334, 0.40623656597283486, 0.38694603710085523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9056530152772373, 0.6456482415358334, 0.40623656597283486, 0.38694603710085523, 0.3858133224257632] ***
*** starting iteration: 5; err: [Inf, 0.9056530152772373, 0.6456482415358334, 0.40623656597283486, 0.38694603710085523, 0.3858133224257632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9056530152772373, 0.6456482415358334, 0.40623656597283486, 0.38694603710085523, 0.3858133224257632, 0.3858133224257632] ***
*** finished computation of 3 references, err: [Inf, 0.9056530152772373, 0.6456482415358334, 0.40623656597283486, 0.38694603710085523, 0.3858133224257632, 0.3858133224257632] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 28]]
** centroid: 1, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 6]]
** centroid: 2, normalized-entropy: 0.6722948170756378, [(2, 28), (3, 6)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5080823368645526] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5080823368645526, 0.3372620846665347] ***
*** starting iteration: 2; err: [Inf, 0.5080823368645526, 0.3372620846665347] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5080823368645526, 0.3372620846665347, 0.33219137559443923] ***
*** starting iteration: 3; err: [Inf, 0.5080823368645526, 0.3372620846665347, 0.33219137559443923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5080823368645526, 0.3372620846665347, 0.33219137559443923, 0.33128553347504486] ***
*** finished computation of 3 references, err: [Inf, 0.5080823368645526, 0.3372620846665347, 0.33219137559443923, 0.33128553347504486] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 11]]
** centroid: 3, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0629040128775975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0629040128775975, 0.44029481762177225] ***
*** starting iteration: 2; err: [Inf, 1.0629040128775975, 0.44029481762177225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0629040128775975, 0.44029481762177225, 0.3909603786555927] ***
*** starting iteration: 3; err: [Inf, 1.0629040128775975, 0.44029481762177225, 0.3909603786555927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0629040128775975, 0.44029481762177225, 0.3909603786555927, 0.38579158329940455] ***
*** starting iteration: 4; err: [Inf, 1.0629040128775975, 0.44029481762177225, 0.3909603786555927, 0.38579158329940455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0629040128775975, 0.44029481762177225, 0.3909603786555927, 0.38579158329940455, 0.38315754378285105] ***
*** starting iteration: 5; err: [Inf, 1.0629040128775975, 0.44029481762177225, 0.3909603786555927, 0.38579158329940455, 0.38315754378285105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0629040128775975, 0.44029481762177225, 0.3909603786555927, 0.38579158329940455, 0.38315754378285105, 0.38115366017038427] ***
*** starting iteration: 6; err: [Inf, 1.0629040128775975, 0.44029481762177225, 0.3909603786555927, 0.38579158329940455, 0.38315754378285105, 0.38115366017038427] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0629040128775975, 0.44029481762177225, 0.3909603786555927, 0.38579158329940455, 0.38315754378285105, 0.38115366017038427, 0.3798385989197963] ***
*** starting iteration: 7; err: [Inf, 1.0629040128775975, 0.44029481762177225, 0.3909603786555927, 0.38579158329940455, 0.38315754378285105, 0.38115366017038427, 0.3798385989197963] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0629040128775975, 0.44029481762177225, 0.3909603786555927, 0.38579158329940455, 0.38315754378285105, 0.38115366017038427, 0.3798385989197963, 0.37910956183115924] ***
*** finished computation of 3 references, err: [Inf, 1.0629040128775975, 0.44029481762177225, 0.3909603786555927, 0.38579158329940455, 0.38315754378285105, 0.38115366017038427, 0.3798385989197963, 0.37910956183115924] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 1, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 23]]
** centroid: 3, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.511588268825449] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.511588268825449, 0.9724883254686516] ***
*** starting iteration: 2; err: [Inf, 8.511588268825449, 0.9724883254686516] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.511588268825449, 0.9724883254686516, 0.7184893470838541] ***
*** starting iteration: 3; err: [Inf, 8.511588268825449, 0.9724883254686516, 0.7184893470838541] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.511588268825449, 0.9724883254686516, 0.7184893470838541, 0.7088708902902643] ***
*** finished computation of 3 references, err: [Inf, 8.511588268825449, 0.9724883254686516, 0.7184893470838541, 0.7088708902902643] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [22, 2, 0]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(1, 22), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 34]]
** centroid: 2, normalized-entropy: 0.9954515828457716, [(2, 29), (3, 34)]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.129272944304918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.129272944304918, 0.5927366700661818] ***
*** starting iteration: 2; err: [Inf, 1.129272944304918, 0.5927366700661818] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.129272944304918, 0.5927366700661818, 0.5867879175457188] ***
*** starting iteration: 3; err: [Inf, 1.129272944304918, 0.5927366700661818, 0.5867879175457188] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.129272944304918, 0.5927366700661818, 0.5867879175457188, 0.5849672281738766] ***
*** finished computation of 3 references, err: [Inf, 1.129272944304918, 0.5927366700661818, 0.5867879175457188, 0.5849672281738766] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 34]]
** centroid: 1, normalized-entropy: 1.0, [(2, 34), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.793020553424948] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.793020553424948, 0.738354070818412] ***
*** starting iteration: 2; err: [Inf, 2.793020553424948, 0.738354070818412] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.793020553424948, 0.738354070818412, 0.4421903463065627] ***
*** starting iteration: 3; err: [Inf, 2.793020553424948, 0.738354070818412, 0.4421903463065627] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.793020553424948, 0.738354070818412, 0.4421903463065627, 0.3926452617434812] ***
*** finished computation of 3 references, err: [Inf, 2.793020553424948, 0.738354070818412, 0.4421903463065627, 0.3926452617434812] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 12]]
** centroid: 2, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4660621894355474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4660621894355474, 0.22738745661542295] ***
*** finished computation of 7 references, err: [Inf, 0.4660621894355474, 0.22738745661542295] ***
*** center 1: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 27, 1]]
** centroid: 2, normalized-entropy: 0.2222848306856879, [(2, 27), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 4, 19]]
** centroid: 6, normalized-entropy: 0.6665783579949205, [(2, 4), (3, 19)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.287805078058602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.287805078058602, 0.24536446921241517] ***
*** finished computation of 7 references, err: [Inf, 0.287805078058602, 0.24536446921241517] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 34, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 12]]
** centroid: 4, normalized-entropy: 0.3912435636292556, [(2, 1), (3, 12)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.104644859080407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.104644859080407, 0.33707958487961703] ***
*** finished computation of 7 references, err: [Inf, 1.104644859080407, 0.33707958487961703] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 13]]
** centroid: 2, normalized-entropy: 0.8841151220488478, [(2, 30), (3, 13)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5322000041384021] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5322000041384021, 0.2969477528094351] ***
*** starting iteration: 2; err: [Inf, 0.5322000041384021, 0.2969477528094351] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5322000041384021, 0.2969477528094351, 0.2789007762661508] ***
*** starting iteration: 3; err: [Inf, 0.5322000041384021, 0.2969477528094351, 0.2789007762661508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5322000041384021, 0.2969477528094351, 0.2789007762661508, 0.2761323059822998] ***
*** finished computation of 7 references, err: [Inf, 0.5322000041384021, 0.2969477528094351, 0.2789007762661508, 0.2761323059822998] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38810000228025987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38810000228025987, 0.28571804426277303] ***
*** starting iteration: 2; err: [Inf, 0.38810000228025987, 0.28571804426277303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38810000228025987, 0.28571804426277303, 0.27575864390073224] ***
*** starting iteration: 3; err: [Inf, 0.38810000228025987, 0.28571804426277303, 0.27575864390073224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38810000228025987, 0.28571804426277303, 0.27575864390073224, 0.27151763825738795] ***
*** finished computation of 7 references, err: [Inf, 0.38810000228025987, 0.28571804426277303, 0.27575864390073224, 0.27151763825738795] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 10]]
** centroid: 4, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 7, 2]]
** centroid: 6, normalized-entropy: 0.7642045065086204, [(2, 7), (3, 2)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.248899987418744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.248899987418744, 0.878106717261912] ***
*** starting iteration: 2; err: [Inf, 1.248899987418744, 0.878106717261912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.248899987418744, 0.878106717261912, 0.8049017045440983] ***
*** starting iteration: 3; err: [Inf, 1.248899987418744, 0.878106717261912, 0.8049017045440983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.248899987418744, 0.878106717261912, 0.8049017045440983, 0.6413069373894598] ***
*** finished computation of 7 references, err: [Inf, 1.248899987418744, 0.878106717261912, 0.8049017045440983, 0.6413069373894598] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 22, 31]]
** centroid: 2, normalized-entropy: 0.9790981671667148, [(2, 22), (3, 31)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.445466680592284] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.445466680592284, 0.7141833944973212] ***
*** finished computation of 3 references, err: [Inf, 1.445466680592284, 0.7141833944973212] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 34]]
** centroid: 1, normalized-entropy: 0.9971803988942641, [(2, 30), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [20, 1, 0]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(1, 20), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.706261709402962] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.706261709402962, 1.0175325903003833] ***
*** finished computation of 3 references, err: [Inf, 3.706261709402962, 1.0175325903003833] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 7, 0]]
** centroid: 1, normalized-entropy: 0.6892019851173655, [(1, 31), (2, 7)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 20]]
** centroid: 3, normalized-entropy: 0.9798687566511527, [(2, 28), (3, 20)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8927663602457625] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8927663602457625, 0.5755907890774652] ***
*** finished computation of 3 references, err: [Inf, 1.8927663602457625, 0.5755907890774652] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 4, 0]]
** centroid: 2, normalized-entropy: 0.48546076074591343, [(1, 34), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 12]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6256000038585137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6256000038585137, 0.3082188023950535] ***
*** starting iteration: 2; err: [Inf, 0.6256000038585137, 0.3082188023950535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6256000038585137, 0.3082188023950535, 0.2957984411580998] ***
*** starting iteration: 3; err: [Inf, 0.6256000038585137, 0.3082188023950535, 0.2957984411580998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6256000038585137, 0.3082188023950535, 0.2957984411580998, 0.292631982369428] ***
*** starting iteration: 4; err: [Inf, 0.6256000038585137, 0.3082188023950535, 0.2957984411580998, 0.292631982369428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6256000038585137, 0.3082188023950535, 0.2957984411580998, 0.292631982369428, 0.292631982369428] ***
*** finished computation of 7 references, err: [Inf, 0.6256000038585137, 0.3082188023950535, 0.2957984411580998, 0.292631982369428, 0.292631982369428] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 6]]
** centroid: 6, normalized-entropy: 0.8812908992306927, [(2, 14), (3, 6)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.054799949872466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.054799949872466, 0.5699071832279334] ***
*** starting iteration: 2; err: [Inf, 3.054799949872466, 0.5699071832279334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.054799949872466, 0.5699071832279334, 0.30533632352021944] ***
*** starting iteration: 3; err: [Inf, 3.054799949872466, 0.5699071832279334, 0.30533632352021944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.054799949872466, 0.5699071832279334, 0.30533632352021944, 0.2958210112057806] ***
*** starting iteration: 4; err: [Inf, 3.054799949872466, 0.5699071832279334, 0.30533632352021944, 0.2958210112057806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.054799949872466, 0.5699071832279334, 0.30533632352021944, 0.2958210112057806, 0.2935819976209819] ***
*** starting iteration: 5; err: [Inf, 3.054799949872466, 0.5699071832279334, 0.30533632352021944, 0.2958210112057806, 0.2935819976209819] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.054799949872466, 0.5699071832279334, 0.30533632352021944, 0.2958210112057806, 0.2935819976209819, 0.2923030059508064] ***
*** starting iteration: 6; err: [Inf, 3.054799949872466, 0.5699071832279334, 0.30533632352021944, 0.2958210112057806, 0.2935819976209819, 0.2923030059508064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.054799949872466, 0.5699071832279334, 0.30533632352021944, 0.2958210112057806, 0.2935819976209819, 0.2923030059508064, 0.29109345189323954] ***
*** starting iteration: 7; err: [Inf, 3.054799949872466, 0.5699071832279334, 0.30533632352021944, 0.2958210112057806, 0.2935819976209819, 0.2923030059508064, 0.29109345189323954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.054799949872466, 0.5699071832279334, 0.30533632352021944, 0.2958210112057806, 0.2935819976209819, 0.2923030059508064, 0.29109345189323954, 0.2878430446958163] ***
*** starting iteration: 8; err: [Inf, 3.054799949872466, 0.5699071832279334, 0.30533632352021944, 0.2958210112057806, 0.2935819976209819, 0.2923030059508064, 0.29109345189323954, 0.2878430446958163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.054799949872466, 0.5699071832279334, 0.30533632352021944, 0.2958210112057806, 0.2935819976209819, 0.2923030059508064, 0.29109345189323954, 0.2878430446958163, 0.2878430446958163] ***
*** finished computation of 7 references, err: [Inf, 3.054799949872466, 0.5699071832279334, 0.30533632352021944, 0.2958210112057806, 0.2935819976209819, 0.2923030059508064, 0.29109345189323954, 0.2878430446958163, 0.2878430446958163] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 5]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 10), (3, 5)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 5, 7]]
** centroid: 6, normalized-entropy: 0.9798687566511527, [(2, 5), (3, 7)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.239200011769501] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.239200011769501, 0.4113174254563273] ***
*** starting iteration: 2; err: [Inf, 1.239200011769501, 0.4113174254563273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.239200011769501, 0.4113174254563273, 0.3435754853993492] ***
*** starting iteration: 3; err: [Inf, 1.239200011769501, 0.4113174254563273, 0.3435754853993492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.239200011769501, 0.4113174254563273, 0.3435754853993492, 0.2883967910741244] ***
*** starting iteration: 4; err: [Inf, 1.239200011769501, 0.4113174254563273, 0.3435754853993492, 0.2883967910741244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.239200011769501, 0.4113174254563273, 0.3435754853993492, 0.2883967910741244, 0.2760229405380835] ***
*** starting iteration: 5; err: [Inf, 1.239200011769501, 0.4113174254563273, 0.3435754853993492, 0.2883967910741244, 0.2760229405380835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.239200011769501, 0.4113174254563273, 0.3435754853993492, 0.2883967910741244, 0.2760229405380835, 0.2738535184670233] ***
*** starting iteration: 6; err: [Inf, 1.239200011769501, 0.4113174254563273, 0.3435754853993492, 0.2883967910741244, 0.2760229405380835, 0.2738535184670233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.239200011769501, 0.4113174254563273, 0.3435754853993492, 0.2883967910741244, 0.2760229405380835, 0.2738535184670233, 0.2737006373232385] ***
*** finished computation of 7 references, err: [Inf, 1.239200011769501, 0.4113174254563273, 0.3435754853993492, 0.2883967910741244, 0.2760229405380835, 0.2738535184670233, 0.2737006373232385] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 16, 13]]
** centroid: 2, normalized-entropy: 0.9922666387194963, [(2, 16), (3, 13)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 4, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1016999935983767] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1016999935983767, 0.6504684176805943] ***
*** starting iteration: 2; err: [Inf, 1.1016999935983767, 0.6504684176805943] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1016999935983767, 0.6504684176805943, 0.6022074532426405] ***
*** starting iteration: 3; err: [Inf, 1.1016999935983767, 0.6504684176805943, 0.6022074532426405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1016999935983767, 0.6504684176805943, 0.6022074532426405, 0.5811239064650617] ***
*** finished computation of 3 references, err: [Inf, 1.1016999935983767, 0.6504684176805943, 0.6022074532426405, 0.5811239064650617] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 1, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9571999951757103] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9571999951757103, 0.5717076288117966] ***
*** starting iteration: 2; err: [Inf, 0.9571999951757103, 0.5717076288117966] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9571999951757103, 0.5717076288117966, 0.487282706947862] ***
*** starting iteration: 3; err: [Inf, 0.9571999951757103, 0.5717076288117966, 0.487282706947862] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9571999951757103, 0.5717076288117966, 0.487282706947862, 0.47249253733078234] ***
*** finished computation of 3 references, err: [Inf, 0.9571999951757103, 0.5717076288117966, 0.487282706947862, 0.47249253733078234] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 11]]
** centroid: 1, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0654999935736265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0654999935736265, 0.5471609932332925] ***
*** starting iteration: 2; err: [Inf, 1.0654999935736265, 0.5471609932332925] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0654999935736265, 0.5471609932332925, 0.5466073049089749] ***
*** finished computation of 3 references, err: [Inf, 1.0654999935736265, 0.5471609932332925, 0.5466073049089749] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 28]]
** centroid: 1, normalized-entropy: 0.6136190195993708, [(2, 5), (3, 28)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 4]]
** centroid: 3, normalized-entropy: 0.5328350630342235, [(2, 29), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.063700008453318] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.063700008453318, 0.6022074532426405] ***
*** starting iteration: 2; err: [Inf, 1.063700008453318, 0.6022074532426405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.063700008453318, 0.6022074532426405, 0.5811239064650617] ***
*** starting iteration: 3; err: [Inf, 1.063700008453318, 0.6022074532426405, 0.5811239064650617] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.063700008453318, 0.6022074532426405, 0.5811239064650617, 0.5628244745230291] ***
*** finished computation of 3 references, err: [Inf, 1.063700008453318, 0.6022074532426405, 0.5811239064650617, 0.5628244745230291] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 28]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 6]]
** centroid: 3, normalized-entropy: 0.6394571324851642, [(2, 31), (3, 6)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4387999957457578] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4387999957457578, 0.47418142410725267] ***
*** starting iteration: 2; err: [Inf, 1.4387999957457578, 0.47418142410725267] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4387999957457578, 0.47418142410725267, 0.4716122002381041] ***
*** starting iteration: 3; err: [Inf, 1.4387999957457578, 0.47418142410725267, 0.4716122002381041] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4387999957457578, 0.47418142410725267, 0.4716122002381041, 0.4716122002381041] ***
*** finished computation of 3 references, err: [Inf, 1.4387999957457578, 0.47418142410725267, 0.4716122002381041, 0.4716122002381041] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 11]]
** centroid: 1, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0047000022454966] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0047000022454966, 0.5660492558376192] ***
*** starting iteration: 2; err: [Inf, 1.0047000022454966, 0.5660492558376192] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0047000022454966, 0.5660492558376192, 0.5524836515271787] ***
*** starting iteration: 3; err: [Inf, 1.0047000022454966, 0.5660492558376192, 0.5524836515271787] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0047000022454966, 0.5660492558376192, 0.5524836515271787, 0.5483194608829544] ***
*** finished computation of 3 references, err: [Inf, 1.0047000022454966, 0.5660492558376192, 0.5524836515271787, 0.5483194608829544] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 31]]
** centroid: 1, normalized-entropy: 0.8541802051521676, [(2, 12), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7230173944586978] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7230173944586978, 0.43223442689552827] ***
*** starting iteration: 2; err: [Inf, 0.7230173944586978, 0.43223442689552827] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7230173944586978, 0.43223442689552827, 0.4126499325697952] ***
*** starting iteration: 3; err: [Inf, 0.7230173944586978, 0.43223442689552827, 0.4126499325697952] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7230173944586978, 0.43223442689552827, 0.4126499325697952, 0.3995873663537503] ***
*** starting iteration: 4; err: [Inf, 0.7230173944586978, 0.43223442689552827, 0.4126499325697952, 0.3995873663537503] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7230173944586978, 0.43223442689552827, 0.4126499325697952, 0.3995873663537503, 0.39429509842490273] ***
*** starting iteration: 5; err: [Inf, 0.7230173944586978, 0.43223442689552827, 0.4126499325697952, 0.3995873663537503, 0.39429509842490273] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7230173944586978, 0.43223442689552827, 0.4126499325697952, 0.3995873663537503, 0.39429509842490273, 0.3876236456617055] ***
*** starting iteration: 6; err: [Inf, 0.7230173944586978, 0.43223442689552827, 0.4126499325697952, 0.3995873663537503, 0.39429509842490273, 0.3876236456617055] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7230173944586978, 0.43223442689552827, 0.4126499325697952, 0.3995873663537503, 0.39429509842490273, 0.3876236456617055, 0.3859353744299546] ***
*** starting iteration: 7; err: [Inf, 0.7230173944586978, 0.43223442689552827, 0.4126499325697952, 0.3995873663537503, 0.39429509842490273, 0.3876236456617055, 0.3859353744299546] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7230173944586978, 0.43223442689552827, 0.4126499325697952, 0.3995873663537503, 0.39429509842490273, 0.3876236456617055, 0.3859353744299546, 0.3858133224257632] ***
*** finished computation of 3 references, err: [Inf, 0.7230173944586978, 0.43223442689552827, 0.4126499325697952, 0.3995873663537503, 0.39429509842490273, 0.3876236456617055, 0.3859353744299546, 0.3858133224257632] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 28]]
** centroid: 1, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 6]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(2, 28), (3, 6)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.666214292587547] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.666214292587547, 0.39027253127542666] ***
*** starting iteration: 2; err: [Inf, 0.666214292587547, 0.39027253127542666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.666214292587547, 0.39027253127542666, 0.36218552705825346] ***
*** starting iteration: 3; err: [Inf, 0.666214292587547, 0.39027253127542666, 0.36218552705825346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.666214292587547, 0.39027253127542666, 0.36218552705825346, 0.35284633095671103] ***
*** starting iteration: 4; err: [Inf, 0.666214292587547, 0.39027253127542666, 0.36218552705825346, 0.35284633095671103] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.666214292587547, 0.39027253127542666, 0.36218552705825346, 0.35284633095671103, 0.3458393147908238] ***
*** starting iteration: 5; err: [Inf, 0.666214292587547, 0.39027253127542666, 0.36218552705825346, 0.35284633095671103, 0.3458393147908238] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.666214292587547, 0.39027253127542666, 0.36218552705825346, 0.35284633095671103, 0.3458393147908238, 0.3347272108443291] ***
*** starting iteration: 6; err: [Inf, 0.666214292587547, 0.39027253127542666, 0.36218552705825346, 0.35284633095671103, 0.3458393147908238, 0.3347272108443291] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.666214292587547, 0.39027253127542666, 0.36218552705825346, 0.35284633095671103, 0.3458393147908238, 0.3347272108443291, 0.3309476464510493] ***
*** starting iteration: 7; err: [Inf, 0.666214292587547, 0.39027253127542666, 0.36218552705825346, 0.35284633095671103, 0.3458393147908238, 0.3347272108443291, 0.3309476464510493] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.666214292587547, 0.39027253127542666, 0.36218552705825346, 0.35284633095671103, 0.3458393147908238, 0.3347272108443291, 0.3309476464510493, 0.32984064289392506] ***
*** starting iteration: 8; err: [Inf, 0.666214292587547, 0.39027253127542666, 0.36218552705825346, 0.35284633095671103, 0.3458393147908238, 0.3347272108443291, 0.3309476464510493, 0.32984064289392506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.666214292587547, 0.39027253127542666, 0.36218552705825346, 0.35284633095671103, 0.3458393147908238, 0.3347272108443291, 0.3309476464510493, 0.32984064289392506, 0.3295870213317476] ***
*** finished computation of 3 references, err: [Inf, 0.666214292587547, 0.39027253127542666, 0.36218552705825346, 0.35284633095671103, 0.3458393147908238, 0.3347272108443291, 0.3309476464510493, 0.32984064289392506, 0.3295870213317476] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 10]]
** centroid: 3, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2319064245134397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2319064245134397, 0.39629640848940567] ***
*** starting iteration: 2; err: [Inf, 1.2319064245134397, 0.39629640848940567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2319064245134397, 0.39629640848940567, 0.38477186213758957] ***
*** starting iteration: 3; err: [Inf, 1.2319064245134397, 0.39629640848940567, 0.38477186213758957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2319064245134397, 0.39629640848940567, 0.38477186213758957, 0.38175048803052064] ***
*** starting iteration: 4; err: [Inf, 1.2319064245134397, 0.39629640848940567, 0.38477186213758957, 0.38175048803052064] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2319064245134397, 0.39629640848940567, 0.38477186213758957, 0.38175048803052064, 0.38115366017038427] ***
*** finished computation of 3 references, err: [Inf, 1.2319064245134397, 0.39629640848940567, 0.38477186213758957, 0.38175048803052064, 0.38115366017038427] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 22]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7230173944586978] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7230173944586978, 0.43223442689552827] ***
*** finished computation of 3 references, err: [Inf, 0.7230173944586978, 0.43223442689552827] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 34]]
** centroid: 1, normalized-entropy: 0.80235344282919, [(2, 11), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7903494260148304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7903494260148304, 0.39627584583907693] ***
*** finished computation of 3 references, err: [Inf, 0.7903494260148304, 0.39627584583907693] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 18]]
** centroid: 1, normalized-entropy: 0.9305861291319927, [(2, 34), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [31, 1, 0]]
** centroid: 2, normalized-entropy: 0.2006223243127146, [(1, 31), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2654593167578359] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2654593167578359, 0.39629640848940567] ***
*** finished computation of 3 references, err: [Inf, 1.2654593167578359, 0.39629640848940567] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 12]]
** centroid: 3, normalized-entropy: 0.828055725379504, [(2, 34), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5814000034709472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5814000034709472, 0.33579592563633454] ***
*** finished computation of 7 references, err: [Inf, 0.5814000034709472, 0.33579592563633454] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 26, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 5, 22]]
** centroid: 4, normalized-entropy: 0.6912898694057888, [(2, 5), (3, 22)]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6077000022880601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6077000022880601, 0.2865284565567798] ***
*** finished computation of 7 references, err: [Inf, 0.6077000022880601, 0.2865284565567798] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 27, 4]]
** centroid: 5, normalized-entropy: 0.5547781633412736, [(2, 27), (3, 4)]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5972000049173032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5972000049173032, 0.25396647954383] ***
*** finished computation of 7 references, err: [Inf, 0.5972000049173032, 0.25396647954383] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 17]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 16, 9]]
** centroid: 5, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5161000045555962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5161000045555962, 0.284901456693888] ***
*** starting iteration: 2; err: [Inf, 0.5161000045555962, 0.284901456693888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5161000045555962, 0.284901456693888, 0.2632974061391792] ***
*** starting iteration: 3; err: [Inf, 0.5161000045555962, 0.284901456693888, 0.2632974061391792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5161000045555962, 0.284901456693888, 0.2632974061391792, 0.24977328634140755] ***
*** finished computation of 7 references, err: [Inf, 0.5161000045555962, 0.284901456693888, 0.2632974061391792, 0.24977328634140755] ***
*** center 1: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 5]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6496000007444905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6496000007444905, 0.24012986675236977] ***
*** starting iteration: 2; err: [Inf, 0.6496000007444905, 0.24012986675236977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6496000007444905, 0.24012986675236977, 0.2304784699658301] ***
*** starting iteration: 3; err: [Inf, 0.6496000007444905, 0.24012986675236977, 0.2304784699658301] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6496000007444905, 0.24012986675236977, 0.2304784699658301, 0.22595121470651525] ***
*** finished computation of 7 references, err: [Inf, 0.6496000007444905, 0.24012986675236977, 0.2304784699658301, 0.22595121470651525] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5447000040115298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5447000040115298, 0.2481659581588345] ***
*** starting iteration: 2; err: [Inf, 0.5447000040115298, 0.2481659581588345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5447000040115298, 0.2481659581588345, 0.23327705836272025] ***
*** starting iteration: 3; err: [Inf, 0.5447000040115298, 0.2481659581588345, 0.23327705836272025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5447000040115298, 0.2481659581588345, 0.23327705836272025, 0.23159474632555152] ***
*** finished computation of 7 references, err: [Inf, 0.5447000040115298, 0.2481659581588345, 0.23327705836272025, 0.23159474632555152] ***
*** center 1: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 11]]
** centroid: 4, normalized-entropy: 0.9895875212220558, [(2, 14), (3, 11)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.96
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 1.8099411376014152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8099411376014152, 0.29493494059472136] ***
*** starting iteration: 2; err: [Inf, 1.8099411376014152, 0.29493494059472136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8099411376014152, 0.29493494059472136, 0.2038169678181843] ***
*** starting iteration: 3; err: [Inf, 1.8099411376014152, 0.29493494059472136, 0.2038169678181843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8099411376014152, 0.29493494059472136, 0.2038169678181843, 0.19715455303112098] ***
*** finished computation of 7 references, err: [Inf, 1.8099411376014152, 0.29493494059472136, 0.2038169678181843, 0.19715455303112098] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 5]]
** centroid: 3, normalized-entropy: 0.940285958670631, [(2, 9), (3, 5)]
*** center 4: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47436174242087836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47436174242087836, 0.26746918444789863] ***
*** starting iteration: 2; err: [Inf, 0.47436174242087836, 0.26746918444789863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47436174242087836, 0.26746918444789863, 0.22523436886005144] ***
*** starting iteration: 3; err: [Inf, 0.47436174242087836, 0.26746918444789863, 0.22523436886005144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47436174242087836, 0.26746918444789863, 0.22523436886005144, 0.20555295199713253] ***
*** finished computation of 7 references, err: [Inf, 0.47436174242087836, 0.26746918444789863, 0.22523436886005144, 0.20555295199713253] ***
*** center 1: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 11]]
** centroid: 6, normalized-entropy: 0.9927744539878083, [(2, 9), (3, 11)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7075575115626732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7075575115626732, 0.376412423064431] ***
*** starting iteration: 2; err: [Inf, 0.7075575115626732, 0.376412423064431] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7075575115626732, 0.376412423064431, 0.3258768089368077] ***
*** starting iteration: 3; err: [Inf, 0.7075575115626732, 0.376412423064431, 0.3258768089368077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7075575115626732, 0.376412423064431, 0.3258768089368077, 0.32202371983309036] ***
*** finished computation of 7 references, err: [Inf, 0.7075575115626732, 0.376412423064431, 0.3258768089368077, 0.32202371983309036] ***
*** center 1: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 30]]
** centroid: 3, normalized-entropy: 0.8390040613676978, [(2, 11), (3, 30)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 23, 2]]
** centroid: 4, normalized-entropy: 0.4021791902022729, [(2, 23), (3, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.618599980469416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.618599980469416, 0.6764754991361717] ***
*** starting iteration: 2; err: [Inf, 3.618599980469416, 0.6764754991361717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.618599980469416, 0.6764754991361717, 0.3741282654666394] ***
*** starting iteration: 3; err: [Inf, 3.618599980469416, 0.6764754991361717, 0.3741282654666394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.618599980469416, 0.6764754991361717, 0.3741282654666394, 0.3301598734050003] ***
*** finished computation of 7 references, err: [Inf, 3.618599980469416, 0.6764754991361717, 0.3741282654666394, 0.3301598734050003] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 3]]
** centroid: 1, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.2763000107572084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2763000107572084, 0.3434580725305153] ***
*** starting iteration: 2; err: [Inf, 2.2763000107572084, 0.3434580725305153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2763000107572084, 0.3434580725305153, 0.2895850049727541] ***
*** starting iteration: 3; err: [Inf, 2.2763000107572084, 0.3434580725305153, 0.2895850049727541] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2763000107572084, 0.3434580725305153, 0.2895850049727541, 0.2864131881848635] ***
*** finished computation of 7 references, err: [Inf, 2.2763000107572084, 0.3434580725305153, 0.2895850049727541, 0.2864131881848635] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 3]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(2, 10), (3, 3)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 7, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6421000024181754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6421000024181754, 0.28412576439833687] ***
*** starting iteration: 2; err: [Inf, 0.6421000024181754, 0.28412576439833687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6421000024181754, 0.28412576439833687, 0.26846037670303075] ***
*** starting iteration: 3; err: [Inf, 0.6421000024181754, 0.28412576439833687, 0.26846037670303075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6421000024181754, 0.28412576439833687, 0.26846037670303075, 0.2670539519913705] ***
*** finished computation of 7 references, err: [Inf, 0.6421000024181754, 0.28412576439833687, 0.26846037670303075, 0.2670539519913705] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 17]]
** centroid: 2, normalized-entropy: 0.6098403047164005, [(2, 3), (3, 17)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 4, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.96, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.96
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.43024359284955394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43024359284955394, 0.21639948175347445] ***
*** starting iteration: 2; err: [Inf, 0.43024359284955394, 0.21639948175347445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43024359284955394, 0.21639948175347445, 0.20814214237248715] ***
*** starting iteration: 3; err: [Inf, 0.43024359284955394, 0.21639948175347445, 0.20814214237248715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43024359284955394, 0.21639948175347445, 0.20814214237248715, 0.20628664031938013] ***
*** finished computation of 7 references, err: [Inf, 0.43024359284955394, 0.21639948175347445, 0.20814214237248715, 0.20628664031938013] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 22]]
** centroid: 4, normalized-entropy: 0.8960382325345574, [(2, 10), (3, 22)]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.599311104268338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.599311104268338, 0.20447848835442234] ***
*** starting iteration: 2; err: [Inf, 0.599311104268338, 0.20447848835442234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.599311104268338, 0.20447848835442234, 0.1948523530979266] ***
*** starting iteration: 3; err: [Inf, 0.599311104268338, 0.20447848835442234, 0.1948523530979266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.599311104268338, 0.20447848835442234, 0.1948523530979266, 0.19333781668314443] ***
*** finished computation of 7 references, err: [Inf, 0.599311104268338, 0.20447848835442234, 0.1948523530979266, 0.19333781668314443] ***
*** center 1: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 3]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 9, 16]]
** centroid: 5, normalized-entropy: 0.9426831892554921, [(2, 9), (3, 16)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 6, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35544801571689844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35544801571689844, 0.18310773214243453] ***
*** starting iteration: 2; err: [Inf, 0.35544801571689844, 0.18310773214243453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35544801571689844, 0.18310773214243453, 0.16699463335593948] ***
*** starting iteration: 3; err: [Inf, 0.35544801571689844, 0.18310773214243453, 0.16699463335593948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35544801571689844, 0.18310773214243453, 0.16699463335593948, 0.16024393504417794] ***
*** finished computation of 7 references, err: [Inf, 0.35544801571689844, 0.18310773214243453, 0.16699463335593948, 0.16024393504417794] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 8]]
** centroid: 7, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.96, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.96
finished with 18
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.96, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.96
finished with 18
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.96, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.96
finished with 18
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.96, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.96
finished with 18
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.96, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.96
finished with 19
iteration 8 finished
*** starting iteration: 1; err: [Inf, 1.0045738884617779] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0045738884617779, 0.43159966766077784] ***
*** starting iteration: 2; err: [Inf, 1.0045738884617779, 0.43159966766077784] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0045738884617779, 0.43159966766077784, 0.41518842662716515] ***
*** starting iteration: 3; err: [Inf, 1.0045738884617779, 0.43159966766077784, 0.41518842662716515] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0045738884617779, 0.43159966766077784, 0.41518842662716515, 0.397788975325405] ***
*** finished computation of 3 references, err: [Inf, 1.0045738884617779, 0.43159966766077784, 0.41518842662716515, 0.397788975325405] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 2, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.164909861895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.164909861895, 1.116341538709143] ***
*** starting iteration: 2; err: [Inf, 3.164909861895, 1.116341538709143] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.164909861895, 1.116341538709143, 0.4879678144236256] ***
*** starting iteration: 3; err: [Inf, 3.164909861895, 1.116341538709143, 0.4879678144236256] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.164909861895, 1.116341538709143, 0.4879678144236256, 0.3651996408124463] ***
*** finished computation of 3 references, err: [Inf, 3.164909861895, 1.116341538709143, 0.4879678144236256, 0.3651996408124463] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 1, 0]]
** centroid: 1, normalized-entropy: 0.2006223243127146, [(1, 31), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 13]]
** centroid: 2, normalized-entropy: 0.8507707040532602, [(2, 34), (3, 13)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8202184935910973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8202184935910973, 0.40631791744418594] ***
*** starting iteration: 2; err: [Inf, 0.8202184935910973, 0.40631791744418594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8202184935910973, 0.40631791744418594, 0.3811475227253032] ***
*** starting iteration: 3; err: [Inf, 0.8202184935910973, 0.40631791744418594, 0.3811475227253032] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8202184935910973, 0.40631791744418594, 0.3811475227253032, 0.37831565967163305] ***
*** finished computation of 3 references, err: [Inf, 0.8202184935910973, 0.40631791744418594, 0.3811475227253032, 0.37831565967163305] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 31]]
** centroid: 2, normalized-entropy: 0.8944518845341284, [(2, 14), (3, 31)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 19)
[0.96, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.96
finished with 20
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.9701000104248522] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9701000104248522, 0.5608850217873068] ***
*** starting iteration: 2; err: [Inf, 0.9701000104248522, 0.5608850217873068] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9701000104248522, 0.5608850217873068, 0.5538135580665418] ***
*** starting iteration: 3; err: [Inf, 0.9701000104248522, 0.5608850217873068, 0.5538135580665418] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9701000104248522, 0.5608850217873068, 0.5538135580665418, 0.5527626867568971] ***
*** starting iteration: 4; err: [Inf, 0.9701000104248522, 0.5608850217873068, 0.5538135580665418, 0.5527626867568971] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9701000104248522, 0.5608850217873068, 0.5538135580665418, 0.5527626867568971, 0.5527626867568971] ***
*** finished computation of 3 references, err: [Inf, 0.9701000104248522, 0.5608850217873068, 0.5538135580665418, 0.5527626867568971, 0.5527626867568971] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 6]]
** centroid: 1, normalized-entropy: 0.6722948170756378, [(2, 28), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 28]]
** centroid: 3, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.026399985551152] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.026399985551152, 0.8803546220113816] ***
*** starting iteration: 2; err: [Inf, 1.026399985551152, 0.8803546220113816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.026399985551152, 0.8803546220113816, 0.8774474648006177] ***
*** starting iteration: 3; err: [Inf, 1.026399985551152, 0.8803546220113816, 0.8774474648006177] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.026399985551152, 0.8803546220113816, 0.8774474648006177, 0.8758427468042902] ***
*** starting iteration: 4; err: [Inf, 1.026399985551152, 0.8803546220113816, 0.8774474648006177, 0.8758427468042902] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.026399985551152, 0.8803546220113816, 0.8774474648006177, 0.8758427468042902, 0.8756499122202205] ***
*** finished computation of 3 references, err: [Inf, 1.026399985551152, 0.8803546220113816, 0.8774474648006177, 0.8758427468042902, 0.8756499122202205] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 34]]
** centroid: 3, normalized-entropy: 1.0, [(2, 34), (3, 34)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8158999984597528] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8158999984597528, 0.938010580796429] ***
*** starting iteration: 2; err: [Inf, 1.8158999984597528, 0.938010580796429] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8158999984597528, 0.938010580796429, 0.9238210962174014] ***
*** starting iteration: 3; err: [Inf, 1.8158999984597528, 0.938010580796429, 0.9238210962174014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8158999984597528, 0.938010580796429, 0.9238210962174014, 0.909802461198968] ***
*** starting iteration: 4; err: [Inf, 1.8158999984597528, 0.938010580796429, 0.9238210962174014, 0.909802461198968] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8158999984597528, 0.938010580796429, 0.9238210962174014, 0.909802461198968, 0.9053829151932244] ***
*** starting iteration: 5; err: [Inf, 1.8158999984597528, 0.938010580796429, 0.9238210962174014, 0.909802461198968, 0.9053829151932244] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8158999984597528, 0.938010580796429, 0.9238210962174014, 0.909802461198968, 0.9053829151932244, 0.9050257180777597] ***
*** finished computation of 3 references, err: [Inf, 1.8158999984597528, 0.938010580796429, 0.9238210962174014, 0.909802461198968, 0.9053829151932244, 0.9050257180777597] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [14, 4, 0]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(1, 14), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 32]]
** centroid: 3, normalized-entropy: 0.9992492479956566, [(2, 30), (3, 32)]
finished with 5 centroids; started with 3
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1), 0.96)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.869230769230769, 3.226923076923077, 1.4461538461538461, 0.2461538461538462], [7.566666666666667, 2.8499999999999996, 6.45, 2.066666666666667], [6.312500000000001, 2.9187499999999997, 4.6625000000000005, 1.45625], [5.9399999999999995, 2.6799999999999997, 5.0200000000000005, 1.9], [6.505555555555557, 3.0722222222222224, 5.438888888888889, 2.15], [5.514285714285714, 2.5714285714285716, 3.857142857142858, 1.1714285714285715], [5.455555555555556, 3.9000000000000004, 1.4888888888888887, 0.26666666666666666], [7.383333333333334, 3.4000000000000004, 6.150000000000001, 2.033333333333333]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 3, 2, 1, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.845, 3.2650000000000006, 1.415, 0.24000000000000005], [7.442857142857143, 3.1, 6.171428571428571, 1.9428571428571428], [5.723076923076922, 2.8461538461538463, 4.1923076923076925, 1.3000000000000003], [4.9, 2.5, 4.5, 1.7], [6.3533333333333335, 2.9933333333333327, 4.566666666666666, 1.4600000000000002], [5.99, 2.75, 4.96, 1.7899999999999998], [5.354545454545455, 3.8181818181818175, 1.518181818181818, 0.2727272727272727], [5.5125, 2.4125, 3.675, 1.0875], [6.575000000000002, 3.0312500000000004, 5.525, 2.10625]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.816666666666666, 3.2249999999999996, 1.4625000000000001, 0.20833333333333337], [7.5200000000000005, 3.1599999999999993, 6.4799999999999995, 2.2], [5.790909090909091, 2.6999999999999997, 4.263636363636364, 1.2999999999999998], [4.9, 2.5, 4.5, 1.7], [6.442857142857143, 2.9499999999999997, 4.692857142857143, 1.4785714285714289], [6.027272727272726, 2.7181818181818183, 5.036363636363637, 1.7999999999999998], [5.2666666666666675, 2.444444444444444, 3.5888888888888886, 1.1444444444444446], [6.5428571428571445, 3.0428571428571423, 5.607142857142857, 2.15], [5.3500000000000005, 3.81, 1.53, 0.27999999999999997]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[97, 1, 20, 37, 18, 1, 3, 2, 4, 1, 39, 36, 24, 12, 36, 23, 4, 10, 25, 25, 24, 13, 26, 38, 28, 18, 23, 31, 23, 14, 31, 29, 14, 29, 25, 34, 34, 29, 56, 19, 34, 26, 46, 3, 24, 24, 36, 29, 22, 17, 27, 46, 32, 33, 42, 22, 19, 34, 28, 34, 27, 27, 54, 30, 26, 27, 40, 38, 24, 1, 41, 17, 33, 27, 39, 1, 58, 39, 20, 32, 26, 40, 37, 44, 40, 46, 15, 50, 34, 1, 31, 45, 43, 15, 20, 56, 15, 46, 29, 36, 33, 38, 36, 15, 19, 20, 42, 20, 3, 36, 3, 31, 40, 31, 31, 35, 30, 34, 62, 34, 29, 33, 62, 31, 32, 33, 29, 41, 45, 36, 72, 21, 40, 27, 10, 30, 44, 22, 37, 39, 42, 17, 35, 43, 32, 37, 40, 37, 38, 34, 51, 23, 18, 41, 38, 30, 29, 72, 27, 46, 43, 15, 36, 40, 49, 51, 32, 29, 35, 34, 51, 36, 31, 73, 30, 50, 51, 43, 27, 44, 26, 39, 45, 31, 31, 29, 63, 23, 32, 24, 32, 52, 23, 35, 47, 1, 26, 60, 37, 23, 33, 39, 24, 23, 34, 30, 47, 36, 30, 42, 45, 31, 27, 51, 38, 61, 37, 42, 31, 32, 30, 33, 25, 32, 33, 29, 32, 66, 36, 43, 48, 70, 39, 43, 37, 50, 37, 43, 31, 43, 28, 30, 43, 48, 41, 28, 55, 56, 38, 12, 17, 29, 34, 39, 38, 44, 19, 20, 50, 27, 39, 35, 40, 35, 27, 50, 30, 42, 31, 52, 24, 31, 38, 31, 47, 26, 76, 29, 47, 50, 31, 1, 28, 27, 34, 29, 25, 43, 30, 8, 41, 51, 37, 56, 46, 37, 44, 33, 34, 37]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.63, speedup = 0.3810947454956498, eval_ratio = 0.041919)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.3723958333333334,"f1":null,"seconds":7.135234773159027e-5,"exhaustive_search_seconds":0.00041121989488601685,"evaluations":339.453125,"distances_sum":1757.8921131253123}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5295138888888888,"recall":0.5295138888888888,"f1":0.5295138888888888,"seconds":0.00010209530591964722,"exhaustive_search_seconds":0.00041121989488601685,"evaluations":375.15625,"distances_sum":1667.0331043031824}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6206597222222221,"recall":0.6206597222222221,"f1":0.6206597222222221,"seconds":0.00022889301180839539,"exhaustive_search_seconds":0.00041121989488601685,"evaluations":413.9140625,"distances_sum":1621.8870971856377}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.6909722222222219,"recall":0.6909722222222219,"f1":0.6909722222222219,"seconds":0.00012782961130142212,"exhaustive_search_seconds":0.00041121989488601685,"evaluations":452.8671875,"distances_sum":1596.4389545207919}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7604166666666661,"recall":0.7604166666666661,"f1":0.7604166666666661,"seconds":0.00017958693206310272,"exhaustive_search_seconds":0.00041121989488601685,"evaluations":492.7421875,"distances_sum":1578.5923208697648}
KCenters.DeloneInvIndex> reached performance {"precision":0.8072916666666656,"recall":0.8072916666666656,"f1":0.8072916666666656,"seconds":0.0001859702169895172,"exhaustive_search_seconds":0.00041121989488601685,"evaluations":530.9765625,"distances_sum":1567.6568939287854}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8130000000000003, speedup = 1.7174984254010597, eval_ratio = 0.054014)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
