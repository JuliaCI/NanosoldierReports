Julia Version 1.5.0-DEV.158
Commit ed177d17d6 (2020-01-27 16:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_iOotor/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_iOotor/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_iOotor/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.09686437006106059 0.014633743609344286; -0.09686437006106059 0.0 -0.05775362959769873; -0.014633743609344286 0.05775362959769873 0.0])
dAA = so3([0.0 -0.05706448036559944 0.05985830840115546; 0.05706448036559944 0.0 -0.0560577100212227; -0.05985830840115546 0.0560577100212227 0.0])
dAA = so3([0.0 0.10721343051024051 0.06204297490024033; -0.10721343051024051 0.0 0.08653532757221769; -0.06204297490024033 -0.08653532757221769 0.0])
dAA = Quaternion(0.9976584812145491, [-0.06442978236870632, -0.022486874687457418, -0.0045495572741701224])
dAA = SO3([0.9975208669766702 0.034462089311302166 -0.06135539378418382; -0.04070287571454394 0.9937901583266473 -0.10355866512109971; 0.057405538536615244 0.10579927038216055 0.9927291264649809])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9787378474115757 -0.1307508688866599 0.15803935057300997; 0.15161406267704478 0.9801074243619706 -0.1280726852576504; -0.1381499259598658 0.14931057228450872 0.9790919011825989]), [0.5775362959769873, 0.14633743609344285, -0.9686437006106059])
xj = SE3(SO3([0.9934831528942063 0.033297011112671256 -0.10900703631578033; 0.0029632748196160206 0.9485090253771975 0.31673624323771715; 0.11394052798600958 -0.31499513937354895 0.9422290688857502]), [-0.8653532757221768, 0.6204297490024032, -1.072134305102405])
Dx = SE3(SO3([0.957067961132476 0.21991290698710966 -0.18883651954588704; -0.10998193237405514 0.8782550201855145 0.46537306977328474; 0.2681881658928933 -0.4246250497314314 0.8647361879877499]), [-1.3260343524652822, 0.6378682195394366, -0.39007841914057717])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
