Julia Version 1.5.0-DEV.199
Commit cc47f87314 (2020-01-29 16:52 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_2K23fO/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_2K23fO/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_2K23fO/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.04747979591249776 -0.2934277703319465; -0.04747979591249776 0.0 -0.13551416347812315; 0.2934277703319465 0.13551416347812315 0.0])
dAA = so3([0.0 -0.15715940122930572 -0.22344409910389068; 0.15715940122930572 0.0 0.15192604197555928; 0.22344409910389068 -0.15192604197555928 0.0])
dAA = so3([0.0 0.037029058710022496 0.009473259840753485; -0.037029058710022496 0.0 -0.20640452018600963; -0.009473259840753485 0.20640452018600963 0.0])
dAA = Quaternion(0.9982315874841122, [-0.00803629557605434, 0.020162665607858933, 0.05534060550761435])
dAA = SO3([0.9757665534684727 -0.020177021927981292 -0.2178818967201635; 0.06935732163610554 0.9729147387926276 0.22051411060414944; 0.20753119059005093 -0.23028199848488157 0.9507370856898794])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.7784215235412001 -0.25331865124632474 -0.5743601593238685; 0.454907508165469 0.8581311629475917 0.2380547546109875; 0.43257264211052526 -0.4465876936380542 0.7832243236701493]), [1.3551416347812315, -2.934277703319465, -0.4747979591249776])
xj = SE3(SO3([0.9568820945538905 -0.27392729915767794 0.09664622030032674; 0.2703973420379943 0.9615434239364575 0.048161408859601997; -0.10612226223063279 -0.019951908699015433 0.9941528991047197]), [2.0640452018600963, 0.09473259840753485, -0.37029058710022494])
Dx = SE3(SO3([0.8219578116131534 0.21555176756490022 0.5271838307723057; 0.037033200320083025 0.9034315474589435 -0.42712993471541133; -0.5683431164377454 0.37060609082364815 0.734600045904059]), [1.9749523533322613, 2.3730379310843914, 0.3957570541317301])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
