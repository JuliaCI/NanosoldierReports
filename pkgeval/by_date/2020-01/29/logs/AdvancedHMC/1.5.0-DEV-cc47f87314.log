Julia Version 1.5.0-DEV.199
Commit cc47f87314 (2020-01-29 16:52 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed InplaceOps ───────── v0.3.0
 Installed OrderedCollections ─ v1.1.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed Parameters ───────── v0.12.0
 Installed MacroTools ───────── v0.5.3
 Installed StaticArrays ─────── v0.12.1
 Installed StatsBase ────────── v0.32.0
 Installed BinaryProvider ───── v0.5.8
 Installed Missings ─────────── v0.4.3
 Installed DataAPI ──────────── v1.1.0
 Installed ArgCheck ─────────── v1.0.1
 Installed ProgressMeter ────── v1.2.0
 Installed StatsFuns ────────── v0.9.3
 Installed LazyArrays ───────── v0.14.11
 Installed ArrayLayouts ─────── v0.1.5
 Installed Rmath ────────────── v0.6.0
 Installed FillArrays ───────── v0.8.4
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed Requires ─────────── v1.0.0
 Installed SortingAlgorithms ── v0.3.1
 Installed SpecialFunctions ─── v0.9.0
 Installed DataStructures ───── v0.17.9
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_YFrlLl/Project.toml`
 [no changes]
  Updating `/tmp/jl_YFrlLl/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed ForwardDiff ───────────────── v0.10.9
 Installed Bijectors ─────────────────── v0.5.2
 Installed ExponentialUtilities ──────── v1.6.0
 Installed Libtask ───────────────────── v0.3.1
 Installed Zygote ────────────────────── v0.4.7
 Installed DocStringExtensions ───────── v0.8.1
 Installed UnicodePlots ──────────────── v1.1.0
 Installed ChainRulesCore ────────────── v0.6.1
 Installed SimpleTraits ──────────────── v0.9.1
 Installed OrdinaryDiffEq ────────────── v5.28.1
 Installed Distributions ─────────────── v0.22.3
 Installed Turing ────────────────────── v0.8.3
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed NLSolversBase ─────────────── v7.6.0
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed IRTools ───────────────────── v0.3.1
 Installed DistributionsAD ───────────── v0.2.0
 Installed OpenBLAS_jll ──────────────── v0.3.7+5
 Installed Tables ────────────────────── v0.2.11
 Installed BenchmarkTools ────────────── v0.4.3
 Installed Adapt ─────────────────────── v1.0.0
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed FFTW ──────────────────────── v1.2.0
 Installed CommonSubexpressions ──────── v0.2.0
 Installed AxisArrays ────────────────── v0.4.1
 Installed InvertedIndices ───────────── v1.0.0
 Installed RecursiveArrayTools ───────── v2.0.4
 Installed Roots ─────────────────────── v0.8.4
 Installed Parsers ───────────────────── v0.3.10
 Installed FunctionWrappers ──────────── v1.0.0
 Installed Tracker ───────────────────── v0.2.6
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed TableTraits ───────────────── v1.0.0
 Installed PDMats ────────────────────── v0.9.11
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed JSON ──────────────────────── v0.21.0
 Installed TransformVariables ────────── v0.3.9
 Installed IntervalSets ──────────────── v0.3.2
 Installed QuadGK ────────────────────── v2.3.1
 Installed RangeArrays ───────────────── v0.3.2
 Installed Reexport ──────────────────── v0.2.0
 Installed DynamicPPL ────────────────── v0.1.1
 Installed DataFrames ────────────────── v0.20.0
 Installed RecipesBase ───────────────── v0.7.0
 Installed KernelDensity ─────────────── v0.5.1
 Installed NaNMath ───────────────────── v0.3.3
 Installed Showoff ───────────────────── v0.3.1
 Installed NNlib ─────────────────────── v0.6.4
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed DiffRules ─────────────────── v1.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed GenericSVD ────────────────── v0.2.2
 Installed DiffResults ───────────────── v1.0.2
 Installed Inflate ───────────────────── v0.1.1
 Installed MappedArrays ──────────────── v0.2.2
 Installed OffsetArrays ──────────────── v1.0.2
 Installed PooledArrays ──────────────── v0.5.3
 Installed Combinatorics ─────────────── v0.7.0
 Installed FiniteDiff ────────────────── v2.1.0
 Installed DiffEqBase ────────────────── v6.13.1
 Installed LightGraphs ───────────────── v1.3.0
 Installed MuladdMacro ───────────────── v0.2.2
 Installed Ratios ────────────────────── v0.3.1
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed MCMCChains ────────────────── v1.0.2
 Installed SparseDiffTools ───────────── v1.3.3
 Installed Compat ────────────────────── v2.2.0
 Installed ArrayInterface ────────────── v2.3.1
 Installed PositiveFactorizations ────── v0.2.3
 Installed IterTools ─────────────────── v1.3.0
 Installed Optim ─────────────────────── v0.20.0
 Installed TreeViews ─────────────────── v0.3.0
 Installed Arpack ────────────────────── v0.4.0
 Installed LineSearches ──────────────── v7.0.1
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed CategoricalArrays ─────────── v0.7.7
 Installed RecursiveFactorization ────── v0.1.0
 Installed LogDensityProblems ────────── v0.10.1
 Installed Interpolations ────────────── v0.12.8
 Installed IterativeSolvers ──────────── v0.8.1
 Installed ZygoteRules ───────────────── v0.2.0
 Installed Polynomials ───────────────── v0.6.0
  Updating `/tmp/jl_p4VB1p/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.22.3
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.7
  Updating `/tmp/jl_p4VB1p/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.6.1
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.13.1
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.22.3
  [ced4e74d] + DistributionsAD v0.2.0
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [6a86dc24] + FiniteDiff v2.1.0
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.1
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.8
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.2
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v1.0.2
  [4536629a] + OpenBLAS_jll v0.3.7+5
  [429524aa] + Optim v0.20.0
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [90014a1f] + PDMats v0.9.11
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.4
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.3.3
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.7
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_f9WyN0/Project.toml`
 [no changes]
  Updating `/tmp/jl_f9WyN0/Manifest.toml`
 [no changes]
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_AgfdrW/Project.toml`
 [no changes]
  Updating `/tmp/jl_AgfdrW/Manifest.toml`
 [no changes]
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_Re3LXT/Project.toml`
 [no changes]
  Updating `/tmp/jl_Re3LXT/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_p4VB1p/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.22.3
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.7
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.157666194
│   t_steps = 0.00773999
└   t_step / t_steps = 20.37033562058866
Sampling  0%|                               |  ETA: 5:53:35[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               5.3584681867049735e-5
  log_density:                   -11.414186355318426
  hamiltonian_energy:            18.31777771075829
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  9.834247316794642
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▋                            |  ETA: 0:00:30[K
  iterations:                    1006
  n_steps:                       127
  is_accept:                     true
  acceptance_rate:               0.9403179082166048
  log_density:                   -11.38798145782096
  hamiltonian_energy:            13.79792302531711
  hamiltonian_energy_error:      -0.007688015589014441
  max_hamiltonian_energy_error:  0.2708019546602447
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.8461940359893855
  nom_step_size:                 0.8461940359893855
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0726679786672315, 1.0338 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:23[K
  iterations:                    1296
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.690655936878244
  hamiltonian_energy:            19.075207704937604
  hamiltonian_energy_error:      -0.5003117684632876
  max_hamiltonian_energy_error:  -1.0769193436899513
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8381873009619665
  nom_step_size:                 0.8381873009619665
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0726679786672315, 1.0338 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|███▉                           |  ETA: 0:00:20[K
  iterations:                    1512
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7740965169655816
  log_density:                   -10.244075884644209
  hamiltonian_energy:            14.517920270879126
  hamiltonian_energy_error:      -0.30782295656105596
  max_hamiltonian_energy_error:  0.6876992578340673
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9009180509873363
  nom_step_size:                 0.9009180509873363
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0726679786672315, 1.0338 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▊                          |  ETA: 0:00:17[K
  iterations:                    1823
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8734797388739212
  log_density:                   -12.06944696481344
  hamiltonian_energy:            17.594801651659235
  hamiltonian_energy_error:      -0.4374490930829289
  max_hamiltonian_energy_error:  -0.4374490930829289
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8829967711283179
  nom_step_size:                 0.8829967711283179
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0726679786672315, 1.0338 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▎                         |  ETA: 0:00:15[K
  iterations:                    2055
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8889830313947805
  log_density:                   -15.112528307770534
  hamiltonian_energy:            19.064614442376218
  hamiltonian_energy_error:      0.19449051197918976
  max_hamiltonian_energy_error:  0.2593903751492661
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▌                        |  ETA: 0:00:12[K
  iterations:                    2515
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9994339844612748
  log_density:                   -12.495457859038007
  hamiltonian_energy:            15.539424787450002
  hamiltonian_energy_error:      -0.07587786532032936
  max_hamiltonian_energy_error:  -0.12122688690732986
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▍                       |  ETA: 0:00:11[K
  iterations:                    2841
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.202924119400064
  hamiltonian_energy:            17.15565540714857
  hamiltonian_energy_error:      -0.4846797127162219
  max_hamiltonian_energy_error:  -0.5969871393165072
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▌                      |  ETA: 0:00:09[K
  iterations:                    3271
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.910080849036751
  log_density:                   -12.926159940296394
  hamiltonian_energy:            17.78937294627451
  hamiltonian_energy_error:      -0.058495256737217005
  max_hamiltonian_energy_error:  0.19629795868621613
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|█████████                      |  ETA: 0:00:09[K
  iterations:                    3503
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9422877150570355
  log_density:                   -13.09466080764208
  hamiltonian_energy:            17.509995597124135
  hamiltonian_energy_error:      -0.148043554632455
  max_hamiltonian_energy_error:  -0.2891456850004843
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 33%|██████████▏                    |  ETA: 0:00:08[K
  iterations:                    3934
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.507576441718296
  hamiltonian_energy:            19.522753391202038
  hamiltonian_energy_error:      -0.4316563736686554
  max_hamiltonian_energy_error:  -0.5006758999155174
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████                    |  ETA: 0:00:07[K
  iterations:                    4280
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8000925329280142
  log_density:                   -16.994765394851814
  hamiltonian_energy:            21.435443945406373
  hamiltonian_energy_error:      0.3693892489490658
  max_hamiltonian_energy_error:  0.38662550441373256
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████▏                  |  ETA: 0:00:06[K
  iterations:                    4680
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.902670557986026
  log_density:                   -12.83949339130871
  hamiltonian_energy:            17.300007248641663
  hamiltonian_energy_error:      -0.01257725465786308
  max_hamiltonian_energy_error:  0.18710241419852736
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████                  |  ETA: 0:00:05[K
  iterations:                    5027
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9443063313638521
  log_density:                   -12.613044779735262
  hamiltonian_energy:            20.15032872072914
  hamiltonian_energy_error:      -0.5216268680474165
  max_hamiltonian_energy_error:  -0.5216268680474165
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|██████████████                 |  ETA: 0:00:05[K
  iterations:                    5427
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.555022201159679
  log_density:                   -20.185161599777178
  hamiltonian_energy:            23.887394962709596
  hamiltonian_energy_error:      0.9843360673801129
  max_hamiltonian_energy_error:  1.202776134213373
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|███████████████                |  ETA: 0:00:04[K
  iterations:                    5791
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.835453052783302
  log_density:                   -14.740012923292422
  hamiltonian_energy:            17.922089013091558
  hamiltonian_energy_error:      0.22404316003289537
  max_hamiltonian_energy_error:  0.34661355602268884
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████               |  ETA: 0:00:04[K
  iterations:                    6197
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5724125904764195
  log_density:                   -14.184623132708209
  hamiltonian_energy:            27.332410408554566
  hamiltonian_energy_error:      -0.03472211171534667
  max_hamiltonian_energy_error:  1.2445164915247915
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████              |  ETA: 0:00:04[K
  iterations:                    6562
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6206344186562933
  log_density:                   -13.462138099840395
  hamiltonian_energy:            18.01221464537641
  hamiltonian_energy_error:      0.2945377344877471
  max_hamiltonian_energy_error:  0.6971098420124449
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|██████████████████             |  ETA: 0:00:03[K
  iterations:                    6945
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6855960269016155
  log_density:                   -14.531875048417232
  hamiltonian_energy:            20.021216200617165
  hamiltonian_energy_error:      0.2819993635801694
  max_hamiltonian_energy_error:  0.7270933097023793
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|██████████████████▉            |  ETA: 0:00:03[K
  iterations:                    7305
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9902861270133887
  log_density:                   -15.930752419288073
  hamiltonian_energy:            20.5824113379549
  hamiltonian_energy_error:      0.044715205050920304
  max_hamiltonian_energy_error:  -0.13097863811247024
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|███████████████████▉           |  ETA: 0:00:03[K
  iterations:                    7694
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.127939593199342
  hamiltonian_energy:            20.708166698541852
  hamiltonian_energy_error:      -0.45312091392657194
  max_hamiltonian_energy_error:  -0.5741857079512798
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▋          |  ETA: 0:00:02[K
  iterations:                    7997
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.835269104516233
  log_density:                   -13.139626314893423
  hamiltonian_energy:            19.36613302571288
  hamiltonian_energy_error:      -0.03482250609105719
  max_hamiltonian_energy_error:  0.37560824215386646
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▊         |  ETA: 0:00:02[K
  iterations:                    8406
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9940072088730966
  log_density:                   -16.36533185972054
  hamiltonian_energy:            23.22990388431599
  hamiltonian_energy_error:      -0.1263835334381298
  max_hamiltonian_energy_error:  -0.1971615115642642
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▌        |  ETA: 0:00:02[K
  iterations:                    8729
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9575865661355252
  log_density:                   -12.596366441625124
  hamiltonian_energy:            16.96829145477393
  hamiltonian_energy_error:      -0.15961516073488013
  max_hamiltonian_energy_error:  -0.23310550822770892
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:02[K
  iterations:                    9113
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.967170859240286
  log_density:                   -13.275775589455375
  hamiltonian_energy:            16.70306001635789
  hamiltonian_energy_error:      -0.03540976848434596
  max_hamiltonian_energy_error:  -0.2317570198493044
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▌      |  ETA: 0:00:01[K
  iterations:                    9476
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8602716851806856
  log_density:                   -12.425591564830073
  hamiltonian_energy:            15.026256648627129
  hamiltonian_energy_error:      0.1364256287997705
  max_hamiltonian_energy_error:  0.27803113111524347
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▌     |  ETA: 0:00:01[K
  iterations:                    9865
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9930940358782021
  log_density:                   -14.09775581398332
  hamiltonian_energy:            18.988646013398156
  hamiltonian_energy_error:      -0.21537597035643685
  max_hamiltonian_energy_error:  -0.403292257496517
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▌    |  ETA: 0:00:01[K
  iterations:                    10240
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.985744877489328
  log_density:                   -16.88250442433415
  hamiltonian_energy:            22.866576148202583
  hamiltonian_energy_error:      -0.0898131886935154
  max_hamiltonian_energy_error:  -0.36630183235741853
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▌   |  ETA: 0:00:01[K
  iterations:                    10623
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6362523919967822
  log_density:                   -13.731957697165615
  hamiltonian_energy:            20.40697759780202
  hamiltonian_energy_error:      0.27335999610472683
  max_hamiltonian_energy_error:  1.0019448983863555
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▍  |  ETA: 0:00:01[K
  iterations:                    10991
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8379805786992256
  log_density:                   -13.223870280552868
  hamiltonian_energy:            17.95509212974011
  hamiltonian_energy_error:      0.0752280387850277
  max_hamiltonian_energy_error:  0.335593075064331
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▎ |  ETA: 0:00:00[K
  iterations:                    11327
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9984532976228299
  log_density:                   -17.886697712938037
  hamiltonian_energy:            23.036854126604446
  hamiltonian_energy_error:      0.01088595421882843
  max_hamiltonian_energy_error:  -0.33618595796541584
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▎|  ETA: 0:00:00[K
  iterations:                    11715
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5960907877678635
  log_density:                   -19.626362343584137
  hamiltonian_energy:            22.076426330773177
  hamiltonian_energy_error:      0.9956634648891836
  max_hamiltonian_energy_error:  1.0215471024038543
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9703055847813294
  log_density:                   -16.343153416973358
  hamiltonian_energy:            21.554053469101284
  hamiltonian_energy_error:      0.1094295124614959
  max_hamiltonian_energy_error:  0.1094295124614959
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7218036674220116
  nom_step_size:                 0.7218036674220116
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9568215169797191, 0.9587 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.868399787 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9568215169797191, 0.9587 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.722), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.087297700869216
└   average_acceptance_rate = 0.8616700485783275
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.133536128 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡆⠀⠀⢀⡀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⢱⠀⠀⡎⢇⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⢇⡸⠀⠸⡀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠘⠃⠀⠀⢇│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢆⠀⠀⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠸│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠈⢆⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠢⡀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠁⠀⠀⠈⠒⠤⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⣀⠤⡄⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⢀⠜⠀⠀⠈⢢⡠⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢇⠀⠀⢠⠔⠁⠀⢀⣀⣀⣀⠤⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡌⢆⢠⠃⠀⣀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠈⠺⠗⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
