Julia Version 1.5.0-DEV.158
Commit ed177d17d6 (2020-01-27 16:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed SortingAlgorithms ── v0.3.1
 Installed OrderedCollections ─ v1.1.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed StatsFuns ────────── v0.9.3
 Installed SpecialFunctions ─── v0.9.0
 Installed BinaryProvider ───── v0.5.8
 Installed LazyArrays ───────── v0.14.11
 Installed Missings ─────────── v0.4.3
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed ArrayLayouts ─────── v0.1.5
 Installed StatsBase ────────── v0.32.0
 Installed Parameters ───────── v0.12.0
 Installed DataAPI ──────────── v1.1.0
 Installed FillArrays ───────── v0.8.4
 Installed MacroTools ───────── v0.5.3
 Installed ArgCheck ─────────── v1.0.1
 Installed ProgressMeter ────── v1.2.0
 Installed Requires ─────────── v1.0.0
 Installed Rmath ────────────── v0.6.0
 Installed InplaceOps ───────── v0.3.0
 Installed StaticArrays ─────── v0.12.1
 Installed DataStructures ───── v0.17.9
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_CdVTBE/Project.toml`
 [no changes]
  Updating `/tmp/jl_CdVTBE/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed Zygote ────────────────────── v0.4.7
 Installed ForwardDiff ───────────────── v0.10.9
 Installed Bijectors ─────────────────── v0.5.2
 Installed Distributions ─────────────── v0.22.3
 Installed RecursiveArrayTools ───────── v2.0.4
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed Parsers ───────────────────── v0.3.10
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed PositiveFactorizations ────── v0.2.3
 Installed UnicodePlots ──────────────── v1.1.0
 Installed Arpack ────────────────────── v0.4.0
 Installed ChainRulesCore ────────────── v0.6.1
 Installed OrdinaryDiffEq ────────────── v5.28.1
 Installed Turing ────────────────────── v0.8.3
 Installed Optim ─────────────────────── v0.20.0
 Installed DiffResults ───────────────── v1.0.2
 Installed DynamicPPL ────────────────── v0.1.1
 Installed FFTW ──────────────────────── v1.2.0
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed KernelDensity ─────────────── v0.5.1
 Installed QuadGK ────────────────────── v2.3.1
 Installed RecursiveFactorization ────── v0.1.0
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed ZygoteRules ───────────────── v0.2.0
 Installed Compat ────────────────────── v2.2.0
 Installed ArrayInterface ────────────── v2.3.1
 Installed IterTools ─────────────────── v1.3.0
 Installed OffsetArrays ──────────────── v1.0.2
 Installed Tracker ───────────────────── v0.2.6
 Installed OpenBLAS_jll ──────────────── v0.3.7+5
 Installed Combinatorics ─────────────── v0.7.0
 Installed Tables ────────────────────── v0.2.11
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed DistributionsAD ───────────── v0.2.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed NLSolversBase ─────────────── v7.6.0
 Installed BenchmarkTools ────────────── v0.4.3
 Installed DocStringExtensions ───────── v0.8.1
 Installed CommonSubexpressions ──────── v0.2.0
 Installed NNlib ─────────────────────── v0.6.4
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed Ratios ────────────────────── v0.3.1
 Installed LineSearches ──────────────── v7.0.1
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Polynomials ───────────────── v0.6.0
 Installed Inflate ───────────────────── v0.1.1
 Installed MuladdMacro ───────────────── v0.2.2
 Installed SparseDiffTools ───────────── v1.3.3
 Installed MappedArrays ──────────────── v0.2.2
 Installed AxisArrays ────────────────── v0.4.1
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed LightGraphs ───────────────── v1.3.0
 Installed JSON ──────────────────────── v0.21.0
 Installed ExponentialUtilities ──────── v1.6.0
 Installed IRTools ───────────────────── v0.3.1
 Installed Roots ─────────────────────── v0.8.4
 Installed DiffEqBase ────────────────── v6.13.1
 Installed TableTraits ───────────────── v1.0.0
 Installed TransformVariables ────────── v0.3.9
 Installed CategoricalArrays ─────────── v0.7.7
 Installed FunctionWrappers ──────────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed IterativeSolvers ──────────── v0.8.1
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed RangeArrays ───────────────── v0.3.2
 Installed GenericSVD ────────────────── v0.2.2
 Installed Libtask ───────────────────── v0.3.1
 Installed DataFrames ────────────────── v0.20.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed FiniteDiff ────────────────── v2.1.0
 Installed IntervalSets ──────────────── v0.3.2
 Installed DiffRules ─────────────────── v1.0.0
 Installed Adapt ─────────────────────── v1.0.0
 Installed PDMats ────────────────────── v0.9.11
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed NaNMath ───────────────────── v0.3.3
 Installed RecipesBase ───────────────── v0.7.0
 Installed SimpleTraits ──────────────── v0.9.1
 Installed Reexport ──────────────────── v0.2.0
 Installed Showoff ───────────────────── v0.3.1
 Installed TreeViews ─────────────────── v0.3.0
 Installed MCMCChains ────────────────── v1.0.2
 Installed LogDensityProblems ────────── v0.10.1
 Installed Interpolations ────────────── v0.12.8
  Updating `/tmp/jl_1wAre5/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.22.3
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.7
  Updating `/tmp/jl_1wAre5/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.6.1
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.13.1
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.22.3
  [ced4e74d] + DistributionsAD v0.2.0
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [6a86dc24] + FiniteDiff v2.1.0
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.1
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.8
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.2
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v1.0.2
  [4536629a] + OpenBLAS_jll v0.3.7+5
  [429524aa] + Optim v0.20.0
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [90014a1f] + PDMats v0.9.11
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.4
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.3.3
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.7
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_79vFJm/Project.toml`
 [no changes]
  Updating `/tmp/jl_79vFJm/Manifest.toml`
 [no changes]
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_gIQpKl/Project.toml`
 [no changes]
  Updating `/tmp/jl_gIQpKl/Manifest.toml`
 [no changes]
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_lsxKWy/Project.toml`
 [no changes]
  Updating `/tmp/jl_lsxKWy/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_1wAre5/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.22.3
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.7
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.168222755
│   t_steps = 0.007850896
└   t_step / t_steps = 21.427204614607046
Sampling  0%|                               |  ETA: 5:58:32[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.0002655472964191029
  log_density:                   -10.602931415969639
  hamiltonian_energy:            15.44077374322142
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  8.233717592209253
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▉                            |  ETA: 0:00:27[K
  iterations:                    1119
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9969457120064023
  log_density:                   -12.63972474036745
  hamiltonian_energy:            14.836963408553423
  hamiltonian_energy_error:      -0.016858566050455437
  max_hamiltonian_energy_error:  -0.14281083169110076
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7835946164587158
  nom_step_size:                 0.7835946164587158
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9826116142228224, 1.0402 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:22[K
  iterations:                    1376
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.3032052512236859
  log_density:                   -12.710623263281878
  hamiltonian_energy:            19.561968967003146
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  1.455259335818475
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9316050731709731
  nom_step_size:                 0.9316050731709731
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9826116142228224, 1.0402 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:18[K
  iterations:                    1693
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -10.071206444057644
  hamiltonian_energy:            13.194407999125158
  hamiltonian_energy_error:      -0.7480491836554357
  max_hamiltonian_energy_error:  -0.7480491836554357
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.1107672486526088
  nom_step_size:                 1.1107672486526088
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9826116142228224, 1.0402 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████                          |  ETA: 0:00:16[K
  iterations:                    1931
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5130384741877372
  log_density:                   -16.753226782201253
  hamiltonian_energy:            18.662889306520007
  hamiltonian_energy_error:      0.9764840623151798
  max_hamiltonian_energy_error:  0.9764840623151798
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9492150471918059
  nom_step_size:                 0.9492150471918059
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9826116142228224, 1.0402 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|█████▉                         |  ETA: 0:00:14[K
  iterations:                    2274
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8017592585137411
  log_density:                   -17.333574360313502
  hamiltonian_energy:            21.155420010836746
  hamiltonian_energy_error:      0.324135607383635
  max_hamiltonian_energy_error:  0.5388220521149911
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|███████                        |  ETA: 0:00:11[K
  iterations:                    2694
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9924897302222375
  log_density:                   -15.441097807285548
  hamiltonian_energy:            23.6537774857379
  hamiltonian_energy_error:      -0.34521458821945217
  max_hamiltonian_energy_error:  -0.34521458821945217
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████▎                      |  ETA: 0:00:09[K
  iterations:                    3172
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9688652176140595
  log_density:                   -13.895035653734098
  hamiltonian_energy:            21.231638770290846
  hamiltonian_energy_error:      -0.31547864183748686
  max_hamiltonian_energy_error:  -0.31547864183748686
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▍                     |  ETA: 0:00:08[K
  iterations:                    3620
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7231074697186365
  log_density:                   -15.203451029416572
  hamiltonian_energy:            16.427824421052428
  hamiltonian_energy_error:      0.47925571120684296
  max_hamiltonian_energy_error:  0.47925571120684296
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▌                    |  ETA: 0:00:07[K
  iterations:                    4052
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9141141650361432
  log_density:                   -18.682071545617703
  hamiltonian_energy:            25.906107656555957
  hamiltonian_energy_error:      0.15350942148462465
  max_hamiltonian_energy_error:  0.18728446849058855
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▋                   |  ETA: 0:00:06[K
  iterations:                    4507
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.375188783291325
  hamiltonian_energy:            20.560870576674798
  hamiltonian_energy_error:      -0.37987166167957653
  max_hamiltonian_energy_error:  -0.5519102745320268
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▊                  |  ETA: 0:00:05[K
  iterations:                    4953
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9862752882075407
  log_density:                   -11.322293946005628
  hamiltonian_energy:            12.912744501834581
  hamiltonian_energy_error:      0.02989026838088904
  max_hamiltonian_energy_error:  0.03170013007417083
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▉                 |  ETA: 0:00:05[K
  iterations:                    5382
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9804769010874025
  log_density:                   -17.83045631315818
  hamiltonian_energy:            21.777340683807612
  hamiltonian_energy_error:      0.09599328448115685
  max_hamiltonian_energy_error:  -0.36808787428298473
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|███████████████                |  ETA: 0:00:04[K
  iterations:                    5813
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9387573785379296
  log_density:                   -13.392216020371889
  hamiltonian_energy:            19.98213536155435
  hamiltonian_energy_error:      -0.3350529455180613
  max_hamiltonian_energy_error:  -0.6066926453991215
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████▏              |  ETA: 0:00:04[K
  iterations:                    6252
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7904138752442186
  log_density:                   -17.74226947758986
  hamiltonian_energy:            20.74507296946719
  hamiltonian_energy_error:      0.5450145758839611
  max_hamiltonian_energy_error:  0.5450145758839611
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▍             |  ETA: 0:00:03[K
  iterations:                    6716
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8874590535033171
  log_density:                   -16.912701346885115
  hamiltonian_energy:            18.83859410828179
  hamiltonian_energy_error:      0.3112969957623761
  max_hamiltonian_energy_error:  -0.3343075071548256
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▌            |  ETA: 0:00:03[K
  iterations:                    7175
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9348246979807965
  log_density:                   -13.299659506836566
  hamiltonian_energy:            21.835494314248287
  hamiltonian_energy_error:      -0.4811100675630513
  max_hamiltonian_energy_error:  -0.5344703761240588
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▋           |  ETA: 0:00:03[K
  iterations:                    7601
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.92770897344046
  log_density:                   -13.640912362990552
  hamiltonian_energy:            16.25303933788625
  hamiltonian_energy_error:      0.1346985296498211
  max_hamiltonian_energy_error:  0.1346985296498211
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▉          |  ETA: 0:00:02[K
  iterations:                    8076
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9004132111544221
  log_density:                   -14.748454547874221
  hamiltonian_energy:            17.516849958959096
  hamiltonian_energy_error:      0.16918751081731997
  max_hamiltonian_energy_error:  0.22919397287916965
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████         |  ETA: 0:00:02[K
  iterations:                    8507
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8717616981057849
  log_density:                   -14.760788603030523
  hamiltonian_energy:            24.837357302182866
  hamiltonian_energy_error:      -0.3732934362031344
  max_hamiltonian_energy_error:  0.46722759460963204
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 74%|██████████████████████▉        |  ETA: 0:00:02[K
  iterations:                    8860
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9447656420251922
  log_density:                   -11.508026891954682
  hamiltonian_energy:            13.423280614271562
  hamiltonian_energy_error:      0.040793811425912097
  max_hamiltonian_energy_error:  0.11086573939688371
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|████████████████████████       |  ETA: 0:00:01[K
  iterations:                    9291
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9983978860474133
  log_density:                   -12.906999408046584
  hamiltonian_energy:            15.33437300375335
  hamiltonian_energy_error:      -0.09867576115267518
  max_hamiltonian_energy_error:  -0.3168896502066545
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 81%|█████████████████████████▏     |  ETA: 0:00:01[K
  iterations:                    9735
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6597802953057149
  log_density:                   -10.845398574118164
  hamiltonian_energy:            18.169629258904074
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  0.8383313349758197
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▍    |  ETA: 0:00:01[K
  iterations:                    10206
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9563314194662175
  log_density:                   -14.751261571101175
  hamiltonian_energy:            22.27971913979992
  hamiltonian_energy_error:      -0.24629210026761328
  max_hamiltonian_energy_error:  -0.24629210026761328
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▌   |  ETA: 0:00:01[K
  iterations:                    10623
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8632330607645248
  log_density:                   -13.402668172460107
  hamiltonian_energy:            21.758151822525384
  hamiltonian_energy_error:      -0.25921543335976693
  max_hamiltonian_energy_error:  0.46736669043191625
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|████████████████████████████▊  |  ETA: 0:00:00[K
  iterations:                    11142
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9710226037977774
  log_density:                   -17.442367726042782
  hamiltonian_energy:            22.334052634861735
  hamiltonian_energy_error:      -0.1606547746533309
  max_hamiltonian_energy_error:  -0.7945659267182421
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████ |  ETA: 0:00:00[K
  iterations:                    11614
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9960518735119743
  log_density:                   -12.493688385193044
  hamiltonian_energy:            17.887395647999853
  hamiltonian_energy_error:      -0.32276592566048734
  max_hamiltonian_energy_error:  -0.32276592566048734
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8269033573860523
  log_density:                   -18.331301978345678
  hamiltonian_energy:            22.922637554780145
  hamiltonian_energy_error:      0.41333101659841986
  max_hamiltonian_energy_error:  0.41333101659841986
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7013655780004473
  nom_step_size:                 0.7013655780004473
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0118598313651603, 1.0296 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.456357505 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0118598313651603, 1.0296 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.701), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.090130665568599
└   average_acceptance_rate = 0.8714372780417377
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.981470428 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢄⠀⢀⠎⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠑⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢇⠀⠀⢀⡀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠘⡄⠀⡎⠑⢄│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⢠⡄⠀⠀⠀⠀⠀⡠⠔⢆⠀⠀⠀⢸⠀⠀⢣⡜⠀⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⡜⠘⡄⠀⢀⠔⠉⠀⠀⠀⠑⠤⣀⡇⠀⠀⠈⠁⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠘⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡄⠀⠀⠀⢀⠜⠁⠀⠀⠀⠀⢀⡠⠔⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡱⡀⠀⢀⠎⠀⠀⢀⡠⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⡵⣠⠮⠔⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
