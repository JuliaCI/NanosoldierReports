Julia Version 1.5.0-DEV.158
Commit ed177d17d6 (2020-01-27 16:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Tables ────────────────────── v0.2.11
 Installed Parsers ───────────────────── v0.3.10
 Installed KCenters ──────────────────── v0.1.9
 Installed Compat ────────────────────── v3.2.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed MLDataPattern ─────────────── v0.5.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed OrderedCollections ────────── v1.1.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed DataStructures ────────────── v0.17.9
 Installed Missings ──────────────────── v0.4.3
 Installed MLDataUtils ───────────────── v0.5.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed MappedArrays ──────────────── v0.2.2
 Installed JSON ──────────────────────── v0.21.0
 Installed TableTraits ───────────────── v1.0.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed Reexport ──────────────────── v0.2.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed DataFrames ────────────────── v0.20.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_nH8S2J/Project.toml`
 [no changes]
  Updating `/tmp/jl_nH8S2J/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_nH8S2J/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 185.71999999999994
[ Info: 54.45
[ Info: 42.469999999999985
[ Info: 24.19
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999835129265
[ Info: 76.32000116003647
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.5145428286675
inertia(cdnet.distances) = 21.70852196116518
inertia(crand.distances) = 21.79511602992999
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7797863594738603,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.09375,"distances_sum":1818.4248420634472}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.412109375,"f1":null,"seconds":3.857538104057312e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.859375,"distances_sum":1132.408489440935}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65234375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.65234375,"f1":0.7797863594738603,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.09375,"distances_sum":1818.4248420634472}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9037722693972702,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.75,"distances_sum":2482.8003333182082}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":7,"bsize":4}, perf: {"precision":null,"recall":0.66015625,"f1":null,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.1015625,"distances_sum":1843.391305163926}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7937562437562445,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.15625,"distances_sum":1903.3371357060246}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8330078125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8330078125,"f1":0.9037722693972702,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.75,"distances_sum":2482.8003333182082}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9465144230769234,"seconds":6.4391642808914185e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2750.87127090338}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9647951007326012,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9609375,"distances_sum":2908.4315779050708}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9495592948717955,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2765.7189780283816}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9566620879120882,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.921875,"distances_sum":2818.72158374082}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9263137903762909,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":2609.8537470585775}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9647951007326012,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9609375,"distances_sum":2908.4315779050708}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9647951007326012,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9609375,"distances_sum":2908.4315779050708}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.203125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.203125,"f1":null,"seconds":3.2223761081695557e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":5.875,"distances_sum":475.92904469799544}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.71875,"f1":0.8287727897102906,"seconds":3.93204391002655e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.25,"distances_sum":1717.0746272774052}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.71875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.71875,"f1":0.8287727897102906,"seconds":3.93204391002655e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.25,"distances_sum":1717.0746272774052}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9080731768231775,"seconds":4.285946488380432e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.90625,"distances_sum":2110.042377529876}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.841796875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.841796875,"f1":0.9080731768231775,"seconds":4.285946488380432e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.90625,"distances_sum":2110.042377529876}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9513855935730942,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.90625,"distances_sum":2407.5705777471453}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9449696137196142,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.8828125,"distances_sum":2369.2344457282834}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752976190476192,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.9765625,"distances_sum":2569.462088230025}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.934031593406594,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.9296875,"distances_sum":2276.7993050789587}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9121997793872804,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.859375,"distances_sum":2136.6707445381726}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752976190476192,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.9765625,"distances_sum":2569.462088230025}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752976190476192,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.9765625,"distances_sum":2569.462088230025}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2119140625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2119140625,"f1":null,"seconds":3.2801181077957153e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.1796875,"distances_sum":522.2486730930775}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2119140625,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.2119140625,"f1":null,"seconds":3.2801181077957153e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.1796875,"distances_sum":522.2486730930775}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8593640734265744,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.5390625,"distances_sum":1920.804041442673}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8095826048951057,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.953125,"distances_sum":1707.8984844686577}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8593640734265744,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.5390625,"distances_sum":1920.804041442673}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9618131868131873,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9765625,"distances_sum":2559.451838630918}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9618131868131873,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9765625,"distances_sum":2559.451838630918}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9618131868131873,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9765625,"distances_sum":2559.451838630918}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.185546875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.185546875,"f1":null,"seconds":3.1478703022003174e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.625,"distances_sum":444.3987720289403}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.185546875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.185546875,"f1":null,"seconds":3.1478703022003174e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.625,"distances_sum":444.3987720289403}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7949357933732942,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.0859375,"distances_sum":1609.5225865022176}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8473359973359984,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.578125,"distances_sum":1811.9990126141713}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4228515625,"f1":null,"seconds":3.7588179111480713e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.484375,"distances_sum":964.1144745064022}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.8473359973359984,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.578125,"distances_sum":1811.9990126141713}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.85724587912088,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5625,"distances_sum":1883.6942680545746}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9518315018315024,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2499.451704115938}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9518315018315024,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2499.451704115938}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9616331585081588,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.953125,"distances_sum":2545.375964918994}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9616331585081588,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.953125,"distances_sum":2545.375964918994}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9616331585081588,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.953125,"distances_sum":2545.375964918994}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.80016493922744,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":7.7421875,"distances_sum":1735.0676744423183}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3916015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3916015625,"f1":null,"seconds":4.0531158447265625e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":6.3203125,"distances_sum":941.2936024068435}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6787109375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6787109375,"f1":0.80016493922744,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":7.7421875,"distances_sum":1735.0676744423183}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.884538378288379,"seconds":6.429851055145264e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.28125,"distances_sum":2237.5505219536135}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.884538378288379,"seconds":6.429851055145264e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.28125,"distances_sum":2237.5505219536135}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9482944139194143,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.8671875,"distances_sum":2662.752024088781}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9699805402930405,"seconds":6.83218240737915e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.9140625,"distances_sum":2810.103464252096}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9699805402930405,"seconds":6.83218240737915e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.9140625,"distances_sum":2810.103464252096}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9699805402930405,"seconds":6.83218240737915e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.9140625,"distances_sum":2810.103464252096}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5849609375, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5849609375,"f1":null,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.6782432794570923e-6,"evaluations":7.3359375,"distances_sum":1397.2874180931747}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5849609375,"state":{"ssize":4,"bsize":3},"perf":{"precision":null,"recall":0.5849609375,"f1":null,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.6782432794570923e-6,"evaluations":7.3359375,"distances_sum":1397.2874180931747}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8103625541125549,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.6782432794570923e-6,"evaluations":7.84375,"distances_sum":1676.9635083072021}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6943359375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6943359375,"f1":0.8103625541125549,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.6782432794570923e-6,"evaluations":7.84375,"distances_sum":1676.9635083072021}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.931390484515485,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.6782432794570923e-6,"evaluations":8.5703125,"distances_sum":2327.47818802334}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.720703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.720703125,"f1":0.8280261405261412,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.6782432794570923e-6,"evaluations":7.875,"distances_sum":1769.2748321652887}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9187447968697976,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.6782432794570923e-6,"evaluations":8.5390625,"distances_sum":2233.639391113136}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.867139631202132,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.6782432794570923e-6,"evaluations":8.3984375,"distances_sum":1901.2400755489034}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.931390484515485,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.6782432794570923e-6,"evaluations":8.5703125,"distances_sum":2327.47818802334}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8818359375,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.931390484515485,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.6782432794570923e-6,"evaluations":8.5703125,"distances_sum":2327.47818802334}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7959301115551123,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":7.7578125,"distances_sum":1731.4141239624416}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2197265625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2197265625,"f1":null,"seconds":3.842636942863464e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":6.3671875,"distances_sum":562.2946519926692}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":6.0234375,"distances_sum":962.2315644766402}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6806640625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6806640625,"f1":0.7959301115551123,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":7.7578125,"distances_sum":1731.4141239624416}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8560273060273069,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.4453125,"distances_sum":1948.5232408486117}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8560273060273069,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.4453125,"distances_sum":1948.5232408486117}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9526530760905766,"seconds":7.7858567237854e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.796875,"distances_sum":2600.0407988130546}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9344780219780229,"seconds":7.057562470436096e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.7109375,"distances_sum":2444.7737431434416}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9059497793872802,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.65625,"distances_sum":2234.8360998136177}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9553056318681321,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.8359375,"distances_sum":2603.4114809079497}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9477392399267403,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.734375,"distances_sum":2498.8888170914397}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8600545288045296,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.46875,"distances_sum":2005.842801048132}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9056662087912096,"seconds":6.508082151412964e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.5859375,"distances_sum":2246.613279959157}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9553056318681321,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.8359375,"distances_sum":2603.4114809079497}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9553056318681321,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.8359375,"distances_sum":2603.4114809079497}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5205078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5205078125,"f1":0.6659174159174164,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":6.90625,"distances_sum":1194.834368890084}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2431640625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2431640625,"f1":null,"seconds":4.168599843978882e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":5.7734375,"distances_sum":552.2262110786683}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.396484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.396484375,"f1":null,"seconds":4.423782229423523e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":6.078125,"distances_sum":938.6068959693918}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5205078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5205078125,"f1":0.6659174159174164,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":6.90625,"distances_sum":1194.834368890084}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6318359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6318359375,"f1":0.759993305305806,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":7.6875,"distances_sum":1443.0514638136451}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7255859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7255859375,"f1":0.8294367091242099,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.375,"distances_sum":1810.0980805643653}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8970102813852823,"seconds":6.398186087608337e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.6015625,"distances_sum":2134.913300834463}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7797072718947727,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":7.8359375,"distances_sum":1571.070520563613}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.8970102813852823,"seconds":6.398186087608337e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.6015625,"distances_sum":2134.913300834463}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9240072427572433,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.6640625,"distances_sum":2356.2723940799965}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9362070221445229,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.7578125,"distances_sum":2452.540110167319}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9362070221445229,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.7578125,"distances_sum":2452.540110167319}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.892578125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9362070221445229,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.7578125,"distances_sum":2452.540110167319}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.345703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.345703125,"f1":null,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":5.7421875,"distances_sum":721.0686744213516}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.345703125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.345703125,"f1":null,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":5.7421875,"distances_sum":721.0686744213516}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8932062728937735,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.5859375,"distances_sum":2043.9404986609597}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8203125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8203125,"f1":0.8932062728937735,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.5859375,"distances_sum":2043.9404986609597}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9384188727938733,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.75,"distances_sum":2389.68930518741}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9073691933066941,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.5703125,"distances_sum":2174.0478018197723}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9595467032967038,"seconds":7.063150405883789e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.7265625,"distances_sum":2544.6689767912244}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9423420329670337,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.7265625,"distances_sum":2411.7116814396677}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9595467032967038,"seconds":7.063150405883789e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.7265625,"distances_sum":2544.6689767912244}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9595467032967038,"seconds":7.063150405883789e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.7265625,"distances_sum":2544.6689767912244}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2216796875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2216796875,"f1":null,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":5.8828125,"distances_sum":465.5550315558338}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2216796875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2216796875,"f1":null,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":5.8828125,"distances_sum":465.5550315558338}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.814029720279721,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":7.890625,"distances_sum":1646.6384754492997}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7099185536685542,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":7.21875,"distances_sum":1248.7527611646096}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.703125,"f1":0.814029720279721,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":7.890625,"distances_sum":1646.6384754492997}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9082734973359983,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.453125,"distances_sum":2155.4848316865855}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8581590284715295,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.125,"distances_sum":1822.2303272421307}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9182609057609065,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.5,"distances_sum":2219.679707196458}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8669960248085258,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.328125,"distances_sum":1904.9302847089405}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.859375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.859375,"f1":0.9182609057609065,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.5,"distances_sum":2219.679707196458}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.935597215284716,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.46875,"distances_sum":2333.264135725643}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9626717032967037,"seconds":6.664544343948364e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.8359375,"distances_sum":2578.303329033034}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.920063790376291,"seconds":6.16908073425293e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.4609375,"distances_sum":2223.839023138664}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9360576923076929,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.46875,"distances_sum":2358.026164430756}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9556063727938731,"seconds":6.3497573137283325e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.78125,"distances_sum":2528.6044819331146}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9387253371628377,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.5859375,"distances_sum":2395.176222028283}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9626717032967037,"seconds":6.664544343948364e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.8359375,"distances_sum":2578.303329033034}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9626717032967037,"seconds":6.664544343948364e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.8359375,"distances_sum":2578.303329033034}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":3.553926944732666e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.3359375,"distances_sum":896.8444244234994}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7897706460206467,"seconds":4.274770617485046e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.6640625,"distances_sum":1579.6526185292153}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66796875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.66796875,"f1":0.7897706460206467,"seconds":4.274770617485046e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.6640625,"distances_sum":1579.6526185292153}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9154418498168506,"seconds":3.870576620101929e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.2421875,"distances_sum":2324.918295977638}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9143944597069604,"seconds":4.608184099197388e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.25,"distances_sum":2263.3233957375046}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8616851898101904,"seconds":4.8317015171051025e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.15625,"distances_sum":1957.5608064192734}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9232689185814192,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.328125,"distances_sum":2334.5020565015257}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8650443306693313,"seconds":4.86522912979126e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.1328125,"distances_sum":1972.8626656466217}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.7997273559773567,"seconds":4.680827260017395e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8125,"distances_sum":1708.4385457315423}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8626404845154851,"seconds":5.031004548072815e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.1875,"distances_sum":1995.1681712189006}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8662109375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8662109375,"f1":0.9232689185814192,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.328125,"distances_sum":2334.5020565015257}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9290521978021984,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4609375,"distances_sum":2420.0654668749767}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9449290293040297,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6953125,"distances_sum":2520.5968218465337}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9303831585081593,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5,"distances_sum":2460.631533353089}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9449290293040297,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6953125,"distances_sum":2520.5968218465337}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9449290293040297,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6953125,"distances_sum":2520.5968218465337}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.228515625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.228515625,"f1":null,"seconds":3.335997462272644e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.5234375,"distances_sum":591.614816008095}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7836991133866141,"seconds":4.447996616363525e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.4140625,"distances_sum":1554.5147134814908}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6591796875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6591796875,"f1":0.7836991133866141,"seconds":4.447996616363525e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.4140625,"distances_sum":1554.5147134814908}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.6611328125,"f1":null,"seconds":4.373490810394287e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.4765625,"distances_sum":1585.2730575212095}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.787926483238984,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.515625,"distances_sum":1598.8429778859395}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9582646520146524,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.84375,"distances_sum":2619.895337797299}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9470326548451553,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.796875,"distances_sum":2480.3527802010103}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9582646520146524,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.84375,"distances_sum":2619.895337797299}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.977901785714286,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.984375,"distances_sum":2737.686593587874}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9688301282051286,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.90625,"distances_sum":2667.368434888998}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9679544413919416,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8984375,"distances_sum":2676.308482616255}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.977901785714286,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.984375,"distances_sum":2737.686593587874}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.977901785714286,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.984375,"distances_sum":2737.686593587874}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6279296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6279296875,"f1":0.7556393259518266,"seconds":4.55416738986969e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.3671875,"distances_sum":1519.156269381899}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.34375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.34375,"f1":null,"seconds":3.244727849960327e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.421875,"distances_sum":837.7306523774798}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2646484375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2646484375,"f1":null,"seconds":3.170222043991089e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.4375,"distances_sum":730.0351267959794}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7787181568431577,"seconds":4.732981324195862e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.4296875,"distances_sum":1582.997095781752}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.650390625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.650390625,"f1":0.7787181568431577,"seconds":4.732981324195862e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.4296875,"distances_sum":1582.997095781752}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8593462093462103,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.15625,"distances_sum":1935.201498521006}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9224676365301372,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.375,"distances_sum":2371.148330806634}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7863022394272402,"seconds":4.740431904792786e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.515625,"distances_sum":1603.1792874352627}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9311698717948722,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.609375,"distances_sum":2385.046230749959}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8480321761571772,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.09375,"distances_sum":1845.2952361794944}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9311698717948722,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.609375,"distances_sum":2385.046230749959}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9546188186813194,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7734375,"distances_sum":2556.2737143991167}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9568337912087918,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.734375,"distances_sum":2590.724185309724}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672103937728941,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.796875,"distances_sum":2652.0953059389067}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9718406593406598,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.859375,"distances_sum":2678.008809269049}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9417327464202468,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.65625,"distances_sum":2442.1129438173643}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.959935897435898,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8203125,"distances_sum":2591.4792791972386}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9718406593406598,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.859375,"distances_sum":2678.008809269049}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9718406593406598,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.859375,"distances_sum":2678.008809269049}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8461491633366642,"seconds":4.848465323448181e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8359375,"distances_sum":1794.2179790668959}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.384765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.384765625,"f1":null,"seconds":3.514811396598816e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.7578125,"distances_sum":853.2707450406782}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.517578125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.517578125,"f1":0.6655969030969037,"seconds":4.041939973831177e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.6171875,"distances_sum":1137.0897778368271}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.8461491633366642,"seconds":4.848465323448181e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8359375,"distances_sum":1794.2179790668959}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8583286505161515,"seconds":4.734843969345093e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9609375,"distances_sum":1900.1564276253816}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9425309065934071,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.71875,"distances_sum":2419.926443575427}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9425309065934071,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.71875,"distances_sum":2419.926443575427}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9668555402930408,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8515625,"distances_sum":2624.4240370520556}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9570169413919418,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":2541.922269538592}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9668555402930408,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8515625,"distances_sum":2624.4240370520556}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9668555402930408,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8515625,"distances_sum":2624.4240370520556}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7913711288711297,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.5078125,"distances_sum":1688.7137889051903}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5419921875,"f1":0.6882908757908764,"seconds":4.073604941368103e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.09375,"distances_sum":1376.9414780551006}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.850312708125209,"seconds":5.044043064117432e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.8359375,"distances_sum":1922.8574528611912}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.850312708125209,"seconds":5.044043064117432e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.8359375,"distances_sum":1922.8574528611912}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9039809149184156,"seconds":4.98257577419281e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1953125,"distances_sum":2270.4577644955207}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9284543581418587,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.3515625,"distances_sum":2446.3278891616746}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9284543581418587,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.3515625,"distances_sum":2446.3278891616746}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9640109890109892,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.75,"distances_sum":2688.558265907568}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9558092948717956,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.734375,"distances_sum":2613.579806164193}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9656078296703301,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":2695.231316845658}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9453411172161177,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7109375,"distances_sum":2536.4402933046504}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9392399267399274,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.5859375,"distances_sum":2543.4263307596534}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9656078296703301,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":2695.231316845658}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9656078296703301,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":2695.231316845658}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7908476939726948,"seconds":4.945322871208191e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7734375,"distances_sum":1565.485359655443}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.21875,"f1":null,"seconds":3.6079436540603638e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.421875,"distances_sum":524.3851358155882}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8635104478854488,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.1015625,"distances_sum":1937.8787816743918}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8635104478854488,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.1015625,"distances_sum":1937.8787816743918}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9412831959706967,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.65625,"distances_sum":2447.828519804843}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9431776556776563,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6640625,"distances_sum":2486.2056946783478}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8682385323010332,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.1328125,"distances_sum":1983.2659257981982}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9431776556776563,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6640625,"distances_sum":2486.2056946783478}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9737179487179488,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8515625,"distances_sum":2688.114058427927}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9497996794871801,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.625,"distances_sum":2571.34442656992}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.951425137362638,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6640625,"distances_sum":2576.749296232505}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9737179487179488,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8515625,"distances_sum":2688.114058427927}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9737179487179488,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8515625,"distances_sum":2688.114058427927}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.390625,"f1":null,"seconds":3.6954879760742188e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.7734375,"distances_sum":925.6516824595483}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7776353854478862,"seconds":4.621222615242004e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.5078125,"distances_sum":1596.2883874655865}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6533203125,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6533203125,"f1":0.7776353854478862,"seconds":4.621222615242004e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.5078125,"distances_sum":1596.2883874655865}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9479967948717953,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.78125,"distances_sum":2555.906445967406}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9016915376290385,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4609375,"distances_sum":2190.2880529244517}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8536297036297044,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8984375,"distances_sum":2016.0222013454204}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8393788503163511,"seconds":5.114823579788208e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.6796875,"distances_sum":1923.446821266342}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8887966200466207,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3828125,"distances_sum":2149.6507870591454}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9479967948717953,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.78125,"distances_sum":2555.906445967406}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9620592948717952,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7890625,"distances_sum":2663.7630850762057}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9545615842490849,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.796875,"distances_sum":2587.029195971702}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9554346694971699,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7734375,"distances_sum":2604.2785728684275}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.96856684981685,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8671875,"distances_sum":2697.6148283285534}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.96856684981685,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8671875,"distances_sum":2697.6148283285534}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.96856684981685,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8671875,"distances_sum":2697.6148283285534}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4189453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4189453125,"f1":null,"seconds":3.6731362342834473e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.4296875,"distances_sum":923.7159478156632}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.1739473342895508e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.9140625,"distances_sum":555.4580912267999}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4189453125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4189453125,"f1":null,"seconds":3.6731362342834473e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.4296875,"distances_sum":923.7159478156632}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9191766566766574,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.3828125,"distances_sum":2293.417249159567}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.515625,"f1":0.6629779942279946,"seconds":4.256144165992737e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.9921875,"distances_sum":1201.8056030167336}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8619630369630377,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.0078125,"distances_sum":1913.536038940836}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6904692529692537,"seconds":4.289671778678894e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.9765625,"distances_sum":1234.5119915246748}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.9191766566766574,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.3828125,"distances_sum":2293.417249159567}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9536744505494512,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7265625,"distances_sum":2599.7951382684396}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9574977106227112,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8828125,"distances_sum":2590.0868414153138}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9600503663003666,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8203125,"distances_sum":2621.966245995648}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9600503663003666,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8203125,"distances_sum":2621.966245995648}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9600503663003666,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8203125,"distances_sum":2621.966245995648}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8510713245088254,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.0390625,"distances_sum":1350.015410144979}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.803083895271396,"seconds":4.677101969718933e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.734375,"distances_sum":1190.0710381306767}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7886450355200362,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.6875,"distances_sum":1186.6312008375078}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8510713245088254,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.0390625,"distances_sum":1350.015410144979}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9590258699633705,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.765625,"distances_sum":1806.606843257326}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9527358058608064,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.734375,"distances_sum":1792.8025356474468}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9394777097902106,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7421875,"distances_sum":1723.8997907914345}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9590258699633705,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.765625,"distances_sum":1806.606843257326}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9718234890109894,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.859375,"distances_sum":1866.0885361539483}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9615041208791214,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8671875,"distances_sum":1815.9652520447792}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9799507783882788,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9609375,"distances_sum":1916.6624812371797}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9799507783882788,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9609375,"distances_sum":1916.6624812371797}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9799507783882788,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9609375,"distances_sum":1916.6624812371797}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8399137321012329,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.140625,"distances_sum":1388.6005911097568}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8608459249084259,"seconds":4.909932613372803e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3046875,"distances_sum":1402.559647761092}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.777368985181486,"seconds":4.371628165245056e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.3671875,"distances_sum":1158.828742463666}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8608459249084259,"seconds":4.909932613372803e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3046875,"distances_sum":1402.559647761092}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9514594780219784,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7890625,"distances_sum":1848.2967432117346}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9314992299367306,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7734375,"distances_sum":1725.034287324861}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8939565642690652,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3828125,"distances_sum":1567.3025662915468}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9514594780219784,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7890625,"distances_sum":1848.2967432117346}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9639365842490847,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.859375,"distances_sum":1926.8928937445726}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604567307692312,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.90625,"distances_sum":1878.7075081252503}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9680288461538464,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9296875,"distances_sum":1921.278477882657}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9680288461538464,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9296875,"distances_sum":1921.278477882657}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9680288461538464,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9296875,"distances_sum":1921.278477882657}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.24609375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.24609375,"f1":null,"seconds":3.3117830753326416e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":5.546875,"distances_sum":501.5420640535157}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8338557276057286,"seconds":5.0496309995651245e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.1015625,"distances_sum":1328.0094210667353}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8485753829503837,"seconds":5.038455128669739e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.265625,"distances_sum":1381.9531123366899}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8485753829503837,"seconds":5.038455128669739e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.265625,"distances_sum":1381.9531123366899}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.947435897435898,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7890625,"distances_sum":1821.1151282981293}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9664262820512823,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.921875,"distances_sum":1934.5826519526631}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9224301739926747,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.703125,"distances_sum":1676.391119543908}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570398351648356,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7890625,"distances_sum":1898.798046228862}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9450408966033969,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7265625,"distances_sum":1834.2973943998927}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9664262820512823,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.921875,"distances_sum":1934.5826519526631}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764136904761909,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9453125,"distances_sum":2005.8325307050557}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9753548534798542,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.96875,"distances_sum":1990.5517045071128}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.967673992673993,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.875,"distances_sum":1959.601759584983}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679544413919415,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8671875,"distances_sum":1971.951902031986}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723214285714288,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.90625,"distances_sum":1956.754191017546}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764136904761909,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9453125,"distances_sum":2005.8325307050557}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764136904761909,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9453125,"distances_sum":2005.8325307050557}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8706807081807089,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.34375,"distances_sum":1629.2408642560579}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.24609375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.24609375,"f1":null,"seconds":3.2614916563034058e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.546875,"distances_sum":538.9425347353111}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.795982663170164,"seconds":4.773959517478943e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.8359375,"distances_sum":1322.6957086004193}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8706807081807089,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.34375,"distances_sum":1629.2408642560579}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9179945054945062,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7421875,"distances_sum":1851.2879220333837}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.9179945054945062,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7421875,"distances_sum":1851.2879220333837}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620764652014654,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8359375,"distances_sum":2114.4149021075873}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9546359890109893,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8203125,"distances_sum":2054.624123947898}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9335679945054951,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.765625,"distances_sum":1945.1186554506926}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620764652014654,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8359375,"distances_sum":2114.4149021075873}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620764652014654,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8359375,"distances_sum":2114.4149021075873}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.0703125,"distances_sum":723.6732671935625}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2177734375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2177734375,"f1":null,"seconds":3.1739473342895508e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.6328125,"distances_sum":421.4702931012044}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4140625,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.4140625,"f1":null,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.0703125,"distances_sum":723.6732671935625}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.786657613220114,"seconds":4.362314939498901e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.5390625,"distances_sum":1153.3719151408002}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.556640625,"f1":null,"seconds":4.241243004798889e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.828125,"distances_sum":969.493062516565}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.7253982128982136,"seconds":4.10713255405426e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.984375,"distances_sum":998.7856670715728}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5498046875,"f1":null,"seconds":4.250556230545044e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.8515625,"distances_sum":927.2726904690696}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6611328125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6611328125,"f1":0.786657613220114,"seconds":4.362314939498901e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.5390625,"distances_sum":1153.3719151408002}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.927784715284716,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.78125,"distances_sum":1686.4635846034162}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9101533882783891,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6015625,"distances_sum":1585.4354257104085}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9291437728937735,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8046875,"distances_sum":1678.684096623345}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7888033841158849,"seconds":4.524365067481995e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.7109375,"distances_sum":1218.390745957316}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9083650724275733,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6171875,"distances_sum":1580.1482156146071}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8924627455877464,"seconds":4.9602240324020386e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.5625,"distances_sum":1513.1639233510127}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9291437728937735,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8046875,"distances_sum":1678.684096623345}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.876953125,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9291437728937735,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8046875,"distances_sum":1678.684096623345}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8558778027528035,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.109375,"distances_sum":1442.4636389015243}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.4570693969726562e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":5.8515625,"distances_sum":683.5427128910111}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8558778027528035,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.109375,"distances_sum":1442.4636389015243}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8647867757242766,"seconds":4.891306161880493e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.2421875,"distances_sum":1429.6999506781901}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9060897435897443,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.5546875,"distances_sum":1617.5661299801957}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.837890625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.837890625,"f1":0.9060897435897443,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.5546875,"distances_sum":1617.5661299801957}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9329899267399273,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.8046875,"distances_sum":1742.0282326625986}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882787,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.8828125,"distances_sum":1939.1343249405413}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.944207875457876,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.734375,"distances_sum":1809.723031103514}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9105998168498176,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.671875,"distances_sum":1626.611989164167}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9334535256410265,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.78125,"distances_sum":1749.2604544609114}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882787,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.8828125,"distances_sum":1939.1343249405413}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882787,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.8828125,"distances_sum":1939.1343249405413}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.642578125,"f1":0.7703385156510164,"seconds":4.455447196960449e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.6328125,"distances_sum":1154.9765239928493}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.642578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.642578125,"f1":0.7703385156510164,"seconds":4.455447196960449e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.6328125,"distances_sum":1154.9765239928493}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9387591575091581,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.6640625,"distances_sum":1804.7610586022556}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9387591575091581,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.6640625,"distances_sum":1804.7610586022556}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9534455128205135,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8125,"distances_sum":1852.6789409383666}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9534455128205135,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8125,"distances_sum":1852.6789409383666}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9534455128205135,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8125,"distances_sum":1852.6789409383666}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3798828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3798828125,"f1":null,"seconds":3.4440308809280396e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.75,"distances_sum":659.0134264936211}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.205078125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.205078125,"f1":null,"seconds":3.2242387533187866e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.1484375,"distances_sum":384.7362485906243}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3798828125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3798828125,"f1":null,"seconds":3.4440308809280396e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.75,"distances_sum":659.0134264936211}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.904905511155512,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.3828125,"distances_sum":1600.5402809946888}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.837890625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.837890625,"f1":0.904905511155512,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.3828125,"distances_sum":1600.5402809946888}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9337001540126545,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.71875,"distances_sum":1755.3994000474477}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9337001540126545,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.71875,"distances_sum":1755.3994000474477}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.88671875,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9337001540126545,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.71875,"distances_sum":1755.3994000474477}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.792538711288712,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.7890625,"distances_sum":1290.2078628979152}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.798494214119215,"seconds":4.881992936134338e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.7890625,"distances_sum":1291.7729714051472}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23046875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.23046875,"f1":null,"seconds":3.335997462272644e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.640625,"distances_sum":440.074657534422}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.798494214119215,"seconds":4.881992936134338e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.7890625,"distances_sum":1291.7729714051472}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9301396520146528,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7265625,"distances_sum":1815.7946377606227}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9406364468864474,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.6171875,"distances_sum":1902.9826893749719}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9313389735264742,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7890625,"distances_sum":1818.4487699574825}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9428285256410263,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.6015625,"distances_sum":1960.2487765672358}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8520958208458217,"seconds":4.811212420463562e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.1484375,"distances_sum":1471.8165013738173}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.865731664169165,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.0859375,"distances_sum":1530.5523389896223}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8042634448884456,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.796875,"distances_sum":1307.9670697052004}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9428285256410263,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.6015625,"distances_sum":1960.2487765672358}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707417582417587,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9375,"distances_sum":2023.5962663616863}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9643257783882788,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8359375,"distances_sum":1992.5137499686277}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9698660714285716,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9375,"distances_sum":2024.5285114027483}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9591918498168501,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8515625,"distances_sum":1988.6349781738502}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9587339743589745,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8125,"distances_sum":1984.9144302856957}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9638793498168502,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8984375,"distances_sum":1988.8712291499382}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707417582417587,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9375,"distances_sum":2023.5962663616863}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707417582417587,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9375,"distances_sum":2023.5962663616863}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":3.3043324947357178e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":6.140625,"distances_sum":766.4180863107624}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.7095231157731164,"seconds":4.144385457038879e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":6.875,"distances_sum":1089.9032119648375}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.564453125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.564453125,"f1":0.7095231157731164,"seconds":4.144385457038879e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":6.875,"distances_sum":1089.9032119648375}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9262222152847162,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.828125,"distances_sum":1790.1243389103984}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9106575715950724,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.53125,"distances_sum":1723.7292349472195}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9073946886446895,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.59375,"distances_sum":1695.9979813802954}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8535376082251092,"seconds":4.9173831939697266e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":7.96875,"distances_sum":1468.1387474988019}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.873046875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.873046875,"f1":0.9262222152847162,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.828125,"distances_sum":1790.1243389103984}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.973717948717949,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.890625,"distances_sum":2069.653377993748}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.957909798534799,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.828125,"distances_sum":1985.8273750648234}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9680663086913092,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.8984375,"distances_sum":2024.9976405199438}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9493933150183156,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.7578125,"distances_sum":1931.8162128679323}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.953571428571429,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.8515625,"distances_sum":1936.2554257540592}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9541926823176827,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.8046875,"distances_sum":1969.7534445471101}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.973717948717949,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.890625,"distances_sum":2069.653377993748}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.973717948717949,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.890625,"distances_sum":2069.653377993748}}, n: 9
inertia(cfft.distances) = 20.5992058737812
inertia(cdnet.distances) = 21.432678751803763
inertia(crand.distances) = 20.28257374169042
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9044444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.888888888888889
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8822222222222221
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9088888888888889
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9422222222222222
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9355555555555556
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8711111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.888888888888889
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8933333333333332
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9022222222222224
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9199999999999999
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 3, 2, 1, 3, 2, 2, 3, 1, 3, 3, 2, 3, 3, 1, 2, 3, 3, 2, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 2, 3, 2, 3, 1, 3, 3, 3]
acc = 0.9333333333333333
*** starting iteration: 1; err: [Inf, 0.38113333542699546] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38113333542699546, 0.19534129184447974] ***
*** starting iteration: 2; err: [Inf, 0.38113333542699546, 0.19534129184447974] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332] ***
*** starting iteration: 3; err: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425] ***
*** starting iteration: 4; err: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073] ***
*** starting iteration: 5; err: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655] ***
*** starting iteration: 6; err: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655, 0.16209971251282457] ***
*** finished computation of 12 references, err: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655, 0.16209971251282457] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.3688736716114024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3688736716114024, 0.19644707786684734] ***
*** finished computation of 7 references, err: [Inf, 0.3688736716114024, 0.19644707786684734] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 10]]
** centroid: 2, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 18]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 1), (3, 18)]
*** center 4: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5005000047777376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5005000047777376, 0.23493768651320812] ***
*** starting iteration: 2; err: [Inf, 0.5005000047777376, 0.23493768651320812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5005000047777376, 0.23493768651320812, 0.21803681037634473] ***
*** starting iteration: 3; err: [Inf, 0.5005000047777376, 0.23493768651320812, 0.21803681037634473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5005000047777376, 0.23493768651320812, 0.21803681037634473, 0.20986575848891104] ***
*** finished computation of 7 references, err: [Inf, 0.5005000047777376, 0.23493768651320812, 0.21803681037634473, 0.20986575848891104] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7439000053456881] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7439000053456881, 0.25141154109529246] ***
*** starting iteration: 2; err: [Inf, 0.7439000053456881, 0.25141154109529246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7439000053456881, 0.25141154109529246, 0.22736641124653503] ***
*** starting iteration: 3; err: [Inf, 0.7439000053456881, 0.25141154109529246, 0.22736641124653503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7439000053456881, 0.25141154109529246, 0.22736641124653503, 0.2232719274908704] ***
*** finished computation of 7 references, err: [Inf, 0.7439000053456881, 0.25141154109529246, 0.22736641124653503, 0.2232719274908704] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 10]]
** centroid: 5, normalized-entropy: 1.0, [(2, 10), (3, 10)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5947000052087995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5947000052087995, 0.2726956205138106] ***
*** starting iteration: 2; err: [Inf, 0.5947000052087995, 0.2726956205138106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5947000052087995, 0.2726956205138106, 0.24509880097631576] ***
*** starting iteration: 3; err: [Inf, 0.5947000052087995, 0.2726956205138106, 0.24509880097631576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5947000052087995, 0.2726956205138106, 0.24509880097631576, 0.23827207864531996] ***
*** finished computation of 7 references, err: [Inf, 0.5947000052087995, 0.2726956205138106, 0.24509880097631576, 0.23827207864531996] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 19, 6]]
** centroid: 6, normalized-entropy: 0.7950402793845225, [(2, 19), (3, 6)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 7, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32382731025757394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32382731025757394, 0.16163757784699406] ***
*** starting iteration: 2; err: [Inf, 0.32382731025757394, 0.16163757784699406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32382731025757394, 0.16163757784699406, 0.14678181450893363] ***
*** starting iteration: 3; err: [Inf, 0.32382731025757394, 0.16163757784699406, 0.14678181450893363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32382731025757394, 0.16163757784699406, 0.14678181450893363, 0.1452289094903957] ***
*** finished computation of 7 references, err: [Inf, 0.32382731025757394, 0.16163757784699406, 0.14678181450893363, 0.1452289094903957] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36829578082894626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36829578082894626, 0.2075009599050168] ***
*** starting iteration: 2; err: [Inf, 0.36829578082894626, 0.2075009599050168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36829578082894626, 0.2075009599050168, 0.20171044524748655] ***
*** starting iteration: 3; err: [Inf, 0.36829578082894626, 0.2075009599050168, 0.20171044524748655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36829578082894626, 0.2075009599050168, 0.20171044524748655, 0.20074253933173247] ***
*** finished computation of 7 references, err: [Inf, 0.36829578082894626, 0.2075009599050168, 0.20171044524748655, 0.20074253933173247] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 26]]
** centroid: 4, normalized-entropy: 0.8224042259549892, [(2, 9), (3, 26)]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37619793801214657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37619793801214657, 0.22468124250945018] ***
*** starting iteration: 2; err: [Inf, 0.37619793801214657, 0.22468124250945018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37619793801214657, 0.22468124250945018, 0.20690242377718582] ***
*** starting iteration: 3; err: [Inf, 0.37619793801214657, 0.22468124250945018, 0.20690242377718582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37619793801214657, 0.22468124250945018, 0.20690242377718582, 0.1974857179969854] ***
*** finished computation of 7 references, err: [Inf, 0.37619793801214657, 0.22468124250945018, 0.20690242377718582, 0.1974857179969854] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 5]]
** centroid: 1, normalized-entropy: 0.6769418697808861, [(2, 23), (3, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 6, 14]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(2, 6), (3, 14)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26413705025621076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26413705025621076, 0.18221850109558926] ***
*** finished computation of 7 references, err: [Inf, 0.26413705025621076, 0.18221850109558926] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 10, 3]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 10), (3, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 6]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4183706132683291] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4183706132683291, 0.20564433857149164] ***
*** finished computation of 7 references, err: [Inf, 0.4183706132683291, 0.20564433857149164] ***
*** center 1: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 12]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 4), (3, 12)]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 7, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34655414791989514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34655414791989514, 0.17635638245210816] ***
*** finished computation of 7 references, err: [Inf, 0.34655414791989514, 0.17635638245210816] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 10, 2]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.6787367065064553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.6787367065064553, 0.7975053121675825] ***
*** finished computation of 7 references, err: [Inf, 2.6787367065064553, 0.7975053121675825] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 8]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(2, 22), (3, 8)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [36, 5, 0]]
** centroid: 5, normalized-entropy: 0.5349436990971067, [(1, 36), (2, 5)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.363124430796147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.363124430796147, 0.29559156560143035] ***
*** finished computation of 7 references, err: [Inf, 1.363124430796147, 0.29559156560143035] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 24, 2]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 24), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 3]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 15), (3, 3)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [30, 1, 0]]
** centroid: 3, normalized-entropy: 0.2055925081850832, [(1, 30), (2, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 1, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2791016808626605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2791016808626605, 0.18327528442047583] ***
*** starting iteration: 2; err: [Inf, 0.2791016808626605, 0.18327528442047583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2791016808626605, 0.18327528442047583, 0.1676708786384152] ***
*** starting iteration: 3; err: [Inf, 0.2791016808626605, 0.18327528442047583, 0.1676708786384152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2791016808626605, 0.18327528442047583, 0.1676708786384152, 0.1647054649575427] ***
*** finished computation of 7 references, err: [Inf, 0.2791016808626605, 0.18327528442047583, 0.1676708786384152, 0.1647054649575427] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 2, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.3773533082944422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.3773533082944422, 0.23147785307351676] ***
*** starting iteration: 2; err: [Inf, 2.3773533082944422, 0.23147785307351676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.3773533082944422, 0.23147785307351676, 0.18472833042798043] ***
*** starting iteration: 3; err: [Inf, 2.3773533082944422, 0.23147785307351676, 0.18472833042798043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.3773533082944422, 0.23147785307351676, 0.18472833042798043, 0.18307933519156822] ***
*** finished computation of 7 references, err: [Inf, 2.3773533082944422, 0.23147785307351676, 0.18472833042798043, 0.18307933519156822] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 10]]
** centroid: 1, normalized-entropy: 0.9774178175281716, [(2, 7), (3, 10)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 1]]
** centroid: 6, normalized-entropy: 1.0, [(2, 1), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32227182779144586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32227182779144586, 0.20545236325546604] ***
*** starting iteration: 2; err: [Inf, 0.32227182779144586, 0.20545236325546604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32227182779144586, 0.20545236325546604, 0.19760111057640098] ***
*** starting iteration: 3; err: [Inf, 0.32227182779144586, 0.20545236325546604, 0.19760111057640098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32227182779144586, 0.20545236325546604, 0.19760111057640098, 0.1961528718253165] ***
*** finished computation of 7 references, err: [Inf, 0.32227182779144586, 0.20545236325546604, 0.19760111057640098, 0.1961528718253165] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 2, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 11]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 1), (3, 11)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 7, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5699999980749397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5699999980749397, 0.29075463966166526] ***
*** starting iteration: 2; err: [Inf, 0.5699999980749397, 0.29075463966166526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149] ***
*** starting iteration: 3; err: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149, 0.2656784784808332] ***
*** starting iteration: 4; err: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149, 0.2656784784808332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149, 0.2656784784808332, 0.25767744816388033] ***
*** starting iteration: 5; err: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149, 0.2656784784808332, 0.25767744816388033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149, 0.2656784784808332, 0.25767744816388033, 0.2560367844653822] ***
*** starting iteration: 6; err: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149, 0.2656784784808332, 0.25767744816388033, 0.2560367844653822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149, 0.2656784784808332, 0.25767744816388033, 0.2560367844653822, 0.2533265982741455] ***
*** starting iteration: 7; err: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149, 0.2656784784808332, 0.25767744816388033, 0.2560367844653822, 0.2533265982741455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149, 0.2656784784808332, 0.25767744816388033, 0.2560367844653822, 0.2533265982741455, 0.25219006469067035] ***
*** starting iteration: 8; err: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149, 0.2656784784808332, 0.25767744816388033, 0.2560367844653822, 0.2533265982741455, 0.25219006469067035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149, 0.2656784784808332, 0.25767744816388033, 0.2560367844653822, 0.2533265982741455, 0.25219006469067035, 0.2509909004284316] ***
*** starting iteration: 9; err: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149, 0.2656784784808332, 0.25767744816388033, 0.2560367844653822, 0.2533265982741455, 0.25219006469067035, 0.2509909004284316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149, 0.2656784784808332, 0.25767744816388033, 0.2560367844653822, 0.2533265982741455, 0.25219006469067035, 0.2509909004284316, 0.2502354815500904] ***
*** finished computation of 7 references, err: [Inf, 0.5699999980749397, 0.29075463966166526, 0.2762916626696149, 0.2656784784808332, 0.25767744816388033, 0.2560367844653822, 0.2533265982741455, 0.25219006469067035, 0.2509909004284316, 0.2502354815500904] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 6.540100000159207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.540100000159207, 1.90997830818461] ***
*** starting iteration: 2; err: [Inf, 6.540100000159207, 1.90997830818461] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.540100000159207, 1.90997830818461, 0.8288613396560955] ***
*** starting iteration: 3; err: [Inf, 6.540100000159207, 1.90997830818461, 0.8288613396560955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.540100000159207, 1.90997830818461, 0.8288613396560955, 0.35165871241124] ***
*** starting iteration: 4; err: [Inf, 6.540100000159207, 1.90997830818461, 0.8288613396560955, 0.35165871241124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.540100000159207, 1.90997830818461, 0.8288613396560955, 0.35165871241124, 0.3070654523683158] ***
*** starting iteration: 5; err: [Inf, 6.540100000159207, 1.90997830818461, 0.8288613396560955, 0.35165871241124, 0.3070654523683158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.540100000159207, 1.90997830818461, 0.8288613396560955, 0.35165871241124, 0.3070654523683158, 0.28220498189863447] ***
*** starting iteration: 6; err: [Inf, 6.540100000159207, 1.90997830818461, 0.8288613396560955, 0.35165871241124, 0.3070654523683158, 0.28220498189863447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.540100000159207, 1.90997830818461, 0.8288613396560955, 0.35165871241124, 0.3070654523683158, 0.28220498189863447, 0.2689302295995857] ***
*** starting iteration: 7; err: [Inf, 6.540100000159207, 1.90997830818461, 0.8288613396560955, 0.35165871241124, 0.3070654523683158, 0.28220498189863447, 0.2689302295995857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.540100000159207, 1.90997830818461, 0.8288613396560955, 0.35165871241124, 0.3070654523683158, 0.28220498189863447, 0.2689302295995857, 0.2647790402965822] ***
*** starting iteration: 8; err: [Inf, 6.540100000159207, 1.90997830818461, 0.8288613396560955, 0.35165871241124, 0.3070654523683158, 0.28220498189863447, 0.2689302295995857, 0.2647790402965822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.540100000159207, 1.90997830818461, 0.8288613396560955, 0.35165871241124, 0.3070654523683158, 0.28220498189863447, 0.2689302295995857, 0.2647790402965822, 0.2647790402965822] ***
*** finished computation of 7 references, err: [Inf, 6.540100000159207, 1.90997830818461, 0.8288613396560955, 0.35165871241124, 0.3070654523683158, 0.28220498189863447, 0.2689302295995857, 0.2647790402965822, 0.2647790402965822] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 10]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6605000065032652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6605000065032652, 0.3308021081345055] ***
*** starting iteration: 2; err: [Inf, 0.6605000065032652, 0.3308021081345055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6605000065032652, 0.3308021081345055, 0.2759239511478182] ***
*** starting iteration: 3; err: [Inf, 0.6605000065032652, 0.3308021081345055, 0.2759239511478182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6605000065032652, 0.3308021081345055, 0.2759239511478182, 0.2634083638511716] ***
*** starting iteration: 4; err: [Inf, 0.6605000065032652, 0.3308021081345055, 0.2759239511478182, 0.2634083638511716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6605000065032652, 0.3308021081345055, 0.2759239511478182, 0.2634083638511716, 0.2569141855010441] ***
*** starting iteration: 5; err: [Inf, 0.6605000065032652, 0.3308021081345055, 0.2759239511478182, 0.2634083638511716, 0.2569141855010441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6605000065032652, 0.3308021081345055, 0.2759239511478182, 0.2634083638511716, 0.2569141855010441, 0.25609664346292305] ***
*** finished computation of 7 references, err: [Inf, 0.6605000065032652, 0.3308021081345055, 0.2759239511478182, 0.2634083638511716, 0.2569141855010441, 0.25609664346292305] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9040103157933376] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9040103157933376, 0.35764358554691605] ***
*** starting iteration: 2; err: [Inf, 0.9040103157933376, 0.35764358554691605] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9040103157933376, 0.35764358554691605, 0.35586217660634567] ***
*** starting iteration: 3; err: [Inf, 0.9040103157933376, 0.35764358554691605, 0.35586217660634567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9040103157933376, 0.35764358554691605, 0.35586217660634567, 0.35586217660634567] ***
*** finished computation of 3 references, err: [Inf, 0.9040103157933376, 0.35764358554691605, 0.35586217660634567, 0.35586217660634567] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 2, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.9331693008949946] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9331693008949946, 0.5436018662929952] ***
*** starting iteration: 2; err: [Inf, 1.9331693008949946, 0.5436018662929952] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9331693008949946, 0.5436018662929952, 0.42761077444256484] ***
*** starting iteration: 3; err: [Inf, 1.9331693008949946, 0.5436018662929952, 0.42761077444256484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9331693008949946, 0.5436018662929952, 0.42761077444256484, 0.40450321808884043] ***
*** starting iteration: 4; err: [Inf, 1.9331693008949946, 0.5436018662929952, 0.42761077444256484, 0.40450321808884043] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9331693008949946, 0.5436018662929952, 0.42761077444256484, 0.40450321808884043, 0.3881947142302296] ***
*** starting iteration: 5; err: [Inf, 1.9331693008949946, 0.5436018662929952, 0.42761077444256484, 0.40450321808884043, 0.3881947142302296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9331693008949946, 0.5436018662929952, 0.42761077444256484, 0.40450321808884043, 0.3881947142302296, 0.37063427965473394] ***
*** starting iteration: 6; err: [Inf, 1.9331693008949946, 0.5436018662929952, 0.42761077444256484, 0.40450321808884043, 0.3881947142302296, 0.37063427965473394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9331693008949946, 0.5436018662929952, 0.42761077444256484, 0.40450321808884043, 0.3881947142302296, 0.37063427965473394, 0.3637461312961139] ***
*** starting iteration: 7; err: [Inf, 1.9331693008949946, 0.5436018662929952, 0.42761077444256484, 0.40450321808884043, 0.3881947142302296, 0.37063427965473394, 0.3637461312961139] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9331693008949946, 0.5436018662929952, 0.42761077444256484, 0.40450321808884043, 0.3881947142302296, 0.37063427965473394, 0.3637461312961139, 0.35858639456475366] ***
*** starting iteration: 8; err: [Inf, 1.9331693008949946, 0.5436018662929952, 0.42761077444256484, 0.40450321808884043, 0.3881947142302296, 0.37063427965473394, 0.3637461312961139, 0.35858639456475366] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9331693008949946, 0.5436018662929952, 0.42761077444256484, 0.40450321808884043, 0.3881947142302296, 0.37063427965473394, 0.3637461312961139, 0.35858639456475366, 0.3581666830152885] ***
*** finished computation of 3 references, err: [Inf, 1.9331693008949946, 0.5436018662929952, 0.42761077444256484, 0.40450321808884043, 0.3881947142302296, 0.37063427965473394, 0.3637461312961139, 0.35858639456475366, 0.3581666830152885] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 10]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 25), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.902486846459666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.902486846459666, 0.6753507404504715] ***
*** starting iteration: 2; err: [Inf, 0.902486846459666, 0.6753507404504715] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.902486846459666, 0.6753507404504715, 0.6707110204925979] ***
*** starting iteration: 3; err: [Inf, 0.902486846459666, 0.6753507404504715, 0.6707110204925979] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.902486846459666, 0.6753507404504715, 0.6707110204925979, 0.6705740949335233] ***
*** finished computation of 3 references, err: [Inf, 0.902486846459666, 0.6753507404504715, 0.6707110204925979, 0.6705740949335233] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [10, 3, 0]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(1, 10), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 38, 29]]
** centroid: 2, normalized-entropy: 0.9869444983748495, [(2, 38), (3, 29)]
*** center 3: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7334000020570618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7334000020570618, 0.28573498229283667] ***
*** starting iteration: 2; err: [Inf, 0.7334000020570618, 0.28573498229283667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7334000020570618, 0.28573498229283667, 0.2586316041460823] ***
*** starting iteration: 3; err: [Inf, 0.7334000020570618, 0.28573498229283667, 0.2586316041460823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7334000020570618, 0.28573498229283667, 0.2586316041460823, 0.25285215791044685] ***
*** starting iteration: 4; err: [Inf, 0.7334000020570618, 0.28573498229283667, 0.2586316041460823, 0.25285215791044685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7334000020570618, 0.28573498229283667, 0.2586316041460823, 0.25285215791044685, 0.2510754570953559] ***
*** starting iteration: 5; err: [Inf, 0.7334000020570618, 0.28573498229283667, 0.2586316041460823, 0.25285215791044685, 0.2510754570953559] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7334000020570618, 0.28573498229283667, 0.2586316041460823, 0.25285215791044685, 0.2510754570953559, 0.2502245413482169] ***
*** finished computation of 7 references, err: [Inf, 0.7334000020570618, 0.28573498229283667, 0.2586316041460823, 0.25285215791044685, 0.2510754570953559, 0.2502245413482169] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 6, 6]]
** centroid: 5, normalized-entropy: 1.0, [(2, 6), (3, 6)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0711000063917195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0711000063917195, 0.4752376296133292] ***
*** starting iteration: 2; err: [Inf, 1.0711000063917195, 0.4752376296133292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0711000063917195, 0.4752376296133292, 0.4205721668186069] ***
*** starting iteration: 3; err: [Inf, 1.0711000063917195, 0.4752376296133292, 0.4205721668186069] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0711000063917195, 0.4752376296133292, 0.4205721668186069, 0.3535877984765871] ***
*** starting iteration: 4; err: [Inf, 1.0711000063917195, 0.4752376296133292, 0.4205721668186069, 0.3535877984765871] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0711000063917195, 0.4752376296133292, 0.4205721668186069, 0.3535877984765871, 0.3254529300134347] ***
*** starting iteration: 5; err: [Inf, 1.0711000063917195, 0.4752376296133292, 0.4205721668186069, 0.3535877984765871, 0.3254529300134347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0711000063917195, 0.4752376296133292, 0.4205721668186069, 0.3535877984765871, 0.3254529300134347, 0.30685021211704394] ***
*** starting iteration: 6; err: [Inf, 1.0711000063917195, 0.4752376296133292, 0.4205721668186069, 0.3535877984765871, 0.3254529300134347, 0.30685021211704394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0711000063917195, 0.4752376296133292, 0.4205721668186069, 0.3535877984765871, 0.3254529300134347, 0.30685021211704394, 0.30615513615118767] ***
*** finished computation of 7 references, err: [Inf, 1.0711000063917195, 0.4752376296133292, 0.4205721668186069, 0.3535877984765871, 0.3254529300134347, 0.30685021211704394, 0.30615513615118767] ***
*** center 1: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 12]]
** centroid: 2, normalized-entropy: 1.0, [(2, 12), (3, 12)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9571999867298189] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9571999867298189, 0.31361545930743445] ***
*** starting iteration: 2; err: [Inf, 0.9571999867298189, 0.31361545930743445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9571999867298189, 0.31361545930743445, 0.2763317725816458] ***
*** starting iteration: 3; err: [Inf, 0.9571999867298189, 0.31361545930743445, 0.2763317725816458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9571999867298189, 0.31361545930743445, 0.2763317725816458, 0.27017508166796916] ***
*** starting iteration: 4; err: [Inf, 0.9571999867298189, 0.31361545930743445, 0.2763317725816458, 0.27017508166796916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9571999867298189, 0.31361545930743445, 0.2763317725816458, 0.27017508166796916, 0.2655453873640335] ***
*** starting iteration: 5; err: [Inf, 0.9571999867298189, 0.31361545930743445, 0.2763317725816458, 0.27017508166796916, 0.2655453873640335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9571999867298189, 0.31361545930743445, 0.2763317725816458, 0.27017508166796916, 0.2655453873640335, 0.2601727949381404] ***
*** starting iteration: 6; err: [Inf, 0.9571999867298189, 0.31361545930743445, 0.2763317725816458, 0.27017508166796916, 0.2655453873640335, 0.2601727949381404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9571999867298189, 0.31361545930743445, 0.2763317725816458, 0.27017508166796916, 0.2655453873640335, 0.2601727949381404, 0.25878466947093526] ***
*** starting iteration: 7; err: [Inf, 0.9571999867298189, 0.31361545930743445, 0.2763317725816458, 0.27017508166796916, 0.2655453873640335, 0.2601727949381404, 0.25878466947093526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9571999867298189, 0.31361545930743445, 0.2763317725816458, 0.27017508166796916, 0.2655453873640335, 0.2601727949381404, 0.25878466947093526, 0.25878466947093526] ***
*** finished computation of 7 references, err: [Inf, 0.9571999867298189, 0.31361545930743445, 0.2763317725816458, 0.27017508166796916, 0.2655453873640335, 0.2601727949381404, 0.25878466947093526, 0.25878466947093526] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 5]]
** centroid: 4, normalized-entropy: 0.7553754125614286, [(2, 18), (3, 5)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 4, 5]]
** centroid: 6, normalized-entropy: 0.9910760598382222, [(2, 4), (3, 5)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.3673000129791189] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3673000129791189, 0.5775828450694666] ***
*** starting iteration: 2; err: [Inf, 1.3673000129791189, 0.5775828450694666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137] ***
*** starting iteration: 3; err: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137, 0.5549440096734822] ***
*** starting iteration: 4; err: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137, 0.5549440096734822] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137, 0.5549440096734822, 0.547857353227788] ***
*** starting iteration: 5; err: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137, 0.5549440096734822, 0.547857353227788] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137, 0.5549440096734822, 0.547857353227788, 0.5382796151009931] ***
*** starting iteration: 6; err: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137, 0.5549440096734822, 0.547857353227788, 0.5382796151009931] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137, 0.5549440096734822, 0.547857353227788, 0.5382796151009931, 0.528011157397462] ***
*** starting iteration: 7; err: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137, 0.5549440096734822, 0.547857353227788, 0.5382796151009931, 0.528011157397462] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137, 0.5549440096734822, 0.547857353227788, 0.5382796151009931, 0.528011157397462, 0.5190911337579842] ***
*** starting iteration: 8; err: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137, 0.5549440096734822, 0.547857353227788, 0.5382796151009931, 0.528011157397462, 0.5190911337579842] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137, 0.5549440096734822, 0.547857353227788, 0.5382796151009931, 0.528011157397462, 0.5190911337579842, 0.5134090642469896] ***
*** starting iteration: 9; err: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137, 0.5549440096734822, 0.547857353227788, 0.5382796151009931, 0.528011157397462, 0.5190911337579842, 0.5134090642469896] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137, 0.5549440096734822, 0.547857353227788, 0.5382796151009931, 0.528011157397462, 0.5190911337579842, 0.5134090642469896, 0.5124756277984305] ***
*** finished computation of 3 references, err: [Inf, 1.3673000129791189, 0.5775828450694666, 0.5624468058374137, 0.5549440096734822, 0.547857353227788, 0.5382796151009931, 0.528011157397462, 0.5190911337579842, 0.5134090642469896, 0.5124756277984305] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7322000065091917] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7322000065091917, 0.56266068932731] ***
*** starting iteration: 2; err: [Inf, 0.7322000065091917, 0.56266068932731] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7322000065091917, 0.56266068932731, 0.5588612041840313] ***
*** starting iteration: 3; err: [Inf, 0.7322000065091917, 0.56266068932731, 0.5588612041840313] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7322000065091917, 0.56266068932731, 0.5588612041840313, 0.553746539961717] ***
*** starting iteration: 4; err: [Inf, 0.7322000065091917, 0.56266068932731, 0.5588612041840313, 0.553746539961717] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7322000065091917, 0.56266068932731, 0.5588612041840313, 0.553746539961717, 0.5386426511645674] ***
*** starting iteration: 5; err: [Inf, 0.7322000065091917, 0.56266068932731, 0.5588612041840313, 0.553746539961717, 0.5386426511645674] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7322000065091917, 0.56266068932731, 0.5588612041840313, 0.553746539961717, 0.5386426511645674, 0.5234831207766668] ***
*** starting iteration: 6; err: [Inf, 0.7322000065091917, 0.56266068932731, 0.5588612041840313, 0.553746539961717, 0.5386426511645674, 0.5234831207766668] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7322000065091917, 0.56266068932731, 0.5588612041840313, 0.553746539961717, 0.5386426511645674, 0.5234831207766668, 0.5160286814889673] ***
*** starting iteration: 7; err: [Inf, 0.7322000065091917, 0.56266068932731, 0.5588612041840313, 0.553746539961717, 0.5386426511645674, 0.5234831207766668, 0.5160286814889673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7322000065091917, 0.56266068932731, 0.5588612041840313, 0.553746539961717, 0.5386426511645674, 0.5234831207766668, 0.5160286814889673, 0.5132796471377259] ***
*** starting iteration: 8; err: [Inf, 0.7322000065091917, 0.56266068932731, 0.5588612041840313, 0.553746539961717, 0.5386426511645674, 0.5234831207766668, 0.5160286814889673, 0.5132796471377259] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7322000065091917, 0.56266068932731, 0.5588612041840313, 0.553746539961717, 0.5386426511645674, 0.5234831207766668, 0.5160286814889673, 0.5132796471377259, 0.5132796471377259] ***
*** finished computation of 3 references, err: [Inf, 0.7322000065091917, 0.56266068932731, 0.5588612041840313, 0.553746539961717, 0.5386426511645674, 0.5234831207766668, 0.5160286814889673, 0.5132796471377259, 0.5132796471377259] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 10]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 25), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 10.070799993257264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.070799993257264, 1.0557013006642635] ***
*** starting iteration: 2; err: [Inf, 10.070799993257264, 1.0557013006642635] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137] ***
*** starting iteration: 3; err: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449] ***
*** starting iteration: 4; err: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449, 0.9961293371094126] ***
*** starting iteration: 5; err: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449, 0.9961293371094126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449, 0.9961293371094126, 0.984154630981656] ***
*** starting iteration: 6; err: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449, 0.9961293371094126, 0.984154630981656] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449, 0.9961293371094126, 0.984154630981656, 0.9782520065726193] ***
*** starting iteration: 7; err: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449, 0.9961293371094126, 0.984154630981656, 0.9782520065726193] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449, 0.9961293371094126, 0.984154630981656, 0.9782520065726193, 0.9559467624594055] ***
*** starting iteration: 8; err: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449, 0.9961293371094126, 0.984154630981656, 0.9782520065726193, 0.9559467624594055] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449, 0.9961293371094126, 0.984154630981656, 0.9782520065726193, 0.9559467624594055, 0.8485980653680235] ***
*** starting iteration: 9; err: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449, 0.9961293371094126, 0.984154630981656, 0.9782520065726193, 0.9559467624594055, 0.8485980653680235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449, 0.9961293371094126, 0.984154630981656, 0.9782520065726193, 0.9559467624594055, 0.8485980653680235, 0.6819777543046872] ***
*** starting iteration: 10; err: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449, 0.9961293371094126, 0.984154630981656, 0.9782520065726193, 0.9559467624594055, 0.8485980653680235, 0.6819777543046872] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449, 0.9961293371094126, 0.984154630981656, 0.9782520065726193, 0.9559467624594055, 0.8485980653680235, 0.6819777543046872, 0.6015675587461307] ***
*** finished computation of 3 references, err: [Inf, 10.070799993257264, 1.0557013006642635, 1.0134312327441137, 0.999456427908449, 0.9961293371094126, 0.984154630981656, 0.9782520065726193, 0.9559467624594055, 0.8485980653680235, 0.6819777543046872, 0.6015675587461307] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 24, 1]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(2, 24), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 28]]
** centroid: 2, normalized-entropy: 0.9564574047992596, [(2, 17), (3, 28)]
*** center 3: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.5623000125538895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5623000125538895, 0.7685368911028457] ***
*** starting iteration: 2; err: [Inf, 2.5623000125538895, 0.7685368911028457] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5623000125538895, 0.7685368911028457, 0.6243800570900941] ***
*** starting iteration: 3; err: [Inf, 2.5623000125538895, 0.7685368911028457, 0.6243800570900941] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5623000125538895, 0.7685368911028457, 0.6243800570900941, 0.5684815061072532] ***
*** finished computation of 3 references, err: [Inf, 2.5623000125538895, 0.7685368911028457, 0.6243800570900941, 0.5684815061072532] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 34]]
** centroid: 1, normalized-entropy: 0.7401470427139037, [(2, 9), (3, 34)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8455000033786508] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8455000033786508, 0.520269862777088] ***
*** starting iteration: 2; err: [Inf, 0.8455000033786508, 0.520269862777088] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8455000033786508, 0.520269862777088, 0.5141523453954643] ***
*** starting iteration: 3; err: [Inf, 0.8455000033786508, 0.520269862777088, 0.5141523453954643] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8455000033786508, 0.520269862777088, 0.5141523453954643, 0.5132796471377259] ***
*** finished computation of 3 references, err: [Inf, 0.8455000033786508, 0.520269862777088, 0.5141523453954643, 0.5132796471377259] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 25, 10]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 25), (3, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8236000093816671] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8236000093816671, 0.5378324460942497] ***
*** starting iteration: 2; err: [Inf, 0.8236000093816671, 0.5378324460942497] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8236000093816671, 0.5378324460942497, 0.5378324460942497] ***
*** finished computation of 3 references, err: [Inf, 0.8236000093816671, 0.5378324460942497, 0.5378324460942497] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 22]]
** centroid: 1, normalized-entropy: 0.5293608652873645, [(2, 3), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 38, 7]]
** centroid: 3, normalized-entropy: 0.6235702082127973, [(2, 38), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.091299998870703] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.091299998870703, 0.6602786520532635] ***
*** finished computation of 3 references, err: [Inf, 1.091299998870703, 0.6602786520532635] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 24]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(2, 32), (3, 24)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7144000034303437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7144000034303437, 0.56266068932731] ***
*** finished computation of 3 references, err: [Inf, 0.7144000034303437, 0.56266068932731] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 36]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 8), (3, 36)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7018000130924325] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7018000130924325, 0.735916396775807] ***
*** finished computation of 3 references, err: [Inf, 1.7018000130924325, 0.735916396775807] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 11]]
** centroid: 1, normalized-entropy: 0.7682814090975241, [(2, 38), (3, 11)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [30, 3, 0]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(1, 30), (2, 3)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6649926816724995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6649926816724995, 0.358663642389433] ***
*** starting iteration: 2; err: [Inf, 0.6649926816724995, 0.358663642389433] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6649926816724995, 0.358663642389433, 0.35586217660634567] ***
*** starting iteration: 3; err: [Inf, 0.6649926816724995, 0.358663642389433, 0.35586217660634567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6649926816724995, 0.358663642389433, 0.35586217660634567, 0.35586217660634567] ***
*** finished computation of 3 references, err: [Inf, 0.6649926816724995, 0.358663642389433, 0.35586217660634567, 0.35586217660634567] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 2, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.265909724040994] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.265909724040994, 0.3791022798939303] ***
*** starting iteration: 2; err: [Inf, 2.265909724040994, 0.3791022798939303] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.265909724040994, 0.3791022798939303, 0.368269421829307] ***
*** starting iteration: 3; err: [Inf, 2.265909724040994, 0.3791022798939303, 0.368269421829307] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.265909724040994, 0.3791022798939303, 0.368269421829307, 0.36294654018657374] ***
*** starting iteration: 4; err: [Inf, 2.265909724040994, 0.3791022798939303, 0.368269421829307, 0.36294654018657374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.265909724040994, 0.3791022798939303, 0.368269421829307, 0.36294654018657374, 0.3593485667191934] ***
*** starting iteration: 5; err: [Inf, 2.265909724040994, 0.3791022798939303, 0.368269421829307, 0.36294654018657374, 0.3593485667191934] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.265909724040994, 0.3791022798939303, 0.368269421829307, 0.36294654018657374, 0.3593485667191934, 0.3581666830152885] ***
*** starting iteration: 6; err: [Inf, 2.265909724040994, 0.3791022798939303, 0.368269421829307, 0.36294654018657374, 0.3593485667191934, 0.3581666830152885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.265909724040994, 0.3791022798939303, 0.368269421829307, 0.36294654018657374, 0.3593485667191934, 0.3581666830152885, 0.3581666830152885] ***
*** finished computation of 3 references, err: [Inf, 2.265909724040994, 0.3791022798939303, 0.368269421829307, 0.36294654018657374, 0.3593485667191934, 0.3581666830152885, 0.3581666830152885] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 10]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 25), (3, 10)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.449817128309566] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.449817128309566, 0.7014931817043072] ***
*** starting iteration: 2; err: [Inf, 1.449817128309566, 0.7014931817043072] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.449817128309566, 0.7014931817043072, 0.6842785436013719] ***
*** starting iteration: 3; err: [Inf, 1.449817128309566, 0.7014931817043072, 0.6842785436013719] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.449817128309566, 0.7014931817043072, 0.6842785436013719, 0.6781686731567207] ***
*** starting iteration: 4; err: [Inf, 1.449817128309566, 0.7014931817043072, 0.6842785436013719, 0.6781686731567207] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.449817128309566, 0.7014931817043072, 0.6842785436013719, 0.6781686731567207, 0.6751439674134211] ***
*** starting iteration: 5; err: [Inf, 1.449817128309566, 0.7014931817043072, 0.6842785436013719, 0.6781686731567207, 0.6751439674134211] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.449817128309566, 0.7014931817043072, 0.6842785436013719, 0.6781686731567207, 0.6751439674134211, 0.6734636476825817] ***
*** starting iteration: 6; err: [Inf, 1.449817128309566, 0.7014931817043072, 0.6842785436013719, 0.6781686731567207, 0.6751439674134211, 0.6734636476825817] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.449817128309566, 0.7014931817043072, 0.6842785436013719, 0.6781686731567207, 0.6751439674134211, 0.6734636476825817, 0.6718442886602233] ***
*** starting iteration: 7; err: [Inf, 1.449817128309566, 0.7014931817043072, 0.6842785436013719, 0.6781686731567207, 0.6751439674134211, 0.6734636476825817, 0.6718442886602233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.449817128309566, 0.7014931817043072, 0.6842785436013719, 0.6781686731567207, 0.6751439674134211, 0.6734636476825817, 0.6718442886602233, 0.6707110204925979] ***
*** starting iteration: 8; err: [Inf, 1.449817128309566, 0.7014931817043072, 0.6842785436013719, 0.6781686731567207, 0.6751439674134211, 0.6734636476825817, 0.6718442886602233, 0.6707110204925979] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.449817128309566, 0.7014931817043072, 0.6842785436013719, 0.6781686731567207, 0.6751439674134211, 0.6734636476825817, 0.6718442886602233, 0.6707110204925979, 0.6705740949335233] ***
*** finished computation of 3 references, err: [Inf, 1.449817128309566, 0.7014931817043072, 0.6842785436013719, 0.6781686731567207, 0.6751439674134211, 0.6734636476825817, 0.6718442886602233, 0.6707110204925979, 0.6705740949335233] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 29]]
** centroid: 1, normalized-entropy: 0.9869444983748495, [(2, 38), (3, 29)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [10, 3, 0]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(1, 10), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4565037611764694] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4565037611764694, 0.3725989944552656] ***
*** starting iteration: 2; err: [Inf, 0.4565037611764694, 0.3725989944552656] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4565037611764694, 0.3725989944552656, 0.3674486011813895] ***
*** starting iteration: 3; err: [Inf, 0.4565037611764694, 0.3725989944552656, 0.3674486011813895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4565037611764694, 0.3725989944552656, 0.3674486011813895, 0.3610597027496809] ***
*** finished computation of 3 references, err: [Inf, 0.4565037611764694, 0.3725989944552656, 0.3674486011813895, 0.3610597027496809] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 8]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.228303720253628] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.228303720253628, 1.6488428527423786] ***
*** starting iteration: 2; err: [Inf, 4.228303720253628, 1.6488428527423786] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.228303720253628, 1.6488428527423786, 0.7079858219580336] ***
*** starting iteration: 3; err: [Inf, 4.228303720253628, 1.6488428527423786, 0.7079858219580336] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.228303720253628, 1.6488428527423786, 0.7079858219580336, 0.4317673605247176] ***
*** finished computation of 3 references, err: [Inf, 4.228303720253628, 1.6488428527423786, 0.7079858219580336, 0.4317673605247176] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 26, 23]]
** centroid: 2, normalized-entropy: 0.9972943816462351, [(2, 26), (3, 23)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7809422487181343] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7809422487181343, 0.40828182625802767] ***
*** starting iteration: 2; err: [Inf, 1.7809422487181343, 0.40828182625802767] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7809422487181343, 0.40828182625802767, 0.3834963311806648] ***
*** starting iteration: 3; err: [Inf, 1.7809422487181343, 0.40828182625802767, 0.3834963311806648] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7809422487181343, 0.40828182625802767, 0.3834963311806648, 0.379596624935447] ***
*** finished computation of 3 references, err: [Inf, 1.7809422487181343, 0.40828182625802767, 0.3834963311806648, 0.379596624935447] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 32, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 9, 28]]
** centroid: 3, normalized-entropy: 0.8003922080453356, [(2, 9), (3, 28)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6596999975231033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6596999975231033, 0.38403258650701494] ***
*** finished computation of 7 references, err: [Inf, 0.6596999975231033, 0.38403258650701494] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 8]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 18, 3]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(2, 18), (3, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5916000021602352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5916000021602352, 0.45495629484513617] ***
*** finished computation of 7 references, err: [Inf, 0.5916000021602352, 0.45495629484513617] ***
*** center 1: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 10]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 25), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4263000022581987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4263000022581987, 0.29335885145010093] ***
*** finished computation of 7 references, err: [Inf, 0.4263000022581987, 0.29335885145010093] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 2]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 5), (3, 2)]
*** center 4: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 5, 7]]
** centroid: 5, normalized-entropy: 0.9798687566511527, [(2, 5), (3, 7)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 7, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1637000106125766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1637000106125766, 0.568780255564252] ***
*** finished computation of 3 references, err: [Inf, 1.1637000106125766, 0.568780255564252] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 18]]
** centroid: 1, normalized-entropy: 0.9426831892554921, [(2, 32), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9967000032711815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9967000032711815, 0.6089725803589459] ***
*** finished computation of 3 references, err: [Inf, 0.9967000032711815, 0.6089725803589459] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 21]]
** centroid: 1, normalized-entropy: 0.9918207974218425, [(2, 26), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1090999938360533] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1090999938360533, 0.5683901271734217] ***
*** finished computation of 3 references, err: [Inf, 1.1090999938360533, 0.5683901271734217] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 41, 9]]
** centroid: 1, normalized-entropy: 0.6800770457282798, [(2, 41), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.27601433166202816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27601433166202816, 0.17082717982594084] ***
*** finished computation of 7 references, err: [Inf, 0.27601433166202816, 0.17082717982594084] ***
*** center 1: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 15]]
** centroid: 7, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.464430232120253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.464430232120253, 0.1953130464990317] ***
*** finished computation of 7 references, err: [Inf, 0.464430232120253, 0.1953130464990317] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 9]]
** centroid: 1, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 17]]
** centroid: 6, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41438078438393433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41438078438393433, 0.20851094619696509] ***
*** finished computation of 7 references, err: [Inf, 0.41438078438393433, 0.20851094619696509] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 23, 3]]
** centroid: 1, normalized-entropy: 0.5159469300074472, [(2, 23), (3, 3)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 4, 17]]
** centroid: 4, normalized-entropy: 0.7024665512903904, [(2, 4), (3, 17)]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 7, 3]]
** centroid: 7, normalized-entropy: 0.8812908992306927, [(2, 7), (3, 3)]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.88, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.96
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.5498000089139616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5498000089139616, 0.2418436289995318] ***
*** finished computation of 7 references, err: [Inf, 0.5498000089139616, 0.2418436289995318] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 14, 5]]
** centroid: 6, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5517000045628242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5517000045628242, 0.27743181567207464] ***
*** finished computation of 7 references, err: [Inf, 0.5517000045628242, 0.27743181567207464] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 24]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 4), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6404999990070774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6404999990070774, 0.2650532113038739] ***
*** finished computation of 7 references, err: [Inf, 0.6404999990070774, 0.2650532113038739] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 2]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 19, 5]]
** centroid: 4, normalized-entropy: 0.7382848661434506, [(2, 19), (3, 5)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.88, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.96
finished with 17
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.88, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.96
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.3709536760587412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3709536760587412, 0.16768672431778395] ***
*** starting iteration: 2; err: [Inf, 0.3709536760587412, 0.16768672431778395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3709536760587412, 0.16768672431778395, 0.15560575762654671] ***
*** starting iteration: 3; err: [Inf, 0.3709536760587412, 0.16768672431778395, 0.15560575762654671] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3709536760587412, 0.16768672431778395, 0.15560575762654671, 0.15267256788528885] ***
*** finished computation of 7 references, err: [Inf, 0.3709536760587412, 0.16768672431778395, 0.15560575762654671, 0.15267256788528885] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 4]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 8, 6]]
** centroid: 7, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4805961296006986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4805961296006986, 0.1837447585535372] ***
*** starting iteration: 2; err: [Inf, 0.4805961296006986, 0.1837447585535372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4805961296006986, 0.1837447585535372, 0.1589071272789344] ***
*** starting iteration: 3; err: [Inf, 0.4805961296006986, 0.1837447585535372, 0.1589071272789344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4805961296006986, 0.1837447585535372, 0.1589071272789344, 0.15673152820189734] ***
*** finished computation of 7 references, err: [Inf, 0.4805961296006986, 0.1837447585535372, 0.1589071272789344, 0.15673152820189734] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 10]]
** centroid: 4, normalized-entropy: 1.0, [(2, 10), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4805297309885428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4805297309885428, 0.1785540606328403] ***
*** starting iteration: 2; err: [Inf, 0.4805297309885428, 0.1785540606328403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4805297309885428, 0.1785540606328403, 0.16791075866899915] ***
*** starting iteration: 3; err: [Inf, 0.4805297309885428, 0.1785540606328403, 0.16791075866899915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4805297309885428, 0.1785540606328403, 0.16791075866899915, 0.1646981350492039] ***
*** finished computation of 7 references, err: [Inf, 0.4805297309885428, 0.1785540606328403, 0.16791075866899915, 0.1646981350492039] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 6]]
** centroid: 4, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.88, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.96
finished with 18
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.88, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.96
finished with 19
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.3109758783917294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3109758783917294, 0.18511430965883005] ***
*** finished computation of 7 references, err: [Inf, 0.3109758783917294, 0.18511430965883005] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 7: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40154953134951676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40154953134951676, 0.29992770107091926] ***
*** finished computation of 7 references, err: [Inf, 0.40154953134951676, 0.29992770107091926] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 12]]
** centroid: 3, normalized-entropy: 0.9090221560878149, [(2, 25), (3, 12)]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [4, 2, 0]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(1, 4), (2, 2)]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5047805430281257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5047805430281257, 0.193623731104739] ***
*** finished computation of 7 references, err: [Inf, 0.5047805430281257, 0.193623731104739] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 6]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 6, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.88, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.96
finished with 20
iteration 7 finished
*** starting iteration: 1; err: [Inf, 2.9100157707349723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9100157707349723, 0.6720357674238892] ***
*** starting iteration: 2; err: [Inf, 2.9100157707349723, 0.6720357674238892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9100157707349723, 0.6720357674238892, 0.29547770032901904] ***
*** starting iteration: 3; err: [Inf, 2.9100157707349723, 0.6720357674238892, 0.29547770032901904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9100157707349723, 0.6720357674238892, 0.29547770032901904, 0.27098649450668805] ***
*** starting iteration: 4; err: [Inf, 2.9100157707349723, 0.6720357674238892, 0.29547770032901904, 0.27098649450668805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9100157707349723, 0.6720357674238892, 0.29547770032901904, 0.27098649450668805, 0.26922707306470484] ***
*** starting iteration: 5; err: [Inf, 2.9100157707349723, 0.6720357674238892, 0.29547770032901904, 0.27098649450668805, 0.26922707306470484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9100157707349723, 0.6720357674238892, 0.29547770032901904, 0.27098649450668805, 0.26922707306470484, 0.2689170143190377] ***
*** finished computation of 7 references, err: [Inf, 2.9100157707349723, 0.6720357674238892, 0.29547770032901904, 0.27098649450668805, 0.26922707306470484, 0.2689170143190377] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 9, 28]]
** centroid: 2, normalized-entropy: 0.8003922080453356, [(2, 9), (3, 28)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 4 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.939053369296613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.939053369296613, 0.5884867216573049] ***
*** starting iteration: 2; err: [Inf, 2.939053369296613, 0.5884867216573049] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144] ***
*** starting iteration: 3; err: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475] ***
*** starting iteration: 4; err: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475, 0.2588756652443573] ***
*** starting iteration: 5; err: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475, 0.2588756652443573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475, 0.2588756652443573, 0.25390925172416073] ***
*** starting iteration: 6; err: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475, 0.2588756652443573, 0.25390925172416073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475, 0.2588756652443573, 0.25390925172416073, 0.24703496680515147] ***
*** starting iteration: 7; err: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475, 0.2588756652443573, 0.25390925172416073, 0.24703496680515147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475, 0.2588756652443573, 0.25390925172416073, 0.24703496680515147, 0.244723605892926] ***
*** starting iteration: 8; err: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475, 0.2588756652443573, 0.25390925172416073, 0.24703496680515147, 0.244723605892926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475, 0.2588756652443573, 0.25390925172416073, 0.24703496680515147, 0.244723605892926, 0.23975645918112284] ***
*** starting iteration: 9; err: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475, 0.2588756652443573, 0.25390925172416073, 0.24703496680515147, 0.244723605892926, 0.23975645918112284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475, 0.2588756652443573, 0.25390925172416073, 0.24703496680515147, 0.244723605892926, 0.23975645918112284, 0.23025012376695023] ***
*** starting iteration: 10; err: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475, 0.2588756652443573, 0.25390925172416073, 0.24703496680515147, 0.244723605892926, 0.23975645918112284, 0.23025012376695023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475, 0.2588756652443573, 0.25390925172416073, 0.24703496680515147, 0.244723605892926, 0.23975645918112284, 0.23025012376695023, 0.220271730650283] ***
*** finished computation of 7 references, err: [Inf, 2.939053369296613, 0.5884867216573049, 0.2776950726611144, 0.2698267481731475, 0.2588756652443573, 0.25390925172416073, 0.24703496680515147, 0.244723605892926, 0.23975645918112284, 0.23025012376695023, 0.220271730650283] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 10, 17]]
** centroid: 4, normalized-entropy: 0.9509560484549724, [(2, 10), (3, 17)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3255029463424197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255029463424197, 0.2108764777317402] ***
*** starting iteration: 2; err: [Inf, 0.3255029463424197, 0.2108764777317402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255029463424197, 0.2108764777317402, 0.1930074222784524] ***
*** starting iteration: 3; err: [Inf, 0.3255029463424197, 0.2108764777317402, 0.1930074222784524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255029463424197, 0.2108764777317402, 0.1930074222784524, 0.18738395925046458] ***
*** starting iteration: 4; err: [Inf, 0.3255029463424197, 0.2108764777317402, 0.1930074222784524, 0.18738395925046458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255029463424197, 0.2108764777317402, 0.1930074222784524, 0.18738395925046458, 0.1862280715170603] ***
*** starting iteration: 5; err: [Inf, 0.3255029463424197, 0.2108764777317402, 0.1930074222784524, 0.18738395925046458, 0.1862280715170603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255029463424197, 0.2108764777317402, 0.1930074222784524, 0.18738395925046458, 0.1862280715170603, 0.1862280715170603] ***
*** finished computation of 7 references, err: [Inf, 0.3255029463424197, 0.2108764777317402, 0.1930074222784524, 0.18738395925046458, 0.1862280715170603, 0.1862280715170603] ***
*** center 1: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 17, 3]]
** centroid: 5, normalized-entropy: 0.6098403047164005, [(2, 17), (3, 3)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 15]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.88, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.96
finished with 20
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.88, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.96
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2), 0.96)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.26, 2.8840000000000003, 5.196000000000001, 1.9079999999999995], [7.236363636363637, 3.2454545454545456, 6.1000000000000005, 2.1818181818181817], [5.555555555555555, 2.466666666666667, 3.7222222222222223, 1.1], [6.510000000000001, 3.06, 4.57, 1.4500000000000002], [5.312499999999999, 3.7687500000000003, 1.5062499999999996, 0.26875], [5.79090909090909, 2.8000000000000003, 4.3545454545454545, 1.3090909090909093], [4.738888888888889, 3.1888888888888887, 1.4055555555555557, 0.21666666666666667]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 3, 2, 2, 1, 2, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.969444444444445, 3.355555555555555, 1.4611111111111112, 0.24722222222222223], [7.666666666666667, 2.8000000000000003, 6.733333333333334, 2.1333333333333333], [6.308333333333334, 2.8666666666666667, 4.725, 1.5166666666666666], [5.96, 2.7600000000000002, 5.04, 1.8800000000000001], [6.550000000000002, 3.1, 5.4875, 2.1624999999999996], [5.53125, 2.6062500000000006, 3.9312500000000004, 1.21875], [7.316666666666667, 3.0500000000000003, 6.05, 2.033333333333333]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.764285714285713, 3.1428571428571423, 1.4499999999999997, 0.20714285714285716], [6.8769230769230765, 3.0461538461538464, 5.8307692307692305, 2.069230769230769], [5.293750000000002, 3.70625, 1.5062499999999999, 0.275], [6.1461538461538465, 2.746153846153846, 5.184615384615385, 1.8846153846153846], [5.48695652173913, 2.6478260869565218, 3.952173913043479, 1.2521739130434784], [6.444444444444445, 2.9444444444444446, 4.58888888888889, 1.4333333333333331], [7.533333333333334, 3.3333333333333335, 6.566666666666666, 2.3333333333333335]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 1, 3, 2, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[57, 1, 1, 6, 10, 20, 5, 1, 23, 54, 18, 1, 18, 26, 18, 50, 16, 33, 38, 25, 22, 43, 37, 21, 1, 30, 42, 29, 3, 37, 40, 30, 32, 35, 2, 1, 1, 2, 23, 26, 34, 33, 35, 7, 1, 23, 43, 27, 29, 26, 36, 49, 29, 22, 25, 46, 24, 34, 39, 22, 32, 41, 47, 19, 28, 27, 30, 32, 37, 26, 21, 2, 31, 42, 38, 4, 52, 45, 35, 17, 27, 32, 37, 21, 43, 1, 35, 24, 48, 45, 30, 30, 31, 32, 33, 37, 37, 41, 40, 1, 31, 27, 28, 54, 39, 40, 25, 29, 30, 27, 63, 43, 35, 41, 29, 26, 40, 31, 23, 33, 27, 54, 21, 42, 36, 37, 28, 49, 73, 22, 38, 33, 25, 55, 24, 54, 33, 29, 32, 36, 37, 16, 41, 28, 33, 14, 25, 43, 11, 29, 24, 37, 44, 24, 39, 34, 32, 42, 46, 49, 47, 70, 50, 39, 32, 26, 39, 42, 5, 35, 43, 29, 37, 30, 40, 30, 21, 35, 27, 28, 29, 43, 51, 47, 30, 45, 38, 35, 40, 33, 29, 25, 42, 23, 36, 39, 14, 37, 42, 20, 42, 46, 28, 38, 35, 46, 10, 48, 30, 36, 45, 37, 33, 54, 44, 53, 39, 21, 40, 16, 1, 31, 21, 30, 48, 22, 36, 27, 46, 54, 67, 37, 38, 38, 24, 34, 47, 52, 41, 2, 47, 24, 33, 44, 39, 36, 44, 43, 39, 15, 34, 29, 51, 39, 32, 38, 29, 42, 35, 31, 50, 29, 23, 35, 47, 54, 27, 107, 39, 26, 27, 46, 38, 48, 36, 34, 37, 36, 56, 61, 49, 28, 54, 43, 47, 48, 56, 68, 35, 36, 29, 32, 29, 35, 37, 51, 38, 35, 15, 32]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6129999999999999, speedup = 0.4360765357702635, eval_ratio = 0.041824)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3975694444444443,"recall":0.3975694444444443,"f1":null,"seconds":7.200799882411957e-5,"exhaustive_search_seconds":0.0004097428172826767,"evaluations":338.703125,"distances_sum":1732.2281857673458}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5694444444444442,"recall":0.5694444444444442,"f1":0.5694444444444442,"seconds":0.0001042298972606659,"exhaustive_search_seconds":0.0004097428172826767,"evaluations":378.546875,"distances_sum":1618.7757225396804}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6701388888888885,"recall":0.6701388888888885,"f1":0.6701388888888885,"seconds":0.000134151428937912,"exhaustive_search_seconds":0.0004097428172826767,"evaluations":416.734375,"distances_sum":1577.9209862017228}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7465277777777775,"recall":0.7465277777777775,"f1":0.7465277777777775,"seconds":0.00016245059669017792,"exhaustive_search_seconds":0.0004097428172826767,"evaluations":454.9609375,"distances_sum":1555.8175267017712}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7890624999999997,"recall":0.7890624999999997,"f1":0.7890624999999997,"seconds":0.0004872046411037445,"exhaustive_search_seconds":0.0004097428172826767,"evaluations":494.9140625,"distances_sum":1544.6866615821552}
KCenters.DeloneInvIndex> reached performance {"precision":0.8324652777777772,"recall":0.8324652777777772,"f1":0.8324652777777772,"seconds":0.00021263398230075836,"exhaustive_search_seconds":0.0004097428172826767,"evaluations":537.1015625,"distances_sum":1534.7167759782487}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7970000000000002, speedup = 1.916184592547316, eval_ratio = 0.054016999999999996)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
