Julia Version 1.5.0-DEV.199
Commit cc47f87314 (2020-01-29 16:52 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed Tables ────────────────────── v0.2.11
 Installed InvertedIndices ───────────── v1.0.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.9
 Installed Parsers ───────────────────── v0.3.10
 Installed OrderedCollections ────────── v1.1.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed TableTraits ───────────────── v1.0.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed JSON ──────────────────────── v0.21.0
 Installed Reexport ──────────────────── v0.2.0
 Installed Missings ──────────────────── v0.4.3
 Installed DataFrames ────────────────── v0.20.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed PooledArrays ──────────────── v0.5.3
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Compat ────────────────────── v3.2.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed DataStructures ────────────── v0.17.9
 Installed MLDataUtils ───────────────── v0.5.0
 Installed MLLabelUtils ──────────────── v0.5.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_5oGkTj/Project.toml`
 [no changes]
  Updating `/tmp/jl_5oGkTj/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_5oGkTj/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 114.43999999999998
[ Info: 74.62000000000002
[ Info: 43.79999999999999
[ Info: 27.21999999999999
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.19999834944844
[ Info: 75.7800011588304
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.01171269046362
inertia(cdnet.distances) = 23.55304299088182
inertia(crand.distances) = 19.717385051267026
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2939453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.2939453125,"f1":null,"seconds":2.637505531311035e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":4.78125,"distances_sum":989.238479414871}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2939453125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.2939453125,"f1":null,"seconds":2.637505531311035e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":4.78125,"distances_sum":989.238479414871}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8403398684648693,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.125,"distances_sum":2447.270939127992}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.306640625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.306640625,"f1":null,"seconds":3.207474946975708e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":4.7734375,"distances_sum":1049.915961573256}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3291015625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3291015625,"f1":null,"seconds":3.430992364883423e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":5.1640625,"distances_sum":1040.284532053233}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.498046875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.498046875,"f1":0.6490322177822183,"seconds":4.220753908157349e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.59375,"distances_sum":1552.2171277853342}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8511514527139534,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.25,"distances_sum":2474.006585332954}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7265625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7265625,"f1":0.8330227064602073,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.015625,"distances_sum":2392.3669474731146}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":7,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8511514527139534,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.25,"distances_sum":2474.006585332954}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9419757326007332,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7421875,"distances_sum":3168.159516453573}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9315819597069603,"seconds":6.0908496379852295e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7734375,"distances_sum":3053.4144919600208}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9410802738927746,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.765625,"distances_sum":3126.7053022392565}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9419757326007332,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7421875,"distances_sum":3168.159516453573}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8994140625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9419757326007332,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7421875,"distances_sum":3168.159516453573}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.15625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.15625,"f1":null,"seconds":2.907589077949524e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":4.0625,"distances_sum":537.5913325077228}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.15625,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.15625,"f1":null,"seconds":2.907589077949524e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":4.0625,"distances_sum":537.5913325077228}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.15625,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.15625,"f1":null,"seconds":2.907589077949524e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":4.0625,"distances_sum":537.5913325077228}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8494453463203472,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.8125,"distances_sum":1886.7274097969319}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7059294871794878,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.859375,"distances_sum":1319.1484356042115}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8494453463203472,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.8125,"distances_sum":1886.7274097969319}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612637362637368,"seconds":6.491318345069885e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9375,"distances_sum":2676.443881313142}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9527586996337002,"seconds":6.644055247306824e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.96875,"distances_sum":2584.1062690758117}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8543388902763911,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.859375,"distances_sum":1925.84891916028}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9612637362637368,"seconds":6.491318345069885e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9375,"distances_sum":2676.443881313142}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9697573260073262,"seconds":6.7427754402160645e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.953125,"distances_sum":2708.7250480596717}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9777586996336998,"seconds":6.722286343574524e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9765625,"distances_sum":2792.2443644836267}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9682291666666671,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9765625,"distances_sum":2708.945223366745}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9777586996336998,"seconds":6.722286343574524e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9765625,"distances_sum":2792.2443644836267}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9777586996336998,"seconds":6.722286343574524e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9765625,"distances_sum":2792.2443644836267}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8560309482184489,"seconds":4.567205905914307e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.2890625,"distances_sum":1990.2935456839612}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7820731351981359,"seconds":4.032626748085022e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.6015625,"distances_sum":1594.6513481584614}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5654296875,"f1":null,"seconds":3.7066638469696045e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.140625,"distances_sum":1363.208753384524}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8560309482184489,"seconds":4.567205905914307e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.2890625,"distances_sum":1990.2935456839612}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8595451423576431,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.3671875,"distances_sum":2000.158727451669}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9313332500832509,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7265625,"distances_sum":2448.9036301018837}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8573530636030645,"seconds":4.550442099571228e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.3984375,"distances_sum":1989.2709102778565}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8907025266400275,"seconds":4.712492227554321e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.359375,"distances_sum":2243.3152013317326}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9313332500832509,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7265625,"distances_sum":2448.9036301018837}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9502918956043962,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7890625,"distances_sum":2631.374322769051}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.953056318681319,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.84375,"distances_sum":2625.094416897696}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9498168498168507,"seconds":5.0496309995651245e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.78125,"distances_sum":2608.0751844553406}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9395578379953388,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7265625,"distances_sum":2575.1335789065206}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9518887362637367,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8046875,"distances_sum":2642.1830948271313}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9606055402930407,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9140625,"distances_sum":2677.5213325765612}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9606055402930407,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9140625,"distances_sum":2677.5213325765612}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9606055402930407,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9140625,"distances_sum":2677.5213325765612}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8481492465867475,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.40625,"distances_sum":1854.20668128929}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2060546875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2060546875,"f1":null,"seconds":2.7008354663848877e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.171875,"distances_sum":441.6708850903491}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75,"f1":0.8481492465867475,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.40625,"distances_sum":1854.20668128929}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9671016483516489,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2652.4151909292605}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588026556776563,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8828125,"distances_sum":2566.843827316697}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9671016483516489,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2652.4151909292605}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9805059523809527,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9609375,"distances_sum":2740.6188149778654}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786286630036632,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9609375,"distances_sum":2725.300044224202}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9296875,"distances_sum":2688.2277436547015}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9737923534798539,"seconds":6.332993507385254e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.953125,"distances_sum":2669.941056254948}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.97265625, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.97265625,"f1":0.9851934523809525,"seconds":6.4373016357421875e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9609375,"distances_sum":2770.4613510509785}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.970703125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.970703125,"f1":0.9840029761904764,"seconds":6.496906280517578e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9921875,"distances_sum":2764.5965469876646}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.97265625,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9851934523809525,"seconds":6.4373016357421875e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9609375,"distances_sum":2770.4613510509785}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.97265625,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9851934523809525,"seconds":6.4373016357421875e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9609375,"distances_sum":2770.4613510509785}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4287109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4287109375,"f1":null,"seconds":4.0102750062942505e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.8046875,"distances_sum":968.7792206417073}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4287109375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4287109375,"f1":null,"seconds":4.0102750062942505e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.8046875,"distances_sum":968.7792206417073}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.850839785214786,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.78125,"distances_sum":1959.6004402198218}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.850839785214786,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.78125,"distances_sum":1959.6004402198218}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9257596570096575,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7265625,"distances_sum":2461.022650143176}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9557406135531142,"seconds":6.401911377906799e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9609375,"distances_sum":2651.3890392605904}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9557406135531142,"seconds":6.401911377906799e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9609375,"distances_sum":2651.3890392605904}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9557406135531142,"seconds":6.401911377906799e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9609375,"distances_sum":2651.3890392605904}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2109375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2109375,"f1":null,"seconds":3.647059202194214e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.578125,"distances_sum":524.8461027884346}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5673828125,"f1":null,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.9140625,"distances_sum":1336.764039379009}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5673828125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5673828125,"f1":null,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.9140625,"distances_sum":1336.764039379009}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9326184232434238,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9375,"distances_sum":2485.112053329811}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9326184232434238,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9375,"distances_sum":2485.112053329811}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9703182234432236,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.96875,"distances_sum":2758.161495074343}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9703182234432236,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.96875,"distances_sum":2758.161495074343}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9703182234432236,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.96875,"distances_sum":2758.161495074343}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8444087162837172,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.1640625,"distances_sum":1976.7774213452003}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.8444087162837172,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.1640625,"distances_sum":1976.7774213452003}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9585794413919418,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.7578125,"distances_sum":2740.5669812643123}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9480711996337002,"seconds":6.405636668205261e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.7265625,"distances_sum":2681.426695783993}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9585794413919418,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.7578125,"distances_sum":2740.5669812643123}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646978021978024,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8046875,"distances_sum":2778.5120782804365}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9646978021978024,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8046875,"distances_sum":2778.5120782804365}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9646978021978024,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8046875,"distances_sum":2778.5120782804365}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.193359375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.193359375,"f1":null,"seconds":3.56137752532959e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.3359375,"distances_sum":438.90829947601844}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7120074370074376,"seconds":4.798173904418945e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.4765625,"distances_sum":1370.5968291890676}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5693359375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5693359375,"f1":0.7120074370074376,"seconds":4.798173904418945e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.4765625,"distances_sum":1370.5968291890676}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9163237803862809,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.71875,"distances_sum":2340.5660895660253}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8544921875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8544921875,"f1":0.9163237803862809,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.71875,"distances_sum":2340.5660895660253}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9711710164835169,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9296875,"distances_sum":2778.8823268907404}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9711710164835169,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9296875,"distances_sum":2778.8823268907404}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9711710164835169,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9296875,"distances_sum":2778.8823268907404}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8427520396270405,"seconds":5.014240741729736e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.78125,"distances_sum":1885.9883907109518}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4384765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4384765625,"f1":null,"seconds":3.341585397720337e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.1953125,"distances_sum":986.514666490301}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8427520396270405,"seconds":5.014240741729736e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.78125,"distances_sum":1885.9883907109518}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9316194222444228,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8828125,"distances_sum":2450.017990831047}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8608776640026649,"seconds":4.716217517852783e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.90625,"distances_sum":1997.1985647037802}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9316194222444228,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8828125,"distances_sum":2450.017990831047}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9697265625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9697265625,"f1":0.9833905677655678,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.96875,"distances_sum":2848.3630838271183}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9601247710622715,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.984375,"distances_sum":2664.65582355917}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9665750915750919,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.9765625,"distances_sum":2686.631193566798}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9559581043956049,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.953125,"distances_sum":2633.395436699039}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9697265625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9833905677655678,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.96875,"distances_sum":2848.3630838271183}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9697265625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9833905677655678,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.96875,"distances_sum":2848.3630838271183}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8559591450216457,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6015625,"distances_sum":1953.0409885979336}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7918106199356209,"seconds":4.20399010181427e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.75,"distances_sum":1634.148087484238}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5830078125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5830078125,"f1":0.7204139610389617,"seconds":3.764405846595764e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.4765625,"distances_sum":1418.603917691541}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8559591450216457,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6015625,"distances_sum":1953.0409885979336}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588942307692313,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.90625,"distances_sum":2666.5342057624216}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9469436813186818,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8828125,"distances_sum":2573.6220865019304}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9031395687645694,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6484375,"distances_sum":2270.9373662959806}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9361695596070602,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.71875,"distances_sum":2482.443702305521}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9588942307692313,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.90625,"distances_sum":2666.5342057624216}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9821829212454215,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.984375,"distances_sum":2852.75167823475}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9658367673992678,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9296875,"distances_sum":2708.7284524487773}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9773809523809527,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.953125,"distances_sum":2820.7467776163853}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9821829212454215,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.984375,"distances_sum":2852.75167823475}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9821829212454215,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.984375,"distances_sum":2852.75167823475}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.25, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.25,"f1":null,"seconds":2.9187649488449097e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.5390625,"distances_sum":585.9864277010764}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7944451381951391,"seconds":3.943219780921936e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.1484375,"distances_sum":1445.244790293012}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.677734375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.677734375,"f1":0.7944451381951391,"seconds":3.943219780921936e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.1484375,"distances_sum":1445.244790293012}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8578525641025648,"seconds":4.384666681289673e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.4765625,"distances_sum":1723.4819190771746}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8578525641025648,"seconds":4.384666681289673e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.4765625,"distances_sum":1723.4819190771746}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9246394230769238,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7421875,"distances_sum":2152.9269681367937}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9456761988011991,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8046875,"distances_sum":2330.698033169327}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8707287504162512,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.5390625,"distances_sum":1819.1218620327918}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9456761988011991,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8046875,"distances_sum":2330.698033169327}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9456761988011991,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8046875,"distances_sum":2330.698033169327}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8548269438894447,"seconds":4.580244421958923e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.5390625,"distances_sum":1755.682273875513}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":2.9616057872772217e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.7890625,"distances_sum":522.1411977122112}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4130859375, conf: {"ssize":2,"bsize":2}, perf: {"precision":1.0,"recall":0.4130859375,"f1":0.5593822843822842,"seconds":3.2801181077957153e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.3984375,"distances_sum":823.960633065825}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7255859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7255859375,"f1":0.8276381604506613,"seconds":4.198402166366577e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.4140625,"distances_sum":1583.017427100067}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8548269438894447,"seconds":4.580244421958923e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.5390625,"distances_sum":1755.682273875513}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9293269230769236,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7734375,"distances_sum":2180.621366396881}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8635161713286723,"seconds":4.45730984210968e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.5546875,"distances_sum":1760.8327694882787}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9427369505494512,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.78125,"distances_sum":2290.3316481964234}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8604317557442566,"seconds":4.734843969345093e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.4609375,"distances_sum":1758.8830802260247}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8655995046620055,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.46875,"distances_sum":1751.5308040731115}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9427369505494512,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.78125,"distances_sum":2290.3316481964234}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9665579212454216,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.953125,"distances_sum":2397.0627638020865}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9591778013653016,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9140625,"distances_sum":2355.0465428369803}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9648497335997338,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9296875,"distances_sum":2393.077892062937}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598443223443228,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.875,"distances_sum":2378.6227635605733}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9665579212454216,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.953125,"distances_sum":2397.0627638020865}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9665579212454216,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.953125,"distances_sum":2397.0627638020865}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.72265625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.72265625,"f1":0.8265513999889008,"seconds":4.231929779052734e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.4765625,"distances_sum":1597.1813955476707}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4150390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4150390625,"f1":null,"seconds":3.3527612686157227e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.5234375,"distances_sum":813.7172998835973}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2333984375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.0882656574249268e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.0625,"distances_sum":574.5940316755756}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.72265625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.72265625,"f1":0.8265513999889008,"seconds":4.231929779052734e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.4765625,"distances_sum":1597.1813955476707}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9232689185814191,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7578125,"distances_sum":2196.6468121363914}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8510666416916426,"seconds":4.3120235204696655e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.3046875,"distances_sum":1730.699878034368}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.9232689185814191,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7578125,"distances_sum":2196.6468121363914}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9472355769230771,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6875,"distances_sum":2405.6020606804436}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9583218864468868,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.890625,"distances_sum":2407.3508976834996}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9498626373626378,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6875,"distances_sum":2415.5196931553924}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9491529304029311,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.84375,"distances_sum":2353.0731986983947}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9450091575091579,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.859375,"distances_sum":2319.99662909016}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9583218864468868,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.890625,"distances_sum":2407.3508976834996}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9583218864468868,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.890625,"distances_sum":2407.3508976834996}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":2.982094883918762e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":6.90625,"distances_sum":540.3450202253464}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5986328125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5986328125,"f1":0.7302485708735716,"seconds":3.863126039505005e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.125,"distances_sum":1254.924826857514}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5986328125,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5986328125,"f1":0.7302485708735716,"seconds":3.863126039505005e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.125,"distances_sum":1254.924826857514}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8866019397269406,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.515625,"distances_sum":1983.9894188553722}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9084108599733608,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.6015625,"distances_sum":2131.074268798125}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8058165792540801,"seconds":3.866851329803467e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.1796875,"distances_sum":1568.7423843332115}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8577443389943399,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.421875,"distances_sum":1755.9845471796725}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.8129688020313028,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.1953125,"distances_sum":1539.7344918199753}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9084108599733608,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.6015625,"distances_sum":2131.074268798125}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9413976648351653,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.796875,"distances_sum":2304.363648371996}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9229338369963377,"seconds":4.870817065238953e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.6796875,"distances_sum":2213.8077649884344}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9650526556776561,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.921875,"distances_sum":2430.533985998572}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.938564560439561,"seconds":4.854053258895874e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.640625,"distances_sum":2315.6191238353017}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620364010989015,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8828125,"distances_sum":2423.697694297339}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.953262362637363,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8046875,"distances_sum":2393.482254982096}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9650526556776561,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.921875,"distances_sum":2430.533985998572}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9650526556776561,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.921875,"distances_sum":2430.533985998572}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8485701798201807,"seconds":4.449859261512756e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.6328125,"distances_sum":1744.9230100667382}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.205078125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.205078125,"f1":null,"seconds":2.730637788772583e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":6.3984375,"distances_sum":491.7559650106136}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8150396478521486,"seconds":3.891065716743469e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.046875,"distances_sum":1531.7654569022202}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8485701798201807,"seconds":4.449859261512756e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.6328125,"distances_sum":1744.9230100667382}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9523726273726278,"seconds":4.536844789981842e-5,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7109375,"distances_sum":2451.991817516098}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8790241008991017,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.4765625,"distances_sum":1966.3292739311512}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8762138902763912,"seconds":4.677101969718933e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.5625,"distances_sum":1920.4392160546586}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8495679667554675,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.5546875,"distances_sum":1810.4104142766494}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9523726273726278,"seconds":4.536844789981842e-5,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7109375,"distances_sum":2451.991817516098}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9563644688644691,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.734375,"distances_sum":2455.9932109031624}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9566105769230775,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.859375,"distances_sum":2414.716299285594}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9568166208791216,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8359375,"distances_sum":2423.5119996565904}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9568166208791216,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8359375,"distances_sum":2423.5119996565904}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9568166208791216,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8359375,"distances_sum":2423.5119996565904}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.619140625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.619140625,"f1":0.7415185508935516,"seconds":2.7511268854141235e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.984375,"distances_sum":1292.5200576457719}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7236328125,"f1":0.8299117549117558,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.3671875,"distances_sum":1547.1924049074375}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8604952339327349,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.515625,"distances_sum":1754.0530548487163}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8604952339327349,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.515625,"distances_sum":1754.0530548487163}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9190595862470871,"seconds":3.725290298461914e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7109375,"distances_sum":2141.808614129756}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9528388278388282,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7578125,"distances_sum":2359.9120048596506}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8902019855144863,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.703125,"distances_sum":1929.7425132817798}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.91592261904762,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.5703125,"distances_sum":2170.2314018313773}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9248798076923083,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7421875,"distances_sum":2152.505325303899}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9528388278388282,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7578125,"distances_sum":2359.9120048596506}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9777930402930404,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9609375,"distances_sum":2465.3401723831284}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":7,"bsize":13}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9753548534798535,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.953125,"distances_sum":2442.9553926099}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9661687271062276,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.90625,"distances_sum":2394.943156486701}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.967118818681319,"seconds":4.034489393234253e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8984375,"distances_sum":2404.8037415149142}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9567765567765574,"seconds":4.023313522338867e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9140625,"distances_sum":2329.6572903655406}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9777930402930404,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9609375,"distances_sum":2465.3401723831284}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9777930402930404,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9609375,"distances_sum":2465.3401723831284}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3935546875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3935546875,"f1":null,"seconds":3.991648554801941e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":6.4375,"distances_sum":751.2986455275102}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3935546875,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.3935546875,"f1":null,"seconds":3.991648554801941e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":6.4375,"distances_sum":751.2986455275102}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6259765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.6259765625,"f1":0.7474104020979029,"seconds":4.285946488380432e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":7.0625,"distances_sum":1321.0792402361456}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.634765625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.634765625,"f1":0.7606648559773568,"seconds":4.45730984210968e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":7.1796875,"distances_sum":1290.4204639712002}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.858727210289711,"seconds":4.902482032775879e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":7.453125,"distances_sum":1809.538039815131}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.858727210289711,"seconds":4.902482032775879e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":7.453125,"distances_sum":1809.538039815131}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9368246336996342,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.75,"distances_sum":2241.8505126980253}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9559752747252752,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.8046875,"distances_sum":2347.3773610479548}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8973016566766574,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.4609375,"distances_sum":2038.1601973264446}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.881436272061273,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.5546875,"distances_sum":1879.2047934440131}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8774699259074268,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":7.609375,"distances_sum":1799.1171386040614}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9559752747252752,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.8046875,"distances_sum":2347.3773610479548}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9559752747252752,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.8046875,"distances_sum":2347.3773610479548}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7071099039849046,"seconds":4.256144165992737e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.484375,"distances_sum":1144.8697352837219}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8616362803862814,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.7890625,"distances_sum":1788.760007707665}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.60049307346344e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.4453125,"distances_sum":478.1908744151111}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.224609375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.224609375,"f1":null,"seconds":3.50363552570343e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.5390625,"distances_sum":514.3009885109163}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8616362803862814,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.7890625,"distances_sum":1788.760007707665}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9487980769230775,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8359375,"distances_sum":2322.147009303186}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":null,"recall":0.771484375,"f1":null,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.640625,"distances_sum":1793.6003026535427}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9147867757242764,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.71875,"distances_sum":2124.7384877173686}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8797254828504836,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6640625,"distances_sum":1878.0666638765938}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9487980769230775,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8359375,"distances_sum":2322.147009303186}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9549507783882789,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8671875,"distances_sum":2349.612059803211}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9778273809523814,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.9609375,"distances_sum":2487.302448518492}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596211080586085,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.90625,"distances_sum":2366.3060304830246}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9778273809523814,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.9609375,"distances_sum":2487.302448518492}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9778273809523814,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.9609375,"distances_sum":2487.302448518492}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.55859375,"f1":null,"seconds":4.22261655330658e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.65625,"distances_sum":1140.9971264758021}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8554013694638705,"seconds":5.112960934638977e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.734375,"distances_sum":1768.4877792859725}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8608318764568772,"seconds":4.9173831939697266e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.765625,"distances_sum":1777.490696851011}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8608318764568772,"seconds":4.9173831939697266e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.765625,"distances_sum":1777.490696851011}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9383928571428576,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6796875,"distances_sum":2338.442522263063}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.873869880119881,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.578125,"distances_sum":1887.758950585701}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9173482767232772,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6328125,"distances_sum":2187.885549517123}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9190819597069604,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6015625,"distances_sum":2202.4586860550294}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9215950715950724,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.5859375,"distances_sum":2233.5059218489923}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9383928571428576,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6796875,"distances_sum":2338.442522263063}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9572058150183155,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.890625,"distances_sum":2383.5775119207983}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9601991758241762,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.84375,"distances_sum":2432.7898055725473}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9601991758241762,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.84375,"distances_sum":2432.7898055725473}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9601991758241762,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.84375,"distances_sum":2432.7898055725473}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2216796875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2216796875,"f1":null,"seconds":3.417953848838806e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.8671875,"distances_sum":508.5767843347341}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.587890625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.587890625,"f1":0.7178077131202137,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.9296875,"distances_sum":1205.611800714204}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.220703125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.220703125,"f1":null,"seconds":3.4496188163757324e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.84375,"distances_sum":481.3780344065424}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.587890625,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.587890625,"f1":0.7178077131202137,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.9296875,"distances_sum":1205.611800714204}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6328125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.6328125,"f1":0.7589277042402051,"seconds":4.2729079723358154e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.2265625,"distances_sum":1324.1334894131749}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8208508505383514,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.3671875,"distances_sum":1579.7591826310831}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8572640900765908,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.4921875,"distances_sum":1734.1985348815037}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":8,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8572640900765908,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.4921875,"distances_sum":1734.1985348815037}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9331590284715291,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.765625,"distances_sum":2242.7863567671443}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9386847527472534,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.75,"distances_sum":2282.962507899916}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9173540001665008,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.7109375,"distances_sum":2160.558567819845}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9386847527472534,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.75,"distances_sum":2282.962507899916}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8935546875,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9386847527472534,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.75,"distances_sum":2282.962507899916}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7991654179154187,"seconds":4.867091774940491e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.03125,"distances_sum":1774.1302768859887}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.8007622585747595,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.078125,"distances_sum":1757.6182719251585}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2666015625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2666015625,"f1":null,"seconds":3.373250365257263e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.640625,"distances_sum":666.214541111467}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.681640625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.681640625,"f1":0.8007622585747595,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.078125,"distances_sum":1757.6182719251585}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9138538544788554,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.59375,"distances_sum":2391.8623731122843}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9404647435897442,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8515625,"distances_sum":2571.710153104448}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9444253663003668,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8046875,"distances_sum":2636.544836062472}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.8165220196470204,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.1015625,"distances_sum":1868.5525334960173}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8837428196803206,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.359375,"distances_sum":2218.2321312631593}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9444253663003668,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8046875,"distances_sum":2636.544836062472}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9757440476190479,"seconds":6.366521120071411e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.96875,"distances_sum":2867.716948816667}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9640682234432238,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9375,"distances_sum":2796.482213379838}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9664663461538465,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9453125,"distances_sum":2795.0841471142344}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9647722069597077,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.90625,"distances_sum":2808.95142699011}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9528533966033972,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.828125,"distances_sum":2732.1792452662735}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9757440476190479,"seconds":6.366521120071411e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.96875,"distances_sum":2867.716948816667}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9757440476190479,"seconds":6.366521120071411e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.96875,"distances_sum":2867.716948816667}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7821194430569436,"seconds":4.8317015171051025e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.4921875,"distances_sum":1592.5306897665798}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5166015625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5166015625,"f1":null,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.4609375,"distances_sum":1234.3021668067645}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.333984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.333984375,"f1":null,"seconds":3.252178430557251e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.0546875,"distances_sum":817.5058883891631}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6630859375,"f1":0.7821194430569436,"seconds":4.8317015171051025e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.4921875,"distances_sum":1592.5306897665798}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9146410880785886,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5546875,"distances_sum":2272.3366451807406}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7887721653346663,"seconds":4.716217517852783e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.53125,"distances_sum":1616.6179704058413}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9116674991674999,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.453125,"distances_sum":2191.2889771864157}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.857117882117883,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.0234375,"distances_sum":1885.0008939617378}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8564453125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8564453125,"f1":0.9146410880785886,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5546875,"distances_sum":2272.3366451807406}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9614297161172168,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8125,"distances_sum":2547.76609194595}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9516082875457879,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.65625,"distances_sum":2544.7554574771866}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9423992673992679,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7421875,"distances_sum":2442.8182128381545}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9522550366300372,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7734375,"distances_sum":2504.5336577954367}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9399267399267405,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6796875,"distances_sum":2429.976410226911}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614297161172168,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8125,"distances_sum":2547.76609194595}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614297161172168,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8125,"distances_sum":2547.76609194595}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.789718094405595,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.015625,"distances_sum":1637.4502310013156}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.2652169466018677e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":6.2421875,"distances_sum":579.5012845687272}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.789718094405595,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.015625,"distances_sum":1637.4502310013156}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9319571053946056,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.75,"distances_sum":2437.8800907277496}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9319571053946056,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.75,"distances_sum":2437.8800907277496}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588598901098904,"seconds":4.9602240324020386e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.859375,"distances_sum":2634.2867697999377}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9588598901098904,"seconds":4.9602240324020386e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.859375,"distances_sum":2634.2867697999377}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9588598901098904,"seconds":4.9602240324020386e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.859375,"distances_sum":2634.2867697999377}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.685326305638806,"seconds":3.861263394355774e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.8515625,"distances_sum":1292.5176275824076}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8441886238761246,"seconds":4.692003130912781e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.9921875,"distances_sum":1923.0804296498325}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8441886238761246,"seconds":4.692003130912781e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.9921875,"distances_sum":1923.0804296498325}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9274527555777562,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.53125,"distances_sum":2402.931124330855}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8872346403596412,"seconds":3.518536686897278e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.3046875,"distances_sum":2150.187389311087}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9380811896436902,"seconds":3.473833203315735e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.546875,"distances_sum":2489.3650249916236}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9212599900099908,"seconds":3.4812837839126587e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.5546875,"distances_sum":2326.850800595774}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9380811896436902,"seconds":3.473833203315735e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.546875,"distances_sum":2489.3650249916236}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9665407509157512,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8359375,"distances_sum":2630.226728264274}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9702380952380956,"seconds":3.6153942346572876e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8046875,"distances_sum":2666.81739447285}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9392227564102571,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6484375,"distances_sum":2446.938590230882}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9702380952380956,"seconds":3.6153942346572876e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8046875,"distances_sum":2666.81739447285}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9702380952380956,"seconds":3.6153942346572876e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8046875,"distances_sum":2666.81739447285}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6898925727050732,"seconds":4.6137720346450806e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":7.296875,"distances_sum":1218.4135554724633}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5830078125, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5830078125,"f1":null,"seconds":4.8317015171051025e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":7.6328125,"distances_sum":1343.4346607673658}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3671875,"f1":null,"seconds":4.166737198829651e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":6.8125,"distances_sum":869.7937799619016}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8138273185148193,"seconds":4.33996319770813e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":7.9140625,"distances_sum":1698.8894601891038}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.703125,"f1":0.8138273185148193,"seconds":4.33996319770813e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":7.9140625,"distances_sum":1698.8894601891038}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8873746045621052,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.1328125,"distances_sum":2072.662870349971}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9400068681318685,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.71875,"distances_sum":2460.634593635641}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.906908716283717,"seconds":3.3229589462280273e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.3984375,"distances_sum":2218.382412468929}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9286630036630039,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.6875,"distances_sum":2403.596713525188}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9333822427572434,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.765625,"distances_sum":2415.195973054866}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9400068681318685,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.71875,"distances_sum":2460.634593635641}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9645146520146526,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.8828125,"distances_sum":2621.5759924236736}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9443509615384621,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.7421875,"distances_sum":2513.2504536400165}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9696085164835168,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.90625,"distances_sum":2667.1829602034736}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9514225357975364,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.8125,"distances_sum":2550.8187327447504}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9422390109890115,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.7890625,"distances_sum":2456.205921573188}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9653846153846155,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.9375,"distances_sum":2614.9625278253693}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763221153846157,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.8984375,"distances_sum":2722.1783381351647}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9560554029304033,"seconds":6.4782798290252686e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.84375,"distances_sum":2571.952351226636}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763221153846157,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.8984375,"distances_sum":2722.1783381351647}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763221153846157,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":8.8984375,"distances_sum":2722.1783381351647}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8912441724941734,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.296875,"distances_sum":2163.2904503872523}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8173828125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8912441724941734,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.296875,"distances_sum":2163.2904503872523}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9601247710622715,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.859375,"distances_sum":2682.2836388413834}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9263049450549456,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.34375,"distances_sum":2393.0523159741265}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9601247710622715,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.859375,"distances_sum":2682.2836388413834}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":6.4391642808914185e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.984375,"distances_sum":2824.3516573972397}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9683264652014656,"seconds":6.44288957118988e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.90625,"distances_sum":2720.714250123687}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":6,"bsize":13}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786286630036636,"seconds":6.891787052154541e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.8984375,"distances_sum":2828.863738234128}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9686584249084251,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.9296875,"distances_sum":2722.6921601836852}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9742387820512824,"seconds":4.779547452926636e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.953125,"distances_sum":2753.1487102197307}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":6.4391642808914185e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.984375,"distances_sum":2824.3516573972397}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":6.4391642808914185e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.984375,"distances_sum":2824.3516573972397}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2265625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2265625,"f1":null,"seconds":3.458932042121887e-6,"exhaustive_search_seconds":9.592622518539429e-7,"evaluations":6.359375,"distances_sum":555.8924312224188}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1923828125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1923828125,"f1":null,"seconds":3.3210963010787964e-6,"exhaustive_search_seconds":9.592622518539429e-7,"evaluations":5.8203125,"distances_sum":424.2185159839943}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2265625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2265625,"f1":null,"seconds":3.458932042121887e-6,"exhaustive_search_seconds":9.592622518539429e-7,"evaluations":6.359375,"distances_sum":555.8924312224188}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3798828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3798828125,"f1":null,"seconds":4.069879651069641e-6,"exhaustive_search_seconds":9.592622518539429e-7,"evaluations":6.78125,"distances_sum":899.737522860065}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8877091658341666,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":9.592622518539429e-7,"evaluations":8.1171875,"distances_sum":2080.6653046548454}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8115234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8115234375,"f1":0.8877091658341666,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":9.592622518539429e-7,"evaluations":8.1171875,"distances_sum":2080.6653046548454}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9330362345987349,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":9.592622518539429e-7,"evaluations":8.734375,"distances_sum":2407.475263719844}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8859068015318023,"seconds":7.84359872341156e-6,"exhaustive_search_seconds":9.592622518539429e-7,"evaluations":8.109375,"distances_sum":2110.8052101678754}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9330362345987349,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":9.592622518539429e-7,"evaluations":8.734375,"distances_sum":2407.475263719844}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.88671875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9330362345987349,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":9.592622518539429e-7,"evaluations":8.734375,"distances_sum":2407.475263719844}}, n: 9
inertia(cfft.distances) = 19.83817658730159
inertia(cdnet.distances) = 24.964898669032834
inertia(crand.distances) = 21.60885576929336
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9355555555555556
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9266666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9444444444444443
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9511111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.931111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8777777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8777777777777779
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9133333333333332
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8999999999999999
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.86
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9155555555555556
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8533333333333334
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 3, 3, 2, 1, 2, 3, 3, 2, 3, 3, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.497866671914803] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.497866671914803, 0.17489017765964954] ***
*** starting iteration: 2; err: [Inf, 0.497866671914803, 0.17489017765964954] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239] ***
*** starting iteration: 3; err: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239, 0.16623308135521941] ***
*** starting iteration: 4; err: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239, 0.16623308135521941] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239, 0.16623308135521941, 0.16563043541887676] ***
*** finished computation of 12 references, err: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239, 0.16623308135521941, 0.16563043541887676] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.342399994744511] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.342399994744511, 0.73883354260604] ***
*** starting iteration: 2; err: [Inf, 1.342399994744511, 0.73883354260604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.342399994744511, 0.73883354260604, 0.6318804414863204] ***
*** starting iteration: 3; err: [Inf, 1.342399994744511, 0.73883354260604, 0.6318804414863204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.342399994744511, 0.73883354260604, 0.6318804414863204, 0.5945491176640809] ***
*** starting iteration: 4; err: [Inf, 1.342399994744511, 0.73883354260604, 0.6318804414863204, 0.5945491176640809] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.342399994744511, 0.73883354260604, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336] ***
*** starting iteration: 5; err: [Inf, 1.342399994744511, 0.73883354260604, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.342399994744511, 0.73883354260604, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128] ***
*** starting iteration: 6; err: [Inf, 1.342399994744511, 0.73883354260604, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.342399994744511, 0.73883354260604, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128, 0.536226795184642] ***
*** starting iteration: 7; err: [Inf, 1.342399994744511, 0.73883354260604, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128, 0.536226795184642] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.342399994744511, 0.73883354260604, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128, 0.536226795184642, 0.5161459544503147] ***
*** starting iteration: 8; err: [Inf, 1.342399994744511, 0.73883354260604, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128, 0.536226795184642, 0.5161459544503147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.342399994744511, 0.73883354260604, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128, 0.536226795184642, 0.5161459544503147, 0.5151657098003349] ***
*** finished computation of 3 references, err: [Inf, 1.342399994744511, 0.73883354260604, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128, 0.536226795184642, 0.5161459544503147, 0.5151657098003349] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 11]]
** centroid: 2, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1307000023360607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1307000023360607, 0.539507673144181] ***
*** starting iteration: 2; err: [Inf, 1.1307000023360607, 0.539507673144181] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1307000023360607, 0.539507673144181, 0.531237674942627] ***
*** starting iteration: 3; err: [Inf, 1.1307000023360607, 0.539507673144181, 0.531237674942627] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1307000023360607, 0.539507673144181, 0.531237674942627, 0.5238853568840929] ***
*** starting iteration: 4; err: [Inf, 1.1307000023360607, 0.539507673144181, 0.531237674942627, 0.5238853568840929] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1307000023360607, 0.539507673144181, 0.531237674942627, 0.5238853568840929, 0.5000776814470963] ***
*** starting iteration: 5; err: [Inf, 1.1307000023360607, 0.539507673144181, 0.531237674942627, 0.5238853568840929, 0.5000776814470963] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1307000023360607, 0.539507673144181, 0.531237674942627, 0.5238853568840929, 0.5000776814470963, 0.4870945090215804] ***
*** starting iteration: 6; err: [Inf, 1.1307000023360607, 0.539507673144181, 0.531237674942627, 0.5238853568840929, 0.5000776814470963, 0.4870945090215804] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1307000023360607, 0.539507673144181, 0.531237674942627, 0.5238853568840929, 0.5000776814470963, 0.4870945090215804, 0.4845886062174757] ***
*** starting iteration: 7; err: [Inf, 1.1307000023360607, 0.539507673144181, 0.531237674942627, 0.5238853568840929, 0.5000776814470963, 0.4870945090215804, 0.4845886062174757] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1307000023360607, 0.539507673144181, 0.531237674942627, 0.5238853568840929, 0.5000776814470963, 0.4870945090215804, 0.4845886062174757, 0.4845886062174757] ***
*** finished computation of 3 references, err: [Inf, 1.1307000023360607, 0.539507673144181, 0.531237674942627, 0.5238853568840929, 0.5000776814470963, 0.4870945090215804, 0.4845886062174757, 0.4845886062174757] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1408999943048037] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1408999943048037, 0.5544466398397516] ***
*** starting iteration: 2; err: [Inf, 1.1408999943048037, 0.5544466398397516] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1408999943048037, 0.5544466398397516, 0.5544466398397516] ***
*** finished computation of 3 references, err: [Inf, 1.1408999943048037, 0.5544466398397516, 0.5544466398397516] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 6]]
** centroid: 1, normalized-entropy: 0.6394571324851642, [(2, 31), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 26]]
** centroid: 3, normalized-entropy: 0.6373874992221911, [(2, 5), (3, 26)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3131681928277256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3131681928277256, 0.19652756718560727] ***
*** finished computation of 7 references, err: [Inf, 0.3131681928277256, 0.19652756718560727] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 3]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 8), (3, 3)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.2985955599663495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2985955599663495, 0.36728743092354404] ***
*** finished computation of 7 references, err: [Inf, 3.2985955599663495, 0.36728743092354404] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 1, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4567542620251646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4567542620251646, 0.3483970211971776] ***
*** finished computation of 7 references, err: [Inf, 0.4567542620251646, 0.3483970211971776] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 31]]
** centroid: 1, normalized-entropy: 0.9252253278054431, [(2, 16), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7571922731293911] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7571922731293911, 0.4667529415379761] ***
*** finished computation of 3 references, err: [Inf, 0.7571922731293911, 0.4667529415379761] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 16, 37]]
** centroid: 2, normalized-entropy: 0.8835850861052531, [(2, 16), (3, 37)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.49711514763234105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49711514763234105, 0.36600419075885704] ***
*** finished computation of 3 references, err: [Inf, 0.49711514763234105, 0.36600419075885704] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 6, 30]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 6), (3, 30)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 1]]
** centroid: 3, normalized-entropy: 0.2222848306856879, [(2, 27), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9227057792891712] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9227057792891712, 0.44525785859014105] ***
*** finished computation of 3 references, err: [Inf, 0.9227057792891712, 0.44525785859014105] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 31]]
** centroid: 1, normalized-entropy: 0.9731560354421095, [(2, 21), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.42472516190480986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42472516190480986, 0.193948651928934] ***
*** starting iteration: 2; err: [Inf, 0.42472516190480986, 0.193948651928934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42472516190480986, 0.193948651928934, 0.15971655475077273] ***
*** starting iteration: 3; err: [Inf, 0.42472516190480986, 0.193948651928934, 0.15971655475077273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42472516190480986, 0.193948651928934, 0.15971655475077273, 0.15041031924041748] ***
*** starting iteration: 4; err: [Inf, 0.42472516190480986, 0.193948651928934, 0.15971655475077273, 0.15041031924041748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42472516190480986, 0.193948651928934, 0.15971655475077273, 0.15041031924041748, 0.14893406266056539] ***
*** starting iteration: 5; err: [Inf, 0.42472516190480986, 0.193948651928934, 0.15971655475077273, 0.15041031924041748, 0.14893406266056539] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42472516190480986, 0.193948651928934, 0.15971655475077273, 0.15041031924041748, 0.14893406266056539, 0.14893406266056539] ***
*** finished computation of 7 references, err: [Inf, 0.42472516190480986, 0.193948651928934, 0.15971655475077273, 0.15041031924041748, 0.14893406266056539, 0.14893406266056539] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 10]]
** centroid: 6, normalized-entropy: 0.998363672593813, [(2, 11), (3, 10)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0263455095621261] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0263455095621261, 0.32542263164264584] ***
*** starting iteration: 2; err: [Inf, 1.0263455095621261, 0.32542263164264584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0263455095621261, 0.32542263164264584, 0.24405478957661667] ***
*** starting iteration: 3; err: [Inf, 1.0263455095621261, 0.32542263164264584, 0.24405478957661667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0263455095621261, 0.32542263164264584, 0.24405478957661667, 0.21639018796714451] ***
*** starting iteration: 4; err: [Inf, 1.0263455095621261, 0.32542263164264584, 0.24405478957661667, 0.21639018796714451] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0263455095621261, 0.32542263164264584, 0.24405478957661667, 0.21639018796714451, 0.20917349775557945] ***
*** starting iteration: 5; err: [Inf, 1.0263455095621261, 0.32542263164264584, 0.24405478957661667, 0.21639018796714451, 0.20917349775557945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0263455095621261, 0.32542263164264584, 0.24405478957661667, 0.21639018796714451, 0.20917349775557945, 0.20543737969446102] ***
*** starting iteration: 6; err: [Inf, 1.0263455095621261, 0.32542263164264584, 0.24405478957661667, 0.21639018796714451, 0.20917349775557945, 0.20543737969446102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0263455095621261, 0.32542263164264584, 0.24405478957661667, 0.21639018796714451, 0.20917349775557945, 0.20543737969446102, 0.20369778045210776] ***
*** starting iteration: 7; err: [Inf, 1.0263455095621261, 0.32542263164264584, 0.24405478957661667, 0.21639018796714451, 0.20917349775557945, 0.20543737969446102, 0.20369778045210776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0263455095621261, 0.32542263164264584, 0.24405478957661667, 0.21639018796714451, 0.20917349775557945, 0.20543737969446102, 0.20369778045210776, 0.20369778045210776] ***
*** finished computation of 7 references, err: [Inf, 1.0263455095621261, 0.32542263164264584, 0.24405478957661667, 0.21639018796714451, 0.20917349775557945, 0.20543737969446102, 0.20369778045210776, 0.20369778045210776] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 10]]
** centroid: 2, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41501858335263786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41501858335263786, 0.30027309417244274] ***
*** starting iteration: 2; err: [Inf, 0.41501858335263786, 0.30027309417244274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41501858335263786, 0.30027309417244274, 0.23843455888003073] ***
*** starting iteration: 3; err: [Inf, 0.41501858335263786, 0.30027309417244274, 0.23843455888003073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41501858335263786, 0.30027309417244274, 0.23843455888003073, 0.20265078894628083] ***
*** starting iteration: 4; err: [Inf, 0.41501858335263786, 0.30027309417244274, 0.23843455888003073, 0.20265078894628083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41501858335263786, 0.30027309417244274, 0.23843455888003073, 0.20265078894628083, 0.18280991100415175] ***
*** starting iteration: 5; err: [Inf, 0.41501858335263786, 0.30027309417244274, 0.23843455888003073, 0.20265078894628083, 0.18280991100415175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41501858335263786, 0.30027309417244274, 0.23843455888003073, 0.20265078894628083, 0.18280991100415175, 0.17690488461637138] ***
*** starting iteration: 6; err: [Inf, 0.41501858335263786, 0.30027309417244274, 0.23843455888003073, 0.20265078894628083, 0.18280991100415175, 0.17690488461637138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41501858335263786, 0.30027309417244274, 0.23843455888003073, 0.20265078894628083, 0.18280991100415175, 0.17690488461637138, 0.17358674239352762] ***
*** starting iteration: 7; err: [Inf, 0.41501858335263786, 0.30027309417244274, 0.23843455888003073, 0.20265078894628083, 0.18280991100415175, 0.17690488461637138, 0.17358674239352762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41501858335263786, 0.30027309417244274, 0.23843455888003073, 0.20265078894628083, 0.18280991100415175, 0.17690488461637138, 0.17358674239352762, 0.17358674239352762] ***
*** finished computation of 7 references, err: [Inf, 0.41501858335263786, 0.30027309417244274, 0.23843455888003073, 0.20265078894628083, 0.18280991100415175, 0.17690488461637138, 0.17358674239352762, 0.17358674239352762] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 9]]
** centroid: 1, normalized-entropy: 0.8904916402194913, [(2, 4), (3, 9)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 4, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 7.11639995931548] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.11639995931548, 2.5192386720325324] ***
*** starting iteration: 2; err: [Inf, 7.11639995931548, 2.5192386720325324] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559] ***
*** starting iteration: 3; err: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559, 0.7756695465629138] ***
*** starting iteration: 4; err: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559, 0.7756695465629138] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559, 0.7756695465629138, 0.6155824687530876] ***
*** starting iteration: 5; err: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559, 0.7756695465629138, 0.6155824687530876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559, 0.7756695465629138, 0.6155824687530876, 0.5650307796681721] ***
*** starting iteration: 6; err: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559, 0.7756695465629138, 0.6155824687530876, 0.5650307796681721] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559, 0.7756695465629138, 0.6155824687530876, 0.5650307796681721, 0.5248569194552793] ***
*** starting iteration: 7; err: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559, 0.7756695465629138, 0.6155824687530876, 0.5650307796681721, 0.5248569194552793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559, 0.7756695465629138, 0.6155824687530876, 0.5650307796681721, 0.5248569194552793, 0.5177196907468763] ***
*** starting iteration: 8; err: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559, 0.7756695465629138, 0.6155824687530876, 0.5650307796681721, 0.5248569194552793, 0.5177196907468763] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559, 0.7756695465629138, 0.6155824687530876, 0.5650307796681721, 0.5248569194552793, 0.5177196907468763, 0.5156302669826911] ***
*** starting iteration: 9; err: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559, 0.7756695465629138, 0.6155824687530876, 0.5650307796681721, 0.5248569194552793, 0.5177196907468763, 0.5156302669826911] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559, 0.7756695465629138, 0.6155824687530876, 0.5650307796681721, 0.5248569194552793, 0.5177196907468763, 0.5156302669826911, 0.5156302669826911] ***
*** finished computation of 3 references, err: [Inf, 7.11639995931548, 2.5192386720325324, 1.3741323276631559, 0.7756695465629138, 0.6155824687530876, 0.5650307796681721, 0.5248569194552793, 0.5177196907468763, 0.5156302669826911, 0.5156302669826911] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 11]]
** centroid: 1, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7209000076543187] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7209000076543187, 0.5199088398392294] ***
*** starting iteration: 2; err: [Inf, 0.7209000076543187, 0.5199088398392294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7209000076543187, 0.5199088398392294, 0.5000776814470963] ***
*** starting iteration: 3; err: [Inf, 0.7209000076543187, 0.5199088398392294, 0.5000776814470963] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7209000076543187, 0.5199088398392294, 0.5000776814470963, 0.4870945090215804] ***
*** starting iteration: 4; err: [Inf, 0.7209000076543187, 0.5199088398392294, 0.5000776814470963, 0.4870945090215804] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7209000076543187, 0.5199088398392294, 0.5000776814470963, 0.4870945090215804, 0.4845886062174757] ***
*** starting iteration: 5; err: [Inf, 0.7209000076543187, 0.5199088398392294, 0.5000776814470963, 0.4870945090215804, 0.4845886062174757] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7209000076543187, 0.5199088398392294, 0.5000776814470963, 0.4870945090215804, 0.4845886062174757, 0.4845886062174757] ***
*** finished computation of 3 references, err: [Inf, 0.7209000076543187, 0.5199088398392294, 0.5000776814470963, 0.4870945090215804, 0.4845886062174757, 0.4845886062174757] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.3147000209242954] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3147000209242954, 1.0426967248372252] ***
*** starting iteration: 2; err: [Inf, 2.3147000209242954, 1.0426967248372252] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3147000209242954, 1.0426967248372252, 0.7897884683932263] ***
*** starting iteration: 3; err: [Inf, 2.3147000209242954, 1.0426967248372252, 0.7897884683932263] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3147000209242954, 1.0426967248372252, 0.7897884683932263, 0.6775259692186206] ***
*** starting iteration: 4; err: [Inf, 2.3147000209242954, 1.0426967248372252, 0.7897884683932263, 0.6775259692186206] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3147000209242954, 1.0426967248372252, 0.7897884683932263, 0.6775259692186206, 0.5989057498455972] ***
*** starting iteration: 5; err: [Inf, 2.3147000209242954, 1.0426967248372252, 0.7897884683932263, 0.6775259692186206, 0.5989057498455972] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3147000209242954, 1.0426967248372252, 0.7897884683932263, 0.6775259692186206, 0.5989057498455972, 0.5704358169456745] ***
*** starting iteration: 6; err: [Inf, 2.3147000209242954, 1.0426967248372252, 0.7897884683932263, 0.6775259692186206, 0.5989057498455972, 0.5704358169456745] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3147000209242954, 1.0426967248372252, 0.7897884683932263, 0.6775259692186206, 0.5989057498455972, 0.5704358169456745, 0.5598789338066036] ***
*** starting iteration: 7; err: [Inf, 2.3147000209242954, 1.0426967248372252, 0.7897884683932263, 0.6775259692186206, 0.5989057498455972, 0.5704358169456745, 0.5598789338066036] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3147000209242954, 1.0426967248372252, 0.7897884683932263, 0.6775259692186206, 0.5989057498455972, 0.5704358169456745, 0.5598789338066036, 0.5571768148564664] ***
*** starting iteration: 8; err: [Inf, 2.3147000209242954, 1.0426967248372252, 0.7897884683932263, 0.6775259692186206, 0.5989057498455972, 0.5704358169456745, 0.5598789338066036, 0.5571768148564664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3147000209242954, 1.0426967248372252, 0.7897884683932263, 0.6775259692186206, 0.5989057498455972, 0.5704358169456745, 0.5598789338066036, 0.5571768148564664, 0.5566469666096875] ***
*** finished computation of 3 references, err: [Inf, 2.3147000209242954, 1.0426967248372252, 0.7897884683932263, 0.6775259692186206, 0.5989057498455972, 0.5704358169456745, 0.5598789338066036, 0.5571768148564664, 0.5566469666096875] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 7]]
** centroid: 1, normalized-entropy: 0.6690158350565576, [(2, 33), (3, 7)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4630500697553215] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4630500697553215, 0.3742096088857911] ***
*** starting iteration: 2; err: [Inf, 1.4630500697553215, 0.3742096088857911] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4630500697553215, 0.3742096088857911, 0.35719164385711716] ***
*** starting iteration: 3; err: [Inf, 1.4630500697553215, 0.3742096088857911, 0.35719164385711716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4630500697553215, 0.3742096088857911, 0.35719164385711716, 0.35719164385711716] ***
*** finished computation of 3 references, err: [Inf, 1.4630500697553215, 0.3742096088857911, 0.35719164385711716, 0.35719164385711716] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 12]]
** centroid: 1, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.740189510058465] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.740189510058465, 0.9294014614761629] ***
*** starting iteration: 2; err: [Inf, 2.740189510058465, 0.9294014614761629] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.740189510058465, 0.9294014614761629, 0.3986553773796963] ***
*** starting iteration: 3; err: [Inf, 2.740189510058465, 0.9294014614761629, 0.3986553773796963] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.740189510058465, 0.9294014614761629, 0.3986553773796963, 0.3507440901684472] ***
*** finished computation of 3 references, err: [Inf, 2.740189510058465, 0.9294014614761629, 0.3986553773796963, 0.3507440901684472] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.440639449502667] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.440639449502667, 0.653916989651684] ***
*** starting iteration: 2; err: [Inf, 2.440639449502667, 0.653916989651684] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.440639449502667, 0.653916989651684, 0.6405157239896265] ***
*** starting iteration: 3; err: [Inf, 2.440639449502667, 0.653916989651684, 0.6405157239896265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.440639449502667, 0.653916989651684, 0.6405157239896265, 0.63820215289067] ***
*** finished computation of 3 references, err: [Inf, 2.440639449502667, 0.653916989651684, 0.6405157239896265, 0.63820215289067] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 32]]
** centroid: 1, normalized-entropy: 0.9985532860835362, [(2, 35), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9512000090762158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9512000090762158, 0.42074864974621007] ***
*** starting iteration: 2; err: [Inf, 0.9512000090762158, 0.42074864974621007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9512000090762158, 0.42074864974621007, 0.326181024234757] ***
*** starting iteration: 3; err: [Inf, 0.9512000090762158, 0.42074864974621007, 0.326181024234757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9512000090762158, 0.42074864974621007, 0.326181024234757, 0.28652202642167024] ***
*** finished computation of 7 references, err: [Inf, 0.9512000090762158, 0.42074864974621007, 0.326181024234757, 0.28652202642167024] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 4]]
** centroid: 5, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 13]]
** centroid: 6, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5931999979808187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5931999979808187, 0.31729657197322325] ***
*** starting iteration: 2; err: [Inf, 0.5931999979808187, 0.31729657197322325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5931999979808187, 0.31729657197322325, 0.2981549541802228] ***
*** starting iteration: 3; err: [Inf, 0.5931999979808187, 0.31729657197322325, 0.2981549541802228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5931999979808187, 0.31729657197322325, 0.2981549541802228, 0.2819232540044918] ***
*** finished computation of 7 references, err: [Inf, 0.5931999979808187, 0.31729657197322325, 0.2981549541802228, 0.2819232540044918] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 7, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7746000090549652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7746000090549652, 0.41073100378255206] ***
*** starting iteration: 2; err: [Inf, 0.7746000090549652, 0.41073100378255206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7746000090549652, 0.41073100378255206, 0.38441545099675123] ***
*** starting iteration: 3; err: [Inf, 0.7746000090549652, 0.41073100378255206, 0.38441545099675123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7746000090549652, 0.41073100378255206, 0.38441545099675123, 0.3624204623876182] ***
*** finished computation of 7 references, err: [Inf, 0.7746000090549652, 0.41073100378255206, 0.38441545099675123, 0.3624204623876182] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 24, 9]]
** centroid: 2, normalized-entropy: 0.8453509366224364, [(2, 24), (3, 9)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 9.750533592599613] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.750533592599613, 0.7184371090544371] ***
*** finished computation of 3 references, err: [Inf, 9.750533592599613, 0.7184371090544371] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 37]]
** centroid: 3, normalized-entropy: 0.9823166080205502, [(2, 27), (3, 37)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0786733052263786] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0786733052263786, 0.6650360739798034] ***
*** finished computation of 3 references, err: [Inf, 1.0786733052263786, 0.6650360739798034] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 31]]
** centroid: 1, normalized-entropy: 0.9998182469603427, [(2, 32), (3, 31)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [22, 1, 0]]
** centroid: 2, normalized-entropy: 0.2580186686648155, [(1, 22), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.373796355682506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.373796355682506, 0.5182539764267062] ***
*** finished computation of 3 references, err: [Inf, 1.373796355682506, 0.5182539764267062] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [32, 3, 0]]
** centroid: 1, normalized-entropy: 0.4220005168831531, [(1, 32), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 15]]
** centroid: 2, normalized-entropy: 0.8960382325345574, [(2, 33), (3, 15)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3003768752463287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3003768752463287, 0.19907238029167737] ***
*** finished computation of 7 references, err: [Inf, 0.3003768752463287, 0.19907238029167737] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(2, 1), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 9, 4]]
** centroid: 5, normalized-entropy: 0.8904916402194913, [(2, 9), (3, 4)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 21, 3]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(2, 21), (3, 3)]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3688065451672543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3688065451672543, 0.19947645250431484] ***
*** finished computation of 7 references, err: [Inf, 0.3688065451672543, 0.19947645250431484] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 9, 9]]
** centroid: 7, normalized-entropy: 1.0, [(2, 9), (3, 9)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3058446761716533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3058446761716533, 0.22423346778802394] ***
*** finished computation of 7 references, err: [Inf, 0.3058446761716533, 0.22423346778802394] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 5, 7]]
** centroid: 4, normalized-entropy: 0.9798687566511527, [(2, 5), (3, 7)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 5, 2]]
** centroid: 6, normalized-entropy: 0.8631205685666311, [(2, 5), (3, 2)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.893800037905467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.893800037905467, 1.0821832568382805] ***
*** finished computation of 3 references, err: [Inf, 3.893800037905467, 1.0821832568382805] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 14]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 28), (3, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [32, 3, 0]]
** centroid: 2, normalized-entropy: 0.4220005168831531, [(1, 32), (2, 3)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.741900021494827] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.741900021494827, 1.639620777637557] ***
*** finished computation of 3 references, err: [Inf, 5.741900021494827, 1.639620777637557] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [36, 14, 0]]
** centroid: 2, normalized-entropy: 0.8554508105601307, [(1, 36), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 19, 19]]
** centroid: 3, normalized-entropy: 1.0, [(2, 19), (3, 19)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1818000025720647] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1818000025720647, 0.9591745621036961] ***
*** finished computation of 3 references, err: [Inf, 1.1818000025720647, 0.9591745621036961] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [23, 3, 0]]
** centroid: 2, normalized-entropy: 0.5159469300074472, [(1, 23), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 32]]
** centroid: 3, normalized-entropy: 0.9998292601233937, [(2, 33), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0918000065490294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0918000065490294, 0.6318804414863204] ***
*** starting iteration: 2; err: [Inf, 1.0918000065490294, 0.6318804414863204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0918000065490294, 0.6318804414863204, 0.5945491176640809] ***
*** starting iteration: 3; err: [Inf, 1.0918000065490294, 0.6318804414863204, 0.5945491176640809] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0918000065490294, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336] ***
*** starting iteration: 4; err: [Inf, 1.0918000065490294, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0918000065490294, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128] ***
*** starting iteration: 5; err: [Inf, 1.0918000065490294, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0918000065490294, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128, 0.536226795184642] ***
*** starting iteration: 6; err: [Inf, 1.0918000065490294, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128, 0.536226795184642] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0918000065490294, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128, 0.536226795184642, 0.5161459544503147] ***
*** starting iteration: 7; err: [Inf, 1.0918000065490294, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128, 0.536226795184642, 0.5161459544503147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0918000065490294, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128, 0.536226795184642, 0.5161459544503147, 0.5151657098003349] ***
*** finished computation of 3 references, err: [Inf, 1.0918000065490294, 0.6318804414863204, 0.5945491176640809, 0.5727910993678336, 0.5536869582666128, 0.536226795184642, 0.5161459544503147, 0.5151657098003349] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 11]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4081000006056525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4081000006056525, 0.5130258205625424] ***
*** starting iteration: 2; err: [Inf, 1.4081000006056525, 0.5130258205625424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4081000006056525, 0.5130258205625424, 0.48814607135947397] ***
*** starting iteration: 3; err: [Inf, 1.4081000006056525, 0.5130258205625424, 0.48814607135947397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4081000006056525, 0.5130258205625424, 0.48814607135947397, 0.485586738268337] ***
*** starting iteration: 4; err: [Inf, 1.4081000006056525, 0.5130258205625424, 0.48814607135947397, 0.485586738268337] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4081000006056525, 0.5130258205625424, 0.48814607135947397, 0.485586738268337, 0.485586738268337] ***
*** finished computation of 3 references, err: [Inf, 1.4081000006056525, 0.5130258205625424, 0.48814607135947397, 0.485586738268337, 0.485586738268337] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 8]]
** centroid: 3, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.194900001272445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.194900001272445, 0.650977194887254] ***
*** starting iteration: 2; err: [Inf, 1.194900001272445, 0.650977194887254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.194900001272445, 0.650977194887254, 0.5809841418466852] ***
*** starting iteration: 3; err: [Inf, 1.194900001272445, 0.650977194887254, 0.5809841418466852] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.194900001272445, 0.650977194887254, 0.5809841418466852, 0.5664724629650355] ***
*** starting iteration: 4; err: [Inf, 1.194900001272445, 0.650977194887254, 0.5809841418466852, 0.5664724629650355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.194900001272445, 0.650977194887254, 0.5809841418466852, 0.5664724629650355, 0.5598789338066036] ***
*** starting iteration: 5; err: [Inf, 1.194900001272445, 0.650977194887254, 0.5809841418466852, 0.5664724629650355, 0.5598789338066036] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.194900001272445, 0.650977194887254, 0.5809841418466852, 0.5664724629650355, 0.5598789338066036, 0.5571768148564664] ***
*** starting iteration: 6; err: [Inf, 1.194900001272445, 0.650977194887254, 0.5809841418466852, 0.5664724629650355, 0.5598789338066036, 0.5571768148564664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.194900001272445, 0.650977194887254, 0.5809841418466852, 0.5664724629650355, 0.5598789338066036, 0.5571768148564664, 0.5566469666096875] ***
*** finished computation of 3 references, err: [Inf, 1.194900001272445, 0.650977194887254, 0.5809841418466852, 0.5664724629650355, 0.5598789338066036, 0.5571768148564664, 0.5566469666096875] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 7]]
** centroid: 1, normalized-entropy: 0.6690158350565576, [(2, 33), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 25]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8519350294890295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8519350294890295, 0.38137915438441783] ***
*** finished computation of 3 references, err: [Inf, 0.8519350294890295, 0.38137915438441783] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 16]]
** centroid: 3, normalized-entropy: 0.9252253278054431, [(2, 31), (3, 16)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7030424154543923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7030424154543923, 0.3813364664865723] ***
*** finished computation of 3 references, err: [Inf, 0.7030424154543923, 0.3813364664865723] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 30]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 8), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 3, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8825690533464097] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8825690533464097, 0.440422808462244] ***
*** finished computation of 3 references, err: [Inf, 0.8825690533464097, 0.440422808462244] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 12]]
** centroid: 1, normalized-entropy: 0.8196004346196011, [(2, 35), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [32, 1, 0]]
** centroid: 2, normalized-entropy: 0.19590927087360496, [(1, 32), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7619656571275598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7619656571275598, 0.4198076887497459] ***
*** starting iteration: 2; err: [Inf, 0.7619656571275598, 0.4198076887497459] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7619656571275598, 0.4198076887497459, 0.39273113292046813] ***
*** starting iteration: 3; err: [Inf, 0.7619656571275598, 0.4198076887497459, 0.39273113292046813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7619656571275598, 0.4198076887497459, 0.39273113292046813, 0.37870450089467667] ***
*** starting iteration: 4; err: [Inf, 0.7619656571275598, 0.4198076887497459, 0.39273113292046813, 0.37870450089467667] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7619656571275598, 0.4198076887497459, 0.39273113292046813, 0.37870450089467667, 0.3689749813877471] ***
*** starting iteration: 5; err: [Inf, 0.7619656571275598, 0.4198076887497459, 0.39273113292046813, 0.37870450089467667, 0.3689749813877471] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7619656571275598, 0.4198076887497459, 0.39273113292046813, 0.37870450089467667, 0.3689749813877471, 0.36192737500169003] ***
*** starting iteration: 6; err: [Inf, 0.7619656571275598, 0.4198076887497459, 0.39273113292046813, 0.37870450089467667, 0.3689749813877471, 0.36192737500169003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7619656571275598, 0.4198076887497459, 0.39273113292046813, 0.37870450089467667, 0.3689749813877471, 0.36192737500169003, 0.3577660638224542] ***
*** starting iteration: 7; err: [Inf, 0.7619656571275598, 0.4198076887497459, 0.39273113292046813, 0.37870450089467667, 0.3689749813877471, 0.36192737500169003, 0.3577660638224542] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7619656571275598, 0.4198076887497459, 0.39273113292046813, 0.37870450089467667, 0.3689749813877471, 0.36192737500169003, 0.3577660638224542, 0.3577660638224542] ***
*** finished computation of 3 references, err: [Inf, 0.7619656571275598, 0.4198076887497459, 0.39273113292046813, 0.37870450089467667, 0.3689749813877471, 0.36192737500169003, 0.3577660638224542, 0.3577660638224542] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 11]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.784599264146611] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.784599264146611, 0.35041315328804784] ***
*** starting iteration: 2; err: [Inf, 0.784599264146611, 0.35041315328804784] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.784599264146611, 0.35041315328804784, 0.3416247233280545] ***
*** starting iteration: 3; err: [Inf, 0.784599264146611, 0.35041315328804784, 0.3416247233280545] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.784599264146611, 0.35041315328804784, 0.3416247233280545, 0.3406274234210034] ***
*** finished computation of 3 references, err: [Inf, 0.784599264146611, 0.35041315328804784, 0.3416247233280545, 0.3406274234210034] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9912264293256088] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9912264293256088, 0.4214083004349608] ***
*** starting iteration: 2; err: [Inf, 0.9912264293256088, 0.4214083004349608] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9912264293256088, 0.4214083004349608, 0.39587720178887037] ***
*** starting iteration: 3; err: [Inf, 0.9912264293256088, 0.4214083004349608, 0.39587720178887037] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9912264293256088, 0.4214083004349608, 0.39587720178887037, 0.39070474112081643] ***
*** starting iteration: 4; err: [Inf, 0.9912264293256088, 0.4214083004349608, 0.39587720178887037, 0.39070474112081643] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9912264293256088, 0.4214083004349608, 0.39587720178887037, 0.39070474112081643, 0.38769087787355644] ***
*** starting iteration: 5; err: [Inf, 0.9912264293256088, 0.4214083004349608, 0.39587720178887037, 0.39070474112081643, 0.38769087787355644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9912264293256088, 0.4214083004349608, 0.39587720178887037, 0.39070474112081643, 0.38769087787355644, 0.3856650855049638] ***
*** starting iteration: 6; err: [Inf, 0.9912264293256088, 0.4214083004349608, 0.39587720178887037, 0.39070474112081643, 0.38769087787355644, 0.3856650855049638] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9912264293256088, 0.4214083004349608, 0.39587720178887037, 0.39070474112081643, 0.38769087787355644, 0.3856650855049638, 0.38437108742271664] ***
*** starting iteration: 7; err: [Inf, 0.9912264293256088, 0.4214083004349608, 0.39587720178887037, 0.39070474112081643, 0.38769087787355644, 0.3856650855049638, 0.38437108742271664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9912264293256088, 0.4214083004349608, 0.39587720178887037, 0.39070474112081643, 0.38769087787355644, 0.3856650855049638, 0.38437108742271664, 0.38437108742271664] ***
*** finished computation of 3 references, err: [Inf, 0.9912264293256088, 0.4214083004349608, 0.39587720178887037, 0.39070474112081643, 0.38769087787355644, 0.3856650855049638, 0.38437108742271664, 0.38437108742271664] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 6]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 26]]
** centroid: 3, normalized-entropy: 0.6962122601251459, [(2, 6), (3, 26)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8330918238079021] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8330918238079021, 0.38544539827480323] ***
*** starting iteration: 2; err: [Inf, 0.8330918238079021, 0.38544539827480323] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8330918238079021, 0.38544539827480323, 0.36515858037434046] ***
*** starting iteration: 3; err: [Inf, 0.8330918238079021, 0.38544539827480323, 0.36515858037434046] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8330918238079021, 0.38544539827480323, 0.36515858037434046, 0.3577272614966581] ***
*** finished computation of 3 references, err: [Inf, 0.8330918238079021, 0.38544539827480323, 0.36515858037434046, 0.3577272614966581] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 12]]
** centroid: 1, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7035046304706735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7035046304706735, 0.3598793498955816] ***
*** starting iteration: 2; err: [Inf, 0.7035046304706735, 0.3598793498955816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7035046304706735, 0.3598793498955816, 0.3428810551640272] ***
*** starting iteration: 3; err: [Inf, 0.7035046304706735, 0.3598793498955816, 0.3428810551640272] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7035046304706735, 0.3598793498955816, 0.3428810551640272, 0.3406274234210034] ***
*** finished computation of 3 references, err: [Inf, 0.7035046304706735, 0.3598793498955816, 0.3428810551640272, 0.3406274234210034] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 3, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6742268794598325] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6742268794598325, 0.3842675639737959] ***
*** starting iteration: 2; err: [Inf, 0.6742268794598325, 0.3842675639737959] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6742268794598325, 0.3842675639737959, 0.38156419571460864] ***
*** starting iteration: 3; err: [Inf, 0.6742268794598325, 0.3842675639737959, 0.38156419571460864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6742268794598325, 0.3842675639737959, 0.38156419571460864, 0.3810024460382651] ***
*** finished computation of 3 references, err: [Inf, 0.6742268794598325, 0.3842675639737959, 0.38156419571460864, 0.3810024460382651] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 31]]
** centroid: 1, normalized-entropy: 0.8756633923230399, [(2, 13), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 3, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 14)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 15
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.6210999990281697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6210999990281697, 0.3489132542964856] ***
*** starting iteration: 2; err: [Inf, 0.6210999990281697, 0.3489132542964856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6210999990281697, 0.3489132542964856, 0.30606684112444266] ***
*** starting iteration: 3; err: [Inf, 0.6210999990281697, 0.3489132542964856, 0.30606684112444266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6210999990281697, 0.3489132542964856, 0.30606684112444266, 0.28341052546000045] ***
*** starting iteration: 4; err: [Inf, 0.6210999990281697, 0.3489132542964856, 0.30606684112444266, 0.28341052546000045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6210999990281697, 0.3489132542964856, 0.30606684112444266, 0.28341052546000045, 0.2668054913442216] ***
*** starting iteration: 5; err: [Inf, 0.6210999990281697, 0.3489132542964856, 0.30606684112444266, 0.28341052546000045, 0.2668054913442216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6210999990281697, 0.3489132542964856, 0.30606684112444266, 0.28341052546000045, 0.2668054913442216, 0.25990948893139415] ***
*** starting iteration: 6; err: [Inf, 0.6210999990281697, 0.3489132542964856, 0.30606684112444266, 0.28341052546000045, 0.2668054913442216, 0.25990948893139415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6210999990281697, 0.3489132542964856, 0.30606684112444266, 0.28341052546000045, 0.2668054913442216, 0.25990948893139415, 0.25857605649912935] ***
*** starting iteration: 7; err: [Inf, 0.6210999990281697, 0.3489132542964856, 0.30606684112444266, 0.28341052546000045, 0.2668054913442216, 0.25990948893139415, 0.25857605649912935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6210999990281697, 0.3489132542964856, 0.30606684112444266, 0.28341052546000045, 0.2668054913442216, 0.25990948893139415, 0.25857605649912935, 0.25857605649912935] ***
*** finished computation of 7 references, err: [Inf, 0.6210999990281697, 0.3489132542964856, 0.30606684112444266, 0.28341052546000045, 0.2668054913442216, 0.25990948893139415, 0.25857605649912935, 0.25857605649912935] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 4]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 12), (3, 4)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 2, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 6, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8129999951978236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8129999951978236, 0.46089776437442437] ***
*** starting iteration: 2; err: [Inf, 0.8129999951978236, 0.46089776437442437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8129999951978236, 0.46089776437442437, 0.4464224854806544] ***
*** starting iteration: 3; err: [Inf, 0.8129999951978236, 0.46089776437442437, 0.4464224854806544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8129999951978236, 0.46089776437442437, 0.4464224854806544, 0.4211291897444868] ***
*** starting iteration: 4; err: [Inf, 0.8129999951978236, 0.46089776437442437, 0.4464224854806544, 0.4211291897444868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8129999951978236, 0.46089776437442437, 0.4464224854806544, 0.4211291897444868, 0.40343839969955] ***
*** starting iteration: 5; err: [Inf, 0.8129999951978236, 0.46089776437442437, 0.4464224854806544, 0.4211291897444868, 0.40343839969955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8129999951978236, 0.46089776437442437, 0.4464224854806544, 0.4211291897444868, 0.40343839969955, 0.4009324968954452] ***
*** starting iteration: 6; err: [Inf, 0.8129999951978236, 0.46089776437442437, 0.4464224854806544, 0.4211291897444868, 0.40343839969955, 0.4009324968954452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8129999951978236, 0.46089776437442437, 0.4464224854806544, 0.4211291897444868, 0.40343839969955, 0.4009324968954452, 0.4009324968954452] ***
*** finished computation of 7 references, err: [Inf, 0.8129999951978236, 0.46089776437442437, 0.4464224854806544, 0.4211291897444868, 0.40343839969955, 0.4009324968954452, 0.4009324968954452] ***
*** center 1: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 2, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6645000062341796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6645000062341796, 0.3373889221583603] ***
*** starting iteration: 2; err: [Inf, 0.6645000062341796, 0.3373889221583603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6645000062341796, 0.3373889221583603, 0.3100440363440452] ***
*** starting iteration: 3; err: [Inf, 0.6645000062341796, 0.3373889221583603, 0.3100440363440452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6645000062341796, 0.3373889221583603, 0.3100440363440452, 0.27541116164790946] ***
*** starting iteration: 4; err: [Inf, 0.6645000062341796, 0.3373889221583603, 0.3100440363440452, 0.27541116164790946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6645000062341796, 0.3373889221583603, 0.3100440363440452, 0.27541116164790946, 0.2430934499606687] ***
*** starting iteration: 5; err: [Inf, 0.6645000062341796, 0.3373889221583603, 0.3100440363440452, 0.27541116164790946, 0.2430934499606687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6645000062341796, 0.3373889221583603, 0.3100440363440452, 0.27541116164790946, 0.2430934499606687, 0.23531301677835784] ***
*** starting iteration: 6; err: [Inf, 0.6645000062341796, 0.3373889221583603, 0.3100440363440452, 0.27541116164790946, 0.2430934499606687, 0.23531301677835784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6645000062341796, 0.3373889221583603, 0.3100440363440452, 0.27541116164790946, 0.2430934499606687, 0.23531301677835784, 0.23501645861103668] ***
*** finished computation of 7 references, err: [Inf, 0.6645000062341796, 0.3373889221583603, 0.3100440363440452, 0.27541116164790946, 0.2430934499606687, 0.23531301677835784, 0.23501645861103668] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 8]]
** centroid: 4, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 15
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 16
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.7522000039879161] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7522000039879161, 0.3309097132319783] ***
*** finished computation of 7 references, err: [Inf, 0.7522000039879161, 0.3309097132319783] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 18]]
** centroid: 4, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 27, 11]]
** centroid: 7, normalized-entropy: 0.8680403986166402, [(2, 27), (3, 11)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4509000115952768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4509000115952768, 0.35560139867146334] ***
*** finished computation of 7 references, err: [Inf, 1.4509000115952768, 0.35560139867146334] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.652300026392579] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.652300026392579, 0.6641990150369245] ***
*** finished computation of 7 references, err: [Inf, 2.652300026392579, 0.6641990150369245] ***
*** center 1: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 25, 31]]
** centroid: 5, normalized-entropy: 0.9917033083725819, [(2, 25), (3, 31)]
*** center 6: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 7, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 17
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.5609288406330439] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5609288406330439, 0.23620087585116545] ***
*** starting iteration: 2; err: [Inf, 0.5609288406330439, 0.23620087585116545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5609288406330439, 0.23620087585116545, 0.2053432626720855] ***
*** starting iteration: 3; err: [Inf, 0.5609288406330439, 0.23620087585116545, 0.2053432626720855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5609288406330439, 0.23620087585116545, 0.2053432626720855, 0.1814059351227878] ***
*** finished computation of 7 references, err: [Inf, 0.5609288406330439, 0.23620087585116545, 0.2053432626720855, 0.1814059351227878] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9548780936977568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9548780936977568, 0.3050570521276482] ***
*** starting iteration: 2; err: [Inf, 0.9548780936977568, 0.3050570521276482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9548780936977568, 0.3050570521276482, 0.24570330215259958] ***
*** starting iteration: 3; err: [Inf, 0.9548780936977568, 0.3050570521276482, 0.24570330215259958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9548780936977568, 0.3050570521276482, 0.24570330215259958, 0.22632301876535124] ***
*** finished computation of 7 references, err: [Inf, 0.9548780936977568, 0.3050570521276482, 0.24570330215259958, 0.22632301876535124] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 5, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 9, 8]]
** centroid: 7, normalized-entropy: 0.9975025463691153, [(2, 9), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.394840024983751] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.394840024983751, 0.4627536803335229] ***
*** starting iteration: 2; err: [Inf, 2.394840024983751, 0.4627536803335229] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.394840024983751, 0.4627536803335229, 0.3489768218505] ***
*** starting iteration: 3; err: [Inf, 2.394840024983751, 0.4627536803335229, 0.3489768218505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.394840024983751, 0.4627536803335229, 0.3489768218505, 0.33217551306874243] ***
*** finished computation of 7 references, err: [Inf, 2.394840024983751, 0.4627536803335229, 0.3489768218505, 0.33217551306874243] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 31]]
** centroid: 5, normalized-entropy: 0.9108783787500366, [(2, 15), (3, 31)]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 17
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 17
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 17
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 17
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1), 0.9666666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.076923076923077, 3.53076923076923, 1.5230769230769232, 0.2846153846153846], [5.7058823529411775, 2.6117647058823525, 4.0058823529411764, 1.1941176470588237], [5.471428571428571, 3.9999999999999996, 1.5142857142857145, 0.2857142857142857], [7.004347826086957, 3.1565217391304343, 5.886956521739131, 2.152173913043478], [6.392307692307693, 3.015384615384615, 4.607692307692307, 1.4615384615384615], [6.2, 3.0, 4.9, 1.85], [6.063636363636363, 2.6818181818181817, 5.090909090909091, 1.8272727272727274], [4.691666666666666, 3.091666666666667, 1.3833333333333335, 0.19166666666666668]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 1, 3, 2, 3, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.128571428571429, 3.1357142857142857, 6.064285714285716, 2.0642857142857145], [6.56, 3.0799999999999996, 4.619999999999999, 1.4599999999999997], [5.025000000000001, 3.391666666666668, 1.4444444444444442, 0.24444444444444452], [6.455555555555555, 3.033333333333333, 5.333333333333334, 2.0333333333333337], [6.266666666666667, 2.3333333333333335, 4.6000000000000005, 1.4333333333333333], [6.0, 2.6571428571428575, 5.1, 1.7], [5.499999999999999, 2.58125, 3.8875, 1.2437500000000004], [5.872727272727272, 3.0, 4.472727272727273, 1.4727272727272729]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 1, 3, 2, 3, 2, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.706896551724139, 2.986206896551724, 5.562068965517242, 2.044827586206896], [6.145833333333332, 2.904166666666667, 4.479166666666667, 1.3791666666666664], [5.811111111111111, 2.6888888888888887, 4.944444444444444, 1.9333333333333336], [5.233333333333333, 2.3, 3.6, 1.0666666666666667], [5.222222222222221, 3.6111111111111103, 1.5222222222222224, 0.27222222222222225], [4.5, 3.0999999999999996, 1.2875, 0.21250000000000002], [4.8500000000000005, 3.1500000000000004, 1.6166666666666665, 0.16666666666666666], [5.466666666666666, 2.6666666666666665, 3.3666666666666667, 1.1333333333333335]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 2, 1, 1, 1, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[63, 10, 8, 1, 4, 33, 29, 5, 15, 19, 18, 39, 26, 27, 29, 1, 27, 42, 40, 50, 31, 25, 16, 10, 42, 2, 6, 26, 30, 42, 29, 45, 31, 25, 8, 32, 30, 43, 29, 1, 32, 27, 36, 36, 50, 39, 34, 37, 1, 35, 22, 40, 11, 44, 2, 25, 24, 19, 17, 31, 49, 30, 37, 45, 30, 35, 27, 25, 35, 34, 41, 24, 43, 34, 38, 36, 34, 25, 47, 1, 33, 8, 24, 33, 48, 1, 20, 29, 1, 33, 28, 23, 50, 46, 18, 25, 19, 27, 32, 28, 35, 21, 33, 47, 39, 29, 25, 41, 67, 22, 54, 27, 39, 38, 46, 56, 31, 26, 16, 22, 44, 32, 32, 32, 30, 38, 23, 34, 29, 1, 9, 38, 21, 28, 32, 42, 31, 37, 30, 53, 56, 13, 50, 54, 25, 29, 54, 30, 51, 37, 31, 59, 39, 42, 28, 67, 52, 39, 31, 45, 54, 36, 49, 39, 49, 51, 48, 32, 63, 41, 28, 32, 41, 36, 56, 1, 14, 47, 23, 36, 35, 48, 55, 22, 32, 54, 30, 7, 17, 35, 37, 35, 2, 38, 19, 59, 40, 36, 41, 48, 1, 34, 35, 56, 22, 2, 35, 24, 22, 49, 33, 37, 26, 62, 44, 39, 47, 24, 35, 40, 32, 27, 25, 22, 27, 36, 36, 28, 48, 49, 45, 42, 61, 24, 29, 34, 28, 53, 37, 27, 53, 39, 48, 34, 53, 101, 36, 43, 43, 45, 47, 37, 30, 39, 39, 34, 34, 47, 2, 36, 37, 43, 34, 34, 31, 12, 24, 37, 35, 52, 26, 49, 26, 59, 51, 22, 44, 22, 34, 30, 32, 1, 48, 40, 39, 36, 43, 27, 30, 59, 48, 4, 34, 19, 39, 30, 66, 33, 32, 46]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6300000000000001, speedup = 0.34129573552776493, eval_ratio = 0.041669)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.4045138888888892,"f1":null,"seconds":7.227808237075806e-5,"exhaustive_search_seconds":0.0003364458680152893,"evaluations":338.703125,"distances_sum":1710.0270218292596}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5807291666666666,"recall":0.5807291666666666,"f1":null,"seconds":0.00010749511420726776,"exhaustive_search_seconds":0.0003364458680152893,"evaluations":379.8359375,"distances_sum":1646.8452311589429}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6840277777777772,"recall":0.6840277777777772,"f1":0.6840277777777772,"seconds":0.0001411736011505127,"exhaustive_search_seconds":0.0003364458680152893,"evaluations":419.3203125,"distances_sum":1599.4292085503696}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7508680555555547,"recall":0.7508680555555547,"f1":0.7508680555555547,"seconds":0.00017997808754444122,"exhaustive_search_seconds":0.0003364458680152893,"evaluations":457.875,"distances_sum":1579.2931749459963}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7977430555555547,"recall":0.7977430555555547,"f1":0.7977430555555547,"seconds":0.00021180324256420135,"exhaustive_search_seconds":0.0003364458680152893,"evaluations":496.5234375,"distances_sum":1564.9759382270988}
KCenters.DeloneInvIndex> reached performance {"precision":0.8376736111111103,"recall":0.8376736111111103,"f1":0.8376736111111103,"seconds":0.0002443995326757431,"exhaustive_search_seconds":0.0003364458680152893,"evaluations":536.53125,"distances_sum":1555.6928291720228}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8210000000000001, speedup = 1.432876738775786, eval_ratio = 0.053804)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
