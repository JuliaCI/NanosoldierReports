Julia Version 1.5.0-DEV.77
Commit 60b60f101e (2020-01-16 15:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed ArgCheck ─────────── v1.0.1
 Installed InplaceOps ───────── v0.3.0
 Installed ProgressMeter ────── v1.2.0
 Installed Requires ─────────── v1.0.0
 Installed Rmath ────────────── v0.6.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed MacroTools ───────── v0.5.3
 Installed SpecialFunctions ─── v0.9.0
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed Parameters ───────── v0.12.0
 Installed StaticArrays ─────── v0.12.1
 Installed OrderedCollections ─ v1.1.0
 Installed BinaryProvider ───── v0.5.8
 Installed DataStructures ───── v0.17.9
 Installed StatsFuns ────────── v0.9.3
 Installed LazyArrays ───────── v0.14.11
 Installed DataAPI ──────────── v1.1.0
 Installed FillArrays ───────── v0.8.4
 Installed ArrayLayouts ─────── v0.1.5
 Installed Missings ─────────── v0.4.3
 Installed StatsBase ────────── v0.32.0
 Installed SortingAlgorithms ── v0.3.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_y2gkWs/Project.toml`
 [no changes]
  Updating `/tmp/jl_y2gkWs/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed RecipesBase ───────────────── v0.7.0
 Installed Bijectors ─────────────────── v0.5.2
 Installed Zygote ────────────────────── v0.4.6
 Installed ForwardDiff ───────────────── v0.10.9
 Installed Distributions ─────────────── v0.21.12
 Installed Arpack ────────────────────── v0.4.0
 Installed UnicodePlots ──────────────── v1.1.0
 Installed QuadGK ────────────────────── v2.3.1
 Installed RecursiveArrayTools ───────── v2.0.0
 Installed IterativeSolvers ──────────── v0.8.1
 Installed OrdinaryDiffEq ────────────── v5.27.1
 Installed PooledArrays ──────────────── v0.5.3
 Installed Turing ────────────────────── v0.8.2
 Installed ChainRulesCore ────────────── v0.4.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed TableTraits ───────────────── v1.0.0
 Installed CommonSubexpressions ──────── v0.2.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed MCMCChains ────────────────── v1.0.1
 Installed IRTools ───────────────────── v0.3.0
 Installed Optim ─────────────────────── v0.19.7
 Installed LogDensityProblems ────────── v0.10.1
 Installed TreeViews ─────────────────── v0.3.0
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed DiffRules ─────────────────── v1.0.0
 Installed DynamicPPL ────────────────── v0.1.1
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed Tables ────────────────────── v0.2.11
 Installed Combinatorics ─────────────── v0.7.0
 Installed DocStringExtensions ───────── v0.8.1
 Installed MuladdMacro ───────────────── v0.2.2
 Installed Tracker ───────────────────── v0.2.6
 Installed LightGraphs ───────────────── v1.3.0
 Installed Showoff ───────────────────── v0.3.1
 Installed FunctionWrappers ──────────── v1.0.0
 Installed Inflate ───────────────────── v0.1.1
 Installed DiffEqBase ────────────────── v6.12.2
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed IterTools ─────────────────── v1.3.0
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed BenchmarkTools ────────────── v0.4.3
 Installed DiffResults ───────────────── v1.0.2
 Installed Adapt ─────────────────────── v1.0.0
 Installed AxisArrays ────────────────── v0.4.0
 Installed Ratios ────────────────────── v0.3.1
 Installed PositiveFactorizations ────── v0.2.3
 Installed RecursiveFactorization ────── v0.1.0
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed NaNMath ───────────────────── v0.3.3
 Installed Libtask ───────────────────── v0.3.1
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed JSON ──────────────────────── v0.21.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed NLSolversBase ─────────────── v7.5.0
 Installed TransformVariables ────────── v0.3.9
 Installed GenericSVD ────────────────── v0.2.2
 Installed Calculus ──────────────────── v0.5.1
 Installed ArrayInterface ────────────── v2.3.1
 Installed DataFrames ────────────────── v0.20.0
 Installed DiffEqDiffTools ───────────── v1.7.0
 Installed ExponentialUtilities ──────── v1.6.0
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed FFTW ──────────────────────── v1.2.0
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed Parsers ───────────────────── v0.3.10
 Installed CategoricalArrays ─────────── v0.7.7
 Installed DistributionsAD ───────────── v0.1.4
 Installed ZygoteRules ───────────────── v0.2.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed PDMats ────────────────────── v0.9.10
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed SparseDiffTools ───────────── v1.2.0
 Installed Reexport ──────────────────── v0.2.0
 Installed LineSearches ──────────────── v7.0.1
 Installed Roots ─────────────────────── v0.8.4
 Installed NNlib ─────────────────────── v0.6.4
 Installed OffsetArrays ──────────────── v0.11.4
 Installed IntervalSets ──────────────── v0.3.2
 Installed KernelDensity ─────────────── v0.5.1
 Installed RangeArrays ───────────────── v0.3.2
 Installed Polynomials ───────────────── v0.6.0
 Installed SimpleTraits ──────────────── v0.9.1
 Installed Interpolations ────────────── v0.12.6
 Installed Compat ────────────────────── v2.2.0
  Updating `/tmp/jl_RRCqhx/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.21.12
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [fce5fe82] + Turing v0.8.2
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_RRCqhx/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.0
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [49dc2e85] + Calculus v0.5.1
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.4.0
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.12.2
  [01453d9d] + DiffEqDiffTools v1.7.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.21.12
  [ced4e74d] + DistributionsAD v0.1.4
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.0
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.6
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.1
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.5.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v0.11.4
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.19.7
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [90014a1f] + PDMats v0.9.10
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.0
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.2.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.2
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_eg7XGQ/Project.toml`
 [no changes]
  Updating `/tmp/jl_eg7XGQ/Manifest.toml`
 [no changes]
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_HuZEiM/Project.toml`
 [no changes]
  Updating `/tmp/jl_HuZEiM/Manifest.toml`
 [no changes]
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_aIW9tK/Project.toml`
 [no changes]
  Updating `/tmp/jl_aIW9tK/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_RRCqhx/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.21.12
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.27.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.2
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.215493969
│   t_steps = 0.009110095
└   t_step / t_steps = 23.654415129589758
Sampling  0%|                               |  ETA: 5:31:28[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.3642470856740104
  log_density:                   -10.045303937188773
  hamiltonian_energy:            11.835841913240841
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  2.7983511398034384
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███                            |  ETA: 0:00:24[K
  iterations:                    1165
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.9248471477700493
  log_density:                   -13.792093675171445
  hamiltonian_energy:            19.01380378795383
  hamiltonian_energy_error:      -0.18832637694337606
  max_hamiltonian_energy_error:  0.46545373009122315
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8513334222637742
  nom_step_size:                 0.8513334222637742
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.2590909860173214, 1.0438 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▉                           |  ETA: 0:00:18[K
  iterations:                    1497
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8426742288053684
  log_density:                   -15.109942842265845
  hamiltonian_energy:            22.78050258269674
  hamiltonian_energy_error:      -0.001709839521076617
  max_hamiltonian_energy_error:  0.3427349652761684
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6747300528075623
  nom_step_size:                 0.6747300528075623
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.2590909860173214, 1.0438 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▌                          |  ETA: 0:00:16[K
  iterations:                    1735
  n_steps:                       27
  is_accept:                     true
  acceptance_rate:               0.9723491910187108
  log_density:                   -13.646233875815152
  hamiltonian_energy:            16.949832669754596
  hamiltonian_energy_error:      -0.12288380017677625
  max_hamiltonian_energy_error:  -0.6789196786194651
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8776646523296482
  nom_step_size:                 0.8776646523296482
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.2590909860173214, 1.0438 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▏                         |  ETA: 0:00:14[K
  iterations:                    1999
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8146549327990659
  log_density:                   -10.340584097016635
  hamiltonian_energy:            14.269356703625865
  hamiltonian_energy_error:      -0.16386550474638817
  max_hamiltonian_energy_error:  0.43740076270192496
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8643210345004115
  nom_step_size:                 0.8643210345004115
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▎                        |  ETA: 0:00:12[K
  iterations:                    2405
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9762108821494573
  log_density:                   -12.792271566053914
  hamiltonian_energy:            17.23067731312731
  hamiltonian_energy_error:      -0.17273593758949346
  max_hamiltonian_energy_error:  -0.2203069996239364
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▎                       |  ETA: 0:00:10[K
  iterations:                    2821
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.585099759558709
  log_density:                   -18.065778141577848
  hamiltonian_energy:            20.32098079026481
  hamiltonian_energy_error:      0.8216241262587722
  max_hamiltonian_energy_error:  0.8216241262587722
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▍                      |  ETA: 0:00:08[K
  iterations:                    3258
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8855592280950267
  log_density:                   -15.845630271318557
  hamiltonian_energy:            21.93227781239409
  hamiltonian_energy_error:      -0.10697723630154599
  max_hamiltonian_energy_error:  -0.6833824364807093
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▋                     |  ETA: 0:00:07[K
  iterations:                    3712
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7382996757467463
  log_density:                   -16.26715926502645
  hamiltonian_energy:            19.346390501514325
  hamiltonian_energy_error:      0.5335112073807409
  max_hamiltonian_energy_error:  0.5854783668238781
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▊                    |  ETA: 0:00:06[K
  iterations:                    4183
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7949566694401656
  log_density:                   -14.509702079977059
  hamiltonian_energy:            16.607180204941326
  hamiltonian_energy_error:      0.3700577024026437
  max_hamiltonian_energy_error:  0.3700577024026437
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████▏                  |  ETA: 0:00:05[K
  iterations:                    4705
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8425930523202169
  log_density:                   -13.983813618799683
  hamiltonian_energy:            19.29116356604077
  hamiltonian_energy_error:      0.0060325589563454685
  max_hamiltonian_energy_error:  0.5803462277458209
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▍                 |  ETA: 0:00:05[K
  iterations:                    5169
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8337011359438976
  log_density:                   -16.042680939093543
  hamiltonian_energy:            19.782150269536274
  hamiltonian_energy_error:      0.34058352623165433
  max_hamiltonian_energy_error:  0.34058352623165433
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▋                |  ETA: 0:00:04[K
  iterations:                    5661
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.4613258100172056
  log_density:                   -14.791326541000377
  hamiltonian_energy:            18.58118822610752
  hamiltonian_energy_error:      0.6811545802343595
  max_hamiltonian_energy_error:  1.2051897370127058
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▍               |  ETA: 0:00:04[K
  iterations:                    5960
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7439486035660953
  log_density:                   -15.486340030093334
  hamiltonian_energy:            17.72785181589248
  hamiltonian_energy_error:      0.5532022652160045
  max_hamiltonian_energy_error:  0.5901218787174507
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████▏              |  ETA: 0:00:04[K
  iterations:                    6236
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8261160278126622
  log_density:                   -15.225824043555914
  hamiltonian_energy:            18.187640557350633
  hamiltonian_energy_error:      0.35243215189272803
  max_hamiltonian_energy_error:  0.35243215189272803
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▊              |  ETA: 0:00:03[K
  iterations:                    6497
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8553559613839354
  log_density:                   -12.792736893980376
  hamiltonian_energy:            19.015764310269937
  hamiltonian_energy_error:      -0.14385198163849466
  max_hamiltonian_energy_error:  0.38636303068499345
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|██████████████████             |  ETA: 0:00:03[K
  iterations:                    6980
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8564766917554881
  log_density:                   -13.892155110452993
  hamiltonian_energy:            19.596343697204723
  hamiltonian_energy_error:      -0.003917434826107069
  max_hamiltonian_energy_error:  0.3045046841467247
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|██████████████████▉            |  ETA: 0:00:03[K
  iterations:                    7308
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.78586713656022
  hamiltonian_energy:            21.58797995577987
  hamiltonian_energy_error:      -0.39410072691964615
  max_hamiltonian_energy_error:  -0.4470326898093475
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████▏          |  ETA: 0:00:02[K
  iterations:                    7771
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9954723049957588
  log_density:                   -14.06961522691417
  hamiltonian_energy:            18.414574029927177
  hamiltonian_energy_error:      -0.07026586329635975
  max_hamiltonian_energy_error:  -0.17761323981319066
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████          |  ETA: 0:00:02[K
  iterations:                    8119
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9978957170180729
  log_density:                   -16.46530964766375
  hamiltonian_energy:            23.16196813300061
  hamiltonian_energy_error:      -0.2917251741255562
  max_hamiltonian_energy_error:  -0.523084780619449
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████▏        |  ETA: 0:00:02[K
  iterations:                    8548
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.97616750473795
  log_density:                   -13.559320562243162
  hamiltonian_energy:            19.024765384048095
  hamiltonian_energy_error:      -0.20678897100966154
  max_hamiltonian_energy_error:  -0.22221228671245186
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▎       |  ETA: 0:00:02[K
  iterations:                    9006
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9866893202989672
  log_density:                   -13.989280270740792
  hamiltonian_energy:            18.969223129394923
  hamiltonian_energy_error:      -0.11587126907274126
  max_hamiltonian_energy_error:  -0.13654345054996853
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▍      |  ETA: 0:00:01[K
  iterations:                    9450
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8724658940388449
  log_density:                   -13.267436426296005
  hamiltonian_energy:            18.268762259715725
  hamiltonian_energy_error:      -0.06499924870735896
  max_hamiltonian_energy_error:  0.40165319065260263
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▊     |  ETA: 0:00:01[K
  iterations:                    9948
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9948820459179838
  log_density:                   -14.490626922281319
  hamiltonian_energy:            18.88337461045074
  hamiltonian_energy_error:      -0.12024153137231153
  max_hamiltonian_energy_error:  -0.30199465538375136
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▊    |  ETA: 0:00:01[K
  iterations:                    10374
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8774310234818675
  log_density:                   -12.293947752563025
  hamiltonian_energy:            14.414572262551289
  hamiltonian_energy_error:      0.15367988256783782
  max_hamiltonian_energy_error:  0.26100758924036427
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 90%|████████████████████████████   |  ETA: 0:00:01[K
  iterations:                    10821
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.844375890851882
  log_density:                   -12.864307316639326
  hamiltonian_energy:            17.871165772074193
  hamiltonian_energy_error:      0.010030002619156875
  max_hamiltonian_energy_error:  0.3152357596914186
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▏ |  ETA: 0:00:00[K
  iterations:                    11281
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.948663426858964
  log_density:                   -12.758896773155223
  hamiltonian_energy:            18.427304729672855
  hamiltonian_energy_error:      -0.35736061392924157
  max_hamiltonian_energy_error:  -0.44882600882734636
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▍|  ETA: 0:00:00[K
  iterations:                    11750
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7950531966699843
  log_density:                   -12.433969289047356
  hamiltonian_energy:            19.12572196435827
  hamiltonian_energy_error:      -0.10679968512584281
  max_hamiltonian_energy_error:  0.5342298606011404
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.524548217564789
  hamiltonian_energy:            17.214282025764625
  hamiltonian_energy_error:      -0.5476253088303444
  max_hamiltonian_energy_error:  -0.5476253088303444
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7506419848132231
  nom_step_size:                 0.7506419848132231
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0705244335661255, 1.0041 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.285939465 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0705244335661255, 1.0041 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.751), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0971481720543181
└   average_acceptance_rate = 0.8564080903815566
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.158540044 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢣⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠘⡄│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢣│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠱⡀⠀⠀⠀⠀⠀⡰⠣⡀⡎⠀⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠀⠱⡠⠊⠉⠢⡜⠀⠀⠈⠃⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⣀⣀⣀⡀⠀⣀⠤⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⡸⢣⠀⠀⡠⠔⠉⠀⠀⠀⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣣⠀⠀⠀⡰⠁⠀⢣⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⢵⡤⠞⠃⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
