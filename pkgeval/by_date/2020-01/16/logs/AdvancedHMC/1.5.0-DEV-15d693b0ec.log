Julia Version 1.5.0-DEV.71
Commit 15d693b0ec (2020-01-15 18:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed InplaceOps ───────── v0.3.0
 Installed ArrayLayouts ─────── v0.1.5
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed OrderedCollections ─ v1.1.0
 Installed Parameters ───────── v0.12.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed StatsFuns ────────── v0.9.3
 Installed LazyArrays ───────── v0.14.11
 Installed DataAPI ──────────── v1.1.0
 Installed SortingAlgorithms ── v0.3.1
 Installed ArgCheck ─────────── v1.0.1
 Installed DataStructures ───── v0.17.9
 Installed BinaryProvider ───── v0.5.8
 Installed Requires ─────────── v1.0.0
 Installed ProgressMeter ────── v1.2.0
 Installed Missings ─────────── v0.4.3
 Installed Rmath ────────────── v0.6.0
 Installed FillArrays ───────── v0.8.4
 Installed SpecialFunctions ─── v0.9.0
 Installed MacroTools ───────── v0.5.3
 Installed StatsBase ────────── v0.32.0
 Installed StaticArrays ─────── v0.12.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_UasPyn/Project.toml`
 [no changes]
  Updating `/tmp/jl_UasPyn/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed ForwardDiff ───────────────── v0.10.9
 Installed IterTools ─────────────────── v1.3.0
 Installed Bijectors ─────────────────── v0.5.2
 Installed Distributions ─────────────── v0.21.12
 Installed UnicodePlots ──────────────── v1.1.0
 Installed SimpleTraits ──────────────── v0.9.1
 Installed PDMats ────────────────────── v0.9.10
 Installed Zygote ────────────────────── v0.4.6
 Installed OrdinaryDiffEq ────────────── v5.27.1
 Installed OffsetArrays ──────────────── v0.11.4
 Installed Tracker ───────────────────── v0.2.6
 Installed Compat ────────────────────── v2.2.0
 Installed DocStringExtensions ───────── v0.8.1
 Installed Turing ────────────────────── v0.8.2
 Installed DiffResults ───────────────── v1.0.2
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed IntervalSets ──────────────── v0.3.2
 Installed InvertedIndices ───────────── v1.0.0
 Installed Roots ─────────────────────── v0.8.4
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed DistributionsAD ───────────── v0.1.4
 Installed Libtask ───────────────────── v0.3.1
 Installed Calculus ──────────────────── v0.5.1
 Installed RecipesBase ───────────────── v0.7.0
 Installed LogDensityProblems ────────── v0.10.1
 Installed BenchmarkTools ────────────── v0.4.3
 Installed PooledArrays ──────────────── v0.5.3
 Installed Adapt ─────────────────────── v1.0.0
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed ArrayInterface ────────────── v2.3.1
 Installed KernelDensity ─────────────── v0.5.1
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed DynamicPPL ────────────────── v0.1.1
 Installed ExponentialUtilities ──────── v1.6.0
 Installed IRTools ───────────────────── v0.3.0
 Installed Reexport ──────────────────── v0.2.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed AxisArrays ────────────────── v0.4.0
 Installed ChainRulesCore ────────────── v0.4.0
 Installed GenericSVD ────────────────── v0.2.2
 Installed NNlib ─────────────────────── v0.6.4
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed Arpack ────────────────────── v0.4.0
 Installed PositiveFactorizations ────── v0.2.3
 Installed LightGraphs ───────────────── v1.3.0
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed RecursiveArrayTools ───────── v2.0.0
 Installed Showoff ───────────────────── v0.3.1
 Installed Parsers ───────────────────── v0.3.10
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed TreeViews ─────────────────── v0.3.0
 Installed FFTW ──────────────────────── v1.2.0
 Installed DiffRules ─────────────────── v1.0.0
 Installed MuladdMacro ───────────────── v0.2.2
 Installed Polynomials ───────────────── v0.6.0
 Installed DataFrames ────────────────── v0.20.0
 Installed QuadGK ────────────────────── v2.3.1
 Installed LineSearches ──────────────── v7.0.1
 Installed SparseDiffTools ───────────── v1.2.0
 Installed JSON ──────────────────────── v0.21.0
 Installed NaNMath ───────────────────── v0.3.3
 Installed DiffEqDiffTools ───────────── v1.7.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed RangeArrays ───────────────── v0.3.2
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed ZygoteRules ───────────────── v0.2.0
 Installed MCMCChains ────────────────── v1.0.1
 Installed Tables ────────────────────── v0.2.11
 Installed Ratios ────────────────────── v0.3.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed TableTraits ───────────────── v1.0.0
 Installed CommonSubexpressions ──────── v0.2.0
 Installed IterativeSolvers ──────────── v0.8.1
 Installed Interpolations ────────────── v0.12.6
 Installed Optim ─────────────────────── v0.19.7
 Installed DiffEqBase ────────────────── v6.12.2
 Installed TransformVariables ────────── v0.3.9
 Installed RecursiveFactorization ────── v0.1.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed Inflate ───────────────────── v0.1.1
 Installed NLSolversBase ─────────────── v7.5.0
 Installed Combinatorics ─────────────── v0.7.0
 Installed FunctionWrappers ──────────── v1.0.0
  Updating `/tmp/jl_agxLam/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.21.12
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [fce5fe82] + Turing v0.8.2
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_agxLam/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.0
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [49dc2e85] + Calculus v0.5.1
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.4.0
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.12.2
  [01453d9d] + DiffEqDiffTools v1.7.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.21.12
  [ced4e74d] + DistributionsAD v0.1.4
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.0
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.6
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.1
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.5.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v0.11.4
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.19.7
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [90014a1f] + PDMats v0.9.10
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.0
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.2.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.2
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_yS4DSt/Project.toml`
 [no changes]
  Updating `/tmp/jl_yS4DSt/Manifest.toml`
 [no changes]
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_WWluTf/Project.toml`
 [no changes]
  Updating `/tmp/jl_WWluTf/Manifest.toml`
 [no changes]
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_GoafVd/Project.toml`
 [no changes]
  Updating `/tmp/jl_GoafVd/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_agxLam/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.21.12
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.27.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.2
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.139562438
│   t_steps = 0.006990479
└   t_step / t_steps = 19.96464591339163
Sampling  0%|                               |  ETA: 5:53:01[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.0005365091516342062
  log_density:                   -11.736681815093231
  hamiltonian_energy:            16.966072359858025
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  7.530426938006936
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▉                            |  ETA: 0:00:28[K
  iterations:                    1129
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.9007575332438836
  log_density:                   -12.529125913477717
  hamiltonian_energy:            16.12677888203232
  hamiltonian_energy_error:      0.014239346006011289
  max_hamiltonian_energy_error:  0.27432319659271087
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8459098351007331
  nom_step_size:                 0.8459098351007331
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0713697682142944, 1.1908 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:25[K
  iterations:                    1306
  n_steps:                       27
  is_accept:                     true
  acceptance_rate:               0.9909050288489647
  log_density:                   -11.516267879310927
  hamiltonian_energy:            13.636975498038556
  hamiltonian_energy_error:      -0.140815953912103
  max_hamiltonian_energy_error:  -0.2690971174810599
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8854224856774955
  nom_step_size:                 0.8854224856774955
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0713697682142944, 1.1908 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:21[K
  iterations:                    1556
  n_steps:                       295
  is_accept:                     true
  acceptance_rate:               0.9674610299038593
  log_density:                   -13.375323668442826
  hamiltonian_energy:            19.031146444402857
  hamiltonian_energy_error:      -0.21987307431020398
  max_hamiltonian_energy_error:  -0.37722919539008615
  tree_depth:                    8
  numerical_error:               false
  step_size:                     0.8118189102349487
  nom_step_size:                 0.8118189102349487
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0713697682142944, 1.1908 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▌                          |  ETA: 0:00:19[K
  iterations:                    1757
  n_steps:                       43
  is_accept:                     true
  acceptance_rate:               0.9117321645128111
  log_density:                   -12.037741067580637
  hamiltonian_energy:            15.004571237398347
  hamiltonian_energy_error:      0.04220526809390179
  max_hamiltonian_energy_error:  0.29044294378232216
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8316960051557031
  nom_step_size:                 0.8316960051557031
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0713697682142944, 1.1908 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▏                         |  ETA: 0:00:17[K
  iterations:                    1993
  n_steps:                       55
  is_accept:                     true
  acceptance_rate:               0.9836132312572495
  log_density:                   -19.189984349520675
  hamiltonian_energy:            24.42274059744776
  hamiltonian_energy_error:      0.04426430554752514
  max_hamiltonian_energy_error:  -0.18586045605071178
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.4184189319570208
  nom_step_size:                 0.4184189319570208
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|██████                         |  ETA: 0:00:14[K
  iterations:                    2299
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.837055022307503
  log_density:                   -11.299082640597868
  hamiltonian_energy:            14.143829407923564
  hamiltonian_energy_error:      0.08840540621460846
  max_hamiltonian_energy_error:  0.2573506553765874
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▉                        |  ETA: 0:00:12[K
  iterations:                    2666
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9968385584490547
  log_density:                   -19.11833647970648
  hamiltonian_energy:            25.37637855403647
  hamiltonian_energy_error:      0.022378635030701588
  max_hamiltonian_energy_error:  -0.2840915434624698
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▊                       |  ETA: 0:00:11[K
  iterations:                    2982
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9849628687878573
  log_density:                   -12.686823646059185
  hamiltonian_energy:            17.036340056891163
  hamiltonian_energy_error:      -0.06568039349316024
  max_hamiltonian_energy_error:  -0.1189636604117652
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▌                      |  ETA: 0:00:10[K
  iterations:                    3312
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -10.816517536121236
  hamiltonian_energy:            16.420084032139403
  hamiltonian_energy_error:      -0.5345882615895299
  max_hamiltonian_energy_error:  -0.5779078744811557
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▍                     |  ETA: 0:00:09[K
  iterations:                    3630
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8742558834895217
  log_density:                   -22.358543071333113
  hamiltonian_energy:            31.10384985586319
  hamiltonian_energy_error:      0.2856346222408064
  max_hamiltonian_energy_error:  0.33688328710933035
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 33%|██████████▎                    |  ETA: 0:00:08[K
  iterations:                    3982
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9236519903830162
  log_density:                   -11.842708307402575
  hamiltonian_energy:            15.24065520372842
  hamiltonian_energy_error:      -0.013676102372821575
  max_hamiltonian_energy_error:  0.1553464977629453
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████▏                   |  ETA: 0:00:07[K
  iterations:                    4310
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9785906842930372
  log_density:                   -20.06407317536227
  hamiltonian_energy:            29.85217108883927
  hamiltonian_energy_error:      -0.19439684230138354
  max_hamiltonian_energy_error:  -0.49066334729009853
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████                   |  ETA: 0:00:07[K
  iterations:                    4632
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9915142838742449
  log_density:                   -12.597838886364329
  hamiltonian_energy:            15.229325543207201
  hamiltonian_energy_error:      0.017038483003366522
  max_hamiltonian_energy_error:  -0.07610557702562915
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▊                  |  ETA: 0:00:06[K
  iterations:                    4954
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.690204397851293
  hamiltonian_energy:            21.959238613710568
  hamiltonian_energy_error:      -0.4290261334859373
  max_hamiltonian_energy_error:  -0.8228664778643129
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 44%|█████████████▊                 |  ETA: 0:00:05[K
  iterations:                    5330
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7929510178993502
  log_density:                   -15.270559575166818
  hamiltonian_energy:            22.921145020117972
  hamiltonian_energy_error:      0.08966410625880528
  max_hamiltonian_energy_error:  0.3640668080815459
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▋                |  ETA: 0:00:05[K
  iterations:                    5647
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9988882267304925
  log_density:                   -17.05032749852856
  hamiltonian_energy:            25.22476091043402
  hamiltonian_energy_error:      -0.13005808617977266
  max_hamiltonian_energy_error:  -0.13005808617977266
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▋               |  ETA: 0:00:05[K
  iterations:                    6036
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9046416067592215
  log_density:                   -13.87702524411193
  hamiltonian_energy:            16.03306004631795
  hamiltonian_energy_error:      0.19538795131080633
  max_hamiltonian_energy_error:  0.19538795131080633
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▍              |  ETA: 0:00:04[K
  iterations:                    6359
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9027569137043528
  log_density:                   -10.382147483660857
  hamiltonian_energy:            15.910791010906536
  hamiltonian_energy_error:      -0.21129067508414678
  max_hamiltonian_energy_error:  0.27265640833871174
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▌             |  ETA: 0:00:04[K
  iterations:                    6793
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7716592680548698
  log_density:                   -14.008996969120798
  hamiltonian_energy:            21.029966208467762
  hamiltonian_energy_error:      0.16170118022550284
  max_hamiltonian_energy_error:  0.5728998173078459
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▍            |  ETA: 0:00:03[K
  iterations:                    7125
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8917334578438086
  log_density:                   -14.558824021045467
  hamiltonian_energy:            17.132548223602626
  hamiltonian_energy_error:      0.21573559275455167
  max_hamiltonian_energy_error:  0.22915507842149907
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▍           |  ETA: 0:00:03[K
  iterations:                    7501
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9638462875697856
  log_density:                   -15.143923595422777
  hamiltonian_energy:            18.453888418328745
  hamiltonian_energy_error:      0.10067331941453972
  max_hamiltonian_energy_error:  -0.1261591485618574
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▌          |  ETA: 0:00:03[K
  iterations:                    7941
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.969333656534962
  log_density:                   -12.200230555725746
  hamiltonian_energy:            14.228392323094123
  hamiltonian_energy_error:      0.06509927337691401
  max_hamiltonian_energy_error:  0.08601877161292393
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▍         |  ETA: 0:00:02[K
  iterations:                    8256
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6724970382583685
  log_density:                   -11.293711877304052
  hamiltonian_energy:            20.48027087167362
  hamiltonian_energy_error:      0.0651651490526568
  max_hamiltonian_energy_error:  0.8667403945122416
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▍        |  ETA: 0:00:02[K
  iterations:                    8674
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.856870417226676
  log_density:                   -15.542409256609716
  hamiltonian_energy:            20.247397279469133
  hamiltonian_energy_error:      0.23145269176909977
  max_hamiltonian_energy_error:  0.40369401693130413
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▍       |  ETA: 0:00:02[K
  iterations:                    9041
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8169690688167762
  log_density:                   -10.313931614618369
  hamiltonian_energy:            15.370466348215672
  hamiltonian_energy_error:      -0.01059908528360154
  max_hamiltonian_energy_error:  0.42991247917821696
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▍      |  ETA: 0:00:01[K
  iterations:                    9453
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9177015266135421
  log_density:                   -16.656272869556524
  hamiltonian_energy:            20.01989812339439
  hamiltonian_energy_error:      0.20756764666371552
  max_hamiltonian_energy_error:  0.26130926665252474
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 81%|█████████████████████████▎     |  ETA: 0:00:01[K
  iterations:                    9776
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.368277795231426
  hamiltonian_energy:            18.556637819451872
  hamiltonian_energy_error:      -0.3427470125839456
  max_hamiltonian_energy_error:  -0.3427470125839456
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▎    |  ETA: 0:00:01[K
  iterations:                    10173
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8539351663447109
  log_density:                   -11.736564726640307
  hamiltonian_energy:            20.088615402443786
  hamiltonian_energy_error:      -0.20560643519924682
  max_hamiltonian_energy_error:  0.42707402520883875
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|███████████████████████████    |  ETA: 0:00:01[K
  iterations:                    10474
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8845279266530122
  log_density:                   -12.154730410676382
  hamiltonian_energy:            17.17180512595237
  hamiltonian_energy_error:      -0.040039318376610566
  max_hamiltonian_energy_error:  0.23833547848558823
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 90%|███████████████████████████▉   |  ETA: 0:00:01[K
  iterations:                    10796
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9200496679599415
  log_density:                   -16.46147388709572
  hamiltonian_energy:            22.17060213581078
  hamiltonian_energy_error:      -0.013513843262003888
  max_hamiltonian_energy_error:  -0.3364492604436471
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▌  |  ETA: 0:00:01[K
  iterations:                    11053
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9285960407942022
  log_density:                   -15.129808306040292
  hamiltonian_energy:            19.583298030210166
  hamiltonian_energy_error:      0.08885699256777002
  max_hamiltonian_energy_error:  0.1366033659844561
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▌ |  ETA: 0:00:00[K
  iterations:                    11428
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9932425861525545
  log_density:                   -16.38242799856392
  hamiltonian_energy:            21.36530315911706
  hamiltonian_energy_error:      0.047923939626663525
  max_hamiltonian_energy_error:  -0.1499232374162922
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▍|  ETA: 0:00:00[K
  iterations:                    11744
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9279817142832372
  log_density:                   -13.298553117202921
  hamiltonian_energy:            15.351282633722665
  hamiltonian_energy_error:      0.14522512372584906
  max_hamiltonian_energy_error:  0.14522512372584906
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9926610333958302
  log_density:                   -16.26875080902242
  hamiltonian_energy:            20.94809153566486
  hamiltonian_energy_error:      -0.025753300892461084
  max_hamiltonian_energy_error:  -0.28960215061243133
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6440486038033303
  nom_step_size:                 0.6440486038033303
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.000871682279997, 0.95925 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.2774845 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.000871682279997, 0.95925 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.644), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0568885442759868
└   average_acceptance_rate = 0.8893688344261484
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.234473225 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢄⡀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢱⠀⠀⠀⠀⡠⢄⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⢣⠀⠀⡔⠁⠀⠱│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⠀⢀⡀⠀⠀⠀⣀⣀⡠⠒⠑⢄⠀⣀⡇⠀⠀⠈⠉⠉⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⡜⠑⢄⡠⠊⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠁⠀⠀⠀⠀⠀⡸⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⡠⠎⠀⠀⠀⠀⣀⠤⠔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠣⡀⠀⢀⡔⠁⣀⣀⡠⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⠳⡴⠕⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
