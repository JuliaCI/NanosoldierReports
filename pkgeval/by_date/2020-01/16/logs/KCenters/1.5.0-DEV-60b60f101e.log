Julia Version 1.5.0-DEV.77
Commit 60b60f101e (2020-01-16 15:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed DataValueInterfaces ───────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed MappedArrays ──────────────── v0.2.2
 Installed LearnBase ─────────────────── v0.2.2
 Installed Tables ────────────────────── v0.2.11
 Installed KCenters ──────────────────── v0.1.8
 Installed TableTraits ───────────────── v1.0.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed OrderedCollections ────────── v1.1.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataStructures ────────────── v0.17.9
 Installed JSON ──────────────────────── v0.21.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Parsers ───────────────────── v0.3.10
 Installed Missings ──────────────────── v0.4.3
 Installed InvertedIndices ───────────── v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataFrames ────────────────── v0.20.0
 Installed Compat ────────────────────── v3.2.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_AaPzIN/Project.toml`
 [no changes]
  Updating `/tmp/jl_AaPzIN/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_AaPzIN/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 112.62000000000013
[ Info: 76.67000000000002
[ Info: 41.36000000000002
[ Info: 23.569999999999997
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.2399983987154
[ Info: 75.78000114538527
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.67644450720529
inertia(cdnet.distances) = 27.646538773653784
inertia(crand.distances) = 20.253012015686515
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19140625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.19140625,"f1":null,"seconds":3.4980475902557373e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":6.078125,"distances_sum":540.2452177591232}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4404296875,"f1":null,"seconds":4.405155777931213e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":6.6640625,"distances_sum":1232.9229310120174}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4404296875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4404296875,"f1":null,"seconds":4.405155777931213e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":6.6640625,"distances_sum":1232.9229310120174}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9087402181152187,"seconds":7.050111889839172e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.5703125,"distances_sum":2680.2131346741517}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9087402181152187,"seconds":7.050111889839172e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.5703125,"distances_sum":2680.2131346741517}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9658711080586087,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.921875,"distances_sum":3173.069247846557}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9658711080586087,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.921875,"distances_sum":3173.069247846557}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9658711080586087,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.921875,"distances_sum":3173.069247846557}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.240234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.240234375,"f1":null,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":7.21875,"distances_sum":610.696143638581}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8060151653901662,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.28125,"distances_sum":1713.1242829552057}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8761769480519488,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.453125,"distances_sum":2095.0284583506186}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.79296875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8761769480519488,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.453125,"distances_sum":2095.0284583506186}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9371565934065941,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.953125,"distances_sum":2562.8723449812537}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.952441308691309,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.9765625,"distances_sum":2697.9581526564366}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.952441308691309,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.9765625,"distances_sum":2697.9581526564366}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9737751831501834,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.9921875,"distances_sum":2883.6674123183566}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9595467032967037,"seconds":6.366521120071411e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.9765625,"distances_sum":2747.2323702798685}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9737751831501834,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.9921875,"distances_sum":2883.6674123183566}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9737751831501834,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.9921875,"distances_sum":2883.6674123183566}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5419921875,"f1":0.6848481379731385,"seconds":4.213303327560425e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.5703125,"distances_sum":1384.5294884203543}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7749519577644584,"seconds":4.5709311962127686e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.3984375,"distances_sum":1740.526039497874}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.650390625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.650390625,"f1":0.7749519577644584,"seconds":4.5709311962127686e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.3984375,"distances_sum":1740.526039497874}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9601190476190479,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7734375,"distances_sum":2924.3457477083875}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9601190476190479,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7734375,"distances_sum":2924.3457477083875}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9749656593406596,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9296875,"distances_sum":2994.2335741935694}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9749656593406596,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9296875,"distances_sum":2994.2335741935694}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9749656593406596,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9296875,"distances_sum":2994.2335741935694}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8622315184815196,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.140625,"distances_sum":2044.9537683299825}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.514811396598816e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.109375,"distances_sum":572.1565217348921}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44140625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.44140625,"f1":null,"seconds":3.7942081689834595e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.1640625,"distances_sum":1050.7936135166483}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8622315184815196,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.140625,"distances_sum":2044.9537683299825}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9571485805860811,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8359375,"distances_sum":2788.003506885768}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9571485805860811,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8359375,"distances_sum":2788.003506885768}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9755036630036635,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9375,"distances_sum":2927.3082205021037}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9770318223443225,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9296875,"distances_sum":2960.9613174613514}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612007783882788,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8671875,"distances_sum":2842.850991272204}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9600847069597074,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.828125,"distances_sum":2842.0636548578577}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9770318223443225,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9296875,"distances_sum":2960.9613174613514}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9770318223443225,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9296875,"distances_sum":2960.9613174613514}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8894230769230779,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.4765625,"distances_sum":2173.5943588543346}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.61328125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.61328125,"f1":0.7436015373515381,"seconds":4.3120235204696655e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":7.5078125,"distances_sum":1532.975168209335}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":2,"bsize":2}, perf: {"precision":1.0,"recall":0.4208984375,"f1":0.5757971195471197,"seconds":3.812834620475769e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":6.703125,"distances_sum":976.2589618579046}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.80859375,"f1":0.8894230769230779,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.4765625,"distances_sum":2173.5943588543346}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9089686355311362,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.640625,"distances_sum":2319.093568782313}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9522951007326015,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.859375,"distances_sum":2684.495730213285}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.941523580586081,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.7109375,"distances_sum":2574.370782939786}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9240785256410261,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.7109375,"distances_sum":2421.1926695448774}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9522951007326015,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.859375,"distances_sum":2684.495730213285}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9743875915750919,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.9453125,"distances_sum":2867.3351454850886}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9606971153846158,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.859375,"distances_sum":2772.6265067674162}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9737179487179491,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.9453125,"distances_sum":2872.609546696256}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9727506868131872,"seconds":6.3087791204452515e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.9296875,"distances_sum":2848.484862451739}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9700950091575096,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.921875,"distances_sum":2855.4777251460805}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752060439560442,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.9296875,"distances_sum":2867.415084088141}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752060439560442,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.9296875,"distances_sum":2867.415084088141}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752060439560442,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.9296875,"distances_sum":2867.415084088141}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":3.9637088775634766e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.015625,"distances_sum":973.4658844020744}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8063519813519824,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.6484375,"distances_sum":1717.7493061977598}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.689453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.689453125,"f1":0.8063519813519824,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.6484375,"distances_sum":1717.7493061977598}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8612273143523151,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.9609375,"distances_sum":2040.4642865021096}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8659205377955385,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.953125,"distances_sum":2084.9472419958065}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8659205377955385,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.953125,"distances_sum":2084.9472419958065}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9495249542124548,"seconds":6.107613444328308e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7734375,"distances_sum":2771.1993890907556}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9291781135531142,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.578125,"distances_sum":2617.586626168305}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.898529595404596,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3671875,"distances_sum":2332.4407808851192}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9440934065934072,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2649.0092377675282}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9030479936729943,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4140625,"distances_sum":2362.402265896829}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9543784340659344,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8359375,"distances_sum":2771.998232658939}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9543784340659344,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8359375,"distances_sum":2771.998232658939}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9543784340659344,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8359375,"distances_sum":2771.998232658939}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.509765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.509765625,"f1":0.6611541236541241,"seconds":4.623085260391235e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":6.734375,"distances_sum":1416.3655890039786}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7889769952269962,"seconds":6.0070306062698364e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":7.8125,"distances_sum":1907.8446812063094}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8604775432900441,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.3046875,"distances_sum":2305.7756146227725}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8604775432900441,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.3046875,"distances_sum":2305.7756146227725}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9058784965034975,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.5625,"distances_sum":2598.4399402821064}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9153617216117225,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.6875,"distances_sum":2640.887210639267}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9544528388278395,"seconds":6.532296538352966e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.71875,"distances_sum":2974.663184250565}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9544528388278395,"seconds":6.532296538352966e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.71875,"distances_sum":2974.663184250565}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9693853021978026,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.90625,"distances_sum":3038.6943342524746}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9581730769230772,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.765625,"distances_sum":3013.2790702112684}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9577094780219785,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.78125,"distances_sum":2993.255617465821}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9693853021978026,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.90625,"distances_sum":3038.6943342524746}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9693853021978026,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.90625,"distances_sum":3038.6943342524746}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3876953125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3876953125,"f1":null,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":2.5462359189987183e-6,"evaluations":6.1171875,"distances_sum":870.5529849866766}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2177734375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2177734375,"f1":null,"seconds":3.946945071220398e-6,"exhaustive_search_seconds":2.5462359189987183e-6,"evaluations":6.109375,"distances_sum":548.5152637770033}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3876953125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3876953125,"f1":null,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":2.5462359189987183e-6,"evaluations":6.1171875,"distances_sum":870.5529849866766}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.803030303030304,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":2.5462359189987183e-6,"evaluations":7.515625,"distances_sum":1842.2770161442802}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.803030303030304,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":2.5462359189987183e-6,"evaluations":7.515625,"distances_sum":1842.2770161442802}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9129412254412261,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":2.5462359189987183e-6,"evaluations":8.6875,"distances_sum":2475.3380478718404}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8112424034299043,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":2.5462359189987183e-6,"evaluations":7.4765625,"distances_sum":1845.5644978710982}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9132471694971701,"seconds":6.359070539474487e-6,"exhaustive_search_seconds":2.5462359189987183e-6,"evaluations":8.5,"distances_sum":2436.9546717351627}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8505859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8505859375,"f1":0.9129412254412261,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":2.5462359189987183e-6,"evaluations":8.6875,"distances_sum":2475.3380478718404}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8505859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8505859375,"f1":0.9129412254412261,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":2.5462359189987183e-6,"evaluations":8.6875,"distances_sum":2475.3380478718404}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.525390625,"f1":0.673826867576868,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":6.84375,"distances_sum":1419.4173413502463}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8384547743922751,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.1796875,"distances_sum":2031.0645243482113}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8058654886779894,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":7.9296875,"distances_sum":1861.4958730168157}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8384547743922751,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.1796875,"distances_sum":2031.0645243482113}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9132986804861813,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.4375,"distances_sum":2460.465512428441}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9477907509157515,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.734375,"distances_sum":2754.844556236}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8908367673992682,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.3203125,"distances_sum":2331.8100589546425}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9016972610722617,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.359375,"distances_sum":2432.251528376875}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9477907509157515,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.734375,"distances_sum":2754.844556236}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9780162545787549,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9453125,"distances_sum":2956.568743508434}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9779761904761906,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.8984375,"distances_sum":2986.9983498646084}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9669299450549456,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.8671875,"distances_sum":2887.915767943996}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9511077464202471,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.71875,"distances_sum":2797.9119827293507}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9505666208791212,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.7265625,"distances_sum":2796.8667020144017}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9780162545787549,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9453125,"distances_sum":2956.568743508434}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9780162545787549,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9453125,"distances_sum":2956.568743508434}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5263671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5263671875,"f1":0.6729373057498063,"seconds":4.414469003677368e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":6.9375,"distances_sum":1406.9523431589191}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4951171875, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.4951171875,"f1":null,"seconds":4.163011908531189e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":6.8515625,"distances_sum":1329.5048318680883}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5263671875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5263671875,"f1":0.6729373057498063,"seconds":4.414469003677368e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":6.9375,"distances_sum":1406.9523431589191}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7885036838161846,"seconds":4.969537258148193e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":7.875,"distances_sum":1804.6598167125785}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8935018106893114,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.65625,"distances_sum":2335.653318852629}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7982824467199475,"seconds":4.9192458391189575e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.0234375,"distances_sum":1848.6603798263761}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8212890625,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.8212890625,"f1":0.8935018106893114,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.65625,"distances_sum":2335.653318852629}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672447344322347,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.875,"distances_sum":2885.5161328376707}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9644376456876461,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.828125,"distances_sum":2877.274335240522}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9180205211455218,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.65625,"distances_sum":2545.1183949847355}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.936541583416584,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.765625,"distances_sum":2665.3436218211073}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9445798992673998,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.7109375,"distances_sum":2733.157820851289}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672447344322347,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.875,"distances_sum":2885.5161328376707}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672447344322347,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.875,"distances_sum":2885.5161328376707}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7843451687201697,"seconds":4.755333065986633e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.3046875,"distances_sum":1713.0419761043424}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.66796875,"f1":0.7843451687201697,"seconds":4.755333065986633e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.3046875,"distances_sum":1713.0419761043424}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9491357600732605,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.734375,"distances_sum":2710.130816452205}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9523523351648358,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6953125,"distances_sum":2753.933656427527}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9523523351648358,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6953125,"distances_sum":2753.933656427527}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9666895604395607,"seconds":6.448477506637573e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.859375,"distances_sum":2820.940872325365}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9815476190476191,"seconds":6.537884473800659e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9765625,"distances_sum":2923.115290590711}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.974553571428572,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.953125,"distances_sum":2851.5749164874496}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9651442307692313,"seconds":6.299465894699097e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.859375,"distances_sum":2801.766391018594}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.956644917582418,"seconds":6.444752216339111e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7890625,"distances_sum":2767.2527385555413}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9815476190476191,"seconds":6.537884473800659e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9765625,"distances_sum":2923.115290590711}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9815476190476191,"seconds":6.537884473800659e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9765625,"distances_sum":2923.115290590711}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3994140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.3695250749588013e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.0703125,"distances_sum":969.3400067084939}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3994140625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.3695250749588013e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.0703125,"distances_sum":969.3400067084939}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8629786879786888,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.953125,"distances_sum":2259.899568829695}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8629786879786888,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.953125,"distances_sum":2259.899568829695}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8629786879786888,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.953125,"distances_sum":2259.899568829695}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8629786879786888,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.953125,"distances_sum":2259.899568829695}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":2.7585774660110474e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":4.609375,"distances_sum":530.2650952065525}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8525791916416924,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.0234375,"distances_sum":1847.8068425327297}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8525791916416924,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.0234375,"distances_sum":1847.8068425327297}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8774652430902439,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4140625,"distances_sum":2068.736550887892}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9569024725274728,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":2528.9451815275565}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9569024725274728,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":2528.9451815275565}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9675251831501837,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2602.486295879796}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.973162774725275,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":2649.2541619065278}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9761733058608061,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.953125,"distances_sum":2643.3764393193424}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9761733058608061,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.953125,"distances_sum":2643.3764393193424}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9761733058608061,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.953125,"distances_sum":2643.3764393193424}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3935546875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3935546875,"f1":null,"seconds":3.518536686897278e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.015625,"distances_sum":818.943224592608}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3935546875,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.3935546875,"f1":null,"seconds":3.518536686897278e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.015625,"distances_sum":818.943224592608}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7860001110001119,"seconds":4.567205905914307e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1328125,"distances_sum":1501.2328996774713}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7860001110001119,"seconds":4.567205905914307e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1328125,"distances_sum":1501.2328996774713}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.8993475274725282,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.640625,"distances_sum":2107.196380597417}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9274527555777562,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.65625,"distances_sum":2308.5016445876176}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8600959804084811,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3359375,"distances_sum":1870.5028536396285}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9274527555777562,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.65625,"distances_sum":2308.5016445876176}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8779296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9274527555777562,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.65625,"distances_sum":2308.5016445876176}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1962890625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1962890625,"f1":null,"seconds":3.21120023727417e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":4.9375,"distances_sum":450.45161978410397}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6328125,"f1":0.7621600621600628,"seconds":4.677101969718933e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.3046875,"distances_sum":1455.991901085681}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6337890625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6337890625,"f1":0.7636226620601628,"seconds":4.090368747711182e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.203125,"distances_sum":1468.4109563857915}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6337890625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6337890625,"f1":0.7636226620601628,"seconds":4.090368747711182e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.203125,"distances_sum":1468.4109563857915}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9251144688644695,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.71875,"distances_sum":2319.629502450134}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9171245421245429,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.71875,"distances_sum":2215.9857090064343}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9246451465201473,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.78125,"distances_sum":2320.0792022041524}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.892416958041959,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.53125,"distances_sum":2088.4085956533972}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6484375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6484375,"f1":0.7758548742923751,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.3671875,"distances_sum":1482.288624278605}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9251144688644695,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.71875,"distances_sum":2319.629502450134}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9677483974358979,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8984375,"distances_sum":2618.921683700768}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9618532509157511,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2568.95827391126}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857148,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9296875,"distances_sum":2724.1153022821436}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9698717948717952,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2635.727787704965}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9647722069597073,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.890625,"distances_sum":2585.8573506812736}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9667239010989017,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.875,"distances_sum":2608.5140373629774}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9630608974358976,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.859375,"distances_sum":2580.212211087572}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9576694139194143,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8671875,"distances_sum":2540.137462281066}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857148,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9296875,"distances_sum":2724.1153022821436}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857148,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9296875,"distances_sum":2724.1153022821436}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7119140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7119140625,"f1":0.8219879079254088,"seconds":4.677101969718933e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.0390625,"distances_sum":1747.2650571697413}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.57421875,"f1":0.7125095390720397,"seconds":4.176050424575806e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.484375,"distances_sum":1264.3262321592915}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7039328726828733,"seconds":4.034489393234253e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.5234375,"distances_sum":1261.2103902064744}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7119140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7119140625,"f1":0.8219879079254088,"seconds":4.677101969718933e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.0390625,"distances_sum":1747.2650571697413}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9362096237096241,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.75,"distances_sum":2420.1089565352054}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9325065559440564,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7265625,"distances_sum":2421.6936593804817}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9462168040293042,"seconds":4.665926098823547e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7421875,"distances_sum":2540.126016434006}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8719702172827182,"seconds":3.3639371395111084e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.3125,"distances_sum":1995.816035973708}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9271291208791218,"seconds":3.507360816001892e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.671875,"distances_sum":2381.6051116206518}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9202094780219787,"seconds":3.4105032682418823e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.5546875,"distances_sum":2306.1359569359292}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8597282925407933,"seconds":3.216788172721863e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.2265625,"distances_sum":1937.5946979484613}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8645953005328012,"seconds":3.3285468816757202e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.15625,"distances_sum":1956.4001960074763}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9462168040293042,"seconds":4.665926098823547e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7421875,"distances_sum":2540.126016434006}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9676167582417586,"seconds":6.4820051193237305e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8984375,"distances_sum":2667.077618626832}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9525354853479856,"seconds":7.444992661476135e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.78125,"distances_sum":2577.4469748968113}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.971096611721612,"seconds":6.943941116333008e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9140625,"distances_sum":2712.717922803704}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9621852106227113,"seconds":6.798654794692993e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.859375,"distances_sum":2665.6435696464714}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9767513736263739,"seconds":1.0086223483085632e-5,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9375,"distances_sum":2756.410714662928}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552312271062277,"seconds":9.115785360336304e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.875,"distances_sum":2575.261853285457}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9651270604395612,"seconds":7.117167115211487e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8828125,"distances_sum":2657.4079031732963}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9767513736263739,"seconds":1.0086223483085632e-5,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9375,"distances_sum":2756.410714662928}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9767513736263739,"seconds":1.0086223483085632e-5,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9375,"distances_sum":2756.410714662928}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1904296875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1904296875,"f1":null,"seconds":3.6619603633880615e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":5.1640625,"distances_sum":441.98204237654676}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37109375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.37109375,"f1":null,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":5.7734375,"distances_sum":856.4784131928684}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7781914266289274,"seconds":6.206333637237549e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.453125,"distances_sum":1562.85062060264}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.654296875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.654296875,"f1":0.7781914266289274,"seconds":6.206333637237549e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.453125,"distances_sum":1562.85062060264}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8701668123543133,"seconds":6.6086649894714355e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.5390625,"distances_sum":2059.794907693427}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7976580710955719,"seconds":4.7441571950912476e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.421875,"distances_sum":1705.2555329073398}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8701668123543133,"seconds":6.6086649894714355e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.5390625,"distances_sum":2059.794907693427}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9016571969696977,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.640625,"distances_sum":2245.9777833294147}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9495077838827845,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.84375,"distances_sum":2624.769193591635}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.951591117216118,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8046875,"distances_sum":2639.890337742584}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9336996336996344,"seconds":6.5267086029052734e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8046875,"distances_sum":2491.5472883759235}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.951591117216118,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8046875,"distances_sum":2639.890337742584}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.951591117216118,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8046875,"distances_sum":2639.890337742584}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6298828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6298828125,"f1":0.7609260531135539,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.6171875,"distances_sum":1503.6830821104584}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8480545496170505,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.0390625,"distances_sum":1932.3021696800747}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.8480545496170505,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.0390625,"distances_sum":1932.3021696800747}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9095441017316025,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.359375,"distances_sum":2323.628083466784}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.845703125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.845703125,"f1":0.9095441017316025,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.359375,"distances_sum":2323.628083466784}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9686984890109894,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8828125,"distances_sum":2703.1647548044734}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9655334249084255,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8671875,"distances_sum":2660.576107213201}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9686984890109894,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8828125,"distances_sum":2703.1647548044734}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9686984890109894,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8828125,"distances_sum":2703.1647548044734}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.796875,"distances_sum":936.0928336733655}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3837890625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.796875,"distances_sum":936.0928336733655}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.864372086247087,"seconds":4.582107067108154e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.4609375,"distances_sum":2013.5495365993975}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5517578125,"f1":null,"seconds":3.300607204437256e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.3125,"distances_sum":1359.0801162110079}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9120821886446895,"seconds":3.98978590965271e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.5390625,"distances_sum":2289.2380110166273}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5087890625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5087890625,"f1":0.6564695720945726,"seconds":3.0677765607833862e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.140625,"distances_sum":1228.6891973394925}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8774844946719954,"seconds":3.842636942863464e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.484375,"distances_sum":2058.1679323338435}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.50390625, conf: {"ssize":6,"bsize":3}, perf: {"precision":null,"recall":0.50390625,"f1":null,"seconds":3.0547380447387695e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.1875,"distances_sum":1238.3780284283937}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3876953125, conf: {"ssize":7,"bsize":2}, perf: {"precision":null,"recall":0.3876953125,"f1":null,"seconds":2.4884939193725586e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.9140625,"distances_sum":953.2328838493231}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5224609375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5224609375,"f1":0.6726313616938622,"seconds":3.0975788831710815e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.390625,"distances_sum":1307.8883390292847}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8505859375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8505859375,"f1":0.9120821886446895,"seconds":3.98978590965271e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.5390625,"distances_sum":2289.2380110166273}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9570341117216122,"seconds":4.075467586517334e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.859375,"distances_sum":2631.652527280861}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598672161172166,"seconds":4.06801700592041e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.890625,"distances_sum":2660.170295632876}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9208479020979028,"seconds":4.108995199203491e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.609375,"distances_sum":2339.290340252033}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9472928113553117,"seconds":4.174187779426575e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.78125,"distances_sum":2583.7685423133044}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9359291749916755,"seconds":4.1835010051727295e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.703125,"distances_sum":2450.5928368740015}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9598672161172166,"seconds":4.06801700592041e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.890625,"distances_sum":2660.170295632876}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9598672161172166,"seconds":4.06801700592041e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.890625,"distances_sum":2660.170295632876}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6337890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6337890625,"f1":0.7632749195249203,"seconds":3.341585397720337e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":7.3515625,"distances_sum":1535.1369101412172}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5166015625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5166015625,"f1":0.6650916791541798,"seconds":3.28943133354187e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":6.125,"distances_sum":1259.2366167903374}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3193359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3193359375,"f1":null,"seconds":3.7066638469696045e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":4.6640625,"distances_sum":711.9281642524624}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6337890625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6337890625,"f1":0.7632749195249203,"seconds":3.341585397720337e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":7.3515625,"distances_sum":1535.1369101412172}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9017092282717291,"seconds":6.573274731636047e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":8.5859375,"distances_sum":2205.303007322874}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8921677281052288,"seconds":6.945803761482239e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":8.4765625,"distances_sum":2122.0423020683616}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8348110223110231,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":7.8125,"distances_sum":1845.488313442474}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8425574425574434,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":7.96875,"distances_sum":1889.690628670206}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8975363178488188,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":8.5390625,"distances_sum":2154.434669531748}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9191678113553118,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":8.484375,"distances_sum":2346.300888871302}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8401832542457551,"seconds":5.209818482398987e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":7.9140625,"distances_sum":1893.0542057323576}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8425657675657684,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":7.96875,"distances_sum":1845.0178689263964}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8623046875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9191678113553118,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":8.484375,"distances_sum":2346.300888871302}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9622081043956048,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":8.828125,"distances_sum":2623.88600620514}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9423623251748258,"seconds":6.42240047454834e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":8.71875,"distances_sum":2494.1199935627938}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9577266483516487,"seconds":6.9141387939453125e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":8.84375,"distances_sum":2601.820218740717}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9416037087912094,"seconds":6.8303197622299194e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":8.71875,"distances_sum":2500.9416266547905}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9568509615384619,"seconds":6.804242730140686e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":8.7734375,"distances_sum":2621.869747522881}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9622081043956048,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":8.828125,"distances_sum":2623.88600620514}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9622081043956048,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":9.834766387939453e-7,"evaluations":8.828125,"distances_sum":2623.88600620514}}, n: 9
inertia(cfft.distances) = 18.527403600355612
inertia(cdnet.distances) = 30.99169682539682
inertia(crand.distances) = 22.488866610741994
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9422222222222222
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9355555555555556
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8977777777777778
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9355555555555556
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9177777777777778
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9422222222222222
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9400000000000001
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9222222222222222
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.931111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.88
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8533333333333334
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9044444444444443
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 3, 3, 2, 1, 2, 3, 3, 2, 3, 3, 3, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 8, 14]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(2, 8), (3, 14)]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 10, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 3, 1, 2, 3, 1, 2, 3, 3, 2]
acc = 0.94
*** starting iteration: 1; err: [Inf, 0.3436666687542496] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3436666687542496, 0.17557258635790976] ***
*** starting iteration: 2; err: [Inf, 0.3436666687542496, 0.17557258635790976] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3436666687542496, 0.17557258635790976, 0.16161798082189105] ***
*** starting iteration: 3; err: [Inf, 0.3436666687542496, 0.17557258635790976, 0.16161798082189105] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3436666687542496, 0.17557258635790976, 0.16161798082189105, 0.16018373050179385] ***
*** starting iteration: 4; err: [Inf, 0.3436666687542496, 0.17557258635790976, 0.16161798082189105, 0.16018373050179385] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3436666687542496, 0.17557258635790976, 0.16161798082189105, 0.16018373050179385, 0.15851144731346303] ***
*** starting iteration: 5; err: [Inf, 0.3436666687542496, 0.17557258635790976, 0.16161798082189105, 0.16018373050179385, 0.15851144731346303] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3436666687542496, 0.17557258635790976, 0.16161798082189105, 0.16018373050179385, 0.15851144731346303, 0.15819178779973833] ***
*** finished computation of 12 references, err: [Inf, 0.3436666687542496, 0.17557258635790976, 0.16161798082189105, 0.16018373050179385, 0.15851144731346303, 0.15819178779973833] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
acc = 0.9133333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.5378816901427891] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5378816901427891, 0.21865118593469393] ***
*** starting iteration: 2; err: [Inf, 0.5378816901427891, 0.21865118593469393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5378816901427891, 0.21865118593469393, 0.18830175714256744] ***
*** starting iteration: 3; err: [Inf, 0.5378816901427891, 0.21865118593469393, 0.18830175714256744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5378816901427891, 0.21865118593469393, 0.18830175714256744, 0.18285642537358676] ***
*** starting iteration: 4; err: [Inf, 0.5378816901427891, 0.21865118593469393, 0.18830175714256744, 0.18285642537358676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5378816901427891, 0.21865118593469393, 0.18830175714256744, 0.18285642537358676, 0.1813511440483359] ***
*** starting iteration: 5; err: [Inf, 0.5378816901427891, 0.21865118593469393, 0.18830175714256744, 0.18285642537358676, 0.1813511440483359] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5378816901427891, 0.21865118593469393, 0.18830175714256744, 0.18285642537358676, 0.1813511440483359, 0.18111731821658558] ***
*** finished computation of 7 references, err: [Inf, 0.5378816901427891, 0.21865118593469393, 0.18830175714256744, 0.18285642537358676, 0.1813511440483359, 0.18111731821658558] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 21]]
** centroid: 2, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1215421751173034] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1215421751173034, 0.34031221804229744] ***
*** starting iteration: 2; err: [Inf, 1.1215421751173034, 0.34031221804229744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1215421751173034, 0.34031221804229744, 0.32778182795466676] ***
*** starting iteration: 3; err: [Inf, 1.1215421751173034, 0.34031221804229744, 0.32778182795466676] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1215421751173034, 0.34031221804229744, 0.32778182795466676, 0.32721985513585905] ***
*** finished computation of 3 references, err: [Inf, 1.1215421751173034, 0.34031221804229744, 0.32778182795466676, 0.32721985513585905] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 27]]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 7]]
** centroid: 3, normalized-entropy: 0.699772221773307, [(2, 30), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.202511666453206] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.202511666453206, 0.432562492250257] ***
*** starting iteration: 2; err: [Inf, 1.202511666453206, 0.432562492250257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.202511666453206, 0.432562492250257, 0.41393206323484166] ***
*** starting iteration: 3; err: [Inf, 1.202511666453206, 0.432562492250257, 0.41393206323484166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.202511666453206, 0.432562492250257, 0.41393206323484166, 0.4117764086587441] ***
*** finished computation of 3 references, err: [Inf, 1.202511666453206, 0.432562492250257, 0.41393206323484166, 0.4117764086587441] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 11]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3153782613822148] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3153782613822148, 0.21258661948145266] ***
*** starting iteration: 2; err: [Inf, 0.3153782613822148, 0.21258661948145266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3153782613822148, 0.21258661948145266, 0.17843198185204187] ***
*** starting iteration: 3; err: [Inf, 0.3153782613822148, 0.21258661948145266, 0.17843198185204187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3153782613822148, 0.21258661948145266, 0.17843198185204187, 0.15795375876106774] ***
*** starting iteration: 4; err: [Inf, 0.3153782613822148, 0.21258661948145266, 0.17843198185204187, 0.15795375876106774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3153782613822148, 0.21258661948145266, 0.17843198185204187, 0.15795375876106774, 0.15379257473147448] ***
*** starting iteration: 5; err: [Inf, 0.3153782613822148, 0.21258661948145266, 0.17843198185204187, 0.15795375876106774, 0.15379257473147448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3153782613822148, 0.21258661948145266, 0.17843198185204187, 0.15795375876106774, 0.15379257473147448, 0.15324944070696972] ***
*** finished computation of 7 references, err: [Inf, 0.3153782613822148, 0.21258661948145266, 0.17843198185204187, 0.15795375876106774, 0.15379257473147448, 0.15324944070696972] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 7]]
** centroid: 2, normalized-entropy: 0.9494520153879484, [(2, 12), (3, 7)]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5992845496712007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5992845496712007, 0.2728879373169907] ***
*** starting iteration: 2; err: [Inf, 0.5992845496712007, 0.2728879373169907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5992845496712007, 0.2728879373169907, 0.22545853259355636] ***
*** starting iteration: 3; err: [Inf, 0.5992845496712007, 0.2728879373169907, 0.22545853259355636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5992845496712007, 0.2728879373169907, 0.22545853259355636, 0.2086965149790788] ***
*** starting iteration: 4; err: [Inf, 0.5992845496712007, 0.2728879373169907, 0.22545853259355636, 0.2086965149790788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5992845496712007, 0.2728879373169907, 0.22545853259355636, 0.2086965149790788, 0.18659286368337427] ***
*** starting iteration: 5; err: [Inf, 0.5992845496712007, 0.2728879373169907, 0.22545853259355636, 0.2086965149790788, 0.18659286368337427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5992845496712007, 0.2728879373169907, 0.22545853259355636, 0.2086965149790788, 0.18659286368337427, 0.17868212136291345] ***
*** starting iteration: 6; err: [Inf, 0.5992845496712007, 0.2728879373169907, 0.22545853259355636, 0.2086965149790788, 0.18659286368337427, 0.17868212136291345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5992845496712007, 0.2728879373169907, 0.22545853259355636, 0.2086965149790788, 0.18659286368337427, 0.17868212136291345, 0.17723411328251534] ***
*** starting iteration: 7; err: [Inf, 0.5992845496712007, 0.2728879373169907, 0.22545853259355636, 0.2086965149790788, 0.18659286368337427, 0.17868212136291345, 0.17723411328251534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5992845496712007, 0.2728879373169907, 0.22545853259355636, 0.2086965149790788, 0.18659286368337427, 0.17868212136291345, 0.17723411328251534, 0.17699048250667965] ***
*** finished computation of 7 references, err: [Inf, 0.5992845496712007, 0.2728879373169907, 0.22545853259355636, 0.2086965149790788, 0.18659286368337427, 0.17868212136291345, 0.17723411328251534, 0.17699048250667965] ***
*** center 1: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 4, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 9]]
** centroid: 5, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 18]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.013725841267997] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.013725841267997, 0.6478939036793716] ***
*** starting iteration: 2; err: [Inf, 1.013725841267997, 0.6478939036793716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.013725841267997, 0.6478939036793716, 0.5780980786696057] ***
*** starting iteration: 3; err: [Inf, 1.013725841267997, 0.6478939036793716, 0.5780980786696057] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.013725841267997, 0.6478939036793716, 0.5780980786696057, 0.45518910112952526] ***
*** finished computation of 3 references, err: [Inf, 1.013725841267997, 0.6478939036793716, 0.5780980786696057, 0.45518910112952526] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 31]]
** centroid: 1, normalized-entropy: 0.9661773513883509, [(2, 20), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7430411846943272] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7430411846943272, 0.6006803931023269] ***
*** starting iteration: 2; err: [Inf, 1.7430411846943272, 0.6006803931023269] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7430411846943272, 0.6006803931023269, 0.5989421985183527] ***
*** starting iteration: 3; err: [Inf, 1.7430411846943272, 0.6006803931023269, 0.5989421985183527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7430411846943272, 0.6006803931023269, 0.5989421985183527, 0.5989421985183527] ***
*** finished computation of 3 references, err: [Inf, 1.7430411846943272, 0.6006803931023269, 0.5989421985183527, 0.5989421985183527] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 34]]
** centroid: 1, normalized-entropy: 0.9954515828457716, [(2, 29), (3, 34)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [16, 1, 0]]
** centroid: 2, normalized-entropy: 0.32275695889739825, [(1, 16), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9590127988400209] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9590127988400209, 0.6756194780675702] ***
*** starting iteration: 2; err: [Inf, 0.9590127988400209, 0.6756194780675702] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9590127988400209, 0.6756194780675702, 0.6740222886108538] ***
*** starting iteration: 3; err: [Inf, 0.9590127988400209, 0.6756194780675702, 0.6740222886108538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9590127988400209, 0.6756194780675702, 0.6740222886108538, 0.6740222886108538] ***
*** finished computation of 3 references, err: [Inf, 0.9590127988400209, 0.6756194780675702, 0.6740222886108538, 0.6740222886108538] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 35]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(2, 30), (3, 35)]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [17, 3, 0]]
** centroid: 3, normalized-entropy: 0.6098403047164005, [(1, 17), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6659000034016708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6659000034016708, 0.30354427961336516] ***
*** finished computation of 7 references, err: [Inf, 0.6659000034016708, 0.30354427961336516] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 7, 11]]
** centroid: 4, normalized-entropy: 0.9640787648082293, [(2, 7), (3, 11)]
*** center 5: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45499999827392346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45499999827392346, 0.281350009955511] ***
*** finished computation of 7 references, err: [Inf, 0.45499999827392346, 0.281350009955511] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 8]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7042000004210331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7042000004210331, 0.45763142910039023] ***
*** finished computation of 7 references, err: [Inf, 0.7042000004210331, 0.45763142910039023] ***
*** center 1: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 30]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 4), (3, 30)]
*** center 5: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 22, 4]]
** centroid: 7, normalized-entropy: 0.6193821946787638, [(2, 22), (3, 4)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5492000051011776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5492000051011776, 0.45018350149296055] ***
*** finished computation of 7 references, err: [Inf, 0.5492000051011776, 0.45018350149296055] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 37, 10]]
** centroid: 2, normalized-entropy: 0.7467366074830678, [(2, 37), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 4: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5466000093550576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5466000093550576, 0.3278356212790445] ***
*** finished computation of 7 references, err: [Inf, 0.5466000093550576, 0.3278356212790445] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 4]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 28), (3, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9181000035724728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9181000035724728, 0.37507077018493634] ***
*** finished computation of 7 references, err: [Inf, 0.9181000035724728, 0.37507077018493634] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 21, 17]]
** centroid: 2, normalized-entropy: 0.9919924034538556, [(2, 21), (3, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2134000008245605] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2134000008245605, 0.9615178038626518] ***
*** starting iteration: 2; err: [Inf, 1.2134000008245605, 0.9615178038626518] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2134000008245605, 0.9615178038626518, 0.9592000160046261] ***
*** starting iteration: 3; err: [Inf, 1.2134000008245605, 0.9615178038626518, 0.9592000160046261] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2134000008245605, 0.9615178038626518, 0.9592000160046261, 0.9589557308452937] ***
*** finished computation of 3 references, err: [Inf, 1.2134000008245605, 0.9615178038626518, 0.9592000160046261, 0.9589557308452937] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 31]]
** centroid: 1, normalized-entropy: 0.995978956518722, [(2, 36), (3, 31)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [14, 1, 0]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(1, 14), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0356999969531027] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0356999969531027, 0.901634330289075] ***
*** starting iteration: 2; err: [Inf, 1.0356999969531027, 0.901634330289075] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0356999969531027, 0.901634330289075, 0.8952278828245237] ***
*** starting iteration: 3; err: [Inf, 1.0356999969531027, 0.901634330289075, 0.8952278828245237] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0356999969531027, 0.901634330289075, 0.8952278828245237, 0.8948974236245227] ***
*** finished computation of 3 references, err: [Inf, 1.0356999969531027, 0.901634330289075, 0.8952278828245237, 0.8948974236245227] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 34]]
** centroid: 1, normalized-entropy: 0.9932338197397066, [(2, 28), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [19, 2, 0]]
** centroid: 3, normalized-entropy: 0.45371633918694493, [(1, 19), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5859000039224571] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5859000039224571, 0.7599096479473261] ***
*** starting iteration: 2; err: [Inf, 1.5859000039224571, 0.7599096479473261] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5859000039224571, 0.7599096479473261, 0.7014052791592651] ***
*** starting iteration: 3; err: [Inf, 1.5859000039224571, 0.7599096479473261, 0.7014052791592651] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5859000039224571, 0.7599096479473261, 0.7014052791592651, 0.6523222902469789] ***
*** finished computation of 3 references, err: [Inf, 1.5859000039224571, 0.7599096479473261, 0.7014052791592651, 0.6523222902469789] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 17]]
** centroid: 1, normalized-entropy: 0.9313043685793762, [(2, 32), (3, 17)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [32, 1, 0]]
** centroid: 3, normalized-entropy: 0.19590927087360496, [(1, 32), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9110999934727463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9110999934727463, 0.39294044495260116] ***
*** starting iteration: 2; err: [Inf, 0.9110999934727463, 0.39294044495260116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9110999934727463, 0.39294044495260116, 0.32960889814220246] ***
*** starting iteration: 3; err: [Inf, 0.9110999934727463, 0.39294044495260116, 0.32960889814220246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9110999934727463, 0.39294044495260116, 0.32960889814220246, 0.2899035841479393] ***
*** finished computation of 7 references, err: [Inf, 0.9110999934727463, 0.39294044495260116, 0.32960889814220246, 0.2899035841479393] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 2, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4398000016851452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4398000016851452, 0.25435871656199965] ***
*** starting iteration: 2; err: [Inf, 0.4398000016851452, 0.25435871656199965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4398000016851452, 0.25435871656199965, 0.2374307549748825] ***
*** starting iteration: 3; err: [Inf, 0.4398000016851452, 0.25435871656199965, 0.2374307549748825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4398000016851452, 0.25435871656199965, 0.2374307549748825, 0.21668997630883133] ***
*** finished computation of 7 references, err: [Inf, 0.4398000016851452, 0.25435871656199965, 0.2374307549748825, 0.21668997630883133] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5057000043004025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5057000043004025, 0.35977219144917477] ***
*** starting iteration: 2; err: [Inf, 0.5057000043004025, 0.35977219144917477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5057000043004025, 0.35977219144917477, 0.3004331666387241] ***
*** starting iteration: 3; err: [Inf, 0.5057000043004025, 0.35977219144917477, 0.3004331666387241] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5057000043004025, 0.35977219144917477, 0.3004331666387241, 0.2818788768789621] ***
*** finished computation of 7 references, err: [Inf, 0.5057000043004025, 0.35977219144917477, 0.3004331666387241, 0.2818788768789621] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 12]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(2, 9), (3, 12)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6102000076695174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6102000076695174, 0.4483068235886918] ***
*** starting iteration: 2; err: [Inf, 0.6102000076695174, 0.4483068235886918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6102000076695174, 0.4483068235886918, 0.44306680912218205] ***
*** starting iteration: 3; err: [Inf, 0.6102000076695174, 0.4483068235886918, 0.44306680912218205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6102000076695174, 0.4483068235886918, 0.44306680912218205, 0.4408991853012406] ***
*** starting iteration: 4; err: [Inf, 0.6102000076695174, 0.4483068235886918, 0.44306680912218205, 0.4408991853012406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6102000076695174, 0.4483068235886918, 0.44306680912218205, 0.4408991853012406, 0.43841673496271233] ***
*** starting iteration: 5; err: [Inf, 0.6102000076695174, 0.4483068235886918, 0.44306680912218205, 0.4408991853012406, 0.43841673496271233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6102000076695174, 0.4483068235886918, 0.44306680912218205, 0.4408991853012406, 0.43841673496271233, 0.43717771044406367] ***
*** starting iteration: 6; err: [Inf, 0.6102000076695174, 0.4483068235886918, 0.44306680912218205, 0.4408991853012406, 0.43841673496271233, 0.43717771044406367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6102000076695174, 0.4483068235886918, 0.44306680912218205, 0.4408991853012406, 0.43841673496271233, 0.43717771044406367, 0.4366812439627339] ***
*** finished computation of 7 references, err: [Inf, 0.6102000076695174, 0.4483068235886918, 0.44306680912218205, 0.4408991853012406, 0.43841673496271233, 0.43717771044406367, 0.4366812439627339] ***
*** center 1: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 9]]
** centroid: 3, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7062000020313113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7062000020313113, 0.39663590822642647] ***
*** starting iteration: 2; err: [Inf, 0.7062000020313113, 0.39663590822642647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7062000020313113, 0.39663590822642647, 0.3818392120449496] ***
*** starting iteration: 3; err: [Inf, 0.7062000020313113, 0.39663590822642647, 0.3818392120449496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7062000020313113, 0.39663590822642647, 0.3818392120449496, 0.3516105056702637] ***
*** starting iteration: 4; err: [Inf, 0.7062000020313113, 0.39663590822642647, 0.3818392120449496, 0.3516105056702637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7062000020313113, 0.39663590822642647, 0.3818392120449496, 0.3516105056702637, 0.29896288942466276] ***
*** starting iteration: 5; err: [Inf, 0.7062000020313113, 0.39663590822642647, 0.3818392120449496, 0.3516105056702637, 0.29896288942466276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7062000020313113, 0.39663590822642647, 0.3818392120449496, 0.3516105056702637, 0.29896288942466276, 0.2826717559033833] ***
*** starting iteration: 6; err: [Inf, 0.7062000020313113, 0.39663590822642647, 0.3818392120449496, 0.3516105056702637, 0.29896288942466276, 0.2826717559033833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7062000020313113, 0.39663590822642647, 0.3818392120449496, 0.3516105056702637, 0.29896288942466276, 0.2826717559033833, 0.28164331493564077] ***
*** starting iteration: 7; err: [Inf, 0.7062000020313113, 0.39663590822642647, 0.3818392120449496, 0.3516105056702637, 0.29896288942466276, 0.2826717559033833, 0.28164331493564077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7062000020313113, 0.39663590822642647, 0.3818392120449496, 0.3516105056702637, 0.29896288942466276, 0.2826717559033833, 0.28164331493564077, 0.28106682776403763] ***
*** finished computation of 7 references, err: [Inf, 0.7062000020313113, 0.39663590822642647, 0.3818392120449496, 0.3516105056702637, 0.29896288942466276, 0.2826717559033833, 0.28164331493564077, 0.28106682776403763] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 10]]
** centroid: 4, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.8358000028802417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8358000028802417, 0.7203053607140761] ***
*** starting iteration: 2; err: [Inf, 1.8358000028802417, 0.7203053607140761] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693] ***
*** starting iteration: 3; err: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282] ***
*** starting iteration: 4; err: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282, 0.5479593073322175] ***
*** starting iteration: 5; err: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282, 0.5479593073322175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282, 0.5479593073322175, 0.5418800510976617] ***
*** starting iteration: 6; err: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282, 0.5479593073322175, 0.5418800510976617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282, 0.5479593073322175, 0.5418800510976617, 0.5386149080410151] ***
*** starting iteration: 7; err: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282, 0.5479593073322175, 0.5418800510976617, 0.5386149080410151] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282, 0.5479593073322175, 0.5418800510976617, 0.5386149080410151, 0.5372014645996568] ***
*** starting iteration: 8; err: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282, 0.5479593073322175, 0.5418800510976617, 0.5386149080410151, 0.5372014645996568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282, 0.5479593073322175, 0.5418800510976617, 0.5386149080410151, 0.5372014645996568, 0.5294014881896585] ***
*** starting iteration: 9; err: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282, 0.5479593073322175, 0.5418800510976617, 0.5386149080410151, 0.5372014645996568, 0.5294014881896585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282, 0.5479593073322175, 0.5418800510976617, 0.5386149080410151, 0.5372014645996568, 0.5294014881896585, 0.5253316034835575] ***
*** starting iteration: 10; err: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282, 0.5479593073322175, 0.5418800510976617, 0.5386149080410151, 0.5372014645996568, 0.5294014881896585, 0.5253316034835575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282, 0.5479593073322175, 0.5418800510976617, 0.5386149080410151, 0.5372014645996568, 0.5294014881896585, 0.5253316034835575, 0.5190296124616492] ***
*** finished computation of 7 references, err: [Inf, 1.8358000028802417, 0.7203053607140761, 0.5932735138641693, 0.5532178667352282, 0.5479593073322175, 0.5418800510976617, 0.5386149080410151, 0.5372014645996568, 0.5294014881896585, 0.5253316034835575, 0.5190296124616492] ***
*** center 1: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 5, 26]]
** centroid: 5, normalized-entropy: 0.6373874992221911, [(2, 5), (3, 26)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 28, 9]]
** centroid: 6, normalized-entropy: 0.8003922080453356, [(2, 28), (3, 9)]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6185000082843715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6185000082843715, 0.2520822257328674] ***
*** starting iteration: 2; err: [Inf, 0.6185000082843715, 0.2520822257328674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6185000082843715, 0.2520822257328674, 0.24263606120454637] ***
*** starting iteration: 3; err: [Inf, 0.6185000082843715, 0.2520822257328674, 0.24263606120454637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6185000082843715, 0.2520822257328674, 0.24263606120454637, 0.24035983413614967] ***
*** finished computation of 7 references, err: [Inf, 0.6185000082843715, 0.2520822257328674, 0.24263606120454637, 0.24035983413614967] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 18, 8]]
** centroid: 5, normalized-entropy: 0.8904916402194913, [(2, 18), (3, 8)]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.601900008447885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.601900008447885, 0.33504537751748276] ***
*** starting iteration: 2; err: [Inf, 0.601900008447885, 0.33504537751748276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.601900008447885, 0.33504537751748276, 0.3211559002916114] ***
*** starting iteration: 3; err: [Inf, 0.601900008447885, 0.33504537751748276, 0.3211559002916114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.601900008447885, 0.33504537751748276, 0.3211559002916114, 0.30648443460817554] ***
*** finished computation of 7 references, err: [Inf, 0.601900008447885, 0.33504537751748276, 0.3211559002916114, 0.30648443460817554] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 25]]
** centroid: 1, normalized-entropy: 0.5787946246321198, [(2, 4), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 1]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(2, 26), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6570000048706115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6570000048706115, 0.3228906927764591] ***
*** starting iteration: 2; err: [Inf, 0.6570000048706115, 0.3228906927764591] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6570000048706115, 0.3228906927764591, 0.26695308369150506] ***
*** starting iteration: 3; err: [Inf, 0.6570000048706115, 0.3228906927764591, 0.26695308369150506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6570000048706115, 0.3228906927764591, 0.26695308369150506, 0.24797517358080343] ***
*** finished computation of 7 references, err: [Inf, 0.6570000048706115, 0.3228906927764591, 0.26695308369150506, 0.24797517358080343] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 9]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1541999887024696] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1541999887024696, 1.0087360397915692] ***
*** starting iteration: 2; err: [Inf, 1.1541999887024696, 1.0087360397915692] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1541999887024696, 1.0087360397915692, 0.9646620557645342] ***
*** starting iteration: 3; err: [Inf, 1.1541999887024696, 1.0087360397915692, 0.9646620557645342] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1541999887024696, 1.0087360397915692, 0.9646620557645342, 0.9588966031712531] ***
*** starting iteration: 4; err: [Inf, 1.1541999887024696, 1.0087360397915692, 0.9646620557645342, 0.9588966031712531] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1541999887024696, 1.0087360397915692, 0.9646620557645342, 0.9588966031712531, 0.9586709463239544] ***
*** finished computation of 3 references, err: [Inf, 1.1541999887024696, 1.0087360397915692, 0.9646620557645342, 0.9588966031712531, 0.9586709463239544] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 31]]
** centroid: 1, normalized-entropy: 0.995978956518722, [(2, 36), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.811699998343074] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.811699998343074, 0.9023553065318075] ***
*** starting iteration: 2; err: [Inf, 1.811699998343074, 0.9023553065318075] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.811699998343074, 0.9023553065318075, 0.8873786062737138] ***
*** starting iteration: 3; err: [Inf, 1.811699998343074, 0.9023553065318075, 0.8873786062737138] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.811699998343074, 0.9023553065318075, 0.8873786062737138, 0.8870380396286461] ***
*** finished computation of 3 references, err: [Inf, 1.811699998343074, 0.9023553065318075, 0.8873786062737138, 0.8870380396286461] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 34]]
** centroid: 1, normalized-entropy: 0.9932338197397066, [(2, 28), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [15, 2, 0]]
** centroid: 3, normalized-entropy: 0.5225593745369407, [(1, 15), (2, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 10.104300121685517] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.104300121685517, 1.0815374901527215] ***
*** starting iteration: 2; err: [Inf, 10.104300121685517, 1.0815374901527215] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576] ***
*** starting iteration: 3; err: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576, 1.0049210367801371] ***
*** starting iteration: 4; err: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576, 1.0049210367801371] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576, 1.0049210367801371, 0.9977594232948147] ***
*** starting iteration: 5; err: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576, 1.0049210367801371, 0.9977594232948147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576, 1.0049210367801371, 0.9977594232948147, 0.9959306386350536] ***
*** starting iteration: 6; err: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576, 1.0049210367801371, 0.9977594232948147, 0.9959306386350536] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576, 1.0049210367801371, 0.9977594232948147, 0.9959306386350536, 0.9944104090809064] ***
*** starting iteration: 7; err: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576, 1.0049210367801371, 0.9977594232948147, 0.9959306386350536, 0.9944104090809064] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576, 1.0049210367801371, 0.9977594232948147, 0.9959306386350536, 0.9944104090809064, 0.9933678951538036] ***
*** starting iteration: 8; err: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576, 1.0049210367801371, 0.9977594232948147, 0.9959306386350536, 0.9944104090809064, 0.9933678951538036] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576, 1.0049210367801371, 0.9977594232948147, 0.9959306386350536, 0.9944104090809064, 0.9933678951538036, 0.9919495437245217] ***
*** starting iteration: 9; err: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576, 1.0049210367801371, 0.9977594232948147, 0.9959306386350536, 0.9944104090809064, 0.9933678951538036, 0.9919495437245217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576, 1.0049210367801371, 0.9977594232948147, 0.9959306386350536, 0.9944104090809064, 0.9933678951538036, 0.9919495437245217, 0.9919495437245217] ***
*** finished computation of 3 references, err: [Inf, 10.104300121685517, 1.0815374901527215, 1.0217021141394576, 1.0049210367801371, 0.9977594232948147, 0.9959306386350536, 0.9944104090809064, 0.9933678951538036, 0.9919495437245217, 0.9919495437245217] ***
*** center 1: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 35]]
** centroid: 2, normalized-entropy: 0.9936507116910402, [(2, 29), (3, 35)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [10, 4, 0]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(1, 10), (2, 4)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5175999948500118] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5175999948500118, 0.5142304115167553] ***
*** starting iteration: 2; err: [Inf, 1.5175999948500118, 0.5142304115167553] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5175999948500118, 0.5142304115167553, 0.5135847535430826] ***
*** finished computation of 3 references, err: [Inf, 1.5175999948500118, 0.5142304115167553, 0.5135847535430826] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 37, 10]]
** centroid: 1, normalized-entropy: 0.7467366074830678, [(2, 37), (3, 10)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0203999997405244] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0203999997405244, 0.4827307794934522] ***
*** starting iteration: 2; err: [Inf, 1.0203999997405244, 0.4827307794934522] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0203999997405244, 0.4827307794934522, 0.4814059754262259] ***
*** starting iteration: 3; err: [Inf, 1.0203999997405244, 0.4827307794934522, 0.4814059754262259] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0203999997405244, 0.4827307794934522, 0.4814059754262259, 0.47489938417600824] ***
*** starting iteration: 4; err: [Inf, 1.0203999997405244, 0.4827307794934522, 0.4814059754262259, 0.47489938417600824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0203999997405244, 0.4827307794934522, 0.4814059754262259, 0.47489938417600824, 0.4693195407606835] ***
*** starting iteration: 5; err: [Inf, 1.0203999997405244, 0.4827307794934522, 0.4814059754262259, 0.47489938417600824, 0.4693195407606835] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0203999997405244, 0.4827307794934522, 0.4814059754262259, 0.47489938417600824, 0.4693195407606835, 0.46401747361121354] ***
*** starting iteration: 6; err: [Inf, 1.0203999997405244, 0.4827307794934522, 0.4814059754262259, 0.47489938417600824, 0.4693195407606835, 0.46401747361121354] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0203999997405244, 0.4827307794934522, 0.4814059754262259, 0.47489938417600824, 0.4693195407606835, 0.46401747361121354, 0.4617854657957676] ***
*** starting iteration: 7; err: [Inf, 1.0203999997405244, 0.4827307794934522, 0.4814059754262259, 0.47489938417600824, 0.4693195407606835, 0.46401747361121354, 0.4617854657957676] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0203999997405244, 0.4827307794934522, 0.4814059754262259, 0.47489938417600824, 0.4693195407606835, 0.46401747361121354, 0.4617854657957676, 0.4617854657957676] ***
*** finished computation of 3 references, err: [Inf, 1.0203999997405244, 0.4827307794934522, 0.4814059754262259, 0.47489938417600824, 0.4693195407606835, 0.46401747361121354, 0.4617854657957676, 0.4617854657957676] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 8]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.195300005838382] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.195300005838382, 0.6383514441803042] ***
*** starting iteration: 2; err: [Inf, 1.195300005838382, 0.6383514441803042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397] ***
*** starting iteration: 3; err: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999] ***
*** starting iteration: 4; err: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999, 0.6237503369679552] ***
*** starting iteration: 5; err: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999, 0.6237503369679552] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999, 0.6237503369679552, 0.6204851939113086] ***
*** starting iteration: 6; err: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999, 0.6237503369679552, 0.6204851939113086] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999, 0.6237503369679552, 0.6204851939113086, 0.6190717504699503] ***
*** starting iteration: 7; err: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999, 0.6237503369679552, 0.6204851939113086, 0.6190717504699503] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999, 0.6237503369679552, 0.6204851939113086, 0.6190717504699503, 0.6112717740599523] ***
*** starting iteration: 8; err: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999, 0.6237503369679552, 0.6204851939113086, 0.6190717504699503, 0.6112717740599523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999, 0.6237503369679552, 0.6204851939113086, 0.6190717504699503, 0.6112717740599523, 0.6072018893538511] ***
*** starting iteration: 9; err: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999, 0.6237503369679552, 0.6204851939113086, 0.6190717504699503, 0.6112717740599523, 0.6072018893538511] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999, 0.6237503369679552, 0.6204851939113086, 0.6190717504699503, 0.6112717740599523, 0.6072018893538511, 0.6008998983319427] ***
*** starting iteration: 10; err: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999, 0.6237503369679552, 0.6204851939113086, 0.6190717504699503, 0.6112717740599523, 0.6072018893538511, 0.6008998983319427] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999, 0.6237503369679552, 0.6204851939113086, 0.6190717504699503, 0.6112717740599523, 0.6072018893538511, 0.6008998983319427, 0.598821837511337] ***
*** finished computation of 3 references, err: [Inf, 1.195300005838382, 0.6383514441803042, 0.6325001949318397, 0.6268998996335999, 0.6237503369679552, 0.6204851939113086, 0.6190717504699503, 0.6112717740599523, 0.6072018893538511, 0.6008998983319427, 0.598821837511337] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 26]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 4), (3, 26)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 9]]
** centroid: 3, normalized-entropy: 0.7897492536625221, [(2, 29), (3, 9)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8752347104561821] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8752347104561821, 0.37983696630432534] ***
*** starting iteration: 2; err: [Inf, 0.8752347104561821, 0.37983696630432534] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8752347104561821, 0.37983696630432534, 0.36569448984625647] ***
*** starting iteration: 3; err: [Inf, 0.8752347104561821, 0.37983696630432534, 0.36569448984625647] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8752347104561821, 0.37983696630432534, 0.36569448984625647, 0.3622205312661198] ***
*** finished computation of 3 references, err: [Inf, 0.8752347104561821, 0.37983696630432534, 0.36569448984625647, 0.3622205312661198] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 37, 9]]
** centroid: 1, normalized-entropy: 0.7131467486384921, [(2, 37), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.584100002041549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.584100002041549, 0.27039948037137984] ***
*** starting iteration: 2; err: [Inf, 0.584100002041549, 0.27039948037137984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.584100002041549, 0.27039948037137984, 0.2384034057094477] ***
*** starting iteration: 3; err: [Inf, 0.584100002041549, 0.27039948037137984, 0.2384034057094477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.584100002041549, 0.27039948037137984, 0.2384034057094477, 0.22609303940425382] ***
*** starting iteration: 4; err: [Inf, 0.584100002041549, 0.27039948037137984, 0.2384034057094477, 0.22609303940425382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.584100002041549, 0.27039948037137984, 0.2384034057094477, 0.22609303940425382, 0.22158613833374843] ***
*** starting iteration: 5; err: [Inf, 0.584100002041549, 0.27039948037137984, 0.2384034057094477, 0.22609303940425382, 0.22158613833374843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.584100002041549, 0.27039948037137984, 0.2384034057094477, 0.22609303940425382, 0.22158613833374843, 0.22095876653273297] ***
*** finished computation of 7 references, err: [Inf, 0.584100002041549, 0.27039948037137984, 0.2384034057094477, 0.22609303940425382, 0.22158613833374843, 0.22095876653273297] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 10, 10]]
** centroid: 3, normalized-entropy: 1.0, [(2, 10), (3, 10)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5091000090553552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5091000090553552, 0.26279625110351623] ***
*** starting iteration: 2; err: [Inf, 0.5091000090553552, 0.26279625110351623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516] ***
*** starting iteration: 3; err: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902] ***
*** starting iteration: 4; err: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902, 0.2415017603696469] ***
*** starting iteration: 5; err: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902, 0.2415017603696469] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902, 0.2415017603696469, 0.23589590887754214] ***
*** starting iteration: 6; err: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902, 0.2415017603696469, 0.23589590887754214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902, 0.2415017603696469, 0.23589590887754214, 0.23143022456404233] ***
*** starting iteration: 7; err: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902, 0.2415017603696469, 0.23589590887754214, 0.23143022456404233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902, 0.2415017603696469, 0.23589590887754214, 0.23143022456404233, 0.2267401019700612] ***
*** starting iteration: 8; err: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902, 0.2415017603696469, 0.23589590887754214, 0.23143022456404233, 0.2267401019700612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902, 0.2415017603696469, 0.23589590887754214, 0.23143022456404233, 0.2267401019700612, 0.22041712064244656] ***
*** starting iteration: 9; err: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902, 0.2415017603696469, 0.23589590887754214, 0.23143022456404233, 0.2267401019700612, 0.22041712064244656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902, 0.2415017603696469, 0.23589590887754214, 0.23143022456404233, 0.2267401019700612, 0.22041712064244656, 0.218447201747367] ***
*** starting iteration: 10; err: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902, 0.2415017603696469, 0.23589590887754214, 0.23143022456404233, 0.2267401019700612, 0.22041712064244656, 0.218447201747367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902, 0.2415017603696469, 0.23589590887754214, 0.23143022456404233, 0.2267401019700612, 0.22041712064244656, 0.218447201747367, 0.21804486003100634] ***
*** finished computation of 7 references, err: [Inf, 0.5091000090553552, 0.26279625110351623, 0.2511695889021516, 0.24805806804058902, 0.2415017603696469, 0.23589590887754214, 0.23143022456404233, 0.2267401019700612, 0.22041712064244656, 0.218447201747367, 0.21804486003100634] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 5: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 12, 7]]
** centroid: 6, normalized-entropy: 0.9494520153879484, [(2, 12), (3, 7)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48650000772832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48650000772832, 0.30037385342614326] ***
*** starting iteration: 2; err: [Inf, 0.48650000772832, 0.30037385342614326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48650000772832, 0.30037385342614326, 0.2684154026818404] ***
*** starting iteration: 3; err: [Inf, 0.48650000772832, 0.30037385342614326, 0.2684154026818404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48650000772832, 0.30037385342614326, 0.2684154026818404, 0.259559340684968] ***
*** starting iteration: 4; err: [Inf, 0.48650000772832, 0.30037385342614326, 0.2684154026818404, 0.259559340684968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48650000772832, 0.30037385342614326, 0.2684154026818404, 0.259559340684968, 0.25469154312840325] ***
*** starting iteration: 5; err: [Inf, 0.48650000772832, 0.30037385342614326, 0.2684154026818404, 0.259559340684968, 0.25469154312840325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48650000772832, 0.30037385342614326, 0.2684154026818404, 0.259559340684968, 0.25469154312840325, 0.2542853361049421] ***
*** finished computation of 7 references, err: [Inf, 0.48650000772832, 0.30037385342614326, 0.2684154026818404, 0.259559340684968, 0.25469154312840325, 0.2542853361049421] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 19, 9]]
** centroid: 7, normalized-entropy: 0.9059282160429994, [(2, 19), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5315000032647663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5315000032647663, 0.2649076434476554] ***
*** starting iteration: 2; err: [Inf, 0.5315000032647663, 0.2649076434476554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5315000032647663, 0.2649076434476554, 0.2453514303498012] ***
*** starting iteration: 3; err: [Inf, 0.5315000032647663, 0.2649076434476554, 0.2453514303498012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5315000032647663, 0.2649076434476554, 0.2453514303498012, 0.23196828405204875] ***
*** starting iteration: 4; err: [Inf, 0.5315000032647663, 0.2649076434476554, 0.2453514303498012, 0.23196828405204875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5315000032647663, 0.2649076434476554, 0.2453514303498012, 0.23196828405204875, 0.22421909619848612] ***
*** starting iteration: 5; err: [Inf, 0.5315000032647663, 0.2649076434476554, 0.2453514303498012, 0.23196828405204875, 0.22421909619848612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5315000032647663, 0.2649076434476554, 0.2453514303498012, 0.23196828405204875, 0.22421909619848612, 0.22148168361901038] ***
*** starting iteration: 6; err: [Inf, 0.5315000032647663, 0.2649076434476554, 0.2453514303498012, 0.23196828405204875, 0.22421909619848612, 0.22148168361901038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5315000032647663, 0.2649076434476554, 0.2453514303498012, 0.23196828405204875, 0.22421909619848612, 0.22148168361901038, 0.22148168361901038] ***
*** finished computation of 7 references, err: [Inf, 0.5315000032647663, 0.2649076434476554, 0.2453514303498012, 0.23196828405204875, 0.22421909619848612, 0.22148168361901038, 0.22148168361901038] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 10]]
** centroid: 3, normalized-entropy: 1.0, [(2, 10), (3, 10)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5428000001447139] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5428000001447139, 0.23615853082948315] ***
*** starting iteration: 2; err: [Inf, 0.5428000001447139, 0.23615853082948315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5428000001447139, 0.23615853082948315, 0.21282032710323748] ***
*** starting iteration: 3; err: [Inf, 0.5428000001447139, 0.23615853082948315, 0.21282032710323748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5428000001447139, 0.23615853082948315, 0.21282032710323748, 0.20671992741749318] ***
*** starting iteration: 4; err: [Inf, 0.5428000001447139, 0.23615853082948315, 0.21282032710323748, 0.20671992741749318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5428000001447139, 0.23615853082948315, 0.21282032710323748, 0.20671992741749318, 0.20671992741749318] ***
*** finished computation of 7 references, err: [Inf, 0.5428000001447139, 0.23615853082948315, 0.21282032710323748, 0.20671992741749318, 0.20671992741749318] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 7]]
** centroid: 1, normalized-entropy: 0.9494520153879484, [(2, 12), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 7, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6498000009094156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6498000009094156, 0.2468115560323329] ***
*** starting iteration: 2; err: [Inf, 0.6498000009094156, 0.2468115560323329] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6498000009094156, 0.2468115560323329, 0.23666961016157015] ***
*** starting iteration: 3; err: [Inf, 0.6498000009094156, 0.2468115560323329, 0.23666961016157015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6498000009094156, 0.2468115560323329, 0.23666961016157015, 0.23490876513656136] ***
*** starting iteration: 4; err: [Inf, 0.6498000009094156, 0.2468115560323329, 0.23666961016157015, 0.23490876513656136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6498000009094156, 0.2468115560323329, 0.23666961016157015, 0.23490876513656136, 0.2322460149262475] ***
*** starting iteration: 5; err: [Inf, 0.6498000009094156, 0.2468115560323329, 0.23666961016157015, 0.23490876513656136, 0.2322460149262475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6498000009094156, 0.2468115560323329, 0.23666961016157015, 0.23490876513656136, 0.2322460149262475, 0.2322460149262475] ***
*** finished computation of 7 references, err: [Inf, 0.6498000009094156, 0.2468115560323329, 0.23666961016157015, 0.23490876513656136, 0.2322460149262475, 0.2322460149262475] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 4, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6869000066484644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6869000066484644, 0.2542132584576324] ***
*** finished computation of 7 references, err: [Inf, 0.6869000066484644, 0.2542132584576324] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 5]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 10, 3]]
** centroid: 6, normalized-entropy: 0.7793498372920851, [(2, 10), (3, 3)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47990000506794206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47990000506794206, 0.267105842387302] ***
*** finished computation of 7 references, err: [Inf, 0.47990000506794206, 0.267105842387302] ***
*** center 1: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 3]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 6), (3, 3)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 18, 3]]
** centroid: 6, normalized-entropy: 0.5916727785823274, [(2, 18), (3, 3)]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5489000066633509] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5489000066633509, 0.30135597806807196] ***
*** finished computation of 7 references, err: [Inf, 0.5489000066633509, 0.30135597806807196] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 19, 2]]
** centroid: 1, normalized-entropy: 0.45371633918694493, [(2, 19), (3, 2)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 5]]
** centroid: 5, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 14)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 14
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 14)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 14
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 14)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 14
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 14)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 14
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 14)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 15
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.32167683251416096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32167683251416096, 0.2190707747798528] ***
*** starting iteration: 2; err: [Inf, 0.32167683251416096, 0.2190707747798528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32167683251416096, 0.2190707747798528, 0.19025273976879656] ***
*** starting iteration: 3; err: [Inf, 0.32167683251416096, 0.2190707747798528, 0.19025273976879656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32167683251416096, 0.2190707747798528, 0.19025273976879656, 0.18861593801555795] ***
*** finished computation of 7 references, err: [Inf, 0.32167683251416096, 0.2190707747798528, 0.19025273976879656, 0.18861593801555795] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 7, 11]]
** centroid: 5, normalized-entropy: 0.9640787648082293, [(2, 7), (3, 11)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.409758375526941] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.409758375526941, 0.19808180668180156] ***
*** starting iteration: 2; err: [Inf, 0.409758375526941, 0.19808180668180156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.409758375526941, 0.19808180668180156, 0.1822212931383304] ***
*** starting iteration: 3; err: [Inf, 0.409758375526941, 0.19808180668180156, 0.1822212931383304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.409758375526941, 0.19808180668180156, 0.1822212931383304, 0.17439040161646388] ***
*** finished computation of 7 references, err: [Inf, 0.409758375526941, 0.19808180668180156, 0.1822212931383304, 0.17439040161646388] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 7, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 6: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4022282496416916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4022282496416916, 0.3349186508755328] ***
*** starting iteration: 2; err: [Inf, 1.4022282496416916, 0.3349186508755328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4022282496416916, 0.3349186508755328, 0.2568340764488599] ***
*** starting iteration: 3; err: [Inf, 1.4022282496416916, 0.3349186508755328, 0.2568340764488599] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4022282496416916, 0.3349186508755328, 0.2568340764488599, 0.22866492298965305] ***
*** finished computation of 7 references, err: [Inf, 1.4022282496416916, 0.3349186508755328, 0.2568340764488599, 0.22866492298965305] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 17]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 16
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.390427653401026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.390427653401026, 0.20375777598995004] ***
*** finished computation of 7 references, err: [Inf, 0.390427653401026, 0.20375777598995004] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 6, 17]]
** centroid: 4, normalized-entropy: 0.828055725379504, [(2, 6), (3, 17)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9799186424285792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9799186424285792, 0.2456845713389617] ***
*** finished computation of 7 references, err: [Inf, 0.9799186424285792, 0.2456845713389617] ***
*** center 1: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 4: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 7]]
** centroid: 6, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 7, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32641766532639777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32641766532639777, 0.18578981347213833] ***
*** finished computation of 7 references, err: [Inf, 0.32641766532639777, 0.18578981347213833] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 17]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(2, 4), (3, 17)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 7, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 17
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.3766000002433222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3766000002433222, 0.2814750009606554] ***
*** starting iteration: 2; err: [Inf, 0.3766000002433222, 0.2814750009606554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3766000002433222, 0.2814750009606554, 0.26425437732196877] ***
*** starting iteration: 3; err: [Inf, 0.3766000002433222, 0.2814750009606554, 0.26425437732196877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3766000002433222, 0.2814750009606554, 0.26425437732196877, 0.2606068535114024] ***
*** finished computation of 7 references, err: [Inf, 0.3766000002433222, 0.2814750009606554, 0.26425437732196877, 0.2606068535114024] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3691000000206755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3691000000206755, 0.26644345455312435] ***
*** starting iteration: 2; err: [Inf, 0.3691000000206755, 0.26644345455312435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3691000000206755, 0.26644345455312435, 0.2519832915115406] ***
*** starting iteration: 3; err: [Inf, 0.3691000000206755, 0.26644345455312435, 0.2519832915115406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3691000000206755, 0.26644345455312435, 0.2519832915115406, 0.24074207267546532] ***
*** finished computation of 7 references, err: [Inf, 0.3691000000206755, 0.26644345455312435, 0.2519832915115406, 0.24074207267546532] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 18]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6745000037312068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6745000037312068, 0.3762061417282893] ***
*** starting iteration: 2; err: [Inf, 0.6745000037312068, 0.3762061417282893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6745000037312068, 0.3762061417282893, 0.3351215806476112] ***
*** starting iteration: 3; err: [Inf, 0.6745000037312068, 0.3762061417282893, 0.3351215806476112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6745000037312068, 0.3762061417282893, 0.3351215806476112, 0.3074440064109809] ***
*** finished computation of 7 references, err: [Inf, 0.6745000037312068, 0.3762061417282893, 0.3351215806476112, 0.3074440064109809] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 17]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 1), (3, 17)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 17
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.3125, 3.7125, 1.50625, 0.29375000000000007], [7.514285714285715, 3.1571428571428575, 6.3428571428571425, 2.1142857142857143], [5.910000000000001, 2.8499999999999996, 4.64, 1.47], [5.96, 2.71, 5.07, 1.8100000000000005], [6.707142857142857, 3.0, 5.607142857142857, 2.092857142857143], [6.581818181818181, 3.0090909090909084, 4.618181818181818, 1.4454545454545455], [4.8, 3.13125, 1.50625, 0.19375000000000006], [5.581249999999999, 2.5562500000000004, 3.88125, 1.1625]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 3, 2, 1, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.511111111111111, 3.0444444444444443, 5.51111111111111, 2.088888888888889], [4.6625, 3.0812500000000003, 1.3500000000000003, 0.20000000000000004], [5.552631578947367, 2.6736842105263157, 3.9631578947368418, 1.2578947368421052], [7.45, 3.7, 6.4, 2.35], [5.174999999999999, 3.5800000000000005, 1.4999999999999998, 0.27], [6.341666666666668, 2.858333333333333, 4.583333333333334, 1.4583333333333337], [6.057142857142857, 2.757142857142857, 4.957142857142856, 1.8142857142857143], [7.366666666666667, 2.966666666666667, 6.183333333333334, 1.9166666666666667]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 3, 1, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.406666666666667, 2.5533333333333332, 3.8466666666666662, 1.1800000000000002], [7.800000000000001, 3.8, 6.550000000000001, 2.1], [4.8238095238095235, 3.257142857142858, 1.4095238095238096, 0.2285714285714286], [6.4944444444444445, 3.1, 5.494444444444444, 2.1999999999999997], [5.4, 3.909090909090909, 1.5454545454545454, 0.2909090909090909], [7.56, 2.82, 6.419999999999999, 2.06], [6.310526315789473, 2.952631578947368, 4.6157894736842096, 1.4578947368421051], [5.988888888888888, 2.711111111111111, 4.966666666666667, 1.822222222222222]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 1, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[54, 1, 22, 32, 3, 1, 2, 35, 37, 30, 30, 6, 28, 17, 9, 4, 2, 10, 44, 23, 27, 13, 13, 42, 29, 2, 26, 20, 58, 29, 7, 28, 28, 22, 38, 37, 35, 30, 38, 36, 19, 33, 15, 23, 31, 34, 1, 70, 35, 44, 8, 19, 40, 35, 26, 42, 6, 39, 32, 1, 25, 53, 41, 32, 39, 49, 39, 48, 27, 25, 44, 39, 46, 1, 4, 35, 36, 24, 42, 67, 27, 14, 54, 8, 47, 35, 20, 44, 7, 32, 31, 25, 33, 34, 49, 46, 30, 25, 23, 46, 27, 1, 32, 38, 63, 45, 54, 49, 38, 23, 54, 21, 18, 18, 18, 21, 15, 35, 56, 32, 22, 46, 30, 42, 41, 37, 34, 4, 45, 17, 31, 35, 21, 39, 45, 28, 36, 41, 29, 24, 24, 34, 4, 29, 22, 48, 51, 68, 29, 17, 63, 43, 35, 8, 22, 48, 41, 46, 38, 69, 30, 26, 35, 28, 37, 22, 23, 15, 34, 45, 52, 42, 31, 36, 27, 28, 13, 27, 40, 39, 36, 35, 14, 49, 23, 39, 27, 21, 50, 29, 43, 37, 38, 31, 39, 31, 35, 48, 26, 43, 41, 44, 38, 17, 43, 37, 53, 40, 61, 46, 52, 29, 46, 42, 24, 38, 41, 58, 45, 52, 26, 39, 28, 43, 33, 36, 43, 84, 42, 28, 20, 81, 19, 29, 75, 26, 54, 61, 30, 1, 34, 36, 37, 24, 37, 56, 37, 44, 28, 29, 19, 67, 15, 25, 36, 28, 42, 43, 18, 16, 50, 48, 45, 44, 26, 39, 34, 46, 34, 15, 29, 30, 72, 35, 12, 51, 23, 46, 15, 47, 29, 35, 34, 74, 54, 40, 24, 27, 34, 46, 27, 20, 39, 41, 22, 45, 29, 20, 43, 45]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5860000000000002, speedup = 0.5518635491988316, eval_ratio = 0.042048)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3480902777777775,"recall":0.3480902777777775,"f1":null,"seconds":8.11312347650528e-5,"exhaustive_search_seconds":0.0003753434866666794,"evaluations":339.21875,"distances_sum":1766.4945216609049}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5295138888888888,"recall":0.5295138888888888,"f1":null,"seconds":0.00011910684406757355,"exhaustive_search_seconds":0.0003753434866666794,"evaluations":380.1015625,"distances_sum":1631.041117279679}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6467013888888887,"recall":0.6467013888888887,"f1":null,"seconds":0.0001401156187057495,"exhaustive_search_seconds":0.0003753434866666794,"evaluations":421.1875,"distances_sum":1579.9146716484647}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7274305555555554,"recall":0.7274305555555554,"f1":0.7274305555555554,"seconds":0.00017466582357883453,"exhaustive_search_seconds":0.0003753434866666794,"evaluations":461.4765625,"distances_sum":1556.8740239261217}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7743055555555548,"recall":0.7743055555555548,"f1":0.7743055555555548,"seconds":0.0003171507269144058,"exhaustive_search_seconds":0.0003753434866666794,"evaluations":500.203125,"distances_sum":1544.572866853676}
KCenters.DeloneInvIndex> reached performance {"precision":0.8246527777777769,"recall":0.8246527777777769,"f1":0.8246527777777769,"seconds":0.00023393891751766205,"exhaustive_search_seconds":0.0003753434866666794,"evaluations":539.96875,"distances_sum":1533.580073586894}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7730000000000001, speedup = 2.256799682350606, eval_ratio = 0.053948)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
