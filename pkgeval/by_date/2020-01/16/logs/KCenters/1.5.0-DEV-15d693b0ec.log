Julia Version 1.5.0-DEV.71
Commit 15d693b0ec (2020-01-15 18:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed InvertedIndices ───────────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Compat ────────────────────── v3.2.0
 Installed KCenters ──────────────────── v0.1.8
 Installed OrderedCollections ────────── v1.1.0
 Installed DataStructures ────────────── v0.17.9
 Installed MLDataPattern ─────────────── v0.5.0
 Installed Reexport ──────────────────── v0.2.0
 Installed Parsers ───────────────────── v0.3.10
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Missings ──────────────────── v0.4.3
 Installed MLDataUtils ───────────────── v0.5.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataAPI ───────────────────── v1.1.0
 Installed DataFrames ────────────────── v0.20.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed JSON ──────────────────────── v0.21.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed Tables ────────────────────── v0.2.11
 Installed MappedArrays ──────────────── v0.2.2
 Installed TableTraits ───────────────── v1.0.0
 Installed StatsBase ─────────────────── v0.32.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_9KM2Qq/Project.toml`
 [no changes]
  Updating `/tmp/jl_9KM2Qq/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_9KM2Qq/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 146.9
[ Info: 73.60000000000001
[ Info: 40.059999999999995
[ Info: 24.17
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999839687118
[ Info: 75.70000114415876
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.848766655926106
inertia(cdnet.distances) = 27.535958745577663
inertia(crand.distances) = 20.163171286356555
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8036385489510497,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.546875,"distances_sum":1932.0051507315015}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.55078125,"f1":null,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":7.4609375,"distances_sum":1483.2569561065118}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.8036385489510497,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.546875,"distances_sum":1932.0051507315015}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8626607767232775,"seconds":7.3462724685668945e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.5859375,"distances_sum":2283.657713358817}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.941526702464203,"seconds":7.594004273414612e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.8515625,"distances_sum":2842.750390486513}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8532925407925416,"seconds":6.917864084243774e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.6640625,"distances_sum":2183.127203029086}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8603745213120223,"seconds":6.735324859619141e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.609375,"distances_sum":2287.0537572931717}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.941526702464203,"seconds":7.594004273414612e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.8515625,"distances_sum":2842.750390486513}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9424164377289382,"seconds":7.387250661849976e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.9375,"distances_sum":2812.0205003050987}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.960831876456877,"seconds":7.120892405509949e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.9296875,"distances_sum":3038.0908672188807}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.960831876456877,"seconds":7.120892405509949e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.9296875,"distances_sum":3038.0908672188807}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.960831876456877,"seconds":7.120892405509949e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.9296875,"distances_sum":3038.0908672188807}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8632060647685654,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.7109375,"distances_sum":2244.9720064276194}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8569961288711295,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.546875,"distances_sum":2230.949316035583}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51171875, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.51171875,"f1":null,"seconds":4.556030035018921e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.171875,"distances_sum":1306.0641694782457}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.55078125,"f1":null,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.0390625,"distances_sum":1454.994099724011}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8632060647685654,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.7109375,"distances_sum":2244.9720064276194}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9049336080586085,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.734375,"distances_sum":2490.6351041114226}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9406395687645694,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.796875,"distances_sum":2762.4098175752692}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8822769244644251,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.5234375,"distances_sum":2409.853641223672}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9567250457875462,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8125,"distances_sum":2895.014227949235}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9260390651015658,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.703125,"distances_sum":2690.29097931267}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8916628510378517,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.6484375,"distances_sum":2450.5537632787077}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9567250457875462,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8125,"distances_sum":2895.014227949235}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687156593406601,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.921875,"distances_sum":2967.2367567432366}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687156593406601,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.921875,"distances_sum":2967.2367567432366}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687156593406601,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.921875,"distances_sum":2967.2367567432366}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7835784007659016,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.2421875,"distances_sum":1778.5728052073255}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7126524517149522,"seconds":4.37907874584198e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.5234375,"distances_sum":1513.41079927873}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.734375,"distances_sum":1047.3180823691002}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7835784007659016,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.2421875,"distances_sum":1778.5728052073255}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9062276265401273,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8515625,"distances_sum":2491.405338823654}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.83984375,"f1":0.9062276265401273,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8515625,"distances_sum":2491.405338823654}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.83984375,"f1":0.9062276265401273,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8515625,"distances_sum":2491.405338823654}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.83984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.83984375,"f1":0.9062276265401273,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8515625,"distances_sum":2491.405338823654}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7892872752247759,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":7.5859375,"distances_sum":1779.3174401593799}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7892872752247759,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":7.5859375,"distances_sum":1779.3174401593799}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9495624167499173,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.7265625,"distances_sum":2814.2083542712526}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9495624167499173,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.7265625,"distances_sum":2814.2083542712526}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9707245879120883,"seconds":6.375834345817566e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.875,"distances_sum":2962.076904815017}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9656078296703299,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.8515625,"distances_sum":2908.0331077922356}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786286630036631,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9375,"distances_sum":3019.890228089997}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786286630036631,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9375,"distances_sum":3019.890228089997}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786286630036631,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9375,"distances_sum":3019.890228089997}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7764379717504725,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.3828125,"distances_sum":1797.6363835171935}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7742453726828734,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.5,"distances_sum":1735.1512399701828}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6552734375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6552734375,"f1":0.7764379717504725,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.3828125,"distances_sum":1797.6363835171935}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9079384157509167,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.859375,"distances_sum":2509.50796974161}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524439102564107,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.96875,"distances_sum":2801.2933729417177}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9114359598734608,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.9453125,"distances_sum":2472.4262522234244}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9524439102564107,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.96875,"distances_sum":2801.2933729417177}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684924450549455,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.96875,"distances_sum":2953.2324629231953}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9621165293040297,"seconds":6.452202796936035e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.9453125,"distances_sum":2901.4215844259584}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9536203379953383,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.8984375,"distances_sum":2875.7319747510337}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612809065934069,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.9296875,"distances_sum":2901.3996038373057}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684924450549455,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.96875,"distances_sum":2953.2324629231953}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684924450549455,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.96875,"distances_sum":2953.2324629231953}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.560546875,"f1":null,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.28125,"distances_sum":1499.7063763015042}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7073237526362531,"seconds":4.2263418436050415e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.3203125,"distances_sum":1485.884090422498}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5625,"f1":0.7073237526362531,"seconds":4.2263418436050415e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.3203125,"distances_sum":1485.884090422498}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8640432484182493,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.2734375,"distances_sum":2194.0872894342124}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7937775765900774,"seconds":4.7478824853897095e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.75,"distances_sum":1832.0352463185718}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7940765831390839,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.859375,"distances_sum":1801.1370037701622}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8640432484182493,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.2734375,"distances_sum":2194.0872894342124}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9303831585081591,"seconds":6.5583735704422e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.546875,"distances_sum":2652.20364920866}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9341918498168506,"seconds":6.727874279022217e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.53125,"distances_sum":2668.725033222455}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9339228479853486,"seconds":6.645917892456055e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.546875,"distances_sum":2682.2663365813733}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9075091575091582,"seconds":6.7837536334991455e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.4921875,"distances_sum":2495.6822040686784}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.959475420412921,"seconds":6.796792149543762e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8359375,"distances_sum":2929.150235863302}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9568884240759247,"seconds":6.884336471557617e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8125,"distances_sum":2905.842024646673}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9382326007326014,"seconds":6.401911377906799e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.609375,"distances_sum":2721.4419196345475}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.959475420412921,"seconds":6.796792149543762e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8359375,"distances_sum":2929.150235863302}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.959475420412921,"seconds":6.796792149543762e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8359375,"distances_sum":2929.150235863302}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.53515625,"f1":null,"seconds":3.959983587265015e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.265625,"distances_sum":1375.34436467368}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.419921875,"f1":null,"seconds":3.807246685028076e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.5546875,"distances_sum":1126.4850410408735}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.53515625,"state":{"ssize":2,"bsize":3},"perf":{"precision":null,"recall":0.53515625,"f1":null,"seconds":3.959983587265015e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.265625,"distances_sum":1375.34436467368}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5693359375,"f1":null,"seconds":4.334375262260437e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.3515625,"distances_sum":1486.456476424769}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8616050616050626,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.328125,"distances_sum":2167.712958859991}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8616050616050626,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.328125,"distances_sum":2167.712958859991}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9500629578754582,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.78125,"distances_sum":2794.1989835739373}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9189477189477198,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.6640625,"distances_sum":2548.6133396604364}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9214171245421253,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.625,"distances_sum":2539.265821785161}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9500629578754582,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.78125,"distances_sum":2794.1989835739373}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9500629578754582,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.78125,"distances_sum":2794.1989835739373}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5419921875,"f1":0.6876547064047068,"seconds":4.541128873825073e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8828125,"distances_sum":1403.1321845133295}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.870435814185815,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4765625,"distances_sum":2214.3958148623783}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.870435814185815,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4765625,"distances_sum":2214.3958148623783}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9633585164835169,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":2870.296487713215}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9633585164835169,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":2870.296487713215}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9743131868131871,"seconds":6.400048732757568e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9765625,"distances_sum":2951.880283649778}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9644574175824178,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":2896.195355487275}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9743131868131871,"seconds":6.400048732757568e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9765625,"distances_sum":2951.880283649778}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9743131868131871,"seconds":6.400048732757568e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9765625,"distances_sum":2951.880283649778}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.852367771117772,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3359375,"distances_sum":2113.7926254561157}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.852367771117772,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3359375,"distances_sum":2113.7926254561157}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8771072677322688,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.4375,"distances_sum":2270.623908124746}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9482574716949723,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.71875,"distances_sum":2821.7888675363947}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.867778055278056,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.359375,"distances_sum":2159.4278839916747}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8550152972027978,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.2890625,"distances_sum":2130.7672652029437}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9482574716949723,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.71875,"distances_sum":2821.7888675363947}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723786630036635,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.875,"distances_sum":2986.2877510643248}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.952369505494506,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7734375,"distances_sum":2833.277992870668}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9692937271062275,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8828125,"distances_sum":2915.7232528847753}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9616846694971697,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8515625,"distances_sum":2917.086071313149}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9674507783882789,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.890625,"distances_sum":2915.5565218648417}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9723786630036635,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.875,"distances_sum":2986.2877510643248}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9723786630036635,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.875,"distances_sum":2986.2877510643248}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2099609375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2099609375,"f1":null,"seconds":3.244727849960327e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.953125,"distances_sum":502.250764012914}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2099609375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.2099609375,"f1":null,"seconds":3.244727849960327e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.953125,"distances_sum":502.250764012914}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2099609375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.2099609375,"f1":null,"seconds":3.244727849960327e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.953125,"distances_sum":502.250764012914}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.345703125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.345703125,"f1":null,"seconds":3.5222619771957397e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.703125,"distances_sum":862.1148979581411}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8524577852702862,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.0625,"distances_sum":1948.7123641102357}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8524577852702862,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.0625,"distances_sum":1948.7123641102357}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8841231684981694,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2109375,"distances_sum":2115.769878500324}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9453754578754583,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7109375,"distances_sum":2499.8431334214843}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9453754578754583,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7109375,"distances_sum":2499.8431334214843}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9714114010989015,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.90625,"distances_sum":2670.2967464172293}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9714114010989015,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.90625,"distances_sum":2670.2967464172293}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9714114010989015,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.90625,"distances_sum":2670.2967464172293}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5595703125,"f1":null,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.0859375,"distances_sum":1249.1995254813974}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8019017440892448,"seconds":4.541128873825073e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.9140625,"distances_sum":1644.524649750651}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.8019017440892448,"seconds":4.541128873825073e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.9140625,"distances_sum":1644.524649750651}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9409886988011994,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.78125,"distances_sum":2333.503345752155}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9409886988011994,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.78125,"distances_sum":2333.503345752155}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9660370879120883,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.90625,"distances_sum":2474.9476839489307}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9660370879120883,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.90625,"distances_sum":2474.9476839489307}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9660370879120883,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.90625,"distances_sum":2474.9476839489307}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7875685078810086,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.921875,"distances_sum":1616.4913638895453}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7875685078810086,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.921875,"distances_sum":1616.4913638895453}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.871239004051505,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.125,"distances_sum":2018.819748432229}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8501288641913651,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9609375,"distances_sum":1937.4407952585896}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.871239004051505,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.125,"distances_sum":2018.819748432229}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9275412087912095,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.609375,"distances_sum":2330.9363099665507}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9443566849816856,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6796875,"distances_sum":2499.0548035598918}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9460253288378291,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.671875,"distances_sum":2510.343064683537}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.906536172161173,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.53125,"distances_sum":2231.523312073215}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9186043123543131,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5546875,"distances_sum":2332.6395565506273}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9460253288378291,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.671875,"distances_sum":2510.343064683537}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9460253288378291,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.671875,"distances_sum":2510.343064683537}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5302734375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5302734375,"f1":0.6768927253302258,"seconds":4.0940940380096436e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":6.8125,"distances_sum":1255.6234939509943}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8557442557442567,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":7.875,"distances_sum":1907.9185495987876}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8557442557442567,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":7.875,"distances_sum":1907.9185495987876}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9330648518148524,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.6640625,"distances_sum":2317.347526220538}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9143429487179496,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.484375,"distances_sum":2276.8856979596517}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8585888070263079,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":7.984375,"distances_sum":1914.1183078238048}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8978136446886453,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.359375,"distances_sum":2139.0945072290574}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8941480394605402,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.359375,"distances_sum":2096.9173369861132}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9330648518148524,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.6640625,"distances_sum":2317.347526220538}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9510702838827845,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.765625,"distances_sum":2464.25152237599}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9715258699633704,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.875,"distances_sum":2573.312804852825}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9476820054945061,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.75,"distances_sum":2424.852860309759}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274726,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.90625,"distances_sum":2568.633473398978}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9595841658341662,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8125,"distances_sum":2488.581900175794}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9754464285714288,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8984375,"distances_sum":2603.7443609840952}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9555918040293044,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8359375,"distances_sum":2468.614704295582}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9754464285714288,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8984375,"distances_sum":2603.7443609840952}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9754464285714288,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8984375,"distances_sum":2603.7443609840952}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4052734375,"f1":0.5549852924852925,"seconds":4.041939973831177e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.7109375,"distances_sum":930.4618092037556}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8718869671994682,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.0546875,"distances_sum":1959.297743893907}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8718869671994682,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.0546875,"distances_sum":1959.297743893907}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9236752830502836,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.578125,"distances_sum":2269.6172112781655}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9553628663003666,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8203125,"distances_sum":2515.7754792296623}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9553628663003666,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8203125,"distances_sum":2515.7754792296623}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9670615842490845,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2573.528119438007}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9656879578754584,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2554.3487012397127}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635073260073264,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8671875,"distances_sum":2522.604459857265}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9595066391941398,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2499.137341646213}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9670615842490845,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2573.528119438007}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9670615842490845,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2573.528119438007}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4130859375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4130859375,"f1":null,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.7734375,"distances_sum":1017.721357403532}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":3.818422555923462e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.4609375,"distances_sum":981.2556983918174}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.255859375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.255859375,"f1":null,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.921875,"distances_sum":643.9546458844304}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4130859375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4130859375,"f1":null,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.7734375,"distances_sum":1017.721357403532}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9094785422910433,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.40625,"distances_sum":2294.0595798967347}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9113813270063278,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4921875,"distances_sum":2340.450912810703}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.865093240093241,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.0078125,"distances_sum":2088.66337547806}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84765625,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.84765625,"f1":0.9113813270063278,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4921875,"distances_sum":2340.450912810703}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9285089910089918,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5859375,"distances_sum":2476.1299770761198}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9321230852480858,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.703125,"distances_sum":2455.578421469105}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9573005119880125,"seconds":6.6086649894714355e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2633.1753962167636}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9573005119880125,"seconds":6.6086649894714355e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2633.1753962167636}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9573005119880125,"seconds":6.6086649894714355e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2633.1753962167636}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.6806640625,"f1":null,"seconds":4.388391971588135e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.6171875,"distances_sum":1695.063732615555}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8744479478854484,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.1484375,"distances_sum":2085.635008033524}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8744479478854484,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.1484375,"distances_sum":2085.635008033524}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9152873168498177,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.5546875,"distances_sum":2368.928776994106}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8910605019980027,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.4140625,"distances_sum":2213.079063639604}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8544921875,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8544921875,"f1":0.9152873168498177,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.5546875,"distances_sum":2368.928776994106}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9223328754578762,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.75,"distances_sum":2471.84985424454}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9585222069597074,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.90625,"distances_sum":2737.554710526168}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678056318681323,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8671875,"distances_sum":2833.543472150667}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9620592948717952,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8515625,"distances_sum":2794.0317076602755}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9276728479853485,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.875,"distances_sum":2450.6391814112194}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9390739468864473,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.7265625,"distances_sum":2628.1921034716997}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9678056318681323,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8671875,"distances_sum":2833.543472150667}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9678056318681323,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8671875,"distances_sum":2833.543472150667}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8630385239760248,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.046875,"distances_sum":1932.3205733308803}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.513671875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.513671875,"f1":0.6644529082029087,"seconds":4.133209586143494e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.4921875,"distances_sum":1229.9573196831775}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8630385239760248,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.046875,"distances_sum":1932.3205733308803}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.945773497335998,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6484375,"distances_sum":2618.505514818896}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8848479645354651,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.984375,"distances_sum":2165.398010410892}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8668961247086256,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.0703125,"distances_sum":2040.3763430024703}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.945773497335998,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6484375,"distances_sum":2618.505514818896}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9479452838827843,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.609375,"distances_sum":2633.7896386987622}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9679143772893777,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.796875,"distances_sum":2773.1271944439254}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9548420329670333,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7109375,"distances_sum":2661.3392415210596}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9679143772893777,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.796875,"distances_sum":2773.1271944439254}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9679143772893777,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.796875,"distances_sum":2773.1271944439254}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3427734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3427734375,"f1":null,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.6484375,"distances_sum":826.1499204308767}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5283203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5283203125,"f1":0.6773101898101903,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.9921875,"distances_sum":1182.0941244906326}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5283203125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5283203125,"f1":0.6773101898101903,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.9921875,"distances_sum":1182.0941244906326}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9389423076923085,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5078125,"distances_sum":2513.5302407806375}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8913409507159514,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.1875,"distances_sum":2127.007827151585}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5302734375, conf: {"ssize":7,"bsize":3}, perf: {"precision":null,"recall":0.5302734375,"f1":null,"seconds":4.019588232040405e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.84375,"distances_sum":1236.010033059335}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9389423076923085,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5078125,"distances_sum":2513.5302407806375}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.960531135531136,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8046875,"distances_sum":2677.7615312808525}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9687900641025645,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":2758.0307030231443}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9467548076923086,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6015625,"distances_sum":2621.164933814991}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9687900641025645,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":2758.0307030231443}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9687900641025645,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":2758.0307030231443}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8604660964035974,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.046875,"distances_sum":2029.472132236075}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8604660964035974,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.046875,"distances_sum":2029.472132236075}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8604660964035974,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.046875,"distances_sum":2029.472132236075}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.76953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8604660964035974,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.046875,"distances_sum":2029.472132236075}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.208984375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.208984375,"f1":null,"seconds":3.118067979812622e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.3671875,"distances_sum":575.2099322793057}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.208984375,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.208984375,"f1":null,"seconds":3.118067979812622e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.3671875,"distances_sum":575.2099322793057}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.208984375,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.208984375,"f1":null,"seconds":3.118067979812622e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.3671875,"distances_sum":575.2099322793057}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7942640692640702,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.2890625,"distances_sum":1513.8237350426614}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6728515625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6728515625,"f1":0.7942640692640702,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.2890625,"distances_sum":1513.8237350426614}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9052369505494514,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.3359375,"distances_sum":2192.3404050386775}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8442775974025982,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.640625,"distances_sum":1730.6912054432287}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8448353729603738,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.703125,"distances_sum":1699.7814567993848}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8369140625,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8369140625,"f1":0.9052369505494514,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.3359375,"distances_sum":2192.3404050386775}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9554747335997338,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.765625,"distances_sum":2540.0904707528807}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9625801282051285,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.828125,"distances_sum":2607.3136075795214}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9069940476190482,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.421875,"distances_sum":2145.7194135795794}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9419585622710627,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.5546875,"distances_sum":2407.4473911070545}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.958877060439561,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8203125,"distances_sum":2555.1597751218683}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9445798992673996,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.5234375,"distances_sum":2445.3993014230387}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9625801282051285,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.828125,"distances_sum":2607.3136075795214}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9625801282051285,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.828125,"distances_sum":2607.3136075795214}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.275390625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.275390625,"f1":null,"seconds":3.891065716743469e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.609375,"distances_sum":649.188107480763}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.275390625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.275390625,"f1":null,"seconds":3.891065716743469e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.609375,"distances_sum":649.188107480763}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7940640956265965,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.625,"distances_sum":1515.612089156086}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6728515625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6728515625,"f1":0.7940640956265965,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.625,"distances_sum":1515.612089156086}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9209967116217125,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.21875,"distances_sum":2210.42499561061}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9446314102564108,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.546875,"distances_sum":2392.462792910624}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.846203796203797,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.8515625,"distances_sum":1716.2627578742472}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9446314102564108,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.546875,"distances_sum":2392.462792910624}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90234375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9446314102564108,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.546875,"distances_sum":2392.462792910624}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.271484375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.271484375,"f1":null,"seconds":3.550201654434204e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.4296875,"distances_sum":611.0087060433741}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.271484375,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.271484375,"f1":null,"seconds":3.550201654434204e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.4296875,"distances_sum":611.0087060433741}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8714956918081928,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.046875,"distances_sum":1812.5015611792992}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":9,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":3.810971975326538e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":5.9609375,"distances_sum":779.7253343677536}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8714956918081928,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.046875,"distances_sum":1812.5015611792992}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9600847069597073,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8203125,"distances_sum":2483.544326086796}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9600847069597073,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8203125,"distances_sum":2483.544326086796}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9600847069597073,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8203125,"distances_sum":2483.544326086796}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8653398684648693,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.984375,"distances_sum":1950.6968644570293}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8653398684648693,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.984375,"distances_sum":1950.6968644570293}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.924905823343324,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.3515625,"distances_sum":2370.0349385387967}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9126659798534805,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.28125,"distances_sum":2248.343193619646}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9649553571428577,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7890625,"distances_sum":2680.102503288093}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9649553571428577,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7890625,"distances_sum":2680.102503288093}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9753548534798537,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9140625,"distances_sum":2719.604560492174}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9718406593406597,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8671875,"distances_sum":2706.5802420226278}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9683092948717953,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8359375,"distances_sum":2690.3572554717834}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9753548534798537,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9140625,"distances_sum":2719.604560492174}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9753548534798537,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9140625,"distances_sum":2719.604560492174}}, n: 9
inertia(cfft.distances) = 19.34600926627485
inertia(cdnet.distances) = 23.182882948321033
inertia(crand.distances) = 22.625904463080772
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.888888888888889
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.888888888888889
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8799999999999999
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8777777777777779
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8822222222222221
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9199999999999999
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 1, 3, 2, 3, 3, 3, 3, 3, 2, 1, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.3361333357055663] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3361333357055663, 0.18859831816466685] ***
*** starting iteration: 2; err: [Inf, 0.3361333357055663, 0.18859831816466685] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655] ***
*** starting iteration: 3; err: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655, 0.15718431026553276] ***
*** starting iteration: 4; err: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655, 0.15718431026553276] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655, 0.15718431026553276, 0.15576164277504467] ***
*** starting iteration: 5; err: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655, 0.15718431026553276, 0.15576164277504467] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655, 0.15718431026553276, 0.15576164277504467, 0.1555322523161241] ***
*** finished computation of 12 references, err: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655, 0.15718431026553276, 0.15576164277504467, 0.1555322523161241] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 5, 1]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 5), (3, 1)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 14 centroids; started with 12
acc = 0.9133333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.5268000027522067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5268000027522067, 0.2805594706114505] ***
*** finished computation of 7 references, err: [Inf, 0.5268000027522067, 0.2805594706114505] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 9]]
** centroid: 3, normalized-entropy: 0.8337649072106652, [(2, 25), (3, 9)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 7: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31706536646844546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31706536646844546, 0.19675356571598374] ***
*** starting iteration: 2; err: [Inf, 0.31706536646844546, 0.19675356571598374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31706536646844546, 0.19675356571598374, 0.185840223059347] ***
*** starting iteration: 3; err: [Inf, 0.31706536646844546, 0.19675356571598374, 0.185840223059347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31706536646844546, 0.19675356571598374, 0.185840223059347, 0.17891313292244754] ***
*** starting iteration: 4; err: [Inf, 0.31706536646844546, 0.19675356571598374, 0.185840223059347, 0.17891313292244754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31706536646844546, 0.19675356571598374, 0.185840223059347, 0.17891313292244754, 0.1777364995159043] ***
*** starting iteration: 5; err: [Inf, 0.31706536646844546, 0.19675356571598374, 0.185840223059347, 0.17891313292244754, 0.1777364995159043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31706536646844546, 0.19675356571598374, 0.185840223059347, 0.17891313292244754, 0.1777364995159043, 0.17649099842363486] ***
*** starting iteration: 6; err: [Inf, 0.31706536646844546, 0.19675356571598374, 0.185840223059347, 0.17891313292244754, 0.1777364995159043, 0.17649099842363486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31706536646844546, 0.19675356571598374, 0.185840223059347, 0.17891313292244754, 0.1777364995159043, 0.17649099842363486, 0.17563581833355382] ***
*** finished computation of 7 references, err: [Inf, 0.31706536646844546, 0.19675356571598374, 0.185840223059347, 0.17891313292244754, 0.1777364995159043, 0.17649099842363486, 0.17563581833355382] ***
*** center 1: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 6]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 20), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 20]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 4), (3, 20)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4162765990434019] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4162765990434019, 0.21062683882941358] ***
*** starting iteration: 2; err: [Inf, 0.4162765990434019, 0.21062683882941358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4162765990434019, 0.21062683882941358, 0.20177769052514374] ***
*** starting iteration: 3; err: [Inf, 0.4162765990434019, 0.21062683882941358, 0.20177769052514374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4162765990434019, 0.21062683882941358, 0.20177769052514374, 0.1988693970890236] ***
*** starting iteration: 4; err: [Inf, 0.4162765990434019, 0.21062683882941358, 0.20177769052514374, 0.1988693970890236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4162765990434019, 0.21062683882941358, 0.20177769052514374, 0.1988693970890236, 0.1900571922493973] ***
*** starting iteration: 5; err: [Inf, 0.4162765990434019, 0.21062683882941358, 0.20177769052514374, 0.1988693970890236, 0.1900571922493973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4162765990434019, 0.21062683882941358, 0.20177769052514374, 0.1988693970890236, 0.1900571922493973, 0.187302817272072] ***
*** starting iteration: 6; err: [Inf, 0.4162765990434019, 0.21062683882941358, 0.20177769052514374, 0.1988693970890236, 0.1900571922493973, 0.187302817272072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4162765990434019, 0.21062683882941358, 0.20177769052514374, 0.1988693970890236, 0.1900571922493973, 0.187302817272072, 0.18641317800333257] ***
*** finished computation of 7 references, err: [Inf, 0.4162765990434019, 0.21062683882941358, 0.20177769052514374, 0.1988693970890236, 0.1900571922493973, 0.187302817272072, 0.18641317800333257] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 6]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 18]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 3), (3, 18)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 5, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4432000032513584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4432000032513584, 0.2461937252331235] ***
*** starting iteration: 2; err: [Inf, 0.4432000032513584, 0.2461937252331235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774] ***
*** starting iteration: 3; err: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749] ***
*** starting iteration: 4; err: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749, 0.2170569756885665] ***
*** starting iteration: 5; err: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749, 0.2170569756885665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749, 0.2170569756885665, 0.20806174097264102] ***
*** starting iteration: 6; err: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749, 0.2170569756885665, 0.20806174097264102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749, 0.2170569756885665, 0.20806174097264102, 0.20312172830991201] ***
*** starting iteration: 7; err: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749, 0.2170569756885665, 0.20806174097264102, 0.20312172830991201] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749, 0.2170569756885665, 0.20806174097264102, 0.20312172830991201, 0.19898864446404216] ***
*** starting iteration: 8; err: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749, 0.2170569756885665, 0.20806174097264102, 0.20312172830991201, 0.19898864446404216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749, 0.2170569756885665, 0.20806174097264102, 0.20312172830991201, 0.19898864446404216, 0.19580606083563354] ***
*** starting iteration: 9; err: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749, 0.2170569756885665, 0.20806174097264102, 0.20312172830991201, 0.19898864446404216, 0.19580606083563354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749, 0.2170569756885665, 0.20806174097264102, 0.20312172830991201, 0.19898864446404216, 0.19580606083563354, 0.19463556643222965] ***
*** starting iteration: 10; err: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749, 0.2170569756885665, 0.20806174097264102, 0.20312172830991201, 0.19898864446404216, 0.19580606083563354, 0.19463556643222965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749, 0.2170569756885665, 0.20806174097264102, 0.20312172830991201, 0.19898864446404216, 0.19580606083563354, 0.19463556643222965, 0.19277721680113197] ***
*** finished computation of 7 references, err: [Inf, 0.4432000032513584, 0.2461937252331235, 0.22992435580429774, 0.22196162241196749, 0.2170569756885665, 0.20806174097264102, 0.20312172830991201, 0.19898864446404216, 0.19580606083563354, 0.19463556643222965, 0.19277721680113197] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 12]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 4), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 4, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5767000058843851] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5767000058843851, 0.2486098835014336] ***
*** starting iteration: 2; err: [Inf, 0.5767000058843851, 0.2486098835014336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5767000058843851, 0.2486098835014336, 0.24410856391376268] ***
*** starting iteration: 3; err: [Inf, 0.5767000058843851, 0.2486098835014336, 0.24410856391376268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5767000058843851, 0.2486098835014336, 0.24410856391376268, 0.2402444008040378] ***
*** starting iteration: 4; err: [Inf, 0.5767000058843851, 0.2486098835014336, 0.24410856391376268, 0.2402444008040378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5767000058843851, 0.2486098835014336, 0.24410856391376268, 0.2402444008040378, 0.23767514210735027] ***
*** starting iteration: 5; err: [Inf, 0.5767000058843851, 0.2486098835014336, 0.24410856391376268, 0.2402444008040378, 0.23767514210735027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5767000058843851, 0.2486098835014336, 0.24410856391376268, 0.2402444008040378, 0.23767514210735027, 0.23651337240474482] ***
*** starting iteration: 6; err: [Inf, 0.5767000058843851, 0.2486098835014336, 0.24410856391376268, 0.2402444008040378, 0.23767514210735027, 0.23651337240474482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5767000058843851, 0.2486098835014336, 0.24410856391376268, 0.2402444008040378, 0.23767514210735027, 0.23651337240474482, 0.23651337240474482] ***
*** finished computation of 7 references, err: [Inf, 0.5767000058843851, 0.2486098835014336, 0.24410856391376268, 0.2402444008040378, 0.23767514210735027, 0.23651337240474482, 0.23651337240474482] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 8]]
** centroid: 1, normalized-entropy: 0.8904916402194913, [(2, 18), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5721000058914153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5721000058914153, 0.2609795816508377] ***
*** starting iteration: 2; err: [Inf, 0.5721000058914153, 0.2609795816508377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5721000058914153, 0.2609795816508377, 0.2453058657577181] ***
*** starting iteration: 3; err: [Inf, 0.5721000058914153, 0.2609795816508377, 0.2453058657577181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5721000058914153, 0.2609795816508377, 0.2453058657577181, 0.24350262834064343] ***
*** starting iteration: 4; err: [Inf, 0.5721000058914153, 0.2609795816508377, 0.2453058657577181, 0.24350262834064343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5721000058914153, 0.2609795816508377, 0.2453058657577181, 0.24350262834064343, 0.2427501338819832] ***
*** finished computation of 7 references, err: [Inf, 0.5721000058914153, 0.2609795816508377, 0.2453058657577181, 0.24350262834064343, 0.2427501338819832] ***
*** center 1: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 3]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 11), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 7]]
** centroid: 4, normalized-entropy: 0.9774178175281716, [(2, 10), (3, 7)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.570799999145516] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.570799999145516, 0.45152121589688476] ***
*** finished computation of 3 references, err: [Inf, 1.570799999145516, 0.45152121589688476] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 13]]
** centroid: 3, normalized-entropy: 0.8672816222000259, [(2, 32), (3, 13)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4174000076356514] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4174000076356514, 0.5728876498582537] ***
*** finished computation of 3 references, err: [Inf, 1.4174000076356514, 0.5728876498582537] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 10]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 3: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4653999956265988] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4653999956265988, 0.5887451403461654] ***
*** finished computation of 3 references, err: [Inf, 1.4653999956265988, 0.5887451403461654] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 11]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.628907941784408] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.628907941784408, 0.35434712187129536] ***
*** finished computation of 3 references, err: [Inf, 0.628907941784408, 0.35434712187129536] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 31]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(2, 5), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 3]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 27), (3, 3)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7616213496467199] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7616213496467199, 0.4133016558612755] ***
*** finished computation of 3 references, err: [Inf, 0.7616213496467199, 0.4133016558612755] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [30, 1, 0]]
** centroid: 1, normalized-entropy: 0.2055925081850832, [(1, 30), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 11]]
** centroid: 3, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9228063600873472] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9228063600873472, 0.41284554321745864] ***
*** finished computation of 3 references, err: [Inf, 0.9228063600873472, 0.41284554321745864] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.58739999801927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.58739999801927, 0.3091101264103738] ***
*** finished computation of 7 references, err: [Inf, 0.58739999801927, 0.3091101264103738] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 5: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 17, 8]]
** centroid: 7, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7364000052475401] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7364000052475401, 0.31109276961934823] ***
*** finished computation of 7 references, err: [Inf, 0.7364000052475401, 0.31109276961934823] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 1]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 5), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 11]]
** centroid: 3, normalized-entropy: 0.998363672593813, [(2, 10), (3, 11)]
*** center 4: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.7797000167471095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7797000167471095, 0.5460628494594902] ***
*** starting iteration: 2; err: [Inf, 1.7797000167471095, 0.5460628494594902] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7797000167471095, 0.5460628494594902, 0.4823542754408196] ***
*** starting iteration: 3; err: [Inf, 1.7797000167471095, 0.5460628494594902, 0.4823542754408196] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7797000167471095, 0.5460628494594902, 0.4823542754408196, 0.45448346817008684] ***
*** finished computation of 3 references, err: [Inf, 1.7797000167471095, 0.5460628494594902, 0.4823542754408196, 0.45448346817008684] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 13]]
** centroid: 3, normalized-entropy: 0.8672816222000259, [(2, 32), (3, 13)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.163900002984909] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.163900002984909, 1.1108144774777784] ***
*** starting iteration: 2; err: [Inf, 3.163900002984909, 1.1108144774777784] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.163900002984909, 1.1108144774777784, 0.6306564512575134] ***
*** starting iteration: 3; err: [Inf, 3.163900002984909, 1.1108144774777784, 0.6306564512575134] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.163900002984909, 1.1108144774777784, 0.6306564512575134, 0.5611462296370037] ***
*** finished computation of 3 references, err: [Inf, 3.163900002984909, 1.1108144774777784, 0.6306564512575134, 0.5611462296370037] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 1, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [30, 1, 0]]
** centroid: 2, normalized-entropy: 0.2055925081850832, [(1, 30), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5972000154118013] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5972000154118013, 0.6223522555737643] ***
*** starting iteration: 2; err: [Inf, 1.5972000154118013, 0.6223522555737643] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5972000154118013, 0.6223522555737643, 0.5734223625115807] ***
*** starting iteration: 3; err: [Inf, 1.5972000154118013, 0.6223522555737643, 0.5734223625115807] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5972000154118013, 0.6223522555737643, 0.5734223625115807, 0.5701011834268006] ***
*** finished computation of 3 references, err: [Inf, 1.5972000154118013, 0.6223522555737643, 0.5734223625115807, 0.5701011834268006] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 22]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 1), (3, 22)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 9]]
** centroid: 2, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1945287208845214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1945287208845214, 0.27105238629802997] ***
*** starting iteration: 2; err: [Inf, 1.1945287208845214, 0.27105238629802997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1945287208845214, 0.27105238629802997, 0.22757717539141264] ***
*** starting iteration: 3; err: [Inf, 1.1945287208845214, 0.27105238629802997, 0.22757717539141264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1945287208845214, 0.27105238629802997, 0.22757717539141264, 0.19789258756150485] ***
*** finished computation of 7 references, err: [Inf, 1.1945287208845214, 0.27105238629802997, 0.22757717539141264, 0.19789258756150485] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 16]]
** centroid: 1, normalized-entropy: 0.6292492238560344, [(2, 3), (3, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 29, 9]]
** centroid: 5, normalized-entropy: 0.7897492536625221, [(2, 29), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3681955604573926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3681955604573926, 0.19535005435876723] ***
*** starting iteration: 2; err: [Inf, 0.3681955604573926, 0.19535005435876723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3681955604573926, 0.19535005435876723, 0.1904518389094039] ***
*** starting iteration: 3; err: [Inf, 0.3681955604573926, 0.19535005435876723, 0.1904518389094039] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3681955604573926, 0.19535005435876723, 0.1904518389094039, 0.18818699094914965] ***
*** finished computation of 7 references, err: [Inf, 0.3681955604573926, 0.19535005435876723, 0.1904518389094039, 0.18818699094914965] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 10]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 7]]
** centroid: 3, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 4: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4599742182004442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4599742182004442, 0.2851889335518528] ***
*** starting iteration: 2; err: [Inf, 0.4599742182004442, 0.2851889335518528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4599742182004442, 0.2851889335518528, 0.230505579557751] ***
*** starting iteration: 3; err: [Inf, 0.4599742182004442, 0.2851889335518528, 0.230505579557751] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4599742182004442, 0.2851889335518528, 0.230505579557751, 0.21681707591253313] ***
*** finished computation of 7 references, err: [Inf, 0.4599742182004442, 0.2851889335518528, 0.230505579557751, 0.21681707591253313] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 11]]
** centroid: 6, normalized-entropy: 1.0, [(2, 11), (3, 11)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.7803296560423667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7803296560423667, 0.497538893502565] ***
*** finished computation of 7 references, err: [Inf, 2.7803296560423667, 0.497538893502565] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 15]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 5), (3, 15)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4743651095668362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4743651095668362, 0.26224543171848425] ***
*** finished computation of 7 references, err: [Inf, 0.4743651095668362, 0.26224543171848425] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 13]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(2, 4), (3, 13)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 31, 3]]
** centroid: 5, normalized-entropy: 0.43055186701043935, [(2, 31), (3, 3)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2010767156472764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2010767156472764, 0.2291391081005345] ***
*** finished computation of 7 references, err: [Inf, 1.2010767156472764, 0.2291391081005345] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 5]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 10), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 8, 4]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 8), (3, 4)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.6474327589229087] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6474327589229087, 0.5505218994421412] ***
*** starting iteration: 2; err: [Inf, 2.6474327589229087, 0.5505218994421412] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6474327589229087, 0.5505218994421412, 0.31873482548169374] ***
*** starting iteration: 3; err: [Inf, 2.6474327589229087, 0.5505218994421412, 0.31873482548169374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6474327589229087, 0.5505218994421412, 0.31873482548169374, 0.3173877215773427] ***
*** finished computation of 3 references, err: [Inf, 2.6474327589229087, 0.5505218994421412, 0.31873482548169374, 0.3173877215773427] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 11]]
** centroid: 3, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.5150356875864786] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5150356875864786, 0.8871514803377083] ***
*** starting iteration: 2; err: [Inf, 3.5150356875864786, 0.8871514803377083] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5150356875864786, 0.8871514803377083, 0.38477471370384764] ***
*** starting iteration: 3; err: [Inf, 3.5150356875864786, 0.8871514803377083, 0.38477471370384764] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5150356875864786, 0.8871514803377083, 0.38477471370384764, 0.37548394841306104] ***
*** finished computation of 3 references, err: [Inf, 3.5150356875864786, 0.8871514803377083, 0.38477471370384764, 0.37548394841306104] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.486672468050476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.486672468050476, 1.5954294443722583] ***
*** starting iteration: 2; err: [Inf, 5.486672468050476, 1.5954294443722583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.486672468050476, 1.5954294443722583, 0.7540313343910554] ***
*** starting iteration: 3; err: [Inf, 5.486672468050476, 1.5954294443722583, 0.7540313343910554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.486672468050476, 1.5954294443722583, 0.7540313343910554, 0.5235021655046854] ***
*** finished computation of 3 references, err: [Inf, 5.486672468050476, 1.5954294443722583, 0.7540313343910554, 0.5235021655046854] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 20]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 30), (3, 20)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [36, 3, 0]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(1, 36), (2, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31020000389425006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31020000389425006, 0.24781650553751014] ***
*** starting iteration: 2; err: [Inf, 0.31020000389425006, 0.24781650553751014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31020000389425006, 0.24781650553751014, 0.23421691323602956] ***
*** starting iteration: 3; err: [Inf, 0.31020000389425006, 0.24781650553751014, 0.23421691323602956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31020000389425006, 0.24781650553751014, 0.23421691323602956, 0.2308934736646581] ***
*** finished computation of 7 references, err: [Inf, 0.31020000389425006, 0.24781650553751014, 0.23421691323602956, 0.2308934736646581] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 9]]
** centroid: 4, normalized-entropy: 1.0, [(2, 9), (3, 9)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.510999999448069] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.510999999448069, 0.2954954144869767] ***
*** starting iteration: 2; err: [Inf, 0.510999999448069, 0.2954954144869767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.510999999448069, 0.2954954144869767, 0.25155622379094106] ***
*** starting iteration: 3; err: [Inf, 0.510999999448069, 0.2954954144869767, 0.25155622379094106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.510999999448069, 0.2954954144869767, 0.25155622379094106, 0.24150911231060646] ***
*** finished computation of 7 references, err: [Inf, 0.510999999448069, 0.2954954144869767, 0.25155622379094106, 0.24150911231060646] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 4, 9]]
** centroid: 5, normalized-entropy: 0.8904916402194913, [(2, 4), (3, 9)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4501000055713935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4501000055713935, 0.30748696430480704] ***
*** starting iteration: 2; err: [Inf, 0.4501000055713935, 0.30748696430480704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4501000055713935, 0.30748696430480704, 0.2972242186762676] ***
*** starting iteration: 3; err: [Inf, 0.4501000055713935, 0.30748696430480704, 0.2972242186762676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4501000055713935, 0.30748696430480704, 0.2972242186762676, 0.2934833670499763] ***
*** finished computation of 7 references, err: [Inf, 0.4501000055713935, 0.30748696430480704, 0.2972242186762676, 0.2934833670499763] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 2, 1]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 8, 11]]
** centroid: 6, normalized-entropy: 0.9819407868640977, [(2, 8), (3, 11)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46626815550444406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46626815550444406, 0.20242293435688619] ***
*** finished computation of 7 references, err: [Inf, 0.46626815550444406, 0.20242293435688619] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 3, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 7, 8]]
** centroid: 5, normalized-entropy: 0.9967916319816367, [(2, 7), (3, 8)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2773626167523494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2773626167523494, 0.16463689378280633] ***
*** finished computation of 7 references, err: [Inf, 0.2773626167523494, 0.16463689378280633] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 4, 8]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 8)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.535110265335462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.535110265335462, 0.3320497121793559] ***
*** finished computation of 7 references, err: [Inf, 0.535110265335462, 0.3320497121793559] ***
*** center 1: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 4, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38599999940226026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38599999940226026, 0.2875798957026624] ***
*** starting iteration: 2; err: [Inf, 0.38599999940226026, 0.2875798957026624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38599999940226026, 0.2875798957026624, 0.23150138631096653] ***
*** starting iteration: 3; err: [Inf, 0.38599999940226026, 0.2875798957026624, 0.23150138631096653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38599999940226026, 0.2875798957026624, 0.23150138631096653, 0.21825253241562437] ***
*** finished computation of 7 references, err: [Inf, 0.38599999940226026, 0.2875798957026624, 0.23150138631096653, 0.21825253241562437] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 16, 10]]
** centroid: 5, normalized-entropy: 0.961236604722876, [(2, 16), (3, 10)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6492000080830316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6492000080830316, 0.3182049038418039] ***
*** starting iteration: 2; err: [Inf, 0.6492000080830316, 0.3182049038418039] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6492000080830316, 0.3182049038418039, 0.2932430617794121] ***
*** starting iteration: 3; err: [Inf, 0.6492000080830316, 0.3182049038418039, 0.2932430617794121] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6492000080830316, 0.3182049038418039, 0.2932430617794121, 0.27522821669057285] ***
*** finished computation of 7 references, err: [Inf, 0.6492000080830316, 0.3182049038418039, 0.2932430617794121, 0.27522821669057285] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 14]]
** centroid: 1, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 3: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46589999963880385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46589999963880385, 0.37002702413009814] ***
*** starting iteration: 2; err: [Inf, 0.46589999963880385, 0.37002702413009814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46589999963880385, 0.37002702413009814, 0.2727339120771555] ***
*** starting iteration: 3; err: [Inf, 0.46589999963880385, 0.37002702413009814, 0.2727339120771555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46589999963880385, 0.37002702413009814, 0.2727339120771555, 0.2611010936167967] ***
*** finished computation of 7 references, err: [Inf, 0.46589999963880385, 0.37002702413009814, 0.2727339120771555, 0.2611010936167967] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 12, 2]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 7: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8076780883109884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8076780883109884, 0.32330960266539405] ***
*** starting iteration: 2; err: [Inf, 0.8076780883109884, 0.32330960266539405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8076780883109884, 0.32330960266539405, 0.31873482548169374] ***
*** starting iteration: 3; err: [Inf, 0.8076780883109884, 0.32330960266539405, 0.31873482548169374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8076780883109884, 0.32330960266539405, 0.31873482548169374, 0.3173877215773427] ***
*** finished computation of 3 references, err: [Inf, 0.8076780883109884, 0.32330960266539405, 0.31873482548169374, 0.3173877215773427] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 11]]
** centroid: 1, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8494388946138547] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8494388946138547, 0.42357093592007655] ***
*** starting iteration: 2; err: [Inf, 0.8494388946138547, 0.42357093592007655] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8494388946138547, 0.42357093592007655, 0.38415237888625] ***
*** starting iteration: 3; err: [Inf, 0.8494388946138547, 0.42357093592007655, 0.38415237888625] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8494388946138547, 0.42357093592007655, 0.38415237888625, 0.3764545413527607] ***
*** finished computation of 3 references, err: [Inf, 0.8494388946138547, 0.42357093592007655, 0.38415237888625, 0.3764545413527607] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 9]]
** centroid: 1, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7988631648077685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7988631648077685, 0.4003474469343972] ***
*** starting iteration: 2; err: [Inf, 0.7988631648077685, 0.4003474469343972] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7988631648077685, 0.4003474469343972, 0.391782983752892] ***
*** starting iteration: 3; err: [Inf, 0.7988631648077685, 0.4003474469343972, 0.391782983752892] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7988631648077685, 0.4003474469343972, 0.391782983752892, 0.3902303309611452] ***
*** finished computation of 3 references, err: [Inf, 0.7988631648077685, 0.4003474469343972, 0.391782983752892, 0.3902303309611452] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 29]]
** centroid: 1, normalized-entropy: 0.7531979910695015, [(2, 8), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 25, 2]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 25), (3, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.29428353673488106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29428353673488106, 0.169752365375495] ***
*** starting iteration: 2; err: [Inf, 0.29428353673488106, 0.169752365375495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237] ***
*** starting iteration: 3; err: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815] ***
*** starting iteration: 4; err: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815, 0.16096594709255982] ***
*** starting iteration: 5; err: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815, 0.16096594709255982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815, 0.16096594709255982, 0.1551457654627618] ***
*** starting iteration: 6; err: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815, 0.16096594709255982, 0.1551457654627618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815, 0.16096594709255982, 0.1551457654627618, 0.14960789544145237] ***
*** starting iteration: 7; err: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815, 0.16096594709255982, 0.1551457654627618, 0.14960789544145237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815, 0.16096594709255982, 0.1551457654627618, 0.14960789544145237, 0.14854092841841524] ***
*** starting iteration: 8; err: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815, 0.16096594709255982, 0.1551457654627618, 0.14960789544145237, 0.14854092841841524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815, 0.16096594709255982, 0.1551457654627618, 0.14960789544145237, 0.14854092841841524, 0.14388835122919633] ***
*** starting iteration: 9; err: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815, 0.16096594709255982, 0.1551457654627618, 0.14960789544145237, 0.14854092841841524, 0.14388835122919633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815, 0.16096594709255982, 0.1551457654627618, 0.14960789544145237, 0.14854092841841524, 0.14388835122919633, 0.14178085959076797] ***
*** starting iteration: 10; err: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815, 0.16096594709255982, 0.1551457654627618, 0.14960789544145237, 0.14854092841841524, 0.14388835122919633, 0.14178085959076797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815, 0.16096594709255982, 0.1551457654627618, 0.14960789544145237, 0.14854092841841524, 0.14388835122919633, 0.14178085959076797, 0.1404595725932479] ***
*** finished computation of 7 references, err: [Inf, 0.29428353673488106, 0.169752365375495, 0.1639320484153237, 0.1620207215703815, 0.16096594709255982, 0.1551457654627618, 0.14960789544145237, 0.14854092841841524, 0.14388835122919633, 0.14178085959076797, 0.1404595725932479] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 14]]
** centroid: 4, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 13)
[0.9866666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9866666666666667
finished with 14
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.2603127642903533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2603127642903533, 0.18092246359662909] ***
*** starting iteration: 2; err: [Inf, 0.2603127642903533, 0.18092246359662909] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2603127642903533, 0.18092246359662909, 0.17168784196115822] ***
*** starting iteration: 3; err: [Inf, 0.2603127642903533, 0.18092246359662909, 0.17168784196115822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2603127642903533, 0.18092246359662909, 0.17168784196115822, 0.1706235951781049] ***
*** finished computation of 7 references, err: [Inf, 0.2603127642903533, 0.18092246359662909, 0.17168784196115822, 0.1706235951781049] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 5, 22]]
** centroid: 4, normalized-entropy: 0.6912898694057888, [(2, 5), (3, 22)]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 11, 3]]
** centroid: 6, normalized-entropy: 0.7495952572594798, [(2, 11), (3, 3)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31299558077119] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31299558077119, 0.1746930942393866] ***
*** starting iteration: 2; err: [Inf, 0.31299558077119, 0.1746930942393866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31299558077119, 0.1746930942393866, 0.1646053229402186] ***
*** starting iteration: 3; err: [Inf, 0.31299558077119, 0.1746930942393866, 0.1646053229402186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31299558077119, 0.1746930942393866, 0.1646053229402186, 0.15766604238314985] ***
*** finished computation of 7 references, err: [Inf, 0.31299558077119, 0.1746930942393866, 0.1646053229402186, 0.15766604238314985] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 10]]
** centroid: 7, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37208721729161937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37208721729161937, 0.22374627532392505] ***
*** starting iteration: 2; err: [Inf, 0.37208721729161937, 0.22374627532392505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37208721729161937, 0.22374627532392505, 0.2076549527158695] ***
*** starting iteration: 3; err: [Inf, 0.37208721729161937, 0.22374627532392505, 0.2076549527158695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37208721729161937, 0.22374627532392505, 0.2076549527158695, 0.19456053380816613] ***
*** finished computation of 7 references, err: [Inf, 0.37208721729161937, 0.22374627532392505, 0.2076549527158695, 0.19456053380816613] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 9, 18]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 9), (3, 18)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 14)
[0.9866666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9866666666666667
finished with 15
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.4319452563420822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4319452563420822, 0.21988164363436613] ***
*** finished computation of 7 references, err: [Inf, 0.4319452563420822, 0.21988164363436613] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 5]]
** centroid: 1, normalized-entropy: 0.961236604722876, [(2, 8), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 24, 7]]
** centroid: 2, normalized-entropy: 0.7706290693639406, [(2, 24), (3, 7)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4866259144454302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4866259144454302, 0.2449105178875271] ***
*** finished computation of 7 references, err: [Inf, 0.4866259144454302, 0.2449105178875271] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 6, 14]]
** centroid: 4, normalized-entropy: 0.8812908992306927, [(2, 6), (3, 14)]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 7, 3]]
** centroid: 6, normalized-entropy: 0.8812908992306927, [(2, 7), (3, 3)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.381983027885548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.381983027885548, 0.2148206604032945] ***
*** finished computation of 7 references, err: [Inf, 0.381983027885548, 0.2148206604032945] ***
*** center 1: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 9]]
** centroid: 6, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9866666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9866666666666667
finished with 15
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9866666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9866666666666667
finished with 15
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9866666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9866666666666667
finished with 15
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9866666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9866666666666667
finished with 15
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9866666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9866666666666667
finished with 15
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9866666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9866666666666667
finished with 15
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 2), 0.9866666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.747368421052631, 2.7052631578947364, 4.189473684210527, 1.3], [6.621428571428572, 3.121428571428571, 5.5, 2.2], [4.8999999999999995, 3.3857142857142857, 1.3785714285714283, 0.24285714285714288], [5.407692307692307, 3.861538461538461, 1.5153846153846153, 0.2846153846153846], [6.36875, 2.9625, 4.66875, 1.46875], [6.04, 2.6599999999999997, 5.1, 1.7900000000000003], [7.455555555555557, 3.011111111111111, 6.3, 1.9555555555555553], [4.814285714285714, 3.042857142857143, 1.5, 0.14285714285714285]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 1, 2, 3, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.2, 2.966666666666667, 4.966666666666667, 1.7], [6.271428571428572, 2.8785714285714286, 5.192857142857143, 1.8357142857142859], [7.010526315789473, 3.126315789473684, 5.957894736842106, 2.1421052631578954], [5.166666666666666, 3.5833333333333335, 1.5111111111111108, 0.2888888888888889], [6.325, 2.8812499999999996, 4.5125, 1.4062500000000002], [4.674999999999999, 3.1, 1.466666666666667, 0.20833333333333337], [5.866666666666666, 3.0, 5.133333333333334, 2.2333333333333334], [5.46875, 2.575, 3.7750000000000004, 1.1375]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 3, 1, 2, 1, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.60625, 2.6812500000000004, 4.11875, 1.28125], [4.694999999999999, 3.1100000000000003, 1.395, 0.1950000000000001], [5.116666666666666, 2.3833333333333333, 3.4499999999999997, 1.0833333333333333], [6.962500000000001, 3.131249999999999, 5.849999999999999, 2.225], [6.371428571428571, 2.9571428571428577, 4.642857142857143, 1.5285714285714285], [6.083333333333332, 2.733333333333334, 5.241666666666667, 1.883333333333333], [5.312500000000001, 3.6875, 1.5125, 0.29375000000000007]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 2, 3, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[80, 6, 23, 1, 24, 1, 26, 18, 17, 6, 16, 36, 26, 35, 40, 10, 27, 1, 44, 21, 42, 27, 28, 27, 22, 6, 32, 38, 39, 24, 29, 31, 33, 31, 26, 16, 19, 46, 20, 37, 31, 27, 33, 2, 42, 27, 10, 30, 26, 40, 26, 27, 31, 30, 43, 1, 49, 29, 48, 44, 43, 37, 25, 6, 35, 35, 25, 28, 32, 35, 23, 48, 41, 40, 35, 43, 50, 34, 20, 44, 10, 9, 56, 37, 41, 26, 43, 33, 18, 39, 21, 59, 43, 34, 1, 21, 33, 49, 17, 39, 41, 19, 63, 39, 46, 39, 33, 22, 38, 43, 21, 55, 30, 26, 44, 36, 39, 29, 30, 19, 46, 43, 27, 31, 35, 36, 29, 20, 39, 37, 47, 64, 44, 31, 39, 33, 15, 12, 46, 32, 31, 31, 26, 21, 25, 25, 34, 45, 36, 32, 7, 47, 58, 27, 37, 32, 26, 31, 39, 27, 31, 37, 29, 47, 26, 27, 31, 24, 35, 1, 32, 48, 29, 49, 37, 32, 15, 58, 12, 46, 29, 53, 34, 32, 53, 28, 41, 41, 55, 33, 28, 45, 34, 91, 28, 36, 27, 51, 40, 24, 48, 30, 28, 47, 24, 52, 22, 24, 21, 56, 18, 34, 36, 40, 35, 48, 31, 31, 48, 32, 32, 25, 24, 29, 48, 39, 43, 4, 36, 39, 20, 44, 40, 47, 37, 53, 54, 55, 44, 40, 20, 34, 40, 51, 36, 34, 46, 1, 38, 41, 36, 25, 49, 46, 54, 24, 37, 21, 28, 50, 46, 38, 4, 56, 36, 32, 24, 37, 33, 32, 26, 45, 22, 37, 42, 34, 29, 32, 13, 38, 47, 29, 47, 31, 35, 33, 42, 34, 29, 39, 36, 34, 21, 37, 37, 42, 47, 51, 50, 15]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6299999999999999, speedup = 0.3840175747972271, eval_ratio = 0.041461000000000005)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3779513888888888,"recall":0.37586805555555547,"f1":null,"seconds":7.366202771663666e-5,"exhaustive_search_seconds":0.0003891400992870331,"evaluations":338.3984375,"distances_sum":1771.8588161874682}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5572916666666667,"recall":0.5572916666666667,"f1":0.5572916666666667,"seconds":0.00011681206524372101,"exhaustive_search_seconds":0.0003891400992870331,"evaluations":376.234375,"distances_sum":1669.4572393383041}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6684027777777773,"recall":0.6684027777777773,"f1":0.6684027777777773,"seconds":0.00015144608914852142,"exhaustive_search_seconds":0.0003891400992870331,"evaluations":414.625,"distances_sum":1623.4134368190594}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7404513888888881,"recall":0.7404513888888881,"f1":0.7404513888888881,"seconds":0.00018636882305145264,"exhaustive_search_seconds":0.0003891400992870331,"evaluations":453.5,"distances_sum":1603.3149478628075}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.795138888888888,"recall":0.795138888888888,"f1":0.795138888888888,"seconds":0.00022581592202186584,"exhaustive_search_seconds":0.0003891400992870331,"evaluations":494.046875,"distances_sum":1589.692203269819}
KCenters.DeloneInvIndex> reached performance {"precision":0.8272569444444434,"recall":0.8272569444444434,"f1":0.8272569444444434,"seconds":0.00025864504277706146,"exhaustive_search_seconds":0.0003891400992870331,"evaluations":531.90625,"distances_sum":1581.8566882574958}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8059999999999999, speedup = 1.5849588763640838, eval_ratio = 0.053335)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
