Julia Version 1.5.0-DEV.71
Commit 15d693b0ec (2020-01-15 18:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_0qMzWE/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_0qMzWE/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_0qMzWE/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.000650074958757844 -0.08975837472476773; -0.000650074958757844 0.0 -0.09900300080318647; 0.08975837472476773 0.09900300080318647 0.0])
dAA = so3([0.0 -0.15521451108457798 0.1091981980705049; 0.15521451108457798 0.0 0.027378977198062978; -0.1091981980705049 -0.027378977198062978 0.0])
dAA = so3([0.0 0.06769408047675439 -0.1097570540488811; -0.06769408047675439 0.0 -0.022718115287689026; 0.1097570540488811 0.022718115287689026 0.0])
dAA = Quaternion(0.9941940202840646, [-0.07331346903543978, -0.07687519870504991, 0.01713444231533986])
dAA = SO3([0.9665617815258025 0.25633936510883853 0.006960775047695617; -0.25541302902472957 0.9599396419290542 0.11523917935117467; 0.022858414163710063 -0.11316365913453455 0.9933133841609121])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.889589381079124 -0.3825107283547468 0.2496322810951784; 0.3641799639519594 0.9238465409021828 0.11781563019829396; -0.27568766190602484 -0.01389645841905977 0.9611468157967318]), [0.9900300080318646, -0.8975837472476773, -0.006500749587578439])
xj = SE3(SO3([0.9241548998580584 -0.039774462597106125 -0.3799417234174913; 0.17841869925427317 0.9243678652038175 0.3372103461267912; 0.3377935594779084 -0.37942330174048156 0.8613555997795546]), [0.22718115287689025, -1.097570540488811, -0.6769408047675438])
Dx = SE3(SO3([0.7939693842293686 0.405855639193259 -0.4526519822573064; -0.19336179987249785 0.8744608535834788 0.4448926049060852; 0.5763886113174909 -0.2657055055603575 0.7727721223351739]), [-0.566621372806945, 0.11635750639725329, -0.8583845941390305])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
