Julia Version 1.5.0-DEV.139
Commit c2abaeedf8 (2020-01-22 06:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed MappedArrays ──────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.9
 Installed DataStructures ────────────── v0.17.9
 Installed StatsBase ─────────────────── v0.32.0
 Installed JSON ──────────────────────── v0.21.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed TableTraits ───────────────── v1.0.0
 Installed Compat ────────────────────── v3.2.0
 Installed Parsers ───────────────────── v0.3.10
 Installed Tables ────────────────────── v0.2.11
 Installed DataFrames ────────────────── v0.20.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed PooledArrays ──────────────── v0.5.3
 Installed OrderedCollections ────────── v1.1.0
 Installed Reexport ──────────────────── v0.2.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed LearnBase ─────────────────── v0.2.2
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed MLDataUtils ───────────────── v0.5.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_yS0dwD/Project.toml`
 [no changes]
  Updating `/tmp/jl_yS0dwD/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_yS0dwD/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 136.20999999999995
[ Info: 77.47000000000003
[ Info: 46.07
[ Info: 25.679999999999996
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.2399983987154
[ Info: 76.86000119157046
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.7977060097429
inertia(cdnet.distances) = 24.83069999988889
inertia(crand.distances) = 22.258689809730914
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2197265625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2197265625,"f1":null,"seconds":3.984197974205017e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":5.8046875,"distances_sum":556.5292741347913}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.7023807789432795,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.8359375,"distances_sum":1390.0230864481323}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.790977772227773,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.3046875,"distances_sum":1736.4620440052204}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.671875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.671875,"f1":0.790977772227773,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.3046875,"distances_sum":1736.4620440052204}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7939881299256305,"seconds":6.550922989845276e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.34375,"distances_sum":1708.9442250350498}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.716796875, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.716796875,"f1":0.823996316183817,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.4453125,"distances_sum":1882.926427187893}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8577849234099242,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.578125,"distances_sum":1984.3276415896808}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8976991758241766,"seconds":7.191672921180725e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.78125,"distances_sum":2214.9224446931566}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8804976273726283,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.7109375,"distances_sum":2070.2644984079693}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.82421875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.82421875,"f1":0.8976991758241766,"seconds":7.191672921180725e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.78125,"distances_sum":2214.9224446931566}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9555689102564107,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.9375,"distances_sum":2569.951628824641}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9038092116217125,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.8203125,"distances_sum":2240.0793638302207}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9477793040293049,"seconds":6.563961505889893e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.9375,"distances_sum":2533.626234098938}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9563701923076927,"seconds":6.677582859992981e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.890625,"distances_sum":2597.591702672117}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9583562271062277,"seconds":6.586313247680664e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.921875,"distances_sum":2612.3742099818346}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9468120421245427,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.921875,"distances_sum":2529.373182010269}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":13,"bsize":9}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9703525641025645,"seconds":6.645917892456055e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.96875,"distances_sum":2691.83543704935}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9008507117882125,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.7734375,"distances_sum":2228.5378813470184}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":12,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8983490467865476,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.8046875,"distances_sum":2176.97262344282}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":13,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9703525641025645,"seconds":6.645917892456055e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.96875,"distances_sum":2691.83543704935}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":13,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9703525641025645,"seconds":6.645917892456055e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.96875,"distances_sum":2691.83543704935}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.208984375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.208984375,"f1":null,"seconds":3.3639371395111084e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.8359375,"distances_sum":498.4927052559875}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8165017274392283,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.046875,"distances_sum":1637.4431169080565}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.703125,"f1":0.8165017274392283,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.046875,"distances_sum":1637.4431169080565}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9419013278388286,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.75,"distances_sum":2319.9621356660823}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9157228188478198,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6640625,"distances_sum":2165.1726009726704}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9419013278388286,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.75,"distances_sum":2319.9621356660823}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9538034881784887,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.84375,"distances_sum":2430.7046617944334}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9465862262737268,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.734375,"distances_sum":2352.6310579561546}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.969442536630037,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.90625,"distances_sum":2537.120845432212}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9610748626373632,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9140625,"distances_sum":2466.3474008402486}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.969442536630037,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.90625,"distances_sum":2537.120845432212}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.969442536630037,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.90625,"distances_sum":2537.120845432212}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4130859375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4130859375,"f1":null,"seconds":4.241243004798889e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":6.7421875,"distances_sum":839.0567244668572}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.70703125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.70703125,"f1":0.8210201257076265,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.9765625,"distances_sum":1649.4422106760044}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8624490093240103,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.3203125,"distances_sum":1814.902342006798}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8624490093240103,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.3203125,"distances_sum":1814.902342006798}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9023700258075267,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.5625,"distances_sum":2031.002614289264}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9567937271062275,"seconds":6.3925981521606445e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8828125,"distances_sum":2372.4671889482215}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9271296411921418,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.6328125,"distances_sum":2174.5550691193466}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9567937271062275,"seconds":6.3925981521606445e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8828125,"distances_sum":2372.4671889482215}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9733630952380956,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9453125,"distances_sum":2489.7388803579156}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9663950632700636,"seconds":6.416812539100647e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9296875,"distances_sum":2433.1932272282606}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9749084249084252,"seconds":6.666406989097595e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9609375,"distances_sum":2477.1868995056284}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9709478021978026,"seconds":6.444752216339111e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9453125,"distances_sum":2454.9310923392773}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9749084249084252,"seconds":6.666406989097595e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9609375,"distances_sum":2477.1868995056284}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9749084249084252,"seconds":6.666406989097595e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9609375,"distances_sum":2477.1868995056284}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4052734375,"f1":null,"seconds":3.941357135772705e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.9140625,"distances_sum":908.9256047268461}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4052734375,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.4052734375,"f1":null,"seconds":3.941357135772705e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.9140625,"distances_sum":908.9256047268461}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.546875,"f1":0.6913829226329231,"seconds":4.466623067855835e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.71875,"distances_sum":1220.604472672045}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7086540195915202,"seconds":4.069879651069641e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.8828125,"distances_sum":1305.777577796204}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7911484348984358,"seconds":4.541128873825073e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.6875,"distances_sum":1604.605620080847}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8704014735264745,"seconds":5.109235644340515e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6328125,"distances_sum":1872.0677180584357}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.8704014735264745,"seconds":5.109235644340515e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6328125,"distances_sum":1872.0677180584357}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8768752081252089,"seconds":5.114823579788208e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.625,"distances_sum":1909.254522142559}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9069024725274734,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.609375,"distances_sum":2065.523112128052}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9492445054945059,"seconds":6.0070306062698364e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.796875,"distances_sum":2377.3272658700107}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9064992299367309,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.671875,"distances_sum":2087.7434446141638}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9541037087912095,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.875,"distances_sum":2405.7796514214283}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8757731851481858,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.5390625,"distances_sum":1916.9109578854966}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9356658966033973,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8515625,"distances_sum":2243.95656930177}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9086283508158516,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.5859375,"distances_sum":2130.1232749397877}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9541037087912095,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.875,"distances_sum":2405.7796514214283}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9541037087912095,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.875,"distances_sum":2405.7796514214283}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5888671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5888671875,"f1":0.7245081307581314,"seconds":3.984197974205017e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.265625,"distances_sum":1266.8897731217644}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5888671875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5888671875,"f1":0.7245081307581314,"seconds":3.984197974205017e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.265625,"distances_sum":1266.8897731217644}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9118277555777563,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.59375,"distances_sum":1974.9551038131442}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9118277555777563,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.59375,"distances_sum":1974.9551038131442}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9174450549450556,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.5625,"distances_sum":2008.5802069056883}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9650698260073265,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8671875,"distances_sum":2325.4787855830145}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9650698260073265,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8671875,"distances_sum":2325.4787855830145}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9650698260073265,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8671875,"distances_sum":2325.4787855830145}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.7994795135420144,"seconds":4.63239848613739e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.140625,"distances_sum":1511.2300913919366}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6845703125,"f1":0.7994795135420144,"seconds":4.63239848613739e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.140625,"distances_sum":1511.2300913919366}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9336423992673994,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.828125,"distances_sum":2195.214610937837}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9336423992673994,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.828125,"distances_sum":2195.214610937837}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964623397435898,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.921875,"distances_sum":2364.015800897692}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9528903388278392,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8125,"distances_sum":2341.325307809791}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.964623397435898,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.921875,"distances_sum":2364.015800897692}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.964623397435898,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.921875,"distances_sum":2364.015800897692}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.30859375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.30859375,"f1":null,"seconds":3.0957162380218506e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":4.6953125,"distances_sum":773.9098854698939}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.30859375,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.30859375,"f1":null,"seconds":3.0957162380218506e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":4.6953125,"distances_sum":773.9098854698939}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4560546875, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.4560546875,"f1":0.6132842851592855,"seconds":3.7513673305511475e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.203125,"distances_sum":1126.122532625745}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4306640625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.4306640625,"f1":0.5848032176157179,"seconds":3.6526471376419067e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.96875,"distances_sum":1043.6452043791771}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4521484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4521484375,"f1":0.6062553765678771,"seconds":3.7383288145065308e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.0703125,"distances_sum":1094.9272004792322}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8624490093240103,"seconds":5.012378096580505e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4296875,"distances_sum":1856.482289057659}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3134765625, conf: {"ssize":9,"bsize":2}, perf: {"precision":null,"recall":0.3134765625,"f1":null,"seconds":3.1106173992156982e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":4.765625,"distances_sum":783.739205536453}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4619140625, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.4619140625,"f1":0.6138642607392609,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.2890625,"distances_sum":1106.178954908857}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8624490093240103,"seconds":5.012378096580505e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4296875,"distances_sum":1856.482289057659}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9096726190476199,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6171875,"distances_sum":2108.69466872354}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9179773351648359,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6875,"distances_sum":2163.9281846816853}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8583984375,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8583984375,"f1":0.9179773351648359,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6875,"distances_sum":2163.9281846816853}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8583984375,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8583984375,"f1":0.9179773351648359,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6875,"distances_sum":2163.9281846816853}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2021484375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2021484375,"f1":null,"seconds":3.125518560409546e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":4.6640625,"distances_sum":530.4755709732832}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2021484375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2021484375,"f1":null,"seconds":3.125518560409546e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":4.6640625,"distances_sum":530.4755709732832}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.46875,"distances_sum":868.874128424182}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8552749333999342,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.28125,"distances_sum":1743.5577643376675}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.7009726384726391,"seconds":4.265457391738892e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.40625,"distances_sum":1216.5823701201855}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8552749333999342,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.28125,"distances_sum":1743.5577643376675}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9134672619047628,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6171875,"distances_sum":2101.186069289553}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8790038086913093,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.359375,"distances_sum":1921.4050717990194}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9488724816849824,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2422.941977699819}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.948729395604396,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7734375,"distances_sum":2377.8449084045624}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8801828379953387,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.34375,"distances_sum":1902.8369431534265}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9488724816849824,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2422.941977699819}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274728,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9140625,"distances_sum":2533.4116267929644}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9491560522810527,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2413.3948018038473}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.957949862637363,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8125,"distances_sum":2461.1003824981563}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9692536630036633,"seconds":6.338581442832947e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8671875,"distances_sum":2527.0177403035445}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274728,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9140625,"distances_sum":2533.4116267929644}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274728,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9140625,"distances_sum":2533.4116267929644}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3857421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3857421875,"f1":null,"seconds":4.189088940620422e-6,"exhaustive_search_seconds":1.6707926988601685e-6,"evaluations":6.625,"distances_sum":828.9959496654976}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3857421875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3857421875,"f1":null,"seconds":4.189088940620422e-6,"exhaustive_search_seconds":1.6707926988601685e-6,"evaluations":6.625,"distances_sum":828.9959496654976}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9043846778221786,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.6707926988601685e-6,"evaluations":8.4453125,"distances_sum":2123.2752283832424}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8388671875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8388671875,"f1":0.9043846778221786,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.6707926988601685e-6,"evaluations":8.4453125,"distances_sum":2123.2752283832424}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9446714743589748,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.6707926988601685e-6,"evaluations":8.8046875,"distances_sum":2340.683654616298}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9655734890109893,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.6707926988601685e-6,"evaluations":8.9140625,"distances_sum":2459.570210017904}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9655734890109893,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.6707926988601685e-6,"evaluations":8.9140625,"distances_sum":2459.570210017904}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9655734890109893,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.6707926988601685e-6,"evaluations":8.9140625,"distances_sum":2459.570210017904}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7197265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7197265625,"f1":0.8289070304695314,"seconds":4.5746564865112305e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.96875,"distances_sum":1592.017338079302}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5947265625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5947265625,"f1":0.7329816017316025,"seconds":4.218891263008118e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.6015625,"distances_sum":1252.7817210484395}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7197265625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7197265625,"f1":0.8289070304695314,"seconds":4.5746564865112305e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.96875,"distances_sum":1592.017338079302}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9486492673992679,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.84375,"distances_sum":2296.203274687632}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9361950549450555,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7890625,"distances_sum":2235.446405388747}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9486492673992679,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.84375,"distances_sum":2296.203274687632}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696829212454215,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9609375,"distances_sum":2421.343812077306}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":12,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752060439560444,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9765625,"distances_sum":2471.4088127122386}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":12,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752060439560444,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9765625,"distances_sum":2471.4088127122386}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":12,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752060439560444,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9765625,"distances_sum":2471.4088127122386}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8075075965700974,"seconds":4.503875970840454e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.7109375,"distances_sum":1641.6482067133006}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8622257950382958,"seconds":4.734843969345093e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.046875,"distances_sum":1867.717763048656}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8622257950382958,"seconds":4.734843969345093e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.046875,"distances_sum":1867.717763048656}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9447458791208794,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6484375,"distances_sum":2460.7552707870036}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9021811521811529,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.34375,"distances_sum":2151.4717301469127}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8701668123543131,"seconds":4.816800355911255e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0234375,"distances_sum":1900.878029984165}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8740998584748592,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.2734375,"distances_sum":1985.1959805659865}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9447458791208794,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6484375,"distances_sum":2460.7552707870036}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9717834249084252,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8203125,"distances_sum":2634.8684381087623}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9607918123543128,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8203125,"distances_sum":2545.546309779743}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9564217032967037,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.828125,"distances_sum":2505.9832786346597}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9475160256410263,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6796875,"distances_sum":2497.261559509143}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9717834249084252,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8203125,"distances_sum":2634.8684381087623}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9717834249084252,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8203125,"distances_sum":2634.8684381087623}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8695518023643033,"seconds":4.822388291358948e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.03125,"distances_sum":1935.8077439183196}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8175099206349213,"seconds":4.395842552185059e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.9453125,"distances_sum":1704.0021728283748}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8695518023643033,"seconds":4.822388291358948e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.03125,"distances_sum":1935.8077439183196}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9407108516483522,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6328125,"distances_sum":2447.32840607802}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9079097985347993,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4296875,"distances_sum":2211.8002834056183}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9407108516483522,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6328125,"distances_sum":2447.32840607802}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9633756868131875,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.796875,"distances_sum":2601.8123773901516}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9611092032967038,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.84375,"distances_sum":2573.6081187412315}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9579842032967038,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8046875,"distances_sum":2550.3128129915494}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9633756868131875,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.796875,"distances_sum":2601.8123773901516}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9633756868131875,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.796875,"distances_sum":2601.8123773901516}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7967104076479083,"seconds":4.416331648826599e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.8046875,"distances_sum":1517.68450857528}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19140625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.19140625,"f1":null,"seconds":2.8740614652633667e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.5625,"distances_sum":469.8997947885519}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8112424034299043,"seconds":9.650364518165588e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.0546875,"distances_sum":1537.4791699904242}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.697265625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.697265625,"f1":0.8112424034299043,"seconds":9.650364518165588e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.0546875,"distances_sum":1537.4791699904242}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8551165848040857,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.296875,"distances_sum":1789.3634835002335}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8837001540126549,"seconds":5.031004548072815e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.65625,"distances_sum":1915.6466276683275}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8663872585747594,"seconds":1.0030344128608704e-5,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.375,"distances_sum":1850.252240466031}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8037109375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8037109375,"f1":0.8837001540126549,"seconds":5.031004548072815e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.65625,"distances_sum":1915.6466276683275}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9380869130869136,"seconds":1.0505318641662598e-5,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.71875,"distances_sum":2299.387166880769}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.951350732600733,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.84375,"distances_sum":2382.012579397103}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9517227564102568,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8046875,"distances_sum":2409.9692172147893}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9579842032967035,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8203125,"distances_sum":2421.1970540311163}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9485951548451556,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.734375,"distances_sum":2377.78632284777}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9590315934065937,"seconds":1.0753050446510315e-5,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9296875,"distances_sum":2401.40352005677}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9526270604395609,"seconds":1.0730698704719543e-5,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.78125,"distances_sum":2387.7402306912722}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9590315934065937,"seconds":1.0753050446510315e-5,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9296875,"distances_sum":2401.40352005677}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9590315934065937,"seconds":1.0753050446510315e-5,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9296875,"distances_sum":2401.40352005677}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1904296875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1904296875,"f1":null,"seconds":3.555789589881897e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.53125,"distances_sum":433.3936410628437}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1904296875,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.1904296875,"f1":null,"seconds":3.555789589881897e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.53125,"distances_sum":433.3936410628437}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1904296875,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.1904296875,"f1":null,"seconds":3.555789589881897e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.53125,"distances_sum":433.3936410628437}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.353515625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.353515625,"f1":null,"seconds":3.855675458908081e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.859375,"distances_sum":611.9137267437152}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1728515625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1728515625,"f1":null,"seconds":3.2633543014526367e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":4.5078125,"distances_sum":351.0034661759618}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3447265625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3447265625,"f1":null,"seconds":3.723427653312683e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.6328125,"distances_sum":642.9934753466174}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.353515625,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.353515625,"f1":null,"seconds":3.855675458908081e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.859375,"distances_sum":611.9137267437152}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8046391108891117,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.484375,"distances_sum":1441.7023501491797}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.638671875,"f1":0.767920621045622,"seconds":4.516914486885071e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.171875,"distances_sum":1272.1952036961004}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7767961205461213,"seconds":4.449859261512756e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.1875,"distances_sum":1263.2170515499129}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8552973068598078,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.921875,"distances_sum":1638.1839208602191}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6318359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6318359375,"f1":0.7623050560550568,"seconds":4.503875970840454e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.140625,"distances_sum":1251.8053029812033}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6259765625, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6259765625,"f1":0.7587402181152189,"seconds":4.580244421958923e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.203125,"distances_sum":1205.0361880030628}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8552973068598078,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.921875,"distances_sum":1638.1839208602191}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.94320054945055,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6875,"distances_sum":2085.4835952156177}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9190075549450556,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.4375,"distances_sum":1965.0920019363386}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9416266025641031,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6328125,"distances_sum":2082.488485219015}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":12,"bsize":6}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.862674825174826,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.1484375,"distances_sum":1634.526225950028}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.94320054945055,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6875,"distances_sum":2085.4835952156177}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.94320054945055,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6875,"distances_sum":2085.4835952156177}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.781921724109225,"seconds":3.3117830753326416e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":7.1484375,"distances_sum":1206.5166513196934}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5029296875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5029296875,"f1":0.6518493659118664,"seconds":3.5651028156280518e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":6.453125,"distances_sum":925.1330235025328}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66015625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.66015625,"f1":0.781921724109225,"seconds":3.3117830753326416e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":7.1484375,"distances_sum":1206.5166513196934}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9380322802197806,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.515625,"distances_sum":1977.9384757984853}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9404647435897442,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.5546875,"distances_sum":1993.0140315348576}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9404647435897442,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.5546875,"distances_sum":1993.0140315348576}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9683264652014658,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.7734375,"distances_sum":2113.003748449416}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681948260073266,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.8125,"distances_sum":2117.4375617065302}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9683264652014658,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.7734375,"distances_sum":2113.003748449416}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9683264652014658,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.7734375,"distances_sum":2113.003748449416}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5478515625,"f1":null,"seconds":4.3548643589019775e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.0234375,"distances_sum":972.7282879261671}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.525390625,"f1":0.6740120990120996,"seconds":3.974884748458862e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.9453125,"distances_sum":902.7145739399407}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2255859375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2255859375,"f1":null,"seconds":3.1534582376480103e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.453125,"distances_sum":414.37009472285797}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5478515625,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.5478515625,"f1":null,"seconds":4.3548643589019775e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.0234375,"distances_sum":972.7282879261671}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8558810980685988,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.0703125,"distances_sum":1535.0361757466367}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9432749542124548,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8203125,"distances_sum":1963.6126522160348}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9432749542124548,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8203125,"distances_sum":1963.6126522160348}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9555663086913092,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.859375,"distances_sum":2037.7377968749036}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9607371794871797,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.84375,"distances_sum":2073.5759456012306}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9607371794871797,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.84375,"distances_sum":2073.5759456012306}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9607371794871797,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.84375,"distances_sum":2073.5759456012306}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3544921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3544921875,"f1":null,"seconds":3.4794211387634277e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.015625,"distances_sum":592.2383967893312}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3544921875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3544921875,"f1":null,"seconds":3.4794211387634277e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.015625,"distances_sum":592.2383967893312}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5380859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5380859375,"f1":null,"seconds":4.477798938751221e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.34375,"distances_sum":974.6673422892444}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8931922244422252,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.4375,"distances_sum":1694.2726860510504}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.640625,"f1":0.7702178030303038,"seconds":4.386529326438904e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.7265625,"distances_sum":1180.6461516907855}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8203125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8203125,"f1":0.8931922244422252,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.4375,"distances_sum":1694.2726860510504}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9482002372627377,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.734375,"distances_sum":2002.2970023286061}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9404907592407599,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7734375,"distances_sum":1936.939370938259}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9482002372627377,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.734375,"distances_sum":2002.2970023286061}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9482002372627377,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.734375,"distances_sum":2002.2970023286061}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.33984375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.33984375,"f1":null,"seconds":3.293156623840332e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.0625,"distances_sum":646.5761200277836}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.49609375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.49609375,"f1":0.6468850593850596,"seconds":3.885477781295776e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.2265625,"distances_sum":954.5053724298865}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.49609375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.49609375,"f1":0.6468850593850596,"seconds":3.885477781295776e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.2265625,"distances_sum":954.5053724298865}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9021005036630044,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.2890625,"distances_sum":1726.342472541114}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8922567016317023,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.2421875,"distances_sum":1692.6268378424054}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":2,"bsize":4}, perf: {"precision":null,"recall":0.65234375,"f1":null,"seconds":4.652887582778931e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.25,"distances_sum":1206.968381410878}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8349609375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8349609375,"f1":0.9021005036630044,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.2890625,"distances_sum":1726.342472541114}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9518715659340665,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.84375,"distances_sum":1968.6968416369132}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9532680860805864,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8046875,"distances_sum":1991.439430650692}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9347215284715289,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6328125,"distances_sum":1913.5563803737887}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9532680860805864,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8046875,"distances_sum":1991.439430650692}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9532680860805864,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8046875,"distances_sum":1991.439430650692}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4287109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4287109375,"f1":null,"seconds":3.729015588760376e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":6.015625,"distances_sum":945.8765833433043}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7030920468420472,"seconds":4.218891263008118e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":7.015625,"distances_sum":1253.844887727421}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7820949883449891,"seconds":4.470348358154297e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":7.328125,"distances_sum":1442.410162929714}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6572265625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6572265625,"f1":0.7820949883449891,"seconds":4.470348358154297e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":7.328125,"distances_sum":1442.410162929714}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9081075174825182,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":8.390625,"distances_sum":2086.3866528669146}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9026270604395613,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":8.359375,"distances_sum":2053.5561687600475}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8757929570429578,"seconds":5.854293704032898e-5,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":7.96875,"distances_sum":1866.9286497208168}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.857749542124543,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":7.796875,"distances_sum":1811.1054761011471}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83984375,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.83984375,"f1":0.9081075174825182,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":8.390625,"distances_sum":2086.3866528669146}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":11,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9129407051282059,"seconds":6.701797246932983e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":8.46875,"distances_sum":2111.831010574223}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9594150641025644,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":8.828125,"distances_sum":2480.9357853673273}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9664434523809526,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":8.8515625,"distances_sum":2560.3233706957226}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9550309065934067,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":8.7109375,"distances_sum":2504.684105568652}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9527586996337003,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":8.8203125,"distances_sum":2449.3267307895167}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9332105394605402,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":8.671875,"distances_sum":2255.390597880126}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9664434523809526,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":8.8515625,"distances_sum":2560.3233706957226}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9664434523809526,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.1101365089416504e-6,"evaluations":8.8515625,"distances_sum":2560.3233706957226}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5205078125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5205078125,"f1":0.668966970529471,"seconds":4.161149263381958e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":6.8828125,"distances_sum":1254.2736812457506}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3466796875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3466796875,"f1":null,"seconds":3.5408884286880493e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":5.03125,"distances_sum":785.2585089721873}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5009765625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5009765625,"f1":0.6532994782994789,"seconds":4.246830940246582e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":6.7734375,"distances_sum":1181.8260362778292}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5205078125,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5205078125,"f1":0.668966970529471,"seconds":4.161149263381958e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":6.8828125,"distances_sum":1254.2736812457506}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8674424533799542,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.1484375,"distances_sum":2006.0903545484907}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.7990164349539358,"seconds":4.7031790018081665e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.0390625,"distances_sum":1759.4295887050096}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9225961538461543,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.375,"distances_sum":2423.3205623582553}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8008862665112674,"seconds":4.511326551437378e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":7.9609375,"distances_sum":1708.7477012990946}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8772352647352656,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.203125,"distances_sum":2082.0966289293788}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8870624167499176,"seconds":4.762783646583557e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.3984375,"distances_sum":2145.8698628462075}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.865234375,"f1":0.9225961538461543,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.375,"distances_sum":2423.3205623582553}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9515510531135536,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.7109375,"distances_sum":2641.7221259131356}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9213286713286721,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.390625,"distances_sum":2411.4543141986696}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9515510531135536,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.7109375,"distances_sum":2641.7221259131356}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9515510531135536,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.7109375,"distances_sum":2641.7221259131356}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5361328125,"f1":0.6821567321567327,"seconds":4.08664345741272e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.984375,"distances_sum":1300.0019477516619}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3662109375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3662109375,"f1":null,"seconds":3.604218363761902e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.7421875,"distances_sum":883.2163100843269}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5361328125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5361328125,"f1":0.6821567321567327,"seconds":4.08664345741272e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.984375,"distances_sum":1300.0019477516619}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7755846583971591,"seconds":4.412606358528137e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7890625,"distances_sum":1671.8153934581485}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7952453796203803,"seconds":4.466623067855835e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.8828125,"distances_sum":1721.3599659177994}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.921351565101566,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.53125,"distances_sum":2340.9595843071065}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8645196817071824,"seconds":6.645917892456055e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.265625,"distances_sum":2023.0408637363203}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8700497419247428,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3671875,"distances_sum":2039.7545165495244}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.86328125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.86328125,"f1":0.921351565101566,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.53125,"distances_sum":2340.9595843071065}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.960067536630037,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8203125,"distances_sum":2661.419339652698}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9552312271062278,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.78125,"distances_sum":2610.899329750028}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9329555860805868,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.65625,"distances_sum":2454.9956738313954}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9471242299367304,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7578125,"distances_sum":2584.158767612767}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.960067536630037,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8203125,"distances_sum":2661.419339652698}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.960067536630037,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8203125,"distances_sum":2661.419339652698}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5400390625,"f1":0.6871815684315689,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.078125,"distances_sum":1282.6061115306677}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.4458935260772705e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":6.09375,"distances_sum":952.3198740949939}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5263671875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5263671875,"f1":0.6732649295149299,"seconds":4.1816383600234985e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.09375,"distances_sum":1249.0560387090861}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5400390625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5400390625,"f1":0.6871815684315689,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.078125,"distances_sum":1282.6061115306677}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8727938727938737,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.3359375,"distances_sum":1967.549004037163}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6318359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6318359375,"f1":0.7618626165501172,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.609375,"distances_sum":1526.8824892087137}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9070257867132873,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.6484375,"distances_sum":2160.328466529758}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.864675255300256,"seconds":4.809349775314331e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.171875,"distances_sum":1956.920658684324}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.870945027195028,"seconds":5.04031777381897e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.25,"distances_sum":1992.1458954883642}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8388671875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8388671875,"f1":0.9070257867132873,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.6484375,"distances_sum":2160.328466529758}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9488381410256417,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.7578125,"distances_sum":2504.2501180503823}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9098359973359981,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.6015625,"distances_sum":2234.3184443372757}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.946102335164836,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.671875,"distances_sum":2531.952698003901}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9585393772893775,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.765625,"distances_sum":2643.0855620900147}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9585393772893775,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.765625,"distances_sum":2643.0855620900147}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9585393772893775,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.765625,"distances_sum":2643.0855620900147}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5380859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5380859375,"f1":0.6834165834165841,"seconds":3.999099135398865e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.59375,"distances_sum":1353.010889624886}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5380859375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5380859375,"f1":0.6834165834165841,"seconds":3.999099135398865e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.59375,"distances_sum":1353.010889624886}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.7970964799089808,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.5,"distances_sum":1771.065617038853}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.915121857309358,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.484375,"distances_sum":2302.2567325105097}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.8151052072927081,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.6640625,"distances_sum":1794.708073535488}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8629417457542469,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.9609375,"distances_sum":2002.3107876674324}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.853515625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.915121857309358,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.484375,"distances_sum":2302.2567325105097}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9555319680319684,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7734375,"distances_sum":2669.012932499803}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9659226190476194,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8515625,"distances_sum":2735.2577095077468}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9222215284715293,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5625,"distances_sum":2404.730425953937}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9479941933066935,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.71875,"distances_sum":2608.689873841484}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9427572427572434,"seconds":5.9606507420539856e-5,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7265625,"distances_sum":2573.0000925160552}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9659226190476194,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8515625,"distances_sum":2735.2577095077468}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9659226190476194,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8515625,"distances_sum":2735.2577095077468}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8073846292596301,"seconds":4.51505184173584e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.59375,"distances_sum":1897.560546610106}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2080078125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2080078125,"f1":null,"seconds":2.7529895305633545e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":4.515625,"distances_sum":638.393209034903}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2177734375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2177734375,"f1":null,"seconds":2.8349459171295166e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":4.640625,"distances_sum":626.2104604252216}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.6827252608502615,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":6.375,"distances_sum":1408.2114341587335}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.697265625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.697265625,"f1":0.8073846292596301,"seconds":4.51505184173584e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.59375,"distances_sum":1897.560546610106}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9175366300366307,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.5546875,"distances_sum":2480.295528405519}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8874687812187818,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.296875,"distances_sum":2276.5861741610643}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8664923618048624,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.953125,"distances_sum":2134.806567153646}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8680611055611065,"seconds":4.600733518600464e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.0,"distances_sum":2152.472444663086}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.85546875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.9175366300366307,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.5546875,"distances_sum":2480.295528405519}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9494104853479861,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.703125,"distances_sum":2744.675022452243}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9617788461538468,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.796875,"distances_sum":2834.142793793133}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9604223901098903,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.7890625,"distances_sum":2832.1715669828427}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9577438186813192,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.75,"distances_sum":2811.5490910031626}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9433150183150187,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.640625,"distances_sum":2751.688170230073}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9617788461538468,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.796875,"distances_sum":2834.142793793133}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9617788461538468,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.796875,"distances_sum":2834.142793793133}}, n: 9
inertia(cfft.distances) = 19.450470111851235
inertia(cdnet.distances) = 24.551566069732747
inertia(crand.distances) = 27.513416183728147
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9199999999999999
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8822222222222221
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.88
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9155555555555556
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8733333333333334
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.92
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9222222222222222
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8733333333333334
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9088888888888889
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9222222222222222
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9199999999999999
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8622222222222223
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9022222222222224
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 2, 3, 3, 1, 3, 3, 1, 2, 3, 3, 2, 3, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 1, 3]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.44040000376164073] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.44040000376164073, 0.17022658831972215] ***
*** starting iteration: 2; err: [Inf, 0.44040000376164073, 0.17022658831972215] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.44040000376164073, 0.17022658831972215, 0.16186487768918367] ***
*** starting iteration: 3; err: [Inf, 0.44040000376164073, 0.17022658831972215, 0.16186487768918367] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.44040000376164073, 0.17022658831972215, 0.16186487768918367, 0.15977988067066795] ***
*** starting iteration: 4; err: [Inf, 0.44040000376164073, 0.17022658831972215, 0.16186487768918367, 0.15977988067066795] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.44040000376164073, 0.17022658831972215, 0.16186487768918367, 0.15977988067066795, 0.15923322165931889] ***
*** finished computation of 12 references, err: [Inf, 0.44040000376164073, 0.17022658831972215, 0.16186487768918367, 0.15977988067066795, 0.15923322165931889] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 8, 14]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(2, 8), (3, 14)]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 10, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
finished with 14 centroids; started with 12
acc = 0.9133333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.4673000071496851] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4673000071496851, 0.27930453899528424] ***
*** starting iteration: 2; err: [Inf, 0.4673000071496851, 0.27930453899528424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4673000071496851, 0.27930453899528424, 0.24919774719776744] ***
*** starting iteration: 3; err: [Inf, 0.4673000071496851, 0.27930453899528424, 0.24919774719776744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4673000071496851, 0.27930453899528424, 0.24919774719776744, 0.24448226706266973] ***
*** starting iteration: 4; err: [Inf, 0.4673000071496851, 0.27930453899528424, 0.24919774719776744, 0.24448226706266973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4673000071496851, 0.27930453899528424, 0.24919774719776744, 0.24448226706266973, 0.24402067525102847] ***
*** finished computation of 7 references, err: [Inf, 0.4673000071496851, 0.27930453899528424, 0.24919774719776744, 0.24448226706266973, 0.24402067525102847] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 17, 7]]
** centroid: 2, normalized-entropy: 0.8708644692353648, [(2, 17), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4070888784170873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4070888784170873, 0.22809496983003125] ***
*** finished computation of 7 references, err: [Inf, 0.4070888784170873, 0.22809496983003125] ***
*** center 1: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 1]]
** centroid: 3, normalized-entropy: 0.21639693245126485, [(2, 28), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 7, 21]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 7), (3, 21)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.530049004510822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.530049004510822, 0.16670491064782453] ***
*** finished computation of 7 references, err: [Inf, 0.530049004510822, 0.16670491064782453] ***
*** center 1: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 3]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 11), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 8, 11]]
** centroid: 4, normalized-entropy: 0.9819407868640977, [(2, 8), (3, 11)]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3735632228472436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3735632228472436, 0.1721911349890158] ***
*** finished computation of 7 references, err: [Inf, 0.3735632228472436, 0.1721911349890158] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 12]]
** centroid: 5, normalized-entropy: 0.3912435636292556, [(2, 1), (3, 12)]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1584999950744714] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1584999950744714, 0.6947622967319811] ***
*** finished computation of 3 references, err: [Inf, 1.1584999950744714, 0.6947622967319811] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 16]]
** centroid: 1, normalized-entropy: 0.9043814577244941, [(2, 34), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [37, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5395999966799662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5395999966799662, 0.32146178215907356] ***
*** starting iteration: 2; err: [Inf, 0.5395999966799662, 0.32146178215907356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5395999966799662, 0.32146178215907356, 0.27537141852144215] ***
*** starting iteration: 3; err: [Inf, 0.5395999966799662, 0.32146178215907356, 0.27537141852144215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5395999966799662, 0.32146178215907356, 0.27537141852144215, 0.2600586943954322] ***
*** starting iteration: 4; err: [Inf, 0.5395999966799662, 0.32146178215907356, 0.27537141852144215, 0.2600586943954322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5395999966799662, 0.32146178215907356, 0.27537141852144215, 0.2600586943954322, 0.2600586943954322] ***
*** finished computation of 7 references, err: [Inf, 0.5395999966799662, 0.32146178215907356, 0.27537141852144215, 0.2600586943954322, 0.2600586943954322] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 12]]
** centroid: 4, normalized-entropy: 0.9852281360342514, [(2, 9), (3, 12)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 8]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4342000056353358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4342000056353358, 0.2790044854980922] ***
*** starting iteration: 2; err: [Inf, 0.4342000056353358, 0.2790044854980922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4342000056353358, 0.2790044854980922, 0.26415130529261754] ***
*** starting iteration: 3; err: [Inf, 0.4342000056353358, 0.2790044854980922, 0.26415130529261754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4342000056353358, 0.2790044854980922, 0.26415130529261754, 0.24338888797128777] ***
*** starting iteration: 4; err: [Inf, 0.4342000056353358, 0.2790044854980922, 0.26415130529261754, 0.24338888797128777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4342000056353358, 0.2790044854980922, 0.26415130529261754, 0.24338888797128777, 0.23425336565397373] ***
*** starting iteration: 5; err: [Inf, 0.4342000056353358, 0.2790044854980922, 0.26415130529261754, 0.24338888797128777, 0.23425336565397373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4342000056353358, 0.2790044854980922, 0.26415130529261754, 0.24338888797128777, 0.23425336565397373, 0.23379767637407817] ***
*** finished computation of 7 references, err: [Inf, 0.4342000056353358, 0.2790044854980922, 0.26415130529261754, 0.24338888797128777, 0.23425336565397373, 0.23379767637407817] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 9]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8501687240028316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8501687240028316, 0.4392274324687431] ***
*** finished computation of 7 references, err: [Inf, 0.8501687240028316, 0.4392274324687431] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 3: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [14, 3, 0]]
** centroid: 4, normalized-entropy: 0.6722948170756378, [(1, 14), (2, 3)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 32, 21]]
** centroid: 5, normalized-entropy: 0.9687003436508602, [(2, 32), (3, 21)]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3450753368150312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3450753368150312, 0.2101651419102026] ***
*** finished computation of 7 references, err: [Inf, 0.3450753368150312, 0.2101651419102026] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 7, 9]]
** centroid: 5, normalized-entropy: 0.9886994082884974, [(2, 7), (3, 9)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33740999404325295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33740999404325295, 0.19439746262923374] ***
*** finished computation of 7 references, err: [Inf, 0.33740999404325295, 0.19439746262923374] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 7, 13]]
** centroid: 7, normalized-entropy: 0.9340680553754911, [(2, 7), (3, 13)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5778608785594599] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5778608785594599, 0.2422409597328089] ***
*** starting iteration: 2; err: [Inf, 0.5778608785594599, 0.2422409597328089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5778608785594599, 0.2422409597328089, 0.21297867772611478] ***
*** starting iteration: 3; err: [Inf, 0.5778608785594599, 0.2422409597328089, 0.21297867772611478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5778608785594599, 0.2422409597328089, 0.21297867772611478, 0.206870648784411] ***
*** finished computation of 7 references, err: [Inf, 0.5778608785594599, 0.2422409597328089, 0.21297867772611478, 0.206870648784411] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 8]]
** centroid: 1, normalized-entropy: 1.0, [(2, 8), (3, 8)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8072865682333044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8072865682333044, 0.29048893775346263] ***
*** starting iteration: 2; err: [Inf, 0.8072865682333044, 0.29048893775346263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8072865682333044, 0.29048893775346263, 0.2593141976864062] ***
*** starting iteration: 3; err: [Inf, 0.8072865682333044, 0.29048893775346263, 0.2593141976864062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8072865682333044, 0.29048893775346263, 0.2593141976864062, 0.2272353234908385] ***
*** finished computation of 7 references, err: [Inf, 0.8072865682333044, 0.29048893775346263, 0.2593141976864062, 0.2272353234908385] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 12]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 18), (3, 12)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 18]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 1), (3, 18)]
*** center 5: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33862345163162855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33862345163162855, 0.18744060451500846] ***
*** starting iteration: 2; err: [Inf, 0.33862345163162855, 0.18744060451500846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33862345163162855, 0.18744060451500846, 0.1719792614730675] ***
*** starting iteration: 3; err: [Inf, 0.33862345163162855, 0.18744060451500846, 0.1719792614730675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33862345163162855, 0.18744060451500846, 0.1719792614730675, 0.16966953739731444] ***
*** finished computation of 7 references, err: [Inf, 0.33862345163162855, 0.18744060451500846, 0.1719792614730675, 0.16966953739731444] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 18]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 1), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 5, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8721572569435478] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8721572569435478, 0.6121296358705794] ***
*** starting iteration: 2; err: [Inf, 0.8721572569435478, 0.6121296358705794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8721572569435478, 0.6121296358705794, 0.3945715725648913] ***
*** starting iteration: 3; err: [Inf, 0.8721572569435478, 0.6121296358705794, 0.3945715725648913] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8721572569435478, 0.6121296358705794, 0.3945715725648913, 0.3847852624508411] ***
*** finished computation of 3 references, err: [Inf, 0.8721572569435478, 0.6121296358705794, 0.3945715725648913, 0.3847852624508411] ***
*** center 1: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 24]]
** centroid: 2, normalized-entropy: 0.6631968402398286, [(2, 5), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 4]]
** centroid: 3, normalized-entropy: 0.5225593745369407, [(2, 30), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.9309303019186883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.9309303019186883, 0.618192537234211] ***
*** starting iteration: 2; err: [Inf, 3.9309303019186883, 0.618192537234211] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.9309303019186883, 0.618192537234211, 0.40932064270649593] ***
*** starting iteration: 3; err: [Inf, 3.9309303019186883, 0.618192537234211, 0.40932064270649593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.9309303019186883, 0.618192537234211, 0.40932064270649593, 0.378454982514219] ***
*** finished computation of 3 references, err: [Inf, 3.9309303019186883, 0.618192537234211, 0.40932064270649593, 0.378454982514219] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 15]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(2, 25), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [34, 1, 0]]
** centroid: 3, normalized-entropy: 0.18717625687320805, [(1, 34), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4494886119098753] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4494886119098753, 0.35881033941216856] ***
*** starting iteration: 2; err: [Inf, 1.4494886119098753, 0.35881033941216856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4494886119098753, 0.35881033941216856, 0.3488050334154562] ***
*** starting iteration: 3; err: [Inf, 1.4494886119098753, 0.35881033941216856, 0.3488050334154562] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4494886119098753, 0.35881033941216856, 0.3488050334154562, 0.3420858129128213] ***
*** finished computation of 3 references, err: [Inf, 1.4494886119098753, 0.35881033941216856, 0.3488050334154562, 0.3420858129128213] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 8]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(2, 34), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 24]]
** centroid: 2, normalized-entropy: 0.6631968402398286, [(2, 5), (3, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4674999929369603] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4674999929369603, 0.9696548869177027] ***
*** starting iteration: 2; err: [Inf, 1.4674999929369603, 0.9696548869177027] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4674999929369603, 0.9696548869177027, 0.969189568701836] ***
*** finished computation of 3 references, err: [Inf, 1.4674999929369603, 0.9696548869177027, 0.969189568701836] ***
*** center 1: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 28]]
** centroid: 2, normalized-entropy: 0.9981341775041118, [(2, 31), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [12, 4, 0]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(1, 12), (2, 4)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.6894000222704166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.6894000222704166, 0.9957460144334376] ***
*** starting iteration: 2; err: [Inf, 3.6894000222704166, 0.9957460144334376] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.6894000222704166, 0.9957460144334376, 0.5631882780701198] ***
*** starting iteration: 3; err: [Inf, 3.6894000222704166, 0.9957460144334376, 0.5631882780701198] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.6894000222704166, 0.9957460144334376, 0.5631882780701198, 0.5264923880173262] ***
*** starting iteration: 4; err: [Inf, 3.6894000222704166, 0.9957460144334376, 0.5631882780701198, 0.5264923880173262] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.6894000222704166, 0.9957460144334376, 0.5631882780701198, 0.5264923880173262, 0.5230603363052114] ***
*** starting iteration: 5; err: [Inf, 3.6894000222704166, 0.9957460144334376, 0.5631882780701198, 0.5264923880173262, 0.5230603363052114] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.6894000222704166, 0.9957460144334376, 0.5631882780701198, 0.5264923880173262, 0.5230603363052114, 0.5230603363052114] ***
*** finished computation of 3 references, err: [Inf, 3.6894000222704166, 0.9957460144334376, 0.5631882780701198, 0.5264923880173262, 0.5230603363052114, 0.5230603363052114] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 25, 13]]
** centroid: 2, normalized-entropy: 0.9268190639645774, [(2, 25), (3, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8225000057495344] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8225000057495344, 0.5093686865901296] ***
*** starting iteration: 2; err: [Inf, 0.8225000057495344, 0.5093686865901296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8225000057495344, 0.5093686865901296, 0.4833434261209911] ***
*** starting iteration: 3; err: [Inf, 0.8225000057495344, 0.5093686865901296, 0.4833434261209911] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8225000057495344, 0.5093686865901296, 0.4833434261209911, 0.47968803568052715] ***
*** starting iteration: 4; err: [Inf, 0.8225000057495344, 0.5093686865901296, 0.4833434261209911, 0.47968803568052715] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8225000057495344, 0.5093686865901296, 0.4833434261209911, 0.47968803568052715, 0.4779180870870134] ***
*** starting iteration: 5; err: [Inf, 0.8225000057495344, 0.5093686865901296, 0.4833434261209911, 0.47968803568052715, 0.4779180870870134] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8225000057495344, 0.5093686865901296, 0.4833434261209911, 0.47968803568052715, 0.4779180870870134, 0.4779180870870134] ***
*** finished computation of 3 references, err: [Inf, 0.8225000057495344, 0.5093686865901296, 0.4833434261209911, 0.47968803568052715, 0.4779180870870134, 0.4779180870870134] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 23]]
** centroid: 1, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 36, 9]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.1405315110765115] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1405315110765115, 0.41042029151797754] ***
*** starting iteration: 2; err: [Inf, 2.1405315110765115, 0.41042029151797754] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1405315110765115, 0.41042029151797754, 0.38851998280230277] ***
*** starting iteration: 3; err: [Inf, 2.1405315110765115, 0.41042029151797754, 0.38851998280230277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1405315110765115, 0.41042029151797754, 0.38851998280230277, 0.38333868923386605] ***
*** finished computation of 3 references, err: [Inf, 2.1405315110765115, 0.41042029151797754, 0.38851998280230277, 0.38333868923386605] ***
*** center 1: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 4]]
** centroid: 2, normalized-entropy: 0.5225593745369407, [(2, 30), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 24]]
** centroid: 3, normalized-entropy: 0.6631968402398286, [(2, 5), (3, 24)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.547425335146114] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.547425335146114, 0.8692353642755599] ***
*** starting iteration: 2; err: [Inf, 8.547425335146114, 0.8692353642755599] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.547425335146114, 0.8692353642755599, 0.6638612013295467] ***
*** starting iteration: 3; err: [Inf, 8.547425335146114, 0.8692353642755599, 0.6638612013295467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.547425335146114, 0.8692353642755599, 0.6638612013295467, 0.6616424362777928] ***
*** finished computation of 3 references, err: [Inf, 8.547425335146114, 0.8692353642755599, 0.6638612013295467, 0.6616424362777928] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 24, 40]]
** centroid: 1, normalized-entropy: 0.954434002924965, [(2, 24), (3, 40)]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [22, 2, 0]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(1, 22), (2, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.192307094688525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.192307094688525, 1.168129083409329] ***
*** starting iteration: 2; err: [Inf, 3.192307094688525, 1.168129083409329] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.192307094688525, 1.168129083409329, 0.3542539999438279] ***
*** starting iteration: 3; err: [Inf, 3.192307094688525, 1.168129083409329, 0.3542539999438279] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.192307094688525, 1.168129083409329, 0.3542539999438279, 0.34555162108427334] ***
*** finished computation of 3 references, err: [Inf, 3.192307094688525, 1.168129083409329, 0.3542539999438279, 0.34555162108427334] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 26]]
** centroid: 1, normalized-entropy: 0.6373874992221911, [(2, 5), (3, 26)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 6]]
** centroid: 2, normalized-entropy: 0.6098403047164005, [(2, 34), (3, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.5089704138798523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5089704138798523, 0.8034828184204373] ***
*** starting iteration: 2; err: [Inf, 2.5089704138798523, 0.8034828184204373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5089704138798523, 0.8034828184204373, 0.6549060872910729] ***
*** starting iteration: 3; err: [Inf, 2.5089704138798523, 0.8034828184204373, 0.6549060872910729] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5089704138798523, 0.8034828184204373, 0.6549060872910729, 0.6532797502708146] ***
*** starting iteration: 4; err: [Inf, 2.5089704138798523, 0.8034828184204373, 0.6549060872910729, 0.6532797502708146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5089704138798523, 0.8034828184204373, 0.6549060872910729, 0.6532797502708146, 0.6529052645396607] ***
*** finished computation of 3 references, err: [Inf, 2.5089704138798523, 0.8034828184204373, 0.6549060872910729, 0.6532797502708146, 0.6529052645396607] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [15, 3, 0]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(1, 15), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 28]]
** centroid: 2, normalized-entropy: 0.9967916319816367, [(2, 32), (3, 28)]
*** center 3: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.566663029339787] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.566663029339787, 0.5115707539121059] ***
*** starting iteration: 2; err: [Inf, 2.566663029339787, 0.5115707539121059] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.566663029339787, 0.5115707539121059, 0.370050366633633] ***
*** starting iteration: 3; err: [Inf, 2.566663029339787, 0.5115707539121059, 0.370050366633633] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.566663029339787, 0.5115707539121059, 0.370050366633633, 0.36862391229778807] ***
*** starting iteration: 4; err: [Inf, 2.566663029339787, 0.5115707539121059, 0.370050366633633, 0.36862391229778807] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.566663029339787, 0.5115707539121059, 0.370050366633633, 0.36862391229778807, 0.36802100004581034] ***
*** finished computation of 3 references, err: [Inf, 2.566663029339787, 0.5115707539121059, 0.370050366633633, 0.36862391229778807, 0.36802100004581034] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 25, 13]]
** centroid: 2, normalized-entropy: 0.9268190639645774, [(2, 25), (3, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7455140758815817] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7455140758815817, 0.6138708237691233] ***
*** starting iteration: 2; err: [Inf, 0.7455140758815817, 0.6138708237691233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7455140758815817, 0.6138708237691233, 0.5939923750582329] ***
*** starting iteration: 3; err: [Inf, 0.7455140758815817, 0.6138708237691233, 0.5939923750582329] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7455140758815817, 0.6138708237691233, 0.5939923750582329, 0.5935251375379582] ***
*** finished computation of 3 references, err: [Inf, 0.7455140758815817, 0.6138708237691233, 0.5939923750582329, 0.5935251375379582] ***
*** center 1: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 39, 32]]
** centroid: 3, normalized-entropy: 0.9929768866085175, [(2, 39), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.0802341517648286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.0802341517648286, 0.5624101386057445] ***
*** finished computation of 7 references, err: [Inf, 3.0802341517648286, 0.5624101386057445] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 2]]
** centroid: 2, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 2]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 7), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [37, 3, 0]]
** centroid: 6, normalized-entropy: 0.3843115441264972, [(1, 37), (2, 3)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30516376034835835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30516376034835835, 0.21535105063767482] ***
*** finished computation of 7 references, err: [Inf, 0.30516376034835835, 0.21535105063767482] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 8]]
** centroid: 3, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 11]]
** centroid: 6, normalized-entropy: 0.4138168503036336, [(2, 1), (3, 11)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36710323116286153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36710323116286153, 0.29177597761697455] ***
*** finished computation of 7 references, err: [Inf, 0.36710323116286153, 0.29177597761697455] ***
*** center 1: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 23]]
** centroid: 3, normalized-entropy: 0.6051865766334207, [(2, 4), (3, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 35, 9]]
** centroid: 5, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7305000028836369] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7305000028836369, 0.5693008660704927] ***
*** starting iteration: 2; err: [Inf, 0.7305000028836369, 0.5693008660704927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7305000028836369, 0.5693008660704927, 0.563729616911069] ***
*** starting iteration: 3; err: [Inf, 0.7305000028836369, 0.5693008660704927, 0.563729616911069] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7305000028836369, 0.5693008660704927, 0.563729616911069, 0.559253428644572] ***
*** starting iteration: 4; err: [Inf, 0.7305000028836369, 0.5693008660704927, 0.563729616911069, 0.559253428644572] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7305000028836369, 0.5693008660704927, 0.563729616911069, 0.559253428644572, 0.5570240137931042] ***
*** starting iteration: 5; err: [Inf, 0.7305000028836369, 0.5693008660704927, 0.563729616911069, 0.559253428644572, 0.5570240137931042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7305000028836369, 0.5693008660704927, 0.563729616911069, 0.559253428644572, 0.5570240137931042, 0.5570240137931042] ***
*** finished computation of 3 references, err: [Inf, 0.7305000028836369, 0.5693008660704927, 0.563729616911069, 0.559253428644572, 0.5570240137931042, 0.5570240137931042] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 4]]
** centroid: 1, normalized-entropy: 0.5127091420308771, [(2, 31), (3, 4)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 24]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 4), (3, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.776499978121202] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.776499978121202, 0.7608938160795787] ***
*** starting iteration: 2; err: [Inf, 3.776499978121202, 0.7608938160795787] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.776499978121202, 0.7608938160795787, 0.5704203605108737] ***
*** starting iteration: 3; err: [Inf, 3.776499978121202, 0.7608938160795787, 0.5704203605108737] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.776499978121202, 0.7608938160795787, 0.5704203605108737, 0.563880255139964] ***
*** starting iteration: 4; err: [Inf, 3.776499978121202, 0.7608938160795787, 0.5704203605108737, 0.563880255139964] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.776499978121202, 0.7608938160795787, 0.5704203605108737, 0.563880255139964, 0.5631654354350129] ***
*** finished computation of 3 references, err: [Inf, 3.776499978121202, 0.7608938160795787, 0.5704203605108737, 0.563880255139964, 0.5631654354350129] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 7, 39]]
** centroid: 3, normalized-entropy: 0.6152538910563409, [(2, 7), (3, 39)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.190299996441504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.190299996441504, 1.3939456974971716] ***
*** starting iteration: 2; err: [Inf, 3.190299996441504, 1.3939456974971716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.190299996441504, 1.3939456974971716, 0.5459386112252211] ***
*** starting iteration: 3; err: [Inf, 3.190299996441504, 1.3939456974971716, 0.5459386112252211] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.190299996441504, 1.3939456974971716, 0.5459386112252211, 0.4787176630273821] ***
*** starting iteration: 4; err: [Inf, 3.190299996441504, 1.3939456974971716, 0.5459386112252211, 0.4787176630273821] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.190299996441504, 1.3939456974971716, 0.5459386112252211, 0.4787176630273821, 0.4779180870870134] ***
*** finished computation of 3 references, err: [Inf, 3.190299996441504, 1.3939456974971716, 0.5459386112252211, 0.4787176630273821, 0.4779180870870134] ***
*** center 1: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 36, 9]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 23]]
** centroid: 3, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7371000106271226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7371000106271226, 1.020591421512402] ***
*** starting iteration: 2; err: [Inf, 1.7371000106271226, 1.020591421512402] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7371000106271226, 1.020591421512402, 0.9907769307787282] ***
*** starting iteration: 3; err: [Inf, 1.7371000106271226, 1.020591421512402, 0.9907769307787282] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7371000106271226, 1.020591421512402, 0.9907769307787282, 0.9755312700007596] ***
*** finished computation of 3 references, err: [Inf, 1.7371000106271226, 1.020591421512402, 0.9907769307787282, 0.9755312700007596] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 28]]
** centroid: 1, normalized-entropy: 0.9981341775041118, [(2, 31), (3, 28)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [16, 4, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(1, 16), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.144199996359622] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.144199996359622, 0.6868004298421111] ***
*** starting iteration: 2; err: [Inf, 1.144199996359622, 0.6868004298421111] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.144199996359622, 0.6868004298421111, 0.5759665291434395] ***
*** starting iteration: 3; err: [Inf, 1.144199996359622, 0.6868004298421111, 0.5759665291434395] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.144199996359622, 0.6868004298421111, 0.5759665291434395, 0.5318860783487344] ***
*** finished computation of 3 references, err: [Inf, 1.144199996359622, 0.6868004298421111, 0.5759665291434395, 0.5318860783487344] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 13]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 26), (3, 13)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 27]]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.962500056199171] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.962500056199171, 1.7434034469288162] ***
*** starting iteration: 2; err: [Inf, 4.962500056199171, 1.7434034469288162] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.962500056199171, 1.7434034469288162, 0.816421670164593] ***
*** starting iteration: 3; err: [Inf, 4.962500056199171, 1.7434034469288162, 0.816421670164593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.962500056199171, 1.7434034469288162, 0.816421670164593, 0.4988439165936117] ***
*** finished computation of 3 references, err: [Inf, 4.962500056199171, 1.7434034469288162, 0.816421670164593, 0.4988439165936117] ***
*** center 1: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 39, 10]]
** centroid: 2, normalized-entropy: 0.7300166301457938, [(2, 39), (3, 10)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3028000043237338] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3028000043237338, 0.605330398018439] ***
*** finished computation of 3 references, err: [Inf, 1.3028000043237338, 0.605330398018439] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 25, 19]]
** centroid: 1, normalized-entropy: 0.9865446300055647, [(2, 25), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0517000036341808] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0517000036341808, 0.5112320362653978] ***
*** finished computation of 3 references, err: [Inf, 1.0517000036341808, 0.5112320362653978] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 39, 12]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(2, 39), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2046999931280744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2046999931280744, 0.5993627609735135] ***
*** finished computation of 3 references, err: [Inf, 1.2046999931280744, 0.5993627609735135] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 28]]
** centroid: 1, normalized-entropy: 0.8812908992306927, [(2, 12), (3, 28)]
*** center 2: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1984000085161266] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1984000085161266, 0.6892370346990071] ***
*** finished computation of 3 references, err: [Inf, 1.1984000085161266, 0.6892370346990071] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 25, 24]]
** centroid: 1, normalized-entropy: 0.9996995428565171, [(2, 25), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 1, 0]]
** centroid: 2, normalized-entropy: 0.18717625687320805, [(1, 34), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.534700005379841] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.534700005379841, 0.48429953920713864] ***
*** finished computation of 3 references, err: [Inf, 1.534700005379841, 0.48429953920713864] ***
*** center 1: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 37, 10]]
** centroid: 3, normalized-entropy: 0.7467366074830678, [(2, 37), (3, 10)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4840949665375962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4840949665375962, 0.20604494630463285] ***
*** finished computation of 7 references, err: [Inf, 0.4840949665375962, 0.20604494630463285] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 17]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(2, 4), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 18, 5]]
** centroid: 5, normalized-entropy: 0.7553754125614286, [(2, 18), (3, 5)]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43852171359332087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43852171359332087, 0.1648197237938694] ***
*** finished computation of 7 references, err: [Inf, 0.43852171359332087, 0.1648197237938694] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 3]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 6), (3, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 9]]
** centroid: 4, normalized-entropy: 0.9980008838722993, [(2, 10), (3, 9)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4564282760754951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4564282760754951, 0.16090257691128518] ***
*** finished computation of 7 references, err: [Inf, 0.4564282760754951, 0.16090257691128518] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 2]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 20, 6]]
** centroid: 4, normalized-entropy: 0.7793498372920851, [(2, 20), (3, 6)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.534000011884475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.534000011884475, 0.2266082998223853] ***
*** starting iteration: 2; err: [Inf, 0.534000011884475, 0.2266082998223853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.534000011884475, 0.2266082998223853, 0.22235125351890242] ***
*** starting iteration: 3; err: [Inf, 0.534000011884475, 0.2266082998223853, 0.22235125351890242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.534000011884475, 0.2266082998223853, 0.22235125351890242, 0.22235125351890242] ***
*** finished computation of 7 references, err: [Inf, 0.534000011884475, 0.2266082998223853, 0.22235125351890242, 0.22235125351890242] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 7]]
** centroid: 1, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5400000098541843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5400000098541843, 0.26076108452643865] ***
*** starting iteration: 2; err: [Inf, 0.5400000098541843, 0.26076108452643865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5400000098541843, 0.26076108452643865, 0.22924163158617983] ***
*** starting iteration: 3; err: [Inf, 0.5400000098541843, 0.26076108452643865, 0.22924163158617983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5400000098541843, 0.26076108452643865, 0.22924163158617983, 0.22841918942833925] ***
*** finished computation of 7 references, err: [Inf, 0.5400000098541843, 0.26076108452643865, 0.22924163158617983, 0.22841918942833925] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 10, 12]]
** centroid: 7, normalized-entropy: 0.9940302114769566, [(2, 10), (3, 12)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4810000005333319] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4810000005333319, 0.23779240960801848] ***
*** starting iteration: 2; err: [Inf, 0.4810000005333319, 0.23779240960801848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4810000005333319, 0.23779240960801848, 0.230733387434133] ***
*** starting iteration: 3; err: [Inf, 0.4810000005333319, 0.23779240960801848, 0.230733387434133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4810000005333319, 0.23779240960801848, 0.230733387434133, 0.22816311920335813] ***
*** starting iteration: 4; err: [Inf, 0.4810000005333319, 0.23779240960801848, 0.230733387434133, 0.22816311920335813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4810000005333319, 0.23779240960801848, 0.230733387434133, 0.22816311920335813, 0.22491644829981577] ***
*** starting iteration: 5; err: [Inf, 0.4810000005333319, 0.23779240960801848, 0.230733387434133, 0.22816311920335813, 0.22491644829981577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4810000005333319, 0.23779240960801848, 0.230733387434133, 0.22816311920335813, 0.22491644829981577, 0.22418362133350972] ***
*** finished computation of 7 references, err: [Inf, 0.4810000005333319, 0.23779240960801848, 0.230733387434133, 0.22816311920335813, 0.22491644829981577, 0.22418362133350972] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 17]]
** centroid: 4, normalized-entropy: 0.3095434291503252, [(2, 1), (3, 17)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5705000058707119] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5705000058707119, 0.27019116762710665] ***
*** finished computation of 7 references, err: [Inf, 0.5705000058707119, 0.27019116762710665] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 18]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 4), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 22, 4]]
** centroid: 6, normalized-entropy: 0.6193821946787638, [(2, 22), (3, 4)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4995000041353013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4995000041353013, 0.24647464412316814] ***
*** finished computation of 7 references, err: [Inf, 0.4995000041353013, 0.24647464412316814] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 12, 12]]
** centroid: 5, normalized-entropy: 1.0, [(2, 12), (3, 12)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4993000074391547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4993000074391547, 0.254403688769394] ***
*** finished computation of 7 references, err: [Inf, 0.4993000074391547, 0.254403688769394] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 13]]
** centroid: 1, normalized-entropy: 0.8524051786494784, [(2, 5), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 5, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9, 0.8933333333333332, 0.8866666666666667, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.4433000004931915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4433000004931915, 0.33261453853309625] ***
*** finished computation of 7 references, err: [Inf, 0.4433000004931915, 0.33261453853309625] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 4, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 8, 21]]
** centroid: 4, normalized-entropy: 0.8497511372532974, [(2, 8), (3, 21)]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6556999995134938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6556999995134938, 0.29534473919723137] ***
*** finished computation of 7 references, err: [Inf, 0.6556999995134938, 0.29534473919723137] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 10, 11]]
** centroid: 2, normalized-entropy: 0.998363672593813, [(2, 10), (3, 11)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4172999992279401] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4172999992279401, 0.2944439015699013] ***
*** finished computation of 7 references, err: [Inf, 0.4172999992279401, 0.2944439015699013] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 11]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9, 0.8933333333333332, 0.8866666666666667, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 17
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9, 0.8933333333333332, 0.8866666666666667, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 17
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9, 0.8933333333333332, 0.8866666666666667, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 18
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.40194959161758675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40194959161758675, 0.20510433501945763] ***
*** starting iteration: 2; err: [Inf, 0.40194959161758675, 0.20510433501945763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40194959161758675, 0.20510433501945763, 0.182604651221282] ***
*** starting iteration: 3; err: [Inf, 0.40194959161758675, 0.20510433501945763, 0.182604651221282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40194959161758675, 0.20510433501945763, 0.182604651221282, 0.17945082004221244] ***
*** starting iteration: 4; err: [Inf, 0.40194959161758675, 0.20510433501945763, 0.182604651221282, 0.17945082004221244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40194959161758675, 0.20510433501945763, 0.182604651221282, 0.17945082004221244, 0.17746301487141905] ***
*** starting iteration: 5; err: [Inf, 0.40194959161758675, 0.20510433501945763, 0.182604651221282, 0.17945082004221244, 0.17746301487141905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40194959161758675, 0.20510433501945763, 0.182604651221282, 0.17945082004221244, 0.17746301487141905, 0.17746301487141905] ***
*** finished computation of 7 references, err: [Inf, 0.40194959161758675, 0.20510433501945763, 0.182604651221282, 0.17945082004221244, 0.17746301487141905, 0.17746301487141905] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 6]]
** centroid: 4, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39761799461908426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39761799461908426, 0.1643315680553658] ***
*** starting iteration: 2; err: [Inf, 0.39761799461908426, 0.1643315680553658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39761799461908426, 0.1643315680553658, 0.16317798233723965] ***
*** starting iteration: 3; err: [Inf, 0.39761799461908426, 0.1643315680553658, 0.16317798233723965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39761799461908426, 0.1643315680553658, 0.16317798233723965, 0.16193538245622408] ***
*** starting iteration: 4; err: [Inf, 0.39761799461908426, 0.1643315680553658, 0.16317798233723965, 0.16193538245622408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39761799461908426, 0.1643315680553658, 0.16317798233723965, 0.16193538245622408, 0.16115605789170598] ***
*** finished computation of 7 references, err: [Inf, 0.39761799461908426, 0.1643315680553658, 0.16317798233723965, 0.16193538245622408, 0.16115605789170598] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 11]]
** centroid: 6, normalized-entropy: 1.0, [(2, 11), (3, 11)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47567064734510184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47567064734510184, 0.16929628922806372] ***
*** starting iteration: 2; err: [Inf, 0.47567064734510184, 0.16929628922806372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47567064734510184, 0.16929628922806372, 0.15455524230057927] ***
*** starting iteration: 3; err: [Inf, 0.47567064734510184, 0.16929628922806372, 0.15455524230057927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47567064734510184, 0.16929628922806372, 0.15455524230057927, 0.1533954414544792] ***
*** starting iteration: 4; err: [Inf, 0.47567064734510184, 0.16929628922806372, 0.15455524230057927, 0.1533954414544792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47567064734510184, 0.16929628922806372, 0.15455524230057927, 0.1533954414544792, 0.1533954414544792] ***
*** finished computation of 7 references, err: [Inf, 0.47567064734510184, 0.16929628922806372, 0.15455524230057927, 0.1533954414544792, 0.1533954414544792] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 6]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 21), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 10, 2]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9, 0.8933333333333332, 0.8866666666666667, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 20
iteration 6 finished
*** starting iteration: 1; err: [Inf, 1.1710000130743543] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1710000130743543, 0.6776703131219697] ***
*** starting iteration: 2; err: [Inf, 1.1710000130743543, 0.6776703131219697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1710000130743543, 0.6776703131219697, 0.6077135228510119] ***
*** starting iteration: 3; err: [Inf, 1.1710000130743543, 0.6776703131219697, 0.6077135228510119] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1710000130743543, 0.6776703131219697, 0.6077135228510119, 0.5677881311988219] ***
*** starting iteration: 4; err: [Inf, 1.1710000130743543, 0.6776703131219697, 0.6077135228510119, 0.5677881311988219] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1710000130743543, 0.6776703131219697, 0.6077135228510119, 0.5677881311988219, 0.5588275480802255] ***
*** starting iteration: 5; err: [Inf, 1.1710000130743543, 0.6776703131219697, 0.6077135228510119, 0.5677881311988219, 0.5588275480802255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1710000130743543, 0.6776703131219697, 0.6077135228510119, 0.5677881311988219, 0.5588275480802255, 0.5578659226392902] ***
*** finished computation of 3 references, err: [Inf, 1.1710000130743543, 0.6776703131219697, 0.6077135228510119, 0.5677881311988219, 0.5588275480802255, 0.5578659226392902] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 6]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(2, 34), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4876999935361932] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4876999935361932, 0.5468209931797464] ***
*** starting iteration: 2; err: [Inf, 1.4876999935361932, 0.5468209931797464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4876999935361932, 0.5468209931797464, 0.5238796620212632] ***
*** starting iteration: 3; err: [Inf, 1.4876999935361932, 0.5468209931797464, 0.5238796620212632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4876999935361932, 0.5468209931797464, 0.5238796620212632, 0.5230603363052114] ***
*** finished computation of 3 references, err: [Inf, 1.4876999935361932, 0.5468209931797464, 0.5238796620212632, 0.5230603363052114] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 25, 13]]
** centroid: 3, normalized-entropy: 0.9268190639645774, [(2, 25), (3, 13)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5822999841507266] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5822999841507266, 0.4800867507974763] ***
*** starting iteration: 2; err: [Inf, 1.5822999841507266, 0.4800867507974763] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5822999841507266, 0.4800867507974763, 0.477878820005451] ***
*** starting iteration: 3; err: [Inf, 1.5822999841507266, 0.4800867507974763, 0.477878820005451] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5822999841507266, 0.4800867507974763, 0.477878820005451, 0.477878820005451] ***
*** finished computation of 3 references, err: [Inf, 1.5822999841507266, 0.4800867507974763, 0.477878820005451, 0.477878820005451] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 37, 9]]
** centroid: 1, normalized-entropy: 0.7131467486384921, [(2, 37), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7010901270094234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7010901270094234, 0.4360805343648012] ***
*** starting iteration: 2; err: [Inf, 0.7010901270094234, 0.4360805343648012] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7010901270094234, 0.4360805343648012, 0.40028503258805914] ***
*** starting iteration: 3; err: [Inf, 0.7010901270094234, 0.4360805343648012, 0.40028503258805914] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7010901270094234, 0.4360805343648012, 0.40028503258805914, 0.3869114428355685] ***
*** starting iteration: 4; err: [Inf, 0.7010901270094234, 0.4360805343648012, 0.40028503258805914, 0.3869114428355685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7010901270094234, 0.4360805343648012, 0.40028503258805914, 0.3869114428355685, 0.3867191831282466] ***
*** finished computation of 3 references, err: [Inf, 0.7010901270094234, 0.4360805343648012, 0.40028503258805914, 0.3869114428355685, 0.3867191831282466] ***
*** center 1: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 5]]
** centroid: 3, normalized-entropy: 0.552495114325111, [(2, 34), (3, 5)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1168371596713693] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1168371596713693, 0.38667727718620865] ***
*** starting iteration: 2; err: [Inf, 1.1168371596713693, 0.38667727718620865] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1168371596713693, 0.38667727718620865, 0.3734732583078225] ***
*** starting iteration: 3; err: [Inf, 1.1168371596713693, 0.38667727718620865, 0.3734732583078225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1168371596713693, 0.38667727718620865, 0.3734732583078225, 0.3685971721012385] ***
*** starting iteration: 4; err: [Inf, 1.1168371596713693, 0.38667727718620865, 0.3734732583078225, 0.3685971721012385] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1168371596713693, 0.38667727718620865, 0.3734732583078225, 0.3685971721012385, 0.36802100004581034] ***
*** finished computation of 3 references, err: [Inf, 1.1168371596713693, 0.38667727718620865, 0.3734732583078225, 0.3685971721012385, 0.36802100004581034] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 25, 13]]
** centroid: 3, normalized-entropy: 0.9268190639645774, [(2, 25), (3, 13)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7388146271772971] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7388146271772971, 0.3862704968681409] ***
*** starting iteration: 2; err: [Inf, 0.7388146271772971, 0.3862704968681409] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7388146271772971, 0.3862704968681409, 0.3614355391567806] ***
*** starting iteration: 3; err: [Inf, 0.7388146271772971, 0.3862704968681409, 0.3614355391567806] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7388146271772971, 0.3862704968681409, 0.3614355391567806, 0.34669853810849555] ***
*** starting iteration: 4; err: [Inf, 0.7388146271772971, 0.3862704968681409, 0.3614355391567806, 0.34669853810849555] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7388146271772971, 0.3862704968681409, 0.3614355391567806, 0.34669853810849555, 0.34320136953052105] ***
*** starting iteration: 5; err: [Inf, 0.7388146271772971, 0.3862704968681409, 0.3614355391567806, 0.34669853810849555, 0.34320136953052105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7388146271772971, 0.3862704968681409, 0.3614355391567806, 0.34669853810849555, 0.34320136953052105, 0.3403327564336973] ***
*** starting iteration: 6; err: [Inf, 0.7388146271772971, 0.3862704968681409, 0.3614355391567806, 0.34669853810849555, 0.34320136953052105, 0.3403327564336973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7388146271772971, 0.3862704968681409, 0.3614355391567806, 0.34669853810849555, 0.34320136953052105, 0.3403327564336973, 0.3392002324615334] ***
*** starting iteration: 7; err: [Inf, 0.7388146271772971, 0.3862704968681409, 0.3614355391567806, 0.34669853810849555, 0.34320136953052105, 0.3403327564336973, 0.3392002324615334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7388146271772971, 0.3862704968681409, 0.3614355391567806, 0.34669853810849555, 0.34320136953052105, 0.3403327564336973, 0.3392002324615334, 0.3385145709001409] ***
*** finished computation of 3 references, err: [Inf, 0.7388146271772971, 0.3862704968681409, 0.3614355391567806, 0.34669853810849555, 0.34320136953052105, 0.3403327564336973, 0.3392002324615334, 0.3385145709001409] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 9]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 23]]
** centroid: 3, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 22
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.410670110671459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.410670110671459, 0.2776363329084664] ***
*** starting iteration: 2; err: [Inf, 0.410670110671459, 0.2776363329084664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.410670110671459, 0.2776363329084664, 0.24472627665984292] ***
*** starting iteration: 3; err: [Inf, 0.410670110671459, 0.2776363329084664, 0.24472627665984292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.410670110671459, 0.2776363329084664, 0.24472627665984292, 0.23488333040903964] ***
*** finished computation of 7 references, err: [Inf, 0.410670110671459, 0.2776363329084664, 0.24472627665984292, 0.23488333040903964] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 12]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 4), (3, 12)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 1, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 11, 4]]
** centroid: 7, normalized-entropy: 0.8366407419411671, [(2, 11), (3, 4)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34102465560728107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34102465560728107, 0.24979984993545162] ***
*** starting iteration: 2; err: [Inf, 0.34102465560728107, 0.24979984993545162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34102465560728107, 0.24979984993545162, 0.22126958545888387] ***
*** starting iteration: 3; err: [Inf, 0.34102465560728107, 0.24979984993545162, 0.22126958545888387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34102465560728107, 0.24979984993545162, 0.22126958545888387, 0.18280146239614356] ***
*** finished computation of 7 references, err: [Inf, 0.34102465560728107, 0.24979984993545162, 0.22126958545888387, 0.18280146239614356] ***
*** center 1: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 8, 14]]
** centroid: 7, normalized-entropy: 0.9456603046006401, [(2, 8), (3, 14)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.269451423239265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.269451423239265, 0.1927879553428767] ***
*** starting iteration: 2; err: [Inf, 0.269451423239265, 0.1927879553428767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.269451423239265, 0.1927879553428767, 0.18087218505932992] ***
*** starting iteration: 3; err: [Inf, 0.269451423239265, 0.1927879553428767, 0.18087218505932992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.269451423239265, 0.1927879553428767, 0.18087218505932992, 0.17331275486536057] ***
*** finished computation of 7 references, err: [Inf, 0.269451423239265, 0.1927879553428767, 0.18087218505932992, 0.17331275486536057] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 5, 8]]
** centroid: 4, normalized-entropy: 0.961236604722876, [(2, 5), (3, 8)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6610000032544021] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6610000032544021, 0.3917884897449707] ***
*** starting iteration: 2; err: [Inf, 0.6610000032544021, 0.3917884897449707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6610000032544021, 0.3917884897449707, 0.32925538833472756] ***
*** starting iteration: 3; err: [Inf, 0.6610000032544021, 0.3917884897449707, 0.32925538833472756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6610000032544021, 0.3917884897449707, 0.32925538833472756, 0.3107580030956361] ***
*** finished computation of 7 references, err: [Inf, 0.6610000032544021, 0.3917884897449707, 0.32925538833472756, 0.3107580030956361] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 11]]
** centroid: 3, normalized-entropy: 0.9640787648082293, [(2, 7), (3, 11)]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7984999972942647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7984999972942647, 0.322296455508523] ***
*** starting iteration: 2; err: [Inf, 0.7984999972942647, 0.322296455508523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7984999972942647, 0.322296455508523, 0.2776352891660931] ***
*** starting iteration: 3; err: [Inf, 0.7984999972942647, 0.322296455508523, 0.2776352891660931] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7984999972942647, 0.322296455508523, 0.2776352891660931, 0.27102905470075944] ***
*** finished computation of 7 references, err: [Inf, 0.7984999972942647, 0.322296455508523, 0.2776352891660931, 0.27102905470075944] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 1]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 5), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 5, 14]]
** centroid: 4, normalized-entropy: 0.8314743880097292, [(2, 5), (3, 14)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6269000041988226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6269000041988226, 0.33554585332771447] ***
*** starting iteration: 2; err: [Inf, 0.6269000041988226, 0.33554585332771447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6269000041988226, 0.33554585332771447, 0.31571755451973227] ***
*** starting iteration: 3; err: [Inf, 0.6269000041988226, 0.33554585332771447, 0.31571755451973227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6269000041988226, 0.33554585332771447, 0.31571755451973227, 0.29761922349986514] ***
*** finished computation of 7 references, err: [Inf, 0.6269000041988226, 0.33554585332771447, 0.31571755451973227, 0.29761922349986514] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 1]]
** centroid: 1, normalized-entropy: 0.2055925081850832, [(2, 30), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 9, 17]]
** centroid: 2, normalized-entropy: 0.9305861291319927, [(2, 9), (3, 17)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 22
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 24
iteration 9 finished
*** starting iteration: 1; err: [Inf, 1.8161999882330746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8161999882330746, 0.8031390957524416] ***
*** finished computation of 3 references, err: [Inf, 1.8161999882330746, 0.8031390957524416] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 28]]
** centroid: 1, normalized-entropy: 0.9930554830121975, [(2, 23), (3, 28)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.802399972308346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.802399972308346, 1.0679663492392402] ***
*** finished computation of 3 references, err: [Inf, 3.802399972308346, 1.0679663492392402] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 40]]
** centroid: 1, normalized-entropy: 0.8935711016541908, [(2, 18), (3, 40)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [6, 8, 0]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(1, 6), (2, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9357999964826338] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9357999964826338, 0.4813463823659802] ***
*** finished computation of 3 references, err: [Inf, 0.9357999964826338, 0.4813463823659802] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 37, 9]]
** centroid: 1, normalized-entropy: 0.7131467486384921, [(2, 37), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.9586633294462965] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.9586633294462965, 0.8482259161082425] ***
*** finished computation of 3 references, err: [Inf, 7.9586633294462965, 0.8482259161082425] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 28]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 35), (3, 28)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8940324445639847] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8940324445639847, 0.6742997005942891] ***
*** finished computation of 3 references, err: [Inf, 0.8940324445639847, 0.6742997005942891] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 24, 40]]
** centroid: 1, normalized-entropy: 0.954434002924965, [(2, 24), (3, 40)]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [29, 2, 0]]
** centroid: 3, normalized-entropy: 0.3451173149449528, [(1, 29), (2, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7562299378841838] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7562299378841838, 0.34163551880069404] ***
*** finished computation of 3 references, err: [Inf, 0.7562299378841838, 0.34163551880069404] ***
*** center 1: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 36, 8]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
finished with 5 centroids; started with 3
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1), 0.9666666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.8, 3.025, 4.8, 1.5], [6.5058823529411764, 2.98235294117647, 5.517647058823529, 2.0352941176470587], [5.017142857142857, 3.454285714285715, 1.4742857142857144, 0.2314285714285715], [5.433333333333333, 2.441666666666667, 3.725, 1.1166666666666667], [7.666666666666667, 2.8000000000000003, 6.733333333333334, 2.1333333333333333], [6.022222222222223, 2.911111111111111, 4.444444444444444, 1.4055555555555557], [5.96, 2.56, 4.9399999999999995, 1.8399999999999999], [4.45, 2.5999999999999996, 1.35, 0.25], [7.6000000000000005, 3.6, 6.366666666666667, 2.0]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3, 2, 3, 1, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.6499999999999995, 2.766666666666666, 4.283333333333334, 1.25], [5.533333333333334, 2.4, 4.833333333333333, 1.7333333333333334], [4.713333333333333, 3.0933333333333333, 1.4533333333333331, 0.2], [7.512500000000001, 3.1875000000000004, 6.3, 2.075], [6.37, 2.8299999999999996, 4.67, 1.47], [6.0777777777777775, 2.8000000000000003, 4.977777777777778, 1.7999999999999998], [6.536842105263159, 3.078947368421052, 5.584210526315789, 2.1999999999999997], [5.3428571428571425, 2.442857142857143, 3.485714285714286, 1.0714285714285714], [5.2210526315789485, 3.5999999999999996, 1.5052631578947366, 0.2947368421052632]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 3, 3, 2, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.8909090909090915, 3.3227272727272723, 1.4227272727272728, 0.23636363636363641], [7.412500000000001, 3.0375, 6.2125, 2.0000000000000004], [5.718181818181818, 2.9272727272727277, 4.3, 1.3909090909090909], [5.25, 2.65, 4.7, 1.85], [6.42, 2.9249999999999994, 4.605, 1.435], [5.983333333333333, 2.85, 4.983333333333333, 1.8333333333333333], [6.523076923076924, 3.0615384615384618, 5.5, 2.161538461538462], [5.514285714285714, 3.9714285714285715, 1.4857142857142855, 0.2857142857142857], [5.55, 2.5, 3.6666666666666665, 1.0666666666666667]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 3, 1, 2], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[59, 18, 26, 1, 11, 1, 1, 13, 26, 7, 28, 25, 32, 20, 34, 3, 28, 37, 43, 28, 45, 43, 43, 20, 45, 38, 21, 25, 27, 2, 23, 35, 1, 32, 30, 41, 41, 32, 37, 40, 15, 41, 24, 32, 32, 41, 25, 30, 33, 2, 1, 9, 1, 40, 24, 24, 30, 25, 41, 3, 19, 66, 39, 1, 31, 13, 3, 48, 28, 18, 44, 59, 22, 29, 52, 35, 42, 17, 33, 48, 34, 49, 31, 46, 35, 38, 33, 57, 33, 48, 39, 30, 14, 40, 14, 63, 13, 13, 25, 30, 27, 35, 27, 25, 41, 26, 53, 35, 44, 22, 24, 33, 31, 48, 39, 27, 38, 48, 25, 1, 52, 19, 26, 19, 75, 40, 39, 15, 9, 37, 17, 52, 45, 43, 42, 48, 16, 32, 33, 33, 44, 48, 44, 31, 37, 25, 48, 27, 25, 46, 35, 23, 47, 26, 53, 45, 23, 43, 50, 46, 25, 39, 24, 30, 24, 35, 1, 29, 39, 43, 32, 37, 41, 27, 18, 34, 34, 24, 35, 48, 36, 29, 40, 43, 30, 41, 52, 67, 30, 14, 34, 6, 22, 48, 36, 46, 45, 15, 30, 25, 9, 45, 50, 2, 21, 17, 44, 39, 36, 28, 45, 43, 56, 29, 43, 21, 55, 58, 23, 26, 42, 32, 29, 50, 24, 26, 4, 59, 39, 38, 34, 34, 63, 35, 29, 34, 53, 37, 24, 34, 49, 31, 25, 27, 18, 48, 24, 37, 39, 66, 32, 39, 65, 1, 83, 64, 17, 50, 54, 47, 52, 26, 19, 37, 31, 50, 43, 30, 61, 27, 39, 39, 46, 35, 48, 9, 25, 24, 28, 61, 30, 24, 60, 30, 50, 36, 24, 49, 40, 31, 33, 42, 27, 39, 37, 39, 41, 39, 34, 57]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6259999999999999, speedup = 0.4964851577159763, eval_ratio = 0.041548)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3498263888888889,"recall":0.3498263888888889,"f1":null,"seconds":6.574764847755432e-5,"exhaustive_search_seconds":0.00041868723928928375,"evaluations":337.703125,"distances_sum":1744.473848775652}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5277777777777779,"recall":0.5277777777777779,"f1":0.5277777777777779,"seconds":9.625963866710663e-5,"exhaustive_search_seconds":0.00041868723928928375,"evaluations":377.78125,"distances_sum":1615.206218819788}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6249999999999998,"recall":0.6249999999999998,"f1":0.6249999999999998,"seconds":0.00012373924255371094,"exhaustive_search_seconds":0.00041868723928928375,"evaluations":417.34375,"distances_sum":1571.3935544186538}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.6996527777777772,"recall":0.6996527777777772,"f1":0.6996527777777772,"seconds":0.00016038678586483002,"exhaustive_search_seconds":0.00041868723928928375,"evaluations":457.5390625,"distances_sum":1546.2967748255683}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.768229166666666,"recall":0.768229166666666,"f1":0.768229166666666,"seconds":0.00019251368939876556,"exhaustive_search_seconds":0.00041868723928928375,"evaluations":497.5546875,"distances_sum":1526.0053838659348}
KCenters.DeloneInvIndex> reached performance {"precision":0.81423611111111,"recall":0.81423611111111,"f1":0.81423611111111,"seconds":0.00022082403302192688,"exhaustive_search_seconds":0.00041868723928928375,"evaluations":537.46875,"distances_sum":1515.455590615999}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.807, speedup = 2.119829544836883, eval_ratio = 0.053077)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
