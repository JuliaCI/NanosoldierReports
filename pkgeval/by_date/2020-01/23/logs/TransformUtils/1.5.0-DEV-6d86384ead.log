Julia Version 1.5.0-DEV.142
Commit 6d86384ead (2020-01-23 18:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_LrnqDg/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_LrnqDg/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_LrnqDg/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.13653628595084 0.015112915627534893; 0.13653628595084 0.0 0.11111313138096664; -0.015112915627534893 -0.11111313138096664 0.0])
dAA = so3([0.0 0.05951552297010158 -0.026768120871565815; -0.05951552297010158 0.0 0.1461964515726356; 0.026768120871565815 -0.1461964515726356 0.0])
dAA = so3([0.0 0.11099907645057815 0.09450196638490005; -0.11099907645057815 0.0 -0.06650418103993272; -0.09450196638490005 0.06650418103993272 0.0])
dAA = Quaternion(0.99884136604017, [-0.042335430836774005, 0.022657141613658685, -0.003207914707523109])
dAA = SO3([0.982806172811423 -0.15742214187027356 -0.09648987476797266; 0.15407329129060357 0.9871969971979777 -0.041273594878291735; 0.10175189233937815 0.025697431238783337 0.9944778501470428])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.986868500881949 0.15691483645267734 -0.03831835158307608; -0.13278084607459473 0.9231729727561715 0.3607227595928039; 0.09197721936832776 -0.3508979858499654 0.9318856124244584]), [-1.1111313138096663, 0.15112915627534892, 1.3653628595084])
xj = SE3(SO3([0.9934849137752854 0.008753389109887657 0.11362704026773164; -0.03252052830617708 0.9773646883759413 0.20904707879921752; -0.10922518637933717 -0.21138033043518983 0.9712817379965037]), [0.6650418103993272, 0.9450196638490005, -1.1099907645057814])
Dx = SE3(SO3([0.9747108418413764 -0.14057904128006596 0.17371329238044164; 0.16419734787583282 0.9778231336535198 -0.13000442393454698; -0.1515849786338274 0.15523998339599285 0.9761775155205094]), [1.4197597118185807, 1.8802027761495579, -2.0884320794209095])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
