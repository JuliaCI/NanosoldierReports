Julia Version 1.5.0-DEV.139
Commit c2abaeedf8 (2020-01-22 06:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_zTZanV/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_zTZanV/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_zTZanV/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.016787325624149207 0.10914666915410753; 0.016787325624149207 0.0 -0.08825008624560682; -0.10914666915410753 0.08825008624560682 0.0])
dAA = so3([0.0 0.0970279125936281 -0.07944194369021429; -0.0970279125936281 0.0 0.17404517881181444; 0.07944194369021429 -0.17404517881181444 0.0])
dAA = so3([0.0 0.036617882220593166 0.1323172307182442; -0.036617882220593166 0.0 -0.0031785367103495674; -0.1323172307182442 0.0031785367103495674 0.0])
dAA = Quaternion(0.9909806859852993, [-0.008835751903089691, -0.014642301525363208, 0.1329090384377713])
dAA = SO3([0.9987803654343187 0.047361783083141686 -0.013951456055692897; -0.04720778238003003 0.998822652795517 0.011168417313377236; 0.014463986506085437 -0.010496178624216186 0.9998402989121012])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9520245714062539 0.27329045384438144 -0.13770091966385234; -0.1889262989247816 0.8788638472519473 0.4380698478189177; 0.2407406675518758 -0.39103793400517767 0.8883317314807794]), [0.8825008624560681, 1.0914666915410753, 0.16787325624149207])
xj = SE3(SO3([0.7834678719709536 -0.616394505561225 -0.07896775989755765; 0.6198318924986332 0.7842291558605355 0.028161252455004733; 0.04457037840167162 -0.07101017259664019 0.9964793207874045]), [0.03178536710349567, 1.323172307182442, -0.3661788222059317])
Dx = SE3(SO3([0.639508022267865 -0.7520792632536206 0.15939344791720472; 0.7414334233062192 0.5485435900602683 -0.3864924431450283; 0.20323869774101688 0.36534464767898706 0.9084147291589082]), [-0.9822453931278026, 0.17997988638235185, -0.25576785768296784])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
