Julia Version 1.5.0-DEV.139
Commit c2abaeedf8 (2020-01-22 06:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed Missings ─────────── v0.4.3
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed FillArrays ───────── v0.8.4
 Installed Parameters ───────── v0.12.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed MacroTools ───────── v0.5.3
 Installed DataStructures ───── v0.17.9
 Installed StatsBase ────────── v0.32.0
 Installed ArgCheck ─────────── v1.0.1
 Installed StatsFuns ────────── v0.9.3
 Installed SortingAlgorithms ── v0.3.1
 Installed DataAPI ──────────── v1.1.0
 Installed SpecialFunctions ─── v0.9.0
 Installed Rmath ────────────── v0.6.0
 Installed ProgressMeter ────── v1.2.0
 Installed InplaceOps ───────── v0.3.0
 Installed LazyArrays ───────── v0.14.11
 Installed OrderedCollections ─ v1.1.0
 Installed Requires ─────────── v1.0.0
 Installed ArrayLayouts ─────── v0.1.5
 Installed StaticArrays ─────── v0.12.1
 Installed BinaryProvider ───── v0.5.8
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_9Bt2tH/Project.toml`
 [no changes]
  Updating `/tmp/jl_9Bt2tH/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed ForwardDiff ───────────────── v0.10.9
 Installed Adapt ─────────────────────── v1.0.0
 Installed Bijectors ─────────────────── v0.5.2
 Installed Zygote ────────────────────── v0.4.6
 Installed Distributions ─────────────── v0.22.3
 Installed IRTools ───────────────────── v0.3.0
 Installed UnicodePlots ──────────────── v1.1.0
 Installed Polynomials ───────────────── v0.6.0
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed MCMCChains ────────────────── v1.0.1
 Installed OffsetArrays ──────────────── v1.0.1
 Installed AxisArrays ────────────────── v0.4.1
 Installed OrdinaryDiffEq ────────────── v5.27.1
 Installed Turing ────────────────────── v0.8.3
 Installed JSON ──────────────────────── v0.21.0
 Installed TransformVariables ────────── v0.3.9
 Installed NLSolversBase ─────────────── v7.5.0
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed Inflate ───────────────────── v0.1.1
 Installed LightGraphs ───────────────── v1.3.0
 Installed DynamicPPL ────────────────── v0.1.1
 Installed IntervalSets ──────────────── v0.3.2
 Installed DiffEqBase ────────────────── v6.12.5
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed ArrayInterface ────────────── v2.3.1
 Installed FunctionWrappers ──────────── v1.0.0
 Installed KernelDensity ─────────────── v0.5.1
 Installed Libtask ───────────────────── v0.3.1
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed DiffResults ───────────────── v1.0.2
 Installed RecipesBase ───────────────── v0.7.0
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed GenericSVD ────────────────── v0.2.2
 Installed Arpack ────────────────────── v0.4.0
 Installed NNlib ─────────────────────── v0.6.4
 Installed DistributionsAD ───────────── v0.2.0
 Installed PositiveFactorizations ────── v0.2.3
 Installed CommonSubexpressions ──────── v0.2.0
 Installed ChainRulesCore ────────────── v0.5.5
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed MappedArrays ──────────────── v0.2.2
 Installed RangeArrays ───────────────── v0.3.2
 Installed DocStringExtensions ───────── v0.8.1
 Installed RecursiveFactorization ────── v0.1.0
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed BenchmarkTools ────────────── v0.4.3
 Installed MuladdMacro ───────────────── v0.2.2
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed ZygoteRules ───────────────── v0.2.0
 Installed ExponentialUtilities ──────── v1.6.0
 Installed SparseDiffTools ───────────── v1.2.0
 Installed Showoff ───────────────────── v0.3.1
 Installed InvertedIndices ───────────── v1.0.0
 Installed SimpleTraits ──────────────── v0.9.1
 Installed TableTraits ───────────────── v1.0.0
 Installed Parsers ───────────────────── v0.3.10
 Installed DataFrames ────────────────── v0.20.0
 Installed Roots ─────────────────────── v0.8.4
 Installed IterativeSolvers ──────────── v0.8.1
 Installed Optim ─────────────────────── v0.19.7
 Installed NaNMath ───────────────────── v0.3.3
 Installed Ratios ────────────────────── v0.3.1
 Installed Compat ────────────────────── v2.2.0
 Installed Reexport ──────────────────── v0.2.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed Tables ────────────────────── v0.2.11
 Installed LineSearches ──────────────── v7.0.1
 Installed LogDensityProblems ────────── v0.10.1
 Installed Tracker ───────────────────── v0.2.6
 Installed TreeViews ─────────────────── v0.3.0
 Installed PDMats ────────────────────── v0.9.11
 Installed Combinatorics ─────────────── v0.7.0
 Installed DiffEqDiffTools ───────────── v1.7.0
 Installed FFTW ──────────────────────── v1.2.0
 Installed DiffRules ─────────────────── v1.0.0
 Installed QuadGK ────────────────────── v2.3.1
 Installed Interpolations ────────────── v0.12.7
 Installed RecursiveArrayTools ───────── v2.0.2
 Installed IterTools ─────────────────── v1.3.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Calculus ──────────────────── v0.5.1
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed CategoricalArrays ─────────── v0.7.7
  Updating `/tmp/jl_OSiB0h/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.22.3
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_OSiB0h/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [49dc2e85] + Calculus v0.5.1
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.5.5
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.12.5
  [01453d9d] + DiffEqDiffTools v1.7.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.22.3
  [ced4e74d] + DistributionsAD v0.2.0
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.0
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.7
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.1
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.5.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v1.0.1
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.19.7
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [90014a1f] + PDMats v0.9.11
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.2
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.2.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_J8Zinf/Project.toml`
 [no changes]
  Updating `/tmp/jl_J8Zinf/Manifest.toml`
 [no changes]
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_OBnqry/Project.toml`
 [no changes]
  Updating `/tmp/jl_OBnqry/Manifest.toml`
 [no changes]
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_N0H4p3/Project.toml`
 [no changes]
  Updating `/tmp/jl_N0H4p3/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_OSiB0h/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.22.3
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.27.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.149159675
│   t_steps = 0.007419005
└   t_step / t_steps = 20.10507810683508
Sampling  0%|                               |  ETA: 5:53:36[K
  iterations:                    1
  n_steps:                       9
  is_accept:                     true
  acceptance_rate:               0.16969667623277945
  log_density:                   -13.26163484635613
  hamiltonian_energy:            16.509885693278765
  hamiltonian_energy_error:      1.0382908813832294
  max_hamiltonian_energy_error:  5.117001899838666
  tree_depth:                    3
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▊                            |  ETA: 0:00:28[K
  iterations:                    1067
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8554940599948831
  log_density:                   -14.534099488094395
  hamiltonian_energy:            18.041930930020353
  hamiltonian_energy_error:      0.25049269292787457
  max_hamiltonian_energy_error:  0.2802276771829888
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7660017364599452
  nom_step_size:                 0.7660017364599452
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0350616267170085, 0.9593 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:23[K
  iterations:                    1334
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.963589248926161
  log_density:                   -14.568008904071105
  hamiltonian_energy:            23.647275096906036
  hamiltonian_energy_error:      -0.1717166445272582
  max_hamiltonian_energy_error:  -0.1717166445272582
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6159621684890344
  nom_step_size:                 0.6159621684890344
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0350616267170085, 0.9593 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▎                          |  ETA: 0:00:19[K
  iterations:                    1624
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5691510148413365
  log_density:                   -11.525938995777995
  hamiltonian_energy:            15.594679075834556
  hamiltonian_energy_error:      -0.20266364800784764
  max_hamiltonian_energy_error:  1.278276122034617
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.152339318158819
  nom_step_size:                 1.152339318158819
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0350616267170085, 0.9593 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:17[K
  iterations:                    1867
  n_steps:                       35
  is_accept:                     true
  acceptance_rate:               0.9843032118102004
  log_density:                   -12.494085523835532
  hamiltonian_energy:            17.721882372018356
  hamiltonian_energy_error:      -0.3321412435320745
  max_hamiltonian_energy_error:  -0.410966412057288
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7826571630186991
  nom_step_size:                 0.7826571630186991
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0350616267170085, 0.9593 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|█████▊                         |  ETA: 0:00:14[K
  iterations:                    2235
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8650680298008078
  log_density:                   -12.84855592533067
  hamiltonian_energy:            14.686422578314257
  hamiltonian_energy_error:      0.22405876502627464
  max_hamiltonian_energy_error:  0.2847222088895869
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▊                        |  ETA: 0:00:12[K
  iterations:                    2611
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8017213332447921
  log_density:                   -12.79617022423984
  hamiltonian_energy:            17.70863460211681
  hamiltonian_energy_error:      0.08576069843627465
  max_hamiltonian_energy_error:  0.42488789808152205
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|███████▉                       |  ETA: 0:00:10[K
  iterations:                    3069
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9707075289333901
  log_density:                   -13.563137675088957
  hamiltonian_energy:            18.163814957417102
  hamiltonian_energy_error:      -0.1511521465952157
  max_hamiltonian_energy_error:  -0.41222368325221126
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▊                      |  ETA: 0:00:09[K
  iterations:                    3411
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8892852875081309
  log_density:                   -11.523948675163439
  hamiltonian_energy:            15.514417980090254
  hamiltonian_energy_error:      -0.04986825214112578
  max_hamiltonian_energy_error:  0.27881530305219115
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|██████████                     |  ETA: 0:00:08[K
  iterations:                    3884
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7286024519272724
  log_density:                   -14.68839549978607
  hamiltonian_energy:            21.153501291656415
  hamiltonian_energy_error:      0.1378081942796463
  max_hamiltonian_energy_error:  0.570443761891184
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████▏                   |  ETA: 0:00:07[K
  iterations:                    4328
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9388408318535432
  log_density:                   -12.81102757265246
  hamiltonian_energy:            14.603670629072962
  hamiltonian_energy_error:      0.1391528307992722
  max_hamiltonian_energy_error:  0.1857834144323327
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████▏                  |  ETA: 0:00:06[K
  iterations:                    4693
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9751202996404482
  log_density:                   -11.604920884716435
  hamiltonian_energy:            14.818756138318093
  hamiltonian_energy_error:      -0.08774178413546885
  max_hamiltonian_energy_error:  -0.09125872067955498
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▎                 |  ETA: 0:00:05[K
  iterations:                    5135
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7996428683982932
  log_density:                   -12.51698496013656
  hamiltonian_energy:            17.515863213608732
  hamiltonian_energy_error:      0.08038924415741988
  max_hamiltonian_energy_error:  0.599240258915696
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 46%|██████████████▎                |  ETA: 0:00:05[K
  iterations:                    5493
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9970311881091616
  log_density:                   -14.788078043359992
  hamiltonian_energy:            21.652173889697927
  hamiltonian_energy_error:      -0.41590169008929934
  max_hamiltonian_energy_error:  -0.47523390547768685
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▍               |  ETA: 0:00:04[K
  iterations:                    5934
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.181622149866111
  hamiltonian_energy:            20.15245042677512
  hamiltonian_energy_error:      -0.08681376851535916
  max_hamiltonian_energy_error:  -0.16162746374458337
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▎              |  ETA: 0:00:04[K
  iterations:                    6311
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9936905716203103
  log_density:                   -11.440548959816999
  hamiltonian_energy:            14.933339630163175
  hamiltonian_energy_error:      -0.2000258599126461
  max_hamiltonian_energy_error:  -0.2000258599126461
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▍             |  ETA: 0:00:03[K
  iterations:                    6715
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9657550383679518
  log_density:                   -16.515481688032473
  hamiltonian_energy:            20.38868071945203
  hamiltonian_energy_error:      0.10167212385631075
  max_hamiltonian_energy_error:  -0.31574721448723153
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▍            |  ETA: 0:00:03[K
  iterations:                    7113
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.985615014023937
  log_density:                   -15.09584220979436
  hamiltonian_energy:            19.24753863404605
  hamiltonian_energy_error:      -0.11905007276060786
  max_hamiltonian_energy_error:  -0.391968455172119
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▎           |  ETA: 0:00:03[K
  iterations:                    7461
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9715420458979777
  log_density:                   -13.916818199131177
  hamiltonian_energy:            19.720356092609627
  hamiltonian_energy_error:      -0.25213879710394593
  max_hamiltonian_energy_error:  -0.34980170587056136
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▌          |  ETA: 0:00:02[K
  iterations:                    7917
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8706700642040323
  log_density:                   -13.037058758632513
  hamiltonian_energy:            14.54408099849827
  hamiltonian_energy_error:      0.20693528460922117
  max_hamiltonian_energy_error:  0.22447202579876802
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▎         |  ETA: 0:00:02[K
  iterations:                    8249
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8423004110137962
  log_density:                   -11.108083763615728
  hamiltonian_energy:            14.680248786328779
  hamiltonian_energy_error:      0.006614136929361081
  max_hamiltonian_energy_error:  0.2921708127401299
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▌        |  ETA: 0:00:02[K
  iterations:                    8693
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8336529505583309
  log_density:                   -16.1019369176145
  hamiltonian_energy:            21.14911490124599
  hamiltonian_energy_error:      0.1930522175854712
  max_hamiltonian_energy_error:  0.44151408924156144
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▍       |  ETA: 0:00:02[K
  iterations:                    9042
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9681885939197411
  log_density:                   -12.891560125221778
  hamiltonian_energy:            16.268107427605116
  hamiltonian_energy_error:      -0.023657166264538176
  max_hamiltonian_energy_error:  -0.1161324384433442
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▌      |  ETA: 0:00:01[K
  iterations:                    9474
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9548999985299701
  log_density:                   -12.764818936699657
  hamiltonian_energy:            17.04286341232781
  hamiltonian_energy_error:      -0.14366199566269344
  max_hamiltonian_energy_error:  -0.23869432357461662
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▍     |  ETA: 0:00:01[K
  iterations:                    9840
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7026936870170405
  log_density:                   -18.82830860510925
  hamiltonian_energy:            22.517911082822515
  hamiltonian_energy_error:      0.7099756542190647
  max_hamiltonian_energy_error:  0.7099756542190647
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▌    |  ETA: 0:00:01[K
  iterations:                    10246
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8471180574109679
  log_density:                   -13.90357310258467
  hamiltonian_energy:            21.144439249476015
  hamiltonian_energy_error:      -0.06695254003154716
  max_hamiltonian_energy_error:  0.3778802264822332
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▌   |  ETA: 0:00:01[K
  iterations:                    10623
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9303352119456483
  log_density:                   -16.89032964544056
  hamiltonian_energy:            20.810969773086814
  hamiltonian_energy_error:      0.2321157195886201
  max_hamiltonian_energy_error:  0.2321157195886201
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▌  |  ETA: 0:00:00[K
  iterations:                    11019
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9766403517879308
  log_density:                   -11.69552479991873
  hamiltonian_energy:            14.469079374824819
  hamiltonian_energy_error:      -0.03548468874143573
  max_hamiltonian_energy_error:  0.0700084675182282
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▋ |  ETA: 0:00:00[K
  iterations:                    11458
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7893814205750702
  log_density:                   -14.506165886533237
  hamiltonian_energy:            15.70231749917361
  hamiltonian_energy_error:      0.4519233276612624
  max_hamiltonian_energy_error:  0.45921227436471135
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▌|  ETA: 0:00:00[K
  iterations:                    11792
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9005426463017534
  log_density:                   -13.372244888472128
  hamiltonian_energy:            17.252149162180633
  hamiltonian_energy_error:      0.07673826361339309
  max_hamiltonian_energy_error:  0.1992215161355766
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9447044558728025
  log_density:                   -10.723814347824614
  hamiltonian_energy:            17.92932973161026
  hamiltonian_energy_error:      -0.5247161135870115
  max_hamiltonian_energy_error:  -0.5247161135870115
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7178871103458819
  nom_step_size:                 0.7178871103458819
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0818872994513804, 0.9783 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.687398663 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0818872994513804, 0.9783 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.718), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0925512774553001
└   average_acceptance_rate = 0.8663104082624071
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.953189966 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            3 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠤⠤⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⢠⡄⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢇⠀⠀⡜⢱⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢄⠀⠀⠀⢀⠇⠸⡀⢠⠃⠀⢇│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⢠⢆⠀⠀⠀⢀⡠⠒⠁⠀⠑⡄⠀⡸⠀⠀⢇⡜⠀⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠀⠀⠀⠀⠀⡎⠈⢆⡠⠊⠁⠀⠀⠀⠀⠀⠈⠢⡇⠀⠀⠸⠇⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⡸⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠃⠀⠀⠀⠀⢀⠤⠤⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠀⢀⣀⠤⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢆⠀⠀⠀⡰⠁⣀⣀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠪⣆⢀⡴⠕⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
