Julia Version 1.5.0-DEV.212
Commit 51f1710d7e (2020-01-31 07:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed InplaceOps ───────── v0.3.0
  Installed Missings ─────────── v0.4.3
  Installed DataAPI ──────────── v1.1.0
  Installed Rmath ────────────── v0.6.0
  Installed AdvancedHMC ──────── v0.2.20
  Installed SpecialFunctions ─── v0.9.0
  Installed LazyArrays ───────── v0.14.11
  Installed StatsBase ────────── v0.32.0
  Installed SortingAlgorithms ── v0.3.1
  Installed MacroTools ───────── v0.5.3
  Installed StaticArrays ─────── v0.12.1
  Installed ArrayLayouts ─────── v0.1.5
  Installed ProgressMeter ────── v1.2.0
  Installed FillArrays ───────── v0.8.4
  Installed ArgCheck ─────────── v1.0.1
  Installed DataStructures ───── v0.17.9
  Installed BinaryProvider ───── v0.5.8
  Installed OrderedCollections ─ v1.1.0
  Installed StatsFuns ────────── v0.9.3
  Installed Requires ─────────── v1.0.0
  Installed Parameters ───────── v0.12.0
  Installed OpenSpecFun_jll ──── v0.5.3+1
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                                                                                                    0.9%###                                                                        5.3%########                                                                  12.0%###############                                                           21.0%######################                                                    31.1%##############################                                            42.5%############################################                              61.7%###############################################################           87.7%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         #############                                                             18.3%######################################                                    53.3%######################################################################## 100.0%
#=#=#                                                                         #########################################                                 57.5%######################################################################## 100.0%
Status `/tmp/jl_lug3k8/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.1.0
  [79e6a3ab] Adapt v1.0.0
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.3.1
  [4c555306] ArrayLayouts v0.1.5
  [13072b0f] AxisAlgorithms v1.0.0
  [39de3d68] AxisArrays v0.4.1
  [6e4b80f9] BenchmarkTools v0.4.3
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.13.1
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.2.0
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.1.1
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.1.0
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.8
  [8197267c] IntervalSets v0.3.2
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5ab0869b] KernelDensity v0.5.1
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.1
  [c7f686f2] MCMCChains v1.0.2
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.3
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v1.0.2
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [429524aa] Optim v0.20.1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.3
  [85a6dd25] PositiveFactorizations v0.2.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [c84ed2f1] Ratios v0.3.1
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v2.0.4
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.0
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [992d4aef] Showoff v0.3.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.9
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [efce3f68] WoodburyMatrices v0.5.0
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.155357294
│   t_steps = 0.00780448
└   t_step / t_steps = 19.906168508343928
Sampling  0%|                               |  ETA: 5:44:19[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               2.8253937534394284e-5
  log_density:                   -10.007168914405366
  hamiltonian_energy:            16.828005154540236
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  10.474277728336087
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▋                            |  ETA: 0:00:29[K
  iterations:                    1020
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -19.047911578104312
  hamiltonian_energy:            27.119502319297403
  hamiltonian_energy_error:      -0.04132696497617161
  max_hamiltonian_energy_error:  -0.13603969363210666
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.3731566952256219
  nom_step_size:                 0.3731566952256219
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9483852699775596, 1.0472 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▎                           |  ETA: 0:00:24[K
  iterations:                    1250
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8975857809206458
  log_density:                   -12.499354576691113
  hamiltonian_energy:            13.41416845839336
  hamiltonian_energy_error:      0.14664369312994552
  max_hamiltonian_energy_error:  0.1873473091998168
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6467183469122345
  nom_step_size:                 0.6467183469122345
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9483852699775596, 1.0472 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▊                           |  ETA: 0:00:21[K
  iterations:                    1450
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9083502268031719
  log_density:                   -18.11604016583677
  hamiltonian_energy:            25.248577019075025
  hamiltonian_energy_error:      0.09787372522124471
  max_hamiltonian_energy_error:  0.20165115970742775
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7034826519528017
  nom_step_size:                 0.7034826519528017
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9483852699775596, 1.0472 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▌                          |  ETA: 0:00:18[K
  iterations:                    1730
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.9325911039718421
  log_density:                   -13.072216066467623
  hamiltonian_energy:            17.413015094507656
  hamiltonian_energy_error:      -0.07048833756060802
  max_hamiltonian_energy_error:  -0.4551158191733329
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8132523218200662
  nom_step_size:                 0.8132523218200662
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9483852699775596, 1.0472 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████                          |  ETA: 0:00:16[K
  iterations:                    1938
  n_steps:                       19
  is_accept:                     true
  acceptance_rate:               0.7117547730007772
  log_density:                   -17.108087574223045
  hamiltonian_energy:            23.43342377335415
  hamiltonian_energy_error:      0.4114851149856733
  max_hamiltonian_energy_error:  0.7416182009378289
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8083262635153567
  nom_step_size:                 0.8083262635153567
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9483852699775596, 1.0472 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|██████                         |  ETA: 0:00:13[K
  iterations:                    2315
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8975845596918368
  log_density:                   -11.968077573493236
  hamiltonian_energy:            17.41766498240382
  hamiltonian_energy_error:      -0.1871775796204247
  max_hamiltonian_energy_error:  0.28079689252934514
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▊                        |  ETA: 0:00:12[K
  iterations:                    2625
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.904387553872964
  log_density:                   -13.43998576810635
  hamiltonian_energy:            19.786606767203583
  hamiltonian_energy_error:      -0.05175341859691329
  max_hamiltonian_energy_error:  0.27794870120521864
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▊                       |  ETA: 0:00:10[K
  iterations:                    3012
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9822132263180858
  log_density:                   -15.669581894266965
  hamiltonian_energy:            20.48990600410512
  hamiltonian_energy_error:      -0.08612165397638805
  max_hamiltonian_energy_error:  -0.3294042499947025
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▋                      |  ETA: 0:00:09[K
  iterations:                    3327
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7672465267914163
  log_density:                   -16.27651130856127
  hamiltonian_energy:            18.788918342659883
  hamiltonian_energy_error:      0.530632289330363
  max_hamiltonian_energy_error:  0.5715808718318449
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▋                     |  ETA: 0:00:08[K
  iterations:                    3731
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6887358122817798
  log_density:                   -18.4141692302297
  hamiltonian_energy:            21.147187520635555
  hamiltonian_energy_error:      0.7246411711962217
  max_hamiltonian_energy_error:  0.7246411711962217
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▌                    |  ETA: 0:00:07[K
  iterations:                    4047
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.3368393887417544
  log_density:                   -20.090512377547558
  hamiltonian_energy:            31.523839243555262
  hamiltonian_energy_error:      0.7117940127795492
  max_hamiltonian_energy_error:  1.7407555193544972
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▌                   |  ETA: 0:00:07[K
  iterations:                    4448
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8820317529685556
  log_density:                   -12.153038059316396
  hamiltonian_energy:            12.901363443047611
  hamiltonian_energy_error:      0.2534010048161264
  max_hamiltonian_energy_error:  0.2534010048161264
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▎                  |  ETA: 0:00:06[K
  iterations:                    4762
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6982071376181936
  log_density:                   -17.026414592657506
  hamiltonian_energy:            22.980518083944208
  hamiltonian_energy_error:      0.466383652927032
  max_hamiltonian_energy_error:  0.6431082669068715
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▍                 |  ETA: 0:00:05[K
  iterations:                    5163
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9288201056562582
  log_density:                   -13.547587232865153
  hamiltonian_energy:            18.572763429905006
  hamiltonian_energy_error:      -0.09632727065960722
  max_hamiltonian_energy_error:  0.22888212190331458
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 46%|██████████████▏                |  ETA: 0:00:05[K
  iterations:                    5482
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9635329952132743
  log_density:                   -12.853379960879076
  hamiltonian_energy:            21.177123601280407
  hamiltonian_energy_error:      -0.5726587225768967
  max_hamiltonian_energy_error:  -0.5726587225768967
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▎               |  ETA: 0:00:04[K
  iterations:                    5884
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9376022219935243
  log_density:                   -16.00545237854752
  hamiltonian_energy:            19.227694881180227
  hamiltonian_energy_error:      0.24079917820797192
  max_hamiltonian_energy_error:  0.24079917820797192
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████               |  ETA: 0:00:04[K
  iterations:                    6205
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.944431615552922
  log_density:                   -11.976439123609255
  hamiltonian_energy:            15.799673932617377
  hamiltonian_energy_error:      -0.07778883686793137
  max_hamiltonian_energy_error:  0.1707595620610114
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████▏             |  ETA: 0:00:04[K
  iterations:                    6624
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.889642211458305
  hamiltonian_energy:            23.509625000031583
  hamiltonian_energy_error:      -0.24084166099241244
  max_hamiltonian_energy_error:  -0.47786179835167886
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|██████████████████             |  ETA: 0:00:03[K
  iterations:                    6957
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8583590391370411
  log_density:                   -12.610378934147352
  hamiltonian_energy:            16.65764602232239
  hamiltonian_energy_error:      0.10766706807171289
  max_hamiltonian_energy_error:  0.28220533253335844
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▏           |  ETA: 0:00:03[K
  iterations:                    7381
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7229433260609088
  log_density:                   -16.70611652797451
  hamiltonian_energy:            19.87923598248375
  hamiltonian_energy_error:      0.5370750714794426
  max_hamiltonian_energy_error:  0.5709173553173272
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|████████████████████           |  ETA: 0:00:03[K
  iterations:                    7721
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8737305626609336
  log_density:                   -13.92333131332303
  hamiltonian_energy:            19.820152450888912
  hamiltonian_energy_error:      -0.01284612321194345
  max_hamiltonian_energy_error:  0.25685984151165187
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████          |  ETA: 0:00:02[K
  iterations:                    8139
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8221638549575673
  log_density:                   -19.145173476657376
  hamiltonian_energy:            21.262740502820016
  hamiltonian_energy_error:      0.5088407816108074
  max_hamiltonian_energy_error:  0.5088407816108074
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|█████████████████████▉         |  ETA: 0:00:02[K
  iterations:                    8481
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8913891399247078
  log_density:                   -14.476809677290868
  hamiltonian_energy:            20.32674355654595
  hamiltonian_energy_error:      0.013747932687884656
  max_hamiltonian_energy_error:  0.27339740355640885
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 74%|███████████████████████        |  ETA: 0:00:02[K
  iterations:                    8894
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.977713040790902
  log_density:                   -11.674190476253546
  hamiltonian_energy:            18.31739562746909
  hamiltonian_energy_error:      -0.4534396389289057
  max_hamiltonian_energy_error:  -0.4534396389289057
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▋       |  ETA: 0:00:02[K
  iterations:                    9162
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6907976003355535
  log_density:                   -12.81693722313664
  hamiltonian_energy:            17.67488611710415
  hamiltonian_energy_error:      0.2686978905154227
  max_hamiltonian_energy_error:  0.7583103938353659
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▌      |  ETA: 0:00:01[K
  iterations:                    9461
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7572457939535726
  log_density:                   -15.005557783484498
  hamiltonian_energy:            21.532762080479326
  hamiltonian_energy_error:      0.12753868145343006
  max_hamiltonian_energy_error:  0.5539552402558137
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 81%|█████████████████████████▏     |  ETA: 0:00:01[K
  iterations:                    9720
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.44558237234424314
  log_density:                   -20.607476059815397
  hamiltonian_energy:            23.014993958109994
  hamiltonian_energy_error:      1.2373327572320534
  max_hamiltonian_energy_error:  1.2373327572320534
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▊     |  ETA: 0:00:01[K
  iterations:                    9973
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7357021391327854
  log_density:                   -11.728729316899969
  hamiltonian_energy:            22.516500712391565
  hamiltonian_energy_error:      -0.385422250285405
  max_hamiltonian_energy_error:  0.8571461173063746
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▋    |  ETA: 0:00:01[K
  iterations:                    10285
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8820040658867617
  log_density:                   -15.922117556919144
  hamiltonian_energy:            19.301082785304754
  hamiltonian_energy_error:      0.20975926698082148
  max_hamiltonian_energy_error:  0.2834910492628495
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:01[K
  iterations:                    10555
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7334426037988305
  log_density:                   -18.217864229390024
  hamiltonian_energy:            31.341264026815654
  hamiltonian_energy_error:      -0.012613352909859543
  max_hamiltonian_energy_error:  0.6922027589298487
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▏  |  ETA: 0:00:01[K
  iterations:                    10872
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9209857368831073
  log_density:                   -22.774425551070557
  hamiltonian_energy:            31.116423206930364
  hamiltonian_energy_error:      0.13433201534003913
  max_hamiltonian_energy_error:  -0.5902795679849255
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|█████████████████████████████  |  ETA: 0:00:00[K
  iterations:                    11202
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8138457416562649
  log_density:                   -11.476557535633749
  hamiltonian_energy:            16.274058613217186
  hamiltonian_energy_error:      0.02591158151361128
  max_hamiltonian_energy_error:  0.3801707986915588
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▋ |  ETA: 0:00:00[K
  iterations:                    11480
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9160075418856104
  log_density:                   -11.526177551995303
  hamiltonian_energy:            16.957784002852634
  hamiltonian_energy_error:      -0.26715039169653565
  max_hamiltonian_energy_error:  0.3177956645820821
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 99%|██████████████████████████████▊|  ETA: 0:00:00[K
  iterations:                    11890
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8339452886627658
  log_density:                   -16.179159054972484
  hamiltonian_energy:            19.051499538179048
  hamiltonian_energy_error:      0.39155018380474615
  max_hamiltonian_energy_error:  0.39155018380474615
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9898546558401246
  log_density:                   -18.04868204417917
  hamiltonian_energy:            24.41340841572235
  hamiltonian_energy_error:      -0.1288376446484989
  max_hamiltonian_energy_error:  -0.5270149486945925
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7108461534038013
  nom_step_size:                 0.7108461534038013
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9243897456808543, 0.9350 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.227045269 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9243897456808543, 0.9350 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.711), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0814231891148083
└   average_acceptance_rate = 0.8652006513114138
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.014436013 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢄⡀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⡀⠀⠀⡜⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠑⢄⠀⠀⠀⡸⠱⡀⢰⠁⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠣⡀⢰⠁⠀⠘⠇⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠒⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠑⠇⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⡀⠀⠀⠀⠀⠀⢠⢃⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⡠⠔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡇⠀⠀⠀⠀⢀⠇⡜⢱⠀⠀⠀⠀⠀⡀⠀⠀⣀⠤⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣸⠀⠀⠀⢀⠎⢰⠁⠀⢣⠀⢀⡠⠊⠈⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠱⡇⠀⢀⠎⢀⡇⠀⠀⠈⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⢹⡴⠓⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
