Julia Version 1.5.0-DEV.204
Commit 529b3655ad (2020-01-30 07:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_oCVoVX/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.07035470262793848 -0.16403483329938023; 0.07035470262793848 0.0 0.03628661819029096; 0.16403483329938023 -0.03628661819029096 0.0])
dAA = so3([0.0 -0.045259417439442846 -0.1032396463942603; 0.045259417439442846 0.0 0.3640728397630525; 0.1032396463942603 -0.3640728397630525 0.0])
dAA = so3([0.0 0.10553773008824702 0.10866839497248058; -0.10553773008824702 0.0 0.048013788273303465; -0.10866839497248058 -0.048013788273303465 0.0])
dAA = Quaternion(0.9982739362234603, [-0.05375333538715642, -0.020429251266175737, 0.011932010910910442])
dAA = SO3([0.9903520691904926 0.13228546287434523 0.04127148364464352; -0.13292266089735583 0.9910400322405071 0.013085133423138169; -0.03917071955014867 -0.018444804386466278 0.9990622823032949])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9632058146366321 0.012048183278998707 -0.2684946925543548; 0.20562575479743336 0.6102568659030774 0.7650520286765726; 0.17306821664929595 -0.7921119863364203 0.5853255448790896]), [-0.3628661819029096, -1.6403483329938022, 0.7035470262793848])
xj = SE3(SO3([0.9930516185946707 -0.050912925496236175 -0.1060959793013818; 0.07741830442479326 0.9616402969043856 0.26316220380144895; 0.08862781136017386 -0.2695474232617704 0.9589000457119843]), [-0.4801378827330346, 1.0866839497248058, -1.05537730088247])
Dx = SE3(SO3([0.9877709478048271 0.1020482941701284 0.11787578347447178; -0.010993631973017295 0.7997459303090712 -0.6002379419947729; -0.15552393619245705 0.5916017178905464 0.7910876769740252]), [0.14337739083611262, 3.056042305726959, 1.088265069222988])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
