Julia Version 1.5.0-DEV.45
Commit eb5410a703 (2020-01-10 02:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed InvertedIndices ───────────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Tables ────────────────────── v0.2.11
 Installed KCenters ──────────────────── v0.1.8
 Installed Compat ────────────────────── v3.2.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed TableTraits ───────────────── v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed LearnBase ─────────────────── v0.2.2
 Installed CategoricalArrays ─────────── v0.7.6
 Installed DataAPI ───────────────────── v1.1.0
 Installed OrderedCollections ────────── v1.1.0
 Installed JSON ──────────────────────── v0.21.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Reexport ──────────────────── v0.2.0
 Installed DataStructures ────────────── v0.17.7
 Installed PooledArrays ──────────────── v0.5.3
 Installed Parsers ───────────────────── v0.3.10
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed MLDataUtils ───────────────── v0.5.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed DataFrames ────────────────── v0.20.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.6
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.7
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_vyDg1h/Project.toml`
 [no changes]
  Updating `/tmp/jl_vyDg1h/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_vyDg1h/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 163.74999999999994
[ Info: 70.17999999999998
[ Info: 43.209999999999994
[ Info: 26.78
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999839687118
[ Info: 76.00000116633946
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.350264362312732
inertia(cdnet.distances) = 23.77649147774957
inertia(crand.distances) = 21.582545128545483
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7781848359973369,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":7.7421875,"distances_sum":1818.5509935045116}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":5.609375,"distances_sum":1009.3524502739274}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8515089077589086,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.203125,"distances_sum":2193.4719953718813}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8515089077589086,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.203125,"distances_sum":2193.4719953718813}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9353937728937739,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.7890625,"distances_sum":2634.4734497591244}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8795480561105569,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.3671875,"distances_sum":2355.5940730660673}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9353937728937739,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.7890625,"distances_sum":2634.4734497591244}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9611263736263741,"seconds":9.199604392051697e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.9296875,"distances_sum":2820.4138184754265}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9479827464202468,"seconds":6.530433893203735e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.828125,"distances_sum":2736.912865947055}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9734375000000005,"seconds":9.153038263320923e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.9375,"distances_sum":2902.4164479155097}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9530048076923083,"seconds":6.346032023429871e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.859375,"distances_sum":2755.9508600603726}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9612980769230773,"seconds":8.419156074523926e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.8984375,"distances_sum":2804.0678243667203}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9635073260073264,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.9140625,"distances_sum":2852.0222530686415}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.937826236263737,"seconds":6.750226020812988e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.7890625,"distances_sum":2677.2314026078107}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9415293040293046,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.8359375,"distances_sum":2676.781689291501}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9734375000000005,"seconds":9.153038263320923e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.9375,"distances_sum":2902.4164479155097}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9734375000000005,"seconds":9.153038263320923e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.9375,"distances_sum":2902.4164479155097}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8685897435897445,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.453125,"distances_sum":1929.6853527535113}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5810546875, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5810546875,"f1":null,"seconds":4.190951585769653e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.4140625,"distances_sum":1391.284070546649}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8560678904428914,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.375,"distances_sum":1864.6823639799045}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8685897435897445,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.453125,"distances_sum":1929.6853527535113}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9564045329670335,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8515625,"distances_sum":2524.091814726045}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9050022893772901,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.796875,"distances_sum":2108.8613247045128}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9156395687645693,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7890625,"distances_sum":2195.495769238794}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9564045329670335,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8515625,"distances_sum":2524.091814726045}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9719322344322348,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.96875,"distances_sum":2584.655902466511}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9581501831501836,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.890625,"distances_sum":2492.8703720539393}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9572058150183155,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.875,"distances_sum":2499.1423734410723}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9719322344322348,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.96875,"distances_sum":2584.655902466511}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9719322344322348,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.96875,"distances_sum":2584.655902466511}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.537109375,"f1":0.6825792263292271,"seconds":4.423782229423523e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.1796875,"distances_sum":1329.2365081534624}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.537109375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.537109375,"f1":0.6825792263292271,"seconds":4.423782229423523e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.1796875,"distances_sum":1329.2365081534624}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.927321116383617,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.828125,"distances_sum":2282.79019506465}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9307036713286718,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8203125,"distances_sum":2345.8605432250242}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9307036713286718,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8203125,"distances_sum":2345.8605432250242}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9658341658341659,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.921875,"distances_sum":2571.2837934007766}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9627664002664008,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.953125,"distances_sum":2523.951636199416}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.973643543956044,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9921875,"distances_sum":2605.769732908613}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9351679570429575,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8359375,"distances_sum":2363.0669602883268}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9462886072261076,"seconds":6.398186087608337e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8984375,"distances_sum":2431.1280671538}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.973643543956044,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9921875,"distances_sum":2605.769732908613}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.973643543956044,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9921875,"distances_sum":2605.769732908613}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.855406052281053,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.3984375,"distances_sum":1936.2250470167028}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.855406052281053,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.3984375,"distances_sum":1936.2250470167028}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.961744505494506,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.9140625,"distances_sum":2607.615979988025}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.961744505494506,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.9140625,"distances_sum":2607.615979988025}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9686412545787552,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.953125,"distances_sum":2644.5617225195133}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9709478021978026,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.953125,"distances_sum":2677.694324405409}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9709478021978026,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.953125,"distances_sum":2677.694324405409}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9709478021978026,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.953125,"distances_sum":2677.694324405409}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4873046875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.4873046875,"f1":null,"seconds":3.98978590965271e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.3125,"distances_sum":1145.086464111397}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.838442286879788,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.03125,"distances_sum":1774.7873742608408}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.838442286879788,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.03125,"distances_sum":1774.7873742608408}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8880194458319467,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.3828125,"distances_sum":2038.1077497632964}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9371201714951721,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6484375,"distances_sum":2327.3282051144474}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9316163003663008,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.671875,"distances_sum":2272.010977052209}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8488742160617169,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.2109375,"distances_sum":1800.2948448566701}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9371201714951721,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6484375,"distances_sum":2327.3282051144474}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9479458041958047,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6796875,"distances_sum":2409.598727194805}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9621914543789547,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8046875,"distances_sum":2492.5120868298873}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9480883699633703,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7265625,"distances_sum":2399.4813816498972}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9610691391941398,"seconds":6.496906280517578e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.796875,"distances_sum":2477.6946351007086}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9621914543789547,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8046875,"distances_sum":2492.5120868298873}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9621914543789547,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8046875,"distances_sum":2492.5120868298873}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4453125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4453125,"f1":null,"seconds":4.108995199203491e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":6.5546875,"distances_sum":1010.3539098297948}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5673828125,"f1":0.7089727980352987,"seconds":4.4405460357666016e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":6.8515625,"distances_sum":1313.785740326701}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8793014277389286,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.4296875,"distances_sum":1981.7762465974342}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7939453125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7939453125,"f1":0.8793014277389286,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.4296875,"distances_sum":1981.7762465974342}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9542696886446893,"seconds":6.366521120071411e-5,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.8515625,"distances_sum":2501.9023508061764}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9542696886446893,"seconds":6.366521120071411e-5,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.8515625,"distances_sum":2501.9023508061764}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9649954212454216,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.9296875,"distances_sum":2562.4540077063953}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9568166208791214,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.84375,"distances_sum":2542.611665301714}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9649954212454216,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.9296875,"distances_sum":2562.4540077063953}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9649954212454216,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.9296875,"distances_sum":2562.4540077063953}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8786515567765576,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.3984375,"distances_sum":2008.9601144181504}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.349609375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.349609375,"f1":null,"seconds":3.3639371395111084e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.015625,"distances_sum":811.1394331945046}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7138671875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7138671875,"f1":0.8226055194805204,"seconds":4.738569259643555e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.0703125,"distances_sum":1738.152318192163}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.791015625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.791015625,"f1":0.8786515567765576,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.3984375,"distances_sum":2008.9601144181504}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8759428071928079,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.4375,"distances_sum":2032.5374644278152}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.960531135531136,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8515625,"distances_sum":2571.138914475727}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9345295329670334,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.7265625,"distances_sum":2395.6682134096272}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.960531135531136,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8515625,"distances_sum":2571.138914475727}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.975280448717949,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.921875,"distances_sum":2697.367105037365}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9685668498168503,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.890625,"distances_sum":2647.935001339795}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9761561355311359,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9375,"distances_sum":2692.9617473789876}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.963266941391942,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8515625,"distances_sum":2603.319714476701}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9761561355311359,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9375,"distances_sum":2692.9617473789876}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9761561355311359,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9375,"distances_sum":2692.9617473789876}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8608063811188819,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5625,"distances_sum":1903.089223610354}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8608063811188819,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5625,"distances_sum":1903.089223610354}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9280079295704303,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.84375,"distances_sum":2361.131362322273}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8622283966033975,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.53125,"distances_sum":1924.224478418155}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552712912087918,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.90625,"distances_sum":2537.5131097371845}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9552712912087918,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.90625,"distances_sum":2537.5131097371845}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.964589056776557,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9609375,"distances_sum":2604.6057667240625}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.961292353479854,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.953125,"distances_sum":2552.630409785868}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588026556776562,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9296875,"distances_sum":2548.3889789330165}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9569997710622716,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9296875,"distances_sum":2546.8880546107466}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9375,"f1":0.964589056776557,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9609375,"distances_sum":2604.6057667240625}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9375,"f1":0.964589056776557,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9609375,"distances_sum":2604.6057667240625}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9870349702380952,"recall":0.7685546875,"f1":0.8562631379037636,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3125,"distances_sum":1674.2135972019503}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":0.9870349702380952,"recall":0.7685546875,"f1":0.8562631379037636,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3125,"distances_sum":1674.2135972019503}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":2,"bsize":9}, perf: {"precision":0.9872767857142858,"recall":0.904296875,"f1":0.9396150724275725,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8046875,"distances_sum":2085.4960280022174}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":0.9872767857142858,"recall":0.904296875,"f1":0.9396150724275725,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8046875,"distances_sum":2085.4960280022174}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":11}, perf: {"precision":0.981352306547619,"recall":0.9306640625,"f1":0.9535077552655681,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9296875,"distances_sum":2175.6416843332013}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":13}, perf: {"precision":0.9857700892857143,"recall":0.953125,"f1":0.9678385416666667,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":2257.1439051957864}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":11}, perf: {"precision":0.9831194196428572,"recall":0.939453125,"f1":0.9590695112179489,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":2229.2007131427554}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":13},"perf":{"precision":0.9857700892857143,"recall":0.953125,"f1":0.9678385416666667,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":2257.1439051957864}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":13},"perf":{"precision":0.9857700892857143,"recall":0.953125,"f1":0.9678385416666667,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":2257.1439051957864}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8415157758907768,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.9375,"distances_sum":1416.0456704217872}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.26953125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.26953125,"f1":null,"seconds":3.1031668186187744e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.1171875,"distances_sum":504.7170543070395}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7787342865467873,"seconds":4.3157488107681274e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.609375,"distances_sum":1234.423551276429}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73828125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.73828125,"f1":0.8415157758907768,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.9375,"distances_sum":1416.0456704217872}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8425891816516825,"seconds":4.652887582778931e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.96875,"distances_sum":1445.7563790505094}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9460279304029311,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.65625,"distances_sum":1876.3690944356906}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8491482475857483,"seconds":4.7888606786727905e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.0078125,"distances_sum":1406.9833323235862}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9460279304029311,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.65625,"distances_sum":1876.3690944356906}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9701465201465205,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.875,"distances_sum":2013.3637548382712}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.951699862637363,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.71875,"distances_sum":1942.8161120553232}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9701465201465205,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.875,"distances_sum":2013.3637548382712}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9701465201465205,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.875,"distances_sum":2013.3637548382712}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.2838433980941772e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.890625,"distances_sum":670.7694408038467}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3896484375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.2838433980941772e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.890625,"distances_sum":670.7694408038467}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8643762487512495,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.3671875,"distances_sum":1593.9144237286516}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.7689503205128212,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.421875,"distances_sum":1204.7219885860834}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8657545579420586,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.0390625,"distances_sum":1520.8191294464118}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6220703125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6220703125,"f1":0.7519150987900995,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.375,"distances_sum":1166.085309098276}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.694890005827506,"seconds":4.330649971961975e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.984375,"distances_sum":1024.2378707082864}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.6962417790542796,"seconds":4.492700099945068e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.921875,"distances_sum":1006.956238093346}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.645196557044983e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.0,"distances_sum":709.6932213504047}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8643762487512495,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.3671875,"distances_sum":1593.9144237286516}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9409855769230774,"seconds":6.545335054397583e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.6796875,"distances_sum":1865.8237890838766}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9229712995338002,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.609375,"distances_sum":1801.9289380675532}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9134308399933406,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.484375,"distances_sum":1750.207387641536}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9461054570429575,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.71875,"distances_sum":1927.5881857877189}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9306896228771234,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.6015625,"distances_sum":1806.1983713400653}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9487179487179492,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7890625,"distances_sum":1884.5107948326745}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9487179487179492,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7890625,"distances_sum":1884.5107948326745}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9072265625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9487179487179492,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7890625,"distances_sum":1884.5107948326745}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.375,"f1":null,"seconds":8.429400622844696e-5,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.671875,"distances_sum":657.5525077239977}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.375,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.375,"f1":null,"seconds":8.429400622844696e-5,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.671875,"distances_sum":657.5525077239977}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8589858058608068,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.9765625,"distances_sum":1402.8977639530615}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8634428071928079,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.0,"distances_sum":1450.0830283688697}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8634428071928079,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.0,"distances_sum":1450.0830283688697}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9457818223443231,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7421875,"distances_sum":1786.1680754607355}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9457818223443231,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7421875,"distances_sum":1786.1680754607355}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9457818223443231,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7421875,"distances_sum":1786.1680754607355}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.265625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.265625,"f1":null,"seconds":3.2633543014526367e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.21875,"distances_sum":467.6104193713768}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2529296875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2529296875,"f1":null,"seconds":3.255903720855713e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.296875,"distances_sum":446.7574184386727}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.265625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.265625,"f1":null,"seconds":3.2633543014526367e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.21875,"distances_sum":467.6104193713768}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7952271686646695,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.8203125,"distances_sum":1215.948405589057}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.86876560939061,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.9921875,"distances_sum":1540.5579680638004}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.86876560939061,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.9921875,"distances_sum":1540.5579680638004}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9464915293040298,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.75,"distances_sum":1856.7263116573793}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9274496336996343,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7109375,"distances_sum":1731.1634116943078}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9341689560439563,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.6640625,"distances_sum":1770.788996694958}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9464915293040298,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.75,"distances_sum":1856.7263116573793}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9464915293040298,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.75,"distances_sum":1856.7263116573793}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2548828125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2548828125,"f1":null,"seconds":3.0454248189926147e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.8671875,"distances_sum":470.18347395671026}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2548828125,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.2548828125,"f1":null,"seconds":3.0454248189926147e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.8671875,"distances_sum":470.18347395671026}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2548828125,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.2548828125,"f1":null,"seconds":3.0454248189926147e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.8671875,"distances_sum":470.18347395671026}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.689534597347098,"seconds":3.993511199951172e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.2109375,"distances_sum":1047.701330092011}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5498046875,"f1":0.6959445068820076,"seconds":4.032626748085022e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.21875,"distances_sum":1015.4596785833851}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.427734375,"f1":null,"seconds":3.4570693969726562e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.984375,"distances_sum":748.4443169322267}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7772413350538359,"seconds":4.597008228302002e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.7109375,"distances_sum":1255.0245066795073}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6513671875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6513671875,"f1":0.7772413350538359,"seconds":4.597008228302002e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.7109375,"distances_sum":1255.0245066795073}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9444081959706964,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.796875,"distances_sum":1858.5643449351307}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9523523351648355,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.90625,"distances_sum":1913.841433336491}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8465955919080927,"seconds":4.842877388000488e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.1796875,"distances_sum":1412.1163208349192}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9021952006327015,"seconds":5.109235644340515e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6328125,"distances_sum":1656.0477817186395}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7797124750249756,"seconds":4.390254616737366e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.65625,"distances_sum":1223.42576937879}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7828218656343665,"seconds":4.237517714500427e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.7734375,"distances_sum":1204.1723745912743}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9523523351648355,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.90625,"distances_sum":1913.841433336491}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764880952380957,"seconds":6.804242730140686e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2053.3808024493183}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764880952380957,"seconds":6.804242730140686e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2053.3808024493183}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764880952380957,"seconds":6.804242730140686e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2053.3808024493183}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2744140625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2744140625,"f1":null,"seconds":3.155320882797241e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":6.1640625,"distances_sum":463.9335484184324}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.699283008658009,"seconds":3.8798898458480835e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.3515625,"distances_sum":991.9111365629553}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.26171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.26171875,"f1":null,"seconds":2.983957529067993e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":6.109375,"distances_sum":456.75916126345226}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5595703125,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5595703125,"f1":0.699283008658009,"seconds":3.8798898458480835e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.3515625,"distances_sum":991.9111365629553}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8955185439560448,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.546875,"distances_sum":1509.313917812817}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.634765625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.634765625,"f1":0.7638084138084146,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.6015625,"distances_sum":1122.8240425985846}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8663466741591749,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.171875,"distances_sum":1394.7918694708437}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8691480394605401,"seconds":4.9192458391189575e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.234375,"distances_sum":1428.5501594427692}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8203125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8203125,"f1":0.8955185439560448,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.546875,"distances_sum":1509.313917812817}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9512763278388284,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.796875,"distances_sum":1777.5833848657367}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9512763278388284,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.796875,"distances_sum":1777.5833848657367}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9512763278388284,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.796875,"distances_sum":1777.5833848657367}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.412109375,"f1":null,"seconds":3.762543201446533e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.0859375,"distances_sum":760.4714496364271}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.412109375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.412109375,"f1":null,"seconds":3.762543201446533e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.0859375,"distances_sum":760.4714496364271}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7907124125874134,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.65625,"distances_sum":1293.9221241832422}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66796875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.66796875,"f1":0.7907124125874134,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.65625,"distances_sum":1293.9221241832422}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9543383699633705,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8203125,"distances_sum":1960.9874549526062}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8977111430236437,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.53125,"distances_sum":1630.3327260985736}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9543383699633705,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8203125,"distances_sum":1960.9874549526062}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9543383699633705,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8203125,"distances_sum":1960.9874549526062}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8586314726939734,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.3359375,"distances_sum":1467.0318735725193}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.259765625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.259765625,"f1":null,"seconds":3.6973506212234497e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.40625,"distances_sum":464.55959986636384}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8586314726939734,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.3359375,"distances_sum":1467.0318735725193}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9550511988011994,"seconds":6.211921572685242e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.90625,"distances_sum":1858.2253451181614}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.965905448717949,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.921875,"distances_sum":1916.6300149019282}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8669138153513163,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.34375,"distances_sum":1443.6649936468318}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.965905448717949,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.921875,"distances_sum":1916.6300149019282}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9798592032967035,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9765625,"distances_sum":2000.0355234331887}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.967633928571429,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9609375,"distances_sum":1917.1752875548268}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9798592032967035,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9765625,"distances_sum":2000.0355234331887}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9798592032967035,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9765625,"distances_sum":2000.0355234331887}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8088614510489518,"seconds":4.621222615242004e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.0234375,"distances_sum":1387.9074780488654}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5380859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5380859375,"f1":null,"seconds":4.0512531995773315e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.2109375,"distances_sum":1045.1225138052557}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.693359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.693359375,"f1":0.8088614510489518,"seconds":4.621222615242004e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.0234375,"distances_sum":1387.9074780488654}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9422905219780224,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.71875,"distances_sum":1936.50568517557}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8833765193140202,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.515625,"distances_sum":1629.88878820071}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9201782592407598,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6875,"distances_sum":1770.3601126294757}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8944971694971704,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.53125,"distances_sum":1680.1628548653964}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8561823593073601,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.1328125,"distances_sum":1525.3979919020635}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9422905219780224,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.71875,"distances_sum":1936.50568517557}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9694997710622714,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.921875,"distances_sum":2084.3223965577763}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9621852106227111,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.84375,"distances_sum":2053.507629200599}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9558665293040298,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.796875,"distances_sum":2026.8150247009976}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9481856684981688,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8359375,"distances_sum":1956.3262978045009}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605711996337003,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8359375,"distances_sum":2051.6162407507622}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9694997710622714,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.921875,"distances_sum":2084.3223965577763}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9694997710622714,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.921875,"distances_sum":2084.3223965577763}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.283203125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.283203125,"f1":null,"seconds":3.078952431678772e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.3203125,"distances_sum":523.1891079858626}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7804062257187265,"seconds":4.325062036514282e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.6796875,"distances_sum":1240.455723413826}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3974609375, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.3974609375,"f1":0.551786408036408,"seconds":3.259629011154175e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.8671875,"distances_sum":669.650072489534}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6572265625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6572265625,"f1":0.7804062257187265,"seconds":4.325062036514282e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.6796875,"distances_sum":1240.455723413826}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9457303113553119,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.671875,"distances_sum":1883.0272777548764}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8612070221445228,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.0546875,"distances_sum":1486.8316813739443}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8572734557109564,"seconds":4.669651389122009e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.046875,"distances_sum":1467.065954187935}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9457303113553119,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.671875,"distances_sum":1883.0272777548764}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9543956043956051,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7890625,"distances_sum":1910.1190160824965}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9543956043956051,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7890625,"distances_sum":1910.1190160824965}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9543956043956051,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7890625,"distances_sum":1910.1190160824965}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.224609375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.224609375,"f1":null,"seconds":3.3639371395111084e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.484375,"distances_sum":477.10183338526963}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.224609375,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.224609375,"f1":null,"seconds":3.3639371395111084e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.484375,"distances_sum":477.10183338526963}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.544921875,"f1":0.6892914377289384,"seconds":4.192814230918884e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.984375,"distances_sum":1192.3033624395428}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.6872117465867471,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.0234375,"distances_sum":1203.8043857159998}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.419921875,"f1":null,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.9140625,"distances_sum":861.6816202953079}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.544921875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.544921875,"f1":0.6892914377289384,"seconds":4.192814230918884e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.984375,"distances_sum":1192.3033624395428}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.63671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.63671875,"f1":null,"seconds":4.796311259269714e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.4375,"distances_sum":1496.7947807863852}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8938192016317025,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.71875,"distances_sum":2024.633737421967}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8881758866133875,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7109375,"distances_sum":1958.6808793538498}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9042384698634706,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.625,"distances_sum":2085.8557802004984}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8898674242424252,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6796875,"distances_sum":1976.3359944599051}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7853656759906767,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.515625,"distances_sum":1539.9961181449567}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8359375,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8359375,"f1":0.9042384698634706,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.625,"distances_sum":2085.8557802004984}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8359375,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8359375,"f1":0.9042384698634706,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.625,"distances_sum":2085.8557802004984}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4189453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4189453125,"f1":null,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.984375,"distances_sum":897.4164105671884}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.6983502608502613,"seconds":4.177913069725037e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.296875,"distances_sum":1133.5970948231238}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.552734375,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.552734375,"f1":0.6983502608502613,"seconds":4.177913069725037e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.296875,"distances_sum":1133.5970948231238}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":5,"bsize":4}, perf: {"precision":null,"recall":0.6533203125,"f1":null,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.703125,"distances_sum":1472.7223580232494}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9405620421245425,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7421875,"distances_sum":2341.0119975007888}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9405620421245425,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7421875,"distances_sum":2341.0119975007888}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9495993589743595,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8359375,"distances_sum":2365.818673256625}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.953519917582418,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8984375,"distances_sum":2353.250105477904}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.953519917582418,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8984375,"distances_sum":2353.250105477904}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.953519917582418,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8984375,"distances_sum":2353.250105477904}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7216796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7216796875,"f1":0.8317115176490185,"seconds":4.695728421211243e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.9921875,"distances_sum":1732.522568844088}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2509765625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2509765625,"f1":null,"seconds":3.1441450119018555e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.09375,"distances_sum":620.7350383859504}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7216796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7216796875,"f1":0.8317115176490185,"seconds":4.695728421211243e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.9921875,"distances_sum":1732.522568844088}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.959809981684982,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9609375,"distances_sum":2480.5483018663676}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8390187937062945,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.03125,"distances_sum":1773.4562369938471}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8486523892773901,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.1015625,"distances_sum":1811.656387977008}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.959809981684982,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9609375,"distances_sum":2480.5483018663676}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9734775641025645,"seconds":7.096678018569946e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9921875,"distances_sum":2596.8209506776375}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9775698260073261,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9609375,"distances_sum":2650.3937099930295}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9733630952380957,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.96875,"distances_sum":2588.499655914585}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9775698260073261,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9609375,"distances_sum":2650.3937099930295}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9775698260073261,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9609375,"distances_sum":2650.3937099930295}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2333984375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.416091203689575e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.21875,"distances_sum":597.4438879652773}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2333984375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.416091203689575e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.21875,"distances_sum":597.4438879652773}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7848271520146526,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.2890625,"distances_sum":1621.6413027717213}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.66015625,"f1":0.7848271520146526,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.2890625,"distances_sum":1621.6413027717213}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8471044580419589,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.90625,"distances_sum":1897.389152959945}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.74609375,"f1":0.8471044580419589,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.90625,"distances_sum":1897.389152959945}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.953296703296704,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8203125,"distances_sum":2611.580900542989}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9487236721611726,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6796875,"distances_sum":2619.9113020747836}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9029569388944396,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.21875,"distances_sum":2206.4459174996136}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9359666375291379,"seconds":6.847083568572998e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7421875,"distances_sum":2495.9873674501177}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9291011072261077,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.765625,"distances_sum":2421.1037605031897}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.953296703296704,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8203125,"distances_sum":2611.580900542989}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.953296703296704,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8203125,"distances_sum":2611.580900542989}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4267578125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4267578125,"f1":null,"seconds":3.723427653312683e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":5.8515625,"distances_sum":937.6446833491837}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.8005822302697312,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.390625,"distances_sum":1542.3825011448278}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.677734375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.677734375,"f1":0.8005822302697312,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.390625,"distances_sum":1542.3825011448278}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9615041208791212,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8515625,"distances_sum":2518.720913811063}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9615041208791212,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8515625,"distances_sum":2518.720913811063}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.971560210622711,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.90625,"distances_sum":2556.4927043010575}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.971560210622711,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.90625,"distances_sum":2556.4927043010575}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.971560210622711,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.90625,"distances_sum":2556.4927043010575}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.38671875,"f1":null,"seconds":3.3956021070480347e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.8828125,"distances_sum":794.7066708876836}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8575320512820521,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.1953125,"distances_sum":1756.6854970646534}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8575320512820521,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.1953125,"distances_sum":1756.6854970646534}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9638965201465205,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.890625,"distances_sum":2359.023430782176}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9503434065934072,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6875,"distances_sum":2299.4222239695546}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9638965201465205,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.890625,"distances_sum":2359.023430782176}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.965647893772894,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.875,"distances_sum":2384.8621774465078}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8984375,"distances_sum":2415.8479472505833}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9726018772893776,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2413.5179853200166}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8984375,"distances_sum":2415.8479472505833}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8984375,"distances_sum":2415.8479472505833}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4296875,"f1":0.5798278110778111,"seconds":4.513189196586609e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.4609375,"distances_sum":929.970287165767}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4296875,"state":{"ssize":1,"bsize":2},"perf":{"precision":1.0,"recall":0.4296875,"f1":0.5798278110778111,"seconds":4.513189196586609e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.4609375,"distances_sum":929.970287165767}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9010905760905769,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.6015625,"distances_sum":2055.7764731705574}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.83203125,"f1":0.9010905760905769,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.6015625,"distances_sum":2055.7764731705574}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9621909340659345,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8828125,"distances_sum":2477.1898428055524}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.976339285714286,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.90625,"distances_sum":2590.101372977649}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.976339285714286,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.90625,"distances_sum":2590.101372977649}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.976339285714286,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.90625,"distances_sum":2590.101372977649}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3994140625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.3956021070480347e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":5.8046875,"distances_sum":871.9569944917334}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2138671875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2138671875,"f1":null,"seconds":2.903863787651062e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":5.59375,"distances_sum":446.1463503751735}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8610779845154853,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.9609375,"distances_sum":1811.9245717888175}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8610779845154853,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.9609375,"distances_sum":1811.9245717888175}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9071059149184159,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.3671875,"distances_sum":2101.1613966300006}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.88397487928738,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.1328125,"distances_sum":1986.6426075027803}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.904779075091576,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.3359375,"distances_sum":2044.7926320983063}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83984375,"state":{"ssize":9,"bsize":6},"perf":{"precision":1.0,"recall":0.83984375,"f1":0.9071059149184159,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.3671875,"distances_sum":2101.1613966300006}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604796245421251,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.78125,"distances_sum":2472.5928466241485}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9534455128205133,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7734375,"distances_sum":2417.0503087284305}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9549049908424914,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.78125,"distances_sum":2427.5734064302546}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9616472069597074,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8203125,"distances_sum":2456.3122678316954}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9417696886446894,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.6640625,"distances_sum":2344.7117662796554}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9616472069597074,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8203125,"distances_sum":2456.3122678316954}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9616472069597074,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8203125,"distances_sum":2456.3122678316954}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.8053840398788452e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":6.4609375,"distances_sum":524.4851369443392}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.593042492866516e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":6.6171875,"distances_sum":523.8828022991933}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7935715326340333,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":7.9296875,"distances_sum":1538.746460176915}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.837395417082918,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.15625,"distances_sum":1705.3353486199464}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.734375,"f1":0.837395417082918,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.15625,"distances_sum":1705.3353486199464}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9223729395604402,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.6171875,"distances_sum":2249.65462844791}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.937660256410257,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.6484375,"distances_sum":2346.7064761067127}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.937660256410257,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.6484375,"distances_sum":2346.7064761067127}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9487809065934071,"seconds":7.199123501777649e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.84375,"distances_sum":2373.1015737057724}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9673420329670335,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8984375,"distances_sum":2502.5825680548865}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9372538919413927,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8125,"distances_sum":2284.2410374767264}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9673420329670335,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8984375,"distances_sum":2502.5825680548865}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9673420329670335,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8984375,"distances_sum":2502.5825680548865}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7857583388833397,"seconds":4.500150680541992e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.3984375,"distances_sum":1503.5525357733168}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.7020796911421917,"seconds":4.20399010181427e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.921875,"distances_sum":1221.608470922558}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6630859375,"f1":0.7857583388833397,"seconds":4.500150680541992e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.3984375,"distances_sum":1503.5525357733168}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9353308150183156,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.625,"distances_sum":2262.828207928112}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9353308150183156,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.625,"distances_sum":2262.828207928112}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739983974358978,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9453125,"distances_sum":2560.234315878531}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9732371794871799,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.90625,"distances_sum":2551.007355749934}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739983974358978,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9453125,"distances_sum":2560.234315878531}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739983974358978,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9453125,"distances_sum":2560.234315878531}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5625,"f1":null,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.1484375,"distances_sum":1375.2108658564944}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3662109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3662109375,"f1":null,"seconds":3.4887343645095825e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.671875,"distances_sum":862.9453275784449}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5625,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.5625,"f1":null,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.1484375,"distances_sum":1375.2108658564944}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7265625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7265625,"f1":0.8317770770895778,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.046875,"distances_sum":1807.5656540036207}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":2,"bsize":4}, perf: {"precision":null,"recall":0.6708984375,"f1":null,"seconds":4.7907233238220215e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.765625,"distances_sum":1644.4030272500368}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8874084249084255,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.453125,"distances_sum":2123.577457494947}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8076171875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8076171875,"f1":0.8874084249084255,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.453125,"distances_sum":2123.577457494947}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9307005494505501,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.765625,"distances_sum":2436.516879030064}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9456330128205134,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7890625,"distances_sum":2584.5051624438634}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9393486721611729,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7890625,"distances_sum":2481.231109241258}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9279735889110897,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7265625,"distances_sum":2441.1263399024638}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9456330128205134,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7890625,"distances_sum":2584.5051624438634}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9456330128205134,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7890625,"distances_sum":2584.5051624438634}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7156106046731053,"seconds":3.87243926525116e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.0546875,"distances_sum":1344.436039183658}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2060546875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2060546875,"f1":null,"seconds":3.2410025596618652e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":5.9921875,"distances_sum":496.14040378614607}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.4477561712265015e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":6.046875,"distances_sum":876.1407426570545}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.576171875,"f1":0.7156106046731053,"seconds":3.87243926525116e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.0546875,"distances_sum":1344.436039183658}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.892989302364303,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.4453125,"distances_sum":2104.3313969094697}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.933940018315019,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.828125,"distances_sum":2399.0338361230965}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8584165834165843,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.3359375,"distances_sum":1888.0950176254503}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8565658300033309,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.1171875,"distances_sum":1924.5450012808928}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7197265625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7197265625,"f1":0.8271332833832841,"seconds":4.7460198402404785e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.09375,"distances_sum":1749.3579484736833}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.933940018315019,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.828125,"distances_sum":2399.0338361230965}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.943776015651016,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.7890625,"distances_sum":2495.5125780109306}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9706330128205131,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.9609375,"distances_sum":2654.232730943232}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.95917467948718,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.875,"distances_sum":2577.0301795504174}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9390713453213461,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.84375,"distances_sum":2393.626454329679}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9706330128205131,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.9609375,"distances_sum":2654.232730943232}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9706330128205131,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.9609375,"distances_sum":2654.232730943232}}, n: 9
inertia(cfft.distances) = 18.35026434676434
inertia(cdnet.distances) = 23.963166829509568
inertia(crand.distances) = 20.18660446237266
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9044444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.88
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9111111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9444444444444443
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9133333333333334
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8733333333333334
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9177777777777778
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8666666666666667
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8822222222222221
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 1, 3, 2, 2, 3, 3, 3, 3, 1, 2, 3, 3, 2, 3, 3, 2, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.441600002782324] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.441600002782324, 0.17693396266604944] ***
*** starting iteration: 2; err: [Inf, 0.441600002782324, 0.17693396266604944] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.441600002782324, 0.17693396266604944, 0.16122384650137384] ***
*** starting iteration: 3; err: [Inf, 0.441600002782324, 0.17693396266604944, 0.16122384650137384] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.441600002782324, 0.17693396266604944, 0.16122384650137384, 0.159479040312926] ***
*** starting iteration: 4; err: [Inf, 0.441600002782324, 0.17693396266604944, 0.16122384650137384, 0.159479040312926] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.441600002782324, 0.17693396266604944, 0.16122384650137384, 0.159479040312926, 0.15936839373342052] ***
*** finished computation of 12 references, err: [Inf, 0.441600002782324, 0.17693396266604944, 0.16122384650137384, 0.159479040312926, 0.15936839373342052] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 14 centroids; started with 12
acc = 0.92
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.30740796212499355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30740796212499355, 0.21186939745460695] ***
*** finished computation of 7 references, err: [Inf, 0.30740796212499355, 0.21186939745460695] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 11]]
** centroid: 1, normalized-entropy: 0.9986359641585719, [(2, 12), (3, 11)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 7]]
** centroid: 2, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6029375843376196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6029375843376196, 0.5797956327963267] ***
*** finished computation of 7 references, err: [Inf, 0.6029375843376196, 0.5797956327963267] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 31]]
** centroid: 1, normalized-entropy: 0.999806132804711, [(2, 30), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5829952210543806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5829952210543806, 0.30983251528661454] ***
*** finished computation of 7 references, err: [Inf, 0.5829952210543806, 0.30983251528661454] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 15]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 5]]
** centroid: 3, normalized-entropy: 0.5713549744279549, [(2, 32), (3, 5)]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 1, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8619760451297435] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8619760451297435, 0.44075779981889013] ***
*** finished computation of 3 references, err: [Inf, 0.8619760451297435, 0.44075779981889013] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 23]]
** centroid: 1, normalized-entropy: 0.9768740126265281, [(2, 33), (3, 23)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 3: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.766236293019975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.766236293019975, 0.9176314881246974] ***
*** finished computation of 3 references, err: [Inf, 7.766236293019975, 0.9176314881246974] ***
*** center 1: selecting labels [1] (freq >= 2) [from [27, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 31]]
** centroid: 2, normalized-entropy: 0.999806132804711, [(2, 30), (3, 31)]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.676914075614987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.676914075614987, 1.6571060915824523] ***
*** finished computation of 3 references, err: [Inf, 4.676914075614987, 1.6571060915824523] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 27]]
** centroid: 1, normalized-entropy: 0.8904916402194913, [(2, 12), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [32, 24, 1]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(1, 32), (2, 24)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7036408547518921] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7036408547518921, 0.3844754898156606] ***
*** starting iteration: 2; err: [Inf, 0.7036408547518921, 0.3844754898156606] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7036408547518921, 0.3844754898156606, 0.365299448035368] ***
*** starting iteration: 3; err: [Inf, 0.7036408547518921, 0.3844754898156606, 0.365299448035368] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7036408547518921, 0.3844754898156606, 0.365299448035368, 0.36571152757702136] ***
*** finished computation of 3 references, err: [Inf, 0.7036408547518921, 0.3844754898156606, 0.365299448035368, 0.36571152757702136] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 27]]
** centroid: 2, normalized-entropy: 0.5547781633412736, [(2, 4), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 10]]
** centroid: 3, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6986190425089568] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6986190425089568, 0.3714357671293418] ***
*** starting iteration: 2; err: [Inf, 0.6986190425089568, 0.3714357671293418] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6986190425089568, 0.3714357671293418, 0.3612987310149067] ***
*** starting iteration: 3; err: [Inf, 0.6986190425089568, 0.3714357671293418, 0.3612987310149067] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6986190425089568, 0.3714357671293418, 0.3612987310149067, 0.3612987310149067] ***
*** finished computation of 3 references, err: [Inf, 0.6986190425089568, 0.3714357671293418, 0.3612987310149067, 0.3612987310149067] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 7]]
** centroid: 3, normalized-entropy: 0.6892019851173655, [(2, 31), (3, 7)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.780784901227485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.780784901227485, 0.4062238782615927] ***
*** starting iteration: 2; err: [Inf, 0.780784901227485, 0.4062238782615927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.780784901227485, 0.4062238782615927, 0.3801020430494735] ***
*** starting iteration: 3; err: [Inf, 0.780784901227485, 0.4062238782615927, 0.3801020430494735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.780784901227485, 0.4062238782615927, 0.3801020430494735, 0.3786765565142815] ***
*** finished computation of 3 references, err: [Inf, 0.780784901227485, 0.4062238782615927, 0.3801020430494735, 0.3786765565142815] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 9, 30]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 9), (3, 30)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 2]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5235838707066033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5235838707066033, 0.21983505372864584] ***
*** starting iteration: 2; err: [Inf, 0.5235838707066033, 0.21983505372864584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5235838707066033, 0.21983505372864584, 0.21484318460418642] ***
*** starting iteration: 3; err: [Inf, 0.5235838707066033, 0.21983505372864584, 0.21484318460418642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5235838707066033, 0.21983505372864584, 0.21484318460418642, 0.21278805425436226] ***
*** finished computation of 7 references, err: [Inf, 0.5235838707066033, 0.21983505372864584, 0.21484318460418642, 0.21278805425436226] ***
*** center 1: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 21]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 14), (3, 21)]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7272564734940112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7272564734940112, 0.29357166423516307] ***
*** starting iteration: 2; err: [Inf, 0.7272564734940112, 0.29357166423516307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7272564734940112, 0.29357166423516307, 0.24282975997469408] ***
*** starting iteration: 3; err: [Inf, 0.7272564734940112, 0.29357166423516307, 0.24282975997469408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7272564734940112, 0.29357166423516307, 0.24282975997469408, 0.21087140925411496] ***
*** finished computation of 7 references, err: [Inf, 0.7272564734940112, 0.29357166423516307, 0.24282975997469408, 0.21087140925411496] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 23, 9]]
** centroid: 5, normalized-entropy: 0.8571484374283717, [(2, 23), (3, 9)]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33588982256029515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33588982256029515, 0.24626752765137902] ***
*** starting iteration: 2; err: [Inf, 0.33588982256029515, 0.24626752765137902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33588982256029515, 0.24626752765137902, 0.23415662237514034] ***
*** starting iteration: 3; err: [Inf, 0.33588982256029515, 0.24626752765137902, 0.23415662237514034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33588982256029515, 0.24626752765137902, 0.23415662237514034, 0.22546353062343294] ***
*** finished computation of 7 references, err: [Inf, 0.33588982256029515, 0.24626752765137902, 0.23415662237514034, 0.22546353062343294] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 2]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 16), (3, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 11, 15]]
** centroid: 5, normalized-entropy: 0.9828586897127057, [(2, 11), (3, 15)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5324000019052046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5324000019052046, 0.29709466345420804] ***
*** starting iteration: 2; err: [Inf, 0.5324000019052046, 0.29709466345420804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5324000019052046, 0.29709466345420804, 0.28566655452217377] ***
*** starting iteration: 3; err: [Inf, 0.5324000019052046, 0.29709466345420804, 0.28566655452217377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5324000019052046, 0.29709466345420804, 0.28566655452217377, 0.27067956209250527] ***
*** finished computation of 7 references, err: [Inf, 0.5324000019052046, 0.29709466345420804, 0.28566655452217377, 0.27067956209250527] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 5, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 6, 12]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 6), (3, 12)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1548000152407853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1548000152407853, 0.41572360676622877] ***
*** starting iteration: 2; err: [Inf, 1.1548000152407853, 0.41572360676622877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1548000152407853, 0.41572360676622877, 0.3792835333048582] ***
*** starting iteration: 3; err: [Inf, 1.1548000152407853, 0.41572360676622877, 0.3792835333048582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1548000152407853, 0.41572360676622877, 0.3792835333048582, 0.32759502307479876] ***
*** finished computation of 7 references, err: [Inf, 1.1548000152407853, 0.41572360676622877, 0.3792835333048582, 0.32759502307479876] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 23, 8]]
** centroid: 7, normalized-entropy: 0.8238116333123173, [(2, 23), (3, 8)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0523999967965858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0523999967965858, 0.4563561842326569] ***
*** starting iteration: 2; err: [Inf, 1.0523999967965858, 0.4563561842326569] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0523999967965858, 0.4563561842326569, 0.4016497578031006] ***
*** starting iteration: 3; err: [Inf, 1.0523999967965858, 0.4563561842326569, 0.4016497578031006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0523999967965858, 0.4563561842326569, 0.4016497578031006, 0.35877796526136696] ***
*** finished computation of 7 references, err: [Inf, 1.0523999967965858, 0.4563561842326569, 0.4016497578031006, 0.35877796526136696] ***
*** center 1: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 5, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 19, 7]]
** centroid: 6, normalized-entropy: 0.8403586716091169, [(2, 19), (3, 7)]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3952754469996411] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3952754469996411, 0.17516440343820008] ***
*** starting iteration: 2; err: [Inf, 0.3952754469996411, 0.17516440343820008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3952754469996411, 0.17516440343820008, 0.16581613975288167] ***
*** starting iteration: 3; err: [Inf, 0.3952754469996411, 0.17516440343820008, 0.16581613975288167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3952754469996411, 0.17516440343820008, 0.16581613975288167, 0.1621526056448904] ***
*** starting iteration: 4; err: [Inf, 0.3952754469996411, 0.17516440343820008, 0.16581613975288167, 0.1621526056448904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3952754469996411, 0.17516440343820008, 0.16581613975288167, 0.1621526056448904, 0.1617173519057949] ***
*** finished computation of 7 references, err: [Inf, 0.3952754469996411, 0.17516440343820008, 0.16581613975288167, 0.1621526056448904, 0.1617173519057949] ***
*** center 1: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 7, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5646455898618912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5646455898618912, 0.3097261362963169] ***
*** starting iteration: 2; err: [Inf, 0.5646455898618912, 0.3097261362963169] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5646455898618912, 0.3097261362963169, 0.29177331257295225] ***
*** starting iteration: 3; err: [Inf, 0.5646455898618912, 0.3097261362963169, 0.29177331257295225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5646455898618912, 0.3097261362963169, 0.29177331257295225, 0.29005194564238357] ***
*** starting iteration: 4; err: [Inf, 0.5646455898618912, 0.3097261362963169, 0.29177331257295225, 0.29005194564238357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5646455898618912, 0.3097261362963169, 0.29177331257295225, 0.29005194564238357, 0.28976849011766204] ***
*** finished computation of 7 references, err: [Inf, 0.5646455898618912, 0.3097261362963169, 0.29177331257295225, 0.29005194564238357, 0.28976849011766204] ***
*** center 1: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 5, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4442260696607562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4442260696607562, 0.3342305959491492] ***
*** starting iteration: 2; err: [Inf, 0.4442260696607562, 0.3342305959491492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4442260696607562, 0.3342305959491492, 0.32859333375331834] ***
*** starting iteration: 3; err: [Inf, 0.4442260696607562, 0.3342305959491492, 0.32859333375331834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4442260696607562, 0.3342305959491492, 0.32859333375331834, 0.32441376417032636] ***
*** starting iteration: 4; err: [Inf, 0.4442260696607562, 0.3342305959491492, 0.32859333375331834, 0.32441376417032636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4442260696607562, 0.3342305959491492, 0.32859333375331834, 0.32441376417032636, 0.3233566055579565] ***
*** starting iteration: 5; err: [Inf, 0.4442260696607562, 0.3342305959491492, 0.32859333375331834, 0.32441376417032636, 0.3233566055579565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4442260696607562, 0.3342305959491492, 0.32859333375331834, 0.32441376417032636, 0.3233566055579565, 0.32324199715907015] ***
*** finished computation of 7 references, err: [Inf, 0.4442260696607562, 0.3342305959491492, 0.32859333375331834, 0.32441376417032636, 0.3233566055579565, 0.32324199715907015] ***
*** center 1: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 8]]
** centroid: 3, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 4: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1207000088541053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1207000088541053, 0.6016767435286723] ***
*** starting iteration: 2; err: [Inf, 1.1207000088541053, 0.6016767435286723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1207000088541053, 0.6016767435286723, 0.5185637571112438] ***
*** starting iteration: 3; err: [Inf, 1.1207000088541053, 0.6016767435286723, 0.5185637571112438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1207000088541053, 0.6016767435286723, 0.5185637571112438, 0.5022369391464779] ***
*** starting iteration: 4; err: [Inf, 1.1207000088541053, 0.6016767435286723, 0.5185637571112438, 0.5022369391464779] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1207000088541053, 0.6016767435286723, 0.5185637571112438, 0.5022369391464779, 0.48962095855907406] ***
*** starting iteration: 5; err: [Inf, 1.1207000088541053, 0.6016767435286723, 0.5185637571112438, 0.5022369391464779, 0.48962095855907406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1207000088541053, 0.6016767435286723, 0.5185637571112438, 0.5022369391464779, 0.48962095855907406, 0.48139355478825474] ***
*** starting iteration: 6; err: [Inf, 1.1207000088541053, 0.6016767435286723, 0.5185637571112438, 0.5022369391464779, 0.48962095855907406, 0.48139355478825474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1207000088541053, 0.6016767435286723, 0.5185637571112438, 0.5022369391464779, 0.48962095855907406, 0.48139355478825474, 0.476515608325258] ***
*** starting iteration: 7; err: [Inf, 1.1207000088541053, 0.6016767435286723, 0.5185637571112438, 0.5022369391464779, 0.48962095855907406, 0.48139355478825474, 0.476515608325258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1207000088541053, 0.6016767435286723, 0.5185637571112438, 0.5022369391464779, 0.48962095855907406, 0.48139355478825474, 0.476515608325258, 0.469738652495404] ***
*** starting iteration: 8; err: [Inf, 1.1207000088541053, 0.6016767435286723, 0.5185637571112438, 0.5022369391464779, 0.48962095855907406, 0.48139355478825474, 0.476515608325258, 0.469738652495404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1207000088541053, 0.6016767435286723, 0.5185637571112438, 0.5022369391464779, 0.48962095855907406, 0.48139355478825474, 0.476515608325258, 0.469738652495404, 0.4689822148279999] ***
*** finished computation of 7 references, err: [Inf, 1.1207000088541053, 0.6016767435286723, 0.5185637571112438, 0.5022369391464779, 0.48962095855907406, 0.48139355478825474, 0.476515608325258, 0.469738652495404, 0.4689822148279999] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 11]]
** centroid: 2, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6494000040939628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6494000040939628, 0.3875482809378208] ***
*** starting iteration: 2; err: [Inf, 0.6494000040939628, 0.3875482809378208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6494000040939628, 0.3875482809378208, 0.36436373260193805] ***
*** starting iteration: 3; err: [Inf, 0.6494000040939628, 0.3875482809378208, 0.36436373260193805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6494000040939628, 0.3875482809378208, 0.36436373260193805, 0.3582200713679908] ***
*** starting iteration: 4; err: [Inf, 0.6494000040939628, 0.3875482809378208, 0.36436373260193805, 0.3582200713679908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6494000040939628, 0.3875482809378208, 0.36436373260193805, 0.3582200713679908, 0.3569574049715687] ***
*** starting iteration: 5; err: [Inf, 0.6494000040939628, 0.3875482809378208, 0.36436373260193805, 0.3582200713679908, 0.3569574049715687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6494000040939628, 0.3875482809378208, 0.36436373260193805, 0.3582200713679908, 0.3569574049715687, 0.3569574049715687] ***
*** finished computation of 7 references, err: [Inf, 0.6494000040939628, 0.3875482809378208, 0.36436373260193805, 0.3582200713679908, 0.3569574049715687, 0.3569574049715687] ***
*** center 1: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 4, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.526700002361552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.526700002361552, 0.2951231904134976] ***
*** starting iteration: 2; err: [Inf, 0.526700002361552, 0.2951231904134976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.526700002361552, 0.2951231904134976, 0.28799112205649474] ***
*** starting iteration: 3; err: [Inf, 0.526700002361552, 0.2951231904134976, 0.28799112205649474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.526700002361552, 0.2951231904134976, 0.28799112205649474, 0.2840745160434719] ***
*** starting iteration: 4; err: [Inf, 0.526700002361552, 0.2951231904134976, 0.28799112205649474, 0.2840745160434719] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.526700002361552, 0.2951231904134976, 0.28799112205649474, 0.2840745160434719, 0.28366881667423377] ***
*** finished computation of 7 references, err: [Inf, 0.526700002361552, 0.2951231904134976, 0.28799112205649474, 0.2840745160434719, 0.28366881667423377] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 8]]
** centroid: 2, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.896499979232112] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.896499979232112, 0.7495433590181798] ***
*** starting iteration: 2; err: [Inf, 2.896499979232112, 0.7495433590181798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.896499979232112, 0.7495433590181798, 0.5340624732814082] ***
*** starting iteration: 3; err: [Inf, 2.896499979232112, 0.7495433590181798, 0.5340624732814082] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.896499979232112, 0.7495433590181798, 0.5340624732814082, 0.5267388817172758] ***
*** finished computation of 3 references, err: [Inf, 2.896499979232112, 0.7495433590181798, 0.5340624732814082, 0.5267388817172758] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 11]]
** centroid: 2, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 9.072599909501555] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.072599909501555, 1.63234907984208] ***
*** starting iteration: 2; err: [Inf, 9.072599909501555, 1.63234907984208] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.072599909501555, 1.63234907984208, 0.6549149832657107] ***
*** starting iteration: 3; err: [Inf, 9.072599909501555, 1.63234907984208, 0.6549149832657107] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.072599909501555, 1.63234907984208, 0.6549149832657107, 0.5915374033328097] ***
*** finished computation of 3 references, err: [Inf, 9.072599909501555, 1.63234907984208, 0.6549149832657107, 0.5915374033328097] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 11, 31]]
** centroid: 3, normalized-entropy: 0.8296071030882032, [(2, 11), (3, 31)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0752999931455647] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0752999931455647, 0.5381439857291148] ***
*** starting iteration: 2; err: [Inf, 1.0752999931455647, 0.5381439857291148] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0752999931455647, 0.5381439857291148, 0.5366206972169233] ***
*** starting iteration: 3; err: [Inf, 1.0752999931455647, 0.5381439857291148, 0.5366206972169233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0752999931455647, 0.5381439857291148, 0.5366206972169233, 0.5328818671874335] ***
*** finished computation of 3 references, err: [Inf, 1.0752999931455647, 0.5381439857291148, 0.5366206972169233, 0.5328818671874335] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 26]]
** centroid: 1, normalized-entropy: 0.6373874992221911, [(2, 5), (3, 26)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 6]]
** centroid: 2, normalized-entropy: 0.6394571324851642, [(2, 31), (3, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 9.738574329954913] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.738574329954913, 1.509473061714556] ***
*** starting iteration: 2; err: [Inf, 9.738574329954913, 1.509473061714556] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.738574329954913, 1.509473061714556, 0.703430375419308] ***
*** starting iteration: 3; err: [Inf, 9.738574329954913, 1.509473061714556, 0.703430375419308] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.738574329954913, 1.509473061714556, 0.703430375419308, 0.6930657868127226] ***
*** starting iteration: 4; err: [Inf, 9.738574329954913, 1.509473061714556, 0.703430375419308, 0.6930657868127226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.738574329954913, 1.509473061714556, 0.703430375419308, 0.6930657868127226, 0.6809399624507654] ***
*** starting iteration: 5; err: [Inf, 9.738574329954913, 1.509473061714556, 0.703430375419308, 0.6930657868127226, 0.6809399624507654] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.738574329954913, 1.509473061714556, 0.703430375419308, 0.6930657868127226, 0.6809399624507654, 0.6797850538064434] ***
*** starting iteration: 6; err: [Inf, 9.738574329954913, 1.509473061714556, 0.703430375419308, 0.6930657868127226, 0.6809399624507654, 0.6797850538064434] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.738574329954913, 1.509473061714556, 0.703430375419308, 0.6930657868127226, 0.6809399624507654, 0.6797850538064434, 0.6797850538064434] ***
*** finished computation of 3 references, err: [Inf, 9.738574329954913, 1.509473061714556, 0.703430375419308, 0.6930657868127226, 0.6809399624507654, 0.6797850538064434, 0.6797850538064434] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 37]]
** centroid: 2, normalized-entropy: 0.9976432959863935, [(2, 33), (3, 37)]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8410923937497021] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8410923937497021, 0.4221368995279968] ***
*** starting iteration: 2; err: [Inf, 0.8410923937497021, 0.4221368995279968] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8410923937497021, 0.4221368995279968, 0.3843206032494348] ***
*** starting iteration: 3; err: [Inf, 0.8410923937497021, 0.4221368995279968, 0.3843206032494348] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8410923937497021, 0.4221368995279968, 0.3843206032494348, 0.3806710214417606] ***
*** starting iteration: 4; err: [Inf, 0.8410923937497021, 0.4221368995279968, 0.3843206032494348, 0.3806710214417606] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8410923937497021, 0.4221368995279968, 0.3843206032494348, 0.3806710214417606, 0.3778882813660171] ***
*** starting iteration: 5; err: [Inf, 0.8410923937497021, 0.4221368995279968, 0.3843206032494348, 0.3806710214417606, 0.3778882813660171] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8410923937497021, 0.4221368995279968, 0.3843206032494348, 0.3806710214417606, 0.3778882813660171, 0.3723507980188742] ***
*** starting iteration: 6; err: [Inf, 0.8410923937497021, 0.4221368995279968, 0.3843206032494348, 0.3806710214417606, 0.3778882813660171, 0.3723507980188742] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8410923937497021, 0.4221368995279968, 0.3843206032494348, 0.3806710214417606, 0.3778882813660171, 0.3723507980188742, 0.36781587367922897] ***
*** starting iteration: 7; err: [Inf, 0.8410923937497021, 0.4221368995279968, 0.3843206032494348, 0.3806710214417606, 0.3778882813660171, 0.3723507980188742, 0.36781587367922897] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8410923937497021, 0.4221368995279968, 0.3843206032494348, 0.3806710214417606, 0.3778882813660171, 0.3723507980188742, 0.36781587367922897, 0.3662518109482474] ***
*** starting iteration: 8; err: [Inf, 0.8410923937497021, 0.4221368995279968, 0.3843206032494348, 0.3806710214417606, 0.3778882813660171, 0.3723507980188742, 0.36781587367922897, 0.3662518109482474] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8410923937497021, 0.4221368995279968, 0.3843206032494348, 0.3806710214417606, 0.3778882813660171, 0.3723507980188742, 0.36781587367922897, 0.3662518109482474, 0.3662518109482474] ***
*** finished computation of 3 references, err: [Inf, 0.8410923937497021, 0.4221368995279968, 0.3843206032494348, 0.3806710214417606, 0.3778882813660171, 0.3723507980188742, 0.36781587367922897, 0.3662518109482474, 0.3662518109482474] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 3]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 30), (3, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 28]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5816745044087424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5816745044087424, 0.42133288298453897] ***
*** starting iteration: 2; err: [Inf, 0.5816745044087424, 0.42133288298453897] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5816745044087424, 0.42133288298453897, 0.39316474659947703] ***
*** starting iteration: 3; err: [Inf, 0.5816745044087424, 0.42133288298453897, 0.39316474659947703] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5816745044087424, 0.42133288298453897, 0.39316474659947703, 0.3827932031549095] ***
*** starting iteration: 4; err: [Inf, 0.5816745044087424, 0.42133288298453897, 0.39316474659947703, 0.3827932031549095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5816745044087424, 0.42133288298453897, 0.39316474659947703, 0.3827932031549095, 0.37816391049660053] ***
*** starting iteration: 5; err: [Inf, 0.5816745044087424, 0.42133288298453897, 0.39316474659947703, 0.3827932031549095, 0.37816391049660053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5816745044087424, 0.42133288298453897, 0.39316474659947703, 0.3827932031549095, 0.37816391049660053, 0.375458129777452] ***
*** starting iteration: 6; err: [Inf, 0.5816745044087424, 0.42133288298453897, 0.39316474659947703, 0.3827932031549095, 0.37816391049660053, 0.375458129777452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5816745044087424, 0.42133288298453897, 0.39316474659947703, 0.3827932031549095, 0.37816391049660053, 0.375458129777452, 0.3749552545351196] ***
*** finished computation of 3 references, err: [Inf, 0.5816745044087424, 0.42133288298453897, 0.39316474659947703, 0.3827932031549095, 0.37816391049660053, 0.375458129777452, 0.3749552545351196] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 24]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 3, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2215000033711834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2215000033711834, 0.554609820230988] ***
*** starting iteration: 2; err: [Inf, 1.2215000033711834, 0.554609820230988] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2215000033711834, 0.554609820230988, 0.5334162119692957] ***
*** starting iteration: 3; err: [Inf, 1.2215000033711834, 0.554609820230988, 0.5334162119692957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2215000033711834, 0.554609820230988, 0.5334162119692957, 0.5279533634514185] ***
*** finished computation of 3 references, err: [Inf, 1.2215000033711834, 0.554609820230988, 0.5334162119692957, 0.5279533634514185] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 2, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 9.259799902060527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.259799902060527, 1.108442478392692] ***
*** starting iteration: 2; err: [Inf, 9.259799902060527, 1.108442478392692] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.259799902060527, 1.108442478392692, 0.914094025828478] ***
*** starting iteration: 3; err: [Inf, 9.259799902060527, 1.108442478392692, 0.914094025828478] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.259799902060527, 1.108442478392692, 0.914094025828478, 0.914094025828478] ***
*** finished computation of 3 references, err: [Inf, 9.259799902060527, 1.108442478392692, 0.914094025828478, 0.914094025828478] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 31]]
** centroid: 1, normalized-entropy: 0.9981341775041118, [(2, 28), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [19, 3, 0]]
** centroid: 3, normalized-entropy: 0.5746356978376794, [(1, 19), (2, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0040999971363] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0040999971363, 0.5932896674844521] ***
*** starting iteration: 2; err: [Inf, 1.0040999971363, 0.5932896674844521] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0040999971363, 0.5932896674844521, 0.551175797340677] ***
*** starting iteration: 3; err: [Inf, 1.0040999971363, 0.5932896674844521, 0.551175797340677] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0040999971363, 0.5932896674844521, 0.551175797340677, 0.5379544543341038] ***
*** finished computation of 3 references, err: [Inf, 1.0040999971363, 0.5932896674844521, 0.551175797340677, 0.5379544543341038] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 8]]
** centroid: 2, normalized-entropy: 0.7024665512903904, [(2, 34), (3, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34214605111949586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34214605111949586, 0.20922916146728202] ***
*** finished computation of 7 references, err: [Inf, 0.34214605111949586, 0.20922916146728202] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 5, 13]]
** centroid: 7, normalized-entropy: 0.8524051786494784, [(2, 5), (3, 13)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8729485956659047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8729485956659047, 0.2828516601799831] ***
*** finished computation of 7 references, err: [Inf, 0.8729485956659047, 0.2828516601799831] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 6, 30]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 6), (3, 30)]
*** center 3: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 5, 1]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 5), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2994333590655199] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2994333590655199, 0.20969334308194437] ***
*** finished computation of 7 references, err: [Inf, 0.2994333590655199, 0.20969334308194437] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 17]]
** centroid: 4, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 10, 2]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
*** center 7: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.6333000004054798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6333000004054798, 0.5450651455174664] ***
*** starting iteration: 2; err: [Inf, 1.6333000004054798, 0.5450651455174664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6333000004054798, 0.5450651455174664, 0.5307422599179656] ***
*** starting iteration: 3; err: [Inf, 1.6333000004054798, 0.5450651455174664, 0.5307422599179656] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6333000004054798, 0.5450651455174664, 0.5307422599179656, 0.5279533634514185] ***
*** finished computation of 3 references, err: [Inf, 1.6333000004054798, 0.5450651455174664, 0.5307422599179656, 0.5279533634514185] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 2, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 3, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9386999997701164] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9386999997701164, 0.5168999270640292] ***
*** starting iteration: 2; err: [Inf, 0.9386999997701164, 0.5168999270640292] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9386999997701164, 0.5168999270640292, 0.5137039021767119] ***
*** starting iteration: 3; err: [Inf, 0.9386999997701164, 0.5168999270640292, 0.5137039021767119] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9386999997701164, 0.5168999270640292, 0.5137039021767119, 0.5137039021767119] ***
*** finished computation of 3 references, err: [Inf, 0.9386999997701164, 0.5168999270640292, 0.5137039021767119, 0.5137039021767119] ***
*** center 1: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.746599995348974] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.746599995348974, 0.5513943559310603] ***
*** starting iteration: 2; err: [Inf, 1.746599995348974, 0.5513943559310603] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.746599995348974, 0.5513943559310603, 0.5379544543341038] ***
*** starting iteration: 3; err: [Inf, 1.746599995348974, 0.5513943559310603, 0.5379544543341038] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.746599995348974, 0.5513943559310603, 0.5379544543341038, 0.5329283190536716] ***
*** finished computation of 3 references, err: [Inf, 1.746599995348974, 0.5513943559310603, 0.5379544543341038, 0.5329283190536716] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 8]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6141000003667603] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6141000003667603, 0.5450651455174664] ***
*** starting iteration: 2; err: [Inf, 1.6141000003667603, 0.5450651455174664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6141000003667603, 0.5450651455174664, 0.5307422599179656] ***
*** starting iteration: 3; err: [Inf, 1.6141000003667603, 0.5450651455174664, 0.5307422599179656] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6141000003667603, 0.5450651455174664, 0.5307422599179656, 0.5279533634514185] ***
*** finished computation of 3 references, err: [Inf, 1.6141000003667603, 0.5450651455174664, 0.5307422599179656, 0.5279533634514185] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 2, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 3, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.125200002052827] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.125200002052827, 0.5396345709874559] ***
*** starting iteration: 2; err: [Inf, 1.125200002052827, 0.5396345709874559] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.125200002052827, 0.5396345709874559, 0.5137039021767119] ***
*** starting iteration: 3; err: [Inf, 1.125200002052827, 0.5396345709874559, 0.5137039021767119] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.125200002052827, 0.5396345709874559, 0.5137039021767119, 0.5137039021767119] ***
*** finished computation of 3 references, err: [Inf, 1.125200002052827, 0.5396345709874559, 0.5137039021767119, 0.5137039021767119] ***
*** center 1: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.0319999970360936] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0319999970360936, 0.5622885126517813] ***
*** starting iteration: 2; err: [Inf, 2.0319999970360936, 0.5622885126517813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0319999970360936, 0.5622885126517813, 0.5413781290673234] ***
*** starting iteration: 3; err: [Inf, 2.0319999970360936, 0.5622885126517813, 0.5413781290673234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0319999970360936, 0.5622885126517813, 0.5413781290673234, 0.5329283190536716] ***
*** finished computation of 3 references, err: [Inf, 2.0319999970360936, 0.5622885126517813, 0.5413781290673234, 0.5329283190536716] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 8]]
** centroid: 3, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.221987687872427] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.221987687872427, 0.37514521583628396] ***
*** starting iteration: 2; err: [Inf, 1.221987687872427, 0.37514521583628396] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.221987687872427, 0.37514521583628396, 0.3677767554045434] ***
*** starting iteration: 3; err: [Inf, 1.221987687872427, 0.37514521583628396, 0.3677767554045434] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.221987687872427, 0.37514521583628396, 0.3677767554045434, 0.36612619150740644] ***
*** finished computation of 3 references, err: [Inf, 1.221987687872427, 0.37514521583628396, 0.3677767554045434, 0.36612619150740644] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9162466011294391] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9162466011294391, 0.36139912219567066] ***
*** starting iteration: 2; err: [Inf, 0.9162466011294391, 0.36139912219567066] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9162466011294391, 0.36139912219567066, 0.3604533268720288] ***
*** finished computation of 3 references, err: [Inf, 0.9162466011294391, 0.36139912219567066, 0.3604533268720288] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 1, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5582345813172448] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5582345813172448, 0.3963202251638751] ***
*** starting iteration: 2; err: [Inf, 0.5582345813172448, 0.3963202251638751] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5582345813172448, 0.3963202251638751, 0.38196331983135634] ***
*** starting iteration: 3; err: [Inf, 0.5582345813172448, 0.3963202251638751, 0.38196331983135634] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5582345813172448, 0.3963202251638751, 0.38196331983135634, 0.3787783553359999] ***
*** finished computation of 3 references, err: [Inf, 0.5582345813172448, 0.3963202251638751, 0.38196331983135634, 0.3787783553359999] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 30]]
** centroid: 1, normalized-entropy: 0.8390040613676978, [(2, 11), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 2]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 25), (3, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.769582282713601] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.769582282713601, 0.4369146281116592] ***
*** finished computation of 3 references, err: [Inf, 0.769582282713601, 0.4369146281116592] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 22]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 33), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7665201801628931] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7665201801628931, 0.3683931074239826] ***
*** finished computation of 3 references, err: [Inf, 0.7665201801628931, 0.3683931074239826] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 1, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1884447216052927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1884447216052927, 0.40421153697249407] ***
*** finished computation of 3 references, err: [Inf, 1.1884447216052927, 0.40421153697249407] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 11]]
** centroid: 3, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34490350724935825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34490350724935825, 0.18208347918711798] ***
*** starting iteration: 2; err: [Inf, 0.34490350724935825, 0.18208347918711798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34490350724935825, 0.18208347918711798, 0.17404949063226738] ***
*** starting iteration: 3; err: [Inf, 0.34490350724935825, 0.18208347918711798, 0.17404949063226738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34490350724935825, 0.18208347918711798, 0.17404949063226738, 0.17298900246585341] ***
*** starting iteration: 4; err: [Inf, 0.34490350724935825, 0.18208347918711798, 0.17404949063226738, 0.17298900246585341] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34490350724935825, 0.18208347918711798, 0.17404949063226738, 0.17298900246585341, 0.17281645108914173] ***
*** finished computation of 7 references, err: [Inf, 0.34490350724935825, 0.18208347918711798, 0.17404949063226738, 0.17298900246585341, 0.17281645108914173] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 7, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37228762396829496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37228762396829496, 0.19577045140196117] ***
*** starting iteration: 2; err: [Inf, 0.37228762396829496, 0.19577045140196117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37228762396829496, 0.19577045140196117, 0.18404659663037143] ***
*** starting iteration: 3; err: [Inf, 0.37228762396829496, 0.19577045140196117, 0.18404659663037143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37228762396829496, 0.19577045140196117, 0.18404659663037143, 0.17800050804110387] ***
*** starting iteration: 4; err: [Inf, 0.37228762396829496, 0.19577045140196117, 0.18404659663037143, 0.17800050804110387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37228762396829496, 0.19577045140196117, 0.18404659663037143, 0.17800050804110387, 0.17523802977783975] ***
*** starting iteration: 5; err: [Inf, 0.37228762396829496, 0.19577045140196117, 0.18404659663037143, 0.17800050804110387, 0.17523802977783975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37228762396829496, 0.19577045140196117, 0.18404659663037143, 0.17800050804110387, 0.17523802977783975, 0.17474891728769087] ***
*** finished computation of 7 references, err: [Inf, 0.37228762396829496, 0.19577045140196117, 0.18404659663037143, 0.17800050804110387, 0.17523802977783975, 0.17474891728769087] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 22, 4]]
** centroid: 7, normalized-entropy: 0.6193821946787638, [(2, 22), (3, 4)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44146398559826866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44146398559826866, 0.1890772154024956] ***
*** starting iteration: 2; err: [Inf, 0.44146398559826866, 0.1890772154024956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44146398559826866, 0.1890772154024956, 0.17733246481839868] ***
*** starting iteration: 3; err: [Inf, 0.44146398559826866, 0.1890772154024956, 0.17733246481839868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44146398559826866, 0.1890772154024956, 0.17733246481839868, 0.1754966456106556] ***
*** starting iteration: 4; err: [Inf, 0.44146398559826866, 0.1890772154024956, 0.17733246481839868, 0.1754966456106556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44146398559826866, 0.1890772154024956, 0.17733246481839868, 0.1754966456106556, 0.1746120122387728] ***
*** finished computation of 7 references, err: [Inf, 0.44146398559826866, 0.1890772154024956, 0.17733246481839868, 0.1754966456106556, 0.1746120122387728] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 6]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9466666666666667, 0.94, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9466666666666667
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 7.756447728931866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.756447728931866, 1.7356722042376658] ***
*** starting iteration: 2; err: [Inf, 7.756447728931866, 1.7356722042376658] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.756447728931866, 1.7356722042376658, 0.3665771005785686] ***
*** starting iteration: 3; err: [Inf, 7.756447728931866, 1.7356722042376658, 0.3665771005785686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.756447728931866, 1.7356722042376658, 0.3665771005785686, 0.36612619150740644] ***
*** finished computation of 3 references, err: [Inf, 7.756447728931866, 1.7356722042376658, 0.3665771005785686, 0.36612619150740644] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 12]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5817392221246295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5817392221246295, 0.3604533268720288] ***
*** starting iteration: 2; err: [Inf, 0.5817392221246295, 0.3604533268720288] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5817392221246295, 0.3604533268720288, 0.3604533268720288] ***
*** finished computation of 3 references, err: [Inf, 0.5817392221246295, 0.3604533268720288, 0.3604533268720288] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.5340135391222156] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5340135391222156, 1.340786790508976] ***
*** starting iteration: 2; err: [Inf, 3.5340135391222156, 1.340786790508976] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5340135391222156, 1.340786790508976, 0.6881333555957008] ***
*** starting iteration: 3; err: [Inf, 3.5340135391222156, 1.340786790508976, 0.6881333555957008] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5340135391222156, 1.340786790508976, 0.6881333555957008, 0.4448308664161974] ***
*** finished computation of 3 references, err: [Inf, 3.5340135391222156, 1.340786790508976, 0.6881333555957008, 0.4448308664161974] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 19]]
** centroid: 1, normalized-entropy: 0.9357110512652843, [(2, 35), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 17)
[0.9466666666666667, 0.94, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9466666666666667
finished with 17
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9466666666666667, 0.94, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9466666666666667
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 1.1851820913090356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1851820913090356, 0.37514521583628396] ***
*** starting iteration: 2; err: [Inf, 1.1851820913090356, 0.37514521583628396] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1851820913090356, 0.37514521583628396, 0.3677767554045434] ***
*** starting iteration: 3; err: [Inf, 1.1851820913090356, 0.37514521583628396, 0.3677767554045434] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1851820913090356, 0.37514521583628396, 0.3677767554045434, 0.36612619150740644] ***
*** starting iteration: 4; err: [Inf, 1.1851820913090356, 0.37514521583628396, 0.3677767554045434, 0.36612619150740644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1851820913090356, 0.37514521583628396, 0.3677767554045434, 0.36612619150740644, 0.36612619150740644] ***
*** finished computation of 3 references, err: [Inf, 1.1851820913090356, 0.37514521583628396, 0.3677767554045434, 0.36612619150740644, 0.36612619150740644] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 12]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6989742244995617] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6989742244995617, 0.378818569442746] ***
*** starting iteration: 2; err: [Inf, 0.6989742244995617, 0.378818569442746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6989742244995617, 0.378818569442746, 0.3604533268720288] ***
*** starting iteration: 3; err: [Inf, 0.6989742244995617, 0.378818569442746, 0.3604533268720288] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6989742244995617, 0.378818569442746, 0.3604533268720288, 0.3604533268720288] ***
*** finished computation of 3 references, err: [Inf, 0.6989742244995617, 0.378818569442746, 0.3604533268720288, 0.3604533268720288] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2214007202664314] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2214007202664314, 0.40448641873274566] ***
*** starting iteration: 2; err: [Inf, 1.2214007202664314, 0.40448641873274566] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2214007202664314, 0.40448641873274566, 0.3881356787449794] ***
*** starting iteration: 3; err: [Inf, 1.2214007202664314, 0.40448641873274566, 0.3881356787449794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2214007202664314, 0.40448641873274566, 0.3881356787449794, 0.3813208515861835] ***
*** starting iteration: 4; err: [Inf, 1.2214007202664314, 0.40448641873274566, 0.3881356787449794, 0.3813208515861835] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2214007202664314, 0.40448641873274566, 0.3881356787449794, 0.3813208515861835, 0.37816391049660053] ***
*** starting iteration: 5; err: [Inf, 1.2214007202664314, 0.40448641873274566, 0.3881356787449794, 0.3813208515861835, 0.37816391049660053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2214007202664314, 0.40448641873274566, 0.3881356787449794, 0.3813208515861835, 0.37816391049660053, 0.375458129777452] ***
*** starting iteration: 6; err: [Inf, 1.2214007202664314, 0.40448641873274566, 0.3881356787449794, 0.3813208515861835, 0.37816391049660053, 0.375458129777452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2214007202664314, 0.40448641873274566, 0.3881356787449794, 0.3813208515861835, 0.37816391049660053, 0.375458129777452, 0.3749552545351196] ***
*** finished computation of 3 references, err: [Inf, 1.2214007202664314, 0.40448641873274566, 0.3881356787449794, 0.3813208515861835, 0.37816391049660053, 0.375458129777452, 0.3749552545351196] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 24]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 3, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.9466666666666667, 0.94, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9466666666666667
finished with 19
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.5916000015226922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5916000015226922, 0.2595035830844104] ***
*** starting iteration: 2; err: [Inf, 0.5916000015226922, 0.2595035830844104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5916000015226922, 0.2595035830844104, 0.23063688656643513] ***
*** starting iteration: 3; err: [Inf, 0.5916000015226922, 0.2595035830844104, 0.23063688656643513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5916000015226922, 0.2595035830844104, 0.23063688656643513, 0.2246776386573164] ***
*** starting iteration: 4; err: [Inf, 0.5916000015226922, 0.2595035830844104, 0.23063688656643513, 0.2246776386573164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5916000015226922, 0.2595035830844104, 0.23063688656643513, 0.2246776386573164, 0.22402959872543587] ***
*** finished computation of 7 references, err: [Inf, 0.5916000015226922, 0.2595035830844104, 0.23063688656643513, 0.2246776386573164, 0.22402959872543587] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 7]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 8, 4]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 8), (3, 4)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5926000060238051] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5926000060238051, 0.24589890608157297] ***
*** starting iteration: 2; err: [Inf, 0.5926000060238051, 0.24589890608157297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5926000060238051, 0.24589890608157297, 0.23441546926556212] ***
*** starting iteration: 3; err: [Inf, 0.5926000060238051, 0.24589890608157297, 0.23441546926556212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5926000060238051, 0.24589890608157297, 0.23441546926556212, 0.23394439546374313] ***
*** finished computation of 7 references, err: [Inf, 0.5926000060238051, 0.24589890608157297, 0.23441546926556212, 0.23394439546374313] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 8]]
** centroid: 1, normalized-entropy: 0.8238116333123173, [(2, 23), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5844000022318013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5844000022318013, 0.3000508937202454] ***
*** starting iteration: 2; err: [Inf, 0.5844000022318013, 0.3000508937202454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5844000022318013, 0.3000508937202454, 0.2656140339922057] ***
*** starting iteration: 3; err: [Inf, 0.5844000022318013, 0.3000508937202454, 0.2656140339922057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5844000022318013, 0.3000508937202454, 0.2656140339922057, 0.24735977142974783] ***
*** starting iteration: 4; err: [Inf, 0.5844000022318013, 0.3000508937202454, 0.2656140339922057, 0.24735977142974783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5844000022318013, 0.3000508937202454, 0.2656140339922057, 0.24735977142974783, 0.23835232170368997] ***
*** starting iteration: 5; err: [Inf, 0.5844000022318013, 0.3000508937202454, 0.2656140339922057, 0.24735977142974783, 0.23835232170368997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5844000022318013, 0.3000508937202454, 0.2656140339922057, 0.24735977142974783, 0.23835232170368997, 0.23608892346240698] ***
*** starting iteration: 6; err: [Inf, 0.5844000022318013, 0.3000508937202454, 0.2656140339922057, 0.24735977142974783, 0.23835232170368997, 0.23608892346240698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5844000022318013, 0.3000508937202454, 0.2656140339922057, 0.24735977142974783, 0.23835232170368997, 0.23608892346240698, 0.2336495954682454] ***
*** starting iteration: 7; err: [Inf, 0.5844000022318013, 0.3000508937202454, 0.2656140339922057, 0.24735977142974783, 0.23835232170368997, 0.23608892346240698, 0.2336495954682454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5844000022318013, 0.3000508937202454, 0.2656140339922057, 0.24735977142974783, 0.23835232170368997, 0.23608892346240698, 0.2336495954682454, 0.23290275898438] ***
*** finished computation of 7 references, err: [Inf, 0.5844000022318013, 0.3000508937202454, 0.2656140339922057, 0.24735977142974783, 0.23835232170368997, 0.23608892346240698, 0.2336495954682454, 0.23290275898438] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9466666666666667, 0.94, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9466666666666667
finished with 20
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.6963244967306288] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6963244967306288, 0.4369146281116592] ***
*** starting iteration: 2; err: [Inf, 0.6963244967306288, 0.4369146281116592] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6963244967306288, 0.4369146281116592, 0.39581058085450604] ***
*** starting iteration: 3; err: [Inf, 0.6963244967306288, 0.4369146281116592, 0.39581058085450604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6963244967306288, 0.4369146281116592, 0.39581058085450604, 0.371484371252927] ***
*** finished computation of 3 references, err: [Inf, 0.6963244967306288, 0.4369146281116592, 0.39581058085450604, 0.371484371252927] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 13]]
** centroid: 1, normalized-entropy: 0.8589810370425965, [(2, 33), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7587985280258569] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7587985280258569, 0.38976601250605936] ***
*** starting iteration: 2; err: [Inf, 0.7587985280258569, 0.38976601250605936] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7587985280258569, 0.38976601250605936, 0.3843206032494348] ***
*** starting iteration: 3; err: [Inf, 0.7587985280258569, 0.38976601250605936, 0.3843206032494348] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7587985280258569, 0.38976601250605936, 0.3843206032494348, 0.3806710214417606] ***
*** finished computation of 3 references, err: [Inf, 0.7587985280258569, 0.38976601250605936, 0.3843206032494348, 0.3806710214417606] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 30]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 6), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 3, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2191538856379238] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2191538856379238, 0.3828539338517294] ***
*** starting iteration: 2; err: [Inf, 1.2191538856379238, 0.3828539338517294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2191538856379238, 0.3828539338517294, 0.37816391049660053] ***
*** starting iteration: 3; err: [Inf, 1.2191538856379238, 0.3828539338517294, 0.37816391049660053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2191538856379238, 0.3828539338517294, 0.37816391049660053, 0.375458129777452] ***
*** finished computation of 3 references, err: [Inf, 1.2191538856379238, 0.3828539338517294, 0.37816391049660053, 0.375458129777452] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 8]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 20)
[0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9466666666666667
finished with 21
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.9994999883049347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9994999883049347, 0.4342286875481642] ***
*** finished computation of 7 references, err: [Inf, 0.9994999883049347, 0.4342286875481642] ***
*** center 1: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 5, 16]]
** centroid: 4, normalized-entropy: 0.7918583525674836, [(2, 5), (3, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 6, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 13, 4]]
** centroid: 7, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47800000541455856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47800000541455856, 0.28390722122676126] ***
*** finished computation of 7 references, err: [Inf, 0.47800000541455856, 0.28390722122676126] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 10]]
** centroid: 1, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4414000020189059] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4414000020189059, 0.31374323161938966] ***
*** finished computation of 7 references, err: [Inf, 0.4414000020189059, 0.31374323161938966] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 4: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 13]]
** centroid: 6, normalized-entropy: 1.0, [(2, 13), (3, 13)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 21)
[0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9466666666666667
finished with 21
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666667, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9466666666666667
finished with 22
iteration 9 finished
*** starting iteration: 1; err: [Inf, 1.5487516037024156] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5487516037024156, 0.6976359490209822] ***
*** finished computation of 3 references, err: [Inf, 1.5487516037024156, 0.6976359490209822] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [22, 1, 0]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(1, 22), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 37]]
** centroid: 2, normalized-entropy: 0.9962088839046743, [(2, 32), (3, 37)]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.090664189948153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.090664189948153, 0.6070853627742807] ***
*** finished computation of 3 references, err: [Inf, 1.090664189948153, 0.6070853627742807] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [22, 3, 0]]
** centroid: 1, normalized-entropy: 0.5293608652873645, [(1, 22), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 31]]
** centroid: 2, normalized-entropy: 0.9981341775041118, [(2, 28), (3, 31)]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7697448585102447] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7697448585102447, 0.3820332457041175] ***
*** finished computation of 3 references, err: [Inf, 0.7697448585102447, 0.3820332457041175] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 10, 28]]
** centroid: 2, normalized-entropy: 0.8314743880097292, [(2, 10), (3, 28)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 4]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(2, 26), (3, 4)]
finished with 5 centroids; started with 3
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1), 0.9466666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.55294117647059, 3.0294117647058822, 5.523529411764706, 2.1], [5.033333333333333, 3.436666666666667, 1.4666666666666661, 0.23333333333333342], [5.366666666666667, 2.433333333333333, 3.6166666666666667, 1.1166666666666667], [7.6000000000000005, 3.733333333333333, 6.400000000000001, 2.2333333333333334], [6.433333333333333, 2.9799999999999995, 4.653333333333333, 1.44], [6.059999999999999, 2.7199999999999998, 4.970000000000001, 1.78], [7.483333333333334, 2.8833333333333333, 6.433333333333334, 1.9833333333333332], [5.691666666666667, 2.766666666666667, 4.175, 1.2666666666666666], [4.9, 2.5, 4.5, 1.7]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 3, 2, 3, 3, 2, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.422727272727275, 2.9954545454545456, 5.431818181818181, 2.0954545454545452], [4.89, 3.285, 1.4499999999999997, 0.22000000000000006], [7.533333333333334, 3.1, 6.250000000000001, 2.0166666666666666], [5.25, 2.425, 3.5124999999999997, 1.075], [4.433333333333334, 2.9166666666666665, 1.3166666666666667, 0.19999999999999998], [5.358333333333333, 3.858333333333333, 1.5083333333333335, 0.30833333333333335], [6.0181818181818185, 2.8454545454545457, 4.427272727272728, 1.3909090909090909], [6.025, 2.825, 4.85, 1.8499999999999999]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 3, 2, 1, 1, 2, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.388888888888889, 3.1, 6.211111111111111, 2.0555555555555554], [4.8500000000000005, 3.2454545454545456, 1.4727272727272729, 0.25000000000000006], [5.807142857142857, 2.5714285714285716, 4.128571428571429, 1.2428571428571427], [4.9, 2.5, 4.5, 1.7], [6.437500000000001, 3.0374999999999996, 4.66875, 1.5], [5.916666666666667, 2.6166666666666667, 4.983333333333333, 1.8499999999999999], [5.357142857142857, 2.5285714285714285, 3.6, 1.1428571428571428], [5.42, 3.78, 1.5, 0.26], [6.41875, 3.0312499999999996, 5.481249999999999, 2.09375]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 3, 2, 3, 2, 1, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[38, 1, 1, 2, 28, 2, 24, 36, 12, 1, 23, 52, 22, 2, 33, 33, 20, 29, 2, 1, 1, 25, 26, 10, 30, 31, 36, 29, 26, 49, 1, 2, 41, 38, 35, 33, 26, 36, 49, 26, 32, 5, 16, 37, 55, 49, 22, 31, 14, 27, 20, 21, 12, 25, 17, 31, 35, 31, 29, 44, 24, 59, 17, 30, 21, 38, 34, 35, 29, 31, 35, 33, 22, 15, 30, 29, 27, 25, 3, 18, 33, 43, 13, 34, 26, 32, 43, 13, 44, 41, 36, 43, 45, 42, 52, 11, 21, 13, 46, 28, 39, 38, 43, 26, 30, 49, 24, 34, 39, 27, 22, 49, 31, 42, 48, 47, 65, 47, 45, 28, 31, 45, 40, 36, 33, 35, 34, 37, 44, 20, 18, 30, 49, 31, 4, 35, 17, 62, 47, 23, 65, 54, 41, 19, 40, 39, 55, 33, 41, 51, 28, 61, 32, 50, 13, 29, 2, 19, 54, 24, 30, 33, 36, 33, 29, 14, 38, 37, 32, 25, 42, 69, 50, 81, 35, 32, 74, 49, 36, 26, 33, 27, 34, 53, 43, 20, 40, 46, 16, 66, 25, 52, 1, 29, 28, 46, 35, 53, 42, 40, 30, 28, 36, 35, 46, 57, 50, 41, 42, 26, 27, 57, 45, 38, 56, 26, 30, 34, 41, 58, 28, 22, 62, 44, 29, 40, 48, 36, 51, 48, 81, 49, 48, 54, 1, 34, 50, 40, 42, 51, 23, 19, 36, 33, 31, 1, 35, 28, 24, 31, 38, 8, 43, 47, 55, 32, 21, 29, 28, 44, 37, 37, 30, 38, 1, 51, 30, 38, 44, 11, 34, 50, 39, 32, 26, 3, 27, 22, 27, 20, 51, 36, 34, 23, 53, 20, 44, 51, 20, 41, 42, 65, 46, 1, 32, 36, 25, 44, 37, 32]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6330000000000001, speedup = 0.3627898516581893, eval_ratio = 0.041732)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.35503472222222227,"recall":0.35503472222222227,"f1":null,"seconds":6.892532110214233e-5,"exhaustive_search_seconds":0.0003962963819503784,"evaluations":339.359375,"distances_sum":1775.2186134878007}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5225694444444446,"recall":0.5225694444444446,"f1":null,"seconds":0.00010324269533157349,"exhaustive_search_seconds":0.0003962963819503784,"evaluations":379.546875,"distances_sum":1659.3298136316143}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6223958333333328,"recall":0.6223958333333328,"f1":null,"seconds":0.00013510696589946747,"exhaustive_search_seconds":0.0003962963819503784,"evaluations":419.765625,"distances_sum":1615.355052867987}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7074652777777771,"recall":0.7074652777777771,"f1":0.7074652777777771,"seconds":0.00016144290566444397,"exhaustive_search_seconds":0.0003962963819503784,"evaluations":460.9765625,"distances_sum":1584.9154037147534}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7786458333333325,"recall":0.7786458333333325,"f1":0.7786458333333325,"seconds":0.00019001588225364685,"exhaustive_search_seconds":0.0003962963819503784,"evaluations":502.9765625,"distances_sum":1566.7186992745528}
KCenters.DeloneInvIndex> reached performance {"precision":0.8185763888888876,"recall":0.8185763888888876,"f1":0.8185763888888876,"seconds":0.00022392533719539642,"exhaustive_search_seconds":0.0003962963819503784,"evaluations":542.0625,"distances_sum":1556.8355037451167}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8170000000000001, speedup = 1.7943895856140997, eval_ratio = 0.053858)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
