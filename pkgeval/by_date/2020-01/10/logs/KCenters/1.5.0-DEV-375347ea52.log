Julia Version 1.5.0-DEV.35
Commit 375347ea52 (2020-01-09 03:35 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Tables ────────────────────── v0.2.11
 Installed MappedArrays ──────────────── v0.2.2
 Installed LearnBase ─────────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.8
 Installed Parsers ───────────────────── v0.3.10
 Installed TableTraits ───────────────── v1.0.0
 Installed DataStructures ────────────── v0.17.7
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataValueInterfaces ───────── v1.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed StatsBase ─────────────────── v0.32.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Reexport ──────────────────── v0.2.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed DataFrames ────────────────── v0.20.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed Compat ────────────────────── v3.2.0
 Installed JSON ──────────────────────── v0.21.0
 Installed CategoricalArrays ─────────── v0.7.6
 Installed SimilaritySearch ──────────── v0.3.17
 Installed PooledArrays ──────────────── v0.5.3
 Installed OrderedCollections ────────── v1.1.0
 Installed MLDataUtils ───────────────── v0.5.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.6
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.7
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_qTeFuX/Project.toml`
 [no changes]
  Updating `/tmp/jl_qTeFuX/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_qTeFuX/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 133.73
[ Info: 73.64
[ Info: 40.55999999999999
[ Info: 24.540000000000006
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999835129265
[ Info: 76.3000011447471
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.418559934574837
inertia(cdnet.distances) = 27.732004041449308
inertia(crand.distances) = 21.415972292176747
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.515625,"f1":null,"seconds":4.891306161880493e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":6.7734375,"distances_sum":1455.2264103564335}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3544921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.3544921875,"f1":0.5094794094794094,"seconds":3.591179847717285e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":5.46875,"distances_sum":1006.3856867292832}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.515625,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.515625,"f1":null,"seconds":4.891306161880493e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":6.7734375,"distances_sum":1455.2264103564335}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9246966575091581,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.71875,"distances_sum":2686.6142554609046}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9246966575091581,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.71875,"distances_sum":2686.6142554609046}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9717834249084254,"seconds":6.450340151786804e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.9453125,"distances_sum":3066.3776540314466}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9669299450549453,"seconds":7.322058081626892e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8984375,"distances_sum":3024.189951632699}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9628205128205132,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.9453125,"distances_sum":2975.035692609106}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9717834249084254,"seconds":6.450340151786804e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.9453125,"distances_sum":3066.3776540314466}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9717834249084254,"seconds":6.450340151786804e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.9453125,"distances_sum":3066.3776540314466}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8363067488067496,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.1640625,"distances_sum":1992.1689381342592}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3974609375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3974609375,"f1":null,"seconds":3.6153942346572876e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.171875,"distances_sum":964.5410439007978}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7373046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7373046875,"f1":0.8363067488067496,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.1640625,"distances_sum":1992.1689381342592}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.900678488178489,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6796875,"distances_sum":2301.9854637342883}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8412275224775233,"seconds":4.7031790018081665e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.1328125,"distances_sum":2003.881821080478}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.900678488178489,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6796875,"distances_sum":2301.9854637342883}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.956553342490843,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8125,"distances_sum":2680.7551451626255}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9671188186813189,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.875,"distances_sum":2752.5371690733464}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9589342948717955,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.875,"distances_sum":2682.848427515023}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9374370421245427,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7421875,"distances_sum":2562.0818662054135}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9671188186813189,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.875,"distances_sum":2752.5371690733464}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9671188186813189,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.875,"distances_sum":2752.5371690733464}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.7211600899100906,"seconds":4.230067133903503e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.3046875,"distances_sum":1398.0985840084973}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2216796875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2216796875,"f1":null,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.0625,"distances_sum":499.6195080883339}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.7013699841824848,"seconds":4.26173210144043e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.3046875,"distances_sum":1281.602222132694}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.583984375,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.583984375,"f1":0.7211600899100906,"seconds":4.230067133903503e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.3046875,"distances_sum":1398.0985840084973}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.8019074675324683,"seconds":4.995614290237427e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.0625,"distances_sum":1687.798946071365}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7933502261627268,"seconds":4.604458808898926e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.9453125,"distances_sum":1668.9692618256124}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9370020604395614,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.71875,"distances_sum":2406.451434082358}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9370020604395614,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.71875,"distances_sum":2406.451434082358}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9661858974358977,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":2686.4658735011362}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9593978937728943,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":2619.3041791909823}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9661858974358977,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":2686.4658735011362}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9661858974358977,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":2686.4658735011362}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.634765625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.634765625,"f1":0.7638261044511053,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.2890625,"distances_sum":1585.051172207876}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.634765625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.634765625,"f1":0.7638261044511053,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.2890625,"distances_sum":1585.051172207876}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9556604853479859,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.90625,"distances_sum":2668.912147646558}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9556604853479859,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.90625,"distances_sum":2668.912147646558}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9663518772893778,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.96875,"distances_sum":2729.5291388240225}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9663518772893778,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.96875,"distances_sum":2729.5291388240225}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9663518772893778,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.96875,"distances_sum":2729.5291388240225}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.310546875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.310546875,"f1":null,"seconds":3.2205134630203247e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":5.09375,"distances_sum":820.5936961847536}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8346960331335339,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.3671875,"distances_sum":1959.3007184652422}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.73046875,"f1":0.8346960331335339,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.3671875,"distances_sum":1959.3007184652422}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9204358141858151,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7734375,"distances_sum":2477.9352900071785}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9444482600732605,"seconds":6.4782798290252686e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.71875,"distances_sum":2723.3426880031584}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9410459332334338,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.78125,"distances_sum":2676.254827884687}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9577266483516489,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7890625,"distances_sum":2782.0260575743314}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9097735597735603,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.671875,"distances_sum":2417.993550126039}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9577266483516489,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7890625,"distances_sum":2782.0260575743314}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9772321428571431,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9296875,"distances_sum":2918.49967255217}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731971153846158,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.953125,"distances_sum":2878.282119982994}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9637133699633704,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.890625,"distances_sum":2806.109086284508}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9642857142857147,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8828125,"distances_sum":2830.976225001659}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9772321428571431,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9296875,"distances_sum":2918.49967255217}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9772321428571431,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9296875,"distances_sum":2918.49967255217}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6484375,"f1":0.7722463300588308,"seconds":4.990026354789734e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.453125,"distances_sum":1640.2374085238516}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.228515625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.228515625,"f1":null,"seconds":3.4496188163757324e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":6.703125,"distances_sum":519.1060647892117}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.4347176551818848e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":6.7890625,"distances_sum":552.7695960013097}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8063445235320243,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.421875,"distances_sum":1778.5718828891806}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6923828125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6923828125,"f1":0.8063445235320243,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.421875,"distances_sum":1778.5718828891806}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9422905219780222,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.890625,"distances_sum":2550.541598266587}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9338859057609062,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.890625,"distances_sum":2496.436954626956}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9449919871794876,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.96875,"distances_sum":2572.6423238956845}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9543211996337002,"seconds":6.441026926040649e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9140625,"distances_sum":2660.5814772109425}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9494136072261078,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8984375,"distances_sum":2618.4567600485184}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.891152077089578,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.7578125,"distances_sum":2252.6812475882157}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9543211996337002,"seconds":6.441026926040649e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9140625,"distances_sum":2660.5814772109425}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9727678571428573,"seconds":6.277114152908325e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9765625,"distances_sum":2781.3557466851653}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.954939331501832,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8984375,"distances_sum":2695.13841051491}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9783482142857146,"seconds":6.845220923423767e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9921875,"distances_sum":2808.128790768661}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9821829212454214,"seconds":6.485730409622192e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9765625,"distances_sum":2869.9889289811867}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9821829212454214,"seconds":6.485730409622192e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9765625,"distances_sum":2869.9889289811867}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9821829212454214,"seconds":6.485730409622192e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9765625,"distances_sum":2869.9889289811867}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.392578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.392578125,"f1":null,"seconds":3.945082426071167e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.53125,"distances_sum":895.5967835574147}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2080078125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2080078125,"f1":null,"seconds":3.207474946975708e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":5.8203125,"distances_sum":527.5324634072415}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2099609375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2099609375,"f1":null,"seconds":3.4570693969726562e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":5.9453125,"distances_sum":541.5689138185486}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8703296703296712,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.4921875,"distances_sum":2088.2530240955944}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8703296703296712,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.4921875,"distances_sum":2088.2530240955944}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9510874542124549,"seconds":0.0001040380448102951,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8125,"distances_sum":2683.5644264842945}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9510874542124549,"seconds":0.0001040380448102951,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8125,"distances_sum":2683.5644264842945}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9705185439560444,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.953125,"distances_sum":2799.4887950526377}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9547650266400268,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8046875,"distances_sum":2706.8408021960163}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9544184981684987,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8515625,"distances_sum":2699.1730880933314}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9548820970695976,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8125,"distances_sum":2718.6777518341105}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9705185439560444,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.953125,"distances_sum":2799.4887950526377}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9705185439560444,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.953125,"distances_sum":2799.4887950526377}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.205078125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.205078125,"f1":null,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.9921875,"distances_sum":443.781161761355}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.205078125,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.205078125,"f1":null,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.9921875,"distances_sum":443.781161761355}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.205078125,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.205078125,"f1":null,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.9921875,"distances_sum":443.781161761355}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.862796058108559,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.8046875,"distances_sum":1659.2319904263186}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.878093781218782,"seconds":4.654750227928162e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.875,"distances_sum":1774.0408155335551}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.791015625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.791015625,"f1":0.878093781218782,"seconds":4.654750227928162e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.875,"distances_sum":1774.0408155335551}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9015739468864478,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.1796875,"distances_sum":1892.6813250921984}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.958917124542125,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8671875,"distances_sum":2275.6494268120955}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.958917124542125,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8671875,"distances_sum":2275.6494268120955}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9799107142857146,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9375,"distances_sum":2428.225268488154}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9777186355311358,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9140625,"distances_sum":2407.9206837819806}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9799107142857146,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9375,"distances_sum":2428.225268488154}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9799107142857146,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9375,"distances_sum":2428.225268488154}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.37109375,"f1":null,"seconds":4.088506102561951e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":5.734375,"distances_sum":751.8831247101137}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5498046875,"f1":0.6936860014985019,"seconds":3.93204391002655e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":6.828125,"distances_sum":1118.1482615675652}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8551750333000342,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.0859375,"distances_sum":1781.151317330648}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8551750333000342,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.0859375,"distances_sum":1781.151317330648}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9443166208791215,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.7421875,"distances_sum":2368.612508926567}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9409715284715288,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.828125,"distances_sum":2332.573968770329}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9249802281052285,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.7890625,"distances_sum":2205.4201645268954}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9400469322344329,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.6640625,"distances_sum":2380.0458038232914}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9321943681318687,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.84375,"distances_sum":2267.334644822295}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8986128454878464,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.40625,"distances_sum":2050.300446933517}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8606544497169506,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.15625,"distances_sum":1748.4284291118613}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9443166208791215,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.7421875,"distances_sum":2368.612508926567}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.961927655677656,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.828125,"distances_sum":2495.5950400221363}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9561584249084255,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8515625,"distances_sum":2451.4219861669803}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9704269688644696,"seconds":6.170943379402161e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8828125,"distances_sum":2537.9920901496625}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":10,"bsize":12}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658310439560445,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8984375,"distances_sum":2498.624167509988}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678571428571432,"seconds":6.584450602531433e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.890625,"distances_sum":2536.906423217026}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9703869047619051,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.9140625,"distances_sum":2544.1562618728462}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":10,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9704269688644696,"seconds":6.170943379402161e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8828125,"distances_sum":2537.9920901496625}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":10,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9704269688644696,"seconds":6.170943379402161e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8828125,"distances_sum":2537.9920901496625}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1826171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1826171875,"f1":null,"seconds":2.9262155294418335e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":4.7890625,"distances_sum":405.1344141298936}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37109375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.37109375,"f1":null,"seconds":3.6638230085372925e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.8125,"distances_sum":809.8292201636236}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.37109375,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.37109375,"f1":null,"seconds":3.6638230085372925e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.8125,"distances_sum":809.8292201636236}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9061412545787552,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.453125,"distances_sum":2043.7090495998611}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7018752081252088,"seconds":4.239380359649658e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.09375,"distances_sum":1263.011389098792}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7928184662559671,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.765625,"distances_sum":1552.0896012071983}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.6513671875,"f1":null,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.703125,"distances_sum":1473.135136566999}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7734208499833507,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.6875,"distances_sum":1469.4155327432989}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.8379693223443233,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.984375,"distances_sum":1701.0130943942916}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6328125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6328125,"f1":0.7633475899100904,"seconds":4.686415195465088e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.4453125,"distances_sum":1446.0818497324672}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8388671875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8388671875,"f1":0.9061412545787552,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.453125,"distances_sum":2043.7090495998611}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9520146520146524,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8203125,"distances_sum":2372.5100218851358}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9606971153846159,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.75,"distances_sum":2469.434625616034}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9265739468864472,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6953125,"distances_sum":2185.913917735608}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9578353937728943,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.71875,"distances_sum":2447.0604047287716}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9388111888111899,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6015625,"distances_sum":2340.112298389642}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9328983516483524,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6640625,"distances_sum":2250.3850184519306}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9130983599733606,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5,"distances_sum":2106.3256605022434}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9606971153846159,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.75,"distances_sum":2469.434625616034}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9606971153846159,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.75,"distances_sum":2469.434625616034}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3935546875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3935546875,"f1":null,"seconds":3.6973506212234497e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":6.0,"distances_sum":792.5692822882235}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3935546875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3935546875,"f1":null,"seconds":3.6973506212234497e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":6.0,"distances_sum":792.5692822882235}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9023981227106234,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.4375,"distances_sum":2013.1945658035143}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8310546875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8310546875,"f1":0.9023981227106234,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.4375,"distances_sum":2013.1945658035143}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9460107600732607,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.7265625,"distances_sum":2395.9915491736397}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9460107600732607,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.7265625,"distances_sum":2395.9915491736397}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9052734375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9460107600732607,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.7265625,"distances_sum":2395.9915491736397}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.236328125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.236328125,"f1":null,"seconds":3.1385570764541626e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.609375,"distances_sum":490.9486534967413}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.236328125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.236328125,"f1":null,"seconds":3.1385570764541626e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.609375,"distances_sum":490.9486534967413}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.548828125,"f1":0.6917337870462875,"seconds":4.207715392112732e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.6484375,"distances_sum":1238.2625459779717}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8736669580419589,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7421875,"distances_sum":1941.8396515148}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1953125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1953125,"f1":null,"seconds":3.1422823667526245e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":5.4765625,"distances_sum":455.00211831046096}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8736669580419589,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7421875,"distances_sum":1941.8396515148}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9392055860805867,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.734375,"distances_sum":2467.6653281767713}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9395032051282056,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7890625,"distances_sum":2465.9906631826043}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8925002081252088,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8046875,"distances_sum":2110.739686809595}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9395032051282056,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7890625,"distances_sum":2465.9906631826043}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9759500915750917,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8984375,"distances_sum":2717.2265031131187}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9579155219780222,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8828125,"distances_sum":2569.9514226009733}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.945968094405595,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.875,"distances_sum":2462.9285614508094}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620592948717952,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9140625,"distances_sum":2596.7653981016542}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9488724816849823,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.75,"distances_sum":2535.9776274614555}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9709134615384619,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.96875,"distances_sum":2654.8387522032485}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9759500915750917,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8984375,"distances_sum":2717.2265031131187}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9759500915750917,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8984375,"distances_sum":2717.2265031131187}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8632164710289718,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.515625,"distances_sum":1817.7048314570022}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3857421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3857421875,"f1":null,"seconds":3.8389116525650024e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.21875,"distances_sum":923.5277621799355}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8629708832833843,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.3984375,"distances_sum":1869.9968118347267}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8629708832833843,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.3984375,"distances_sum":1869.9968118347267}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.950972985347986,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8359375,"distances_sum":2479.316979620979}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9536489552114558,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8046875,"distances_sum":2504.213696597795}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605139652014655,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8515625,"distances_sum":2533.2950757166486}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9605139652014655,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8515625,"distances_sum":2533.2950757166486}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9716918498168502,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8828125,"distances_sum":2612.649268024501}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9743532509157512,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9375,"distances_sum":2617.031708689337}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707818223443225,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.953125,"distances_sum":2580.2827419576156}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9645489926739932,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.890625,"distances_sum":2553.778899424806}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9636904761904767,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.921875,"distances_sum":2534.674055365215}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9743532509157512,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9375,"distances_sum":2617.031708689337}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9743532509157512,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9375,"distances_sum":2617.031708689337}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5419921875,"f1":null,"seconds":3.87243926525116e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.828125,"distances_sum":1152.184127489231}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8539611430236439,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.109375,"distances_sum":1785.2975997651745}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8539611430236439,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.109375,"distances_sum":1785.2975997651745}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9079415376290383,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.5625,"distances_sum":2107.706603619587}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9370249542124548,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.765625,"distances_sum":2339.7168292600895}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9370249542124548,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.765625,"distances_sum":2339.7168292600895}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758585164835167,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9140625,"distances_sum":2628.897373412233}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9715602106227109,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.890625,"distances_sum":2591.9713644610215}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758585164835167,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9140625,"distances_sum":2628.897373412233}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758585164835167,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9140625,"distances_sum":2628.897373412233}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":null,"recall":0.6787109375,"f1":null,"seconds":4.520639777183533e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.671875,"distances_sum":1290.797564128159}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.8038123334998343,"seconds":4.317611455917358e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.75,"distances_sum":1307.773500659632}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6806640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6806640625,"f1":0.8038123334998343,"seconds":4.317611455917358e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.75,"distances_sum":1307.773500659632}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9364187895437902,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.796875,"distances_sum":1975.9465213955887}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.94710705960706,"seconds":6.851181387901306e-5,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.875,"distances_sum":1984.2630164475022}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9488553113553121,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.8671875,"distances_sum":1985.5060437715686}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9488553113553121,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.8671875,"distances_sum":1985.5060437715686}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9699404761904766,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.953125,"distances_sum":2086.649463635244}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570570054945059,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.90625,"distances_sum":2055.7354211922748}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9807291666666669,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9765625,"distances_sum":2191.4925865979926}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9737179487179491,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9765625,"distances_sum":2135.814788521792}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807291666666669,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9765625,"distances_sum":2191.4925865979926}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807291666666669,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9765625,"distances_sum":2191.4925865979926}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.512948751449585e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.203125,"distances_sum":812.1269405678332}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4169921875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.512948751449585e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.203125,"distances_sum":812.1269405678332}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9013252372627382,"seconds":6.472691893577576e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7734375,"distances_sum":1864.1679984541686}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8078872516372524,"seconds":4.4461339712142944e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.0,"distances_sum":1493.1237087372126}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8649355852480859,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.5546875,"distances_sum":1728.2542379964727}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8310546875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8310546875,"f1":0.9013252372627382,"seconds":6.472691893577576e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7734375,"distances_sum":1864.1679984541686}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9256009615384623,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8125,"distances_sum":2004.682203764902}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9496737637362646,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.796875,"distances_sum":2193.7642714933513}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9496737637362646,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.796875,"distances_sum":2193.7642714933513}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9496737637362646,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.796875,"distances_sum":2193.7642714933513}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8144725066600074,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.1875,"distances_sum":1492.7073762458188}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":3.7122517824172974e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.5,"distances_sum":438.8125135068645}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.69921875,"f1":0.8144725066600074,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.1875,"distances_sum":1492.7073762458188}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9567937271062276,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9921875,"distances_sum":2151.364266169793}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9567937271062276,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9921875,"distances_sum":2151.364266169793}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9697401556776558,"seconds":6.5211206674575806e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9921875,"distances_sum":2242.1399841142056}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790579212454213,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":9.0,"distances_sum":2309.0810770708763}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9634329212454217,"seconds":6.372109055519104e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9765625,"distances_sum":2186.479043607381}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790579212454213,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":9.0,"distances_sum":2309.0810770708763}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790579212454213,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":9.0,"distances_sum":2309.0810770708763}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4287109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4287109375,"f1":null,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.234375,"distances_sum":789.5425978235286}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7792535589410599,"seconds":4.762783646583557e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.578125,"distances_sum":1307.4953774320056}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6533203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6533203125,"f1":0.7792535589410599,"seconds":4.762783646583557e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.578125,"distances_sum":1307.4953774320056}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9204987720612726,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5625,"distances_sum":1917.9495651310226}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9508814102564108,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7421875,"distances_sum":2126.540825295922}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9508814102564108,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7421875,"distances_sum":2126.540825295922}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9660771520146525,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.828125,"distances_sum":2222.8675091849504}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9660771520146525,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.828125,"distances_sum":2222.8675091849504}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9660771520146525,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.828125,"distances_sum":2222.8675091849504}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1962890625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1962890625,"f1":null,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.1328125,"distances_sum":352.56903282855177}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1962890625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1962890625,"f1":null,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.1328125,"distances_sum":352.56903282855177}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8480524683649692,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.4453125,"distances_sum":1501.9248982629267}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8480524683649692,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.4453125,"distances_sum":1501.9248982629267}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8584889069264078,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.4921875,"distances_sum":1554.9214203598242}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9468063186813189,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8359375,"distances_sum":2008.4898801465542}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9468063186813189,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8359375,"distances_sum":2008.4898801465542}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9052734375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9468063186813189,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8359375,"distances_sum":2008.4898801465542}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7074744699744707,"seconds":4.4405460357666016e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.109375,"distances_sum":1109.339087770693}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.823032176157177,"seconds":4.567205905914307e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.453125,"distances_sum":1418.2468320928058}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.712890625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.712890625,"f1":0.823032176157177,"seconds":4.567205905914307e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.453125,"distances_sum":1418.2468320928058}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8551089535464542,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6015625,"distances_sum":1551.4214600222735}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8665782134532142,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6640625,"distances_sum":1587.608533479311}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9364328379953386,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.828125,"distances_sum":1937.4930087685143}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.8996284965034972,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.671875,"distances_sum":1746.451020967447}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9364328379953386,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.828125,"distances_sum":1937.4930087685143}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9726762820512826,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9453125,"distances_sum":2157.393733326442}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696657509157511,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.90625,"distances_sum":2120.8627345967316}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9476107226107232,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.859375,"distances_sum":2021.039364015012}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9619479478854485,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9296875,"distances_sum":2099.7220646622586}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9726762820512826,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9453125,"distances_sum":2157.393733326442}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9726762820512826,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9453125,"distances_sum":2157.393733326442}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.158203125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.158203125,"f1":null,"seconds":2.434477210044861e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":4.859375,"distances_sum":292.8224818597564}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8394215159840169,"seconds":4.854053258895874e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.78125,"distances_sum":1509.7552316444342}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4033203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4033203125,"f1":null,"seconds":3.5278499126434326e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.15625,"distances_sum":747.1712900725144}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.740234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.740234375,"f1":0.8394215159840169,"seconds":4.854053258895874e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.78125,"distances_sum":1509.7552316444342}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9495077838827843,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.671875,"distances_sum":1997.318156095511}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8877523518148526,"seconds":4.867091774940491e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.0,"distances_sum":1670.8194319807715}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9495077838827843,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.671875,"distances_sum":1997.318156095511}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.978571428571429,"seconds":6.485730409622192e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9140625,"distances_sum":2160.857043161266}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599587912087917,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.7734375,"distances_sum":2068.832765261598}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9669127747252751,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8125,"distances_sum":2110.6611786571248}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.978571428571429,"seconds":6.485730409622192e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9140625,"distances_sum":2160.857043161266}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.978571428571429,"seconds":6.485730409622192e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9140625,"distances_sum":2160.857043161266}}, n: 9
inertia(cfft.distances) = 19.4380576923077
inertia(cdnet.distances) = 25.560331776533083
inertia(crand.distances) = 20.9414967031595
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8733333333333334
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9511111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9266666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9177777777777777
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9400000000000001
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9222222222222222
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9111111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9266666666666667
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9155555555555557
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9066666666666667
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8577777777777778
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 3, 2, 1, 3, 2, 3, 3, 3, 1, 2, 3, 2, 3, 3, 3, 2, 1, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.3659333372381236] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3659333372381236, 0.19559489511585143] ***
*** starting iteration: 2; err: [Inf, 0.3659333372381236, 0.19559489511585143] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3659333372381236, 0.19559489511585143, 0.1843923647268862] ***
*** starting iteration: 3; err: [Inf, 0.3659333372381236, 0.19559489511585143, 0.1843923647268862] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3659333372381236, 0.19559489511585143, 0.1843923647268862, 0.18315645385279025] ***
*** starting iteration: 4; err: [Inf, 0.3659333372381236, 0.19559489511585143, 0.1843923647268862, 0.18315645385279025] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3659333372381236, 0.19559489511585143, 0.1843923647268862, 0.18315645385279025, 0.18139123328150716] ***
*** starting iteration: 5; err: [Inf, 0.3659333372381236, 0.19559489511585143, 0.1843923647268862, 0.18315645385279025, 0.18139123328150716] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3659333372381236, 0.19559489511585143, 0.1843923647268862, 0.18315645385279025, 0.18139123328150716, 0.17983372276164833] ***
*** starting iteration: 6; err: [Inf, 0.3659333372381236, 0.19559489511585143, 0.1843923647268862, 0.18315645385279025, 0.18139123328150716, 0.17983372276164833] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3659333372381236, 0.19559489511585143, 0.1843923647268862, 0.18315645385279025, 0.18139123328150716, 0.17983372276164833, 0.1796338413537147] ***
*** finished computation of 12 references, err: [Inf, 0.3659333372381236, 0.19559489511585143, 0.1843923647268862, 0.18315645385279025, 0.18139123328150716, 0.17983372276164833, 0.1796338413537147] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 13]]
** centroid: 1, normalized-entropy: 0.943601631299382, [(2, 23), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 5, 1]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 5), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 14 centroids; started with 12
acc = 0.94
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 3.5375999819598642] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5375999819598642, 0.5963613637932361] ***
*** starting iteration: 2; err: [Inf, 3.5375999819598642, 0.5963613637932361] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5375999819598642, 0.5963613637932361, 0.49398117450932005] ***
*** starting iteration: 3; err: [Inf, 3.5375999819598642, 0.5963613637932361, 0.49398117450932005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5375999819598642, 0.5963613637932361, 0.49398117450932005, 0.4918526656924908] ***
*** finished computation of 3 references, err: [Inf, 3.5375999819598642, 0.5963613637932361, 0.49398117450932005, 0.4918526656924908] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 2, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7161000005807661] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7161000005807661, 0.5805429571288805] ***
*** starting iteration: 2; err: [Inf, 0.7161000005807661, 0.5805429571288805] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7161000005807661, 0.5805429571288805, 0.5720238114002782] ***
*** starting iteration: 3; err: [Inf, 0.7161000005807661, 0.5805429571288805, 0.5720238114002782] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7161000005807661, 0.5805429571288805, 0.5720238114002782, 0.5688959685352412] ***
*** finished computation of 3 references, err: [Inf, 0.7161000005807661, 0.5805429571288805, 0.5720238114002782, 0.5688959685352412] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 26]]
** centroid: 1, normalized-entropy: 0.6373874992221911, [(2, 5), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 4]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 28), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4547000008273192] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4547000008273192, 0.5870270640900227] ***
*** starting iteration: 2; err: [Inf, 1.4547000008273192, 0.5870270640900227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4547000008273192, 0.5870270640900227, 0.564854880497621] ***
*** starting iteration: 3; err: [Inf, 1.4547000008273192, 0.5870270640900227, 0.564854880497621] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4547000008273192, 0.5870270640900227, 0.564854880497621, 0.5592805989890368] ***
*** finished computation of 3 references, err: [Inf, 1.4547000008273192, 0.5870270640900227, 0.564854880497621, 0.5592805989890368] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 7, 33]]
** centroid: 1, normalized-entropy: 0.6690158350565576, [(2, 7), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 2]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1409999880177473] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1409999880177473, 0.5228612640575855] ***
*** finished computation of 3 references, err: [Inf, 1.1409999880177473, 0.5228612640575855] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 5]]
** centroid: 1, normalized-entropy: 0.6136190195993708, [(2, 28), (3, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 30]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 5), (3, 30)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.030700006232814] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.030700006232814, 0.9895288431757413] ***
*** finished computation of 3 references, err: [Inf, 2.030700006232814, 0.9895288431757413] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 30]]
** centroid: 2, normalized-entropy: 0.9992492479956566, [(2, 32), (3, 30)]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6866999945095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6866999945095, 0.5711766790754029] ***
*** finished computation of 3 references, err: [Inf, 0.6866999945095, 0.5711766790754029] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 34]]
** centroid: 1, normalized-entropy: 0.7401470427139037, [(2, 9), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6208000070973659] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6208000070973659, 0.39110993744499817] ***
*** finished computation of 7 references, err: [Inf, 0.6208000070973659, 0.39110993744499817] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 8]]
** centroid: 1, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 11]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [10, 1, 0]]
** centroid: 5, normalized-entropy: 0.43949698692151346, [(1, 10), (2, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5144000057094225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5144000057094225, 0.3332369141705941] ***
*** finished computation of 7 references, err: [Inf, 0.5144000057094225, 0.3332369141705941] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 6, 13]]
** centroid: 6, normalized-entropy: 0.8997437586982626, [(2, 6), (3, 13)]
*** center 7: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4469000040522926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4469000040522926, 0.2571068788707141] ***
*** finished computation of 7 references, err: [Inf, 0.4469000040522926, 0.2571068788707141] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 5]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(2, 6), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 6, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.5583999865901006] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5583999865901006, 0.5439979192048121] ***
*** starting iteration: 2; err: [Inf, 1.5583999865901006, 0.5439979192048121] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5583999865901006, 0.5439979192048121, 0.5252493618623515] ***
*** starting iteration: 3; err: [Inf, 1.5583999865901006, 0.5439979192048121, 0.5252493618623515] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5583999865901006, 0.5439979192048121, 0.5252493618623515, 0.5164330840946126] ***
*** finished computation of 3 references, err: [Inf, 1.5583999865901006, 0.5439979192048121, 0.5252493618623515, 0.5164330840946126] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 5, 30]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 5), (3, 30)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 5]]
** centroid: 3, normalized-entropy: 0.6136190195993708, [(2, 28), (3, 5)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2668999945143042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2668999945143042, 0.9733980699099389] ***
*** starting iteration: 2; err: [Inf, 1.2668999945143042, 0.9733980699099389] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2668999945143042, 0.9733980699099389, 0.9697331963976916] ***
*** starting iteration: 3; err: [Inf, 1.2668999945143042, 0.9733980699099389, 0.9697331963976916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2668999945143042, 0.9733980699099389, 0.9697331963976916, 0.9611301636691105] ***
*** finished computation of 3 references, err: [Inf, 1.2668999945143042, 0.9733980699099389, 0.9697331963976916, 0.9611301636691105] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [18, 2, 0]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(1, 18), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 30]]
** centroid: 3, normalized-entropy: 0.999806132804711, [(2, 31), (3, 30)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8027999981998861] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8027999981998861, 0.5565005507075793] ***
*** starting iteration: 2; err: [Inf, 0.8027999981998861, 0.5565005507075793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8027999981998861, 0.5565005507075793, 0.5495368013379651] ***
*** starting iteration: 3; err: [Inf, 0.8027999981998861, 0.5565005507075793, 0.5495368013379651] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8027999981998861, 0.5565005507075793, 0.5495368013379651, 0.5366487634207938] ***
*** finished computation of 3 references, err: [Inf, 0.8027999981998861, 0.5565005507075793, 0.5495368013379651, 0.5366487634207938] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 3]]
** centroid: 2, normalized-entropy: 0.4220005168831531, [(2, 32), (3, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 32]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(2, 2), (3, 32)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.2995000087655217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.2995000087655217, 1.2321252542643817] ***
*** starting iteration: 2; err: [Inf, 3.2995000087655217, 1.2321252542643817] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.2995000087655217, 1.2321252542643817, 0.533153460055904] ***
*** starting iteration: 3; err: [Inf, 3.2995000087655217, 1.2321252542643817, 0.533153460055904] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.2995000087655217, 1.2321252542643817, 0.533153460055904, 0.49498104587223857] ***
*** finished computation of 3 references, err: [Inf, 3.2995000087655217, 1.2321252542643817, 0.533153460055904, 0.49498104587223857] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3711999966458024] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3711999966458024, 0.6150890300987406] ***
*** starting iteration: 2; err: [Inf, 1.3711999966458024, 0.6150890300987406] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3711999966458024, 0.6150890300987406, 0.5680380410257879] ***
*** starting iteration: 3; err: [Inf, 1.3711999966458024, 0.6150890300987406, 0.5680380410257879] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3711999966458024, 0.6150890300987406, 0.5680380410257879, 0.5637527631385834] ***
*** finished computation of 3 references, err: [Inf, 1.3711999966458024, 0.6150890300987406, 0.5680380410257879, 0.5637527631385834] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 20]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6096000020865189] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6096000020865189, 0.5188286222113975] ***
*** starting iteration: 2; err: [Inf, 0.6096000020865189, 0.5188286222113975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6096000020865189, 0.5188286222113975, 0.5179462789705407] ***
*** finished computation of 3 references, err: [Inf, 0.6096000020865189, 0.5188286222113975, 0.5179462789705407] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 26]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7095000087564876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7095000087564876, 0.35558560482868173] ***
*** finished computation of 7 references, err: [Inf, 0.7095000087564876, 0.35558560482868173] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 24, 5]]
** centroid: 2, normalized-entropy: 0.6631968402398286, [(2, 24), (3, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 9]]
** centroid: 4, normalized-entropy: 1.0, [(2, 9), (3, 9)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5542000044108037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5542000044108037, 0.290169441159202] ***
*** finished computation of 7 references, err: [Inf, 0.5542000044108037, 0.290169441159202] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 16]]
** centroid: 6, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40370000632330416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40370000632330416, 0.2620442913550048] ***
*** finished computation of 7 references, err: [Inf, 0.40370000632330416, 0.2620442913550048] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 12]]
** centroid: 1, normalized-entropy: 1.0, [(2, 12), (3, 12)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 3: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4939000077639054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4939000077639054, 0.2975202924131814] ***
*** starting iteration: 2; err: [Inf, 0.4939000077639054, 0.2975202924131814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4939000077639054, 0.2975202924131814, 0.2687794034364755] ***
*** starting iteration: 3; err: [Inf, 0.4939000077639054, 0.2975202924131814, 0.2687794034364755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4939000077639054, 0.2975202924131814, 0.2687794034364755, 0.2595284443667473] ***
*** finished computation of 7 references, err: [Inf, 0.4939000077639054, 0.2975202924131814, 0.2687794034364755, 0.2595284443667473] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 8]]
** centroid: 6, normalized-entropy: 1.0, [(2, 8), (3, 8)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8674999984435513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8674999984435513, 0.4171607547498605] ***
*** starting iteration: 2; err: [Inf, 0.8674999984435513, 0.4171607547498605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8674999984435513, 0.4171607547498605, 0.33684885038014584] ***
*** starting iteration: 3; err: [Inf, 0.8674999984435513, 0.4171607547498605, 0.33684885038014584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8674999984435513, 0.4171607547498605, 0.33684885038014584, 0.30089011218553974] ***
*** finished computation of 7 references, err: [Inf, 0.8674999984435513, 0.4171607547498605, 0.33684885038014584, 0.30089011218553974] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 11]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 1), (3, 11)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 5, 12]]
** centroid: 5, normalized-entropy: 0.8739810481273581, [(2, 5), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 27, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5438999995576604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5438999995576604, 0.26931554002078356] ***
*** starting iteration: 2; err: [Inf, 0.5438999995576604, 0.26931554002078356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5438999995576604, 0.26931554002078356, 0.2568289734092563] ***
*** starting iteration: 3; err: [Inf, 0.5438999995576604, 0.26931554002078356, 0.2568289734092563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5438999995576604, 0.26931554002078356, 0.2568289734092563, 0.2529502156426884] ***
*** finished computation of 7 references, err: [Inf, 0.5438999995576604, 0.26931554002078356, 0.2568289734092563, 0.2529502156426884] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 13]]
** centroid: 3, normalized-entropy: 0.9340680553754911, [(2, 7), (3, 13)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 6, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9558000017827788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9558000017827788, 0.34760806539092554] ***
*** starting iteration: 2; err: [Inf, 0.9558000017827788, 0.34760806539092554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9558000017827788, 0.34760806539092554, 0.31327947752017904] ***
*** starting iteration: 3; err: [Inf, 0.9558000017827788, 0.34760806539092554, 0.31327947752017904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9558000017827788, 0.34760806539092554, 0.31327947752017904, 0.2857342684640326] ***
*** starting iteration: 4; err: [Inf, 0.9558000017827788, 0.34760806539092554, 0.31327947752017904, 0.2857342684640326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9558000017827788, 0.34760806539092554, 0.31327947752017904, 0.2857342684640326, 0.2733865653457031] ***
*** starting iteration: 5; err: [Inf, 0.9558000017827788, 0.34760806539092554, 0.31327947752017904, 0.2857342684640326, 0.2733865653457031] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9558000017827788, 0.34760806539092554, 0.31327947752017904, 0.2857342684640326, 0.2733865653457031, 0.2668716394320381] ***
*** starting iteration: 6; err: [Inf, 0.9558000017827788, 0.34760806539092554, 0.31327947752017904, 0.2857342684640326, 0.2733865653457031, 0.2668716394320381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9558000017827788, 0.34760806539092554, 0.31327947752017904, 0.2857342684640326, 0.2733865653457031, 0.2668716394320381, 0.2640634315166658] ***
*** starting iteration: 7; err: [Inf, 0.9558000017827788, 0.34760806539092554, 0.31327947752017904, 0.2857342684640326, 0.2733865653457031, 0.2668716394320381, 0.2640634315166658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9558000017827788, 0.34760806539092554, 0.31327947752017904, 0.2857342684640326, 0.2733865653457031, 0.2668716394320381, 0.2640634315166658, 0.26236240727875165] ***
*** starting iteration: 8; err: [Inf, 0.9558000017827788, 0.34760806539092554, 0.31327947752017904, 0.2857342684640326, 0.2733865653457031, 0.2668716394320381, 0.2640634315166658, 0.26236240727875165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9558000017827788, 0.34760806539092554, 0.31327947752017904, 0.2857342684640326, 0.2733865653457031, 0.2668716394320381, 0.2640634315166658, 0.26236240727875165, 0.26236240727875165] ***
*** finished computation of 7 references, err: [Inf, 0.9558000017827788, 0.34760806539092554, 0.31327947752017904, 0.2857342684640326, 0.2733865653457031, 0.2668716394320381, 0.2640634315166658, 0.26236240727875165, 0.26236240727875165] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.584300030254645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.584300030254645, 0.5176171898918267] ***
*** starting iteration: 2; err: [Inf, 3.584300030254645, 0.5176171898918267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.584300030254645, 0.5176171898918267, 0.3161489395549615] ***
*** starting iteration: 3; err: [Inf, 3.584300030254645, 0.5176171898918267, 0.3161489395549615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.584300030254645, 0.5176171898918267, 0.3161489395549615, 0.27939036123441086] ***
*** starting iteration: 4; err: [Inf, 3.584300030254645, 0.5176171898918267, 0.3161489395549615, 0.27939036123441086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.584300030254645, 0.5176171898918267, 0.3161489395549615, 0.27939036123441086, 0.26415520781773894] ***
*** starting iteration: 5; err: [Inf, 3.584300030254645, 0.5176171898918267, 0.3161489395549615, 0.27939036123441086, 0.26415520781773894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.584300030254645, 0.5176171898918267, 0.3161489395549615, 0.27939036123441086, 0.26415520781773894, 0.2577959133770704] ***
*** starting iteration: 6; err: [Inf, 3.584300030254645, 0.5176171898918267, 0.3161489395549615, 0.27939036123441086, 0.26415520781773894, 0.2577959133770704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.584300030254645, 0.5176171898918267, 0.3161489395549615, 0.27939036123441086, 0.26415520781773894, 0.2577959133770704, 0.25302192425599285] ***
*** starting iteration: 7; err: [Inf, 3.584300030254645, 0.5176171898918267, 0.3161489395549615, 0.27939036123441086, 0.26415520781773894, 0.2577959133770704, 0.25302192425599285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.584300030254645, 0.5176171898918267, 0.3161489395549615, 0.27939036123441086, 0.26415520781773894, 0.2577959133770704, 0.25302192425599285, 0.25039445344816913] ***
*** starting iteration: 8; err: [Inf, 3.584300030254645, 0.5176171898918267, 0.3161489395549615, 0.27939036123441086, 0.26415520781773894, 0.2577959133770704, 0.25302192425599285, 0.25039445344816913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.584300030254645, 0.5176171898918267, 0.3161489395549615, 0.27939036123441086, 0.26415520781773894, 0.2577959133770704, 0.25302192425599285, 0.25039445344816913, 0.2497877905164143] ***
*** finished computation of 7 references, err: [Inf, 3.584300030254645, 0.5176171898918267, 0.3161489395549615, 0.27939036123441086, 0.26415520781773894, 0.2577959133770704, 0.25302192425599285, 0.25039445344816913, 0.2497877905164143] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 5: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5125000035928771] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5125000035928771, 0.2813440419482429] ***
*** starting iteration: 2; err: [Inf, 0.5125000035928771, 0.2813440419482429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5125000035928771, 0.2813440419482429, 0.2725104366451284] ***
*** starting iteration: 3; err: [Inf, 0.5125000035928771, 0.2813440419482429, 0.2725104366451284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5125000035928771, 0.2813440419482429, 0.2725104366451284, 0.25911622778614] ***
*** starting iteration: 4; err: [Inf, 0.5125000035928771, 0.2813440419482429, 0.2725104366451284, 0.25911622778614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5125000035928771, 0.2813440419482429, 0.2725104366451284, 0.25911622778614, 0.25090525102812555] ***
*** starting iteration: 5; err: [Inf, 0.5125000035928771, 0.2813440419482429, 0.2725104366451284, 0.25911622778614, 0.25090525102812555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5125000035928771, 0.2813440419482429, 0.2725104366451284, 0.25911622778614, 0.25090525102812555, 0.24671356519640983] ***
*** starting iteration: 6; err: [Inf, 0.5125000035928771, 0.2813440419482429, 0.2725104366451284, 0.25911622778614, 0.25090525102812555, 0.24671356519640983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5125000035928771, 0.2813440419482429, 0.2725104366451284, 0.25911622778614, 0.25090525102812555, 0.24671356519640983, 0.24305493865696626] ***
*** starting iteration: 7; err: [Inf, 0.5125000035928771, 0.2813440419482429, 0.2725104366451284, 0.25911622778614, 0.25090525102812555, 0.24671356519640983, 0.24305493865696626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5125000035928771, 0.2813440419482429, 0.2725104366451284, 0.25911622778614, 0.25090525102812555, 0.24671356519640983, 0.24305493865696626, 0.242093563683502] ***
*** finished computation of 7 references, err: [Inf, 0.5125000035928771, 0.2813440419482429, 0.2725104366451284, 0.25911622778614, 0.25090525102812555, 0.24671356519640983, 0.24305493865696626, 0.242093563683502] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 9]]
** centroid: 1, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.839596803450589] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.839596803450589, 0.4167164239461003] ***
*** starting iteration: 2; err: [Inf, 0.839596803450589, 0.4167164239461003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.839596803450589, 0.4167164239461003, 0.3581222673961084] ***
*** starting iteration: 3; err: [Inf, 0.839596803450589, 0.4167164239461003, 0.3581222673961084] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.839596803450589, 0.4167164239461003, 0.3581222673961084, 0.35208096311543413] ***
*** finished computation of 3 references, err: [Inf, 0.839596803450589, 0.4167164239461003, 0.3581222673961084, 0.35208096311543413] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 5, 28]]
** centroid: 2, normalized-entropy: 0.6136190195993708, [(2, 5), (3, 28)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 7]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 28), (3, 7)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.065656350132745] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.065656350132745, 0.6728208540511815] ***
*** starting iteration: 2; err: [Inf, 7.065656350132745, 0.6728208540511815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.065656350132745, 0.6728208540511815, 0.6416876769884868] ***
*** starting iteration: 3; err: [Inf, 7.065656350132745, 0.6728208540511815, 0.6416876769884868] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.065656350132745, 0.6728208540511815, 0.6416876769884868, 0.639778425779722] ***
*** finished computation of 3 references, err: [Inf, 7.065656350132745, 0.6728208540511815, 0.6416876769884868, 0.639778425779722] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 30]]
** centroid: 3, normalized-entropy: 0.998363672593813, [(2, 33), (3, 30)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.5716055668014666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5716055668014666, 0.49513673095642363] ***
*** starting iteration: 2; err: [Inf, 2.5716055668014666, 0.49513673095642363] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5716055668014666, 0.49513673095642363, 0.36057142743990583] ***
*** starting iteration: 3; err: [Inf, 2.5716055668014666, 0.49513673095642363, 0.36057142743990583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5716055668014666, 0.49513673095642363, 0.36057142743990583, 0.35657689804142495] ***
*** finished computation of 3 references, err: [Inf, 2.5716055668014666, 0.49513673095642363, 0.36057142743990583, 0.35657689804142495] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 28]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 7]]
** centroid: 2, normalized-entropy: 0.6690158350565576, [(2, 33), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35690000336208283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35690000336208283, 0.2594089756619335] ***
*** starting iteration: 2; err: [Inf, 0.35690000336208283, 0.2594089756619335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35690000336208283, 0.2594089756619335, 0.2341877741733569] ***
*** starting iteration: 3; err: [Inf, 0.35690000336208283, 0.2594089756619335, 0.2341877741733569] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35690000336208283, 0.2594089756619335, 0.2341877741733569, 0.22432569990631168] ***
*** finished computation of 7 references, err: [Inf, 0.35690000336208283, 0.2594089756619335, 0.2341877741733569, 0.22432569990631168] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 9]]
** centroid: 1, normalized-entropy: 0.9980008838722993, [(2, 10), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7180000044910466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7180000044910466, 0.28235273950988327] ***
*** starting iteration: 2; err: [Inf, 0.7180000044910466, 0.28235273950988327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7180000044910466, 0.28235273950988327, 0.24723809698954954] ***
*** starting iteration: 3; err: [Inf, 0.7180000044910466, 0.28235273950988327, 0.24723809698954954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7180000044910466, 0.28235273950988327, 0.24723809698954954, 0.24223999362564236] ***
*** finished computation of 7 references, err: [Inf, 0.7180000044910466, 0.28235273950988327, 0.24723809698954954, 0.24223999362564236] ***
*** center 1: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 18, 10]]
** centroid: 5, normalized-entropy: 0.940285958670631, [(2, 18), (3, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3737000039480637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3737000039480637, 0.25510711308805456] ***
*** starting iteration: 2; err: [Inf, 0.3737000039480637, 0.25510711308805456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3737000039480637, 0.25510711308805456, 0.24466389909488712] ***
*** starting iteration: 3; err: [Inf, 0.3737000039480637, 0.25510711308805456, 0.24466389909488712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3737000039480637, 0.25510711308805456, 0.24466389909488712, 0.24368019210416114] ***
*** finished computation of 7 references, err: [Inf, 0.3737000039480637, 0.25510711308805456, 0.24466389909488712, 0.24368019210416114] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 2, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7945206178698441] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7945206178698441, 0.42168228490124193] ***
*** starting iteration: 2; err: [Inf, 0.7945206178698441, 0.42168228490124193] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7945206178698441, 0.42168228490124193, 0.3846458026807813] ***
*** starting iteration: 3; err: [Inf, 0.7945206178698441, 0.42168228490124193, 0.3846458026807813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7945206178698441, 0.42168228490124193, 0.3846458026807813, 0.3534756521251582] ***
*** finished computation of 3 references, err: [Inf, 0.7945206178698441, 0.42168228490124193, 0.3846458026807813, 0.3534756521251582] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [32, 1, 0]]
** centroid: 2, normalized-entropy: 0.19590927087360496, [(1, 32), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8203498213846996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8203498213846996, 0.418105759221651] ***
*** starting iteration: 2; err: [Inf, 0.8203498213846996, 0.418105759221651] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8203498213846996, 0.418105759221651, 0.41142991332351175] ***
*** starting iteration: 3; err: [Inf, 0.8203498213846996, 0.418105759221651, 0.41142991332351175] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8203498213846996, 0.418105759221651, 0.41142991332351175, 0.4084432276860301] ***
*** finished computation of 3 references, err: [Inf, 0.8203498213846996, 0.418105759221651, 0.41142991332351175, 0.4084432276860301] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 29]]
** centroid: 1, normalized-entropy: 0.710676853856123, [(2, 7), (3, 29)]
*** center 2: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 1]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(2, 26), (3, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6358772065607168] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6358772065607168, 0.38843979273508095] ***
*** starting iteration: 2; err: [Inf, 0.6358772065607168, 0.38843979273508095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6358772065607168, 0.38843979273508095, 0.37717235131724663] ***
*** starting iteration: 3; err: [Inf, 0.6358772065607168, 0.38843979273508095, 0.37717235131724663] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6358772065607168, 0.38843979273508095, 0.37717235131724663, 0.37032789795209176] ***
*** finished computation of 3 references, err: [Inf, 0.6358772065607168, 0.38843979273508095, 0.37717235131724663, 0.37032789795209176] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 33]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 3), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 2]]
** centroid: 3, normalized-entropy: 0.32984607020714635, [(2, 31), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4312441727416536] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4312441727416536, 0.3559859051826848] ***
*** starting iteration: 2; err: [Inf, 1.4312441727416536, 0.3559859051826848] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4312441727416536, 0.3559859051826848, 0.35072322656935667] ***
*** starting iteration: 3; err: [Inf, 1.4312441727416536, 0.3559859051826848, 0.35072322656935667] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4312441727416536, 0.3559859051826848, 0.35072322656935667, 0.34969591239433184] ***
*** starting iteration: 4; err: [Inf, 1.4312441727416536, 0.3559859051826848, 0.35072322656935667, 0.34969591239433184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4312441727416536, 0.3559859051826848, 0.35072322656935667, 0.34969591239433184, 0.34969591239433184] ***
*** finished computation of 3 references, err: [Inf, 1.4312441727416536, 0.3559859051826848, 0.35072322656935667, 0.34969591239433184, 0.34969591239433184] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0956250195455577] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0956250195455577, 0.41617293021387936] ***
*** starting iteration: 2; err: [Inf, 1.0956250195455577, 0.41617293021387936] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0956250195455577, 0.41617293021387936, 0.39864073423230784] ***
*** starting iteration: 3; err: [Inf, 1.0956250195455577, 0.41617293021387936, 0.39864073423230784] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0956250195455577, 0.41617293021387936, 0.39864073423230784, 0.39359438412662384] ***
*** starting iteration: 4; err: [Inf, 1.0956250195455577, 0.41617293021387936, 0.39864073423230784, 0.39359438412662384] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0956250195455577, 0.41617293021387936, 0.39864073423230784, 0.39359438412662384, 0.3924073006981418] ***
*** starting iteration: 5; err: [Inf, 1.0956250195455577, 0.41617293021387936, 0.39864073423230784, 0.39359438412662384, 0.3924073006981418] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0956250195455577, 0.41617293021387936, 0.39864073423230784, 0.39359438412662384, 0.3924073006981418, 0.3914434045420332] ***
*** finished computation of 3 references, err: [Inf, 1.0956250195455577, 0.41617293021387936, 0.39864073423230784, 0.39359438412662384, 0.3924073006981418, 0.3914434045420332] ***
*** center 1: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 21]]
** centroid: 2, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.432074584380012] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.432074584380012, 0.35697009821186976] ***
*** starting iteration: 2; err: [Inf, 1.432074584380012, 0.35697009821186976] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.432074584380012, 0.35697009821186976, 0.35697009821186976] ***
*** finished computation of 3 references, err: [Inf, 1.432074584380012, 0.35697009821186976, 0.35697009821186976] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 2, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6449999898535175] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6449999898535175, 0.512305423784971] ***
*** starting iteration: 2; err: [Inf, 1.6449999898535175, 0.512305423784971] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6449999898535175, 0.512305423784971, 0.49370243569347955] ***
*** starting iteration: 3; err: [Inf, 1.6449999898535175, 0.512305423784971, 0.49370243569347955] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6449999898535175, 0.512305423784971, 0.49370243569347955, 0.4918526656924908] ***
*** finished computation of 3 references, err: [Inf, 1.6449999898535175, 0.512305423784971, 0.49370243569347955, 0.4918526656924908] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9385000080054708] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9385000080054708, 0.6109671737521672] ***
*** starting iteration: 2; err: [Inf, 0.9385000080054708, 0.6109671737521672] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9385000080054708, 0.6109671737521672, 0.5819500046182835] ***
*** starting iteration: 3; err: [Inf, 0.9385000080054708, 0.6109671737521672, 0.5819500046182835] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9385000080054708, 0.6109671737521672, 0.5819500046182835, 0.566071020444117] ***
*** finished computation of 3 references, err: [Inf, 0.9385000080054708, 0.6109671737521672, 0.5819500046182835, 0.566071020444117] ***
*** center 1: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6084000078498002] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6084000078498002, 0.5229907583726738] ***
*** starting iteration: 2; err: [Inf, 1.6084000078498002, 0.5229907583726738] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6084000078498002, 0.5229907583726738, 0.5188286222113975] ***
*** starting iteration: 3; err: [Inf, 1.6084000078498002, 0.5229907583726738, 0.5188286222113975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6084000078498002, 0.5229907583726738, 0.5188286222113975, 0.5179462789705407] ***
*** finished computation of 3 references, err: [Inf, 1.6084000078498002, 0.5229907583726738, 0.5188286222113975, 0.5179462789705407] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 26]]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3259304026111573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3259304026111573, 0.22057075986908778] ***
*** starting iteration: 2; err: [Inf, 0.3259304026111573, 0.22057075986908778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3259304026111573, 0.22057075986908778, 0.21349404233540287] ***
*** starting iteration: 3; err: [Inf, 0.3259304026111573, 0.22057075986908778, 0.21349404233540287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3259304026111573, 0.22057075986908778, 0.21349404233540287, 0.20861607058013798] ***
*** finished computation of 7 references, err: [Inf, 0.3259304026111573, 0.22057075986908778, 0.21349404233540287, 0.20861607058013798] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 12, 19]]
** centroid: 5, normalized-entropy: 0.9629004147713269, [(2, 12), (3, 19)]
*** center 6: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37722111731470953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37722111731470953, 0.1988867349628152] ***
*** starting iteration: 2; err: [Inf, 0.37722111731470953, 0.1988867349628152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37722111731470953, 0.1988867349628152, 0.18490333602306763] ***
*** starting iteration: 3; err: [Inf, 0.37722111731470953, 0.1988867349628152, 0.18490333602306763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37722111731470953, 0.1988867349628152, 0.18490333602306763, 0.17663369649722732] ***
*** finished computation of 7 references, err: [Inf, 0.37722111731470953, 0.1988867349628152, 0.18490333602306763, 0.17663369649722732] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 8]]
** centroid: 3, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 4, 15]]
** centroid: 4, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45563205910105437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45563205910105437, 0.21241290168088234] ***
*** starting iteration: 2; err: [Inf, 0.45563205910105437, 0.21241290168088234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45563205910105437, 0.21241290168088234, 0.1864471837052326] ***
*** starting iteration: 3; err: [Inf, 0.45563205910105437, 0.21241290168088234, 0.1864471837052326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45563205910105437, 0.21241290168088234, 0.1864471837052326, 0.1821302317708876] ***
*** finished computation of 7 references, err: [Inf, 0.45563205910105437, 0.21241290168088234, 0.1864471837052326, 0.1821302317708876] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 17]]
** centroid: 1, normalized-entropy: 0.9509560484549724, [(2, 10), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4681000252571299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4681000252571299, 0.18591816408409087] ***
*** starting iteration: 2; err: [Inf, 0.4681000252571299, 0.18591816408409087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4681000252571299, 0.18591816408409087, 0.1711398378500812] ***
*** starting iteration: 3; err: [Inf, 0.4681000252571299, 0.18591816408409087, 0.1711398378500812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4681000252571299, 0.18591816408409087, 0.1711398378500812, 0.16210727292647015] ***
*** finished computation of 7 references, err: [Inf, 0.4681000252571299, 0.18591816408409087, 0.1711398378500812, 0.16210727292647015] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 2]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 8]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47929409463013867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47929409463013867, 0.1966524161791764] ***
*** starting iteration: 2; err: [Inf, 0.47929409463013867, 0.1966524161791764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47929409463013867, 0.1966524161791764, 0.17283864654630368] ***
*** starting iteration: 3; err: [Inf, 0.47929409463013867, 0.1966524161791764, 0.17283864654630368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47929409463013867, 0.1966524161791764, 0.17283864654630368, 0.17107873524953093] ***
*** finished computation of 7 references, err: [Inf, 0.47929409463013867, 0.1966524161791764, 0.17283864654630368, 0.17107873524953093] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 9]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4079409570731386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4079409570731386, 0.198112619156026] ***
*** starting iteration: 2; err: [Inf, 0.4079409570731386, 0.198112619156026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4079409570731386, 0.198112619156026, 0.173882522852577] ***
*** starting iteration: 3; err: [Inf, 0.4079409570731386, 0.198112619156026, 0.173882522852577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4079409570731386, 0.198112619156026, 0.173882522852577, 0.1695316187011295] ***
*** finished computation of 7 references, err: [Inf, 0.4079409570731386, 0.198112619156026, 0.173882522852577, 0.1695316187011295] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 7]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.3, 2) => 0.9733333333333333
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.6236798739121926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6236798739121926, 0.2673529783294867] ***
*** starting iteration: 2; err: [Inf, 0.6236798739121926, 0.2673529783294867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6236798739121926, 0.2673529783294867, 0.242471018905932] ***
*** starting iteration: 3; err: [Inf, 0.6236798739121926, 0.2673529783294867, 0.242471018905932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6236798739121926, 0.2673529783294867, 0.242471018905932, 0.22777571749827288] ***
*** finished computation of 7 references, err: [Inf, 0.6236798739121926, 0.2673529783294867, 0.242471018905932, 0.22777571749827288] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 3]]
** centroid: 1, normalized-entropy: 0.5586293734521991, [(2, 20), (3, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 7]]
** centroid: 5, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40934748179199687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40934748179199687, 0.2615855717666248] ***
*** starting iteration: 2; err: [Inf, 0.40934748179199687, 0.2615855717666248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40934748179199687, 0.2615855717666248, 0.2176973471043259] ***
*** starting iteration: 3; err: [Inf, 0.40934748179199687, 0.2615855717666248, 0.2176973471043259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40934748179199687, 0.2615855717666248, 0.2176973471043259, 0.18004296261457425] ***
*** finished computation of 7 references, err: [Inf, 0.40934748179199687, 0.2615855717666248, 0.2176973471043259, 0.18004296261457425] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 12]]
** centroid: 3, normalized-entropy: 0.9910760598382222, [(2, 15), (3, 12)]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41160587161792334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41160587161792334, 0.21545377439253735] ***
*** starting iteration: 2; err: [Inf, 0.41160587161792334, 0.21545377439253735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41160587161792334, 0.21545377439253735, 0.1864810053579038] ***
*** starting iteration: 3; err: [Inf, 0.41160587161792334, 0.21545377439253735, 0.1864810053579038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41160587161792334, 0.21545377439253735, 0.1864810053579038, 0.1764224503437973] ***
*** finished computation of 7 references, err: [Inf, 0.41160587161792334, 0.21545377439253735, 0.1864810053579038, 0.1764224503437973] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 7]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 5, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 19]]
** centroid: 6, normalized-entropy: 0.2863969571159561, [(2, 1), (3, 19)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.49570000477949633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49570000477949633, 0.2738758691146775] ***
*** starting iteration: 2; err: [Inf, 0.49570000477949633, 0.2738758691146775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49570000477949633, 0.2738758691146775, 0.23983526236222674] ***
*** starting iteration: 3; err: [Inf, 0.49570000477949633, 0.2738758691146775, 0.23983526236222674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49570000477949633, 0.2738758691146775, 0.23983526236222674, 0.23025560979212148] ***
*** finished computation of 7 references, err: [Inf, 0.49570000477949633, 0.2738758691146775, 0.23983526236222674, 0.23025560979212148] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 16, 7]]
** centroid: 6, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 8, 3]]
** centroid: 7, normalized-entropy: 0.8453509366224364, [(2, 8), (3, 3)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4933000058905029] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4933000058905029, 0.25996633248853185] ***
*** starting iteration: 2; err: [Inf, 0.4933000058905029, 0.25996633248853185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4933000058905029, 0.25996633248853185, 0.23189811294571616] ***
*** starting iteration: 3; err: [Inf, 0.4933000058905029, 0.25996633248853185, 0.23189811294571616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4933000058905029, 0.25996633248853185, 0.23189811294571616, 0.21545382022244144] ***
*** finished computation of 7 references, err: [Inf, 0.4933000058905029, 0.25996633248853185, 0.23189811294571616, 0.21545382022244144] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 10]]
** centroid: 3, normalized-entropy: 0.9910760598382222, [(2, 8), (3, 10)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5198000041950592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5198000041950592, 0.2556542562926808] ***
*** starting iteration: 2; err: [Inf, 0.5198000041950592, 0.2556542562926808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5198000041950592, 0.2556542562926808, 0.24633371479187424] ***
*** starting iteration: 3; err: [Inf, 0.5198000041950592, 0.2556542562926808, 0.24633371479187424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5198000041950592, 0.2556542562926808, 0.24633371479187424, 0.24419728193977425] ***
*** finished computation of 7 references, err: [Inf, 0.5198000041950592, 0.2556542562926808, 0.24633371479187424, 0.24419728193977425] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 12, 10]]
** centroid: 7, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.3, 2) => 0.9733333333333333
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.4424037921648396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4424037921648396, 0.21161753655674445] ***
*** starting iteration: 2; err: [Inf, 0.4424037921648396, 0.21161753655674445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4424037921648396, 0.21161753655674445, 0.18974936757948244] ***
*** starting iteration: 3; err: [Inf, 0.4424037921648396, 0.21161753655674445, 0.18974936757948244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4424037921648396, 0.21161753655674445, 0.18974936757948244, 0.17705015458334408] ***
*** starting iteration: 4; err: [Inf, 0.4424037921648396, 0.21161753655674445, 0.18974936757948244, 0.17705015458334408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4424037921648396, 0.21161753655674445, 0.18974936757948244, 0.17705015458334408, 0.17453087138790127] ***
*** starting iteration: 5; err: [Inf, 0.4424037921648396, 0.21161753655674445, 0.18974936757948244, 0.17705015458334408, 0.17453087138790127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4424037921648396, 0.21161753655674445, 0.18974936757948244, 0.17705015458334408, 0.17453087138790127, 0.17348914232733176] ***
*** starting iteration: 6; err: [Inf, 0.4424037921648396, 0.21161753655674445, 0.18974936757948244, 0.17705015458334408, 0.17453087138790127, 0.17348914232733176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4424037921648396, 0.21161753655674445, 0.18974936757948244, 0.17705015458334408, 0.17453087138790127, 0.17348914232733176, 0.17192840932950804] ***
*** starting iteration: 7; err: [Inf, 0.4424037921648396, 0.21161753655674445, 0.18974936757948244, 0.17705015458334408, 0.17453087138790127, 0.17348914232733176, 0.17192840932950804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4424037921648396, 0.21161753655674445, 0.18974936757948244, 0.17705015458334408, 0.17453087138790127, 0.17348914232733176, 0.17192840932950804, 0.17125972496588912] ***
*** finished computation of 7 references, err: [Inf, 0.4424037921648396, 0.21161753655674445, 0.18974936757948244, 0.17705015458334408, 0.17453087138790127, 0.17348914232733176, 0.17192840932950804, 0.17125972496588912] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 2, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 4, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.213553814820985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.213553814820985, 0.2720534105531129] ***
*** starting iteration: 2; err: [Inf, 2.213553814820985, 0.2720534105531129] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.213553814820985, 0.2720534105531129, 0.19431458058029694] ***
*** starting iteration: 3; err: [Inf, 2.213553814820985, 0.2720534105531129, 0.19431458058029694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.213553814820985, 0.2720534105531129, 0.19431458058029694, 0.18731535416669526] ***
*** starting iteration: 4; err: [Inf, 2.213553814820985, 0.2720534105531129, 0.19431458058029694, 0.18731535416669526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.213553814820985, 0.2720534105531129, 0.19431458058029694, 0.18731535416669526, 0.18258546158556876] ***
*** starting iteration: 5; err: [Inf, 2.213553814820985, 0.2720534105531129, 0.19431458058029694, 0.18731535416669526, 0.18258546158556876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.213553814820985, 0.2720534105531129, 0.19431458058029694, 0.18731535416669526, 0.18258546158556876, 0.18127952370604447] ***
*** starting iteration: 6; err: [Inf, 2.213553814820985, 0.2720534105531129, 0.19431458058029694, 0.18731535416669526, 0.18258546158556876, 0.18127952370604447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.213553814820985, 0.2720534105531129, 0.19431458058029694, 0.18731535416669526, 0.18258546158556876, 0.18127952370604447, 0.18127952370604447] ***
*** finished computation of 7 references, err: [Inf, 2.213553814820985, 0.2720534105531129, 0.19431458058029694, 0.18731535416669526, 0.18258546158556876, 0.18127952370604447, 0.18127952370604447] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4280388864128591] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4280388864128591, 0.19085349895448836] ***
*** starting iteration: 2; err: [Inf, 0.4280388864128591, 0.19085349895448836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4280388864128591, 0.19085349895448836, 0.15554167257490492] ***
*** starting iteration: 3; err: [Inf, 0.4280388864128591, 0.19085349895448836, 0.15554167257490492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4280388864128591, 0.19085349895448836, 0.15554167257490492, 0.1510503478859615] ***
*** starting iteration: 4; err: [Inf, 0.4280388864128591, 0.19085349895448836, 0.15554167257490492, 0.1510503478859615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4280388864128591, 0.19085349895448836, 0.15554167257490492, 0.1510503478859615, 0.15081017382646425] ***
*** finished computation of 7 references, err: [Inf, 0.4280388864128591, 0.19085349895448836, 0.15554167257490492, 0.1510503478859615, 0.15081017382646425] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 4, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 7]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2125999991819527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2125999991819527, 0.39764484328132726] ***
*** starting iteration: 2; err: [Inf, 1.2125999991819527, 0.39764484328132726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2125999991819527, 0.39764484328132726, 0.3337755269149993] ***
*** starting iteration: 3; err: [Inf, 1.2125999991819527, 0.39764484328132726, 0.3337755269149993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2125999991819527, 0.39764484328132726, 0.3337755269149993, 0.31971371147189154] ***
*** starting iteration: 4; err: [Inf, 1.2125999991819527, 0.39764484328132726, 0.3337755269149993, 0.31971371147189154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2125999991819527, 0.39764484328132726, 0.3337755269149993, 0.31971371147189154, 0.29194950915440543] ***
*** starting iteration: 5; err: [Inf, 1.2125999991819527, 0.39764484328132726, 0.3337755269149993, 0.31971371147189154, 0.29194950915440543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2125999991819527, 0.39764484328132726, 0.3337755269149993, 0.31971371147189154, 0.29194950915440543, 0.258623816577293] ***
*** starting iteration: 6; err: [Inf, 1.2125999991819527, 0.39764484328132726, 0.3337755269149993, 0.31971371147189154, 0.29194950915440543, 0.258623816577293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2125999991819527, 0.39764484328132726, 0.3337755269149993, 0.31971371147189154, 0.29194950915440543, 0.258623816577293, 0.24757448832833187] ***
*** starting iteration: 7; err: [Inf, 1.2125999991819527, 0.39764484328132726, 0.3337755269149993, 0.31971371147189154, 0.29194950915440543, 0.258623816577293, 0.24757448832833187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2125999991819527, 0.39764484328132726, 0.3337755269149993, 0.31971371147189154, 0.29194950915440543, 0.258623816577293, 0.24757448832833187, 0.24307627900174064] ***
*** starting iteration: 8; err: [Inf, 1.2125999991819527, 0.39764484328132726, 0.3337755269149993, 0.31971371147189154, 0.29194950915440543, 0.258623816577293, 0.24757448832833187, 0.24307627900174064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2125999991819527, 0.39764484328132726, 0.3337755269149993, 0.31971371147189154, 0.29194950915440543, 0.258623816577293, 0.24757448832833187, 0.24307627900174064, 0.24307627900174064] ***
*** finished computation of 7 references, err: [Inf, 1.2125999991819527, 0.39764484328132726, 0.3337755269149993, 0.31971371147189154, 0.29194950915440543, 0.258623816577293, 0.24757448832833187, 0.24307627900174064, 0.24307627900174064] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 1, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 4, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4510000074338227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4510000074338227, 0.25342647412715946] ***
*** starting iteration: 2; err: [Inf, 0.4510000074338227, 0.25342647412715946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4510000074338227, 0.25342647412715946, 0.24538394448931766] ***
*** starting iteration: 3; err: [Inf, 0.4510000074338227, 0.25342647412715946, 0.24538394448931766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4510000074338227, 0.25342647412715946, 0.24538394448931766, 0.24417137186949764] ***
*** starting iteration: 4; err: [Inf, 0.4510000074338227, 0.25342647412715946, 0.24538394448931766, 0.24417137186949764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4510000074338227, 0.25342647412715946, 0.24538394448931766, 0.24417137186949764, 0.2431627478781538] ***
*** starting iteration: 5; err: [Inf, 0.4510000074338227, 0.25342647412715946, 0.24538394448931766, 0.24417137186949764, 0.2431627478781538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4510000074338227, 0.25342647412715946, 0.24538394448931766, 0.24417137186949764, 0.2431627478781538, 0.2428759054550989] ***
*** finished computation of 7 references, err: [Inf, 0.4510000074338227, 0.25342647412715946, 0.24538394448931766, 0.24417137186949764, 0.2431627478781538, 0.2428759054550989] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 9]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 18), (3, 9)]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7765000017838887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7765000017838887, 0.28879819778636306] ***
*** starting iteration: 2; err: [Inf, 0.7765000017838887, 0.28879819778636306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7765000017838887, 0.28879819778636306, 0.2743650048980885] ***
*** starting iteration: 3; err: [Inf, 0.7765000017838887, 0.28879819778636306, 0.2743650048980885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7765000017838887, 0.28879819778636306, 0.2743650048980885, 0.26297712429753956] ***
*** starting iteration: 4; err: [Inf, 0.7765000017838887, 0.28879819778636306, 0.2743650048980885, 0.26297712429753956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7765000017838887, 0.28879819778636306, 0.2743650048980885, 0.26297712429753956, 0.25335722601863414] ***
*** starting iteration: 5; err: [Inf, 0.7765000017838887, 0.28879819778636306, 0.2743650048980885, 0.26297712429753956, 0.25335722601863414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7765000017838887, 0.28879819778636306, 0.2743650048980885, 0.26297712429753956, 0.25335722601863414, 0.25102640270461424] ***
*** starting iteration: 6; err: [Inf, 0.7765000017838887, 0.28879819778636306, 0.2743650048980885, 0.26297712429753956, 0.25335722601863414, 0.25102640270461424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7765000017838887, 0.28879819778636306, 0.2743650048980885, 0.26297712429753956, 0.25335722601863414, 0.25102640270461424, 0.2471475048221525] ***
*** starting iteration: 7; err: [Inf, 0.7765000017838887, 0.28879819778636306, 0.2743650048980885, 0.26297712429753956, 0.25335722601863414, 0.25102640270461424, 0.2471475048221525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7765000017838887, 0.28879819778636306, 0.2743650048980885, 0.26297712429753956, 0.25335722601863414, 0.25102640270461424, 0.2471475048221525, 0.24441970451686615] ***
*** starting iteration: 8; err: [Inf, 0.7765000017838887, 0.28879819778636306, 0.2743650048980885, 0.26297712429753956, 0.25335722601863414, 0.25102640270461424, 0.2471475048221525, 0.24441970451686615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7765000017838887, 0.28879819778636306, 0.2743650048980885, 0.26297712429753956, 0.25335722601863414, 0.25102640270461424, 0.2471475048221525, 0.24441970451686615, 0.2440748572576724] ***
*** finished computation of 7 references, err: [Inf, 0.7765000017838887, 0.28879819778636306, 0.2743650048980885, 0.26297712429753956, 0.25335722601863414, 0.25102640270461424, 0.2471475048221525, 0.24441970451686615, 0.2440748572576724] ***
*** center 1: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 5, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 9]]
** centroid: 6, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.993333333333333, 3.306666666666666, 1.526666666666667, 0.2733333333333334], [6.3875, 2.9187499999999997, 4.643750000000001, 1.4874999999999998], [5.988888888888889, 2.788888888888889, 4.966666666666666, 1.8333333333333333], [4.566666666666666, 3.0666666666666664, 1.4166666666666667, 0.2333333333333333], [5.527777777777777, 2.65, 4.027777777777779, 1.2611111111111113], [5.418181818181818, 3.872727272727272, 1.518181818181818, 0.2727272727272727], [6.5352941176470605, 3.064705882352941, 5.5470588235294125, 2.1470588235294117], [7.387500000000001, 3.1750000000000003, 6.1625, 2.0625]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 3, 1, 2, 1, 3, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.25, 2.35, 4.7, 1.5], [5.92, 2.68, 5.0600000000000005, 1.85], [4.986486486486486, 3.38918918918919, 1.4648648648648648, 0.2513513513513514], [6.688888888888889, 3.0444444444444447, 4.633333333333333, 1.4555555555555555], [5.483333333333333, 2.408333333333333, 3.7583333333333333, 1.0833333333333333], [6.592307692307693, 3.115384615384616, 5.492307692307692, 2.1461538461538465], [5.890000000000001, 2.9499999999999997, 4.390000000000001, 1.3800000000000001], [7.585714285714287, 3.0142857142857147, 6.3999999999999995, 2.014285714285714]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 2, 3, 2, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.20625, 3.6687499999999997, 1.4625, 0.25], [6.4944444444444445, 3.0, 5.51111111111111, 2.133333333333333], [4.726666666666666, 3.14, 1.38, 0.17333333333333337], [5.620000000000001, 2.76, 4.173333333333334, 1.3133333333333332], [5.300000000000001, 2.516666666666667, 3.4166666666666665, 1.0833333333333333], [6.3, 2.9, 4.642857142857143, 1.4571428571428573], [6.114285714285715, 2.7, 4.971428571428571, 1.742857142857143], [7.466666666666667, 3.1666666666666665, 6.344444444444445, 2.0666666666666664]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 1, 2, 2, 2, 3, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[109, 24, 1, 14, 19, 1, 21, 25, 18, 24, 5, 2, 47, 9, 29, 26, 46, 32, 26, 1, 47, 1, 29, 32, 10, 19, 20, 22, 2, 32, 36, 18, 51, 46, 24, 25, 64, 20, 23, 43, 15, 42, 27, 35, 18, 26, 17, 27, 49, 48, 6, 38, 29, 24, 38, 28, 33, 26, 29, 22, 35, 17, 49, 43, 32, 35, 29, 23, 34, 40, 38, 38, 43, 15, 33, 31, 23, 21, 25, 42, 40, 34, 17, 33, 28, 28, 37, 17, 32, 25, 26, 33, 30, 31, 36, 52, 29, 28, 50, 48, 40, 4, 68, 32, 33, 39, 36, 39, 33, 24, 34, 40, 34, 35, 29, 34, 40, 35, 35, 2, 24, 39, 36, 32, 18, 41, 39, 33, 51, 16, 26, 41, 21, 30, 32, 46, 44, 44, 40, 44, 38, 33, 45, 35, 30, 35, 33, 30, 56, 42, 28, 17, 37, 37, 27, 50, 39, 32, 45, 30, 29, 31, 35, 23, 36, 37, 47, 14, 49, 68, 32, 57, 31, 27, 22, 45, 26, 47, 26, 1, 56, 37, 43, 20, 24, 29, 45, 28, 25, 36, 18, 32, 30, 43, 1, 26, 55, 52, 40, 37, 55, 42, 23, 39, 35, 46, 21, 46, 33, 58, 64, 31, 52, 32, 29, 49, 35, 38, 34, 24, 37, 39, 24, 21, 43, 43, 8, 28, 8, 39, 32, 51, 24, 52, 25, 59, 18, 28, 24, 38, 57, 35, 21, 41, 27, 44, 22, 40, 59, 24, 46, 35, 24, 35, 28, 33, 5, 49, 40, 47, 25, 69, 46, 26, 34, 31, 27, 52, 24, 25, 47, 30, 43, 51, 43, 34, 61, 30, 42, 22, 40, 77, 36, 35, 52, 34, 24, 26, 30, 15, 33, 43, 45, 34, 56, 33, 23, 37, 26, 38]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6010000000000003, speedup = 0.35945831682445095, eval_ratio = 0.041654000000000004)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3645833333333331,"recall":0.3645833333333331,"f1":null,"seconds":7.586367428302765e-5,"exhaustive_search_seconds":0.0004252661019563675,"evaluations":338.6875,"distances_sum":1759.2960372286327}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5329861111111109,"recall":0.5329861111111109,"f1":0.5329861111111109,"seconds":0.0001423470675945282,"exhaustive_search_seconds":0.0004252661019563675,"evaluations":377.3046875,"distances_sum":1631.1610733389348}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6388888888888885,"recall":0.6388888888888885,"f1":0.6388888888888885,"seconds":0.00016957148909568787,"exhaustive_search_seconds":0.0004252661019563675,"evaluations":418.203125,"distances_sum":1588.1676819651088}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.702256944444444,"recall":0.702256944444444,"f1":0.702256944444444,"seconds":0.00032364390790462494,"exhaustive_search_seconds":0.0004252661019563675,"evaluations":455.8359375,"distances_sum":1566.3933894590846}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7708333333333325,"recall":0.7708333333333325,"f1":0.7708333333333325,"seconds":0.00023172050714492798,"exhaustive_search_seconds":0.0004252661019563675,"evaluations":495.5234375,"distances_sum":1547.3712138784028}
KCenters.DeloneInvIndex> reached performance {"precision":0.8098958333333328,"recall":0.8098958333333328,"f1":0.8098958333333328,"seconds":0.00026157498359680176,"exhaustive_search_seconds":0.0004252661019563675,"evaluations":536.3515625,"distances_sum":1540.4190867689758}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7929999999999999, speedup = 1.588432646034665, eval_ratio = 0.053607)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
