Julia Version 1.5.0-DEV.49
Commit c330f8d0d5 (2020-01-10 15:42 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed TransformUtils ─ v0.2.2
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
  Updating `/tmp/jl_2YoxBM/Project.toml`
 [no changes]
  Updating `/tmp/jl_2YoxBM/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_2YoxBM/Project.toml`
  [9b8138ad] TransformUtils v0.2.2
  [37e2e46d] LinearAlgebra 
  [9abbd945] Profile 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.09294369552942894 0.08091920761184518; 0.09294369552942894 0.0 0.032670437467559044; -0.08091920761184518 -0.032670437467559044 0.0])
dAA = so3([0.0 0.09491969951111862 0.13500371008880432; -0.09491969951111862 0.0 -0.0890906806905831; -0.13500371008880432 0.0890906806905831 0.0])
dAA = so3([0.0 -0.04915822674093387 0.09393926794390306; 0.04915822674093387 0.0 0.04174426198769458; -0.09393926794390306 -0.04174426198769458 0.0])
dAA = Quaternion(0.9952323687870885, [-0.021326481966218856, 0.015558340336513817, 0.09389170001314526])
dAA = SO3([0.9961281803458141 0.06361385925961176 0.0606788697244459; -0.06921454969055808 0.9930520573665543 0.09516804858347877; -0.054203269569936804 -0.09899943570623226 0.9936101435159451])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.916436077666826 0.265602680072001 0.2993328112473029; -0.19179739930254963 0.9480040287723165 -0.2539726738297553; -0.3512245338404217 0.1753384663159434 0.9197269970260475]), [-0.32670437467559044, 0.8091920761184517, 0.9294369552942893])
xj = SE3(SO3([0.8886163548925134 -0.45453391368408486 0.06131798372884849; 0.44605398506609284 0.8875698403857644 0.11513305713063704; -0.10675587208299274 -0.07495798655658749 0.9914557398226015]), [-0.41744261987694575, 0.9393926794390305, 0.49158226740933864])
Dx = SE3(SO3([0.7663033739511493 -0.5604577802226091 -0.3141117884751075; 0.6401614494266137 0.707551340443435 0.2992731516603447; 0.054520250724865923 -0.43041628364252676 0.9009824443551903]), [0.04565737001102432, 0.0225576059429915, -0.4629351066055465])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
