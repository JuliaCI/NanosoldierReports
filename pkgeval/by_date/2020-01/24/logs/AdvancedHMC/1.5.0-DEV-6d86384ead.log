Julia Version 1.5.0-DEV.142
Commit 6d86384ead (2020-01-23 18:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed SortingAlgorithms ── v0.3.1
 Installed InplaceOps ───────── v0.3.0
 Installed Missings ─────────── v0.4.3
 Installed AdvancedHMC ──────── v0.2.20
 Installed Parameters ───────── v0.12.0
 Installed StatsFuns ────────── v0.9.3
 Installed StaticArrays ─────── v0.12.1
 Installed DataStructures ───── v0.17.9
 Installed Rmath ────────────── v0.6.0
 Installed OrderedCollections ─ v1.1.0
 Installed DataAPI ──────────── v1.1.0
 Installed MacroTools ───────── v0.5.3
 Installed LazyArrays ───────── v0.14.11
 Installed ArgCheck ─────────── v1.0.1
 Installed ProgressMeter ────── v1.2.0
 Installed SpecialFunctions ─── v0.9.0
 Installed Requires ─────────── v1.0.0
 Installed FillArrays ───────── v0.8.4
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed ArrayLayouts ─────── v0.1.5
 Installed BinaryProvider ───── v0.5.8
 Installed StatsBase ────────── v0.32.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_OJ4YAG/Project.toml`
 [no changes]
  Updating `/tmp/jl_OJ4YAG/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed ForwardDiff ───────────────── v0.10.9
 Installed Bijectors ─────────────────── v0.5.2
 Installed Zygote ────────────────────── v0.4.6
 Installed Roots ─────────────────────── v0.8.4
 Installed MCMCChains ────────────────── v1.0.1
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed PooledArrays ──────────────── v0.5.3
 Installed ZygoteRules ───────────────── v0.2.0
 Installed UnicodePlots ──────────────── v1.1.0
 Installed Distributions ─────────────── v0.22.3
 Installed OrdinaryDiffEq ────────────── v5.28.1
 Installed Turing ────────────────────── v0.8.3
 Installed SimpleTraits ──────────────── v0.9.1
 Installed TreeViews ─────────────────── v0.3.0
 Installed BenchmarkTools ────────────── v0.4.3
 Installed RecursiveArrayTools ───────── v2.0.4
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed GenericSVD ────────────────── v0.2.2
 Installed IterTools ─────────────────── v1.3.0
 Installed Polynomials ───────────────── v0.6.0
 Installed TableTraits ───────────────── v1.0.0
 Installed JSON ──────────────────────── v0.21.0
 Installed LineSearches ──────────────── v7.0.1
 Installed Reexport ──────────────────── v0.2.0
 Installed Tracker ───────────────────── v0.2.6
 Installed CommonSubexpressions ──────── v0.2.0
 Installed NLSolversBase ─────────────── v7.6.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed DocStringExtensions ───────── v0.8.1
 Installed MappedArrays ──────────────── v0.2.2
 Installed KernelDensity ─────────────── v0.5.1
 Installed PositiveFactorizations ────── v0.2.3
 Installed DataFrames ────────────────── v0.20.0
 Installed DistributionsAD ───────────── v0.2.0
 Installed Inflate ───────────────────── v0.1.1
 Installed RecipesBase ───────────────── v0.7.0
 Installed Parsers ───────────────────── v0.3.10
 Installed CategoricalArrays ─────────── v0.7.7
 Installed SparseDiffTools ───────────── v1.2.0
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed DiffEqDiffTools ───────────── v1.7.0
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed FiniteDiff ────────────────── v2.0.0
 Installed DynamicPPL ────────────────── v0.1.1
 Installed Ratios ────────────────────── v0.3.1
 Installed ExponentialUtilities ──────── v1.6.0
 Installed PDMats ────────────────────── v0.9.11
 Installed Tables ────────────────────── v0.2.11
 Installed NaNMath ───────────────────── v0.3.3
 Installed QuadGK ────────────────────── v2.3.1
 Installed ChainRulesCore ────────────── v0.5.5
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed ArrayInterface ────────────── v2.3.1
 Installed NNlib ─────────────────────── v0.6.4
 Installed RangeArrays ───────────────── v0.3.2
 Installed FunctionWrappers ──────────── v1.0.0
 Installed Compat ────────────────────── v2.2.0
 Installed MuladdMacro ───────────────── v0.2.2
 Installed IRTools ───────────────────── v0.3.0
 Installed LightGraphs ───────────────── v1.3.0
 Installed IntervalSets ──────────────── v0.3.2
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed Showoff ───────────────────── v0.3.1
 Installed InvertedIndices ───────────── v1.0.0
 Installed Libtask ───────────────────── v0.3.1
 Installed IterativeSolvers ──────────── v0.8.1
 Installed Interpolations ────────────── v0.12.7
 Installed Optim ─────────────────────── v0.20.0
 Installed DiffResults ───────────────── v1.0.2
 Installed Arpack ────────────────────── v0.4.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed TransformVariables ────────── v0.3.9
 Installed RecursiveFactorization ────── v0.1.0
 Installed DiffEqBase ────────────────── v6.13.0
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed Adapt ─────────────────────── v1.0.0
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed Combinatorics ─────────────── v0.7.0
 Installed FFTW ──────────────────────── v1.2.0
 Installed DiffRules ─────────────────── v1.0.0
 Installed LogDensityProblems ────────── v0.10.1
 Installed OffsetArrays ──────────────── v1.0.2
 Installed AxisArrays ────────────────── v0.4.1
  Updating `/tmp/jl_DMJ1OX/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.22.3
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_DMJ1OX/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.5.5
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.13.0
  [01453d9d] + DiffEqDiffTools v1.7.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.22.3
  [ced4e74d] + DistributionsAD v0.2.0
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [6a86dc24] + FiniteDiff v2.0.0
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.0
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.7
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.1
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v1.0.2
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.20.0
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [90014a1f] + PDMats v0.9.11
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.4
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.2.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_w5sGlo/Project.toml`
 [no changes]
  Updating `/tmp/jl_w5sGlo/Manifest.toml`
 [no changes]
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_hOA4tn/Project.toml`
 [no changes]
  Updating `/tmp/jl_hOA4tn/Manifest.toml`
 [no changes]
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_YjA3AE/Project.toml`
 [no changes]
  Updating `/tmp/jl_YjA3AE/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_DMJ1OX/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.22.3
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.168141633
│   t_steps = 0.007520733
└   t_step / t_steps = 22.35708048670256
WARNING: Method definition vec(Number) in module FiniteDiff at /home/pkgeval/.julia/packages/FiniteDiff/zeWoZ/src/jacobians.jl:114 overwritten in module DiffEqDiffTools at /home/pkgeval/.julia/packages/DiffEqDiffTools/3mm8U/src/jacobians.jl:114.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 5:33:39[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.0005608775586239724
  log_density:                   -11.382802843736314
  hamiltonian_energy:            16.930179471053243
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  7.486007931835033
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  7%|██▏                            |  ETA: 0:00:35[K
  iterations:                    816
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               0.9850618722004609
  log_density:                   -19.33321802126575
  hamiltonian_energy:            29.023282374430014
  hamiltonian_energy_error:      -0.5345043015365825
  max_hamiltonian_energy_error:  -1.2305860911060904
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8149690022474219
  nom_step_size:                 0.8149690022474219
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8649617730580901, 1.0244 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▉                            |  ETA: 0:00:27[K
  iterations:                    1096
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.4897230228734371
  log_density:                   -11.329463921203796
  hamiltonian_energy:            16.639597531317236
  hamiltonian_energy_error:      -0.8244870377724638
  max_hamiltonian_energy_error:  1.630547672170941
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.2053183136325298
  nom_step_size:                 1.2053183136325298
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9184171014390005, 0.9827 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▎                           |  ETA: 0:00:23[K
  iterations:                    1282
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9828577277369713
  log_density:                   -14.615714754178203
  hamiltonian_energy:            17.469937973007053
  hamiltonian_energy_error:      0.0344039092651407
  max_hamiltonian_energy_error:  -0.3888051154076315
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8919221235729894
  nom_step_size:                 0.8919221235729894
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9184171014390005, 0.9827 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:19[K
  iterations:                    1567
  n_steps:                       95
  is_accept:                     true
  acceptance_rate:               0.7846636012331143
  log_density:                   -17.064530577775294
  hamiltonian_energy:            24.500831123743176
  hamiltonian_energy_error:      0.1318043096249113
  max_hamiltonian_energy_error:  0.7174378097991827
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.831346382853664
  nom_step_size:                 0.831346382853664
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9184171014390005, 0.9827 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▌                          |  ETA: 0:00:17[K
  iterations:                    1762
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.616949763818661
  log_density:                   -16.978569711348392
  hamiltonian_energy:            21.279130432907426
  hamiltonian_energy_error:      0.5997031188412585
  max_hamiltonian_energy_error:  1.0739756794409985
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.9450381773023679
  nom_step_size:                 0.9450381773023679
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9184171014390005, 0.9827 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▍                         |  ETA: 0:00:15[K
  iterations:                    2061
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9646503397220518
  log_density:                   -14.042192419136349
  hamiltonian_energy:            23.17425800593844
  hamiltonian_energy_error:      -0.5066629359568431
  max_hamiltonian_energy_error:  -0.5066629359568431
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▏                        |  ETA: 0:00:13[K
  iterations:                    2382
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8662879610212916
  log_density:                   -13.778892068581818
  hamiltonian_energy:            19.85777805627008
  hamiltonian_energy_error:      -0.024447657358088293
  max_hamiltonian_energy_error:  0.27601428668389616
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████▎                       |  ETA: 0:00:11[K
  iterations:                    2793
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7913331744887963
  log_density:                   -14.211371726205511
  hamiltonian_energy:            16.07470222493724
  hamiltonian_energy_error:      0.35413594498247924
  max_hamiltonian_energy_error:  0.373378417325247
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████▏                      |  ETA: 0:00:10[K
  iterations:                    3124
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8596455476458835
  log_density:                   -11.381340866637206
  hamiltonian_energy:            14.539022812496915
  hamiltonian_energy_error:      0.07594639381171042
  max_hamiltonian_energy_error:  0.3111951666165318
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|█████████▏                     |  ETA: 0:00:08[K
  iterations:                    3531
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7307329404724158
  log_density:                   -13.399782880095321
  hamiltonian_energy:            25.012975823502067
  hamiltonian_energy_error:      -0.39300612454324835
  max_hamiltonian_energy_error:  0.6152382568943331
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|██████████                     |  ETA: 0:00:08[K
  iterations:                    3886
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6711407681370777
  log_density:                   -14.518663618928704
  hamiltonian_energy:            22.405451407625396
  hamiltonian_energy_error:      0.09521979907680844
  max_hamiltonian_energy_error:  0.8181181954729375
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████                    |  ETA: 0:00:07[K
  iterations:                    4276
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9763886457917976
  log_density:                   -15.416599707662694
  hamiltonian_energy:            20.67391622860608
  hamiltonian_energy_error:      -0.1366989794470399
  max_hamiltonian_energy_error:  -0.4153613440173842
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████                   |  ETA: 0:00:06[K
  iterations:                    4629
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8436911113412344
  log_density:                   -12.260896418542977
  hamiltonian_energy:            18.939924767196462
  hamiltonian_energy_error:      -0.15755647698919262
  max_hamiltonian_energy_error:  0.393913868858057
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████                  |  ETA: 0:00:05[K
  iterations:                    5016
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9609883361784463
  log_density:                   -14.948150930302848
  hamiltonian_energy:            17.352119568986055
  hamiltonian_energy_error:      0.10060096398043683
  max_hamiltonian_energy_error:  -0.3067910424529927
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▉                 |  ETA: 0:00:05[K
  iterations:                    5357
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.67729939435643
  log_density:                   -16.2055426494712
  hamiltonian_energy:            20.131447122205863
  hamiltonian_energy_error:      0.5723479923808128
  max_hamiltonian_energy_error:  0.8486103965069205
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▊                |  ETA: 0:00:05[K
  iterations:                    5726
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9830590834591764
  log_density:                   -14.017685544018953
  hamiltonian_energy:            16.218812482192323
  hamiltonian_energy_error:      0.09563944609165631
  max_hamiltonian_energy_error:  -0.1785282113019484
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▋               |  ETA: 0:00:04[K
  iterations:                    6059
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8607423525838218
  log_density:                   -14.449377589278061
  hamiltonian_energy:            18.9248983097211
  hamiltonian_energy_error:      0.12136430154039246
  max_hamiltonian_energy_error:  0.3021973462317611
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▋              |  ETA: 0:00:04[K
  iterations:                    6436
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8938439073747207
  log_density:                   -15.384910070878135
  hamiltonian_energy:            24.393093323827674
  hamiltonian_energy_error:      -0.22641814609338695
  max_hamiltonian_energy_error:  0.34142085116156906
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▌             |  ETA: 0:00:03[K
  iterations:                    6761
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -18.172512996012784
  hamiltonian_energy:            27.584957814824115
  hamiltonian_energy_error:      -0.19321464713489078
  max_hamiltonian_energy_error:  -0.26783632124551815
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▌            |  ETA: 0:00:03[K
  iterations:                    7146
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.81621505482226
  log_density:                   -14.583391370452127
  hamiltonian_energy:            17.038060404272223
  hamiltonian_energy_error:      0.36364228600359993
  max_hamiltonian_energy_error:  0.3968870821582975
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▍           |  ETA: 0:00:03[K
  iterations:                    7485
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8352087381489838
  log_density:                   -12.202423766576548
  hamiltonian_energy:            20.877399376207293
  hamiltonian_energy_error:      -0.2330608483320411
  max_hamiltonian_energy_error:  0.5310385314874075
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▍          |  ETA: 0:00:03[K
  iterations:                    7864
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9995310304377245
  log_density:                   -13.653939362711913
  hamiltonian_energy:            17.02178268983554
  hamiltonian_energy_error:      -0.0608767516615103
  max_hamiltonian_energy_error:  -0.20328279574570018
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▎         |  ETA: 0:00:02[K
  iterations:                    8229
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9448180798882058
  log_density:                   -16.11180221169221
  hamiltonian_energy:            21.676431160910006
  hamiltonian_energy_error:      0.06165801678070082
  max_hamiltonian_energy_error:  0.12861795825670086
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▎        |  ETA: 0:00:02[K
  iterations:                    8591
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9188143942951239
  log_density:                   -14.191729155767451
  hamiltonian_energy:            20.462962340022237
  hamiltonian_energy_error:      -0.06835843680167031
  max_hamiltonian_energy_error:  0.1988173792565746
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▎       |  ETA: 0:00:02[K
  iterations:                    9016
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8555452182937159
  log_density:                   -15.658144630738784
  hamiltonian_energy:            17.161727899529247
  hamiltonian_energy_error:      0.3106477419644875
  max_hamiltonian_energy_error:  0.3106477419644875
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████▏      |  ETA: 0:00:01[K
  iterations:                    9343
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9932887126478542
  log_density:                   -14.209681335873904
  hamiltonian_energy:            22.272645735849586
  hamiltonian_energy_error:      -0.5672269273411104
  max_hamiltonian_energy_error:  -0.7488637444559529
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 81%|█████████████████████████▎     |  ETA: 0:00:01[K
  iterations:                    9770
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8332451764653614
  log_density:                   -10.905851835812856
  hamiltonian_energy:            18.133892967069517
  hamiltonian_energy_error:      -0.2408397597012275
  max_hamiltonian_energy_error:  0.547226042972941
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████▏    |  ETA: 0:00:01[K
  iterations:                    10121
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5525591397812643
  log_density:                   -13.330561312301057
  hamiltonian_energy:            21.553969368512664
  hamiltonian_energy_error:      0.15666208818859317
  max_hamiltonian_energy_error:  0.9360197043356457
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:01[K
  iterations:                    10532
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9326547902125701
  log_density:                   -14.189999122711681
  hamiltonian_energy:            20.619384117762323
  hamiltonian_energy_error:      -0.30485063895644515
  max_hamiltonian_energy_error:  -0.6120811002722988
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▏  |  ETA: 0:00:01[K
  iterations:                    10876
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7776971379136633
  log_density:                   -14.038116899253835
  hamiltonian_energy:            19.172040778325034
  hamiltonian_energy_error:      0.2105894471277523
  max_hamiltonian_energy_error:  0.5218263928053517
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▏ |  ETA: 0:00:00[K
  iterations:                    11277
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8761869365721328
  log_density:                   -14.214185192089856
  hamiltonian_energy:            16.25103125058715
  hamiltonian_energy_error:      0.2846880608184925
  max_hamiltonian_energy_error:  0.29856612090637213
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████ |  ETA: 0:00:00[K
  iterations:                    11624
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9902679739265378
  log_density:                   -13.73712474930381
  hamiltonian_energy:            16.851013933701136
  hamiltonian_energy_error:      -0.09385375910391502
  max_hamiltonian_energy_error:  -0.37195254431004443
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9840458848539766
  log_density:                   -17.08281713249282
  hamiltonian_energy:            21.82418834786351
  hamiltonian_energy_error:      0.08262373267765
  max_hamiltonian_energy_error:  -0.2248397447096231
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6890860090989475
  nom_step_size:                 0.6890860090989475
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0556835865720373, 1.1145 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.908496307 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0556835865720373, 1.1145 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.689), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.06852650157981
└   average_acceptance_rate = 0.8710384801009565
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.818014912 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            3 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢆⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢣⠀⠀⠀⠀⡎⠈⢆│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠣⢄⠀⡸⠀⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⢠⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠑⠇⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⡸⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⡇⠀⢇⢀⠎⠉⠒⠢⢄⢀⠔⠊⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⢸⠀⠀⠘⠃⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢇⠀⠀⠀⢀⠎⠀⠀⣀⠤⠒⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡈⡆⠀⡰⠃⣀⠔⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⢜⡴⠓⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
