Julia Version 1.5.0-DEV.147
Commit e0740fe5a6 (2020-01-24 14:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed Missings ─────────── v0.4.3
 Installed ProgressMeter ────── v1.2.0
 Installed Requires ─────────── v1.0.0
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed OrderedCollections ─ v1.1.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed LazyArrays ───────── v0.14.11
 Installed StatsBase ────────── v0.32.0
 Installed MacroTools ───────── v0.5.3
 Installed FillArrays ───────── v0.8.4
 Installed ArrayLayouts ─────── v0.1.5
 Installed DataAPI ──────────── v1.1.0
 Installed StatsFuns ────────── v0.9.3
 Installed SpecialFunctions ─── v0.9.0
 Installed SortingAlgorithms ── v0.3.1
 Installed Rmath ────────────── v0.6.0
 Installed DataStructures ───── v0.17.9
 Installed StaticArrays ─────── v0.12.1
 Installed BinaryProvider ───── v0.5.8
 Installed Parameters ───────── v0.12.0
 Installed InplaceOps ───────── v0.3.0
 Installed ArgCheck ─────────── v1.0.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_iN8Fle/Project.toml`
 [no changes]
  Updating `/tmp/jl_iN8Fle/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed ForwardDiff ───────────────── v0.10.9
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed Bijectors ─────────────────── v0.5.2
 Installed PooledArrays ──────────────── v0.5.3
 Installed PositiveFactorizations ────── v0.2.3
 Installed Zygote ────────────────────── v0.4.6
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed Combinatorics ─────────────── v0.7.0
 Installed Distributions ─────────────── v0.22.3
 Installed UnicodePlots ──────────────── v1.1.0
 Installed IterTools ─────────────────── v1.3.0
 Installed OrdinaryDiffEq ────────────── v5.28.1
 Installed MCMCChains ────────────────── v1.0.1
 Installed Turing ────────────────────── v0.8.3
 Installed Libtask ───────────────────── v0.3.1
 Installed MuladdMacro ───────────────── v0.2.2
 Installed ChainRulesCore ────────────── v0.5.5
 Installed ArrayInterface ────────────── v2.3.1
 Installed TableTraits ───────────────── v1.0.0
 Installed DynamicPPL ────────────────── v0.1.1
 Installed Compat ────────────────────── v2.2.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed IterativeSolvers ──────────── v0.8.1
 Installed Tables ────────────────────── v0.2.11
 Installed SimpleTraits ──────────────── v0.9.1
 Installed NLSolversBase ─────────────── v7.6.0
 Installed RecursiveArrayTools ───────── v2.0.4
 Installed RecipesBase ───────────────── v0.7.0
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed DiffEqBase ────────────────── v6.13.0
 Installed NNlib ─────────────────────── v0.6.4
 Installed Optim ─────────────────────── v0.20.0
 Installed Arpack ────────────────────── v0.4.0
 Installed RangeArrays ───────────────── v0.3.2
 Installed LightGraphs ───────────────── v1.3.0
 Installed JSON ──────────────────────── v0.21.0
 Installed FiniteDiff ────────────────── v2.0.0
 Installed DistributionsAD ───────────── v0.2.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed DiffEqDiffTools ───────────── v1.7.0
 Installed Roots ─────────────────────── v0.8.4
 Installed IntervalSets ──────────────── v0.3.2
 Installed Reexport ──────────────────── v0.2.0
 Installed CommonSubexpressions ──────── v0.2.0
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed Ratios ────────────────────── v0.3.1
 Installed Inflate ───────────────────── v0.1.1
 Installed GenericSVD ────────────────── v0.2.2
 Installed FFTW ──────────────────────── v1.2.0
 Installed SparseDiffTools ───────────── v1.2.0
 Installed NaNMath ───────────────────── v0.3.3
 Installed TransformVariables ────────── v0.3.9
 Installed OffsetArrays ──────────────── v1.0.2
 Installed PDMats ────────────────────── v0.9.11
 Installed DocStringExtensions ───────── v0.8.1
 Installed KernelDensity ─────────────── v0.5.1
 Installed DataValueInterfaces ───────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed DiffRules ─────────────────── v1.0.0
 Installed IRTools ───────────────────── v0.3.0
 Installed Adapt ─────────────────────── v1.0.0
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed CategoricalArrays ─────────── v0.7.7
 Installed QuadGK ────────────────────── v2.3.1
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed ExponentialUtilities ──────── v1.6.0
 Installed FunctionWrappers ──────────── v1.0.0
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed Parsers ───────────────────── v0.3.10
 Installed DiffResults ───────────────── v1.0.2
 Installed Polynomials ───────────────── v0.6.0
 Installed BenchmarkTools ────────────── v0.4.3
 Installed AxisArrays ────────────────── v0.4.1
 Installed Interpolations ────────────── v0.12.7
 Installed ZygoteRules ───────────────── v0.2.0
 Installed Showoff ───────────────────── v0.3.1
 Installed TreeViews ─────────────────── v0.3.0
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed LogDensityProblems ────────── v0.10.1
 Installed DataFrames ────────────────── v0.20.0
 Installed LineSearches ──────────────── v7.0.1
 Installed Tracker ───────────────────── v0.2.6
 Installed RecursiveFactorization ────── v0.1.0
 Installed VertexSafeGraphs ──────────── v0.1.1
  Updating `/tmp/jl_z8yblN/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.22.3
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_z8yblN/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.5.5
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.13.0
  [01453d9d] + DiffEqDiffTools v1.7.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.22.3
  [ced4e74d] + DistributionsAD v0.2.0
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [6a86dc24] + FiniteDiff v2.0.0
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.0
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.7
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.1
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v1.0.2
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.20.0
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [90014a1f] + PDMats v0.9.11
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.4
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.2.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_kKOVhu/Project.toml`
 [no changes]
  Updating `/tmp/jl_kKOVhu/Manifest.toml`
 [no changes]
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_NUV8g0/Project.toml`
 [no changes]
  Updating `/tmp/jl_NUV8g0/Manifest.toml`
 [no changes]
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_Asc85I/Project.toml`
 [no changes]
  Updating `/tmp/jl_Asc85I/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_z8yblN/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.22.3
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.163724139
│   t_steps = 0.007438942
└   t_step / t_steps = 22.009062444632583
WARNING: Method definition vec(Number) in module FiniteDiff at /home/pkgeval/.julia/packages/FiniteDiff/zeWoZ/src/jacobians.jl:114 overwritten in module DiffEqDiffTools at /home/pkgeval/.julia/packages/DiffEqDiffTools/3mm8U/src/jacobians.jl:114.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 5:00:26[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.004565162251287343
  log_density:                   -11.966613139998232
  hamiltonian_energy:            17.243216554630468
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  5.389301223116146
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:19[K
  iterations:                    1325
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9812331938250706
  log_density:                   -14.67502840047181
  hamiltonian_energy:            21.04268629493685
  hamiltonian_energy_error:      -0.32670412049831654
  max_hamiltonian_energy_error:  -0.4908223689522764
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8576989795935026
  nom_step_size:                 0.8576989795935026
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9709258539471813, 1.0924 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████▏                          |  ETA: 0:00:16[K
  iterations:                    1605
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9034375700337252
  log_density:                   -10.464656672416055
  hamiltonian_energy:            13.736898533102249
  hamiltonian_energy_error:      -0.26142299265229774
  max_hamiltonian_energy_error:  0.28687240277507264
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8932168595653339
  nom_step_size:                 0.8932168595653339
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9709258539471813, 1.0924 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▊                          |  ETA: 0:00:14[K
  iterations:                    1844
  n_steps:                       27
  is_accept:                     true
  acceptance_rate:               0.7799670861197086
  log_density:                   -15.042865559167833
  hamiltonian_energy:            18.99936736599205
  hamiltonian_energy_error:      0.34680478427503303
  max_hamiltonian_energy_error:  0.8885549187742114
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8481569094409342
  nom_step_size:                 0.8481569094409342
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9709258539471813, 1.0924 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|██████                         |  ETA: 0:00:11[K
  iterations:                    2304
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.12575428200964
  hamiltonian_energy:            22.92830895474337
  hamiltonian_energy_error:      -0.15320611411630836
  max_hamiltonian_energy_error:  -0.17886685442086403
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████                        |  ETA: 0:00:09[K
  iterations:                    2711
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7809411173941331
  log_density:                   -14.26507127263812
  hamiltonian_energy:            19.702060502508566
  hamiltonian_energy_error:      0.12525067030915693
  max_hamiltonian_energy_error:  0.6709836866888885
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████▏                      |  ETA: 0:00:08[K
  iterations:                    3130
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9704694078466767
  log_density:                   -11.088691007457866
  hamiltonian_energy:            14.607112318374483
  hamiltonian_energy_error:      -0.19431952485611603
  max_hamiltonian_energy_error:  -0.19431952485611603
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▍                     |  ETA: 0:00:07[K
  iterations:                    3649
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8990099965695916
  log_density:                   -14.845090600182882
  hamiltonian_energy:            18.098381078561104
  hamiltonian_energy_error:      0.20483571185336658
  max_hamiltonian_energy_error:  0.20483571185336658
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▌                    |  ETA: 0:00:06[K
  iterations:                    4054
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8787159471728074
  log_density:                   -11.585904439994943
  hamiltonian_energy:            16.90763828370358
  hamiltonian_energy_error:      -0.0994069643801545
  max_hamiltonian_energy_error:  0.3254117443853737
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▋                   |  ETA: 0:00:05[K
  iterations:                    4476
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9959654798845227
  log_density:                   -14.347449735526286
  hamiltonian_energy:            18.644850734370056
  hamiltonian_energy_error:      -0.0024608473138947318
  max_hamiltonian_energy_error:  -0.2310437928789888
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▉                  |  ETA: 0:00:05[K
  iterations:                    4977
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7408925349119703
  log_density:                   -13.781482220486117
  hamiltonian_energy:            20.774104713027988
  hamiltonian_energy_error:      0.024135218514334866
  max_hamiltonian_energy_error:  0.6070624816746282
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▉                 |  ETA: 0:00:04[K
  iterations:                    5390
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9959358774410411
  log_density:                   -16.42367258646713
  hamiltonian_energy:            23.651761787632502
  hamiltonian_energy_error:      -0.1466857585913317
  max_hamiltonian_energy_error:  -0.24955990052936983
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|███████████████                |  ETA: 0:00:04[K
  iterations:                    5807
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.891071337199744
  hamiltonian_energy:            24.329522802428173
  hamiltonian_energy_error:      -0.6120266112561019
  max_hamiltonian_energy_error:  -1.0819540950541366
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████▎              |  ETA: 0:00:03[K
  iterations:                    6288
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8440475343705227
  log_density:                   -12.907078983961277
  hamiltonian_energy:            14.070627556618597
  hamiltonian_energy_error:      0.31376010420706457
  max_hamiltonian_energy_error:  0.31440563545953815
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▋             |  ETA: 0:00:03[K
  iterations:                    6802
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9935293938045974
  log_density:                   -10.626957947190043
  hamiltonian_energy:            13.066653839633814
  hamiltonian_energy_error:      -0.2387523723475642
  max_hamiltonian_energy_error:  -0.28855332525392896
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▋            |  ETA: 0:00:03[K
  iterations:                    7207
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7474716936845583
  log_density:                   -12.580783523167385
  hamiltonian_energy:            16.67785613417387
  hamiltonian_energy_error:      0.2253153996337538
  max_hamiltonian_energy_error:  0.5794503028369817
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▋           |  ETA: 0:00:02[K
  iterations:                    7612
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9976195701763872
  log_density:                   -16.83906619811102
  hamiltonian_energy:            19.598179905137915
  hamiltonian_energy_error:      0.016803398423594018
  max_hamiltonian_energy_error:  -0.5856254857320238
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████          |  ETA: 0:00:02[K
  iterations:                    8108
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9913861080280778
  log_density:                   -21.26901410152376
  hamiltonian_energy:            26.981494244228486
  hamiltonian_energy_error:      0.062191670537352195
  max_hamiltonian_energy_error:  -0.7077163283954491
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████         |  ETA: 0:00:02[K
  iterations:                    8522
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9684615323956424
  log_density:                   -15.05532536548213
  hamiltonian_energy:            22.549168947822015
  hamiltonian_energy_error:      -0.18699850997740342
  max_hamiltonian_energy_error:  -0.18699850997740342
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 74%|███████████████████████▏       |  ETA: 0:00:01[K
  iterations:                    8938
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9036897751939884
  log_density:                   -14.449934537430895
  hamiltonian_energy:            17.942688838207154
  hamiltonian_energy_error:      0.13378013525279187
  max_hamiltonian_energy_error:  0.22026066391083887
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▍      |  ETA: 0:00:01[K
  iterations:                    9447
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9213090586413271
  log_density:                   -10.909547514297797
  hamiltonian_energy:            13.376308894449672
  hamiltonian_energy_error:      0.015362458365530074
  max_hamiltonian_energy_error:  0.162970789484973
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▌     |  ETA: 0:00:01[K
  iterations:                    9872
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9980034388122553
  log_density:                   -16.65435850162275
  hamiltonian_energy:            20.977943199559324
  hamiltonian_energy_error:      0.014074511203077122
  max_hamiltonian_energy_error:  -0.2679304478273181
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▋    |  ETA: 0:00:01[K
  iterations:                    10288
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9866221823502629
  log_density:                   -13.669256109003218
  hamiltonian_energy:            18.502482041841322
  hamiltonian_energy_error:      -0.12268397618179705
  max_hamiltonian_energy_error:  -0.21553471120527945
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 90%|███████████████████████████▉   |  ETA: 0:00:01[K
  iterations:                    10789
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9996007465012555
  log_density:                   -13.159135828608871
  hamiltonian_energy:            15.87281401398477
  hamiltonian_energy_error:      0.0027986871651677347
  max_hamiltonian_energy_error:  -0.11897274774524291
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|████████████████████████████▉  |  ETA: 0:00:00[K
  iterations:                    11198
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.929845335611528
  hamiltonian_energy:            21.77929534865453
  hamiltonian_energy_error:      -0.8796456334908527
  max_hamiltonian_energy_error:  -0.8796456334908527
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████ |  ETA: 0:00:00[K
  iterations:                    11596
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7098823267525682
  log_density:                   -21.706725750742855
  hamiltonian_energy:            25.38346738466658
  hamiltonian_energy_error:      0.8274480547701089
  max_hamiltonian_energy_error:  0.8274480547701089
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:04[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.907135137671123
  log_density:                   -14.916746067738028
  hamiltonian_energy:            18.125414256750894
  hamiltonian_energy_error:      0.21217753250061477
  max_hamiltonian_energy_error:  0.22924712761266264
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7181114377179538
  nom_step_size:                 0.7181114377179538
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9494376128833351, 1.0505 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 4.885164562 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9494376128833351, 1.0505 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.718), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.091812178737634
└   average_acceptance_rate = 0.8617766826050058
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.995703427 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠑⠤⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢇⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠘⡄⠀⠀⠀⢀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⢰⢆⠀⠀⠀⠀⠀⠀⢀⢄⠀⠀⠀⢰⠁⠀⠸⡠⠔⠉⠉│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⠀⠀⠀⠀⠀⠀⡎⠈⢆⠀⡠⠒⠒⠊⠁⠀⠑⢄⡀⡎⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⡸⠀⠀⠈⠊⠀⠀⠀⠀⠀⠀⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠁⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⢀⡠⠤⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢣⠀⠀⠀⡜⠀⠀⠀⢀⡠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠢⢵⡠⠮⠤⠒⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
