Julia Version 1.5.0-DEV.147
Commit e0740fe5a6 (2020-01-24 14:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed PooledArrays ──────────────── v0.5.3
 Installed Missings ──────────────────── v0.4.3
 Installed KCenters ──────────────────── v0.1.9
 Installed Compat ────────────────────── v3.2.0
 Installed TableTraits ───────────────── v1.0.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed MLDataPattern ─────────────── v0.5.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed Tables ────────────────────── v0.2.11
 Installed Reexport ──────────────────── v0.2.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed DataStructures ────────────── v0.17.9
 Installed DataValueInterfaces ───────── v1.0.0
 Installed JSON ──────────────────────── v0.21.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Parsers ───────────────────── v0.3.10
 Installed LearnBase ─────────────────── v0.2.2
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed MLDataUtils ───────────────── v0.5.0
 Installed DataFrames ────────────────── v0.20.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_0YX4zY/Project.toml`
 [no changes]
  Updating `/tmp/jl_0YX4zY/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_0YX4zY/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 145.86999999999998
[ Info: 83.60000000000007
[ Info: 41.53999999999999
[ Info: 25.280000000000005
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.2399983987154
[ Info: 76.62000116877203
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 17.928185104121262
inertia(cdnet.distances) = 22.38332794425571
inertia(crand.distances) = 21.219488469434975
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4912109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4912109375,"f1":0.6350593850593855,"seconds":4.3585896492004395e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.0546875,"distances_sum":1200.1873249801993}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2333984375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.945082426071167e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.890625,"distances_sum":576.9672225336948}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.813768523143524,"seconds":4.798173904418945e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.3359375,"distances_sum":1779.4753742844434}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6982421875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6982421875,"f1":0.813768523143524,"seconds":4.798173904418945e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.3359375,"distances_sum":1779.4753742844434}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8655048076923086,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.578125,"distances_sum":2038.850906996996}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9386249167499171,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.796875,"distances_sum":2458.6473054560074}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8738813270063279,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.640625,"distances_sum":2080.94675546204}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9386249167499171,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.796875,"distances_sum":2458.6473054560074}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9600331959706964,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9140625,"distances_sum":2622.8624331087963}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9675080128205135,"seconds":6.455928087234497e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2699.4363484213595}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9675080128205135,"seconds":6.455928087234497e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2699.4363484213595}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9675080128205135,"seconds":6.455928087234497e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2699.4363484213595}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5712890625,"f1":null,"seconds":4.325062036514282e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":7.1796875,"distances_sum":1237.0944482309205}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6015625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.6015625,"f1":0.739265942390943,"seconds":3.952533006668091e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":7.2421875,"distances_sum":1320.625598744937}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.822782946220447,"seconds":4.688277840614319e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":7.890625,"distances_sum":1634.4407689333048}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.708984375,"f1":0.822782946220447,"seconds":4.688277840614319e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":7.890625,"distances_sum":1634.4407689333048}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.967559523809524,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.921875,"distances_sum":2465.493706814155}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8703536047286056,"seconds":4.112720489501953e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.5234375,"distances_sum":1877.5111549344213}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9206501831501838,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.59375,"distances_sum":2153.964626353897}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8680345695970705,"seconds":4.0549784898757935e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.5078125,"distances_sum":1829.168066876866}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9020463911088917,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.5625,"distances_sum":2047.2690979730564}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.967559523809524,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.921875,"distances_sum":2465.493706814155}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.967559523809524,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.921875,"distances_sum":2465.493706814155}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.967559523809524,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.921875,"distances_sum":2465.493706814155}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2060546875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2060546875,"f1":null,"seconds":3.978610038757324e-6,"exhaustive_search_seconds":1.866370439529419e-6,"evaluations":5.9453125,"distances_sum":487.7536131131789}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8166619838494847,"seconds":6.273388862609863e-6,"exhaustive_search_seconds":1.866370439529419e-6,"evaluations":7.9765625,"distances_sum":1650.7964003405075}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2138671875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2138671875,"f1":null,"seconds":4.179775714874268e-6,"exhaustive_search_seconds":1.866370439529419e-6,"evaluations":6.125,"distances_sum":513.7819056821365}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7021484375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.7021484375,"f1":0.8166619838494847,"seconds":6.273388862609863e-6,"exhaustive_search_seconds":1.866370439529419e-6,"evaluations":7.9765625,"distances_sum":1650.7964003405075}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8140515734265744,"seconds":6.470829248428345e-6,"exhaustive_search_seconds":1.866370439529419e-6,"evaluations":7.9765625,"distances_sum":1677.6644971512392}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9193540834165843,"seconds":7.294118404388428e-6,"exhaustive_search_seconds":1.866370439529419e-6,"evaluations":8.7421875,"distances_sum":2278.3384097856756}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8583984375,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8583984375,"f1":0.9193540834165843,"seconds":7.294118404388428e-6,"exhaustive_search_seconds":1.866370439529419e-6,"evaluations":8.7421875,"distances_sum":2278.3384097856756}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620592948717955,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.866370439529419e-6,"evaluations":8.9140625,"distances_sum":2573.6333307845607}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9379006410256415,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.866370439529419e-6,"evaluations":8.734375,"distances_sum":2358.658160634361}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.937700320512821,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.866370439529419e-6,"evaluations":8.796875,"distances_sum":2376.6064681090256}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.931370192307693,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.866370439529419e-6,"evaluations":8.7890625,"distances_sum":2330.015581901603}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620592948717955,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.866370439529419e-6,"evaluations":8.9140625,"distances_sum":2573.6333307845607}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620592948717955,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.866370439529419e-6,"evaluations":8.9140625,"distances_sum":2573.6333307845607}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.615234375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.615234375,"f1":0.7487011252636259,"seconds":3.935769200325012e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.875,"distances_sum":1513.1267336771161}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.529296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.529296875,"f1":null,"seconds":3.5408884286880493e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.2734375,"distances_sum":1289.866995902087}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3642578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.3642578125,"f1":0.5178411865911863,"seconds":3.078952431678772e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.28125,"distances_sum":840.1888880968507}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.615234375,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.615234375,"f1":0.7487011252636259,"seconds":3.935769200325012e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.875,"distances_sum":1513.1267336771161}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9498225732600736,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.796875,"distances_sum":2461.280050644125}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.784104437229438,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.21875,"distances_sum":1553.3260489462627}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9489474067599073,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.65625,"distances_sum":2440.137909191499}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8650994838494848,"seconds":4.4833868741989136e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.1171875,"distances_sum":1943.6542973137734}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8520417082917092,"seconds":4.6174973249435425e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.9375,"distances_sum":1868.0022365875252}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.63671875, conf: {"ssize":4,"bsize":4}, perf: {"precision":null,"recall":0.63671875,"f1":null,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.9609375,"distances_sum":1553.8405278224725}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9498225732600736,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.796875,"distances_sum":2461.280050644125}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9573546245421249,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8125,"distances_sum":2496.0279948504863}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.972619047619048,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8828125,"distances_sum":2604.2688206167295}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9788690476190479,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8671875,"distances_sum":2660.9494637460257}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9687156593406597,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8828125,"distances_sum":2566.49850523293}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9788690476190479,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8671875,"distances_sum":2660.9494637460257}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9788690476190479,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8671875,"distances_sum":2660.9494637460257}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.60546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.60546875,"f1":0.7389161186036193,"seconds":4.349276423454285e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":7.7265625,"distances_sum":1390.5365951439323}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.396484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.396484375,"f1":null,"seconds":2.693384885787964e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":6.4609375,"distances_sum":890.5585404133889}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.60546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.60546875,"f1":0.7389161186036193,"seconds":4.349276423454285e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":7.7265625,"distances_sum":1390.5365951439323}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.60546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.60546875,"f1":0.7389161186036193,"seconds":4.349276423454285e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":7.7265625,"distances_sum":1390.5365951439323}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.60546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.60546875,"f1":0.7389161186036193,"seconds":4.349276423454285e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":7.7265625,"distances_sum":1390.5365951439323}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8103084415584424,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":7.96875,"distances_sum":1693.2910908733782}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8751977189477198,"seconds":3.829598426818848e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.4296875,"distances_sum":1997.8263826151253}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8751977189477198,"seconds":3.829598426818848e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.4296875,"distances_sum":1997.8263826151253}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8939362720612727,"seconds":4.056841135025024e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.625,"distances_sum":2112.345874749817}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.944073634698635,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.84375,"distances_sum":2416.9702572785386}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.944073634698635,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.84375,"distances_sum":2416.9702572785386}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9479281135531142,"seconds":4.3120235204696655e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.921875,"distances_sum":2433.877373409443}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9544871794871801,"seconds":4.451721906661987e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.921875,"distances_sum":2485.147022752747}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9684523809523812,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.9375,"distances_sum":2590.0297638409957}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667467948717956,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.9140625,"distances_sum":2589.3061986739226}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9537431318681325,"seconds":7.163733243942261e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.828125,"distances_sum":2512.4868302559144}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9488527097902104,"seconds":7.314607501029968e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.9375,"distances_sum":2428.535713584845}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9684523809523812,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.9375,"distances_sum":2590.0297638409957}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9684523809523812,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.9375,"distances_sum":2590.0297638409957}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8098351301476308,"seconds":6.549060344696045e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.21875,"distances_sum":1613.8515757559037}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2197265625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2197265625,"f1":null,"seconds":3.719702363014221e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":5.453125,"distances_sum":526.6063121760388}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.220703125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.220703125,"f1":null,"seconds":3.6973506212234497e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":5.59375,"distances_sum":490.1686946613314}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.69921875,"f1":0.8098351301476308,"seconds":6.549060344696045e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.21875,"distances_sum":1613.8515757559037}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9456761988011992,"seconds":7.37607479095459e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.8671875,"distances_sum":2281.1186324331757}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8587490634365641,"seconds":6.487593054771423e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.4375,"distances_sum":1790.3967302026012}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9456761988011992,"seconds":7.37607479095459e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.8671875,"distances_sum":2281.1186324331757}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9649210164835169,"seconds":7.417052984237671e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.9140625,"distances_sum":2420.97825916315}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9483287545787551,"seconds":4.163011908531189e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.8671875,"distances_sum":2311.1245447217507}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9649210164835169,"seconds":7.417052984237671e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.9140625,"distances_sum":2420.97825916315}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9649210164835169,"seconds":7.417052984237671e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.9140625,"distances_sum":2420.97825916315}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5947265625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5947265625,"f1":null,"seconds":3.166496753692627e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":7.640625,"distances_sum":1317.613360087486}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":2.559274435043335e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":6.46875,"distances_sum":568.7459315756275}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5947265625,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.5947265625,"f1":null,"seconds":3.166496753692627e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":7.640625,"distances_sum":1317.613360087486}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6103515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.6103515625,"f1":0.7426771145521152,"seconds":3.2410025596618652e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":7.609375,"distances_sum":1408.1955866233482}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9042067307692315,"seconds":4.075467586517334e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.578125,"distances_sum":2079.5471204579376}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8761795496170505,"seconds":3.859400749206543e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.453125,"distances_sum":1940.3109450043387}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8358069014319023,"seconds":4.1425228118896484e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.0625,"distances_sum":1772.8274714218073}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.833984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.9042067307692315,"seconds":4.075467586517334e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.578125,"distances_sum":2079.5471204579376}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9153018856143866,"seconds":4.040077328681946e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.5703125,"distances_sum":2170.967577275659}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9508985805860812,"seconds":7.098540663719177e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.859375,"distances_sum":2405.166935557444}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9573348526473531,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.8984375,"distances_sum":2430.7328146779914}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9345524267399274,"seconds":4.7013163566589355e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.75,"distances_sum":2307.4312011350858}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9393715659340666,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.734375,"distances_sum":2319.563936619482}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9573348526473531,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.8984375,"distances_sum":2430.7328146779914}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9573348526473531,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.8984375,"distances_sum":2430.7328146779914}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.279296875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.279296875,"f1":null,"seconds":4.120171070098877e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":5.765625,"distances_sum":604.0685988871502}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51953125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.51953125,"f1":0.6701664654789661,"seconds":3.46451997756958e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":6.640625,"distances_sum":1028.8730377547226}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.51953125,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.51953125,"f1":0.6701664654789661,"seconds":3.46451997756958e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":6.640625,"distances_sum":1028.8730377547226}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8569003912753922,"seconds":4.55416738986969e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.0390625,"distances_sum":1685.1269474846388}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8347938519813527,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":7.9609375,"distances_sum":1630.2342705945266}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8408804736929744,"seconds":4.498288035392761e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.0,"distances_sum":1621.2353522918331}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8569003912753922,"seconds":4.55416738986969e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.0390625,"distances_sum":1685.1269474846388}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8971471237096242,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.3046875,"distances_sum":1951.1773862050113}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9076038544788552,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.453125,"distances_sum":1971.1992053843665}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9455617299367305,"seconds":7.275491952896118e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.7578125,"distances_sum":2248.766891269205}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9184700715950725,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.7265625,"distances_sum":2074.995734998589}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9163518772893781,"seconds":6.3497573137283325e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.625,"distances_sum":2065.4270819912927}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9455617299367305,"seconds":7.275491952896118e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.7578125,"distances_sum":2248.766891269205}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.904296875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9455617299367305,"seconds":7.275491952896118e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.7578125,"distances_sum":2248.766891269205}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.408203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.408203125,"f1":null,"seconds":3.1348317861557007e-6,"exhaustive_search_seconds":1.9390136003494263e-6,"evaluations":5.7265625,"distances_sum":873.5798344607003}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2509765625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2509765625,"f1":null,"seconds":3.514811396598816e-6,"exhaustive_search_seconds":1.9390136003494263e-6,"evaluations":5.484375,"distances_sum":568.5016736079554}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.408203125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.408203125,"f1":null,"seconds":3.1348317861557007e-6,"exhaustive_search_seconds":1.9390136003494263e-6,"evaluations":5.7265625,"distances_sum":873.5798344607003}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8984177281052289,"seconds":7.158145308494568e-6,"exhaustive_search_seconds":1.9390136003494263e-6,"evaluations":8.4921875,"distances_sum":1918.8426331402218}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.828125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.828125,"f1":0.8984177281052289,"seconds":7.158145308494568e-6,"exhaustive_search_seconds":1.9390136003494263e-6,"evaluations":8.4921875,"distances_sum":1918.8426331402218}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9577609890109896,"seconds":7.411465048789978e-6,"exhaustive_search_seconds":1.9390136003494263e-6,"evaluations":8.796875,"distances_sum":2333.387261921244}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9414923618048623,"seconds":7.558614015579224e-6,"exhaustive_search_seconds":1.9390136003494263e-6,"evaluations":8.6796875,"distances_sum":2242.754877162294}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9577609890109896,"seconds":7.411465048789978e-6,"exhaustive_search_seconds":1.9390136003494263e-6,"evaluations":8.796875,"distances_sum":2333.387261921244}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9577609890109896,"seconds":7.411465048789978e-6,"exhaustive_search_seconds":1.9390136003494263e-6,"evaluations":8.796875,"distances_sum":2333.387261921244}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8435564435564445,"seconds":9.67215746641159e-5,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":7.953125,"distances_sum":1601.1444456600311}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8581526112776122,"seconds":4.079192876815796e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":8.125,"distances_sum":1641.827010542808}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8119786463536471,"seconds":3.3713877201080322e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":7.9453125,"distances_sum":1475.2982925724664}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8581526112776122,"seconds":4.079192876815796e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":8.125,"distances_sum":1641.827010542808}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8684846403596412,"seconds":6.502494215965271e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":8.3125,"distances_sum":1703.5233783110007}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9515338827838831,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":8.8359375,"distances_sum":2219.833412529443}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9022435897435904,"seconds":4.459172487258911e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":8.4609375,"distances_sum":1883.1879870285}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9515338827838831,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":8.8359375,"distances_sum":2219.833412529443}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.953262362637363,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":8.828125,"distances_sum":2251.640406843785}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9593635531135536,"seconds":4.172325134277344e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":8.828125,"distances_sum":2293.1310893925}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9593635531135536,"seconds":4.172325134277344e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":8.828125,"distances_sum":2293.1310893925}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9593635531135536,"seconds":4.172325134277344e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":8.828125,"distances_sum":2293.1310893925}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5478515625,"f1":0.6897963147963153,"seconds":3.721565008163452e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":7.046875,"distances_sum":1081.1574922439252}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5478515625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5478515625,"f1":0.6897963147963153,"seconds":3.721565008163452e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":7.046875,"distances_sum":1081.1574922439252}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9276327838827848,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":8.765625,"distances_sum":2032.9855627862507}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7856209762459772,"seconds":3.4905970096588135e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":7.6171875,"distances_sum":1334.6474255147427}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9276327838827848,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":8.765625,"distances_sum":2032.9855627862507}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.963747710622711,"seconds":4.207715392112732e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":8.8046875,"distances_sum":2300.9598049734373}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.963747710622711,"seconds":4.207715392112732e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":8.8046875,"distances_sum":2300.9598049734373}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.963747710622711,"seconds":4.207715392112732e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":8.8046875,"distances_sum":2300.9598049734373}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6869144744144748,"seconds":4.408881068229675e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":6.359375,"distances_sum":1156.5625756022566}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7846162518037526,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":7.8359375,"distances_sum":1394.9282578174536}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8523414085914095,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":7.9296875,"distances_sum":1688.3771447521706}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8523414085914095,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":7.9296875,"distances_sum":1688.3771447521706}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9287119130869136,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.4921875,"distances_sum":2145.3586235932466}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.949427655677656,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.78125,"distances_sum":2277.8868385195738}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9003121878121884,"seconds":4.425644874572754e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.328125,"distances_sum":1955.5788197558952}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8964858058608067,"seconds":4.3585896492004395e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.34375,"distances_sum":1907.5560726449294}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.949427655677656,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.78125,"distances_sum":2277.8868385195738}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.971096611721612,"seconds":4.2729079723358154e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.8984375,"distances_sum":2403.4179129071786}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9787603021978024,"seconds":6.4373016357421875e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.921875,"distances_sum":2476.746072273404}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9678972069597073,"seconds":4.248693585395813e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.875,"distances_sum":2377.466242832106}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9572172619047625,"seconds":6.9122761487960815e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.8359375,"distances_sum":2311.9570010108455}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9787603021978024,"seconds":6.4373016357421875e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.921875,"distances_sum":2476.746072273404}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9787603021978024,"seconds":6.4373016357421875e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.921875,"distances_sum":2476.746072273404}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8602688977688987,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.1015625,"distances_sum":1709.8149265267216}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8602688977688987,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.1015625,"distances_sum":1709.8149265267216}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9635073260073265,"seconds":4.604458808898926e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.859375,"distances_sum":2308.969545510072}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9635073260073265,"seconds":4.604458808898926e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.859375,"distances_sum":2308.969545510072}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739411630036631,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9140625,"distances_sum":2371.2079190905947}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9797619047619047,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9375,"distances_sum":2419.504187899369}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9797619047619047,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9375,"distances_sum":2419.504187899369}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9797619047619047,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9375,"distances_sum":2419.504187899369}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2041015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2041015625,"f1":null,"seconds":2.0042061805725098e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":5.0,"distances_sum":482.26715308692224}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2041015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2041015625,"f1":null,"seconds":2.0042061805725098e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":5.0,"distances_sum":482.26715308692224}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7236328125,"f1":0.8238811535686542,"seconds":3.5297125577926636e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.0234375,"distances_sum":1469.4030735251822}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.3671875,"distances_sum":477.43823889052356}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7236328125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7236328125,"f1":0.8238811535686542,"seconds":3.5297125577926636e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.0234375,"distances_sum":1469.4030735251822}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9016983016983022,"seconds":4.421919584274292e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.2578125,"distances_sum":1804.515299377432}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8504849317349326,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.1171875,"distances_sum":1528.0762509275032}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8349609375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8349609375,"f1":0.9016983016983022,"seconds":4.421919584274292e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.2578125,"distances_sum":1804.515299377432}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9189846611721617,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.546875,"distances_sum":1845.189776335931}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9592319139194144,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.875,"distances_sum":2123.6040868312043}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.920601794039295,"seconds":4.0102750062942505e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.578125,"distances_sum":1870.607928349273}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9454529845154851,"seconds":4.062429070472717e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.671875,"distances_sum":2042.2011873554063}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9404990842490849,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6953125,"distances_sum":2042.0104756472647}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9078301906426912,"seconds":6.562098860740662e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.4375,"distances_sum":1815.6374894319447}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9592319139194144,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.875,"distances_sum":2123.6040868312043}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9592319139194144,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.875,"distances_sum":2123.6040868312043}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.365234375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.365234375,"f1":null,"seconds":4.293397068977356e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":5.734375,"distances_sum":778.2158347503251}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.37890625,"f1":null,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":5.8828125,"distances_sum":805.495561298894}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.37890625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.37890625,"f1":null,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":5.8828125,"distances_sum":805.495561298894}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.607421875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.607421875,"f1":0.7413506632256639,"seconds":5.112960934638977e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":6.9765625,"distances_sum":1265.736049559152}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3974609375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3974609375,"f1":null,"seconds":4.408881068229675e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":6.0234375,"distances_sum":823.2231867726665}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":8,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":4.293397068977356e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":5.921875,"distances_sum":813.0832393345248}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8698577464202473,"seconds":6.9588422775268555e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.2109375,"distances_sum":1680.0399973749734}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8703905469530476,"seconds":1.2870877981185913e-5,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.1484375,"distances_sum":1661.0104772021582}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":8,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8703905469530476,"seconds":1.2870877981185913e-5,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.1484375,"distances_sum":1661.0104772021582}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9344067390942395,"seconds":7.119029760360718e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.7109375,"distances_sum":2062.6188449592255}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9534283424908431,"seconds":7.024034857749939e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.8125,"distances_sum":2178.716148561908}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.933024267399268,"seconds":7.679685950279236e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.6015625,"distances_sum":2074.477872246533}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8787670662670671,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.25,"distances_sum":1725.754852341464}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9218666749916757,"seconds":6.901100277900696e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.609375,"distances_sum":1984.7831378134163}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9531822344322349,"seconds":6.936490535736084e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.75,"distances_sum":2203.691078468349}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9534283424908431,"seconds":7.024034857749939e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.8125,"distances_sum":2178.716148561908}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9534283424908431,"seconds":7.024034857749939e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.8125,"distances_sum":2178.716148561908}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59765625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.59765625,"f1":0.7352642149517158,"seconds":2.942979335784912e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":6.9921875,"distances_sum":1172.0253840292446}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.369140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.369140625,"f1":null,"seconds":2.7157366275787354e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":5.671875,"distances_sum":667.2005307272366}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.59765625,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.59765625,"f1":0.7352642149517158,"seconds":2.942979335784912e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":6.9921875,"distances_sum":1172.0253840292446}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7946303696303704,"seconds":3.3583492040634155e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.6171875,"distances_sum":1355.574298514867}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7715704434454443,"seconds":3.3192336559295654e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.5625,"distances_sum":1301.4932670533915}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9293612637362645,"seconds":7.269904017448425e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.6640625,"distances_sum":1941.552500377002}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.85942893911644,"seconds":3.548339009284973e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.9453125,"distances_sum":1613.6921390437492}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8996456668331675,"seconds":8.152797818183899e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.3984375,"distances_sum":1752.2779845908726}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9293612637362645,"seconds":7.269904017448425e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.6640625,"distances_sum":1941.552500377002}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9537259615384621,"seconds":6.8712979555130005e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.78125,"distances_sum":2160.6650037052564}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9630780677655684,"seconds":4.317611455917358e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.875,"distances_sum":2159.092641995239}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9450034340659343,"seconds":8.180737495422363e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.8203125,"distances_sum":2036.2324787987625}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9578697344322347,"seconds":4.200264811515808e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.8671875,"distances_sum":2120.9293808026873}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9406135531135537,"seconds":6.388872861862183e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.6640625,"distances_sum":2025.1940800954414}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9630780677655684,"seconds":4.317611455917358e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.875,"distances_sum":2159.092641995239}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9630780677655684,"seconds":4.317611455917358e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.875,"distances_sum":2159.092641995239}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7978145118770127,"seconds":7.2158873081207275e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":7.765625,"distances_sum":1312.0332248514462}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6806640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6806640625,"f1":0.7978145118770127,"seconds":7.2158873081207275e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":7.765625,"distances_sum":1312.0332248514462}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9193452380952386,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":8.3984375,"distances_sum":1811.9476537991072}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9097532675657682,"seconds":7.012858986854553e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":8.328125,"distances_sum":1776.7805794705628}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8687447968697979,"seconds":4.170462489128113e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":8.1171875,"distances_sum":1563.1972643698991}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9198775183150188,"seconds":9.842216968536377e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":8.375,"distances_sum":1847.6535869054387}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.8373980186480194,"seconds":3.509223461151123e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":7.8203125,"distances_sum":1433.8086857892279}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.9198775183150188,"seconds":9.842216968536377e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":8.375,"distances_sum":1847.6535869054387}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.95664803946054,"seconds":8.800998330116272e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":8.7890625,"distances_sum":2085.7602966309246}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790750915750919,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":8.921875,"distances_sum":2206.1622048995064}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9612382409257413,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":8.8125,"distances_sum":2088.9996113649104}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9579670329670334,"seconds":6.379559636116028e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":8.78125,"distances_sum":2072.1163071762458}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635817307692313,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":8.8671875,"distances_sum":2104.595104878132}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790750915750919,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":8.921875,"distances_sum":2206.1622048995064}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790750915750919,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":3.242865204811096e-6,"evaluations":8.921875,"distances_sum":2206.1622048995064}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.45703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.45703125,"f1":null,"seconds":2.7455389499664307e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":6.453125,"distances_sum":818.4559337826095}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7858755827505837,"seconds":3.2652169466018677e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":7.65625,"distances_sum":1272.978407855603}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6611328125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6611328125,"f1":0.7858755827505837,"seconds":3.2652169466018677e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":7.65625,"distances_sum":1272.978407855603}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8734094030969038,"seconds":1.1106953024864197e-5,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.046875,"distances_sum":1630.404795504531}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9138335622710629,"seconds":1.7939135432243347e-5,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.5078125,"distances_sum":1782.427107788737}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7946324508824517,"seconds":7.858499884605408e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":7.71875,"distances_sum":1309.954303334258}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8619167291042298,"seconds":8.137896656990051e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.0,"distances_sum":1594.7592692243923}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.849609375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.849609375,"f1":0.9138335622710629,"seconds":1.7939135432243347e-5,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.5078125,"distances_sum":1782.427107788737}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9551053113553118,"seconds":4.034489393234253e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.8125,"distances_sum":2086.0215016595134}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9645661630036636,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.8203125,"distances_sum":2153.0227304371724}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9637362637362641,"seconds":4.148110747337341e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.8125,"distances_sum":2169.6400120180638}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9192453379953386,"seconds":4.151836037635803e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.484375,"distances_sum":1868.9294379311395}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9645661630036636,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.8203125,"distances_sum":2153.0227304371724}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9645661630036636,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.8203125,"distances_sum":2153.0227304371724}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8573067557442566,"seconds":3.768131136894226e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":7.78125,"distances_sum":1520.6533443994542}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7125535922410927,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":6.671875,"distances_sum":1071.365345184518}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8573067557442566,"seconds":3.768131136894226e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":7.78125,"distances_sum":1520.6533443994542}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9295360889110896,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.4375,"distances_sum":1891.3313884289948}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9490759240759247,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.65625,"distances_sum":2026.0666098498086}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9490759240759247,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.65625,"distances_sum":2026.0666098498086}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9570429570429574,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.8125,"distances_sum":2046.224546348297}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9512305402930409,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.7578125,"distances_sum":2008.127530975917}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9570429570429574,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.8125,"distances_sum":2046.224546348297}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9570429570429574,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.8125,"distances_sum":2046.224546348297}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.419921875,"f1":null,"seconds":9.115785360336304e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":5.8984375,"distances_sum":801.2820184463026}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8500379828504837,"seconds":9.10833477973938e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":7.8828125,"distances_sum":1622.5221033114071}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8554466366966377,"seconds":3.6116689443588257e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.015625,"distances_sum":1608.4535893478637}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8554466366966377,"seconds":3.6116689443588257e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.015625,"distances_sum":1608.4535893478637}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9606830669330674,"seconds":1.2569129467010498e-5,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.8515625,"distances_sum":2231.0626324586087}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9304945054945061,"seconds":4.382804036140442e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.515625,"distances_sum":2044.70980284275}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9540979853479856,"seconds":4.081055521965027e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.75,"distances_sum":2208.4340407617688}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9495280760905763,"seconds":8.15652310848236e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.703125,"distances_sum":2202.146750807045}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9030282217782226,"seconds":1.1537224054336548e-5,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.46875,"distances_sum":1815.9585158900009}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9606830669330674,"seconds":1.2569129467010498e-5,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.8515625,"distances_sum":2231.0626324586087}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790006868131872,"seconds":7.4319541454315186e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.9453125,"distances_sum":2334.255049365152}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9753548534798538,"seconds":4.45730984210968e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.90625,"distances_sum":2314.1765735116046}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681547619047624,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.84375,"distances_sum":2277.1943441753233}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9741643772893775,"seconds":4.239380359649658e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.8828125,"distances_sum":2327.515096168129}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9784054487179489,"seconds":2.0576640963554382e-5,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.921875,"distances_sum":2346.7536091343577}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9751144688644691,"seconds":9.026378393173218e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.9453125,"distances_sum":2304.6096334309327}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.971394230769231,"seconds":7.331371307373047e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.9140625,"distances_sum":2263.9902832008484}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9697573260073264,"seconds":7.377937436103821e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.890625,"distances_sum":2268.3046826501763}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790006868131872,"seconds":7.4319541454315186e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.9453125,"distances_sum":2334.255049365152}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790006868131872,"seconds":7.4319541454315186e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":8.9453125,"distances_sum":2334.255049365152}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8488730019980026,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":7.9453125,"distances_sum":1491.8107243994898}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8488730019980026,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":7.9453125,"distances_sum":1491.8107243994898}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9177005286380291,"seconds":3.930181264877319e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.46875,"distances_sum":1866.6221943871515}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8603515625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8603515625,"f1":0.9177005286380291,"seconds":3.930181264877319e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.46875,"distances_sum":1866.6221943871515}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9705357142857147,"seconds":4.209578037261963e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.9140625,"distances_sum":2177.7165122630386}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9692536630036633,"seconds":4.43682074546814e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.8984375,"distances_sum":2181.383972015195}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9327495421245425,"seconds":3.959983587265015e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.4921875,"distances_sum":1979.2378911250444}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9705357142857147,"seconds":4.209578037261963e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.9140625,"distances_sum":2177.7165122630386}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9705357142857147,"seconds":4.209578037261963e-6,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.9140625,"distances_sum":2177.7165122630386}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4228515625,"f1":null,"seconds":2.5257468223571777e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":6.0390625,"distances_sum":834.0068897394705}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4228515625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4228515625,"f1":null,"seconds":2.5257468223571777e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":6.0390625,"distances_sum":834.0068897394705}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7722192737817744,"seconds":9.266659617424011e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":7.5390625,"distances_sum":1405.9071079510159}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8955362345987352,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.4140625,"distances_sum":1891.492651558586}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8562760156510164,"seconds":8.353963494300842e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":7.875,"distances_sum":1706.3573902366952}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8585043428793435,"seconds":1.1350959539413452e-5,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":7.8515625,"distances_sum":1713.2162983219757}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8486643564768573,"seconds":3.885477781295776e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":7.8203125,"distances_sum":1676.9438625812213}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.822265625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.822265625,"f1":0.8955362345987352,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.4140625,"distances_sum":1891.492651558586}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.959638278388279,"seconds":1.290440559387207e-5,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.796875,"distances_sum":2297.1430132697296}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9609203296703299,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.8671875,"distances_sum":2309.5120773866233}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9395547161172165,"seconds":3.961846232414246e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.703125,"distances_sum":2125.8692954185863}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9304429945054953,"seconds":4.0102750062942505e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.5390625,"distances_sum":2109.9038897478467}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9609203296703299,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.8671875,"distances_sum":2309.5120773866233}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9609203296703299,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.8671875,"distances_sum":2309.5120773866233}}, n: 9
inertia(cfft.distances) = 18.330831168831164
inertia(cdnet.distances) = 27.891108892851793
inertia(crand.distances) = 20.39949206349207
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9466666666666667
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8955555555555555
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8933333333333332
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9355555555555556
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8933333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9288888888888889
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9155555555555556
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9400000000000001
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9199999999999999
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.86
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9177777777777778
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 1, 2, 3, 3, 3, 3, 1, 1, 2, 3, 3, 2, 3, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 7, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 10: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 12, 2]]
** centroid: 11, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 4, 6]]
** centroid: 12, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 2, 3, 3, 1, 2, 3, 2, 3]
acc = 0.9133333333333333
*** starting iteration: 1; err: [Inf, 0.33360000447392063] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.33360000447392063, 0.16785586914412642] ***
*** starting iteration: 2; err: [Inf, 0.33360000447392063, 0.16785586914412642] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.33360000447392063, 0.16785586914412642, 0.1584148272722324] ***
*** starting iteration: 3; err: [Inf, 0.33360000447392063, 0.16785586914412642, 0.1584148272722324] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.33360000447392063, 0.16785586914412642, 0.1584148272722324, 0.15581355551260836] ***
*** starting iteration: 4; err: [Inf, 0.33360000447392063, 0.16785586914412642, 0.1584148272722324, 0.15581355551260836] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.33360000447392063, 0.16785586914412642, 0.1584148272722324, 0.15581355551260836, 0.15520918469797074] ***
*** finished computation of 12 references, err: [Inf, 0.33360000447392063, 0.16785586914412642, 0.1584148272722324, 0.15581355551260836, 0.15520918469797074] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 14]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 4), (3, 14)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 10, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 13 centroids; started with 12
acc = 0.9533333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.4390000033501036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4390000033501036, 0.29865467229953035] ***
*** finished computation of 7 references, err: [Inf, 0.4390000033501036, 0.29865467229953035] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 2, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 5]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 10), (3, 5)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 4]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 1), (3, 4)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6760000005430531] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6760000005430531, 0.34402337890513024] ***
*** finished computation of 7 references, err: [Inf, 0.6760000005430531, 0.34402337890513024] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 19]]
** centroid: 3, normalized-entropy: 0.9744894033980525, [(2, 13), (3, 19)]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 5, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.075200006778753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.075200006778753, 0.43399573904271316] ***
*** finished computation of 7 references, err: [Inf, 1.075200006778753, 0.43399573904271316] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 12]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 1), (3, 12)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6728867477964181] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6728867477964181, 0.38283548560049724] ***
*** starting iteration: 2; err: [Inf, 0.6728867477964181, 0.38283548560049724] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6728867477964181, 0.38283548560049724, 0.37350581081463197] ***
*** starting iteration: 3; err: [Inf, 0.6728867477964181, 0.38283548560049724, 0.37350581081463197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6728867477964181, 0.38283548560049724, 0.37350581081463197, 0.36874907145516295] ***
*** starting iteration: 4; err: [Inf, 0.6728867477964181, 0.38283548560049724, 0.37350581081463197, 0.36874907145516295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6728867477964181, 0.38283548560049724, 0.37350581081463197, 0.36874907145516295, 0.3678175592156119] ***
*** finished computation of 3 references, err: [Inf, 0.6728867477964181, 0.38283548560049724, 0.37350581081463197, 0.36874907145516295, 0.3678175592156119] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 30]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 2), (3, 30)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 6]]
** centroid: 2, normalized-entropy: 0.6609623351442084, [(2, 29), (3, 6)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.558353388987877] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.558353388987877, 0.35195581119129377] ***
*** starting iteration: 2; err: [Inf, 0.558353388987877, 0.35195581119129377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.558353388987877, 0.35195581119129377, 0.35195581119129377] ***
*** finished computation of 3 references, err: [Inf, 0.558353388987877, 0.35195581119129377, 0.35195581119129377] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 2, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7975241656842893] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7975241656842893, 0.6269392304543492] ***
*** starting iteration: 2; err: [Inf, 0.7975241656842893, 0.6269392304543492] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7975241656842893, 0.6269392304543492, 0.6050794136593537] ***
*** starting iteration: 3; err: [Inf, 0.7975241656842893, 0.6269392304543492, 0.6050794136593537] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7975241656842893, 0.6269392304543492, 0.6050794136593537, 0.604439162859475] ***
*** finished computation of 3 references, err: [Inf, 0.7975241656842893, 0.6269392304543492, 0.6050794136593537, 0.604439162859475] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [19, 2, 0]]
** centroid: 1, normalized-entropy: 0.45371633918694493, [(1, 19), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 32]]
** centroid: 2, normalized-entropy: 1.0, [(2, 32), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6884000064054018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6884000064054018, 0.28969031878465873] ***
*** finished computation of 7 references, err: [Inf, 0.6884000064054018, 0.28969031878465873] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 13]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 9]]
** centroid: 6, normalized-entropy: 1.0, [(2, 9), (3, 9)]
*** center 7: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44910000343393647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44910000343393647, 0.261720140901992] ***
*** finished computation of 7 references, err: [Inf, 0.44910000343393647, 0.261720140901992] ***
*** center 1: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 14]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4648000069721664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4648000069721664, 0.2747042492608341] ***
*** finished computation of 7 references, err: [Inf, 0.4648000069721664, 0.2747042492608341] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 9]]
** centroid: 3, normalized-entropy: 0.8691375806126381, [(2, 22), (3, 9)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 14]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4513699037221465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4513699037221465, 0.23728431009735548] ***
*** finished computation of 7 references, err: [Inf, 0.4513699037221465, 0.23728431009735548] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 24, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 13]]
** centroid: 2, normalized-entropy: 0.9340680553754911, [(2, 7), (3, 13)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.267603727153307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.267603727153307, 0.219258117864401] ***
*** finished computation of 7 references, err: [Inf, 0.267603727153307, 0.219258117864401] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 20]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 4), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 8, 4]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 8), (3, 4)]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4577881556736555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4577881556736555, 0.2547422961038568] ***
*** finished computation of 7 references, err: [Inf, 0.4577881556736555, 0.2547422961038568] ***
*** center 1: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 3]]
** centroid: 3, normalized-entropy: 0.43055186701043935, [(2, 31), (3, 3)]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 1, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 20]]
** centroid: 5, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.768158746441627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.768158746441627, 0.5461495375961714] ***
*** starting iteration: 2; err: [Inf, 2.768158746441627, 0.5461495375961714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.768158746441627, 0.5461495375961714, 0.22523902436596255] ***
*** starting iteration: 3; err: [Inf, 2.768158746441627, 0.5461495375961714, 0.22523902436596255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.768158746441627, 0.5461495375961714, 0.22523902436596255, 0.20311222211915944] ***
*** finished computation of 7 references, err: [Inf, 2.768158746441627, 0.5461495375961714, 0.22523902436596255, 0.20311222211915944] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 18]]
** centroid: 5, normalized-entropy: 0.2974722489192896, [(2, 1), (3, 18)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 3]]
** centroid: 6, normalized-entropy: 0.7495952572594798, [(2, 11), (3, 3)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34061881354075657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34061881354075657, 0.2045388455986398] ***
*** starting iteration: 2; err: [Inf, 0.34061881354075657, 0.2045388455986398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34061881354075657, 0.2045388455986398, 0.2037541866462581] ***
*** finished computation of 7 references, err: [Inf, 0.34061881354075657, 0.2045388455986398, 0.2037541866462581] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 10]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 4: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 6, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5689150711182631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5689150711182631, 0.27732652492822085] ***
*** starting iteration: 2; err: [Inf, 0.5689150711182631, 0.27732652492822085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5689150711182631, 0.27732652492822085, 0.2111262415952481] ***
*** starting iteration: 3; err: [Inf, 0.5689150711182631, 0.27732652492822085, 0.2111262415952481] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5689150711182631, 0.27732652492822085, 0.2111262415952481, 0.18603173343884255] ***
*** finished computation of 7 references, err: [Inf, 0.5689150711182631, 0.27732652492822085, 0.2111262415952481, 0.18603173343884255] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 10]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(2, 8), (3, 10)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7619400274784849] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7619400274784849, 0.3989319803462963] ***
*** starting iteration: 2; err: [Inf, 0.7619400274784849, 0.3989319803462963] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7619400274784849, 0.3989319803462963, 0.3783120093379628] ***
*** starting iteration: 3; err: [Inf, 0.7619400274784849, 0.3989319803462963, 0.3783120093379628] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7619400274784849, 0.3989319803462963, 0.3783120093379628, 0.37350581081463197] ***
*** finished computation of 3 references, err: [Inf, 0.7619400274784849, 0.3989319803462963, 0.3783120093379628, 0.37350581081463197] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 29]]
** centroid: 1, normalized-entropy: 0.3451173149449528, [(2, 2), (3, 29)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 7]]
** centroid: 2, normalized-entropy: 0.710676853856123, [(2, 29), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.181900496720843] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.181900496720843, 0.6606201063562033] ***
*** starting iteration: 2; err: [Inf, 1.181900496720843, 0.6606201063562033] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.181900496720843, 0.6606201063562033, 0.6593663321772881] ***
*** starting iteration: 3; err: [Inf, 1.181900496720843, 0.6606201063562033, 0.6593663321772881] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.181900496720843, 0.6606201063562033, 0.6593663321772881, 0.6590795154883459] ***
*** finished computation of 3 references, err: [Inf, 1.181900496720843, 0.6606201063562033, 0.6593663321772881, 0.6590795154883459] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 32]]
** centroid: 1, normalized-entropy: 0.9985532860835362, [(2, 35), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6648184913318183] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6648184913318183, 0.41212632357154105] ***
*** starting iteration: 2; err: [Inf, 0.6648184913318183, 0.41212632357154105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6648184913318183, 0.41212632357154105, 0.4014401054758855] ***
*** starting iteration: 3; err: [Inf, 0.6648184913318183, 0.41212632357154105, 0.4014401054758855] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6648184913318183, 0.41212632357154105, 0.4014401054758855, 0.38781120647187295] ***
*** finished computation of 3 references, err: [Inf, 0.6648184913318183, 0.41212632357154105, 0.4014401054758855, 0.38781120647187295] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 28, 3]]
** centroid: 2, normalized-entropy: 0.45868581620054033, [(2, 28), (3, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 29]]
** centroid: 3, normalized-entropy: 0.6609623351442084, [(2, 6), (3, 29)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.588400005366879] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.588400005366879, 1.022274863594818] ***
*** starting iteration: 2; err: [Inf, 2.588400005366879, 1.022274863594818] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.588400005366879, 1.022274863594818, 0.990118956779712] ***
*** starting iteration: 3; err: [Inf, 2.588400005366879, 1.022274863594818, 0.990118956779712] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.588400005366879, 1.022274863594818, 0.990118956779712, 0.9872614408938764] ***
*** starting iteration: 4; err: [Inf, 2.588400005366879, 1.022274863594818, 0.990118956779712, 0.9872614408938764] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.588400005366879, 1.022274863594818, 0.990118956779712, 0.9872614408938764, 0.9846855808431971] ***
*** starting iteration: 5; err: [Inf, 2.588400005366879, 1.022274863594818, 0.990118956779712, 0.9872614408938764, 0.9846855808431971] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.588400005366879, 1.022274863594818, 0.990118956779712, 0.9872614408938764, 0.9846855808431971, 0.9833975822602343] ***
*** starting iteration: 6; err: [Inf, 2.588400005366879, 1.022274863594818, 0.990118956779712, 0.9872614408938764, 0.9846855808431971, 0.9833975822602343] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.588400005366879, 1.022274863594818, 0.990118956779712, 0.9872614408938764, 0.9846855808431971, 0.9833975822602343, 0.9824039673271523] ***
*** finished computation of 3 references, err: [Inf, 2.588400005366879, 1.022274863594818, 0.990118956779712, 0.9872614408938764, 0.9846855808431971, 0.9833975822602343, 0.9824039673271523] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 36]]
** centroid: 1, normalized-entropy: 0.9886994082884974, [(2, 28), (3, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [16, 3, 0]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(1, 16), (2, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9162999989007764] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9162999989007764, 0.6282200512369102] ***
*** starting iteration: 2; err: [Inf, 0.9162999989007764, 0.6282200512369102] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9162999989007764, 0.6282200512369102, 0.5380712700308198] ***
*** starting iteration: 3; err: [Inf, 0.9162999989007764, 0.6282200512369102, 0.5380712700308198] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9162999989007764, 0.6282200512369102, 0.5380712700308198, 0.5166874225256662] ***
*** starting iteration: 4; err: [Inf, 0.9162999989007764, 0.6282200512369102, 0.5380712700308198, 0.5166874225256662] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9162999989007764, 0.6282200512369102, 0.5380712700308198, 0.5166874225256662, 0.5079180109787719] ***
*** starting iteration: 5; err: [Inf, 0.9162999989007764, 0.6282200512369102, 0.5380712700308198, 0.5166874225256662, 0.5079180109787719] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9162999989007764, 0.6282200512369102, 0.5380712700308198, 0.5166874225256662, 0.5079180109787719, 0.5070925506122365] ***
*** finished computation of 3 references, err: [Inf, 0.9162999989007764, 0.6282200512369102, 0.5380712700308198, 0.5166874225256662, 0.5079180109787719, 0.5070925506122365] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 3, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9946000018730093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9946000018730093, 0.591634798555144] ***
*** starting iteration: 2; err: [Inf, 0.9946000018730093, 0.591634798555144] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9946000018730093, 0.591634798555144, 0.5568320692202288] ***
*** starting iteration: 3; err: [Inf, 0.9946000018730093, 0.591634798555144, 0.5568320692202288] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9946000018730093, 0.591634798555144, 0.5568320692202288, 0.5239086102237407] ***
*** starting iteration: 4; err: [Inf, 0.9946000018730093, 0.591634798555144, 0.5568320692202288, 0.5239086102237407] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9946000018730093, 0.591634798555144, 0.5568320692202288, 0.5239086102237407, 0.5159366343613279] ***
*** starting iteration: 5; err: [Inf, 0.9946000018730093, 0.591634798555144, 0.5568320692202288, 0.5239086102237407, 0.5159366343613279] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9946000018730093, 0.591634798555144, 0.5568320692202288, 0.5239086102237407, 0.5159366343613279, 0.5127752599895397] ***
*** starting iteration: 6; err: [Inf, 0.9946000018730093, 0.591634798555144, 0.5568320692202288, 0.5239086102237407, 0.5159366343613279, 0.5127752599895397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9946000018730093, 0.591634798555144, 0.5568320692202288, 0.5239086102237407, 0.5159366343613279, 0.5127752599895397, 0.5127752599895397] ***
*** finished computation of 3 references, err: [Inf, 0.9946000018730093, 0.591634798555144, 0.5568320692202288, 0.5239086102237407, 0.5159366343613279, 0.5127752599895397, 0.5127752599895397] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 10]]
** centroid: 1, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.43157485600068357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43157485600068357, 0.24304945693715502] ***
*** finished computation of 7 references, err: [Inf, 0.43157485600068357, 0.24304945693715502] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 5]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 10), (3, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32089101862955716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32089101862955716, 0.20415789852876415] ***
*** finished computation of 7 references, err: [Inf, 0.32089101862955716, 0.20415789852876415] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 15]]
** centroid: 2, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 13, 9]]
** centroid: 5, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41711250267882904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41711250267882904, 0.20067778695184713] ***
*** finished computation of 7 references, err: [Inf, 0.41711250267882904, 0.20067778695184713] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 6]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(2, 5), (3, 6)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 14]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 2]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 14), (3, 2)]
*** center 5: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6451000055079765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6451000055079765, 0.2827631674448534] ***
*** starting iteration: 2; err: [Inf, 0.6451000055079765, 0.2827631674448534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6451000055079765, 0.2827631674448534, 0.23750115042041547] ***
*** starting iteration: 3; err: [Inf, 0.6451000055079765, 0.2827631674448534, 0.23750115042041547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6451000055079765, 0.2827631674448534, 0.23750115042041547, 0.226946467643355] ***
*** finished computation of 7 references, err: [Inf, 0.6451000055079765, 0.2827631674448534, 0.23750115042041547, 0.226946467643355] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4822000023030004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4822000023030004, 0.3120304474337488] ***
*** starting iteration: 2; err: [Inf, 0.4822000023030004, 0.3120304474337488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4822000023030004, 0.3120304474337488, 0.2893424209086636] ***
*** starting iteration: 3; err: [Inf, 0.4822000023030004, 0.3120304474337488, 0.2893424209086636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4822000023030004, 0.3120304474337488, 0.2893424209086636, 0.28340629089748826] ***
*** finished computation of 7 references, err: [Inf, 0.4822000023030004, 0.3120304474337488, 0.2893424209086636, 0.28340629089748826] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 5: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5924000089660985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5924000089660985, 0.4370150061511317] ***
*** starting iteration: 2; err: [Inf, 0.5924000089660985, 0.4370150061511317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5924000089660985, 0.4370150061511317, 0.4065605688046652] ***
*** starting iteration: 3; err: [Inf, 0.5924000089660985, 0.4370150061511317, 0.4065605688046652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5924000089660985, 0.4370150061511317, 0.4065605688046652, 0.364425271829013] ***
*** finished computation of 7 references, err: [Inf, 0.5924000089660985, 0.4370150061511317, 0.4065605688046652, 0.364425271829013] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 10]]
** centroid: 3, normalized-entropy: 0.8314743880097292, [(2, 28), (3, 10)]
*** center 4: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4276273805908219] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4276273805908219, 0.22002193142422322] ***
*** starting iteration: 2; err: [Inf, 0.4276273805908219, 0.22002193142422322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621] ***
*** starting iteration: 3; err: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621, 0.2027930707465757] ***
*** starting iteration: 4; err: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621, 0.2027930707465757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621, 0.2027930707465757, 0.1954818981765811] ***
*** starting iteration: 5; err: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621, 0.2027930707465757, 0.1954818981765811] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621, 0.2027930707465757, 0.1954818981765811, 0.1894470329488348] ***
*** starting iteration: 6; err: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621, 0.2027930707465757, 0.1954818981765811, 0.1894470329488348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621, 0.2027930707465757, 0.1954818981765811, 0.1894470329488348, 0.18801822841962681] ***
*** starting iteration: 7; err: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621, 0.2027930707465757, 0.1954818981765811, 0.1894470329488348, 0.18801822841962681] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621, 0.2027930707465757, 0.1954818981765811, 0.1894470329488348, 0.18801822841962681, 0.18518806649765052] ***
*** starting iteration: 8; err: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621, 0.2027930707465757, 0.1954818981765811, 0.1894470329488348, 0.18801822841962681, 0.18518806649765052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621, 0.2027930707465757, 0.1954818981765811, 0.1894470329488348, 0.18801822841962681, 0.18518806649765052, 0.18358775939946] ***
*** starting iteration: 9; err: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621, 0.2027930707465757, 0.1954818981765811, 0.1894470329488348, 0.18801822841962681, 0.18518806649765052, 0.18358775939946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621, 0.2027930707465757, 0.1954818981765811, 0.1894470329488348, 0.18801822841962681, 0.18518806649765052, 0.18358775939946, 0.18358775939946] ***
*** finished computation of 7 references, err: [Inf, 0.4276273805908219, 0.22002193142422322, 0.2115153245881621, 0.2027930707465757, 0.1954818981765811, 0.1894470329488348, 0.18801822841962681, 0.18518806649765052, 0.18358775939946, 0.18358775939946] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 7]]
** centroid: 6, normalized-entropy: 0.9494520153879484, [(2, 12), (3, 7)]
*** center 7: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5326422193339204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5326422193339204, 0.2461288541406496] ***
*** starting iteration: 2; err: [Inf, 0.5326422193339204, 0.2461288541406496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5326422193339204, 0.2461288541406496, 0.2301969563437815] ***
*** starting iteration: 3; err: [Inf, 0.5326422193339204, 0.2461288541406496, 0.2301969563437815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5326422193339204, 0.2461288541406496, 0.2301969563437815, 0.22367790204985544] ***
*** starting iteration: 4; err: [Inf, 0.5326422193339204, 0.2461288541406496, 0.2301969563437815, 0.22367790204985544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5326422193339204, 0.2461288541406496, 0.2301969563437815, 0.22367790204985544, 0.2077891264060416] ***
*** starting iteration: 5; err: [Inf, 0.5326422193339204, 0.2461288541406496, 0.2301969563437815, 0.22367790204985544, 0.2077891264060416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5326422193339204, 0.2461288541406496, 0.2301969563437815, 0.22367790204985544, 0.2077891264060416, 0.18996420001757056] ***
*** starting iteration: 6; err: [Inf, 0.5326422193339204, 0.2461288541406496, 0.2301969563437815, 0.22367790204985544, 0.2077891264060416, 0.18996420001757056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5326422193339204, 0.2461288541406496, 0.2301969563437815, 0.22367790204985544, 0.2077891264060416, 0.18996420001757056, 0.1737806536719672] ***
*** starting iteration: 7; err: [Inf, 0.5326422193339204, 0.2461288541406496, 0.2301969563437815, 0.22367790204985544, 0.2077891264060416, 0.18996420001757056, 0.1737806536719672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5326422193339204, 0.2461288541406496, 0.2301969563437815, 0.22367790204985544, 0.2077891264060416, 0.18996420001757056, 0.1737806536719672, 0.1718968122624076] ***
*** starting iteration: 8; err: [Inf, 0.5326422193339204, 0.2461288541406496, 0.2301969563437815, 0.22367790204985544, 0.2077891264060416, 0.18996420001757056, 0.1737806536719672, 0.1718968122624076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5326422193339204, 0.2461288541406496, 0.2301969563437815, 0.22367790204985544, 0.2077891264060416, 0.18996420001757056, 0.1737806536719672, 0.1718968122624076, 0.1718968122624076] ***
*** finished computation of 7 references, err: [Inf, 0.5326422193339204, 0.2461288541406496, 0.2301969563437815, 0.22367790204985544, 0.2077891264060416, 0.18996420001757056, 0.1737806536719672, 0.1718968122624076, 0.1718968122624076] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 13]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 9]]
** centroid: 4, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 5, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3886472863595452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3886472863595452, 0.20542460514565175] ***
*** starting iteration: 2; err: [Inf, 0.3886472863595452, 0.20542460514565175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3886472863595452, 0.20542460514565175, 0.18763309031002062] ***
*** starting iteration: 3; err: [Inf, 0.3886472863595452, 0.20542460514565175, 0.18763309031002062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3886472863595452, 0.20542460514565175, 0.18763309031002062, 0.18247535041039206] ***
*** starting iteration: 4; err: [Inf, 0.3886472863595452, 0.20542460514565175, 0.18763309031002062, 0.18247535041039206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3886472863595452, 0.20542460514565175, 0.18763309031002062, 0.18247535041039206, 0.18247535041039206] ***
*** finished computation of 7 references, err: [Inf, 0.3886472863595452, 0.20542460514565175, 0.18763309031002062, 0.18247535041039206, 0.18247535041039206] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 11]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 1), (3, 11)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 10, 9]]
** centroid: 6, normalized-entropy: 0.9980008838722993, [(2, 10), (3, 9)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4215000037303642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215000037303642, 0.28621103830681255] ***
*** starting iteration: 2; err: [Inf, 0.4215000037303642, 0.28621103830681255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215000037303642, 0.28621103830681255, 0.2730864997633073] ***
*** starting iteration: 3; err: [Inf, 0.4215000037303642, 0.28621103830681255, 0.2730864997633073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215000037303642, 0.28621103830681255, 0.2730864997633073, 0.2672632727713681] ***
*** starting iteration: 4; err: [Inf, 0.4215000037303642, 0.28621103830681255, 0.2730864997633073, 0.2672632727713681] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215000037303642, 0.28621103830681255, 0.2730864997633073, 0.2672632727713681, 0.2597175816132212] ***
*** starting iteration: 5; err: [Inf, 0.4215000037303642, 0.28621103830681255, 0.2730864997633073, 0.2672632727713681, 0.2597175816132212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215000037303642, 0.28621103830681255, 0.2730864997633073, 0.2672632727713681, 0.2597175816132212, 0.25759936020693625] ***
*** starting iteration: 6; err: [Inf, 0.4215000037303642, 0.28621103830681255, 0.2730864997633073, 0.2672632727713681, 0.2597175816132212, 0.25759936020693625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215000037303642, 0.28621103830681255, 0.2730864997633073, 0.2672632727713681, 0.2597175816132212, 0.25759936020693625, 0.25759936020693625] ***
*** finished computation of 7 references, err: [Inf, 0.4215000037303642, 0.28621103830681255, 0.2730864997633073, 0.2672632727713681, 0.2597175816132212, 0.25759936020693625, 0.25759936020693625] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 6, 4]]
** centroid: 2, normalized-entropy: 0.9709505944546688, [(2, 6), (3, 4)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 6]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 6.277000039054656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.277000039054656, 1.6541369802605106] ***
*** starting iteration: 2; err: [Inf, 6.277000039054656, 1.6541369802605106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.277000039054656, 1.6541369802605106, 0.6090968881955038] ***
*** starting iteration: 3; err: [Inf, 6.277000039054656, 1.6541369802605106, 0.6090968881955038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.277000039054656, 1.6541369802605106, 0.6090968881955038, 0.36628719790809483] ***
*** starting iteration: 4; err: [Inf, 6.277000039054656, 1.6541369802605106, 0.6090968881955038, 0.36628719790809483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.277000039054656, 1.6541369802605106, 0.6090968881955038, 0.36628719790809483, 0.33384963246614463] ***
*** starting iteration: 5; err: [Inf, 6.277000039054656, 1.6541369802605106, 0.6090968881955038, 0.36628719790809483, 0.33384963246614463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.277000039054656, 1.6541369802605106, 0.6090968881955038, 0.36628719790809483, 0.33384963246614463, 0.3107655434868487] ***
*** starting iteration: 6; err: [Inf, 6.277000039054656, 1.6541369802605106, 0.6090968881955038, 0.36628719790809483, 0.33384963246614463, 0.3107655434868487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.277000039054656, 1.6541369802605106, 0.6090968881955038, 0.36628719790809483, 0.33384963246614463, 0.3107655434868487, 0.2993430589561126] ***
*** starting iteration: 7; err: [Inf, 6.277000039054656, 1.6541369802605106, 0.6090968881955038, 0.36628719790809483, 0.33384963246614463, 0.3107655434868487, 0.2993430589561126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.277000039054656, 1.6541369802605106, 0.6090968881955038, 0.36628719790809483, 0.33384963246614463, 0.3107655434868487, 0.2993430589561126, 0.2938421016080077] ***
*** starting iteration: 8; err: [Inf, 6.277000039054656, 1.6541369802605106, 0.6090968881955038, 0.36628719790809483, 0.33384963246614463, 0.3107655434868487, 0.2993430589561126, 0.2938421016080077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.277000039054656, 1.6541369802605106, 0.6090968881955038, 0.36628719790809483, 0.33384963246614463, 0.3107655434868487, 0.2993430589561126, 0.2938421016080077, 0.2933102239196742] ***
*** finished computation of 7 references, err: [Inf, 6.277000039054656, 1.6541369802605106, 0.6090968881955038, 0.36628719790809483, 0.33384963246614463, 0.3107655434868487, 0.2993430589561126, 0.2938421016080077, 0.2933102239196742] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 4, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.093800029592299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.093800029592299, 0.29706798712169574] ***
*** starting iteration: 2; err: [Inf, 2.093800029592299, 0.29706798712169574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.093800029592299, 0.29706798712169574, 0.2652850999288882] ***
*** starting iteration: 3; err: [Inf, 2.093800029592299, 0.29706798712169574, 0.2652850999288882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.093800029592299, 0.29706798712169574, 0.2652850999288882, 0.25392919264593644] ***
*** starting iteration: 4; err: [Inf, 2.093800029592299, 0.29706798712169574, 0.2652850999288882, 0.25392919264593644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.093800029592299, 0.29706798712169574, 0.2652850999288882, 0.25392919264593644, 0.24911579686191995] ***
*** starting iteration: 5; err: [Inf, 2.093800029592299, 0.29706798712169574, 0.2652850999288882, 0.25392919264593644, 0.24911579686191995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.093800029592299, 0.29706798712169574, 0.2652850999288882, 0.25392919264593644, 0.24911579686191995, 0.24313146094466984] ***
*** starting iteration: 6; err: [Inf, 2.093800029592299, 0.29706798712169574, 0.2652850999288882, 0.25392919264593644, 0.24911579686191995, 0.24313146094466984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.093800029592299, 0.29706798712169574, 0.2652850999288882, 0.25392919264593644, 0.24911579686191995, 0.24313146094466984, 0.23944346690590365] ***
*** starting iteration: 7; err: [Inf, 2.093800029592299, 0.29706798712169574, 0.2652850999288882, 0.25392919264593644, 0.24911579686191995, 0.24313146094466984, 0.23944346690590365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.093800029592299, 0.29706798712169574, 0.2652850999288882, 0.25392919264593644, 0.24911579686191995, 0.24313146094466984, 0.23944346690590365, 0.23783474381536027] ***
*** starting iteration: 8; err: [Inf, 2.093800029592299, 0.29706798712169574, 0.2652850999288882, 0.25392919264593644, 0.24911579686191995, 0.24313146094466984, 0.23944346690590365, 0.23783474381536027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.093800029592299, 0.29706798712169574, 0.2652850999288882, 0.25392919264593644, 0.24911579686191995, 0.24313146094466984, 0.23944346690590365, 0.23783474381536027, 0.23732841046457312] ***
*** finished computation of 7 references, err: [Inf, 2.093800029592299, 0.29706798712169574, 0.2652850999288882, 0.25392919264593644, 0.24911579686191995, 0.24313146094466984, 0.23944346690590365, 0.23783474381536027, 0.23732841046457312] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 10]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.5568682194786607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5568682194786607, 1.3755488206280364] ***
*** starting iteration: 2; err: [Inf, 3.5568682194786607, 1.3755488206280364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5568682194786607, 1.3755488206280364, 0.7418872563171113] ***
*** starting iteration: 3; err: [Inf, 3.5568682194786607, 1.3755488206280364, 0.7418872563171113] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5568682194786607, 1.3755488206280364, 0.7418872563171113, 0.44180711505982934] ***
*** starting iteration: 4; err: [Inf, 3.5568682194786607, 1.3755488206280364, 0.7418872563171113, 0.44180711505982934] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5568682194786607, 1.3755488206280364, 0.7418872563171113, 0.44180711505982934, 0.3936133898378991] ***
*** starting iteration: 5; err: [Inf, 3.5568682194786607, 1.3755488206280364, 0.7418872563171113, 0.44180711505982934, 0.3936133898378991] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5568682194786607, 1.3755488206280364, 0.7418872563171113, 0.44180711505982934, 0.3936133898378991, 0.3783120093379628] ***
*** starting iteration: 6; err: [Inf, 3.5568682194786607, 1.3755488206280364, 0.7418872563171113, 0.44180711505982934, 0.3936133898378991, 0.3783120093379628] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5568682194786607, 1.3755488206280364, 0.7418872563171113, 0.44180711505982934, 0.3936133898378991, 0.3783120093379628, 0.37350581081463197] ***
*** starting iteration: 7; err: [Inf, 3.5568682194786607, 1.3755488206280364, 0.7418872563171113, 0.44180711505982934, 0.3936133898378991, 0.3783120093379628, 0.37350581081463197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5568682194786607, 1.3755488206280364, 0.7418872563171113, 0.44180711505982934, 0.3936133898378991, 0.3783120093379628, 0.37350581081463197, 0.36874907145516295] ***
*** starting iteration: 8; err: [Inf, 3.5568682194786607, 1.3755488206280364, 0.7418872563171113, 0.44180711505982934, 0.3936133898378991, 0.3783120093379628, 0.37350581081463197, 0.36874907145516295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5568682194786607, 1.3755488206280364, 0.7418872563171113, 0.44180711505982934, 0.3936133898378991, 0.3783120093379628, 0.37350581081463197, 0.36874907145516295, 0.3678175592156119] ***
*** finished computation of 3 references, err: [Inf, 3.5568682194786607, 1.3755488206280364, 0.7418872563171113, 0.44180711505982934, 0.3936133898378991, 0.3783120093379628, 0.37350581081463197, 0.36874907145516295, 0.3678175592156119] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 6]]
** centroid: 2, normalized-entropy: 0.6609623351442084, [(2, 29), (3, 6)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 30]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 2), (3, 30)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8066054111894704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8066054111894704, 0.35195581119129377] ***
*** starting iteration: 2; err: [Inf, 0.8066054111894704, 0.35195581119129377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8066054111894704, 0.35195581119129377, 0.35195581119129377] ***
*** finished computation of 3 references, err: [Inf, 0.8066054111894704, 0.35195581119129377, 0.35195581119129377] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 10]]
** centroid: 2, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 22]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.150580278949947] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.150580278949947, 0.3754591106424518] ***
*** starting iteration: 2; err: [Inf, 1.150580278949947, 0.3754591106424518] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.150580278949947, 0.3754591106424518, 0.3650070459539518] ***
*** starting iteration: 3; err: [Inf, 1.150580278949947, 0.3754591106424518, 0.3650070459539518] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.150580278949947, 0.3754591106424518, 0.3650070459539518, 0.36217890373353273] ***
*** starting iteration: 4; err: [Inf, 1.150580278949947, 0.3754591106424518, 0.3650070459539518, 0.36217890373353273] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.150580278949947, 0.3754591106424518, 0.3650070459539518, 0.36217890373353273, 0.3621376732524294] ***
*** finished computation of 3 references, err: [Inf, 1.150580278949947, 0.3754591106424518, 0.3650070459539518, 0.36217890373353273, 0.3621376732524294] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7806000248290204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7806000248290204, 0.9990725213033987] ***
*** finished computation of 3 references, err: [Inf, 1.7806000248290204, 0.9990725213033987] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 36]]
** centroid: 2, normalized-entropy: 0.9940302114769566, [(2, 30), (3, 36)]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6348000063214037] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6348000063214037, 1.0184532421690273] ***
*** finished computation of 3 references, err: [Inf, 1.6348000063214037, 1.0184532421690273] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [10, 3, 0]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(1, 10), (2, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 32]]
** centroid: 3, normalized-entropy: 1.0, [(2, 32), (3, 32)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7736000139866721] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7736000139866721, 0.5907093381692474] ***
*** finished computation of 3 references, err: [Inf, 0.7736000139866721, 0.5907093381692474] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 11, 32]]
** centroid: 2, normalized-entropy: 0.8203636429576731, [(2, 11), (3, 32)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41880000615541235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41880000615541235, 0.29179024678317345] ***
*** starting iteration: 2; err: [Inf, 0.41880000615541235, 0.29179024678317345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41880000615541235, 0.29179024678317345, 0.277334272994695] ***
*** starting iteration: 3; err: [Inf, 0.41880000615541235, 0.29179024678317345, 0.277334272994695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41880000615541235, 0.29179024678317345, 0.277334272994695, 0.27459649228326244] ***
*** starting iteration: 4; err: [Inf, 0.41880000615541235, 0.29179024678317345, 0.277334272994695, 0.27459649228326244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41880000615541235, 0.29179024678317345, 0.277334272994695, 0.27459649228326244, 0.27347531198431546] ***
*** starting iteration: 5; err: [Inf, 0.41880000615541235, 0.29179024678317345, 0.277334272994695, 0.27459649228326244, 0.27347531198431546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41880000615541235, 0.29179024678317345, 0.277334272994695, 0.27459649228326244, 0.27347531198431546, 0.2727363734894329] ***
*** finished computation of 7 references, err: [Inf, 0.41880000615541235, 0.29179024678317345, 0.277334272994695, 0.27459649228326244, 0.27347531198431546, 0.2727363734894329] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 4: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 5, 23]]
** centroid: 7, normalized-entropy: 0.6769418697808861, [(2, 5), (3, 23)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4807999983654339] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4807999983654339, 0.3131900485217979] ***
*** starting iteration: 2; err: [Inf, 0.4807999983654339, 0.3131900485217979] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4807999983654339, 0.3131900485217979, 0.2881530090885076] ***
*** starting iteration: 3; err: [Inf, 0.4807999983654339, 0.3131900485217979, 0.2881530090885076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4807999983654339, 0.3131900485217979, 0.2881530090885076, 0.262050411342721] ***
*** starting iteration: 4; err: [Inf, 0.4807999983654339, 0.3131900485217979, 0.2881530090885076, 0.262050411342721] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4807999983654339, 0.3131900485217979, 0.2881530090885076, 0.262050411342721, 0.24780138900820428] ***
*** starting iteration: 5; err: [Inf, 0.4807999983654339, 0.3131900485217979, 0.2881530090885076, 0.262050411342721, 0.24780138900820428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4807999983654339, 0.3131900485217979, 0.2881530090885076, 0.262050411342721, 0.24780138900820428, 0.24534911351470332] ***
*** starting iteration: 6; err: [Inf, 0.4807999983654339, 0.3131900485217979, 0.2881530090885076, 0.262050411342721, 0.24780138900820428, 0.24534911351470332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4807999983654339, 0.3131900485217979, 0.2881530090885076, 0.262050411342721, 0.24780138900820428, 0.24534911351470332, 0.24534911351470332] ***
*** finished computation of 7 references, err: [Inf, 0.4807999983654339, 0.3131900485217979, 0.2881530090885076, 0.262050411342721, 0.24780138900820428, 0.24534911351470332, 0.24534911351470332] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 5]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(2, 3), (3, 5)]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 11, 9]]
** centroid: 7, normalized-entropy: 0.9927744539878083, [(2, 11), (3, 9)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33979999945222444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33979999945222444, 0.23025243715395224] ***
*** starting iteration: 2; err: [Inf, 0.33979999945222444, 0.23025243715395224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33979999945222444, 0.23025243715395224, 0.21786924685439923] ***
*** starting iteration: 3; err: [Inf, 0.33979999945222444, 0.23025243715395224, 0.21786924685439923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33979999945222444, 0.23025243715395224, 0.21786924685439923, 0.21672736759810476] ***
*** starting iteration: 4; err: [Inf, 0.33979999945222444, 0.23025243715395224, 0.21786924685439923, 0.21672736759810476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33979999945222444, 0.23025243715395224, 0.21786924685439923, 0.21672736759810476, 0.21672736759810476] ***
*** finished computation of 7 references, err: [Inf, 0.33979999945222444, 0.23025243715395224, 0.21786924685439923, 0.21672736759810476, 0.21672736759810476] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.026159822348637] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.026159822348637, 0.39020844032272956] ***
*** starting iteration: 2; err: [Inf, 1.026159822348637, 0.39020844032272956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.026159822348637, 0.39020844032272956, 0.3752416659233356] ***
*** starting iteration: 3; err: [Inf, 1.026159822348637, 0.39020844032272956, 0.3752416659233356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.026159822348637, 0.39020844032272956, 0.3752416659233356, 0.3715125538371264] ***
*** finished computation of 3 references, err: [Inf, 1.026159822348637, 0.39020844032272956, 0.3752416659233356, 0.3715125538371264] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 7]]
** centroid: 1, normalized-entropy: 0.710676853856123, [(2, 29), (3, 7)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 29]]
** centroid: 2, normalized-entropy: 0.3451173149449528, [(2, 2), (3, 29)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5859050545080209] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5859050545080209, 0.35195581119129377] ***
*** starting iteration: 2; err: [Inf, 1.5859050545080209, 0.35195581119129377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5859050545080209, 0.35195581119129377, 0.35195581119129377] ***
*** finished computation of 3 references, err: [Inf, 1.5859050545080209, 0.35195581119129377, 0.35195581119129377] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8494191842016613] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8494191842016613, 0.3684994814018337] ***
*** starting iteration: 2; err: [Inf, 0.8494191842016613, 0.3684994814018337] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8494191842016613, 0.3684994814018337, 0.36659703427244567] ***
*** starting iteration: 3; err: [Inf, 0.8494191842016613, 0.3684994814018337, 0.36659703427244567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8494191842016613, 0.3684994814018337, 0.36659703427244567, 0.3651066404319189] ***
*** finished computation of 3 references, err: [Inf, 0.8494191842016613, 0.3684994814018337, 0.36659703427244567, 0.3651066404319189] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.494700010194978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.494700010194978, 0.24834534322127688] ***
*** finished computation of 7 references, err: [Inf, 0.494700010194978, 0.24834534322127688] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5905000027648392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5905000027648392, 0.26232905503080495] ***
*** finished computation of 7 references, err: [Inf, 0.5905000027648392, 0.26232905503080495] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 16]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 9]]
** centroid: 5, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5444000040712506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5444000040712506, 0.2443797318141413] ***
*** finished computation of 7 references, err: [Inf, 0.5444000040712506, 0.2443797318141413] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 5]]
** centroid: 5, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.3, 2) => 0.9666666666666667
finished with 16
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.3, 2) => 0.9666666666666667
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 8.327400063537006] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.327400063537006, 2.8145123289178016] ***
*** starting iteration: 2; err: [Inf, 8.327400063537006, 2.8145123289178016] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554] ***
*** starting iteration: 3; err: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554, 0.9910481139447185] ***
*** starting iteration: 4; err: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554, 0.9910481139447185] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554, 0.9910481139447185, 0.7194326611268806] ***
*** starting iteration: 5; err: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554, 0.9910481139447185, 0.7194326611268806] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554, 0.9910481139447185, 0.7194326611268806, 0.6310018237551052] ***
*** starting iteration: 6; err: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554, 0.9910481139447185, 0.7194326611268806, 0.6310018237551052] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554, 0.9910481139447185, 0.7194326611268806, 0.6310018237551052, 0.563711637009272] ***
*** starting iteration: 7; err: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554, 0.9910481139447185, 0.7194326611268806, 0.6310018237551052, 0.563711637009272] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554, 0.9910481139447185, 0.7194326611268806, 0.6310018237551052, 0.563711637009272, 0.5439759394428655] ***
*** starting iteration: 8; err: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554, 0.9910481139447185, 0.7194326611268806, 0.6310018237551052, 0.563711637009272, 0.5439759394428655] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554, 0.9910481139447185, 0.7194326611268806, 0.6310018237551052, 0.563711637009272, 0.5439759394428655, 0.5427414787622427] ***
*** starting iteration: 9; err: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554, 0.9910481139447185, 0.7194326611268806, 0.6310018237551052, 0.563711637009272, 0.5439759394428655, 0.5427414787622427] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554, 0.9910481139447185, 0.7194326611268806, 0.6310018237551052, 0.563711637009272, 0.5439759394428655, 0.5427414787622427, 0.5417732791868464] ***
*** finished computation of 3 references, err: [Inf, 8.327400063537006, 2.8145123289178016, 1.5710468996038554, 0.9910481139447185, 0.7194326611268806, 0.6310018237551052, 0.563711637009272, 0.5439759394428655, 0.5427414787622427, 0.5417732791868464] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 1, normalized-entropy: 0.2222848306856879, [(2, 1), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 9]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.8689000429943694] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8689000429943694, 0.6114583801221927] ***
*** starting iteration: 2; err: [Inf, 2.8689000429943694, 0.6114583801221927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8689000429943694, 0.6114583801221927, 0.5455847726815527] ***
*** starting iteration: 3; err: [Inf, 2.8689000429943694, 0.6114583801221927, 0.5455847726815527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8689000429943694, 0.6114583801221927, 0.5455847726815527, 0.5354826481435169] ***
*** starting iteration: 4; err: [Inf, 2.8689000429943694, 0.6114583801221927, 0.5455847726815527, 0.5354826481435169] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8689000429943694, 0.6114583801221927, 0.5455847726815527, 0.5354826481435169, 0.5248873000476271] ***
*** starting iteration: 5; err: [Inf, 2.8689000429943694, 0.6114583801221927, 0.5455847726815527, 0.5354826481435169, 0.5248873000476271] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8689000429943694, 0.6114583801221927, 0.5455847726815527, 0.5354826481435169, 0.5248873000476271, 0.5120410428902449] ***
*** starting iteration: 6; err: [Inf, 2.8689000429943694, 0.6114583801221927, 0.5455847726815527, 0.5354826481435169, 0.5248873000476271, 0.5120410428902449] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8689000429943694, 0.6114583801221927, 0.5455847726815527, 0.5354826481435169, 0.5248873000476271, 0.5120410428902449, 0.5070925506122365] ***
*** starting iteration: 7; err: [Inf, 2.8689000429943694, 0.6114583801221927, 0.5455847726815527, 0.5354826481435169, 0.5248873000476271, 0.5120410428902449, 0.5070925506122365] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8689000429943694, 0.6114583801221927, 0.5455847726815527, 0.5354826481435169, 0.5248873000476271, 0.5120410428902449, 0.5070925506122365, 0.5070925506122365] ***
*** finished computation of 3 references, err: [Inf, 2.8689000429943694, 0.6114583801221927, 0.5455847726815527, 0.5354826481435169, 0.5248873000476271, 0.5120410428902449, 0.5070925506122365, 0.5070925506122365] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 2, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.294400047429834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.294400047429834, 1.137006285676213] ***
*** starting iteration: 2; err: [Inf, 4.294400047429834, 1.137006285676213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.294400047429834, 1.137006285676213, 0.5581904357771434] ***
*** starting iteration: 3; err: [Inf, 4.294400047429834, 1.137006285676213, 0.5581904357771434] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.294400047429834, 1.137006285676213, 0.5581904357771434, 0.518109865835166] ***
*** starting iteration: 4; err: [Inf, 4.294400047429834, 1.137006285676213, 0.5581904357771434, 0.518109865835166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.294400047429834, 1.137006285676213, 0.5581904357771434, 0.518109865835166, 0.514615416286192] ***
*** starting iteration: 5; err: [Inf, 4.294400047429834, 1.137006285676213, 0.5581904357771434, 0.518109865835166, 0.514615416286192] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.294400047429834, 1.137006285676213, 0.5581904357771434, 0.518109865835166, 0.514615416286192, 0.5127752599895397] ***
*** starting iteration: 6; err: [Inf, 4.294400047429834, 1.137006285676213, 0.5581904357771434, 0.518109865835166, 0.514615416286192, 0.5127752599895397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.294400047429834, 1.137006285676213, 0.5581904357771434, 0.518109865835166, 0.514615416286192, 0.5127752599895397, 0.5127752599895397] ***
*** finished computation of 3 references, err: [Inf, 4.294400047429834, 1.137006285676213, 0.5581904357771434, 0.518109865835166, 0.514615416286192, 0.5127752599895397, 0.5127752599895397] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 10]]
** centroid: 1, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.9550060606687865] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.9550060606687865, 1.332210652503875] ***
*** starting iteration: 2; err: [Inf, 4.9550060606687865, 1.332210652503875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.9550060606687865, 1.332210652503875, 0.6543525203471959] ***
*** starting iteration: 3; err: [Inf, 4.9550060606687865, 1.332210652503875, 0.6543525203471959] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.9550060606687865, 1.332210652503875, 0.6543525203471959, 0.4442495111971295] ***
*** starting iteration: 4; err: [Inf, 4.9550060606687865, 1.332210652503875, 0.6543525203471959, 0.4442495111971295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.9550060606687865, 1.332210652503875, 0.6543525203471959, 0.4442495111971295, 0.40134947543758154] ***
*** starting iteration: 5; err: [Inf, 4.9550060606687865, 1.332210652503875, 0.6543525203471959, 0.4442495111971295, 0.40134947543758154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.9550060606687865, 1.332210652503875, 0.6543525203471959, 0.4442495111971295, 0.40134947543758154, 0.3783120093379628] ***
*** starting iteration: 6; err: [Inf, 4.9550060606687865, 1.332210652503875, 0.6543525203471959, 0.4442495111971295, 0.40134947543758154, 0.3783120093379628] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.9550060606687865, 1.332210652503875, 0.6543525203471959, 0.4442495111971295, 0.40134947543758154, 0.3783120093379628, 0.37350581081463197] ***
*** starting iteration: 7; err: [Inf, 4.9550060606687865, 1.332210652503875, 0.6543525203471959, 0.4442495111971295, 0.40134947543758154, 0.3783120093379628, 0.37350581081463197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.9550060606687865, 1.332210652503875, 0.6543525203471959, 0.4442495111971295, 0.40134947543758154, 0.3783120093379628, 0.37350581081463197, 0.36874907145516295] ***
*** starting iteration: 8; err: [Inf, 4.9550060606687865, 1.332210652503875, 0.6543525203471959, 0.4442495111971295, 0.40134947543758154, 0.3783120093379628, 0.37350581081463197, 0.36874907145516295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.9550060606687865, 1.332210652503875, 0.6543525203471959, 0.4442495111971295, 0.40134947543758154, 0.3783120093379628, 0.37350581081463197, 0.36874907145516295, 0.3678175592156119] ***
*** finished computation of 3 references, err: [Inf, 4.9550060606687865, 1.332210652503875, 0.6543525203471959, 0.4442495111971295, 0.40134947543758154, 0.3783120093379628, 0.37350581081463197, 0.36874907145516295, 0.3678175592156119] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 30]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(2, 2), (3, 30)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 6]]
** centroid: 3, normalized-entropy: 0.6609623351442084, [(2, 29), (3, 6)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.168258337088491] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.168258337088491, 1.3423669858751794] ***
*** starting iteration: 2; err: [Inf, 4.168258337088491, 1.3423669858751794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.168258337088491, 1.3423669858751794, 0.3836874604099583] ***
*** starting iteration: 3; err: [Inf, 4.168258337088491, 1.3423669858751794, 0.3836874604099583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.168258337088491, 1.3423669858751794, 0.3836874604099583, 0.353081985103289] ***
*** starting iteration: 4; err: [Inf, 4.168258337088491, 1.3423669858751794, 0.3836874604099583, 0.353081985103289] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.168258337088491, 1.3423669858751794, 0.3836874604099583, 0.353081985103289, 0.35195581119129377] ***
*** starting iteration: 5; err: [Inf, 4.168258337088491, 1.3423669858751794, 0.3836874604099583, 0.353081985103289, 0.35195581119129377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.168258337088491, 1.3423669858751794, 0.3836874604099583, 0.353081985103289, 0.35195581119129377, 0.35195581119129377] ***
*** finished computation of 3 references, err: [Inf, 4.168258337088491, 1.3423669858751794, 0.3836874604099583, 0.353081985103289, 0.35195581119129377, 0.35195581119129377] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 3, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9580372163528856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9580372163528856, 0.36265628701801644] ***
*** starting iteration: 2; err: [Inf, 0.9580372163528856, 0.36265628701801644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9580372163528856, 0.36265628701801644, 0.3625779365294875] ***
*** finished computation of 3 references, err: [Inf, 0.9580372163528856, 0.36265628701801644, 0.3625779365294875] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 9]]
** centroid: 2, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.3, 2) => 0.9666666666666667
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.4291692593898655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4291692593898655, 0.24549834724787645] ***
*** starting iteration: 2; err: [Inf, 0.4291692593898655, 0.24549834724787645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4291692593898655, 0.24549834724787645, 0.20721796748423998] ***
*** starting iteration: 3; err: [Inf, 0.4291692593898655, 0.24549834724787645, 0.20721796748423998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4291692593898655, 0.24549834724787645, 0.20721796748423998, 0.188313478334863] ***
*** finished computation of 7 references, err: [Inf, 0.4291692593898655, 0.24549834724787645, 0.20721796748423998, 0.188313478334863] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 5]]
** centroid: 3, normalized-entropy: 0.8960382325345574, [(2, 11), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 18]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 1), (3, 18)]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3795345358730306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3795345358730306, 0.17611922415612027] ***
*** starting iteration: 2; err: [Inf, 0.3795345358730306, 0.17611922415612027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3795345358730306, 0.17611922415612027, 0.17117904938356104] ***
*** starting iteration: 3; err: [Inf, 0.3795345358730306, 0.17611922415612027, 0.17117904938356104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3795345358730306, 0.17611922415612027, 0.17117904938356104, 0.16544320883391417] ***
*** finished computation of 7 references, err: [Inf, 0.3795345358730306, 0.17611922415612027, 0.17117904938356104, 0.16544320883391417] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 9]]
** centroid: 5, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34923830059071825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34923830059071825, 0.21613491923632316] ***
*** starting iteration: 2; err: [Inf, 0.34923830059071825, 0.21613491923632316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34923830059071825, 0.21613491923632316, 0.19335707675291589] ***
*** starting iteration: 3; err: [Inf, 0.34923830059071825, 0.21613491923632316, 0.19335707675291589] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34923830059071825, 0.21613491923632316, 0.19335707675291589, 0.18983166760537296] ***
*** finished computation of 7 references, err: [Inf, 0.34923830059071825, 0.21613491923632316, 0.19335707675291589, 0.18983166760537296] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.3, 2) => 0.9666666666666667
finished with 21
iteration 5 finished
*** starting iteration: 1; err: [Inf, 3.3647732380879107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3647732380879107, 0.8106032225064888] ***
*** starting iteration: 2; err: [Inf, 3.3647732380879107, 0.8106032225064888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3647732380879107, 0.8106032225064888, 0.299424701173853] ***
*** starting iteration: 3; err: [Inf, 3.3647732380879107, 0.8106032225064888, 0.299424701173853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3647732380879107, 0.8106032225064888, 0.299424701173853, 0.21037852193571444] ***
*** finished computation of 7 references, err: [Inf, 3.3647732380879107, 0.8106032225064888, 0.299424701173853, 0.21037852193571444] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 10]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(2, 8), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 4, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 5]]
** centroid: 5, normalized-entropy: 0.8631205685666311, [(2, 2), (3, 5)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40410180041718136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40410180041718136, 0.19533913096207176] ***
*** starting iteration: 2; err: [Inf, 0.40410180041718136, 0.19533913096207176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40410180041718136, 0.19533913096207176, 0.18748968941181463] ***
*** starting iteration: 3; err: [Inf, 0.40410180041718136, 0.19533913096207176, 0.18748968941181463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40410180041718136, 0.19533913096207176, 0.18748968941181463, 0.18180292738861945] ***
*** finished computation of 7 references, err: [Inf, 0.40410180041718136, 0.19533913096207176, 0.18748968941181463, 0.18180292738861945] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 14]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 1), (3, 14)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 4, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 4]]
** centroid: 5, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5538557207689979] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5538557207689979, 0.2884517746962617] ***
*** starting iteration: 2; err: [Inf, 0.5538557207689979, 0.2884517746962617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5538557207689979, 0.2884517746962617, 0.24438209677412728] ***
*** starting iteration: 3; err: [Inf, 0.5538557207689979, 0.2884517746962617, 0.24438209677412728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5538557207689979, 0.2884517746962617, 0.24438209677412728, 0.2263976425275037] ***
*** finished computation of 7 references, err: [Inf, 0.5538557207689979, 0.2884517746962617, 0.24438209677412728, 0.2263976425275037] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 21, 3]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 21), (3, 3)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 3]]
** centroid: 6, normalized-entropy: 0.6962122601251459, [(2, 13), (3, 3)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7255999945048882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7255999945048882, 0.39327378743520847] ***
*** starting iteration: 2; err: [Inf, 0.7255999945048882, 0.39327378743520847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7255999945048882, 0.39327378743520847, 0.2908207752572033] ***
*** starting iteration: 3; err: [Inf, 0.7255999945048882, 0.39327378743520847, 0.2908207752572033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7255999945048882, 0.39327378743520847, 0.2908207752572033, 0.2562802743220637] ***
*** finished computation of 7 references, err: [Inf, 0.7255999945048882, 0.39327378743520847, 0.2908207752572033, 0.2562802743220637] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 10]]
** centroid: 6, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5025000026644147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5025000026644147, 0.32628881586894587] ***
*** starting iteration: 2; err: [Inf, 0.5025000026644147, 0.32628881586894587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5025000026644147, 0.32628881586894587, 0.3034788142028189] ***
*** starting iteration: 3; err: [Inf, 0.5025000026644147, 0.32628881586894587, 0.3034788142028189] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5025000026644147, 0.32628881586894587, 0.3034788142028189, 0.29732786697470287] ***
*** finished computation of 7 references, err: [Inf, 0.5025000026644147, 0.32628881586894587, 0.3034788142028189, 0.29732786697470287] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 2]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 5), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 13]]
** centroid: 2, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 5, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.556200000172817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.556200000172817, 0.5150884988429554] ***
*** starting iteration: 2; err: [Inf, 2.556200000172817, 0.5150884988429554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.556200000172817, 0.5150884988429554, 0.36095307966910667] ***
*** starting iteration: 3; err: [Inf, 2.556200000172817, 0.5150884988429554, 0.36095307966910667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.556200000172817, 0.5150884988429554, 0.36095307966910667, 0.3319487565032339] ***
*** finished computation of 7 references, err: [Inf, 2.556200000172817, 0.5150884988429554, 0.36095307966910667, 0.3319487565032339] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 28, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 5, 12]]
** centroid: 4, normalized-entropy: 0.8739810481273581, [(2, 5), (3, 12)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.98
finished with 21
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.98
finished with 22
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.5630727808460577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5630727808460577, 0.3298331948023565] ***
*** starting iteration: 2; err: [Inf, 0.5630727808460577, 0.3298331948023565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875] ***
*** starting iteration: 3; err: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722] ***
*** starting iteration: 4; err: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722, 0.20514750262088913] ***
*** starting iteration: 5; err: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722, 0.20514750262088913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722, 0.20514750262088913, 0.2028497599725209] ***
*** starting iteration: 6; err: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722, 0.20514750262088913, 0.2028497599725209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722, 0.20514750262088913, 0.2028497599725209, 0.19493009444824294] ***
*** starting iteration: 7; err: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722, 0.20514750262088913, 0.2028497599725209, 0.19493009444824294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722, 0.20514750262088913, 0.2028497599725209, 0.19493009444824294, 0.18959925407131323] ***
*** starting iteration: 8; err: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722, 0.20514750262088913, 0.2028497599725209, 0.19493009444824294, 0.18959925407131323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722, 0.20514750262088913, 0.2028497599725209, 0.19493009444824294, 0.18959925407131323, 0.18646004398232566] ***
*** starting iteration: 9; err: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722, 0.20514750262088913, 0.2028497599725209, 0.19493009444824294, 0.18959925407131323, 0.18646004398232566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722, 0.20514750262088913, 0.2028497599725209, 0.19493009444824294, 0.18959925407131323, 0.18646004398232566, 0.1720680676204215] ***
*** starting iteration: 10; err: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722, 0.20514750262088913, 0.2028497599725209, 0.19493009444824294, 0.18959925407131323, 0.18646004398232566, 0.1720680676204215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722, 0.20514750262088913, 0.2028497599725209, 0.19493009444824294, 0.18959925407131323, 0.18646004398232566, 0.1720680676204215, 0.16887923277905084] ***
*** finished computation of 7 references, err: [Inf, 0.5630727808460577, 0.3298331948023565, 0.25003486963598875, 0.21216905596335722, 0.20514750262088913, 0.2028497599725209, 0.19493009444824294, 0.18959925407131323, 0.18646004398232566, 0.1720680676204215, 0.16887923277905084] ***
*** center 1: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 10]]
** centroid: 4, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4008931710138337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4008931710138337, 0.17276590315327456] ***
*** starting iteration: 2; err: [Inf, 0.4008931710138337, 0.17276590315327456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4008931710138337, 0.17276590315327456, 0.16797676161413175] ***
*** starting iteration: 3; err: [Inf, 0.4008931710138337, 0.17276590315327456, 0.16797676161413175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4008931710138337, 0.17276590315327456, 0.16797676161413175, 0.16784316044173717] ***
*** finished computation of 7 references, err: [Inf, 0.4008931710138337, 0.17276590315327456, 0.16797676161413175, 0.16784316044173717] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 6]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 9]]
** centroid: 4, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5867194710716652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5867194710716652, 0.1977436031641256] ***
*** starting iteration: 2; err: [Inf, 0.5867194710716652, 0.1977436031641256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5867194710716652, 0.1977436031641256, 0.18443150037323072] ***
*** starting iteration: 3; err: [Inf, 0.5867194710716652, 0.1977436031641256, 0.18443150037323072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5867194710716652, 0.1977436031641256, 0.18443150037323072, 0.174456935972243] ***
*** starting iteration: 4; err: [Inf, 0.5867194710716652, 0.1977436031641256, 0.18443150037323072, 0.174456935972243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5867194710716652, 0.1977436031641256, 0.18443150037323072, 0.174456935972243, 0.17198781386370435] ***
*** starting iteration: 5; err: [Inf, 0.5867194710716652, 0.1977436031641256, 0.18443150037323072, 0.174456935972243, 0.17198781386370435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5867194710716652, 0.1977436031641256, 0.18443150037323072, 0.174456935972243, 0.17198781386370435, 0.17198781386370435] ***
*** finished computation of 7 references, err: [Inf, 0.5867194710716652, 0.1977436031641256, 0.18443150037323072, 0.174456935972243, 0.17198781386370435, 0.17198781386370435] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 21, 9]]
** centroid: 2, normalized-entropy: 0.8812908992306927, [(2, 21), (3, 9)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.98
finished with 22
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.98
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.258823529411765, 3.629411764705882, 1.535294117647059, 0.2764705882352942], [6.555555555555556, 3.122222222222222, 5.45, 2.1444444444444444], [5.536363636363636, 2.6590909090909087, 4.004545454545454, 1.2545454545454546], [4.6875, 3.1437500000000003, 1.3875, 0.19375000000000006], [7.471428571428572, 3.314285714285714, 6.171428571428571, 2.042857142857143], [6.3500000000000005, 3.0083333333333333, 4.65, 1.491666666666667], [6.1, 2.7, 5.109999999999999, 1.7899999999999998], [7.6, 3.0, 6.6, 2.1]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 1, 3, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.819999999999999, 2.5800000000000005, 4.46, 1.3599999999999999], [5.45, 2.35, 4.75, 1.6], [6.123076923076923, 2.876923076923077, 5.184615384615384, 1.953846153846154], [5.0242424242424235, 3.4606060606060614, 1.4333333333333336, 0.2454545454545455], [5.220000000000001, 2.3200000000000003, 3.5200000000000005, 1.06], [6.353846153846155, 2.984615384615385, 4.676923076923077, 1.5230769230769232], [5.750000000000001, 2.75, 4.0249999999999995, 1.2333333333333334], [7.056250000000001, 3.075, 5.987500000000001, 2.1374999999999997]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 3, 1, 2, 2, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.003125, 2.759375000000001, 4.278125000000001, 1.3375], [5.857142857142857, 2.742857142857143, 4.985714285714286, 1.9714285714285715], [5.011764705882354, 3.400000000000001, 1.4941176470588233, 0.25], [6.82, 3.04, 4.82, 1.5], [6.583333333333333, 2.9000000000000004, 5.45, 1.9083333333333332], [7.539999999999999, 2.8200000000000003, 6.5200000000000005, 2.02], [7.7, 3.8, 6.7, 2.2], [6.800000000000001, 3.266666666666667, 5.800000000000001, 2.3000000000000003]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3, 3, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[97, 1, 1, 43, 1, 1, 24, 33, 28, 1, 31, 1, 1, 3, 1, 23, 26, 1, 25, 35, 2, 47, 17, 40, 5, 22, 10, 32, 17, 1, 26, 46, 49, 27, 41, 42, 2, 34, 40, 37, 29, 12, 20, 36, 17, 16, 43, 34, 27, 24, 40, 26, 35, 20, 16, 32, 40, 2, 48, 44, 27, 44, 44, 1, 25, 22, 24, 34, 37, 31, 33, 46, 24, 40, 64, 41, 39, 32, 34, 32, 34, 22, 49, 31, 34, 25, 32, 32, 31, 47, 37, 16, 47, 25, 14, 29, 36, 28, 35, 19, 42, 38, 39, 26, 62, 21, 63, 24, 28, 33, 53, 39, 44, 25, 30, 26, 33, 57, 27, 22, 31, 25, 49, 57, 24, 32, 37, 40, 37, 24, 53, 46, 31, 21, 21, 35, 34, 36, 38, 51, 35, 48, 17, 35, 57, 46, 30, 14, 39, 35, 50, 45, 41, 26, 44, 34, 27, 40, 32, 42, 23, 16, 17, 21, 42, 32, 45, 48, 51, 46, 8, 44, 12, 35, 67, 41, 52, 33, 28, 29, 54, 29, 34, 39, 39, 29, 28, 29, 16, 30, 37, 46, 51, 45, 35, 26, 41, 22, 61, 39, 48, 38, 26, 49, 47, 49, 12, 19, 74, 55, 11, 34, 15, 60, 33, 29, 1, 22, 31, 54, 42, 51, 32, 44, 29, 57, 29, 30, 55, 30, 57, 47, 14, 52, 35, 29, 32, 40, 18, 21, 58, 36, 49, 38, 37, 21, 45, 39, 40, 55, 43, 21, 59, 27, 35, 32, 52, 35, 28, 38, 54, 1, 44, 23, 38, 32, 31, 37, 52, 46, 40, 46, 51, 23, 52, 21, 42, 49, 38, 42, 47, 38, 48, 29, 26, 37, 37, 28, 22, 16, 32, 14, 24, 29, 12, 40, 30, 45, 35, 27]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6020000000000002, speedup = 0.4842994073315285, eval_ratio = 0.041976)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.42447916666666674,"f1":null,"seconds":7.813796401023865e-5,"exhaustive_search_seconds":0.0003953203558921814,"evaluations":339.8046875,"distances_sum":1758.4639364470763}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5746527777777778,"recall":0.5746527777777778,"f1":null,"seconds":0.0001003611832857132,"exhaustive_search_seconds":0.0003953203558921814,"evaluations":378.96875,"distances_sum":1677.0423062520665}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.678819444444444,"recall":0.678819444444444,"f1":0.678819444444444,"seconds":0.0001295488327741623,"exhaustive_search_seconds":0.0003953203558921814,"evaluations":416.8046875,"distances_sum":1632.4030772254935}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7421874999999992,"recall":0.7421874999999992,"f1":0.7421874999999992,"seconds":0.0001684483140707016,"exhaustive_search_seconds":0.0003953203558921814,"evaluations":453.90625,"distances_sum":1610.1722541585884}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7907986111111103,"recall":0.7907986111111103,"f1":0.7907986111111103,"seconds":0.00018463283777236938,"exhaustive_search_seconds":0.0003953203558921814,"evaluations":492.7734375,"distances_sum":1594.3593453079911}
KCenters.DeloneInvIndex> reached performance {"precision":0.8368055555555545,"recall":0.8368055555555545,"f1":0.8368055555555545,"seconds":0.00025534816086292267,"exhaustive_search_seconds":0.0003953203558921814,"evaluations":533.546875,"distances_sum":1583.5569812639537}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7830000000000001, speedup = 1.4001895429814095, eval_ratio = 0.054165)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
