Julia Version 1.5.0-DEV.142
Commit 6d86384ead (2020-01-23 18:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_n7k0bL/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_n7k0bL/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_n7k0bL/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.15520101263371722 -0.04397998816007367; -0.15520101263371722 0.0 0.06913381465337322; 0.04397998816007367 -0.06913381465337322 0.0])
dAA = so3([0.0 0.0640198318747837 -0.01708243162153727; -0.0640198318747837 0.0 -0.09432368108407913; 0.01708243162153727 0.09432368108407913 0.0])
dAA = so3([0.0 0.030382996150973392 -0.21456360629889668; -0.030382996150973392 0.0 -0.06950760887901607; 0.21456360629889668 0.06950760887901607 0.0])
dAA = Quaternion(0.9964019203347713, [-0.0788035871603643, -0.031163856829742705, 0.0014219111556758365])
dAA = SO3([0.9914153976539015 0.13072694796074052 -0.0024442527746717777; -0.13074543314450593 0.9913617919152995 -0.010364807877729167; 0.001068179110537582 0.010595405011444275 0.9999432965853772])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9863748467340172 0.15284302943483472 -0.06085778572726995; -0.16284401600975018 0.9596693458815563 -0.22916494719978883; 0.023377086650399382 0.23595286590429038 0.9714832766915196]), [-0.6913381465337322, -0.43979988160073663, -1.5520101263371722])
xj = SE3(SO3([0.9880126996520348 0.011310089456476465 -0.15395774486132421; 0.04895401138535444 0.9228830723283465 0.38195593931640126; 0.14640495242846358 -0.3849141679469312 0.9112665215062721]), [0.6950760887901606, -2.1456360629889666, -0.3038299615097339])
Dx = SE3(SO3([0.9700015286357281 -0.14812816990824654 -0.19275652965330262; 0.23253518632744513 0.7965696616279685 0.5580359856618247; 0.07088315430348219 -0.5861184346644776 0.8071188010339317]), [1.6744881591779412, -1.1306232535395275, 1.5191299144046657])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
