Julia Version 1.5.0-DEV.147
Commit e0740fe5a6 (2020-01-24 14:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_XUccwX/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_XUccwX/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_XUccwX/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.03513494457753038 0.0931378441778496; -0.03513494457753038 0.0 -0.08127645378330906; -0.0931378441778496 0.08127645378330906 0.0])
dAA = so3([0.0 -0.16920116439917915 -0.06898705427383038; 0.16920116439917915 0.0 -0.0017162659885018438; 0.06898705427383038 0.0017162659885018438 0.0])
dAA = so3([0.0 -0.13871811510464346 -0.04225593248682627; 0.13871811510464346 0.0 0.18016747543126968; 0.04225593248682627 -0.18016747543126968 0.0])
dAA = Quaternion(0.9926414712849562, [-0.08323952230219855, -0.007357596833389522, 0.08763536489897525])
dAA = SO3([0.9972104372825625 0.01648478057598977 0.07279832267354838; -0.019033016077108975 0.9992251648083394 0.03445017144740419; -0.07217401245413135 -0.0357396421793574 0.9967515186359952])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8974637224677894 -0.4088061922513615 -0.16563925872570684; 0.4080789717512703 0.9120703597864329 -0.03999014395413975; 0.16742287677818918 -0.031704194927324014 0.9853752708259557]), [0.8127645378330904, 0.9313784417784958, -0.3513494457753038])
xj = SE3(SO3([0.9060163535114685 -0.41370760338671786 -0.08933300660898008; 0.41372530783829337 0.8211818099067262 0.3930544551743727; -0.08925097659909 -0.3930730898679427 0.9151654545478523]), [-1.8016747543126967, -0.4225593248682627, 1.3871811510464345])
Dx = SE3(SO3([0.9670067521917411 -0.1019899646308704 0.23344375838769937; 0.009791125135889648 0.9305638847195212 0.3659986206589951; -0.2545625170447411 -0.3516374604195456 0.9008601563758597]), [-2.607808157036833, -0.2212062469882377, 2.200303010209971])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
