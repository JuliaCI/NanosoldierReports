Julia Version 1.5.0-DEV.133
Commit c9940ed95b (2020-01-21 18:51 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed InvertedIndices ───────────── v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed KCenters ──────────────────── v0.1.9
 Installed Parsers ───────────────────── v0.3.10
 Installed CategoricalArrays ─────────── v0.7.7
 Installed DataFrames ────────────────── v0.20.0
 Installed TableTraits ───────────────── v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed MLDataUtils ───────────────── v0.5.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed DataStructures ────────────── v0.17.9
 Installed JSON ──────────────────────── v0.21.0
 Installed Tables ────────────────────── v0.2.11
 Installed DataAPI ───────────────────── v1.1.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed Compat ────────────────────── v3.2.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Missings ──────────────────── v0.4.3
 Installed MLLabelUtils ──────────────── v0.5.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_bOZcq8/Project.toml`
 [no changes]
  Updating `/tmp/jl_bOZcq8/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_bOZcq8/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 143.82999999999998
[ Info: 84.53000000000003
[ Info: 42.63999999999999
[ Info: 24.040000000000003
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999839687118
[ Info: 76.0200011681837
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.92661663451262
inertia(cdnet.distances) = 32.78864496345493
inertia(crand.distances) = 21.031255026111417
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.517578125,"f1":0.6668907481407487,"seconds":4.706904292106628e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":6.7734375,"distances_sum":1418.971674533846}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8747923951048957,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.5234375,"distances_sum":2258.777188653849}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5166015625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5166015625,"f1":0.6664786602286605,"seconds":4.565343260765076e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":6.859375,"distances_sum":1381.6964833158722}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.794921875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.794921875,"f1":0.8747923951048957,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.5234375,"distances_sum":2258.777188653849}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8785381285381293,"seconds":5.159527063369751e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.515625,"distances_sum":2273.800503131644}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9129469488844496,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.6484375,"distances_sum":2469.153205252856}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8515625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8515625,"f1":0.9129469488844496,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.6484375,"distances_sum":2469.153205252856}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9524038461538467,"seconds":6.3925981521606445e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.828125,"distances_sum":2770.1700374136844}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9422161172161176,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8046875,"distances_sum":2682.2974981084594}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9646436896436899,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8828125,"distances_sum":2851.264768223986}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.953039148351649,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8203125,"distances_sum":2788.5639636882574}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.947593552281053,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.796875,"distances_sum":2760.467283724366}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9521436896436902,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.84375,"distances_sum":2759.6113029259895}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9540178571428576,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8359375,"distances_sum":2789.766629165856}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9646436896436899,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8828125,"distances_sum":2851.264768223986}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9646436896436899,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8828125,"distances_sum":2851.264768223986}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.6988690129315135,"seconds":4.524365067481995e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.140625,"distances_sum":1214.27171626397}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3759765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3759765625,"f1":null,"seconds":4.688277840614319e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.078125,"distances_sum":846.0169243745358}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8058027042402052,"seconds":4.867091774940491e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.859375,"distances_sum":1613.2001988457341}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6923828125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6923828125,"f1":0.8058027042402052,"seconds":4.867091774940491e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.859375,"distances_sum":1613.2001988457341}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9422676282051287,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.71875,"distances_sum":2337.796743313474}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9087027555777563,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.53125,"distances_sum":2115.7536532633176}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9200065559440564,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.640625,"distances_sum":2189.819061616248}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9422676282051287,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.71875,"distances_sum":2337.796743313474}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9536146145521148,"seconds":6.338581442832947e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.78125,"distances_sum":2451.6379065316733}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9647321428571431,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8359375,"distances_sum":2515.2649625686945}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9484775641025648,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.6484375,"distances_sum":2445.0671192583554}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9647321428571431,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8359375,"distances_sum":2515.2649625686945}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9647321428571431,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8359375,"distances_sum":2515.2649625686945}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.388671875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.388671875,"f1":null,"seconds":3.7867575883865356e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":5.78125,"distances_sum":879.9562742820282}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.388671875,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.388671875,"f1":null,"seconds":3.7867575883865356e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":5.78125,"distances_sum":879.9562742820282}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9019516941391948,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.5390625,"distances_sum":2098.823858592745}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8330078125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8330078125,"f1":0.9019516941391948,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.5390625,"distances_sum":2098.823858592745}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9167785339660346,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.640625,"distances_sum":2150.5774439331253}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9257383241758248,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.65625,"distances_sum":2208.3546416945214}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9257383241758248,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.65625,"distances_sum":2208.3546416945214}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.869140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9257383241758248,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.65625,"distances_sum":2208.3546416945214}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7919143356643364,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.4921875,"distances_sum":1571.628444782433}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6748046875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6748046875,"f1":0.7919143356643364,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.4921875,"distances_sum":1571.628444782433}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9482028388278394,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.6328125,"distances_sum":2439.1528132966528}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.919373855311356,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.5625,"distances_sum":2222.244627593988}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.950280448717949,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8203125,"distances_sum":2408.8536509194564}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.950280448717949,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8203125,"distances_sum":2408.8536509194564}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9656452922077927,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8515625,"distances_sum":2491.3481576060076}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9612007783882788,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8125,"distances_sum":2489.844081160243}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9656452922077927,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8515625,"distances_sum":2491.3481576060076}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9656452922077927,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8515625,"distances_sum":2491.3481576060076}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":5.9921875,"distances_sum":891.1652861392291}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.546875,"f1":0.6925184190809196,"seconds":4.168599843978882e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":6.796875,"distances_sum":1239.9161379315574}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.807490426240427,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.6171875,"distances_sum":1744.0667698033972}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6884765625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6884765625,"f1":0.807490426240427,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.6171875,"distances_sum":1744.0667698033972}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9456043956043961,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.7890625,"distances_sum":2405.73827439135}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8391525141525149,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.0546875,"distances_sum":1844.5353301793514}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8357122044622052,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.9140625,"distances_sum":1830.1594593895184}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9456043956043961,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.7890625,"distances_sum":2405.73827439135}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9666723901098904,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.90625,"distances_sum":2515.0391231833432}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9506810897435901,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.7734375,"distances_sum":2446.6980713085113}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.953680173992675,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.78125,"distances_sum":2451.6122550184123}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9666723901098904,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.90625,"distances_sum":2515.0391231833432}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9666723901098904,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.90625,"distances_sum":2515.0391231833432}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.455078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.455078125,"f1":null,"seconds":4.002824425697327e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.09375,"distances_sum":977.3183756080502}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7060546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7060546875,"f1":0.818287962037963,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.9609375,"distances_sum":1673.5220178349084}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7060546875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7060546875,"f1":0.818287962037963,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.9609375,"distances_sum":1673.5220178349084}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9586309523809529,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8671875,"distances_sum":2450.2831760560553}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.900504183316684,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6640625,"distances_sum":2045.4260952315008}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8759703837828847,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.28125,"distances_sum":1894.0895145638835}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8751691017316025,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.359375,"distances_sum":1909.3603057515895}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9586309523809529,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8671875,"distances_sum":2450.2831760560553}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.97265625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.97265625,"f1":0.9849702380952381,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.96875,"distances_sum":2651.2798570880564}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9661286630036632,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.921875,"distances_sum":2509.008405403341}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9593864468864475,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.890625,"distances_sum":2464.3137430968245}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.97265625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9849702380952381,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.96875,"distances_sum":2651.2798570880564}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.97265625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9849702380952381,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.96875,"distances_sum":2651.2798570880564}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.7969693500943509,"seconds":4.582107067108154e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.7578125,"distances_sum":1594.5172301465077}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":5.984375,"distances_sum":871.3000365339024}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5634765625,"f1":null,"seconds":4.198402166366577e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.6171875,"distances_sum":1314.0387218786177}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.685546875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.685546875,"f1":0.7969693500943509,"seconds":4.582107067108154e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.7578125,"distances_sum":1594.5172301465077}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8331746378621386,"seconds":4.848465323448181e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.203125,"distances_sum":1773.0246908717156}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8998142482517492,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.6484375,"distances_sum":2088.8896663137198}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8482751623376632,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.28125,"distances_sum":1863.4641619059717}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8271484375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8271484375,"f1":0.8998142482517492,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.6484375,"distances_sum":2088.8896663137198}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9689217032967036,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.9140625,"distances_sum":2583.0536172246866}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9649210164835168,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.875,"distances_sum":2534.878207878026}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9456215659340665,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.7578125,"distances_sum":2423.514760212366}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9653674450549456,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.8828125,"distances_sum":2551.6503645288617}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8984182484182491,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.5625,"distances_sum":2084.3022307540673}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9506581959706967,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.7890625,"distances_sum":2467.710376761212}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9453983516483522,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.796875,"distances_sum":2402.7963268520866}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9689217032967036,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.9140625,"distances_sum":2583.0536172246866}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9689217032967036,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.9140625,"distances_sum":2583.0536172246866}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7786581474081481,"seconds":4.6137720346450806e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.3828125,"distances_sum":1502.8300545376728}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7786581474081481,"seconds":4.6137720346450806e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.3828125,"distances_sum":1502.8300545376728}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9280792124542129,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.5859375,"distances_sum":2184.8814938991727}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9528190559440564,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.765625,"distances_sum":2356.7701141370567}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9528190559440564,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.765625,"distances_sum":2356.7701141370567}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9748912545787548,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.890625,"distances_sum":2497.730954142155}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9727907509157512,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9453125,"distances_sum":2466.2083228755796}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.96038804945055,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.828125,"distances_sum":2393.007178187511}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9783482142857145,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9453125,"distances_sum":2505.6395685079306}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9783482142857145,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9453125,"distances_sum":2505.6395685079306}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9783482142857145,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9453125,"distances_sum":2505.6395685079306}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":0.9890252976190476,"recall":0.7529296875,"f1":0.8469442016317024,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1640625,"distances_sum":1787.568925125511}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":4,"bsize":5},"perf":{"precision":0.9890252976190476,"recall":0.7529296875,"f1":0.8469442016317024,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1640625,"distances_sum":1787.568925125511}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":8,"bsize":5}, perf: {"precision":0.9879278273809524,"recall":0.7646484375,"f1":0.8560182005494513,"seconds":5.133450031280518e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.296875,"distances_sum":1797.0563812368605}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":8,"bsize":5},"perf":{"precision":0.9879278273809524,"recall":0.7646484375,"f1":0.8560182005494513,"seconds":5.133450031280518e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.296875,"distances_sum":1797.0563812368605}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":12,"bsize":6}, perf: {"precision":0.9896019345238096,"recall":0.83203125,"f1":0.8990942651098907,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.609375,"distances_sum":2029.0709131354326}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":12,"bsize":9}, perf: {"precision":0.9882068452380951,"recall":0.9248046875,"f1":0.952315132783883,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8828125,"distances_sum":2407.078544355923}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":12,"bsize":7}, perf: {"precision":0.9916294642857144,"recall":0.892578125,"f1":0.9349845467032971,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.734375,"distances_sum":2284.183757386424}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":10,"bsize":6}, perf: {"precision":0.9865606398809523,"recall":0.8125,"f1":0.8851343318140201,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6640625,"distances_sum":1969.8429028497158}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":12,"bsize":9},"perf":{"precision":0.9882068452380951,"recall":0.9248046875,"f1":0.952315132783883,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8828125,"distances_sum":2407.078544355923}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":12,"bsize":9},"perf":{"precision":0.9882068452380951,"recall":0.9248046875,"f1":0.952315132783883,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8828125,"distances_sum":2407.078544355923}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2705078125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2705078125,"f1":null,"seconds":3.5744160413742065e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.515625,"distances_sum":564.047735472107}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4365234375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4365234375,"f1":null,"seconds":3.889203071594238e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.375,"distances_sum":839.6104773038442}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5546875,"f1":null,"seconds":4.26173210144043e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.2265625,"distances_sum":1102.8518872595912}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5546875,"state":{"ssize":2,"bsize":3},"perf":{"precision":null,"recall":0.5546875,"f1":null,"seconds":4.26173210144043e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.2265625,"distances_sum":1102.8518872595912}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6181640625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6181640625,"f1":0.7504169441669448,"seconds":4.647299647331238e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.4375,"distances_sum":1233.4082144197514}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9233974358974366,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.5703125,"distances_sum":1973.2447207224393}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8880208333333341,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6015625,"distances_sum":1758.775265480292}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.7038267288267295,"seconds":4.36045229434967e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.15625,"distances_sum":1069.5235757763471}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7765942390942399,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.6640625,"distances_sum":1288.90823939255}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8641889360639369,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.2421875,"distances_sum":1681.053014964504}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.865234375,"f1":0.9233974358974366,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.5703125,"distances_sum":1973.2447207224393}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.970703125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.970703125,"f1":0.9840773809523811,"seconds":7.29784369468689e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9765625,"distances_sum":2364.8291127023504}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9540235805860808,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.796875,"distances_sum":2184.3574244168635}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9704842032967038,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8984375,"distances_sum":2289.6545313972542}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9307952464202469,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.65625,"distances_sum":2042.6038170535596}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9798363095238098,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9765625,"distances_sum":2344.250257232685}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9461767399267403,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7890625,"distances_sum":2114.521169749886}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9556979478854483,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.84375,"distances_sum":2187.8098233070436}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.970703125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9840773809523811,"seconds":7.29784369468689e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9765625,"distances_sum":2364.8291127023504}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.970703125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9840773809523811,"seconds":7.29784369468689e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9765625,"distances_sum":2364.8291127023504}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7783764846264855,"seconds":4.511326551437378e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.390625,"distances_sum":1430.04363529233}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.6854033119658123,"seconds":4.220753908157349e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.7890625,"distances_sum":1104.3431366397429}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.654296875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.654296875,"f1":0.7783764846264855,"seconds":4.511326551437378e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.390625,"distances_sum":1430.04363529233}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8822781385281393,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.3359375,"distances_sum":1887.599319920993}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9560325091575096,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.84375,"distances_sum":2321.0512303899536}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9418269230769236,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.6640625,"distances_sum":2197.805365274461}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9021920787545796,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.421875,"distances_sum":1972.4283635416418}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.892244734432235,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.328125,"distances_sum":1901.7909926438306}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9560325091575096,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.84375,"distances_sum":2321.0512303899536}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9650526556776562,"seconds":6.249174475669861e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.890625,"distances_sum":2377.7900198595194}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9711538461538465,"seconds":6.105750799179077e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.90625,"distances_sum":2420.764042539251}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9734775641025645,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.921875,"distances_sum":2436.0082832750963}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9653846153846156,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8828125,"distances_sum":2361.046108712841}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.960479624542125,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8671875,"distances_sum":2352.4935851585265}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9559440559440565,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.828125,"distances_sum":2328.5723011743858}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734775641025645,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.921875,"distances_sum":2436.0082832750963}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734775641025645,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.921875,"distances_sum":2436.0082832750963}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.772280844155845,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.28125,"distances_sum":1435.5049461715234}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2236328125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2236328125,"f1":null,"seconds":3.069639205932617e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":5.4921875,"distances_sum":509.3022301662206}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":3.5651028156280518e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":5.6484375,"distances_sum":842.9537614054932}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.650390625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.650390625,"f1":0.772280844155845,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.28125,"distances_sum":1435.5049461715234}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9422192390942398,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.6640625,"distances_sum":2196.6675078519006}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9411973443223448,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.7265625,"distances_sum":2204.8767252781336}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8464727980352988,"seconds":4.8317015171051025e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.828125,"distances_sum":1673.611514996208}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9422192390942398,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.6640625,"distances_sum":2196.6675078519006}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.942513736263737,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.7421875,"distances_sum":2253.286349092508}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687156593406597,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.859375,"distances_sum":2395.4612727518875}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9737751831501836,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9296875,"distances_sum":2428.94791583861}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9715773809523813,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.8671875,"distances_sum":2411.2390057237862}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9777930402930404,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9375,"distances_sum":2435.807506720712}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9777930402930404,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9375,"distances_sum":2435.807506720712}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9777930402930404,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9375,"distances_sum":2435.807506720712}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.63960862159729e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.7734375,"distances_sum":783.747859992292}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.38628888130188e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.4296875,"distances_sum":457.6600698773117}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4208984375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.63960862159729e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.7734375,"distances_sum":783.747859992292}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6890023171273176,"seconds":4.021450877189636e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.5390625,"distances_sum":1069.0207371454098}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8945944680319688,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.3125,"distances_sum":1870.4636628475291}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.855415417915419,"seconds":4.854053258895874e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.8828125,"distances_sum":1638.4829810160206}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8203125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8203125,"f1":0.8945944680319688,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.3125,"distances_sum":1870.4636628475291}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9462485431235439,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6484375,"distances_sum":2214.0288212580745}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9495592948717954,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2197.7845597668584}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9289065101565107,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.578125,"distances_sum":2072.3027700676384}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9495592948717954,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2197.7845597668584}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9495592948717954,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2197.7845597668584}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.7030235389610394,"seconds":3.902241587638855e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":6.96875,"distances_sum":1121.0237997559404}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8431074134199141,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.8046875,"distances_sum":1592.3601506697291}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8431074134199141,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.8046875,"distances_sum":1592.3601506697291}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9416208791208797,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.859375,"distances_sum":2126.5003927746284}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9416208791208797,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.859375,"distances_sum":2126.5003927746284}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9682692307692317,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8984375,"distances_sum":2297.654176878558}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9682692307692317,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8984375,"distances_sum":2297.654176878558}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9682692307692317,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8984375,"distances_sum":2297.654176878558}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.296875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.296875,"f1":null,"seconds":3.475695848464966e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.6953125,"distances_sum":661.0815202188627}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8475907772782781,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.90625,"distances_sum":1652.8556989220476}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7937916250416258,"seconds":4.693865776062012e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.59375,"distances_sum":1488.0818450296113}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8475907772782781,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.90625,"distances_sum":1652.8556989220476}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8659231393606404,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.9609375,"distances_sum":1730.377469328127}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8659231393606404,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.9609375,"distances_sum":1730.377469328127}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8887539543789553,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.5,"distances_sum":1869.1377834844948}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9364125457875465,"seconds":8.547678589820862e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.71875,"distances_sum":2155.084617321224}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9378834706959714,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7265625,"distances_sum":2140.8651120673426}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8831507034632042,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.5234375,"distances_sum":1827.57680371131}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.937528617216118,"seconds":8.502975106239319e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.6796875,"distances_sum":2170.0737796857875}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9378834706959714,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7265625,"distances_sum":2140.8651120673426}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.892578125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9378834706959714,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7265625,"distances_sum":2140.8651120673426}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.544921875,"f1":0.6893264721389727,"seconds":4.114583134651184e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.0390625,"distances_sum":1049.2939733166902}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7890397796647804,"seconds":4.502013325691223e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.640625,"distances_sum":1427.3405218391247}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.7004752192252198,"seconds":7.1283429861068726e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.0703125,"distances_sum":1085.2505001217523}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6728515625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6728515625,"f1":0.7890397796647804,"seconds":4.502013325691223e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.640625,"distances_sum":1427.3405218391247}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9540235805860812,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2205.490912282227}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8380218739593748,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.9375,"distances_sum":1584.9800283369639}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9540235805860812,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2205.490912282227}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9704842032967037,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.90625,"distances_sum":2315.3736648382564}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9697265625, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9697265625,"f1":0.9836309523809526,"seconds":8.577480912208557e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9609375,"distances_sum":2394.020447269215}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9697265625,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9836309523809526,"seconds":8.577480912208557e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9609375,"distances_sum":2394.020447269215}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9697265625,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9836309523809526,"seconds":8.577480912208557e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9609375,"distances_sum":2394.020447269215}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5126953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5126953125,"f1":0.66284808941059,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.4296875,"distances_sum":1003.4104606385089}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7333984375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7333984375,"f1":0.8357522685647694,"seconds":4.844740033149719e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.7890625,"distances_sum":1483.5624371612712}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7333984375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7333984375,"f1":0.8357522685647694,"seconds":4.844740033149719e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.7890625,"distances_sum":1483.5624371612712}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9491128663003668,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6953125,"distances_sum":2062.722738978889}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8568915459540468,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.953125,"distances_sum":1601.289454802986}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8450955294705303,"seconds":4.6584755182266235e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.875,"distances_sum":1521.5341640265863}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9491128663003668,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6953125,"distances_sum":2062.722738978889}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9695684523809527,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8359375,"distances_sum":2187.224447295587}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9695684523809527,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8359375,"distances_sum":2187.224447295587}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9695684523809527,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8359375,"distances_sum":2187.224447295587}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8567828005328015,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.125,"distances_sum":1659.8422449309148}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8567828005328015,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.125,"distances_sum":1659.8422449309148}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9289580211455217,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6171875,"distances_sum":2062.0311680966925}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8670551670551679,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.234375,"distances_sum":1742.852956634527}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9289580211455217,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6171875,"distances_sum":2062.0311680966925}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9400011446886455,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6953125,"distances_sum":2121.399508674741}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9400011446886455,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6953125,"distances_sum":2121.399508674741}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8955078125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9400011446886455,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6953125,"distances_sum":2121.399508674741}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.6978942932067935,"seconds":4.498288035392761e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.84375,"distances_sum":1172.288137920187}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5576171875,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5576171875,"f1":0.6978942932067935,"seconds":4.498288035392761e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.84375,"distances_sum":1172.288137920187}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9244391025641032,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.3984375,"distances_sum":2128.189547519669}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9244391025641032,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.3984375,"distances_sum":2128.189547519669}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9257955586080595,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.4765625,"distances_sum":2122.4612088907024}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9273580586080592,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.4375,"distances_sum":2147.117830541217}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9625400641025643,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8046875,"distances_sum":2342.706073126783}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9625400641025643,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8046875,"distances_sum":2342.706073126783}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9625400641025643,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8046875,"distances_sum":2342.706073126783}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8538669663669672,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.015625,"distances_sum":1684.4047619206062}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8043602231102239,"seconds":4.55416738986969e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.765625,"distances_sum":1509.6705403754347}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8538669663669672,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.015625,"distances_sum":1684.4047619206062}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9253434065934075,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.703125,"distances_sum":2028.0266753604799}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9495249542124546,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.734375,"distances_sum":2215.1469699601635}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9495249542124546,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.734375,"distances_sum":2215.1469699601635}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9532795329670333,"seconds":6.16908073425293e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.7890625,"distances_sum":2235.0410114036067}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9642742673992677,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.875,"distances_sum":2279.1854556152994}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9642742673992677,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.875,"distances_sum":2279.1854556152994}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9642742673992677,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.875,"distances_sum":2279.1854556152994}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8476939726939736,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.96875,"distances_sum":1649.9547842219704}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5166015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5166015625,"f1":0.6608610139860146,"seconds":4.239380359649658e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.8203125,"distances_sum":1101.1154417889393}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8476939726939736,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.96875,"distances_sum":1649.9547842219704}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9313530219780226,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6796875,"distances_sum":2095.885515603993}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9208479020979027,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.578125,"distances_sum":2049.091948831226}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8887196137196145,"seconds":4.939734935760498e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.46875,"distances_sum":1859.0733708106554}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9313530219780226,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6796875,"distances_sum":2095.885515603993}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9534168956043958,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.703125,"distances_sum":2225.506938503355}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9690476190476194,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8515625,"distances_sum":2290.6345764314606}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9520146520146525,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7265625,"distances_sum":2202.406113003677}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9687900641025644,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.859375,"distances_sum":2287.4644154466737}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.942997627372628,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.65625,"distances_sum":2152.8832919377364}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9621508699633704,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8046875,"distances_sum":2262.5327239367}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9690476190476194,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8515625,"distances_sum":2290.6345764314606}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9690476190476194,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8515625,"distances_sum":2290.6345764314606}}, n: 9
inertia(cfft.distances) = 18.926616563513107
inertia(cdnet.distances) = 23.671722466422473
inertia(crand.distances) = 21.529896422546155
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9177777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9466666666666667
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9355555555555556
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.931111111111111
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9333333333333335
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9400000000000001
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9355555555555556
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9133333333333334
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9266666666666666
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9155555555555557
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9333333333333332
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9133333333333334
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.888888888888889
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8733333333333334
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8755555555555555
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8644444444444445
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9155555555555556
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8533333333333334
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9177777777777778
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 1, 2, 3, 3, 3, 3, 1, 2, 3, 3, 1, 2, 3, 1, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.4400000028095482] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4400000028095482, 0.17525942675525905] ***
*** starting iteration: 2; err: [Inf, 0.4400000028095482, 0.17525942675525905] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4400000028095482, 0.17525942675525905, 0.1681256392756239] ***
*** starting iteration: 3; err: [Inf, 0.4400000028095482, 0.17525942675525905, 0.1681256392756239] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4400000028095482, 0.17525942675525905, 0.1681256392756239, 0.16623308135521941] ***
*** starting iteration: 4; err: [Inf, 0.4400000028095482, 0.17525942675525905, 0.1681256392756239, 0.16623308135521941] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4400000028095482, 0.17525942675525905, 0.1681256392756239, 0.16623308135521941, 0.16563043541887676] ***
*** finished computation of 12 references, err: [Inf, 0.4400000028095482, 0.17525942675525905, 0.1681256392756239, 0.16623308135521941, 0.16563043541887676] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.410400010101754] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.410400010101754, 0.5681577786163514] ***
*** finished computation of 3 references, err: [Inf, 1.410400010101754, 0.5681577786163514] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 11, 35]]
** centroid: 2, normalized-entropy: 0.7935912300117066, [(2, 11), (3, 35)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3875000055053557] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3875000055053557, 0.9693079680397392] ***
*** finished computation of 3 references, err: [Inf, 1.3875000055053557, 0.9693079680397392] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 35]]
** centroid: 1, normalized-entropy: 0.9936507116910402, [(2, 29), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [14, 3, 0]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(1, 14), (2, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6519999920558429] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6519999920558429, 0.5750283551744534] ***
*** finished computation of 3 references, err: [Inf, 0.6519999920558429, 0.5750283551744534] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 27, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 11, 28]]
** centroid: 3, normalized-entropy: 0.8582307926411409, [(2, 11), (3, 28)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 11.249999894912458] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.249999894912458, 1.636320250458754] ***
*** finished computation of 3 references, err: [Inf, 11.249999894912458, 1.636320250458754] ***
*** center 1: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 36]]
** centroid: 2, normalized-entropy: 0.9916178297881032, [(2, 29), (3, 36)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [24, 1, 0]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(1, 24), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8566999959001935] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8566999959001935, 0.9884990870799863] ***
*** finished computation of 3 references, err: [Inf, 1.8566999959001935, 0.9884990870799863] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 35]]
** centroid: 2, normalized-entropy: 0.9957274520849256, [(2, 30), (3, 35)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [16, 2, 0]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(1, 16), (2, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4808000195999205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4808000195999205, 0.6808588779100926] ***
*** finished computation of 3 references, err: [Inf, 1.4808000195999205, 0.6808588779100926] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [33, 2, 0]]
** centroid: 1, normalized-entropy: 0.3159971329784246, [(1, 33), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 36, 8]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4542867008716292] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4542867008716292, 0.3294809412101742] ***
*** starting iteration: 2; err: [Inf, 0.4542867008716292, 0.3294809412101742] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4542867008716292, 0.3294809412101742, 0.3288608776861945] ***
*** finished computation of 3 references, err: [Inf, 0.4542867008716292, 0.3294809412101742, 0.3288608776861945] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 12]]
** centroid: 2, normalized-entropy: 0.8721617883411698, [(2, 29), (3, 12)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4400766696353187] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4400766696353187, 0.6817272634440639] ***
*** starting iteration: 2; err: [Inf, 1.4400766696353187, 0.6817272634440639] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4400766696353187, 0.6817272634440639, 0.6713132805108741] ***
*** starting iteration: 3; err: [Inf, 1.4400766696353187, 0.6817272634440639, 0.6713132805108741] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4400766696353187, 0.6817272634440639, 0.6713132805108741, 0.6604854086755699] ***
*** finished computation of 3 references, err: [Inf, 1.4400766696353187, 0.6817272634440639, 0.6713132805108741, 0.6604854086755699] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 35]]
** centroid: 1, normalized-entropy: 0.9973487979180449, [(2, 31), (3, 35)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [18, 1, 0]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(1, 18), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.3181005453635297] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3181005453635297, 0.6485493570079762] ***
*** starting iteration: 2; err: [Inf, 2.3181005453635297, 0.6485493570079762] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3181005453635297, 0.6485493570079762, 0.39898147309742676] ***
*** starting iteration: 3; err: [Inf, 2.3181005453635297, 0.6485493570079762, 0.39898147309742676] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3181005453635297, 0.6485493570079762, 0.39898147309742676, 0.3790216202561906] ***
*** finished computation of 3 references, err: [Inf, 2.3181005453635297, 0.6485493570079762, 0.39898147309742676, 0.3790216202561906] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 37, 5]]
** centroid: 1, normalized-entropy: 0.5266170655714281, [(2, 37), (3, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2837000063896054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2837000063896054, 0.9051288991177735] ***
*** starting iteration: 2; err: [Inf, 1.2837000063896054, 0.9051288991177735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2837000063896054, 0.9051288991177735, 0.8962968179371151] ***
*** starting iteration: 3; err: [Inf, 1.2837000063896054, 0.9051288991177735, 0.8962968179371151] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2837000063896054, 0.9051288991177735, 0.8962968179371151, 0.8903582853176402] ***
*** starting iteration: 4; err: [Inf, 1.2837000063896054, 0.9051288991177735, 0.8962968179371151, 0.8903582853176402] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2837000063896054, 0.9051288991177735, 0.8962968179371151, 0.8903582853176402, 0.8868841666901313] ***
*** starting iteration: 5; err: [Inf, 1.2837000063896054, 0.9051288991177735, 0.8962968179371151, 0.8903582853176402, 0.8868841666901313] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2837000063896054, 0.9051288991177735, 0.8962968179371151, 0.8903582853176402, 0.8868841666901313, 0.886125387808629] ***
*** finished computation of 3 references, err: [Inf, 1.2837000063896054, 0.9051288991177735, 0.8962968179371151, 0.8903582853176402, 0.8868841666901313, 0.886125387808629] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 36]]
** centroid: 2, normalized-entropy: 0.9916178297881032, [(2, 29), (3, 36)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [3, 1, 0]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(1, 3), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.418300024598408] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.418300024598408, 1.0044136197202604] ***
*** starting iteration: 2; err: [Inf, 4.418300024598408, 1.0044136197202604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.418300024598408, 1.0044136197202604, 0.9904464151640451] ***
*** starting iteration: 3; err: [Inf, 4.418300024598408, 1.0044136197202604, 0.9904464151640451] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.418300024598408, 1.0044136197202604, 0.9904464151640451, 0.9866394925060699] ***
*** starting iteration: 4; err: [Inf, 4.418300024598408, 1.0044136197202604, 0.9904464151640451, 0.9866394925060699] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.418300024598408, 1.0044136197202604, 0.9904464151640451, 0.9866394925060699, 0.9866394925060699] ***
*** finished computation of 3 references, err: [Inf, 4.418300024598408, 1.0044136197202604, 0.9904464151640451, 0.9866394925060699, 0.9866394925060699] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [18, 2, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 18), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 35]]
** centroid: 3, normalized-entropy: 0.9957274520849256, [(2, 30), (3, 35)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.313100001066046] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.313100001066046, 1.9412609439522357] ***
*** starting iteration: 2; err: [Inf, 4.313100001066046, 1.9412609439522357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162] ***
*** starting iteration: 3; err: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162, 0.7258737932596024] ***
*** starting iteration: 4; err: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162, 0.7258737932596024] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162, 0.7258737932596024, 0.6107475638481606] ***
*** starting iteration: 5; err: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162, 0.7258737932596024, 0.6107475638481606] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162, 0.7258737932596024, 0.6107475638481606, 0.5484566322791133] ***
*** starting iteration: 6; err: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162, 0.7258737932596024, 0.6107475638481606, 0.5484566322791133] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162, 0.7258737932596024, 0.6107475638481606, 0.5484566322791133, 0.5377137238619565] ***
*** starting iteration: 7; err: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162, 0.7258737932596024, 0.6107475638481606, 0.5484566322791133, 0.5377137238619565] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162, 0.7258737932596024, 0.6107475638481606, 0.5484566322791133, 0.5377137238619565, 0.5347084510790281] ***
*** starting iteration: 8; err: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162, 0.7258737932596024, 0.6107475638481606, 0.5484566322791133, 0.5377137238619565, 0.5347084510790281] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162, 0.7258737932596024, 0.6107475638481606, 0.5484566322791133, 0.5377137238619565, 0.5347084510790281, 0.5337013468185482] ***
*** starting iteration: 9; err: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162, 0.7258737932596024, 0.6107475638481606, 0.5484566322791133, 0.5377137238619565, 0.5347084510790281, 0.5337013468185482] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162, 0.7258737932596024, 0.6107475638481606, 0.5484566322791133, 0.5377137238619565, 0.5347084510790281, 0.5337013468185482, 0.5337013468185482] ***
*** finished computation of 3 references, err: [Inf, 4.313100001066046, 1.9412609439522357, 1.1667075697747162, 0.7258737932596024, 0.6107475638481606, 0.5484566322791133, 0.5377137238619565, 0.5347084510790281, 0.5337013468185482, 0.5337013468185482] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 36, 5]]
** centroid: 3, normalized-entropy: 0.5349436990971067, [(2, 36), (3, 5)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.51579197617838] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.51579197617838, 0.40202473621841905] ***
*** finished computation of 3 references, err: [Inf, 2.51579197617838, 0.40202473621841905] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 35]]
** centroid: 1, normalized-entropy: 0.7935912300117066, [(2, 11), (3, 35)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9591243183952213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9591243183952213, 0.6756761635934646] ***
*** finished computation of 3 references, err: [Inf, 0.9591243183952213, 0.6756761635934646] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [26, 2, 0]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(1, 26), (2, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 35]]
** centroid: 3, normalized-entropy: 0.9957274520849256, [(2, 30), (3, 35)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7710955144447315] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7710955144447315, 0.433406766143993] ***
*** finished computation of 3 references, err: [Inf, 0.7710955144447315, 0.433406766143993] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 37, 9]]
** centroid: 1, normalized-entropy: 0.7131467486384921, [(2, 37), (3, 9)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [33, 1, 0]]
** centroid: 3, normalized-entropy: 0.1914332548141934, [(1, 33), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.46950000482565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46950000482565, 0.289582777167218] ***
*** starting iteration: 2; err: [Inf, 0.46950000482565, 0.289582777167218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46950000482565, 0.289582777167218, 0.2800709861490351] ***
*** starting iteration: 3; err: [Inf, 0.46950000482565, 0.289582777167218, 0.2800709861490351] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46950000482565, 0.289582777167218, 0.2800709861490351, 0.27852203959976873] ***
*** finished computation of 7 references, err: [Inf, 0.46950000482565, 0.289582777167218, 0.2800709861490351, 0.27852203959976873] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 13]]
** centroid: 2, normalized-entropy: 0.9949848281859699, [(2, 11), (3, 13)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 6: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6158999946097165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6158999946097165, 0.44316133838575966] ***
*** starting iteration: 2; err: [Inf, 0.6158999946097165, 0.44316133838575966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6158999946097165, 0.44316133838575966, 0.3608528155485239] ***
*** starting iteration: 3; err: [Inf, 0.6158999946097165, 0.44316133838575966, 0.3608528155485239] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6158999946097165, 0.44316133838575966, 0.3608528155485239, 0.3453774765246409] ***
*** finished computation of 7 references, err: [Inf, 0.6158999946097165, 0.44316133838575966, 0.3608528155485239, 0.3453774765246409] ***
*** center 1: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 17, 14]]
** centroid: 7, normalized-entropy: 0.9932338197397066, [(2, 17), (3, 14)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5803999998501843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5803999998501843, 0.27672218836406937] ***
*** starting iteration: 2; err: [Inf, 0.5803999998501843, 0.27672218836406937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5803999998501843, 0.27672218836406937, 0.26353014829031746] ***
*** starting iteration: 3; err: [Inf, 0.5803999998501843, 0.27672218836406937, 0.26353014829031746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5803999998501843, 0.27672218836406937, 0.26353014829031746, 0.25093367185978777] ***
*** finished computation of 7 references, err: [Inf, 0.5803999998501843, 0.27672218836406937, 0.26353014829031746, 0.25093367185978777] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 3]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 18), (3, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 4: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41366855799569363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41366855799569363, 0.23295562568790826] ***
*** finished computation of 7 references, err: [Inf, 0.41366855799569363, 0.23295562568790826] ***
*** center 1: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 4]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 27]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3395266910632603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3395266910632603, 0.1822539708199728] ***
*** finished computation of 7 references, err: [Inf, 0.3395266910632603, 0.1822539708199728] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 16]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 5), (3, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 11]]
** centroid: 6, normalized-entropy: 0.9949848281859699, [(2, 13), (3, 11)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37864406245269655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37864406245269655, 0.24274418001014617] ***
*** finished computation of 7 references, err: [Inf, 0.37864406245269655, 0.24274418001014617] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 4]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 6), (3, 4)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [4, 1, 0]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(1, 4), (2, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 7, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25649839786395623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25649839786395623, 0.1909834107425084] ***
*** finished computation of 7 references, err: [Inf, 0.25649839786395623, 0.1909834107425084] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 9]]
** centroid: 5, normalized-entropy: 0.8904916402194913, [(2, 4), (3, 9)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 6, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4811221205494152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4811221205494152, 0.2678012919156418] ***
*** finished computation of 7 references, err: [Inf, 0.4811221205494152, 0.2678012919156418] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 5, 12]]
** centroid: 4, normalized-entropy: 0.8739810481273581, [(2, 5), (3, 12)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31884129885170576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31884129885170576, 0.23214582953730706] ***
*** finished computation of 7 references, err: [Inf, 0.31884129885170576, 0.23214582953730706] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 2]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 5, 3]]
** centroid: 6, normalized-entropy: 0.954434002924965, [(2, 5), (3, 3)]
*** center 7: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6729732829780544] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6729732829780544, 0.3651835633279791] ***
*** starting iteration: 2; err: [Inf, 0.6729732829780544, 0.3651835633279791] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6729732829780544, 0.3651835633279791, 0.3544714672127427] ***
*** starting iteration: 3; err: [Inf, 0.6729732829780544, 0.3651835633279791, 0.3544714672127427] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6729732829780544, 0.3651835633279791, 0.3544714672127427, 0.35276332830260104] ***
*** finished computation of 3 references, err: [Inf, 0.6729732829780544, 0.3651835633279791, 0.3544714672127427, 0.35276332830260104] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 34]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(2, 6), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 2]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 24), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0822602850055554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0822602850055554, 0.4044253977496812] ***
*** starting iteration: 2; err: [Inf, 1.0822602850055554, 0.4044253977496812] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0822602850055554, 0.4044253977496812, 0.3942115644941826] ***
*** starting iteration: 3; err: [Inf, 1.0822602850055554, 0.4044253977496812, 0.3942115644941826] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0822602850055554, 0.4044253977496812, 0.3942115644941826, 0.3936454798527103] ***
*** finished computation of 3 references, err: [Inf, 1.0822602850055554, 0.4044253977496812, 0.3942115644941826, 0.3936454798527103] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 1, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7974618114981921] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7974618114981921, 0.47006787260381494] ***
*** starting iteration: 2; err: [Inf, 0.7974618114981921, 0.47006787260381494] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7974618114981921, 0.47006787260381494, 0.4201624663374785] ***
*** starting iteration: 3; err: [Inf, 0.7974618114981921, 0.47006787260381494, 0.4201624663374785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7974618114981921, 0.47006787260381494, 0.4201624663374785, 0.3877332748900482] ***
*** finished computation of 3 references, err: [Inf, 0.7974618114981921, 0.47006787260381494, 0.4201624663374785, 0.3877332748900482] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 5]]
** centroid: 1, normalized-entropy: 0.5185697317883058, [(2, 38), (3, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0889679962946497] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0889679962946497, 0.3388311590455443] ***
*** starting iteration: 2; err: [Inf, 1.0889679962946497, 0.3388311590455443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0889679962946497, 0.3388311590455443, 0.3302733245109971] ***
*** starting iteration: 3; err: [Inf, 1.0889679962946497, 0.3388311590455443, 0.3302733245109971] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0889679962946497, 0.3388311590455443, 0.3302733245109971, 0.3288608776861945] ***
*** finished computation of 3 references, err: [Inf, 1.0889679962946497, 0.3388311590455443, 0.3302733245109971, 0.3288608776861945] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 12]]
** centroid: 3, normalized-entropy: 0.8721617883411698, [(2, 29), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9495406852699453] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9495406852699453, 0.41113284235455994] ***
*** starting iteration: 2; err: [Inf, 0.9495406852699453, 0.41113284235455994] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9495406852699453, 0.41113284235455994, 0.398309538543445] ***
*** starting iteration: 3; err: [Inf, 0.9495406852699453, 0.41113284235455994, 0.398309538543445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9495406852699453, 0.41113284235455994, 0.398309538543445, 0.3947329432491334] ***
*** finished computation of 3 references, err: [Inf, 0.9495406852699453, 0.41113284235455994, 0.398309538543445, 0.3947329432491334] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 12]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 32), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1057369267070205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1057369267070205, 0.3892769458713073] ***
*** starting iteration: 2; err: [Inf, 1.1057369267070205, 0.3892769458713073] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1057369267070205, 0.3892769458713073, 0.37586926716001673] ***
*** starting iteration: 3; err: [Inf, 1.1057369267070205, 0.3892769458713073, 0.37586926716001673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1057369267070205, 0.3892769458713073, 0.37586926716001673, 0.3750773722576237] ***
*** finished computation of 3 references, err: [Inf, 1.1057369267070205, 0.3892769458713073, 0.37586926716001673, 0.3750773722576237] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 24]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 5]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 35), (3, 5)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0933452653377727] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0933452653377727, 0.3388311590455443] ***
*** starting iteration: 2; err: [Inf, 1.0933452653377727, 0.3388311590455443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0933452653377727, 0.3388311590455443, 0.3302733245109971] ***
*** starting iteration: 3; err: [Inf, 1.0933452653377727, 0.3388311590455443, 0.3302733245109971] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0933452653377727, 0.3388311590455443, 0.3302733245109971, 0.3288608776861945] ***
*** starting iteration: 4; err: [Inf, 1.0933452653377727, 0.3388311590455443, 0.3302733245109971, 0.3288608776861945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0933452653377727, 0.3388311590455443, 0.3302733245109971, 0.3288608776861945, 0.3285017602660889] ***
*** finished computation of 3 references, err: [Inf, 1.0933452653377727, 0.3388311590455443, 0.3302733245109971, 0.3288608776861945, 0.3285017602660889] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 12]]
** centroid: 3, normalized-entropy: 0.8721617883411698, [(2, 29), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7352986441663085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7352986441663085, 0.4354803963462506] ***
*** starting iteration: 2; err: [Inf, 0.7352986441663085, 0.4354803963462506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7352986441663085, 0.4354803963462506, 0.42292950122129924] ***
*** starting iteration: 3; err: [Inf, 0.7352986441663085, 0.4354803963462506, 0.42292950122129924] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7352986441663085, 0.4354803963462506, 0.42292950122129924, 0.41346087604224663] ***
*** starting iteration: 4; err: [Inf, 0.7352986441663085, 0.4354803963462506, 0.42292950122129924, 0.41346087604224663] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7352986441663085, 0.4354803963462506, 0.42292950122129924, 0.41346087604224663, 0.40696606114675743] ***
*** starting iteration: 5; err: [Inf, 0.7352986441663085, 0.4354803963462506, 0.42292950122129924, 0.41346087604224663, 0.40696606114675743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7352986441663085, 0.4354803963462506, 0.42292950122129924, 0.41346087604224663, 0.40696606114675743, 0.398309538543445] ***
*** starting iteration: 6; err: [Inf, 0.7352986441663085, 0.4354803963462506, 0.42292950122129924, 0.41346087604224663, 0.40696606114675743, 0.398309538543445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7352986441663085, 0.4354803963462506, 0.42292950122129924, 0.41346087604224663, 0.40696606114675743, 0.398309538543445, 0.3947329432491334] ***
*** starting iteration: 7; err: [Inf, 0.7352986441663085, 0.4354803963462506, 0.42292950122129924, 0.41346087604224663, 0.40696606114675743, 0.398309538543445, 0.3947329432491334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7352986441663085, 0.4354803963462506, 0.42292950122129924, 0.41346087604224663, 0.40696606114675743, 0.398309538543445, 0.3947329432491334, 0.3936454798527103] ***
*** starting iteration: 8; err: [Inf, 0.7352986441663085, 0.4354803963462506, 0.42292950122129924, 0.41346087604224663, 0.40696606114675743, 0.398309538543445, 0.3947329432491334, 0.3936454798527103] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7352986441663085, 0.4354803963462506, 0.42292950122129924, 0.41346087604224663, 0.40696606114675743, 0.398309538543445, 0.3947329432491334, 0.3936454798527103, 0.39304643668944633] ***
*** finished computation of 3 references, err: [Inf, 0.7352986441663085, 0.4354803963462506, 0.42292950122129924, 0.41346087604224663, 0.40696606114675743, 0.398309538543445, 0.3947329432491334, 0.3936454798527103, 0.39304643668944633] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 11]]
** centroid: 1, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9285445552544312] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9285445552544312, 0.41373194500859756] ***
*** starting iteration: 2; err: [Inf, 0.9285445552544312, 0.41373194500859756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9285445552544312, 0.41373194500859756, 0.3950255283100735] ***
*** starting iteration: 3; err: [Inf, 0.9285445552544312, 0.41373194500859756, 0.3950255283100735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9285445552544312, 0.41373194500859756, 0.3950255283100735, 0.39062061777984824] ***
*** starting iteration: 4; err: [Inf, 0.9285445552544312, 0.41373194500859756, 0.3950255283100735, 0.39062061777984824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9285445552544312, 0.41373194500859756, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736] ***
*** starting iteration: 5; err: [Inf, 0.9285445552544312, 0.41373194500859756, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9285445552544312, 0.41373194500859756, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736, 0.37689680642661627] ***
*** starting iteration: 6; err: [Inf, 0.9285445552544312, 0.41373194500859756, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736, 0.37689680642661627] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9285445552544312, 0.41373194500859756, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736, 0.37689680642661627, 0.37420049501909175] ***
*** starting iteration: 7; err: [Inf, 0.9285445552544312, 0.41373194500859756, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736, 0.37689680642661627, 0.37420049501909175] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9285445552544312, 0.41373194500859756, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736, 0.37689680642661627, 0.37420049501909175, 0.3740397737664614] ***
*** finished computation of 3 references, err: [Inf, 0.9285445552544312, 0.41373194500859756, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736, 0.37689680642661627, 0.37420049501909175, 0.3740397737664614] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 24]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 4), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 5]]
** centroid: 3, normalized-entropy: 0.552495114325111, [(2, 34), (3, 5)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7977538305244088] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7977538305244088, 0.3303057859702271] ***
*** starting iteration: 2; err: [Inf, 0.7977538305244088, 0.3303057859702271] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7977538305244088, 0.3303057859702271, 0.3293936716925562] ***
*** finished computation of 3 references, err: [Inf, 0.7977538305244088, 0.3303057859702271, 0.3293936716925562] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 11]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6858145963905787] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6858145963905787, 0.41695999976326475] ***
*** starting iteration: 2; err: [Inf, 0.6858145963905787, 0.41695999976326475] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6858145963905787, 0.41695999976326475, 0.404556048078579] ***
*** starting iteration: 3; err: [Inf, 0.6858145963905787, 0.41695999976326475, 0.404556048078579] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6858145963905787, 0.41695999976326475, 0.404556048078579, 0.3998999640216703] ***
*** starting iteration: 4; err: [Inf, 0.6858145963905787, 0.41695999976326475, 0.404556048078579, 0.3998999640216703] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6858145963905787, 0.41695999976326475, 0.404556048078579, 0.3998999640216703, 0.3994702131121858] ***
*** finished computation of 3 references, err: [Inf, 0.6858145963905787, 0.41695999976326475, 0.404556048078579, 0.3998999640216703, 0.3994702131121858] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 34]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(2, 6), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 26, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8559872892801418] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8559872892801418, 0.3950255283100735] ***
*** starting iteration: 2; err: [Inf, 0.8559872892801418, 0.3950255283100735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8559872892801418, 0.3950255283100735, 0.39062061777984824] ***
*** starting iteration: 3; err: [Inf, 0.8559872892801418, 0.3950255283100735, 0.39062061777984824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8559872892801418, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736] ***
*** starting iteration: 4; err: [Inf, 0.8559872892801418, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8559872892801418, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736, 0.37689680642661627] ***
*** starting iteration: 5; err: [Inf, 0.8559872892801418, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736, 0.37689680642661627] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8559872892801418, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736, 0.37689680642661627, 0.37420049501909175] ***
*** starting iteration: 6; err: [Inf, 0.8559872892801418, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736, 0.37689680642661627, 0.37420049501909175] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8559872892801418, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736, 0.37689680642661627, 0.37420049501909175, 0.3740397737664614] ***
*** finished computation of 3 references, err: [Inf, 0.8559872892801418, 0.3950255283100735, 0.39062061777984824, 0.38405260398206736, 0.37689680642661627, 0.37420049501909175, 0.3740397737664614] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 24]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 4), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 5]]
** centroid: 3, normalized-entropy: 0.552495114325111, [(2, 34), (3, 5)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6245743647973636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6245743647973636, 0.3698237831000085] ***
*** starting iteration: 2; err: [Inf, 0.6245743647973636, 0.3698237831000085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6245743647973636, 0.3698237831000085, 0.35557337936068295] ***
*** starting iteration: 3; err: [Inf, 0.6245743647973636, 0.3698237831000085, 0.35557337936068295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6245743647973636, 0.3698237831000085, 0.35557337936068295, 0.35260977823928613] ***
*** finished computation of 3 references, err: [Inf, 0.6245743647973636, 0.3698237831000085, 0.35557337936068295, 0.35260977823928613] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 34]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(2, 6), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 24, 2]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 24), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8382361903027982] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8382361903027982, 0.4169870532980538] ***
*** starting iteration: 2; err: [Inf, 0.8382361903027982, 0.4169870532980538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8382361903027982, 0.4169870532980538, 0.40696606114675743] ***
*** starting iteration: 3; err: [Inf, 0.8382361903027982, 0.4169870532980538, 0.40696606114675743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8382361903027982, 0.4169870532980538, 0.40696606114675743, 0.398309538543445] ***
*** finished computation of 3 references, err: [Inf, 0.8382361903027982, 0.4169870532980538, 0.40696606114675743, 0.398309538543445] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 12]]
** centroid: 1, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9509244074997631] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9509244074997631, 0.3960020467359624] ***
*** starting iteration: 2; err: [Inf, 0.9509244074997631, 0.3960020467359624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9509244074997631, 0.3960020467359624, 0.37753699753852415] ***
*** starting iteration: 3; err: [Inf, 0.9509244074997631, 0.3960020467359624, 0.37753699753852415] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9509244074997631, 0.3960020467359624, 0.37753699753852415, 0.37586926716001673] ***
*** finished computation of 3 references, err: [Inf, 0.9509244074997631, 0.3960020467359624, 0.37753699753852415, 0.37586926716001673] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 5]]
** centroid: 1, normalized-entropy: 0.5349436990971067, [(2, 36), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8900000077897299] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8900000077897299, 0.6199402216742561] ***
*** finished computation of 3 references, err: [Inf, 0.8900000077897299, 0.6199402216742561] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 20]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 30), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0210000046609413] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0210000046609413, 0.6250390894035806] ***
*** finished computation of 3 references, err: [Inf, 1.0210000046609413, 0.6250390894035806] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 20]]
** centroid: 1, normalized-entropy: 0.9661773513883509, [(2, 31), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 1, 0]]
** centroid: 2, normalized-entropy: 0.1914332548141934, [(1, 33), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3710999921790412] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3710999921790412, 0.6492074403473219] ***
*** finished computation of 3 references, err: [Inf, 1.3710999921790412, 0.6492074403473219] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 11]]
** centroid: 1, normalized-entropy: 0.7682814090975241, [(2, 38), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4679763705239135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4679763705239135, 0.241624831061292] ***
*** finished computation of 7 references, err: [Inf, 0.4679763705239135, 0.241624831061292] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 24]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 9), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 12, 4]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 12), (3, 4)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4158472962294195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4158472962294195, 0.1943842937947769] ***
*** finished computation of 7 references, err: [Inf, 0.4158472962294195, 0.1943842937947769] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 21, 10]]
** centroid: 1, normalized-entropy: 0.9071657675730821, [(2, 21), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4513597278125282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4513597278125282, 0.18626662144644038] ***
*** finished computation of 7 references, err: [Inf, 0.4513597278125282, 0.18626662144644038] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 5, 18]]
** centroid: 5, normalized-entropy: 0.7553754125614286, [(2, 5), (3, 18)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 5, 2]]
** centroid: 7, normalized-entropy: 0.8631205685666311, [(2, 5), (3, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39207151249704586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39207151249704586, 0.19200615687916966] ***
*** starting iteration: 2; err: [Inf, 0.39207151249704586, 0.19200615687916966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39207151249704586, 0.19200615687916966, 0.18740205165521628] ***
*** starting iteration: 3; err: [Inf, 0.39207151249704586, 0.19200615687916966, 0.18740205165521628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39207151249704586, 0.19200615687916966, 0.18740205165521628, 0.18631200506327653] ***
*** finished computation of 7 references, err: [Inf, 0.39207151249704586, 0.19200615687916966, 0.18740205165521628, 0.18631200506327653] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 2]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 7), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 9]]
** centroid: 4, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4000478189628158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4000478189628158, 0.19003463554335182] ***
*** starting iteration: 2; err: [Inf, 0.4000478189628158, 0.19003463554335182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4000478189628158, 0.19003463554335182, 0.17734568470490852] ***
*** starting iteration: 3; err: [Inf, 0.4000478189628158, 0.19003463554335182, 0.17734568470490852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4000478189628158, 0.19003463554335182, 0.17734568470490852, 0.17704854012632487] ***
*** finished computation of 7 references, err: [Inf, 0.4000478189628158, 0.19003463554335182, 0.17734568470490852, 0.17704854012632487] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 7]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3802353909132961] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3802353909132961, 0.165279792948039] ***
*** starting iteration: 2; err: [Inf, 0.3802353909132961, 0.165279792948039] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3802353909132961, 0.165279792948039, 0.15974283046904694] ***
*** starting iteration: 3; err: [Inf, 0.3802353909132961, 0.165279792948039, 0.15974283046904694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3802353909132961, 0.165279792948039, 0.15974283046904694, 0.1589961543750073] ***
*** finished computation of 7 references, err: [Inf, 0.3802353909132961, 0.165279792948039, 0.15974283046904694, 0.1589961543750073] ***
*** center 1: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 4]]
** centroid: 4, normalized-entropy: 0.6840384356390419, [(2, 18), (3, 4)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.92, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9666666666666667
finished with 18
iteration 2 finished
*** starting iteration: 1; err: [Inf, 1.3232703409709325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.3232703409709325, 0.569506526095262] ***
*** starting iteration: 2; err: [Inf, 1.3232703409709325, 0.569506526095262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.3232703409709325, 0.569506526095262, 0.5579046348555731] ***
*** starting iteration: 3; err: [Inf, 1.3232703409709325, 0.569506526095262, 0.5579046348555731] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.3232703409709325, 0.569506526095262, 0.5579046348555731, 0.4299179249262541] ***
*** finished computation of 7 references, err: [Inf, 1.3232703409709325, 0.569506526095262, 0.5579046348555731, 0.4299179249262541] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 35]]
** centroid: 1, normalized-entropy: 0.9117517586347538, [(2, 17), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6280232011100711] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280232011100711, 0.3201531789514013] ***
*** starting iteration: 2; err: [Inf, 0.6280232011100711, 0.3201531789514013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280232011100711, 0.3201531789514013, 0.2869648537205277] ***
*** starting iteration: 3; err: [Inf, 0.6280232011100711, 0.3201531789514013, 0.2869648537205277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280232011100711, 0.3201531789514013, 0.2869648537205277, 0.26892431627504465] ***
*** finished computation of 7 references, err: [Inf, 0.6280232011100711, 0.3201531789514013, 0.2869648537205277, 0.26892431627504465] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 24]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 21, 11]]
** centroid: 4, normalized-entropy: 0.9283620723948678, [(2, 21), (3, 11)]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.504962977332099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.504962977332099, 0.21463359081844377] ***
*** starting iteration: 2; err: [Inf, 0.504962977332099, 0.21463359081844377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.504962977332099, 0.21463359081844377, 0.19633463501447476] ***
*** starting iteration: 3; err: [Inf, 0.504962977332099, 0.21463359081844377, 0.19633463501447476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.504962977332099, 0.21463359081844377, 0.19633463501447476, 0.19399753498342767] ***
*** finished computation of 7 references, err: [Inf, 0.504962977332099, 0.21463359081844377, 0.19633463501447476, 0.19399753498342767] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 18, 2]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 18), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 13, 17]]
** centroid: 3, normalized-entropy: 0.9871377743721862, [(2, 13), (3, 17)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.020399997832228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.020399997832228, 0.4566401247713696] ***
*** starting iteration: 2; err: [Inf, 1.020399997832228, 0.4566401247713696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.020399997832228, 0.4566401247713696, 0.4488963489599206] ***
*** starting iteration: 3; err: [Inf, 1.020399997832228, 0.4566401247713696, 0.4488963489599206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.020399997832228, 0.4566401247713696, 0.4488963489599206, 0.4377329747377587] ***
*** finished computation of 7 references, err: [Inf, 1.020399997832228, 0.4566401247713696, 0.4488963489599206, 0.4377329747377587] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 25, 3]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 25), (3, 3)]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 5, 33]]
** centroid: 6, normalized-entropy: 0.5617526078313283, [(2, 5), (3, 33)]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0168999944872852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0168999944872852, 0.505226918935233] ***
*** starting iteration: 2; err: [Inf, 1.0168999944872852, 0.505226918935233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0168999944872852, 0.505226918935233, 0.454257509814737] ***
*** starting iteration: 3; err: [Inf, 1.0168999944872852, 0.505226918935233, 0.454257509814737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0168999944872852, 0.505226918935233, 0.454257509814737, 0.4208239188786837] ***
*** finished computation of 7 references, err: [Inf, 1.0168999944872852, 0.505226918935233, 0.454257509814737, 0.4208239188786837] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 20, 9]]
** centroid: 2, normalized-entropy: 0.8935711016541908, [(2, 20), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 26]]
** centroid: 3, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1402000211254129] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1402000211254129, 0.5548154171487113] ***
*** starting iteration: 2; err: [Inf, 1.1402000211254129, 0.5548154171487113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1402000211254129, 0.5548154171487113, 0.45526263069260103] ***
*** starting iteration: 3; err: [Inf, 1.1402000211254129, 0.5548154171487113, 0.45526263069260103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1402000211254129, 0.5548154171487113, 0.45526263069260103, 0.40153312365499005] ***
*** finished computation of 7 references, err: [Inf, 1.1402000211254129, 0.5548154171487113, 0.45526263069260103, 0.40153312365499005] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 6, 4]]
** centroid: 2, normalized-entropy: 0.9709505944546688, [(2, 6), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 25]]
** centroid: 3, normalized-entropy: 0.708835673332196, [(2, 6), (3, 25)]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.92, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9666666666666667
finished with 19
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.5601999974757093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5601999974757093, 0.3318297948200613] ***
*** finished computation of 7 references, err: [Inf, 0.5601999974757093, 0.3318297948200613] ***
*** center 1: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 4, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 10]]
** centroid: 6, normalized-entropy: 0.9980008838722993, [(2, 9), (3, 10)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6159000074334996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6159000074334996, 0.33245514767116596] ***
*** finished computation of 7 references, err: [Inf, 0.6159000074334996, 0.33245514767116596] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 9]]
** centroid: 1, normalized-entropy: 0.9886994082884974, [(2, 7), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44379999896352645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44379999896352645, 0.2799131898209557] ***
*** finished computation of 7 references, err: [Inf, 0.44379999896352645, 0.2799131898209557] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 11]]
** centroid: 5, normalized-entropy: 0.9828586897127057, [(2, 15), (3, 11)]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.92, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9666666666666667
finished with 20
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.5567000013244275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5567000013244275, 0.24477518456619918] ***
*** starting iteration: 2; err: [Inf, 0.5567000013244275, 0.24477518456619918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5567000013244275, 0.24477518456619918, 0.23059826523877952] ***
*** starting iteration: 3; err: [Inf, 0.5567000013244275, 0.24477518456619918, 0.23059826523877952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5567000013244275, 0.24477518456619918, 0.23059826523877952, 0.22590922949615241] ***
*** finished computation of 7 references, err: [Inf, 0.5567000013244275, 0.24477518456619918, 0.23059826523877952, 0.22590922949615241] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 5]]
** centroid: 4, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5836000022190863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5836000022190863, 0.26122940099312286] ***
*** starting iteration: 2; err: [Inf, 0.5836000022190863, 0.26122940099312286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5836000022190863, 0.26122940099312286, 0.2522722402610672] ***
*** starting iteration: 3; err: [Inf, 0.5836000022190863, 0.26122940099312286, 0.2522722402610672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5836000022190863, 0.26122940099312286, 0.2522722402610672, 0.2491052847276416] ***
*** finished computation of 7 references, err: [Inf, 0.5836000022190863, 0.26122940099312286, 0.2522722402610672, 0.2491052847276416] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 22]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 1), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 7, 3]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(2, 7), (3, 3)]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3975000010831359] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3975000010831359, 0.25965803746713767] ***
*** starting iteration: 2; err: [Inf, 0.3975000010831359, 0.25965803746713767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3975000010831359, 0.25965803746713767, 0.25218112855844016] ***
*** starting iteration: 3; err: [Inf, 0.3975000010831359, 0.25965803746713767, 0.25218112855844016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3975000010831359, 0.25965803746713767, 0.25218112855844016, 0.24764009199022155] ***
*** finished computation of 7 references, err: [Inf, 0.3975000010831359, 0.25965803746713767, 0.25218112855844016, 0.24764009199022155] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 19, 4]]
** centroid: 6, normalized-entropy: 0.6665783579949205, [(2, 19), (3, 4)]
*** center 7: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.92, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9666666666666667
finished with 20
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.92, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9666666666666667
finished with 20
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.92, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9666666666666667
finished with 20
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.92, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9666666666666667
finished with 20
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.92, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9666666666666667
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1), 0.9666666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.857142857142857, 2.9285714285714284, 4.257142857142857, 1.3428571428571427], [6.390909090909091, 2.9181818181818175, 4.6818181818181825, 1.5], [6.053846153846154, 2.7923076923076926, 5.007692307692308, 1.876923076923077], [5.366666666666667, 2.466666666666667, 3.5, 1.0], [4.73125, 3.1250000000000004, 1.4125, 0.18125000000000005], [6.845454545454547, 3.0954545454545452, 5.822727272727272, 2.14090909090909], [5.199999999999999, 3.6222222222222222, 1.5, 0.2833333333333334], [5.6375, 2.55, 3.9875, 1.1875], [4.9, 2.5, 4.5, 1.7]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 2, 3, 2, 1, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.0636363636363635, 3.6272727272727265, 1.5545454545454547, 0.2636363636363636], [5.425000000000001, 3.625, 1.4, 0.3], [6.913043478260871, 3.1217391304347823, 5.821739130434783, 2.0956521739130434], [4.706666666666667, 3.126666666666667, 1.3866666666666667, 0.19333333333333338], [5.6000000000000005, 4.033333333333334, 1.6333333333333335, 0.3666666666666667], [5.533333333333333, 2.5799999999999996, 3.8600000000000003, 1.1800000000000002], [6.270588235294119, 2.988235294117647, 4.635294117647058, 1.4705882352941178], [6.085714285714286, 2.7285714285714286, 5.078571428571428, 1.8285714285714287]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 1, 3, 1, 1, 2, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.166666666666667, 2.883333333333333, 4.566666666666666, 1.4500000000000002], [5.8, 2.8333333333333335, 4.933333333333333, 1.9000000000000001], [5.653846153846154, 2.661538461538462, 3.9615384615384617, 1.2076923076923076], [4.9, 2.5, 4.5, 1.7], [6.8999999999999995, 3.0333333333333337, 4.8, 1.4333333333333333], [6.5200000000000005, 2.913333333333333, 5.4399999999999995, 2.046666666666667], [5.3052631578947365, 3.6789473684210527, 1.4999999999999998, 0.2894736842105264], [5.0, 2.3, 3.2750000000000004, 1.025], [7.32, 3.1700000000000004, 6.2, 2.14], [4.692857142857143, 3.0928571428571425, 1.4214285714285715, 0.2]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 3, 2, 3, 1, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[54, 23, 5, 24, 18, 17, 2, 35, 22, 12, 13, 10, 24, 19, 43, 29, 3, 8, 15, 27, 27, 17, 37, 30, 28, 27, 21, 30, 45, 29, 1, 45, 27, 24, 9, 24, 23, 20, 23, 25, 52, 2, 47, 37, 38, 11, 15, 24, 42, 27, 38, 30, 34, 33, 10, 37, 33, 28, 24, 31, 60, 28, 37, 29, 15, 42, 38, 30, 13, 39, 44, 55, 44, 44, 21, 35, 37, 55, 38, 30, 25, 27, 31, 29, 1, 33, 34, 17, 27, 24, 28, 27, 24, 60, 20, 24, 37, 23, 42, 28, 21, 41, 34, 21, 43, 38, 28, 39, 35, 42, 14, 65, 29, 49, 48, 19, 39, 30, 43, 42, 54, 26, 46, 43, 17, 14, 25, 30, 26, 44, 31, 33, 34, 34, 32, 49, 40, 31, 26, 36, 56, 34, 36, 39, 42, 34, 45, 21, 35, 29, 48, 9, 32, 29, 30, 30, 22, 30, 45, 39, 36, 49, 24, 40, 36, 25, 13, 28, 1, 57, 17, 31, 22, 53, 36, 37, 28, 36, 41, 58, 48, 44, 56, 28, 41, 23, 30, 34, 19, 33, 51, 37, 44, 45, 49, 95, 26, 25, 45, 28, 43, 33, 32, 26, 33, 29, 37, 35, 27, 16, 33, 46, 33, 59, 26, 13, 40, 11, 101, 42, 34, 47, 37, 22, 57, 3, 22, 45, 36, 39, 21, 43, 45, 54, 44, 26, 34, 27, 59, 30, 32, 27, 34, 33, 38, 35, 2, 37, 34, 37, 27, 60, 41, 35, 36, 74, 22, 45, 25, 28, 45, 28, 44, 19, 30, 56, 40, 21, 25, 26, 38, 54, 46, 32, 49, 22, 61, 37, 43, 31, 29, 37, 36, 49, 48, 46, 50, 1, 42, 43, 38, 46, 22, 50, 54, 59, 30, 22, 28, 33]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.611, speedup = 0.4161315531786683, eval_ratio = 0.041308)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.388888888888889,"recall":0.388888888888889,"f1":null,"seconds":7.129088044166565e-5,"exhaustive_search_seconds":0.0003790687769651413,"evaluations":340.296875,"distances_sum":1722.6723991464535}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5486111111111113,"recall":0.5486111111111113,"f1":0.5486111111111113,"seconds":0.00010577589273452759,"exhaustive_search_seconds":0.0003790687769651413,"evaluations":379.4375,"distances_sum":1608.2419565881783}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6527777777777773,"recall":0.6527777777777773,"f1":0.6527777777777773,"seconds":0.0001362096518278122,"exhaustive_search_seconds":0.0003790687769651413,"evaluations":415.90625,"distances_sum":1561.7204706355903}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7256944444444436,"recall":0.7256944444444436,"f1":0.7256944444444436,"seconds":0.0001652296632528305,"exhaustive_search_seconds":0.0003790687769651413,"evaluations":455.1015625,"distances_sum":1537.0272277615313}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7899305555555548,"recall":0.7899305555555548,"f1":0.7899305555555548,"seconds":0.00019851699471473694,"exhaustive_search_seconds":0.0003790687769651413,"evaluations":494.0234375,"distances_sum":1521.1608426812807}
KCenters.DeloneInvIndex> reached performance {"precision":0.8333333333333324,"recall":0.8333333333333324,"f1":0.8333333333333324,"seconds":0.00023054145276546478,"exhaustive_search_seconds":0.0003790687769651413,"evaluations":535.078125,"distances_sum":1513.0823134054644}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8070000000000002, speedup = 1.9068297523513675, eval_ratio = 0.053288)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
