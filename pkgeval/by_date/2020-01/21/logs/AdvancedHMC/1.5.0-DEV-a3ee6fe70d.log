Julia Version 1.5.0-DEV.122
Commit a3ee6fe70d (2020-01-20 16:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed Requires ─────────── v1.0.0
 Installed DataAPI ──────────── v1.1.0
 Installed ArgCheck ─────────── v1.0.1
 Installed Rmath ────────────── v0.6.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed Parameters ───────── v0.12.0
 Installed StatsFuns ────────── v0.9.3
 Installed DataStructures ───── v0.17.9
 Installed FillArrays ───────── v0.8.4
 Installed Missings ─────────── v0.4.3
 Installed BinaryProvider ───── v0.5.8
 Installed OrderedCollections ─ v1.1.0
 Installed SortingAlgorithms ── v0.3.1
 Installed ArrayLayouts ─────── v0.1.5
 Installed MacroTools ───────── v0.5.3
 Installed StaticArrays ─────── v0.12.1
 Installed InplaceOps ───────── v0.3.0
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed LazyArrays ───────── v0.14.11
 Installed SpecialFunctions ─── v0.9.0
 Installed StatsBase ────────── v0.32.0
 Installed ProgressMeter ────── v1.2.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_SvGOis/Project.toml`
 [no changes]
  Updating `/tmp/jl_SvGOis/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed ForwardDiff ───────────────── v0.10.9
 Installed SparseDiffTools ───────────── v1.2.0
 Installed Bijectors ─────────────────── v0.5.2
 Installed Zygote ────────────────────── v0.4.6
 Installed UnicodePlots ──────────────── v1.1.0
 Installed LineSearches ──────────────── v7.0.1
 Installed Distributions ─────────────── v0.22.3
 Installed FunctionWrappers ──────────── v1.0.0
 Installed OrdinaryDiffEq ────────────── v5.27.1
 Installed RecipesBase ───────────────── v0.7.0
 Installed Turing ────────────────────── v0.8.3
 Installed OffsetArrays ──────────────── v1.0.1
 Installed NLSolversBase ─────────────── v7.5.0
 Installed DiffResults ───────────────── v1.0.2
 Installed Ratios ────────────────────── v0.3.1
 Installed DiffRules ─────────────────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed Libtask ───────────────────── v0.3.1
 Installed RecursiveFactorization ────── v0.1.0
 Installed SimpleTraits ──────────────── v0.9.1
 Installed Calculus ──────────────────── v0.5.1
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed TableTraits ───────────────── v1.0.0
 Installed Tracker ───────────────────── v0.2.6
 Installed LogDensityProblems ────────── v0.10.1
 Installed IterativeSolvers ──────────── v0.8.1
 Installed Interpolations ────────────── v0.12.7
 Installed Adapt ─────────────────────── v1.0.0
 Installed KernelDensity ─────────────── v0.5.1
 Installed NaNMath ───────────────────── v0.3.3
 Installed ExponentialUtilities ──────── v1.6.0
 Installed IntervalSets ──────────────── v0.3.2
 Installed PositiveFactorizations ────── v0.2.3
 Installed DistributionsAD ───────────── v0.2.0
 Installed Roots ─────────────────────── v0.8.4
 Installed DynamicPPL ────────────────── v0.1.1
 Installed JSON ──────────────────────── v0.21.0
 Installed DiffEqDiffTools ───────────── v1.7.0
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed MCMCChains ────────────────── v1.0.1
 Installed IRTools ───────────────────── v0.3.0
 Installed TreeViews ─────────────────── v0.3.0
 Installed CommonSubexpressions ──────── v0.2.0
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed Optim ─────────────────────── v0.19.7
 Installed AxisArrays ────────────────── v0.4.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed ChainRulesCore ────────────── v0.5.5
 Installed IterTools ─────────────────── v1.3.0
 Installed PDMats ────────────────────── v0.9.10
 Installed DataValueInterfaces ───────── v1.0.0
 Installed ZygoteRules ───────────────── v0.2.0
 Installed Showoff ───────────────────── v0.3.1
 Installed InvertedIndices ───────────── v1.0.0
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed CategoricalArrays ─────────── v0.7.7
 Installed MuladdMacro ───────────────── v0.2.2
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed Polynomials ───────────────── v0.6.0
 Installed ArrayInterface ────────────── v2.3.1
 Installed RangeArrays ───────────────── v0.3.2
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed Compat ────────────────────── v2.2.0
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed LightGraphs ───────────────── v1.3.0
 Installed Arpack ────────────────────── v0.4.0
 Installed Parsers ───────────────────── v0.3.10
 Installed DataFrames ────────────────── v0.20.0
 Installed DocStringExtensions ───────── v0.8.1
 Installed FFTW ──────────────────────── v1.2.0
 Installed Inflate ───────────────────── v0.1.1
 Installed QuadGK ────────────────────── v2.3.1
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed RecursiveArrayTools ───────── v2.0.2
 Installed Combinatorics ─────────────── v0.7.0
 Installed Reexport ──────────────────── v0.2.0
 Installed TransformVariables ────────── v0.3.9
 Installed NNlib ─────────────────────── v0.6.4
 Installed PooledArrays ──────────────── v0.5.3
 Installed GenericSVD ────────────────── v0.2.2
 Installed DiffEqBase ────────────────── v6.12.5
 Installed BenchmarkTools ────────────── v0.4.3
 Installed Tables ────────────────────── v0.2.11
  Updating `/tmp/jl_J8FlJE/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.22.3
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_J8FlJE/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.0
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [49dc2e85] + Calculus v0.5.1
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.5.5
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.12.5
  [01453d9d] + DiffEqDiffTools v1.7.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.22.3
  [ced4e74d] + DistributionsAD v0.2.0
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.0
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.7
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.1
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.5.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v1.0.1
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.19.7
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [90014a1f] + PDMats v0.9.10
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.2
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.2.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_Wo3oBd/Project.toml`
 [no changes]
  Updating `/tmp/jl_Wo3oBd/Manifest.toml`
 [no changes]
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_5YKu7d/Project.toml`
 [no changes]
  Updating `/tmp/jl_5YKu7d/Manifest.toml`
 [no changes]
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_wNFfVg/Project.toml`
 [no changes]
  Updating `/tmp/jl_wNFfVg/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_J8FlJE/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.22.3
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.27.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.151128211
│   t_steps = 0.008098561
└   t_step / t_steps = 18.661119055595186
Sampling  0%|                               |  ETA: 6:00:23[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.0003399864693838553
  log_density:                   -11.46021778016065
  hamiltonian_energy:            17.248690912390863
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  7.986604737075783
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▌                            |  ETA: 0:00:32[K
  iterations:                    947
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7754147343534962
  log_density:                   -11.228434070456291
  hamiltonian_energy:            14.45495971689453
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  0.8354455243249337
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.0154131099555648
  nom_step_size:                 1.0154131099555648
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.068430788411885, 0.99569 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▏                           |  ETA: 0:00:25[K
  iterations:                    1231
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.2929630152188388
  log_density:                   -14.445844192827636
  hamiltonian_energy:            22.11317744607877
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  1.5078370061763806
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.099697602493741
  nom_step_size:                 1.099697602493741
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.068430788411885, 0.99569 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▋                           |  ETA: 0:00:22[K
  iterations:                    1426
  n_steps:                       19
  is_accept:                     true
  acceptance_rate:               0.9130642593015333
  log_density:                   -12.204911705385408
  hamiltonian_energy:            17.27414303803545
  hamiltonian_energy_error:      -0.21894275762384652
  max_hamiltonian_energy_error:  0.36741412544816043
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8580877005945318
  nom_step_size:                 0.8580877005945318
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.068430788411885, 0.99569 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▎                          |  ETA: 0:00:19[K
  iterations:                    1669
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7941989461235353
  log_density:                   -13.45955394310722
  hamiltonian_energy:            19.903745184833927
  hamiltonian_energy_error:      -0.2060082489395647
  max_hamiltonian_energy_error:  0.9607734855474881
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9416711112805113
  nom_step_size:                 0.9416711112805113
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.068430788411885, 0.99569 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:17[K
  iterations:                    1902
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8394117096667968
  log_density:                   -18.490994869855164
  hamiltonian_energy:            24.312149465190064
  hamiltonian_energy_error:      0.16035862807604317
  max_hamiltonian_energy_error:  -0.6588252882648504
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8656974071224439
  nom_step_size:                 0.8656974071224439
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.068430788411885, 0.99569 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|█████▉                         |  ETA: 0:00:14[K
  iterations:                    2260
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7759967086866508
  log_density:                   -15.583832062893123
  hamiltonian_energy:            21.077152770916378
  hamiltonian_energy_error:      0.26676774016524973
  max_hamiltonian_energy_error:  0.543649801818777
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▉                        |  ETA: 0:00:12[K
  iterations:                    2652
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.4791612063059
  hamiltonian_energy:            16.614868328944414
  hamiltonian_energy_error:      -0.22676990480308845
  max_hamiltonian_energy_error:  -0.32239475529267736
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▋                       |  ETA: 0:00:11[K
  iterations:                    2964
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9544405464270466
  log_density:                   -12.119990545449788
  hamiltonian_energy:            17.008159092563314
  hamiltonian_energy_error:      -0.08773118594018925
  max_hamiltonian_energy_error:  0.15749041250555607
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|████████▉                      |  ETA: 0:00:09[K
  iterations:                    3425
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9526921861651773
  log_density:                   -11.691572686748632
  hamiltonian_energy:            15.23647470671624
  hamiltonian_energy_error:      -0.062269407206279936
  max_hamiltonian_energy_error:  0.10805830109196357
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▊                     |  ETA: 0:00:08[K
  iterations:                    3759
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9984756896027787
  log_density:                   -15.044193019997937
  hamiltonian_energy:            19.75878848788555
  hamiltonian_energy_error:      -0.19257849829041618
  max_hamiltonian_energy_error:  -0.4244231709716111
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▉                    |  ETA: 0:00:07[K
  iterations:                    4197
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9312868526536091
  log_density:                   -16.15129353573488
  hamiltonian_energy:            19.538507626629535
  hamiltonian_energy_error:      0.2038354795148507
  max_hamiltonian_energy_error:  0.2038354795148507
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▊                   |  ETA: 0:00:06[K
  iterations:                    4558
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9745579744058259
  log_density:                   -15.775625602630148
  hamiltonian_energy:            18.828460655597734
  hamiltonian_energy_error:      0.10007407678803659
  max_hamiltonian_energy_error:  -0.28559437446462255
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▉                  |  ETA: 0:00:06[K
  iterations:                    4972
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8279906998069625
  log_density:                   -10.985187608545965
  hamiltonian_energy:            15.71831871645482
  hamiltonian_energy_error:      -0.03396275595089904
  max_hamiltonian_energy_error:  0.3914412170291435
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▉                 |  ETA: 0:00:05[K
  iterations:                    5361
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9174790400008737
  log_density:                   -11.96703242973027
  hamiltonian_energy:            15.508898634013715
  hamiltonian_energy_error:      -0.046628936268573895
  max_hamiltonian_energy_error:  0.18553359320416618
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▊                |  ETA: 0:00:05[K
  iterations:                    5692
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9950795111975317
  log_density:                   -12.080195054973682
  hamiltonian_energy:            16.51545290090656
  hamiltonian_energy_error:      -0.18147667012517488
  max_hamiltonian_energy_error:  -0.18147667012517488
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:04[K
  iterations:                    6155
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7928747882687636
  log_density:                   -13.044454788744833
  hamiltonian_energy:            14.08921678534763
  hamiltonian_energy_error:      0.307038957968933
  max_hamiltonian_energy_error:  0.307038957968933
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▊              |  ETA: 0:00:04[K
  iterations:                    6493
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8700878905891545
  log_density:                   -11.915535642271
  hamiltonian_energy:            15.489331507083238
  hamiltonian_energy_error:      0.04033481037583719
  max_hamiltonian_energy_error:  0.21958743091758315
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|█████████████████▉             |  ETA: 0:00:03[K
  iterations:                    6925
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8252432430977283
  log_density:                   -12.49128340496889
  hamiltonian_energy:            16.786150569992564
  hamiltonian_energy_error:      0.06922967209382946
  max_hamiltonian_energy_error:  0.29467281536248535
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|██████████████████▉            |  ETA: 0:00:03[K
  iterations:                    7283
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9048809794774287
  log_density:                   -10.808414936168978
  hamiltonian_energy:            13.542969498947066
  hamiltonian_energy_error:      0.016774719680228145
  max_hamiltonian_energy_error:  0.21291486593283793
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|███████████████████▉           |  ETA: 0:00:03[K
  iterations:                    7695
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8557458699886948
  log_density:                   -17.707724402264034
  hamiltonian_energy:            20.53608654297481
  hamiltonian_energy_error:      0.4159881252947599
  max_hamiltonian_energy_error:  0.4159881252947599
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▉          |  ETA: 0:00:02[K
  iterations:                    8072
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9626845914947094
  log_density:                   -13.95930725151273
  hamiltonian_energy:            17.25001501260035
  hamiltonian_energy_error:      0.018208772186188327
  max_hamiltonian_energy_error:  -0.1877060221051181
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▊         |  ETA: 0:00:02[K
  iterations:                    8437
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8894338206485999
  log_density:                   -12.840700434534137
  hamiltonian_energy:            19.468051347681552
  hamiltonian_energy_error:      -0.1140480262910053
  max_hamiltonian_energy_error:  0.35696534103625766
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 74%|███████████████████████        |  ETA: 0:00:02[K
  iterations:                    8903
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9957271301093132
  log_density:                   -13.820353373873557
  hamiltonian_energy:            17.647888335300614
  hamiltonian_energy_error:      -0.03478760270411385
  max_hamiltonian_energy_error:  -0.14341400526782166
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|███████████████████████▉       |  ETA: 0:00:02[K
  iterations:                    9221
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9233075583291173
  log_density:                   -13.470462144988993
  hamiltonian_energy:            18.585984842213566
  hamiltonian_energy_error:      0.018897305082550275
  max_hamiltonian_energy_error:  0.18051264833421854
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|█████████████████████████      |  ETA: 0:00:01[K
  iterations:                    9655
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9922404919699258
  log_density:                   -11.586737848704061
  hamiltonian_energy:            16.439280986847336
  hamiltonian_energy_error:      -0.3365242351482358
  max_hamiltonian_energy_error:  -0.37013007780214835
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▉     |  ETA: 0:00:01[K
  iterations:                    9994
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9364943737389437
  log_density:                   -12.879562944982288
  hamiltonian_energy:            18.667052525607616
  hamiltonian_energy_error:      -0.09310159946639374
  max_hamiltonian_energy_error:  0.17174737345416702
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|██████████████████████████▉    |  ETA: 0:00:01[K
  iterations:                    10405
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9949435884162295
  log_density:                   -13.145550552627839
  hamiltonian_energy:            15.78637128259966
  hamiltonian_energy_error:      -0.04635698423618706
  max_hamiltonian_energy_error:  -0.17438884774079888
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▋   |  ETA: 0:00:01[K
  iterations:                    10713
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9298590459024457
  log_density:                   -15.534899085380372
  hamiltonian_energy:            19.053195635574085
  hamiltonian_energy_error:      0.1499521562331445
  max_hamiltonian_energy_error:  0.20314908923137054
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|████████████████████████████▊  |  ETA: 0:00:00[K
  iterations:                    11135
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7275901155646692
  log_density:                   -14.424129990110849
  hamiltonian_energy:            22.96960556740813
  hamiltonian_energy_error:      0.13033874907635834
  max_hamiltonian_energy_error:  0.78666673652695
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▊ |  ETA: 0:00:00[K
  iterations:                    11505
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.954840396813724
  log_density:                   -14.828512646160094
  hamiltonian_energy:            20.943630541634008
  hamiltonian_energy_error:      -0.3243601014365147
  max_hamiltonian_energy_error:  -0.6971172256221116
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▌|  ETA: 0:00:00[K
  iterations:                    11813
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9766732937079761
  log_density:                   -13.424537695982675
  hamiltonian_energy:            16.489960403438197
  hamiltonian_energy_error:      -0.062203458793050004
  max_hamiltonian_energy_error:  -0.3267384045276529
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9805976163373631
  log_density:                   -14.26203278176266
  hamiltonian_energy:            19.700383634423943
  hamiltonian_energy_error:      -0.06038293340706602
  max_hamiltonian_energy_error:  -0.08800154459560261
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6547970506542962
  nom_step_size:                 0.6547970506542962
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0221308106304667, 0.9862 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.935129245 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0221308106304667, 0.9862 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.655), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.065114110339985
└   average_acceptance_rate = 0.881109019380557
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.999892138 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠤⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠈⢆│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠒⠒⠣⡀⡸⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠈⠃⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⡸⢣⠀⠀⠀⠀⢀⠔⠊⠑⠢⣀⡠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⢠⠃⠀⢣⢀⡠⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠁⠀⠀⠀⠀⠀⡎⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⢀⣀⠤⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣆⠀⠀⠀⡠⠃⢀⠤⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠙⣦⣠⠜⠓⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
