Julia Version 1.5.0-DEV.133
Commit c9940ed95b (2020-01-21 18:51 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_mBx5Aw/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_mBx5Aw/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_mBx5Aw/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.13033607909903822 0.21798495347952757; -0.13033607909903822 0.0 -0.011927747356949103; -0.21798495347952757 0.011927747356949103 0.0])
dAA = so3([0.0 -0.05805426745455296 -0.0419637522965549; 0.05805426745455296 0.0 0.11164155694711567; 0.0419637522965549 -0.11164155694711567 0.0])
dAA = so3([0.0 0.018239828289721132 -0.17111059823902916; -0.018239828289721132 0.0 0.06242155849295353; 0.17111059823902916 -0.06242155849295353 0.0])
dAA = Quaternion(0.9971273304817238, [-0.04358185435660533, 0.031070619508028273, -0.05359407971612591])
dAA = SO3([0.9828536941277496 0.09396103378354284 0.15865037053144196; -0.09260170530680745 0.9955753826640142 -0.015955613672710624; -0.1594476093069667 0.000990738981530472 0.987205894594721])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.984111240226371 -0.12798354451368976 -0.12306615779257277; 0.15699681190211795 0.9509701240341998 0.2664729334227956; 0.08292808880400543 -0.2815600034239435 0.9559533966461042]), [0.11927747356949102, 2.1798495347952755, -1.3033607909903822])
xj = SE3(SO3([0.9525131388320527 0.2522561498934441 0.1705448773585619; -0.2842886534672753 0.9373654880059997 0.20131046521489465; -0.1090810793037643 -0.24023483664158723 0.9645665043954801]), [-0.6242155849295352, -1.7111059823902914, -0.1823982828972113])
Dx = SE3(SO3([0.8837005887022773 0.37548928986355223 0.2794298887467369; -0.36154315469062137 0.9267624596330599 -0.101970048108423; -0.29725379194150203 -0.010914971948931734 0.9547361135747154]), [-1.249588208933154, -3.920645781458308, 0.12625242069747766])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
