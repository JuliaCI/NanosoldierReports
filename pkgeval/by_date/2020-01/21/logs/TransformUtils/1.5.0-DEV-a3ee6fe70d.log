Julia Version 1.5.0-DEV.122
Commit a3ee6fe70d (2020-01-20 16:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_ydrpGW/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_ydrpGW/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_ydrpGW/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.05823896022172276 -0.03759518787348065; -0.05823896022172276 0.0 0.050397445389672696; 0.03759518787348065 -0.050397445389672696 0.0])
dAA = so3([0.0 0.025028419509306322 -0.046677695831092346; -0.025028419509306322 0.0 0.13659840932366774; 0.046677695831092346 -0.13659840932366774 0.0])
dAA = so3([0.0 -0.05499496230881234 -0.013794465253812394; 0.05499496230881234 0.0 -0.03160915248026714; 0.013794465253812394 0.03160915248026714 0.0])
dAA = Quaternion(0.9993298648043445, [-0.0033470745678331817, 0.029097530224757303, 0.0219534083182458])
dAA = SO3([0.9976890170288618 0.06644483458171839 0.014202438431192156; -0.06394251821054144 0.9888548659365312 -0.13445225352719012; -0.022977808095601765 0.133233396980837 0.9908182892256624])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9913312239651083 0.08088494643471102 -0.10353757690855164; -0.041477844329279784 0.9404034090430469 0.33752187586882715; 0.1246675291390519 -0.33030145882280004 0.9356061957244051]), [-0.5039744538967269, -0.37595187873480646, -0.5823896022172276])
xj = SE3(SO3([0.9834243662857569 -0.10980447895803142 0.1442896122255951; 0.10783335788661802 0.9939378745705217 0.021435214510945346; -0.14576859305884074 -0.005520678852181751 0.9893033101039626]), [0.3160915248026714, -0.13794465253812394, 0.5499496230881233])
Dx = SE3(SO3([0.9522539751525241 -0.1507672583483993 0.2654837106421466; 0.22909866349262975 0.9276445245028749 -0.2949397201899493; -0.20180725753081025 0.34167948426843225 0.9178937633724022]), [0.9442509170848356, -0.08385949834836717, 1.0548485959740244])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
