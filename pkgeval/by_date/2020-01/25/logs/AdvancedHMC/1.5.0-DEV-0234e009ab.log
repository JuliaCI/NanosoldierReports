Julia Version 1.5.0-DEV.150
Commit 0234e009ab (2020-01-25 18:06 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed Missings ─────────── v0.4.3
 Installed Rmath ────────────── v0.6.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed DataStructures ───── v0.17.9
 Installed BinaryProvider ───── v0.5.8
 Installed StatsBase ────────── v0.32.0
 Installed StaticArrays ─────── v0.12.1
 Installed LazyArrays ───────── v0.14.11
 Installed ArgCheck ─────────── v1.0.1
 Installed DataAPI ──────────── v1.1.0
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed StatsFuns ────────── v0.9.3
 Installed InplaceOps ───────── v0.3.0
 Installed OrderedCollections ─ v1.1.0
 Installed Parameters ───────── v0.12.0
 Installed SpecialFunctions ─── v0.9.0
 Installed MacroTools ───────── v0.5.3
 Installed SortingAlgorithms ── v0.3.1
 Installed Requires ─────────── v1.0.0
 Installed FillArrays ───────── v0.8.4
 Installed ArrayLayouts ─────── v0.1.5
 Installed ProgressMeter ────── v1.2.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_SmhTb2/Project.toml`
 [no changes]
  Updating `/tmp/jl_SmhTb2/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed SimpleTraits ──────────────── v0.9.1
 Installed Bijectors ─────────────────── v0.5.2
 Installed FunctionWrappers ──────────── v1.0.0
 Installed Zygote ────────────────────── v0.4.6
 Installed ForwardDiff ───────────────── v0.10.9
 Installed Distributions ─────────────── v0.22.3
 Installed DiffRules ─────────────────── v1.0.0
 Installed UnicodePlots ──────────────── v1.1.0
 Installed IRTools ───────────────────── v0.3.0
 Installed OrdinaryDiffEq ────────────── v5.28.1
 Installed Turing ────────────────────── v0.8.3
 Installed FiniteDiff ────────────────── v2.0.0
 Installed IterTools ─────────────────── v1.3.0
 Installed RecursiveFactorization ────── v0.1.0
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed RangeArrays ───────────────── v0.3.2
 Installed Roots ─────────────────────── v0.8.4
 Installed SparseDiffTools ───────────── v1.3.1
 Installed OffsetArrays ──────────────── v1.0.2
 Installed TableTraits ───────────────── v1.0.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed Ratios ────────────────────── v0.3.1
 Installed RecipesBase ───────────────── v0.7.0
 Installed MCMCChains ────────────────── v1.0.1
 Installed IterativeSolvers ──────────── v0.8.1
 Installed Polynomials ───────────────── v0.6.0
 Installed KernelDensity ─────────────── v0.5.1
 Installed DataFrames ────────────────── v0.20.0
 Installed DiffEqBase ────────────────── v6.13.0
 Installed TreeViews ─────────────────── v0.3.0
 Installed Compat ────────────────────── v2.2.0
 Installed DistributionsAD ───────────── v0.2.0
 Installed DiffResults ───────────────── v1.0.2
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed InvertedIndices ───────────── v1.0.0
 Installed Tracker ───────────────────── v0.2.6
 Installed NaNMath ───────────────────── v0.3.3
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed Optim ─────────────────────── v0.20.0
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed Tables ────────────────────── v0.2.11
 Installed Inflate ───────────────────── v0.1.1
 Installed Arpack ────────────────────── v0.4.0
 Installed ZygoteRules ───────────────── v0.2.0
 Installed NLSolversBase ─────────────── v7.6.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed PDMats ────────────────────── v0.9.11
 Installed Adapt ─────────────────────── v1.0.0
 Installed LogDensityProblems ────────── v0.10.1
 Installed LineSearches ──────────────── v7.0.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Combinatorics ─────────────── v0.7.0
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed MuladdMacro ───────────────── v0.2.2
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed Parsers ───────────────────── v0.3.10
 Installed NNlib ─────────────────────── v0.6.4
 Installed RecursiveArrayTools ───────── v2.0.4
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed DataValueInterfaces ───────── v1.0.0
 Installed BenchmarkTools ────────────── v0.4.3
 Installed QuadGK ────────────────────── v2.3.1
 Installed TransformVariables ────────── v0.3.9
 Installed ExponentialUtilities ──────── v1.6.0
 Installed LightGraphs ───────────────── v1.3.0
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed Reexport ──────────────────── v0.2.0
 Installed GenericSVD ────────────────── v0.2.2
 Installed PooledArrays ──────────────── v0.5.3
 Installed ArrayInterface ────────────── v2.3.1
 Installed ChainRulesCore ────────────── v0.5.5
 Installed FFTW ──────────────────────── v1.2.0
 Installed CommonSubexpressions ──────── v0.2.0
 Installed DynamicPPL ────────────────── v0.1.1
 Installed IntervalSets ──────────────── v0.3.2
 Installed PositiveFactorizations ────── v0.2.3
 Installed JSON ──────────────────────── v0.21.0
 Installed DocStringExtensions ───────── v0.8.1
 Installed Showoff ───────────────────── v0.3.1
 Installed AxisArrays ────────────────── v0.4.1
 Installed Libtask ───────────────────── v0.3.1
 Installed Interpolations ────────────── v0.12.7
  Updating `/tmp/jl_tLvmgJ/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.22.3
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_tLvmgJ/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.5.5
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.13.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.22.3
  [ced4e74d] + DistributionsAD v0.2.0
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [6a86dc24] + FiniteDiff v2.0.0
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.0
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.7
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.1
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v1.0.2
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.20.0
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [90014a1f] + PDMats v0.9.11
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.4
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.3.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_rnfAPv/Project.toml`
 [no changes]
  Updating `/tmp/jl_rnfAPv/Manifest.toml`
 [no changes]
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_ed8ypU/Project.toml`
 [no changes]
  Updating `/tmp/jl_ed8ypU/Manifest.toml`
 [no changes]
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_n8LSPk/Project.toml`
 [no changes]
  Updating `/tmp/jl_n8LSPk/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_tLvmgJ/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.22.3
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.154516102
│   t_steps = 0.007865834
└   t_step / t_steps = 19.643956635748985
Sampling  0%|                               |  ETA: 5:12:57[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.4412443828539672
  log_density:                   -13.202254558882565
  hamiltonian_energy:            20.920358210155324
  hamiltonian_energy_error:      0.29902495920855543
  max_hamiltonian_energy_error:  1.549745051460711
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8125
  nom_step_size:                 0.8125
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  5%|█▌                             |  ETA: 0:00:47[K
  iterations:                    586
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9929597774059002
  log_density:                   -15.876018540845301
  hamiltonian_energy:            21.267022656628487
  hamiltonian_energy_error:      -0.21753075448900105
  max_hamiltonian_energy_error:  -0.5644667102846412
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7117496870948732
  nom_step_size:                 0.7117496870948732
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0584698651393147, 1.2113 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▍                            |  ETA: 0:00:31[K
  iterations:                    905
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7422665498505832
  log_density:                   -13.652147714475692
  hamiltonian_energy:            16.754565801508694
  hamiltonian_energy_error:      0.2858607940664122
  max_hamiltonian_energy_error:  0.4689655482774242
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9982114823939733
  nom_step_size:                 0.9982114823939733
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0054581186302174, 0.9933 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███                            |  ETA: 0:00:25[K
  iterations:                    1147
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8178548035597366
  log_density:                   -14.391893165057418
  hamiltonian_energy:            19.74934576044313
  hamiltonian_energy_error:      -0.1279865423756661
  max_hamiltonian_energy_error:  0.790617989348636
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9547464791668443
  nom_step_size:                 0.9547464791668443
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0054581186302174, 0.9933 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▋                           |  ETA: 0:00:20[K
  iterations:                    1421
  n_steps:                       83
  is_accept:                     true
  acceptance_rate:               0.9732081944137567
  log_density:                   -13.433374646304006
  hamiltonian_energy:            16.837732091148187
  hamiltonian_energy_error:      -0.017551491257631113
  max_hamiltonian_energy_error:  -0.33399703533284253
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.8156512848433127
  nom_step_size:                 0.8156512848433127
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0054581186302174, 0.9933 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▎                          |  ETA: 0:00:18[K
  iterations:                    1664
  n_steps:                       19
  is_accept:                     true
  acceptance_rate:               0.913063365301889
  log_density:                   -15.808056912924727
  hamiltonian_energy:            20.26883912460349
  hamiltonian_energy_error:      0.1919810781876059
  max_hamiltonian_energy_error:  0.4813755352072526
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8298790423666395
  nom_step_size:                 0.8298790423666395
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0054581186302174, 0.9933 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████                          |  ETA: 0:00:15[K
  iterations:                    1948
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7360170507355014
  log_density:                   -14.6993051653811
  hamiltonian_energy:            18.545356540586358
  hamiltonian_energy_error:      0.2551555438717834
  max_hamiltonian_energy_error:  0.8364283980419565
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9495890198754108
  nom_step_size:                 0.9495890198754108
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0054581186302174, 0.9933 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▊                         |  ETA: 0:00:13[K
  iterations:                    2217
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8458475403843091
  log_density:                   -14.44597800573364
  hamiltonian_energy:            20.913230060648743
  hamiltonian_energy_error:      -0.012102905532824337
  max_hamiltonian_energy_error:  0.3347825881501407
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▊                        |  ETA: 0:00:11[K
  iterations:                    2634
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.400870930607088
  hamiltonian_energy:            20.127358389676257
  hamiltonian_energy_error:      -0.2398454190684447
  max_hamiltonian_energy_error:  -0.2562975582407887
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▌                       |  ETA: 0:00:10[K
  iterations:                    2923
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.8779330595203776
  log_density:                   -12.28973552632465
  hamiltonian_energy:            14.107094708496637
  hamiltonian_energy_error:      0.2067275371095807
  max_hamiltonian_energy_error:  0.3078627390897015
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▌                      |  ETA: 0:00:09[K
  iterations:                    3309
  n_steps:                       63
  is_accept:                     true
  acceptance_rate:               0.98991983043929
  log_density:                   -14.4389448627036
  hamiltonian_energy:            21.697683126917884
  hamiltonian_energy_error:      -0.5220829500636874
  max_hamiltonian_energy_error:  -0.6831809969861524
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▍                     |  ETA: 0:00:08[K
  iterations:                    3630
  n_steps:                       47
  is_accept:                     true
  acceptance_rate:               0.9469483116101425
  log_density:                   -13.224719585302882
  hamiltonian_energy:            20.249975445310596
  hamiltonian_energy_error:      -0.32118512766280105
  max_hamiltonian_energy_error:  -0.32118512766280105
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 33%|██████████▎                    |  ETA: 0:00:07[K
  iterations:                    3950
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.657730602400503
  log_density:                   -13.577752979508338
  hamiltonian_energy:            21.764910955147265
  hamiltonian_energy_error:      0.04080190841180453
  max_hamiltonian_energy_error:  0.8540048329448773
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████▎                   |  ETA: 0:00:06[K
  iterations:                    4378
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9678585668474232
  log_density:                   -20.94870896482735
  hamiltonian_energy:            28.091480876759487
  hamiltonian_energy_error:      0.15520744596310365
  max_hamiltonian_energy_error:  -0.30536145013337546
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████▏                  |  ETA: 0:00:06[K
  iterations:                    4695
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5550564749768618
  log_density:                   -14.129510308239283
  hamiltonian_energy:            19.595986446361515
  hamiltonian_energy_error:      0.35969956072398546
  max_hamiltonian_energy_error:  0.9437241865280868
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▎                 |  ETA: 0:00:05[K
  iterations:                    5109
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7241749517938846
  log_density:                   -11.258919604673638
  hamiltonian_energy:            18.30508371870859
  hamiltonian_energy_error:      -0.19026698772485773
  max_hamiltonian_energy_error:  0.5916928191754955
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 46%|██████████████▏                |  ETA: 0:00:05[K
  iterations:                    5471
  n_steps:                       47
  is_accept:                     true
  acceptance_rate:               0.9507025904183856
  log_density:                   -13.177885310789847
  hamiltonian_energy:            17.398842968229317
  hamiltonian_energy_error:      -0.0779525793379463
  max_hamiltonian_energy_error:  -0.44076563843146843
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▏               |  ETA: 0:00:04[K
  iterations:                    5865
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9123595092692689
  log_density:                   -13.593490858961324
  hamiltonian_energy:            17.241257503271846
  hamiltonian_energy_error:      0.04893643910899925
  max_hamiltonian_energy_error:  0.2857391491212766
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████               |  ETA: 0:00:04[K
  iterations:                    6183
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.854022511402988
  hamiltonian_energy:            18.333240351331302
  hamiltonian_energy_error:      -0.1781683978561297
  max_hamiltonian_energy_error:  -0.2757017164905129
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████              |  ETA: 0:00:04[K
  iterations:                    6570
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7564924577101996
  log_density:                   -16.43963426416945
  hamiltonian_energy:            24.12734175643372
  hamiltonian_energy_error:      0.061565856940912767
  max_hamiltonian_energy_error:  0.6759093962105496
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▊             |  ETA: 0:00:03[K
  iterations:                    6866
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6343297396140369
  log_density:                   -12.012055018802899
  hamiltonian_energy:            20.443234506383263
  hamiltonian_energy_error:      -0.0666597760475689
  max_hamiltonian_energy_error:  0.8626110587539841
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▋            |  ETA: 0:00:03[K
  iterations:                    7231
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.385613061327174
  hamiltonian_energy:            19.010764653615013
  hamiltonian_energy_error:      -0.2723897284459511
  max_hamiltonian_energy_error:  -0.5267462674326637
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|███████████████████▊           |  ETA: 0:00:03[K
  iterations:                    7644
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7876542963106167
  log_density:                   -10.92714500783212
  hamiltonian_energy:            15.179000785314969
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  0.4236580711877469
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▍          |  ETA: 0:00:02[K
  iterations:                    7909
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8202689037659573
  log_density:                   -13.850467946839299
  hamiltonian_energy:            16.241368092508615
  hamiltonian_energy_error:      0.3057235642060796
  max_hamiltonian_energy_error:  0.3831496364375617
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▍         |  ETA: 0:00:02[K
  iterations:                    8296
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6192166016722915
  log_density:                   -12.483519370236454
  hamiltonian_energy:            20.816053750760517
  hamiltonian_energy_error:      0.06494875929974953
  max_hamiltonian_energy_error:  0.9668213122710227
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▎        |  ETA: 0:00:02[K
  iterations:                    8607
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8970205965474435
  log_density:                   -10.90256791522032
  hamiltonian_energy:            15.885831402220763
  hamiltonian_energy_error:      -0.27260629066333664
  max_hamiltonian_energy_error:  0.300576422671611
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▎       |  ETA: 0:00:02[K
  iterations:                    9011
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6868755845223596
  log_density:                   -13.774334560225313
  hamiltonian_energy:            21.526420898098607
  hamiltonian_energy_error:      0.045414258092208115
  max_hamiltonian_energy_error:  0.7207900288929601
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████▏      |  ETA: 0:00:01[K
  iterations:                    9335
  n_steps:                       35
  is_accept:                     true
  acceptance_rate:               0.9969685742758734
  log_density:                   -12.654124026464473
  hamiltonian_energy:            17.319132878773182
  hamiltonian_energy_error:      -0.31133321249607704
  max_hamiltonian_energy_error:  -0.4206852018596514
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▎     |  ETA: 0:00:01[K
  iterations:                    9788
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8695187380196688
  log_density:                   -16.270050768664884
  hamiltonian_energy:            23.936389783857567
  hamiltonian_energy_error:      -0.00026707003001646967
  max_hamiltonian_energy_error:  0.2427008365385106
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▎    |  ETA: 0:00:01[K
  iterations:                    10176
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9978841693605466
  log_density:                   -16.252261591998995
  hamiltonian_energy:            18.887006052374616
  hamiltonian_energy_error:      0.014921589730811036
  max_hamiltonian_energy_error:  -0.528343557201719
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:01[K
  iterations:                    10564
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8085999089937531
  log_density:                   -12.665410974971604
  hamiltonian_energy:            19.93556699986983
  hamiltonian_energy_error:      -0.1875489494773035
  max_hamiltonian_energy_error:  0.46085717327539655
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▎  |  ETA: 0:00:01[K
  iterations:                    10918
  n_steps:                       55
  is_accept:                     true
  acceptance_rate:               0.9152326729099008
  log_density:                   -14.324445983675748
  hamiltonian_energy:            21.987428607865148
  hamiltonian_energy_error:      -0.2555850538531246
  max_hamiltonian_energy_error:  0.3919569478867757
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████  |  ETA: 0:00:00[K
  iterations:                    11241
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -18.64516253109086
  hamiltonian_energy:            28.790133949209906
  hamiltonian_energy_error:      -0.3712185130794552
  max_hamiltonian_energy_error:  -0.42921922255505507
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████▏|  ETA: 0:00:00[K
  iterations:                    11659
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7539339379581603
  log_density:                   -15.787906774129784
  hamiltonian_energy:            16.975990370635934
  hamiltonian_energy_error:      0.5998091043426115
  max_hamiltonian_energy_error:  0.5998091043426115
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|██████████████████████████████▉|  ETA: 0:00:00[K
  iterations:                    11952
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9952903491554267
  log_density:                   -13.91174490034507
  hamiltonian_energy:            19.210366025066445
  hamiltonian_energy_error:      -0.19246706722920948
  max_hamiltonian_energy_error:  -0.21527114969547867
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8767494909957125
  log_density:                   -12.93568293425685
  hamiltonian_energy:            15.588557951035972
  hamiltonian_energy_error:      0.18864025933352302
  max_hamiltonian_energy_error:  0.2748819736527288
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7427348294777137
  nom_step_size:                 0.7427348294777137
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9945480235864623, 1.0202 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.843738275 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9945480235864623, 1.0202 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.743), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0942456790280986
└   average_acceptance_rate = 0.8506591594931951
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.06924391 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠑⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡆⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢱⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠈⡆⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠔⠁⠀⠀⠀⠀⢀⡄⠀⠀⠀⠀⠀⢀⠤⢆⠀⠀⠀⢸⠀⠀⢸⢀⠔⠉⠒│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⡜⠱⡀⠀⢠⠔⠒⠁⠀⠀⠱⢄⣀⡇⠀⠀⠀⠁⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⢣⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⡠⠤⠤⠤⠤⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣧⠀⠀⢀⡔⠁⠀⣀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠘⣧⣀⠮⠒⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠘⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
