Julia Version 1.5.0-DEV.147
Commit e0740fe5a6 (2020-01-24 14:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed PooledArrays ──────────────── v0.5.3
 Installed Missings ──────────────────── v0.4.3
 Installed KCenters ──────────────────── v0.1.9
 Installed Compat ────────────────────── v3.2.0
 Installed TableTraits ───────────────── v1.0.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed StatsBase ─────────────────── v0.32.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed Tables ────────────────────── v0.2.11
 Installed InvertedIndices ───────────── v1.0.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed OrderedCollections ────────── v1.1.0
 Installed DataStructures ────────────── v0.17.9
 Installed JSON ──────────────────────── v0.21.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Parsers ───────────────────── v0.3.10
 Installed LearnBase ─────────────────── v0.2.2
 Installed SimilaritySearch ──────────── v0.3.17
 Installed MLDataUtils ───────────────── v0.5.0
 Installed DataFrames ────────────────── v0.20.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_7azzzu/Project.toml`
 [no changes]
  Updating `/tmp/jl_7azzzu/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_7azzzu/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 141.92999999999995
[ Info: 80.80000000000004
[ Info: 42.940000000000005
[ Info: 24.380000000000006
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999835129265
[ Info: 76.0200011681837
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.92661663451262
inertia(cdnet.distances) = 27.676981287762345
inertia(crand.distances) = 23.855994363744397
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.796066260128761,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.5703125,"distances_sum":1817.0462639106743}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7887952325452332,"seconds":4.98257577419281e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.6484375,"distances_sum":1801.9561388905438}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3740234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3740234375,"f1":null,"seconds":3.6172568798065186e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":5.578125,"distances_sum":963.5900675465296}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.681640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.681640625,"f1":0.796066260128761,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.5703125,"distances_sum":1817.0462639106743}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9332131410256417,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.734375,"distances_sum":2503.7457876142344}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8520125707625715,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.0390625,"distances_sum":2068.3804242425845}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9332131410256417,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.734375,"distances_sum":2503.7457876142344}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9454300907425914,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.6796875,"distances_sum":2651.007213763722}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9454300907425914,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.6796875,"distances_sum":2651.007213763722}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9454300907425914,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.6796875,"distances_sum":2651.007213763722}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5615234375,"f1":0.7018830128205135,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.0,"distances_sum":1356.5002620290652}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5546875,"f1":null,"seconds":4.386529326438904e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":6.7421875,"distances_sum":1381.160714659953}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.772092664280165,"seconds":4.766508936882019e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.4453125,"distances_sum":1613.828945810785}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.646484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.646484375,"f1":0.772092664280165,"seconds":4.766508936882019e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.4453125,"distances_sum":1613.828945810785}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8388777888777895,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.953125,"distances_sum":1862.2145352766129}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9440762362637368,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.671875,"distances_sum":2538.235011160036}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8906286421911429,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.203125,"distances_sum":2184.025752215894}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8477163461538471,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.0625,"distances_sum":1887.5583288419991}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9222475441225451,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.5546875,"distances_sum":2390.852018744746}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9440762362637368,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.671875,"distances_sum":2538.235011160036}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9581330128205133,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.796875,"distances_sum":2600.9513387913935}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9581330128205133,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.796875,"distances_sum":2600.9513387913935}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9581330128205133,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.796875,"distances_sum":2600.9513387913935}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.134765625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.134765625,"f1":null,"seconds":3.3993273973464966e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":5.15625,"distances_sum":356.7516996416126}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.134765625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.134765625,"f1":null,"seconds":3.3993273973464966e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":5.15625,"distances_sum":356.7516996416126}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.515625,"f1":0.6672119547119552,"seconds":3.980472683906555e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":6.8203125,"distances_sum":1308.2055788834348}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.515625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.515625,"f1":0.6672119547119552,"seconds":3.980472683906555e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":6.8203125,"distances_sum":1308.2055788834348}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7733523421023429,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.7421875,"distances_sum":1600.9000941724532}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9174481768231779,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.8203125,"distances_sum":2224.523188963466}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.857421875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.857421875,"f1":0.9174481768231779,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.8203125,"distances_sum":2224.523188963466}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9210539460539466,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.84375,"distances_sum":2229.630195347945}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9421245421245426,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.890625,"distances_sum":2390.3407942035074}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9421245421245426,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.890625,"distances_sum":2390.3407942035074}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8994140625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9421245421245426,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.890625,"distances_sum":2390.3407942035074}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7112531565656572,"seconds":4.731118679046631e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.484375,"distances_sum":1188.3517441794424}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8042967449217456,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.890625,"distances_sum":1532.3979501373997}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.685546875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.685546875,"f1":0.8042967449217456,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.890625,"distances_sum":1532.3979501373997}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9020833333333341,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.453125,"distances_sum":1999.3635828889228}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9522550366300373,"seconds":6.0908496379852295e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7890625,"distances_sum":2385.321864397862}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9500088453213458,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8046875,"distances_sum":2327.0531273780693}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9094899891774899,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.453125,"distances_sum":2057.8902904358392}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9522550366300373,"seconds":6.0908496379852295e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7890625,"distances_sum":2385.321864397862}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678056318681322,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9140625,"distances_sum":2452.675950201753}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9804716117216118,"seconds":6.658956408500671e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9765625,"distances_sum":2528.378345782347}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9740155677655681,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.90625,"distances_sum":2525.2158696745537}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9577609890109897,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.828125,"distances_sum":2409.9053473423696}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9804716117216118,"seconds":6.658956408500671e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9765625,"distances_sum":2528.378345782347}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9804716117216118,"seconds":6.658956408500671e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9765625,"distances_sum":2528.378345782347}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4501953125, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.4501953125,"f1":0.60116341991342,"seconds":3.946945071220398e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.203125,"distances_sum":932.6574944706305}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8651130119880128,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8046875,"distances_sum":1823.3286954644902}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.6675482988357544e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.7890625,"distances_sum":516.7254461672809}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8651130119880128,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8046875,"distances_sum":1823.3286954644902}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9177577630702638,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8515625,"distances_sum":2107.956007986873}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9551568223443229,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2364.993114161808}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9184300074925085,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8203125,"distances_sum":2101.1779176856235}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8788206585081593,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7578125,"distances_sum":1898.2424270381857}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9551568223443229,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2364.993114161808}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738095238095242,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9921875,"distances_sum":2474.5630843801864}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738095238095242,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9921875,"distances_sum":2474.5630843801864}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738095238095242,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9921875,"distances_sum":2474.5630843801864}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2333984375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.421875,"distances_sum":497.19574838418436}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2333984375,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.421875,"distances_sum":497.19574838418436}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4287109375, conf: {"ssize":8,"bsize":2}, perf: {"precision":null,"recall":0.4287109375,"f1":null,"seconds":3.768131136894226e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.5,"distances_sum":857.0952985281568}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.816747315184816,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.8125,"distances_sum":1540.4407511858346}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.701171875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.701171875,"f1":0.816747315184816,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.8125,"distances_sum":1540.4407511858346}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9026218573093582,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.453125,"distances_sum":1942.2556465618982}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620592948717954,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.84375,"distances_sum":2370.301503965181}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":10,"bsize":4}, perf: {"precision":1.0,"recall":0.7099609375,"f1":0.8207599691974701,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.96875,"distances_sum":1595.3600897635306}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":11,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8981201090576099,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.375,"distances_sum":1986.488861337189}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620592948717954,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.84375,"distances_sum":2370.301503965181}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620592948717954,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.84375,"distances_sum":2370.301503965181}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3759765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3759765625,"f1":null,"seconds":3.546476364135742e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":5.671875,"distances_sum":811.595693908361}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7852458305583314,"seconds":4.692003130912781e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.953125,"distances_sum":1504.9977208588953}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8516062062937071,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.375,"distances_sum":1778.0238536099066}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8516062062937071,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.375,"distances_sum":1778.0238536099066}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9565304487179491,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8359375,"distances_sum":2422.699302586631}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9025068681318689,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.46875,"distances_sum":2069.446063319093}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9565304487179491,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8359375,"distances_sum":2422.699302586631}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9565304487179491,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8359375,"distances_sum":2422.699302586631}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9565304487179491,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8359375,"distances_sum":2422.699302586631}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5322265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5322265625,"f1":0.6766729797979804,"seconds":4.22261655330658e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.1015625,"distances_sum":1215.4487399424847}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23828125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.23828125,"f1":null,"seconds":3.3676624298095703e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.625,"distances_sum":579.7841327053488}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5322265625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5322265625,"f1":0.6766729797979804,"seconds":4.22261655330658e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.1015625,"distances_sum":1215.4487399424847}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.893675595238096,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.4296875,"distances_sum":1983.5629563185253}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.81640625,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.81640625,"f1":0.893675595238096,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.4296875,"distances_sum":1983.5629563185253}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9343234890109894,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7109375,"distances_sum":2313.511121841192}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9343234890109894,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7109375,"distances_sum":2313.511121841192}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8837890625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9343234890109894,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7109375,"distances_sum":2313.511121841192}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.7421875,"distances_sum":874.5044398180024}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.228515625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.228515625,"f1":null,"seconds":3.293156623840332e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.078125,"distances_sum":545.8780824171641}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4111328125,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.7421875,"distances_sum":874.5044398180024}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.6971431346431353,"seconds":4.330649971961975e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.4375,"distances_sum":1247.699288574359}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.909692168235779e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.6171875,"distances_sum":944.3718300202044}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5390625,"f1":null,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.3125,"distances_sum":1213.3722819484192}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.556640625,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.556640625,"f1":0.6971431346431353,"seconds":4.330649971961975e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.4375,"distances_sum":1247.699288574359}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8109144327894335,"seconds":4.8782676458358765e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.96875,"distances_sum":1629.1184013712511}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.867179174991676,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.359375,"distances_sum":1825.2091617895026}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9482200091575097,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9375,"distances_sum":2313.0340212908045}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8573811605061612,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.359375,"distances_sum":1798.3963133191303}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9482200091575097,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9375,"distances_sum":2313.0340212908045}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9072265625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9482200091575097,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9375,"distances_sum":2313.0340212908045}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.25, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.25,"f1":null,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.03125,"distances_sum":553.9074923152488}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":4.08664345741272e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.5546875,"distances_sum":892.557525247732}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2314453125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2314453125,"f1":null,"seconds":3.5874545574188232e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.8515625,"distances_sum":550.4123713865428}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3955078125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3955078125,"f1":null,"seconds":4.08664345741272e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.5546875,"distances_sum":892.557525247732}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4267578125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4267578125,"f1":null,"seconds":3.7811696529388428e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.6328125,"distances_sum":1009.366675469342}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7989453255078264,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.765625,"distances_sum":1637.4817796769526}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7083270895770902,"seconds":4.366040229797363e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.5078125,"distances_sum":1299.9185094681775}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8561615467865475,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.140625,"distances_sum":1883.7902833805972}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8561615467865475,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.140625,"distances_sum":1883.7902833805972}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9616300366300371,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.859375,"distances_sum":2539.8186989625265}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9044585622710632,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.4453125,"distances_sum":2126.7017717324716}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8994562728937737,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.4140625,"distances_sum":2113.0053533283676}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.891981976356977,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3984375,"distances_sum":2076.152983484414}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8939706127206134,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3203125,"distances_sum":2109.38279743572}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9616300366300371,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.859375,"distances_sum":2539.8186989625265}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9616300366300371,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.859375,"distances_sum":2539.8186989625265}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7797629453879461,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.4765625,"distances_sum":1594.9427362203116}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65234375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.65234375,"f1":0.7797629453879461,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.4765625,"distances_sum":1594.9427362203116}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7823143870018878,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.4765625,"distances_sum":1636.7903855794095}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9189159798534805,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.4921875,"distances_sum":2243.1426547905435}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9232975357975364,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.5703125,"distances_sum":2277.7669100205667}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8671875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.9232975357975364,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.5703125,"distances_sum":2277.7669100205667}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9263507326007333,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.5390625,"distances_sum":2314.293912021291}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.966689560439561,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.875,"distances_sum":2551.3072479393227}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9546588827838833,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8125,"distances_sum":2472.2856806306936}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9584878663003668,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.84375,"distances_sum":2493.5419030498338}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9439674908424913,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.6953125,"distances_sum":2432.279513399694}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9314076548451555,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.6484375,"distances_sum":2288.208236146469}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.966689560439561,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.875,"distances_sum":2551.3072479393227}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.966689560439561,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.875,"distances_sum":2551.3072479393227}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7153194028194034,"seconds":4.474073648452759e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.828125,"distances_sum":1306.6607812400744}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.38671875,"f1":null,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.421875,"distances_sum":820.6364229496552}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5732421875,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5732421875,"f1":0.7153194028194034,"seconds":4.474073648452759e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.828125,"distances_sum":1306.6607812400744}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.883007097069598,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.609375,"distances_sum":1917.404073119523}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.912162837162838,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.84375,"distances_sum":2148.068819110769}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8544921875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8544921875,"f1":0.912162837162838,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.84375,"distances_sum":2148.068819110769}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628033424908431,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2492.8002239646244}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9226533882783889,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.875,"distances_sum":2157.502914324677}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9692937271062275,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2530.474399098177}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9692937271062275,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2530.474399098177}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9692937271062275,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2530.474399098177}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8629037629037637,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.5390625,"distances_sum":1860.8266355782905}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8629037629037637,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.5390625,"distances_sum":1860.8266355782905}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9075299700299706,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.6015625,"distances_sum":2137.335325483287}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9075299700299706,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.6015625,"distances_sum":2137.335325483287}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9339972527472534,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.90625,"distances_sum":2287.024091869062}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9429429945054951,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.875,"distances_sum":2378.0151143274725}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9429429945054951,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.875,"distances_sum":2378.0151143274725}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90234375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9429429945054951,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.875,"distances_sum":2378.0151143274725}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6103515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9799293154761903,"recall":0.6103515625,"f1":0.7419414786602291,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.0703125,"distances_sum":1286.0453154220115}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":3,"bsize":5}, perf: {"precision":0.9789434523809523,"recall":0.6962890625,"f1":0.8046555874680879,"seconds":4.766508936882019e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.609375,"distances_sum":1486.1617960077924}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6962890625,"state":{"ssize":3,"bsize":5},"perf":{"precision":0.9789434523809523,"recall":0.6962890625,"f1":0.8046555874680879,"seconds":4.766508936882019e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.609375,"distances_sum":1486.1617960077924}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9897693452380951,"recall":0.873046875,"f1":0.9219067390942396,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.546875,"distances_sum":2000.8275188011817}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9912574404761905,"recall":0.8876953125,"f1":0.9321857829670335,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.546875,"distances_sum":2075.3275758251607}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9856956845238095,"recall":0.8544921875,"f1":0.910083536255412,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5859375,"distances_sum":1908.0247817703487}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.72265625, conf: {"ssize":5,"bsize":5}, perf: {"precision":0.9839471726190474,"recall":0.72265625,"f1":0.8220050348956606,"seconds":4.9658119678497314e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.8125,"distances_sum":1603.9759459896197}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":1,"bsize":8},"perf":{"precision":0.9912574404761905,"recall":0.8876953125,"f1":0.9321857829670335,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.546875,"distances_sum":2075.3275758251607}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":0.9870256696428572,"recall":0.939453125,"f1":0.9603916266025645,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8359375,"distances_sum":2203.3457289137773}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":0.9870256696428572,"recall":0.939453125,"f1":0.9603916266025645,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8359375,"distances_sum":2203.3457289137773}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":0.9870256696428572,"recall":0.939453125,"f1":0.9603916266025645,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8359375,"distances_sum":2203.3457289137773}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8141780094905102,"seconds":2.8870999813079834e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.421875,"distances_sum":1502.7483430449267}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.703125,"f1":0.8141780094905102,"seconds":2.8870999813079834e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.421875,"distances_sum":1502.7483430449267}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8641114094239103,"seconds":3.2763928174972534e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.78125,"distances_sum":1695.2886170988736}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9162322052947061,"seconds":3.3620744943618774e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.3203125,"distances_sum":2009.584679920764}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8564453125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8564453125,"f1":0.9162322052947061,"seconds":3.3620744943618774e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.3203125,"distances_sum":2009.584679920764}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9391311813186818,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.578125,"distances_sum":2197.644776246452}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9333479020979023,"seconds":3.5259872674942017e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.375,"distances_sum":2175.9044681112036}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9233974358974366,"seconds":3.417953848838806e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.3203125,"distances_sum":2040.4516288175248}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9391311813186818,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.578125,"distances_sum":2197.644776246452}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.89453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9391311813186818,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.578125,"distances_sum":2197.644776246452}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.704854520479521,"seconds":2.7157366275787354e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.0859375,"distances_sum":1133.9589240021712}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8612921800421809,"seconds":3.1962990760803223e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.0703125,"distances_sum":1748.1686124904568}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8612921800421809,"seconds":3.1962990760803223e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.0703125,"distances_sum":1748.1686124904568}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8943337912087922,"seconds":3.4421682357788086e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.3203125,"distances_sum":1893.8848043647142}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9013939185814194,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.421875,"distances_sum":1948.232944412099}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.9003522519147529,"seconds":3.4011900424957275e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.4140625,"distances_sum":1951.5843765392033}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.9013939185814194,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.421875,"distances_sum":1948.232944412099}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9748912545787549,"seconds":3.7178397178649902e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.9140625,"distances_sum":2418.572741648163}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9086970321345329,"seconds":3.390014171600342e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.4921875,"distances_sum":1985.6652776216115}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9594780219780222,"seconds":3.859400749206543e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8359375,"distances_sum":2320.3890422457002}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9748912545787549,"seconds":3.7178397178649902e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.9140625,"distances_sum":2418.572741648163}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9748912545787549,"seconds":3.7178397178649902e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.9140625,"distances_sum":2418.572741648163}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7094870407370414,"seconds":2.7846544981002808e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":6.96875,"distances_sum":1180.6941322113505}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8080579143079151,"seconds":3.0677765607833862e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":7.4453125,"distances_sum":1518.4586284616998}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7061997030747035,"seconds":2.7604401111602783e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":6.859375,"distances_sum":1185.9505688964987}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6953125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6953125,"f1":0.8080579143079151,"seconds":3.0677765607833862e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":7.4453125,"distances_sum":1518.4586284616998}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.8213297119547127,"seconds":2.950429916381836e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":7.4921875,"distances_sum":1534.7506281580193}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.937339743589744,"seconds":3.553926944732666e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":8.4375,"distances_sum":2136.7204378756696}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8872658591408599,"seconds":3.3620744943618774e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":8.1015625,"distances_sum":1906.858953117671}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9339228479853486,"seconds":3.6265701055526733e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":8.453125,"distances_sum":2171.252892332676}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.937339743589744,"seconds":3.553926944732666e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":8.4375,"distances_sum":2136.7204378756696}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9483173076923083,"seconds":3.6284327507019043e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":8.71875,"distances_sum":2258.2681638342574}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.973717948717949,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":8.859375,"distances_sum":2401.120220321463}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9675080128205131,"seconds":3.6563724279403687e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":8.8828125,"distances_sum":2355.6772180641465}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9713369963369964,"seconds":3.7606805562973022e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":8.84375,"distances_sum":2390.6262034210795}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9437213827838833,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":8.6328125,"distances_sum":2252.5858814838725}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.973717948717949,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":8.859375,"distances_sum":2401.120220321463}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.973717948717949,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":4.309415817260742e-5,"evaluations":8.859375,"distances_sum":2401.120220321463}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":2.045184373855591e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":5.7265625,"distances_sum":518.2313439993105}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2294921875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.2294921875,"f1":null,"seconds":2.045184373855591e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":5.7265625,"distances_sum":518.2313439993105}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2294921875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.2294921875,"f1":null,"seconds":2.045184373855591e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":5.7265625,"distances_sum":518.2313439993105}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":2.1792948246002197e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":5.7109375,"distances_sum":848.1769173797741}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2509765625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2509765625,"f1":null,"seconds":2.0060688257217407e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":5.46875,"distances_sum":627.4947436529657}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3828125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3828125,"f1":null,"seconds":2.1792948246002197e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":5.7109375,"distances_sum":848.1769173797741}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":5,"bsize":5}, perf: {"precision":null,"recall":0.755859375,"f1":null,"seconds":3.1739473342895508e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":7.8046875,"distances_sum":1773.2359645679858}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8774119977244985,"seconds":3.3956021070480347e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.15625,"distances_sum":1945.942199229947}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80078125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.80078125,"f1":0.8774119977244985,"seconds":3.3956021070480347e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.15625,"distances_sum":1945.942199229947}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8858693389943398,"seconds":3.4067779779434204e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.2109375,"distances_sum":1971.5543108378229}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9267373251748258,"seconds":3.38628888130188e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.3671875,"distances_sum":2209.8918655896505}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8940908050283061,"seconds":3.637745976448059e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.28125,"distances_sum":2022.3795943871285}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8948832417582425,"seconds":3.302469849586487e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.3984375,"distances_sum":1989.9331661950505}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9267373251748258,"seconds":3.38628888130188e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.3671875,"distances_sum":2209.8918655896505}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8720703125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9267373251748258,"seconds":3.38628888130188e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.3671875,"distances_sum":2209.8918655896505}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7182831057831064,"seconds":2.7082860469818115e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":6.84375,"distances_sum":1235.82986033032}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.578125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.578125,"f1":0.7182831057831064,"seconds":2.7082860469818115e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":6.84375,"distances_sum":1235.82986033032}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8486763236763246,"seconds":3.2391399145126343e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.7109375,"distances_sum":1741.345942333785}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8661604020979029,"seconds":3.1944364309310913e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.984375,"distances_sum":1781.1669832141786}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8661604020979029,"seconds":3.1944364309310913e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.984375,"distances_sum":1781.1669832141786}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9432749542124548,"seconds":3.5427510738372803e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.71875,"distances_sum":2274.403874358591}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564217032967037,"seconds":3.7122517824172974e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.7421875,"distances_sum":2358.257946123996}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9564217032967037,"seconds":3.7122517824172974e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.7421875,"distances_sum":2358.257946123996}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9564217032967037,"seconds":3.7122517824172974e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.7421875,"distances_sum":2358.257946123996}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.240234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.240234375,"f1":null,"seconds":1.9837170839309692e-6,"exhaustive_search_seconds":8.810311555862427e-7,"evaluations":6.0546875,"distances_sum":532.7808951975488}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.240234375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.240234375,"f1":null,"seconds":1.9837170839309692e-6,"exhaustive_search_seconds":8.810311555862427e-7,"evaluations":6.0546875,"distances_sum":532.7808951975488}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.240234375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.240234375,"f1":null,"seconds":1.9837170839309692e-6,"exhaustive_search_seconds":8.810311555862427e-7,"evaluations":6.0546875,"distances_sum":532.7808951975488}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.240234375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.240234375,"f1":null,"seconds":1.9837170839309692e-6,"exhaustive_search_seconds":8.810311555862427e-7,"evaluations":6.0546875,"distances_sum":532.7808951975488}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.8234182484182491,"seconds":3.0230730772018433e-6,"exhaustive_search_seconds":8.512288331985474e-7,"evaluations":7.6015625,"distances_sum":1644.212362709949}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8509391650016658,"seconds":3.216788172721863e-6,"exhaustive_search_seconds":8.512288331985474e-7,"evaluations":7.84375,"distances_sum":1789.2230506447518}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8509391650016658,"seconds":3.216788172721863e-6,"exhaustive_search_seconds":8.512288331985474e-7,"evaluations":7.84375,"distances_sum":1789.2230506447518}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9556604853479859,"seconds":3.6098062992095947e-6,"exhaustive_search_seconds":8.512288331985474e-7,"evaluations":8.7421875,"distances_sum":2484.6299982177766}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9474988553113559,"seconds":3.779307007789612e-6,"exhaustive_search_seconds":8.512288331985474e-7,"evaluations":8.671875,"distances_sum":2448.1819879815534}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9534111721611725,"seconds":3.635883331298828e-6,"exhaustive_search_seconds":8.512288331985474e-7,"evaluations":8.71875,"distances_sum":2465.9634977760797}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9339056776556783,"seconds":3.686174750328064e-6,"exhaustive_search_seconds":8.512288331985474e-7,"evaluations":8.4921875,"distances_sum":2315.92516918124}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9008215742590752,"seconds":3.339722752571106e-6,"exhaustive_search_seconds":8.512288331985474e-7,"evaluations":8.2734375,"distances_sum":2096.0718869639695}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9556604853479859,"seconds":3.6098062992095947e-6,"exhaustive_search_seconds":8.512288331985474e-7,"evaluations":8.7421875,"distances_sum":2484.6299982177766}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9745020604395608,"seconds":3.686174750328064e-6,"exhaustive_search_seconds":8.512288331985474e-7,"evaluations":8.875,"distances_sum":2587.9817847172226}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9754464285714288,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":8.512288331985474e-7,"evaluations":8.9296875,"distances_sum":2574.670053672986}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9570169413919417,"seconds":3.762543201446533e-6,"exhaustive_search_seconds":8.512288331985474e-7,"evaluations":8.75,"distances_sum":2466.7254806883548}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9754464285714288,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":8.512288331985474e-7,"evaluations":8.9296875,"distances_sum":2574.670053672986}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9754464285714288,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":8.512288331985474e-7,"evaluations":8.9296875,"distances_sum":2574.670053672986}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":2.2649765014648438e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":5.9140625,"distances_sum":741.2094169354704}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2412109375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2412109375,"f1":null,"seconds":2.080574631690979e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":5.9375,"distances_sum":557.7774694221097}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4306640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4306640625,"f1":null,"seconds":2.3096799850463867e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":6.2421875,"distances_sum":956.4485576454391}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4306640625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4306640625,"f1":null,"seconds":2.3096799850463867e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":6.2421875,"distances_sum":956.4485576454391}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":5,"bsize":4}, perf: {"precision":null,"recall":0.6787109375,"f1":null,"seconds":3.11434268951416e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.375,"distances_sum":1515.333031011033}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.546875,"f1":0.6879490301365306,"seconds":2.555549144744873e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":6.9765625,"distances_sum":1206.8774060237936}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":7,"bsize":3}, perf: {"precision":null,"recall":0.5556640625,"f1":null,"seconds":2.726912498474121e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.0390625,"distances_sum":1201.494329183448}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8439565642690652,"seconds":3.1311064958572388e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.8203125,"distances_sum":1690.928970113983}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8439565642690652,"seconds":3.1311064958572388e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.8203125,"distances_sum":1690.928970113983}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9513450091575093,"seconds":3.6191195249557495e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.734375,"distances_sum":2376.0267746247837}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8836767399267407,"seconds":3.5651028156280518e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.3515625,"distances_sum":1915.603319413889}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8897930194805205,"seconds":3.337860107421875e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.4453125,"distances_sum":1932.1679645681681}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9513450091575093,"seconds":3.6191195249557495e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.734375,"distances_sum":2376.0267746247837}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9513450091575093,"seconds":3.6191195249557495e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.734375,"distances_sum":2376.0267746247837}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8055069930069938,"seconds":3.118067979812622e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.765625,"distances_sum":1628.1201130396707}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5849609375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5849609375,"f1":0.7277345917970924,"seconds":2.9280781745910645e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.1640625,"distances_sum":1309.6671127076684}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6980505605505612,"seconds":2.7995556592941284e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":6.953125,"distances_sum":1218.5231283992246}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8067989302364311,"seconds":3.341585397720337e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.8203125,"distances_sum":1642.167421442983}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.8067989302364311,"seconds":3.341585397720337e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.8203125,"distances_sum":1642.167421442983}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8950950091575097,"seconds":3.343448042869568e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.1875,"distances_sum":2025.7205151518365}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9067203629703634,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.3671875,"distances_sum":2163.7653786691085}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9249203921078929,"seconds":3.6619603633880615e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.4921875,"distances_sum":2252.376151286315}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.873844905094906,"seconds":3.205612301826477e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.1640625,"distances_sum":1944.890507929166}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9249203921078929,"seconds":3.6619603633880615e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.4921875,"distances_sum":2252.376151286315}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9337886072261078,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.5859375,"distances_sum":2339.6438618311554}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9570341117216123,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.78125,"distances_sum":2486.087674784381}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681032509157512,"seconds":3.825873136520386e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.828125,"distances_sum":2556.7877735974484}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":11,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9660027472527477,"seconds":3.6731362342834473e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.859375,"distances_sum":2509.6191294192813}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9681032509157512,"seconds":3.825873136520386e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.828125,"distances_sum":2556.7877735974484}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9681032509157512,"seconds":3.825873136520386e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.828125,"distances_sum":2556.7877735974484}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7744633838383845,"seconds":2.8777867555618286e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":7.1875,"distances_sum":1510.4077686275318}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8657004453879463,"seconds":3.254041075706482e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.0390625,"distances_sum":1939.756896943691}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.43359375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.43359375,"f1":null,"seconds":2.3730099201202393e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":6.0,"distances_sum":922.1193513647189}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8657004453879463,"seconds":3.254041075706482e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.0390625,"distances_sum":1939.756896943691}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9577266483516488,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.8359375,"distances_sum":2512.6922468437338}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.953210851648352,"seconds":3.559514880180359e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.765625,"distances_sum":2503.8863450508757}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9475878288378291,"seconds":3.5408884286880493e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.75,"distances_sum":2419.0650122728553}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9151530760905768,"seconds":3.430992364883423e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.515625,"distances_sum":2197.910108254619}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9577266483516488,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.8359375,"distances_sum":2512.6922468437338}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9718005952380956,"seconds":4.060566425323486e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.90625,"distances_sum":2611.2275699621932}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9649439102564108,"seconds":3.682449460029602e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.84375,"distances_sum":2548.0743850503054}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9776041666666668,"seconds":3.6694109439849854e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.953125,"distances_sum":2636.1647684605014}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786286630036634,"seconds":4.000961780548096e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.9140625,"distances_sum":2661.2417139043937}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9713541666666672,"seconds":3.7420541048049927e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.9140625,"distances_sum":2579.1238687177324}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9668727106227111,"seconds":3.729015588760376e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.8828125,"distances_sum":2562.031982165792}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9781994047619049,"seconds":3.643333911895752e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.953125,"distances_sum":2622.4105414817395}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9628376831501837,"seconds":3.6582350730895996e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.8828125,"distances_sum":2531.06077210132}, best_list's length: 16, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786286630036634,"seconds":4.000961780548096e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.9140625,"distances_sum":2661.2417139043937}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786286630036634,"seconds":4.000961780548096e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.9140625,"distances_sum":2661.2417139043937}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2568359375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2568359375,"f1":null,"seconds":2.088025212287903e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":6.15625,"distances_sum":595.2990240694198}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8486445845820855,"seconds":3.298744559288025e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.8828125,"distances_sum":1759.1029386849655}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8486445845820855,"seconds":3.298744559288025e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.8828125,"distances_sum":1759.1029386849655}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8486445845820855,"seconds":3.298744559288025e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.8828125,"distances_sum":1759.1029386849655}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7509765625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8486445845820855,"seconds":3.298744559288025e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.8828125,"distances_sum":1759.1029386849655}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":2.250075340270996e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":5.4375,"distances_sum":781.6191951846616}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7830570471195479,"seconds":3.0193477869033813e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":7.171875,"distances_sum":1499.7374601309925}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6924927503052508,"seconds":2.7120113372802734e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":6.5,"distances_sum":1285.6576115080372}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6552734375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6552734375,"f1":0.7830570471195479,"seconds":3.0193477869033813e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":7.171875,"distances_sum":1499.7374601309925}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9616643772893775,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.734375,"distances_sum":2551.3712022160967}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7951225857475863,"seconds":2.814456820487976e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":7.421875,"distances_sum":1611.264666071865}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9051427738927746,"seconds":3.637745976448059e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.2734375,"distances_sum":2161.633833224639}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8448816808191818,"seconds":3.520399332046509e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":7.6796875,"distances_sum":1793.176278008666}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7970893689643699,"seconds":3.086403012275696e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":7.4921875,"distances_sum":1580.5508558140314}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.788117091242092,"seconds":2.7455389499664307e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":7.296875,"distances_sum":1543.3330174871624}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9616643772893775,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.734375,"distances_sum":2551.3712022160967}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9705185439560442,"seconds":3.516674041748047e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.84375,"distances_sum":2586.54014708269}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9724733599733604,"seconds":3.991648554801941e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.859375,"distances_sum":2590.157021749561}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9724733599733604,"seconds":3.991648554801941e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.859375,"distances_sum":2590.157021749561}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9724733599733604,"seconds":3.991648554801941e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.859375,"distances_sum":2590.157021749561}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2314453125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2314453125,"f1":null,"seconds":2.074986696243286e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":5.6015625,"distances_sum":522.7603697411714}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2314453125,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.2314453125,"f1":null,"seconds":2.074986696243286e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":5.6015625,"distances_sum":522.7603697411714}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2314453125,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.2314453125,"f1":null,"seconds":2.074986696243286e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":5.6015625,"distances_sum":522.7603697411714}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.87205658924409,"seconds":3.2708048820495605e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.34375,"distances_sum":2002.7572225405977}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7148018648018655,"seconds":2.9671937227249146e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.328125,"distances_sum":1399.950014460621}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.87205658924409,"seconds":3.2708048820495605e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.34375,"distances_sum":2002.7572225405977}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9332932692307698,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.7578125,"distances_sum":2382.568027933901}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9538003663003666,"seconds":3.7178397178649902e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.875,"distances_sum":2535.3962306282597}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9538003663003666,"seconds":3.7178397178649902e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.875,"distances_sum":2535.3962306282597}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9765625, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.9765625,"f1":0.9873511904761907,"seconds":4.2263418436050415e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.9921875,"distances_sum":2782.189349370021}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9755859375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9755859375,"f1":0.9866815476190477,"seconds":3.993511199951172e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.984375,"distances_sum":2777.4821716578485}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.975875686813187,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.9609375,"distances_sum":2687.5364500928113}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9712797619047623,"seconds":3.6582350730895996e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.9296875,"distances_sum":2662.435585506493}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9623569139194142,"seconds":3.8389116525650024e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.9375,"distances_sum":2592.9880954950127}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9765625,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9765625,"f1":0.9873511904761907,"seconds":4.2263418436050415e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.9921875,"distances_sum":2782.189349370021}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9765625,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9765625,"f1":0.9873511904761907,"seconds":4.2263418436050415e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.9921875,"distances_sum":2782.189349370021}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7152609543234548,"seconds":2.8349459171295166e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":7.1328125,"distances_sum":1265.5496605123199}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8624056499056507,"seconds":3.3229589462280273e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":7.9140625,"distances_sum":1722.912971713663}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8624056499056507,"seconds":3.3229589462280273e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":7.9140625,"distances_sum":1722.912971713663}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9536515567765573,"seconds":3.553926944732666e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.8046875,"distances_sum":2357.4160490658646}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9387362637362642,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.6796875,"distances_sum":2273.691739399004}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8725769022644031,"seconds":3.0007213354110718e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":7.7890625,"distances_sum":1760.4589002481398}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9536515567765573,"seconds":3.553926944732666e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.8046875,"distances_sum":2357.4160490658646}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9577781593406599,"seconds":3.7085264921188354e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.8046875,"distances_sum":2389.2357567583354}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763221153846158,"seconds":3.769993782043457e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.9375,"distances_sum":2490.1073986093957}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9535428113553119,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.7890625,"distances_sum":2335.1593047592305}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763221153846158,"seconds":3.769993782043457e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.9375,"distances_sum":2490.1073986093957}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763221153846158,"seconds":3.769993782043457e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.9375,"distances_sum":2490.1073986093957}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8401109307359316,"seconds":3.1925737857818604e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":7.8125,"distances_sum":1798.909549920579}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2392578125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2392578125,"f1":null,"seconds":1.9650906324386597e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":6.7109375,"distances_sum":530.6670343368311}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7373046875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.7373046875,"f1":0.8401109307359316,"seconds":3.1925737857818604e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":7.8125,"distances_sum":1798.909549920579}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9111242923742929,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.0859375,"distances_sum":2167.975838559285}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8795220404595413,"seconds":3.0603259801864624e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":7.96875,"distances_sum":2006.9040047331462}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8783282689532697,"seconds":3.259629011154175e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":7.875,"distances_sum":1991.2564024677367}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9111242923742929,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.0859375,"distances_sum":2167.975838559285}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9423420329670334,"seconds":3.725290298461914e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7734375,"distances_sum":2414.461856924202}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9142258782883791,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.6328125,"distances_sum":2231.4993109638885}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9423420329670334,"seconds":3.725290298461914e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7734375,"distances_sum":2414.461856924202}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8994140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9423420329670334,"seconds":3.725290298461914e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7734375,"distances_sum":2414.461856924202}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4296875,"f1":null,"seconds":4.110857844352722e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.546875,"distances_sum":1020.2572452037838}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58203125, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.58203125,"f1":null,"seconds":4.3977051973342896e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.984375,"distances_sum":1405.924015923699}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.58203125,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.58203125,"f1":null,"seconds":4.3977051973342896e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.984375,"distances_sum":1405.924015923699}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8869250541125548,"seconds":3.6209821701049805e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9375,"distances_sum":2120.348338867467}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.913341346153847,"seconds":4.149973392486572e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.125,"distances_sum":2293.9938795822673}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8073015526140535,"seconds":3.4440308809280396e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.4296875,"distances_sum":1696.3846517485085}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.853515625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.913341346153847,"seconds":4.149973392486572e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.125,"distances_sum":2293.9938795822673}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9534569597069601,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.71875,"distances_sum":2636.2002963950645}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9262019230769238,"seconds":4.198402166366577e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7109375,"distances_sum":2374.4118781729217}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9520318223443226,"seconds":4.362314939498901e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7421875,"distances_sum":2599.492071340586}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9226820054945063,"seconds":3.829598426818848e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.734375,"distances_sum":2363.453829297615}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9555288461538468,"seconds":4.252418875694275e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.828125,"distances_sum":2604.3152537944084}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9614068223443231,"seconds":4.187226295471191e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2637.3291034449067}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9184154387279396,"seconds":3.954395651817322e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6328125,"distances_sum":2350.0305453175224}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614068223443231,"seconds":4.187226295471191e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2637.3291034449067}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614068223443231,"seconds":4.187226295471191e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2637.3291034449067}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.6960187382062387,"seconds":4.684552550315857e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":6.4140625,"distances_sum":1316.7626471758326}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.552734375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.552734375,"f1":0.6960187382062387,"seconds":4.684552550315857e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":6.4140625,"distances_sum":1316.7626471758326}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.881075695138196,"seconds":6.20819628238678e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":7.9296875,"distances_sum":1975.4540208879137}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80078125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.80078125,"f1":0.881075695138196,"seconds":6.20819628238678e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":7.9296875,"distances_sum":1975.4540208879137}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9027248792873802,"seconds":6.336718797683716e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":7.9765625,"distances_sum":2126.390074230872}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8369140625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8369140625,"f1":0.9027248792873802,"seconds":6.336718797683716e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":7.9765625,"distances_sum":2126.390074230872}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8369140625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8369140625,"f1":0.9027248792873802,"seconds":6.336718797683716e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":7.9765625,"distances_sum":2126.390074230872}}, n: 9
inertia(cfft.distances) = 19.03033846645299
inertia(cdnet.distances) = 20.91670681691155
inertia(crand.distances) = 21.421618003341692
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8822222222222221
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8711111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9333333333333335
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8933333333333332
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9333333333333332
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222224
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9177777777777778
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.86
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 1, 2, 3, 3, 3, 3, 2, 3, 1, 3, 2, 1, 3, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 11, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 2, 3, 2, 3, 3, 2, 3, 1]
acc = 0.9
*** starting iteration: 1; err: [Inf, 0.37626666699446676] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.37626666699446676, 0.17344728949484445] ***
*** starting iteration: 2; err: [Inf, 0.37626666699446676, 0.17344728949484445] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.37626666699446676, 0.17344728949484445, 0.16136142756285293] ***
*** starting iteration: 3; err: [Inf, 0.37626666699446676, 0.17344728949484445, 0.16136142756285293] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.37626666699446676, 0.17344728949484445, 0.16136142756285293, 0.1594636065527456] ***
*** starting iteration: 4; err: [Inf, 0.37626666699446676, 0.17344728949484445, 0.16136142756285293, 0.1594636065527456] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.37626666699446676, 0.17344728949484445, 0.16136142756285293, 0.1594636065527456, 0.15755480429403826] ***
*** starting iteration: 5; err: [Inf, 0.37626666699446676, 0.17344728949484445, 0.16136142756285293, 0.1594636065527456, 0.15755480429403826] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.37626666699446676, 0.17344728949484445, 0.16136142756285293, 0.1594636065527456, 0.15755480429403826, 0.15723514478031356] ***
*** finished computation of 12 references, err: [Inf, 0.37626666699446676, 0.17344728949484445, 0.16136142756285293, 0.1594636065527456, 0.15755480429403826, 0.15723514478031356] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 8, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 13 centroids; started with 12
acc = 0.9133333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 12.224800068080988] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 12.224800068080988, 1.3955329114776993] ***
*** finished computation of 3 references, err: [Inf, 12.224800068080988, 1.3955329114776993] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 33]]
** centroid: 1, normalized-entropy: 0.9992954443621548, [(2, 31), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34924428865333934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34924428865333934, 0.21281460441990788] ***
*** finished computation of 7 references, err: [Inf, 0.34924428865333934, 0.21281460441990788] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 22]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 8), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 2]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41003053838095554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41003053838095554, 0.1953045380662741] ***
*** finished computation of 7 references, err: [Inf, 0.41003053838095554, 0.1953045380662741] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 23]]
** centroid: 3, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 4: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 9, 2]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(2, 9), (3, 2)]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6177555761715794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6177555761715794, 0.20920100473088069] ***
*** finished computation of 7 references, err: [Inf, 0.6177555761715794, 0.20920100473088069] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 2]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 14), (3, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 5, 22]]
** centroid: 5, normalized-entropy: 0.6912898694057888, [(2, 5), (3, 22)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4651084821024969] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4651084821024969, 0.16694114522368347] ***
*** starting iteration: 2; err: [Inf, 0.4651084821024969, 0.16694114522368347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4651084821024969, 0.16694114522368347, 0.1570029489806004] ***
*** starting iteration: 3; err: [Inf, 0.4651084821024969, 0.16694114522368347, 0.1570029489806004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4651084821024969, 0.16694114522368347, 0.1570029489806004, 0.15406193165620521] ***
*** starting iteration: 4; err: [Inf, 0.4651084821024969, 0.16694114522368347, 0.1570029489806004, 0.15406193165620521] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4651084821024969, 0.16694114522368347, 0.1570029489806004, 0.15406193165620521, 0.15323782164853764] ***
*** finished computation of 7 references, err: [Inf, 0.4651084821024969, 0.16694114522368347, 0.1570029489806004, 0.15406193165620521, 0.15323782164853764] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 7, 3]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 7), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 3]]
** centroid: 4, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4296798719118546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4296798719118546, 0.20338851428500665] ***
*** starting iteration: 2; err: [Inf, 0.4296798719118546, 0.20338851428500665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4296798719118546, 0.20338851428500665, 0.1890890880731946] ***
*** starting iteration: 3; err: [Inf, 0.4296798719118546, 0.20338851428500665, 0.1890890880731946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4296798719118546, 0.20338851428500665, 0.1890890880731946, 0.18544983327293074] ***
*** starting iteration: 4; err: [Inf, 0.4296798719118546, 0.20338851428500665, 0.1890890880731946, 0.18544983327293074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4296798719118546, 0.20338851428500665, 0.1890890880731946, 0.18544983327293074, 0.18473498600006077] ***
*** finished computation of 7 references, err: [Inf, 0.4296798719118546, 0.20338851428500665, 0.1890890880731946, 0.18544983327293074, 0.18473498600006077] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 19, 12]]
** centroid: 1, normalized-entropy: 0.9629004147713269, [(2, 19), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4992310358837085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4992310358837085, 0.21075234380171884] ***
*** starting iteration: 2; err: [Inf, 0.4992310358837085, 0.21075234380171884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4992310358837085, 0.21075234380171884, 0.18508518187249556] ***
*** starting iteration: 3; err: [Inf, 0.4992310358837085, 0.21075234380171884, 0.18508518187249556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4992310358837085, 0.21075234380171884, 0.18508518187249556, 0.1775434027044547] ***
*** starting iteration: 4; err: [Inf, 0.4992310358837085, 0.21075234380171884, 0.18508518187249556, 0.1775434027044547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4992310358837085, 0.21075234380171884, 0.18508518187249556, 0.1775434027044547, 0.1716207890770723] ***
*** starting iteration: 5; err: [Inf, 0.4992310358837085, 0.21075234380171884, 0.18508518187249556, 0.1775434027044547, 0.1716207890770723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4992310358837085, 0.21075234380171884, 0.18508518187249556, 0.1775434027044547, 0.1716207890770723, 0.16844724645181622] ***
*** starting iteration: 6; err: [Inf, 0.4992310358837085, 0.21075234380171884, 0.18508518187249556, 0.1775434027044547, 0.1716207890770723, 0.16844724645181622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4992310358837085, 0.21075234380171884, 0.18508518187249556, 0.1775434027044547, 0.1716207890770723, 0.16844724645181622, 0.1651259939030424] ***
*** starting iteration: 7; err: [Inf, 0.4992310358837085, 0.21075234380171884, 0.18508518187249556, 0.1775434027044547, 0.1716207890770723, 0.16844724645181622, 0.1651259939030424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4992310358837085, 0.21075234380171884, 0.18508518187249556, 0.1775434027044547, 0.1716207890770723, 0.16844724645181622, 0.1651259939030424, 0.16306400515572264] ***
*** starting iteration: 8; err: [Inf, 0.4992310358837085, 0.21075234380171884, 0.18508518187249556, 0.1775434027044547, 0.1716207890770723, 0.16844724645181622, 0.1651259939030424, 0.16306400515572264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4992310358837085, 0.21075234380171884, 0.18508518187249556, 0.1775434027044547, 0.1716207890770723, 0.16844724645181622, 0.1651259939030424, 0.16306400515572264, 0.16306400515572264] ***
*** finished computation of 7 references, err: [Inf, 0.4992310358837085, 0.21075234380171884, 0.18508518187249556, 0.1775434027044547, 0.1716207890770723, 0.16844724645181622, 0.1651259939030424, 0.16306400515572264, 0.16306400515572264] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 13, 4]]
** centroid: 3, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6119000030411665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6119000030411665, 0.258402456930079] ***
*** starting iteration: 2; err: [Inf, 0.6119000030411665, 0.258402456930079] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6119000030411665, 0.258402456930079, 0.25286913705494646] ***
*** starting iteration: 3; err: [Inf, 0.6119000030411665, 0.258402456930079, 0.25286913705494646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6119000030411665, 0.258402456930079, 0.25286913705494646, 0.25286913705494646] ***
*** finished computation of 7 references, err: [Inf, 0.6119000030411665, 0.258402456930079, 0.25286913705494646, 0.25286913705494646] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 7, 3]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 7), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 3]]
** centroid: 4, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5879000026355529] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5879000026355529, 0.262366862881879] ***
*** starting iteration: 2; err: [Inf, 0.5879000026355529, 0.262366862881879] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5879000026355529, 0.262366862881879, 0.2493753986888195] ***
*** starting iteration: 3; err: [Inf, 0.5879000026355529, 0.262366862881879, 0.2493753986888195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5879000026355529, 0.262366862881879, 0.2493753986888195, 0.23788557809726504] ***
*** starting iteration: 4; err: [Inf, 0.5879000026355529, 0.262366862881879, 0.2493753986888195, 0.23788557809726504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5879000026355529, 0.262366862881879, 0.2493753986888195, 0.23788557809726504, 0.23099694687689426] ***
*** starting iteration: 5; err: [Inf, 0.5879000026355529, 0.262366862881879, 0.2493753986888195, 0.23788557809726504, 0.23099694687689426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5879000026355529, 0.262366862881879, 0.2493753986888195, 0.23788557809726504, 0.23099694687689426, 0.2301529261201086] ***
*** finished computation of 7 references, err: [Inf, 0.5879000026355529, 0.262366862881879, 0.2493753986888195, 0.23788557809726504, 0.23099694687689426, 0.2301529261201086] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 4, 15]]
** centroid: 6, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5228000046609118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228000046609118, 0.27254526359165554] ***
*** starting iteration: 2; err: [Inf, 0.5228000046609118, 0.27254526359165554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228000046609118, 0.27254526359165554, 0.24977645905842255] ***
*** starting iteration: 3; err: [Inf, 0.5228000046609118, 0.27254526359165554, 0.24977645905842255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228000046609118, 0.27254526359165554, 0.24977645905842255, 0.23723070542178987] ***
*** starting iteration: 4; err: [Inf, 0.5228000046609118, 0.27254526359165554, 0.24977645905842255, 0.23723070542178987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228000046609118, 0.27254526359165554, 0.24977645905842255, 0.23723070542178987, 0.23015610962894054] ***
*** starting iteration: 5; err: [Inf, 0.5228000046609118, 0.27254526359165554, 0.24977645905842255, 0.23723070542178987, 0.23015610962894054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228000046609118, 0.27254526359165554, 0.24977645905842255, 0.23723070542178987, 0.23015610962894054, 0.2297288650053282] ***
*** finished computation of 7 references, err: [Inf, 0.5228000046609118, 0.27254526359165554, 0.24977645905842255, 0.23723070542178987, 0.23015610962894054, 0.2297288650053282] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 14, 7]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.3931000065559125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3931000065559125, 0.9893496913823231] ***
*** finished computation of 3 references, err: [Inf, 1.3931000065559125, 0.9893496913823231] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 39, 33]]
** centroid: 2, normalized-entropy: 0.9949848281859699, [(2, 39), (3, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9182999995408155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9182999995408155, 0.46498794654220604] ***
*** finished computation of 3 references, err: [Inf, 0.9182999995408155, 0.46498794654220604] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 8]]
** centroid: 1, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1979999819178635] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1979999819178635, 0.5631585470565332] ***
*** starting iteration: 2; err: [Inf, 1.1979999819178635, 0.5631585470565332] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1979999819178635, 0.5631585470565332, 0.539063220235504] ***
*** starting iteration: 3; err: [Inf, 1.1979999819178635, 0.5631585470565332, 0.539063220235504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1979999819178635, 0.5631585470565332, 0.539063220235504, 0.5328855246092747] ***
*** finished computation of 3 references, err: [Inf, 1.1979999819178635, 0.5631585470565332, 0.539063220235504, 0.5328855246092747] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 7]]
** centroid: 2, normalized-entropy: 0.710676853856123, [(2, 29), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0735000135763821] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0735000135763821, 0.9798320446816455] ***
*** starting iteration: 2; err: [Inf, 1.0735000135763821, 0.9798320446816455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0735000135763821, 0.9798320446816455, 0.9649695809806694] ***
*** starting iteration: 3; err: [Inf, 1.0735000135763821, 0.9798320446816455, 0.9649695809806694] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0735000135763821, 0.9798320446816455, 0.9649695809806694, 0.9615742886361462] ***
*** finished computation of 3 references, err: [Inf, 1.0735000135763821, 0.9798320446816455, 0.9649695809806694, 0.9615742886361462] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 37, 33]]
** centroid: 1, normalized-entropy: 0.9976432959863935, [(2, 37), (3, 33)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [11, 3, 0]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(1, 11), (2, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.702699994767389] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.702699994767389, 0.5877202746375007] ***
*** starting iteration: 2; err: [Inf, 1.702699994767389, 0.5877202746375007] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.702699994767389, 0.5877202746375007, 0.4888821976818397] ***
*** starting iteration: 3; err: [Inf, 1.702699994767389, 0.5877202746375007, 0.4888821976818397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.702699994767389, 0.5877202746375007, 0.4888821976818397, 0.46594403523834105] ***
*** finished computation of 3 references, err: [Inf, 1.702699994767389, 0.5877202746375007, 0.4888821976818397, 0.46594403523834105] ***
*** center 1: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 8]]
** centroid: 2, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5677012610698047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5677012610698047, 0.33543265578590875] ***
*** starting iteration: 2; err: [Inf, 0.5677012610698047, 0.33543265578590875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5677012610698047, 0.33543265578590875, 0.2849939775260296] ***
*** starting iteration: 3; err: [Inf, 0.5677012610698047, 0.33543265578590875, 0.2849939775260296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5677012610698047, 0.33543265578590875, 0.2849939775260296, 0.254190843950779] ***
*** starting iteration: 4; err: [Inf, 0.5677012610698047, 0.33543265578590875, 0.2849939775260296, 0.254190843950779] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5677012610698047, 0.33543265578590875, 0.2849939775260296, 0.254190843950779, 0.2359399055506323] ***
*** starting iteration: 5; err: [Inf, 0.5677012610698047, 0.33543265578590875, 0.2849939775260296, 0.254190843950779, 0.2359399055506323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5677012610698047, 0.33543265578590875, 0.2849939775260296, 0.254190843950779, 0.2359399055506323, 0.23107030170972173] ***
*** starting iteration: 6; err: [Inf, 0.5677012610698047, 0.33543265578590875, 0.2849939775260296, 0.254190843950779, 0.2359399055506323, 0.23107030170972173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5677012610698047, 0.33543265578590875, 0.2849939775260296, 0.254190843950779, 0.2359399055506323, 0.23107030170972173, 0.2274835293343898] ***
*** starting iteration: 7; err: [Inf, 0.5677012610698047, 0.33543265578590875, 0.2849939775260296, 0.254190843950779, 0.2359399055506323, 0.23107030170972173, 0.2274835293343898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5677012610698047, 0.33543265578590875, 0.2849939775260296, 0.254190843950779, 0.2359399055506323, 0.23107030170972173, 0.2274835293343898, 0.2274835293343898] ***
*** finished computation of 7 references, err: [Inf, 0.5677012610698047, 0.33543265578590875, 0.2849939775260296, 0.254190843950779, 0.2359399055506323, 0.23107030170972173, 0.2274835293343898, 0.2274835293343898] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 10]]
** centroid: 2, normalized-entropy: 0.9509560484549724, [(2, 17), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38374079003570166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38374079003570166, 0.19652358773618264] ***
*** starting iteration: 2; err: [Inf, 0.38374079003570166, 0.19652358773618264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38374079003570166, 0.19652358773618264, 0.18710583110616905] ***
*** starting iteration: 3; err: [Inf, 0.38374079003570166, 0.19652358773618264, 0.18710583110616905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38374079003570166, 0.19652358773618264, 0.18710583110616905, 0.18596560324683473] ***
*** starting iteration: 4; err: [Inf, 0.38374079003570166, 0.19652358773618264, 0.18710583110616905, 0.18596560324683473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38374079003570166, 0.19652358773618264, 0.18710583110616905, 0.18596560324683473, 0.18596560324683473] ***
*** finished computation of 7 references, err: [Inf, 0.38374079003570166, 0.19652358773618264, 0.18710583110616905, 0.18596560324683473, 0.18596560324683473] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 14]]
** centroid: 1, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 12]]
** centroid: 4, normalized-entropy: 0.9852281360342514, [(2, 16), (3, 12)]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29160159323229373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29160159323229373, 0.19552091088127316] ***
*** starting iteration: 2; err: [Inf, 0.29160159323229373, 0.19552091088127316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29160159323229373, 0.19552091088127316, 0.16234231941020982] ***
*** starting iteration: 3; err: [Inf, 0.29160159323229373, 0.19552091088127316, 0.16234231941020982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29160159323229373, 0.19552091088127316, 0.16234231941020982, 0.15599009194823588] ***
*** starting iteration: 4; err: [Inf, 0.29160159323229373, 0.19552091088127316, 0.16234231941020982, 0.15599009194823588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29160159323229373, 0.19552091088127316, 0.16234231941020982, 0.15599009194823588, 0.15518779592463394] ***
*** finished computation of 7 references, err: [Inf, 0.29160159323229373, 0.19552091088127316, 0.16234231941020982, 0.15599009194823588, 0.15518779592463394] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 7]]
** centroid: 1, normalized-entropy: 0.9640787648082293, [(2, 11), (3, 7)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0488876270756526] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0488876270756526, 0.6506431519914119] ***
*** starting iteration: 2; err: [Inf, 1.0488876270756526, 0.6506431519914119] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0488876270756526, 0.6506431519914119, 0.6380750247143477] ***
*** starting iteration: 3; err: [Inf, 1.0488876270756526, 0.6506431519914119, 0.6380750247143477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0488876270756526, 0.6506431519914119, 0.6380750247143477, 0.637249023144437] ***
*** finished computation of 3 references, err: [Inf, 1.0488876270756526, 0.6506431519914119, 0.6380750247143477, 0.637249023144437] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 33]]
** centroid: 1, normalized-entropy: 0.9969954265557693, [(2, 29), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [17, 2, 0]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(1, 17), (2, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5722923761910762] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5722923761910762, 0.3999605899185204] ***
*** starting iteration: 2; err: [Inf, 0.5722923761910762, 0.3999605899185204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5722923761910762, 0.3999605899185204, 0.39567791398517693] ***
*** starting iteration: 3; err: [Inf, 0.5722923761910762, 0.3999605899185204, 0.39567791398517693] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5722923761910762, 0.3999605899185204, 0.39567791398517693, 0.39466126149436326] ***
*** finished computation of 3 references, err: [Inf, 0.5722923761910762, 0.3999605899185204, 0.39567791398517693, 0.39466126149436326] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 30]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 8), (3, 30)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 3]]
** centroid: 2, normalized-entropy: 0.4220005168831531, [(2, 32), (3, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4903195265142701] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4903195265142701, 0.4939821496165909] ***
*** starting iteration: 2; err: [Inf, 1.4903195265142701, 0.4939821496165909] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4903195265142701, 0.4939821496165909, 0.396797579862011] ***
*** starting iteration: 3; err: [Inf, 1.4903195265142701, 0.4939821496165909, 0.396797579862011] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4903195265142701, 0.4939821496165909, 0.396797579862011, 0.3462853817053508] ***
*** finished computation of 3 references, err: [Inf, 1.4903195265142701, 0.4939821496165909, 0.396797579862011, 0.3462853817053508] ***
*** center 1: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 9]]
** centroid: 3, normalized-entropy: 0.7897492536625221, [(2, 29), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1665510915553368] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1665510915553368, 0.40439606583185067] ***
*** finished computation of 3 references, err: [Inf, 1.1665510915553368, 0.40439606583185067] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 32]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 32)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 2, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3045699971212315] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3045699971212315, 0.6617961153690755] ***
*** finished computation of 3 references, err: [Inf, 1.3045699971212315, 0.6617961153690755] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [17, 1, 0]]
** centroid: 1, normalized-entropy: 0.3095434291503252, [(1, 17), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 39, 33]]
** centroid: 2, normalized-entropy: 0.9949848281859699, [(2, 39), (3, 33)]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.8966302448610204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8966302448610204, 0.7269069889168331] ***
*** finished computation of 3 references, err: [Inf, 2.8966302448610204, 0.7269069889168331] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 8]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(2, 26), (3, 8)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [37, 3, 0]]
** centroid: 2, normalized-entropy: 0.3843115441264972, [(1, 37), (2, 3)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0347925838874388] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0347925838874388, 0.6336307877387048] ***
*** starting iteration: 2; err: [Inf, 1.0347925838874388, 0.6336307877387048] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0347925838874388, 0.6336307877387048, 0.5644688893835103] ***
*** starting iteration: 3; err: [Inf, 1.0347925838874388, 0.6336307877387048, 0.5644688893835103] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0347925838874388, 0.6336307877387048, 0.5644688893835103, 0.45200594601503247] ***
*** starting iteration: 4; err: [Inf, 1.0347925838874388, 0.6336307877387048, 0.5644688893835103, 0.45200594601503247] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0347925838874388, 0.6336307877387048, 0.5644688893835103, 0.45200594601503247, 0.40490364710417653] ***
*** starting iteration: 5; err: [Inf, 1.0347925838874388, 0.6336307877387048, 0.5644688893835103, 0.45200594601503247, 0.40490364710417653] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0347925838874388, 0.6336307877387048, 0.5644688893835103, 0.45200594601503247, 0.40490364710417653, 0.3911870754121621] ***
*** starting iteration: 6; err: [Inf, 1.0347925838874388, 0.6336307877387048, 0.5644688893835103, 0.45200594601503247, 0.40490364710417653, 0.3911870754121621] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0347925838874388, 0.6336307877387048, 0.5644688893835103, 0.45200594601503247, 0.40490364710417653, 0.3911870754121621, 0.3794328206204398] ***
*** starting iteration: 7; err: [Inf, 1.0347925838874388, 0.6336307877387048, 0.5644688893835103, 0.45200594601503247, 0.40490364710417653, 0.3911870754121621, 0.3794328206204398] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0347925838874388, 0.6336307877387048, 0.5644688893835103, 0.45200594601503247, 0.40490364710417653, 0.3911870754121621, 0.3794328206204398, 0.3753893476085389] ***
*** starting iteration: 8; err: [Inf, 1.0347925838874388, 0.6336307877387048, 0.5644688893835103, 0.45200594601503247, 0.40490364710417653, 0.3911870754121621, 0.3794328206204398, 0.3753893476085389] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0347925838874388, 0.6336307877387048, 0.5644688893835103, 0.45200594601503247, 0.40490364710417653, 0.3911870754121621, 0.3794328206204398, 0.3753893476085389, 0.3744847900921809] ***
*** finished computation of 3 references, err: [Inf, 1.0347925838874388, 0.6336307877387048, 0.5644688893835103, 0.45200594601503247, 0.40490364710417653, 0.3911870754121621, 0.3794328206204398, 0.3753893476085389, 0.3744847900921809] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 26, 4]]
** centroid: 2, normalized-entropy: 0.5665095065529052, [(2, 26), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 29]]
** centroid: 3, normalized-entropy: 0.6024308020404452, [(2, 5), (3, 29)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.700209778627373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.700209778627373, 0.3945436168095388] ***
*** starting iteration: 2; err: [Inf, 0.700209778627373, 0.3945436168095388] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.700209778627373, 0.3945436168095388, 0.39178889325335786] ***
*** starting iteration: 3; err: [Inf, 0.700209778627373, 0.3945436168095388, 0.39178889325335786] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.700209778627373, 0.3945436168095388, 0.39178889325335786, 0.391261024984005] ***
*** finished computation of 3 references, err: [Inf, 0.700209778627373, 0.3945436168095388, 0.39178889325335786, 0.391261024984005] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 30, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 10, 32]]
** centroid: 2, normalized-entropy: 0.7918583525674836, [(2, 10), (3, 32)]
*** center 3: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6428074473997679] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6428074473997679, 0.4460776005294953] ***
*** starting iteration: 2; err: [Inf, 0.6428074473997679, 0.4460776005294953] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6428074473997679, 0.4460776005294953, 0.3422621908619425] ***
*** starting iteration: 3; err: [Inf, 0.6428074473997679, 0.4460776005294953, 0.3422621908619425] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6428074473997679, 0.4460776005294953, 0.3422621908619425, 0.32451126811445064] ***
*** starting iteration: 4; err: [Inf, 0.6428074473997679, 0.4460776005294953, 0.3422621908619425, 0.32451126811445064] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6428074473997679, 0.4460776005294953, 0.3422621908619425, 0.32451126811445064, 0.32444471993157964] ***
*** finished computation of 3 references, err: [Inf, 0.6428074473997679, 0.4460776005294953, 0.3422621908619425, 0.32451126811445064, 0.32444471993157964] ***
*** center 1: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 8]]
** centroid: 3, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5889107791588996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5889107791588996, 0.42423867493042505] ***
*** finished computation of 3 references, err: [Inf, 0.5889107791588996, 0.42423867493042505] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 18]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(2, 30), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [36, 1, 0]]
** centroid: 3, normalized-entropy: 0.1792560669283214, [(1, 36), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7813866848907922] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7813866848907922, 0.3936657218568012] ***
*** finished computation of 3 references, err: [Inf, 0.7813866848907922, 0.3936657218568012] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 26, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 33]]
** centroid: 3, normalized-entropy: 0.8786744932173094, [(2, 14), (3, 33)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.45982683242618594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45982683242618594, 0.32752391540280174] ***
*** finished computation of 3 references, err: [Inf, 0.45982683242618594, 0.32752391540280174] ***
*** center 1: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 8]]
** centroid: 3, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5854932810890607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5854932810890607, 0.4828469278402557] ***
*** finished computation of 7 references, err: [Inf, 1.5854932810890607, 0.4828469278402557] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 20, 32]]
** centroid: 1, normalized-entropy: 0.961236604722876, [(2, 20), (3, 32)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41161464380586904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41161464380586904, 0.3068624180324911] ***
*** finished computation of 7 references, err: [Inf, 0.41161464380586904, 0.3068624180324911] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 7, 24]]
** centroid: 1, normalized-entropy: 0.7706290693639406, [(2, 7), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 9]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.698980754123986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.698980754123986, 0.8297156373049499] ***
*** finished computation of 7 references, err: [Inf, 3.698980754123986, 0.8297156373049499] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 25, 9]]
** centroid: 1, normalized-entropy: 0.8337649072106652, [(2, 25), (3, 9)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [37, 4, 0]]
** centroid: 2, normalized-entropy: 0.4612160405139095, [(1, 37), (2, 4)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.254399993687623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.254399993687623, 0.7515034295712407] ***
*** finished computation of 3 references, err: [Inf, 1.254399993687623, 0.7515034295712407] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [36, 2, 0]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(1, 36), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 14]]
** centroid: 2, normalized-entropy: 0.9103480624345157, [(2, 29), (3, 14)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6561999941176476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6561999941176476, 0.5720117640908328] ***
*** finished computation of 3 references, err: [Inf, 0.6561999941176476, 0.5720117640908328] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 24]]
** centroid: 1, normalized-entropy: 0.6631968402398286, [(2, 5), (3, 24)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 9]]
** centroid: 2, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.291199986029924] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.291199986029924, 0.5608109453908314] ***
*** finished computation of 3 references, err: [Inf, 5.291199986029924, 0.5608109453908314] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 3]]
** centroid: 1, normalized-entropy: 0.44886448872302936, [(2, 29), (3, 3)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 31]]
*** center 3: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4908000068718657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4908000068718657, 0.276698642063074] ***
*** finished computation of 7 references, err: [Inf, 0.4908000068718657, 0.276698642063074] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 3]]
** centroid: 4, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 10, 9]]
** centroid: 6, normalized-entropy: 0.9980008838722993, [(2, 10), (3, 9)]
*** center 7: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7074000062359521] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7074000062359521, 0.4193357173681507] ***
*** finished computation of 7 references, err: [Inf, 0.7074000062359521, 0.4193357173681507] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 21]]
** centroid: 1, normalized-entropy: 0.9071657675730821, [(2, 10), (3, 21)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 12]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5879000039275017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5879000039275017, 0.3820911769691993] ***
*** finished computation of 7 references, err: [Inf, 0.5879000039275017, 0.3820911769691993] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 29, 8]]
** centroid: 6, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7971999925369555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7971999925369555, 0.3836618610270157] ***
*** starting iteration: 2; err: [Inf, 0.7971999925369555, 0.3836618610270157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7971999925369555, 0.3836618610270157, 0.30269375151815064] ***
*** starting iteration: 3; err: [Inf, 0.7971999925369555, 0.3836618610270157, 0.30269375151815064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7971999925369555, 0.3836618610270157, 0.30269375151815064, 0.26153804552522725] ***
*** finished computation of 7 references, err: [Inf, 0.7971999925369555, 0.3836618610270157, 0.30269375151815064, 0.26153804552522725] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 21]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9220000016441523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9220000016441523, 0.4407884923980777] ***
*** starting iteration: 2; err: [Inf, 0.9220000016441523, 0.4407884923980777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9220000016441523, 0.4407884923980777, 0.41606615049313356] ***
*** starting iteration: 3; err: [Inf, 0.9220000016441523, 0.4407884923980777, 0.41606615049313356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9220000016441523, 0.4407884923980777, 0.41606615049313356, 0.3658367217949509] ***
*** finished computation of 7 references, err: [Inf, 0.9220000016441523, 0.4407884923980777, 0.41606615049313356, 0.3658367217949509] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 23]]
** centroid: 1, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 17, 10]]
** centroid: 2, normalized-entropy: 0.9509560484549724, [(2, 17), (3, 10)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5549000041395452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5549000041395452, 0.24646264643957896] ***
*** starting iteration: 2; err: [Inf, 0.5549000041395452, 0.24646264643957896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5549000041395452, 0.24646264643957896, 0.23005547472358792] ***
*** starting iteration: 3; err: [Inf, 0.5549000041395452, 0.24646264643957896, 0.23005547472358792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5549000041395452, 0.24646264643957896, 0.23005547472358792, 0.225659859179582] ***
*** finished computation of 7 references, err: [Inf, 0.5549000041395452, 0.24646264643957896, 0.23005547472358792, 0.225659859179582] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.475900039270265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.475900039270265, 0.6096767665269683] ***
*** starting iteration: 2; err: [Inf, 3.475900039270265, 0.6096767665269683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.475900039270265, 0.6096767665269683, 0.30570923285851803] ***
*** starting iteration: 3; err: [Inf, 3.475900039270265, 0.6096767665269683, 0.30570923285851803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.475900039270265, 0.6096767665269683, 0.30570923285851803, 0.261297519646266] ***
*** finished computation of 7 references, err: [Inf, 3.475900039270265, 0.6096767665269683, 0.30570923285851803, 0.261297519646266] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 4]]
** centroid: 6, normalized-entropy: 0.9852281360342514, [(2, 3), (3, 4)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37010000157129413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37010000157129413, 0.3001346408324569] ***
*** starting iteration: 2; err: [Inf, 0.37010000157129413, 0.3001346408324569] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37010000157129413, 0.3001346408324569, 0.28511995882359675] ***
*** starting iteration: 3; err: [Inf, 0.37010000157129413, 0.3001346408324569, 0.28511995882359675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37010000157129413, 0.3001346408324569, 0.28511995882359675, 0.27256448778954334] ***
*** finished computation of 7 references, err: [Inf, 0.37010000157129413, 0.3001346408324569, 0.28511995882359675, 0.27256448778954334] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 9]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 7, 8]]
** centroid: 4, normalized-entropy: 0.9967916319816367, [(2, 7), (3, 8)]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38569999810331923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38569999810331923, 0.2712060399775648] ***
*** starting iteration: 2; err: [Inf, 0.38569999810331923, 0.2712060399775648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38569999810331923, 0.2712060399775648, 0.2590321659693979] ***
*** starting iteration: 3; err: [Inf, 0.38569999810331923, 0.2712060399775648, 0.2590321659693979] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38569999810331923, 0.2712060399775648, 0.2590321659693979, 0.2406058324989537] ***
*** finished computation of 7 references, err: [Inf, 0.38569999810331923, 0.2712060399775648, 0.2590321659693979, 0.2406058324989537] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 13, 7]]
** centroid: 2, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36936994272861845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36936994272861845, 0.1841819015610852] ***
*** starting iteration: 2; err: [Inf, 0.36936994272861845, 0.1841819015610852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36936994272861845, 0.1841819015610852, 0.17873747608786328] ***
*** starting iteration: 3; err: [Inf, 0.36936994272861845, 0.1841819015610852, 0.17873747608786328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36936994272861845, 0.1841819015610852, 0.17873747608786328, 0.1772268732945686] ***
*** finished computation of 7 references, err: [Inf, 0.36936994272861845, 0.1841819015610852, 0.17873747608786328, 0.1772268732945686] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 3]]
** centroid: 4, normalized-entropy: 0.7793498372920851, [(2, 10), (3, 3)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 2]]
** centroid: 6, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3945768342136741] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3945768342136741, 0.1963915229389607] ***
*** starting iteration: 2; err: [Inf, 0.3945768342136741, 0.1963915229389607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3945768342136741, 0.1963915229389607, 0.1898080822839419] ***
*** starting iteration: 3; err: [Inf, 0.3945768342136741, 0.1963915229389607, 0.1898080822839419] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3945768342136741, 0.1963915229389607, 0.1898080822839419, 0.1854955204730675] ***
*** finished computation of 7 references, err: [Inf, 0.3945768342136741, 0.1963915229389607, 0.1898080822839419, 0.1854955204730675] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 13]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(2, 4), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 13]]
** centroid: 5, normalized-entropy: 0.9963165195589622, [(2, 15), (3, 13)]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35756775168125626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35756775168125626, 0.2088225652265165] ***
*** starting iteration: 2; err: [Inf, 0.35756775168125626, 0.2088225652265165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35756775168125626, 0.2088225652265165, 0.19360737614892531] ***
*** starting iteration: 3; err: [Inf, 0.35756775168125626, 0.2088225652265165, 0.19360737614892531] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35756775168125626, 0.2088225652265165, 0.19360737614892531, 0.19075392775060906] ***
*** finished computation of 7 references, err: [Inf, 0.35756775168125626, 0.2088225652265165, 0.19360737614892531, 0.19075392775060906] ***
*** center 1: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 7]]
** centroid: 7, normalized-entropy: 0.9494520153879484, [(2, 12), (3, 7)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666666, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9666666666666667
finished with 16
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666666, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9666666666666667
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.8469000062126152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8469000062126152, 0.3423814099659822] ***
*** starting iteration: 2; err: [Inf, 0.8469000062126152, 0.3423814099659822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8469000062126152, 0.3423814099659822, 0.32722095270267443] ***
*** starting iteration: 3; err: [Inf, 0.8469000062126152, 0.3423814099659822, 0.32722095270267443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8469000062126152, 0.3423814099659822, 0.32722095270267443, 0.3226997742875159] ***
*** starting iteration: 4; err: [Inf, 0.8469000062126152, 0.3423814099659822, 0.32722095270267443, 0.3226997742875159] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8469000062126152, 0.3423814099659822, 0.32722095270267443, 0.3226997742875159, 0.3208776253197855] ***
*** starting iteration: 5; err: [Inf, 0.8469000062126152, 0.3423814099659822, 0.32722095270267443, 0.3226997742875159, 0.3208776253197855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8469000062126152, 0.3423814099659822, 0.32722095270267443, 0.3226997742875159, 0.3208776253197855, 0.3202193198859888] ***
*** finished computation of 7 references, err: [Inf, 0.8469000062126152, 0.3423814099659822, 0.32722095270267443, 0.3226997742875159, 0.3208776253197855, 0.3202193198859888] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 22]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 11), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9854999925561786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9854999925561786, 0.5054895856677524] ***
*** starting iteration: 2; err: [Inf, 0.9854999925561786, 0.5054895856677524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9854999925561786, 0.5054895856677524, 0.49898543970252646] ***
*** starting iteration: 3; err: [Inf, 0.9854999925561786, 0.5054895856677524, 0.49898543970252646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9854999925561786, 0.5054895856677524, 0.49898543970252646, 0.49796207970651046] ***
*** starting iteration: 4; err: [Inf, 0.9854999925561786, 0.5054895856677524, 0.49898543970252646, 0.49796207970651046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9854999925561786, 0.5054895856677524, 0.49898543970252646, 0.49796207970651046, 0.4969941357822419] ***
*** finished computation of 7 references, err: [Inf, 0.9854999925561786, 0.5054895856677524, 0.49898543970252646, 0.49796207970651046, 0.4969941357822419] ***
*** center 1: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 33]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(2, 12), (3, 33)]
*** center 4: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 28, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38210000535439365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38210000535439365, 0.2596707605980728] ***
*** starting iteration: 2; err: [Inf, 0.38210000535439365, 0.2596707605980728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38210000535439365, 0.2596707605980728, 0.23977098533231497] ***
*** starting iteration: 3; err: [Inf, 0.38210000535439365, 0.2596707605980728, 0.23977098533231497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38210000535439365, 0.2596707605980728, 0.23977098533231497, 0.231316938920615] ***
*** starting iteration: 4; err: [Inf, 0.38210000535439365, 0.2596707605980728, 0.23977098533231497, 0.231316938920615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38210000535439365, 0.2596707605980728, 0.23977098533231497, 0.231316938920615, 0.22565696500408547] ***
*** starting iteration: 5; err: [Inf, 0.38210000535439365, 0.2596707605980728, 0.23977098533231497, 0.231316938920615, 0.22565696500408547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38210000535439365, 0.2596707605980728, 0.23977098533231497, 0.231316938920615, 0.22565696500408547, 0.22253600410615337] ***
*** starting iteration: 6; err: [Inf, 0.38210000535439365, 0.2596707605980728, 0.23977098533231497, 0.231316938920615, 0.22565696500408547, 0.22253600410615337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38210000535439365, 0.2596707605980728, 0.23977098533231497, 0.231316938920615, 0.22565696500408547, 0.22253600410615337, 0.22230771079845335] ***
*** finished computation of 7 references, err: [Inf, 0.38210000535439365, 0.2596707605980728, 0.23977098533231497, 0.231316938920615, 0.22565696500408547, 0.22253600410615337, 0.22230771079845335] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 7]]
** centroid: 4, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 7: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666666, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 17
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666666, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 18
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.5349000093725417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5349000093725417, 0.2404181887129008] ***
*** starting iteration: 2; err: [Inf, 0.5349000093725417, 0.2404181887129008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5349000093725417, 0.2404181887129008, 0.2319925612924637] ***
*** starting iteration: 3; err: [Inf, 0.5349000093725417, 0.2404181887129008, 0.2319925612924637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5349000093725417, 0.2404181887129008, 0.2319925612924637, 0.2303129145489278] ***
*** starting iteration: 4; err: [Inf, 0.5349000093725417, 0.2404181887129008, 0.2319925612924637, 0.2303129145489278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5349000093725417, 0.2404181887129008, 0.2319925612924637, 0.2303129145489278, 0.2303129145489278] ***
*** finished computation of 7 references, err: [Inf, 0.5349000093725417, 0.2404181887129008, 0.2319925612924637, 0.2303129145489278, 0.2303129145489278] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 17, 5]]
** centroid: 6, normalized-entropy: 0.7732266742876346, [(2, 17), (3, 5)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5827999992113254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5827999992113254, 0.24219201602518264] ***
*** starting iteration: 2; err: [Inf, 0.5827999992113254, 0.24219201602518264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5827999992113254, 0.24219201602518264, 0.23718140390582618] ***
*** starting iteration: 3; err: [Inf, 0.5827999992113254, 0.24219201602518264, 0.23718140390582618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5827999992113254, 0.24219201602518264, 0.23718140390582618, 0.23678492210279922] ***
*** finished computation of 7 references, err: [Inf, 0.5827999992113254, 0.24219201602518264, 0.23718140390582618, 0.23678492210279922] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 14]]
** centroid: 1, normalized-entropy: 0.8812908992306927, [(2, 6), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.448300003797264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.448300003797264, 0.25459153164240594] ***
*** starting iteration: 2; err: [Inf, 0.448300003797264, 0.25459153164240594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.448300003797264, 0.25459153164240594, 0.23181543061611162] ***
*** starting iteration: 3; err: [Inf, 0.448300003797264, 0.25459153164240594, 0.23181543061611162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.448300003797264, 0.25459153164240594, 0.23181543061611162, 0.22573783496548702] ***
*** starting iteration: 4; err: [Inf, 0.448300003797264, 0.25459153164240594, 0.23181543061611162, 0.22573783496548702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.448300003797264, 0.25459153164240594, 0.23181543061611162, 0.22573783496548702, 0.22573783496548702] ***
*** finished computation of 7 references, err: [Inf, 0.448300003797264, 0.25459153164240594, 0.23181543061611162, 0.22573783496548702, 0.22573783496548702] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 13, 7]]
** centroid: 6, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
*** center 7: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666666, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9733333333333333
finished with 20
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.3785891070581344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3785891070581344, 0.18384411952462382] ***
*** finished computation of 7 references, err: [Inf, 0.3785891070581344, 0.18384411952462382] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 9, 3]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 9), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 4]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 16), (3, 4)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4360887143314028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4360887143314028, 0.19799975991789817] ***
*** finished computation of 7 references, err: [Inf, 0.4360887143314028, 0.19799975991789817] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 25, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 15]]
** centroid: 4, normalized-entropy: 1.0, [(2, 15), (3, 15)]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.449037753135247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.449037753135247, 0.18157418614690146] ***
*** finished computation of 7 references, err: [Inf, 0.449037753135247, 0.18157418614690146] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 19, 7]]
** centroid: 5, normalized-entropy: 0.8403586716091169, [(2, 19), (3, 7)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4912000079279912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4912000079279912, 0.2532999270215257] ***
*** finished computation of 7 references, err: [Inf, 0.4912000079279912, 0.2532999270215257] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 17, 4]]
** centroid: 5, normalized-entropy: 0.7024665512903904, [(2, 17), (3, 4)]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.481599998374394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.481599998374394, 0.2960067741401983] ***
*** finished computation of 7 references, err: [Inf, 0.481599998374394, 0.2960067741401983] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 25, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5389000070353158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5389000070353158, 0.2468630623694949] ***
*** finished computation of 7 references, err: [Inf, 0.5389000070353158, 0.2468630623694949] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 13, 3]]
** centroid: 5, normalized-entropy: 0.6962122601251459, [(2, 13), (3, 3)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666666, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9733333333333333
finished with 20
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666666, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9733333333333333
finished with 20
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666666, 0.8733333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9733333333333333
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.48888888888889, 3.072222222222222, 5.5055555555555555, 2.155555555555556], [4.705263157894737, 3.1578947368421058, 1.394736842105263, 0.18421052631578952], [5.5, 2.6733333333333333, 3.9666666666666672, 1.2666666666666666], [5.2176470588235295, 3.6352941176470583, 1.5235294117647058, 0.32941176470588235], [7.6000000000000005, 3.733333333333333, 6.400000000000001, 2.2333333333333334], [6.441176470588236, 2.9176470588235293, 4.658823529411766, 1.435294117647059], [6.12, 2.54, 5.0, 1.7400000000000002], [7.483333333333333, 2.8833333333333333, 6.433333333333334, 1.9833333333333334]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 1, 3, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.066666666666666, 2.9333333333333336, 4.766666666666667, 1.5166666666666666], [5.992857142857142, 2.7214285714285715, 5.028571428571429, 1.8214285714285714], [5.029629629629629, 3.440740740740741, 1.4666666666666666, 0.2518518518518518], [7.640000000000001, 3.1000000000000005, 6.42, 2.04], [5.2, 2.414285714285714, 3.457142857142857, 1.0714285714285714], [6.688888888888888, 3.011111111111111, 4.688888888888889, 1.4666666666666668], [6.6499999999999995, 3.014285714285714, 5.6, 2.0785714285714287], [5.772222222222221, 2.6999999999999997, 4.15, 1.277777777777778]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 2, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.5, 2.5941176470588236, 4.0, 1.211764705882353], [7.4, 3.125, 6.2, 2.0875], [5.375, 3.891666666666666, 1.491666666666667, 0.275], [4.3999999999999995, 2.733333333333333, 1.2666666666666668, 0.19999999999999998], [6.561111111111112, 3.0611111111111113, 5.5055555555555555, 2.1444444444444444], [6.230769230769231, 2.9230769230769225, 4.507692307692308, 1.4769230769230772], [5.914285714285714, 2.857142857142857, 4.957142857142856, 1.8571428571428572], [4.954545454545454, 3.2818181818181817, 1.486363636363636, 0.20909090909090916]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 1, 3, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[71, 3, 2, 15, 1, 2, 8, 22, 18, 30, 19, 1, 1, 1, 39, 33, 31, 15, 16, 43, 18, 39, 28, 7, 17, 1, 36, 20, 11, 31, 21, 26, 33, 23, 24, 10, 27, 29, 17, 28, 35, 29, 40, 20, 34, 32, 32, 41, 20, 2, 33, 21, 15, 54, 40, 50, 49, 35, 58, 50, 34, 7, 22, 45, 38, 43, 16, 16, 23, 35, 29, 34, 20, 43, 23, 31, 9, 52, 41, 34, 39, 49, 29, 49, 27, 38, 41, 27, 33, 43, 37, 50, 27, 24, 51, 30, 19, 13, 36, 30, 45, 38, 26, 23, 35, 36, 37, 3, 39, 41, 33, 34, 38, 29, 34, 27, 34, 44, 46, 45, 39, 30, 45, 4, 20, 77, 17, 27, 32, 21, 28, 37, 25, 43, 43, 37, 25, 48, 42, 31, 60, 3, 39, 41, 25, 61, 16, 7, 42, 40, 26, 23, 23, 43, 33, 37, 30, 22, 21, 34, 20, 69, 33, 28, 27, 43, 41, 32, 45, 32, 40, 32, 47, 42, 56, 32, 38, 23, 53, 73, 43, 29, 42, 43, 52, 29, 41, 26, 1, 24, 32, 3, 61, 39, 25, 36, 20, 29, 20, 21, 46, 33, 35, 42, 53, 21, 52, 38, 34, 30, 30, 43, 36, 36, 54, 41, 37, 44, 39, 39, 25, 29, 48, 40, 21, 48, 38, 39, 36, 37, 56, 44, 20, 26, 29, 37, 77, 47, 19, 24, 34, 45, 50, 19, 32, 37, 61, 63, 40, 23, 31, 26, 46, 45, 19, 31, 39, 49, 34, 45, 43, 1, 40, 39, 32, 26, 36, 40, 36, 31, 25, 13, 29, 78, 68, 36, 46, 58, 37, 47, 25, 55, 29, 28, 32, 54, 62, 42, 33, 37, 39, 20, 38, 35, 21, 56, 31, 32, 42, 36]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.625, speedup = 0.37658785645640996, eval_ratio = 0.041763)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.3619791666666664,"f1":null,"seconds":4.5802444219589233e-5,"exhaustive_search_seconds":0.0002464689314365387,"evaluations":337.8671875,"distances_sum":1751.8153484274114}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5295138888888885,"recall":0.5295138888888885,"f1":0.5295138888888885,"seconds":6.631948053836823e-5,"exhaustive_search_seconds":0.0002464689314365387,"evaluations":377.2578125,"distances_sum":1649.435436999538}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6545138888888885,"recall":0.6545138888888885,"f1":0.6545138888888885,"seconds":0.00013707391917705536,"exhaustive_search_seconds":0.0002464689314365387,"evaluations":415.9609375,"distances_sum":1593.1507333967347}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7317708333333328,"recall":0.7317708333333328,"f1":0.7317708333333328,"seconds":0.0001757591962814331,"exhaustive_search_seconds":0.0002464689314365387,"evaluations":456.140625,"distances_sum":1569.605635279975}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7751736111111105,"recall":0.7751736111111105,"f1":0.7751736111111105,"seconds":0.0002203918993473053,"exhaustive_search_seconds":0.0002464689314365387,"evaluations":496.5390625,"distances_sum":1556.8122203945322}
KCenters.DeloneInvIndex> reached performance {"precision":0.8072916666666659,"recall":0.8072916666666659,"f1":0.8072916666666659,"seconds":0.0002559293061494827,"exhaustive_search_seconds":0.0002464689314365387,"evaluations":535.15625,"distances_sum":1550.1454991278986}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8069999999999999, speedup = 1.632412315771809, eval_ratio = 0.053319000000000005)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
