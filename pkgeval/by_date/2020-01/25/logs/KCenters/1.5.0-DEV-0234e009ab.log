Julia Version 1.5.0-DEV.150
Commit 0234e009ab (2020-01-25 18:06 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed Missings ──────────────────── v0.4.3
 Installed KCenters ──────────────────── v0.1.9
 Installed TableTraits ───────────────── v1.0.0
 Installed DataStructures ────────────── v0.17.9
 Installed StatsBase ─────────────────── v0.32.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataFrames ────────────────── v0.20.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed Compat ────────────────────── v3.2.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed Tables ────────────────────── v0.2.11
 Installed OrderedCollections ────────── v1.1.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Parsers ───────────────────── v0.3.10
 Installed Reexport ──────────────────── v0.2.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed JSON ──────────────────────── v0.21.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed MLDataPattern ─────────────── v0.5.0
 Installed InvertedIndices ───────────── v1.0.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_9qucSH/Project.toml`
 [no changes]
  Updating `/tmp/jl_9qucSH/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_9qucSH/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 155.96999999999997
[ Info: 80.99999999999997
[ Info: 44.44999999999999
[ Info: 24.250000000000007
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.2399983987154
[ Info: 76.3400011618807
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 17.928185104121262
inertia(cdnet.distances) = 24.35724500938005
inertia(crand.distances) = 19.250651192274283
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4072265625,"f1":null,"seconds":4.060566425323486e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":6.3984375,"distances_sum":1137.6583052165051}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.521484375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.521484375,"f1":0.6717183857808862,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":7.4921875,"distances_sum":1478.4466744919116}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8603453837828846,"seconds":0.00013055838644504547,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.2265625,"distances_sum":2277.70926101276}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8603453837828846,"seconds":0.00013055838644504547,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.2265625,"distances_sum":2277.70926101276}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9451694139194146,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.8828125,"distances_sum":2824.4884095624407}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9264256576756584,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.6640625,"distances_sum":2671.322891373511}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8853396603396613,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.5,"distances_sum":2379.2954633248164}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9451694139194146,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.8828125,"distances_sum":2824.4884095624407}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":12,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9660943223443225,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.8828125,"distances_sum":2961.113195505115}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9687156593406597,"seconds":6.474554538726807e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.9296875,"distances_sum":2951.665627401164}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.946663232600733,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.796875,"distances_sum":2816.646880548743}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9687156593406597,"seconds":6.474554538726807e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.9296875,"distances_sum":2951.665627401164}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9687156593406597,"seconds":6.474554538726807e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.9296875,"distances_sum":2951.665627401164}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4345703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4345703125,"f1":null,"seconds":4.248693585395813e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":6.765625,"distances_sum":933.989843670898}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.876975108225109,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.3515625,"distances_sum":1969.0947657796066}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.876975108225109,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.3515625,"distances_sum":1969.0947657796066}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.894808836996338,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.703125,"distances_sum":2061.684802314675}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8193359375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8193359375,"f1":0.894808836996338,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.703125,"distances_sum":2061.684802314675}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9306948260073267,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.7265625,"distances_sum":2325.0768150931317}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612809065934067,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8671875,"distances_sum":2535.047983229862}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9612809065934067,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8671875,"distances_sum":2535.047983229862}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9612809065934067,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8671875,"distances_sum":2535.047983229862}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.16015625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.16015625,"f1":null,"seconds":3.3229589462280273e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.265625,"distances_sum":397.3331454679752}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37890625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.37890625,"f1":null,"seconds":3.883615136146545e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.8984375,"distances_sum":881.487871046439}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8728682775557786,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.4609375,"distances_sum":2020.9708854620983}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8728682775557786,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.4609375,"distances_sum":2020.9708854620983}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9024584790209798,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.671875,"distances_sum":2173.970424920571}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8736040001665011,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.421875,"distances_sum":2041.7346173059805}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8310546875,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.8310546875,"f1":0.9024584790209798,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.671875,"distances_sum":2173.970424920571}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.950154532967033,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8046875,"distances_sum":2552.5244684170575}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9671531593406596,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2652.052136659229}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":13,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.958092948717949,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8203125,"distances_sum":2579.0021101358648}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":12,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.951980311355312,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.828125,"distances_sum":2549.3459086477915}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.917957563270064,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6484375,"distances_sum":2301.530183171639}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.95917467948718,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.859375,"distances_sum":2622.0292909452487}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9520947802197806,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7890625,"distances_sum":2559.4936335400666}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9671531593406596,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2652.052136659229}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9671531593406596,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2652.052136659229}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.525390625,"f1":0.6715687090687094,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.9296875,"distances_sum":1168.7671194178504}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.515625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.515625,"f1":null,"seconds":4.30084764957428e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.8515625,"distances_sum":1175.6785870636654}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.525390625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.525390625,"f1":0.6715687090687094,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.9296875,"distances_sum":1168.7671194178504}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7776045135420141,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.5546875,"distances_sum":1513.484410260335}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6298828125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6298828125,"f1":0.7576905733155741,"seconds":4.71062958240509e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.5234375,"distances_sum":1433.4000120493686}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9031052281052288,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.65625,"distances_sum":2030.7606929770548}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83203125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.83203125,"f1":0.9031052281052288,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.65625,"distances_sum":2030.7606929770548}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9577266483516488,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8515625,"distances_sum":2360.4584118990015}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9292525183150189,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.71875,"distances_sum":2177.4436731887563}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9577266483516488,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8515625,"distances_sum":2360.4584118990015}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9577266483516488,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8515625,"distances_sum":2360.4584118990015}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1435546875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1435546875,"f1":null,"seconds":2.9206275939941406e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":4.6796875,"distances_sum":370.85262081501395}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8074642371517379,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.859375,"distances_sum":1699.110278379131}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5166015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5166015625,"f1":null,"seconds":3.995373845100403e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.609375,"distances_sum":1199.226580353624}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69921875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.69921875,"f1":0.8074642371517379,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.859375,"distances_sum":1699.110278379131}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9544700091575096,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8125,"distances_sum":2407.1716190690913}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9331590284715291,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.796875,"distances_sum":2273.1853318887793}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9282483141858148,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7734375,"distances_sum":2243.4863654092355}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9544700091575096,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8125,"distances_sum":2407.1716190690913}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9541583416583421,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.84375,"distances_sum":2424.5278759589182}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9719150641025642,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.921875,"distances_sum":2544.842957666355}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9719150641025642,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.921875,"distances_sum":2544.842957666355}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9719150641025642,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.921875,"distances_sum":2544.842957666355}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1796875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1796875,"f1":null,"seconds":3.0901283025741577e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.8046875,"distances_sum":433.9565449293726}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8453607156732166,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.296875,"distances_sum":1775.1326973433681}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19921875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.19921875,"f1":null,"seconds":3.160908818244934e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.921875,"distances_sum":475.0804842367738}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.8231351981351989,"seconds":4.6584755182266235e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.9453125,"distances_sum":1679.2663118288624}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.74609375,"f1":0.8453607156732166,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.296875,"distances_sum":1775.1326973433681}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8970019563769572,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5390625,"distances_sum":2032.5697685794264}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9534626831501836,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.875,"distances_sum":2423.1102290328204}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9713942307692309,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.921875,"distances_sum":2535.5239066185036}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9189820596070603,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6796875,"distances_sum":2152.76841429442}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9367616758241765,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7578125,"distances_sum":2275.969095745796}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8660750707625717,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4140625,"distances_sum":1876.0459396966125}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8619713619713628,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.40625,"distances_sum":1867.261064428189}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9713942307692309,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.921875,"distances_sum":2535.5239066185036}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9819940476190481,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.984375,"distances_sum":2604.9970923424853}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9777529761904767,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2583.207001039132}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723214285714289,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2541.4972445913204}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190481,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.984375,"distances_sum":2604.9970923424853}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190481,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.984375,"distances_sum":2604.9970923424853}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.825607205294706,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8046875,"distances_sum":1719.049733620912}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.619140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.619140625,"f1":0.7505693958818965,"seconds":4.326924681663513e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.0078125,"distances_sum":1449.0531474805605}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8413903804528812,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.9140625,"distances_sum":1791.0668439507}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8413903804528812,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.9140625,"distances_sum":1791.0668439507}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9441277472527477,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.765625,"distances_sum":2372.148257926273}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9257414460539466,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.640625,"distances_sum":2230.8931594611686}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9296588827838835,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6015625,"distances_sum":2257.0953619177603}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9441277472527477,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.765625,"distances_sum":2372.148257926273}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.973717948717949,"seconds":6.491318345069885e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2554.427111258476}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9526499542124549,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.796875,"distances_sum":2430.968876157264}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.955586080586081,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8515625,"distances_sum":2437.294296982104}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9692765567765571,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8984375,"distances_sum":2518.391034844253}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9603823260073266,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8984375,"distances_sum":2454.038784874437}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.973717948717949,"seconds":6.491318345069885e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2554.427111258476}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.973717948717949,"seconds":6.491318345069885e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2554.427111258476}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3681640625, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.3681640625,"f1":0.5194173881673879,"seconds":3.771856427192688e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.1484375,"distances_sum":883.5594947901368}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8395130910755919,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.1015625,"distances_sum":1913.462689180878}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.6871885059385064,"seconds":4.274770617485046e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.1015625,"distances_sum":1329.5632769136157}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.625,"f1":0.7524570915195922,"seconds":4.7907233238220215e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.59375,"distances_sum":1521.5429129278677}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.8395130910755919,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.1015625,"distances_sum":1913.462689180878}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9114729020979028,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.859375,"distances_sum":2172.0710105315575}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.867895646020647,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.3203125,"distances_sum":2043.8712347355374}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9543612637362645,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8671875,"distances_sum":2518.6155853721975}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8596216283716293,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.34375,"distances_sum":1953.404042333821}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8425865800865809,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.203125,"distances_sum":1903.6093674645924}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9201038544788552,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.84375,"distances_sum":2274.9667667698254}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9059841200466209,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7890625,"distances_sum":2171.514264415022}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9543612637362645,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8671875,"distances_sum":2518.6155853721975}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9611320970695978,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.859375,"distances_sum":2584.5276036312257}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9730311355311358,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2641.0651132705034}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667639652014657,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2592.434172723675}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.969144917582418,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8984375,"distances_sum":2617.189994629648}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9730311355311358,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2641.0651132705034}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9730311355311358,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2641.0651132705034}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.19921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.19921875,"f1":null,"seconds":3.3210963010787964e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.4765625,"distances_sum":442.1348998227253}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.19921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.19921875,"f1":null,"seconds":3.3210963010787964e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.4765625,"distances_sum":442.1348998227253}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7197265625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7197265625,"f1":0.8273310023310031,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.921875,"distances_sum":1556.8305022571176}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2451171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2451171875,"f1":null,"seconds":3.0882656574249268e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.5703125,"distances_sum":492.44927610862123}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7197265625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7197265625,"f1":0.8273310023310031,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.921875,"distances_sum":1556.8305022571176}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9214889277389284,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.515625,"distances_sum":2120.4620551910702}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.865234375,"f1":0.9214889277389284,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.515625,"distances_sum":2120.4620551910702}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628033424908429,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.859375,"distances_sum":2323.918926039613}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9614812271062275,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8203125,"distances_sum":2323.2720656600322}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591059981684986,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8203125,"distances_sum":2310.169519874225}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9566105769230773,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8203125,"distances_sum":2291.863099011862}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9566105769230774,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.84375,"distances_sum":2274.028808798751}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9435725732600736,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.7265625,"distances_sum":2209.506260508039}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628033424908429,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.859375,"distances_sum":2323.918926039613}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628033424908429,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.859375,"distances_sum":2323.918926039613}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5380859375, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5380859375,"f1":null,"seconds":4.103407263755798e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.875,"distances_sum":1000.3429379836002}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3984375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3984375,"f1":null,"seconds":3.432855010032654e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.7265625,"distances_sum":789.7892502233854}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5380859375,"state":{"ssize":4,"bsize":3},"perf":{"precision":null,"recall":0.5380859375,"f1":null,"seconds":4.103407263755798e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.875,"distances_sum":1000.3429379836002}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9189674908424912,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4453125,"distances_sum":1959.149626886214}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8218937312687321,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.8125,"distances_sum":1441.3831417871718}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7917131479631486,"seconds":4.542991518974304e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.46875,"distances_sum":1420.682733653879}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8407309704184712,"seconds":4.7478824853897095e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.84375,"distances_sum":1557.9963204679077}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8583984375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8583984375,"f1":0.9189674908424912,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4453125,"distances_sum":1959.149626886214}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.945100732600733,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.71875,"distances_sum":2143.81052341512}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9498912545787551,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7265625,"distances_sum":2206.911003165419}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9483573717948723,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.671875,"distances_sum":2204.7379851471683}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9159689269064276,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5546875,"distances_sum":2015.3131735814022}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.951659798534799,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7109375,"distances_sum":2221.6462591908094}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.951659798534799,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7109375,"distances_sum":2221.6462591908094}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.951659798534799,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7109375,"distances_sum":2221.6462591908094}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8403232184482192,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.0390625,"distances_sum":1568.8303154887853}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.7978805916305924,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.7109375,"distances_sum":1400.4853880910869}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3720703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3720703125,"f1":null,"seconds":3.7122517824172974e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":5.984375,"distances_sum":726.1498894574783}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8403232184482192,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.0390625,"distances_sum":1568.8303154887853}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9218692765567772,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6796875,"distances_sum":1996.627694459529}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9368761446886453,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.734375,"distances_sum":2086.0898373950267}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9368761446886453,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.734375,"distances_sum":2086.0898373950267}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9596955128205134,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8359375,"distances_sum":2215.313833873802}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.940670787545788,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6875,"distances_sum":2107.5050956256073}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.945564331501832,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6953125,"distances_sum":2157.425650454302}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9576179029304034,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8046875,"distances_sum":2220.5610962450273}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9596955128205134,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8359375,"distances_sum":2215.313833873802}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9596955128205134,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8359375,"distances_sum":2215.313833873802}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7863650238650247,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.65625,"distances_sum":1441.6359798522647}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66796875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.66796875,"f1":0.7863650238650247,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.65625,"distances_sum":1441.6359798522647}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9219837454212463,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.5,"distances_sum":2028.6393475588034}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.900186792374293,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.3359375,"distances_sum":1897.6083731977424}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8671875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.9219837454212463,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.5,"distances_sum":2028.6393475588034}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9440533424908432,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.75,"distances_sum":2165.149044354246}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.956776556776557,"seconds":4.740431904792786e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.828125,"distances_sum":2243.705091828023}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9288461538461547,"seconds":3.4775584936141968e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.6484375,"distances_sum":2080.939728302774}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.956776556776557,"seconds":4.740431904792786e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.828125,"distances_sum":2243.705091828023}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.956776556776557,"seconds":4.740431904792786e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.828125,"distances_sum":2243.705091828023}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8443436771561782,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.4296875,"distances_sum":1713.746405417448}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.501953125, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.501953125,"f1":null,"seconds":3.209337592124939e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":6.90625,"distances_sum":1045.2092306026066}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8614135864135873,"seconds":3.771856427192688e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.5,"distances_sum":1803.4724816215987}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8614135864135873,"seconds":3.771856427192688e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.5,"distances_sum":1803.4724816215987}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9649210164835169,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.7890625,"distances_sum":2403.5691202199114}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.889093545343546,"seconds":4.073604941368103e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.546875,"distances_sum":1915.0001999434517}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9353193681318689,"seconds":4.250556230545044e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.765625,"distances_sum":2196.329165615464}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9649210164835169,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.7890625,"distances_sum":2403.5691202199114}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9826636904761907,"seconds":3.7532299757003784e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.9765625,"distances_sum":2446.5545691403718}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9826636904761907,"seconds":3.7532299757003784e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.9765625,"distances_sum":2446.5545691403718}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9826636904761907,"seconds":3.7532299757003784e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.9765625,"distances_sum":2446.5545691403718}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":2.1848827600479126e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":5.9140625,"distances_sum":490.9365166502233}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7967189060939069,"seconds":3.2614916563034058e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.6484375,"distances_sum":1409.9134083903707}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6748046875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6748046875,"f1":0.7967189060939069,"seconds":3.2614916563034058e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.6484375,"distances_sum":1409.9134083903707}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8688587454212464,"seconds":3.3974647521972656e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.2734375,"distances_sum":1670.5962381370505}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8688587454212464,"seconds":3.3974647521972656e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.2734375,"distances_sum":1670.5962381370505}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9330242673992684,"seconds":3.827735781669617e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.796875,"distances_sum":2061.5473507543966}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.8989562520812527,"seconds":3.3471733331680298e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.3046875,"distances_sum":1899.976074091151}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9617960164835168,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.9140625,"distances_sum":2272.9200073702555}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9617960164835168,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.9140625,"distances_sum":2272.9200073702555}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9617960164835168,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.9140625,"distances_sum":2272.9200073702555}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3525390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3525390625,"f1":null,"seconds":2.0246952772140503e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":5.5625,"distances_sum":751.1332314269081}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3525390625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3525390625,"f1":null,"seconds":2.0246952772140503e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":5.5625,"distances_sum":751.1332314269081}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.868234890109891,"seconds":3.1981617212295532e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.421875,"distances_sum":1812.0240911731528}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.525390625,"f1":0.6762418137418144,"seconds":2.7026981115341187e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":6.96875,"distances_sum":1181.0329939584922}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.868234890109891,"seconds":3.1981617212295532e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.421875,"distances_sum":1812.0240911731528}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9259844322344329,"seconds":3.559514880180359e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.6015625,"distances_sum":2199.233662369712}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9259844322344329,"seconds":3.559514880180359e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.6015625,"distances_sum":2199.233662369712}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8720703125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9259844322344329,"seconds":3.559514880180359e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.6015625,"distances_sum":2199.233662369712}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.7013222888222894,"seconds":2.596527338027954e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.96875,"distances_sum":1120.9850028638646}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5595703125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5595703125,"f1":0.7013222888222894,"seconds":2.596527338027954e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.96875,"distances_sum":1120.9850028638646}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.845169934232435,"seconds":3.1106173992156982e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.015625,"distances_sum":1627.1035937231095}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8219389985014995,"seconds":3.635883331298828e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.7109375,"distances_sum":1549.4703829125035}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8567453379953389,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.0390625,"distances_sum":1685.007870178282}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58984375, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.58984375,"f1":0.7273715867465874,"seconds":4.127621650695801e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.3203125,"distances_sum":1188.5613260003333}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8567453379953389,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.0390625,"distances_sum":1685.007870178282}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9358402014652021,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.7421875,"distances_sum":2187.4419288869135}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9103968947718953,"seconds":3.93204391002655e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.4609375,"distances_sum":1984.4758228185376}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9131066849816857,"seconds":3.507360816001892e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.4609375,"distances_sum":1955.7565862145088}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9264828921078926,"seconds":3.563240170478821e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8125,"distances_sum":2099.090292964833}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8995514901764909,"seconds":4.742294549942017e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.375,"distances_sum":1929.665914375653}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9269891566766573,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.734375,"distances_sum":2123.845637760948}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9358402014652021,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.7421875,"distances_sum":2187.4419288869135}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.888671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9358402014652021,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.7421875,"distances_sum":2187.4419288869135}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":3,"bsize":4}, perf: {"precision":0.9889322916666665,"recall":0.65625,"f1":0.7775194423631929,"seconds":3.200024366378784e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.2265625,"distances_sum":1449.9660207447482}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4052734375,"f1":null,"seconds":2.376735210418701e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":6.7890625,"distances_sum":818.1144441130406}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":5,"bsize":4}, perf: {"precision":0.9815104166666666,"recall":0.6669921875,"f1":0.7804126429126436,"seconds":3.1087547540664673e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.34375,"distances_sum":1518.2151901352822}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":5,"bsize":4},"perf":{"precision":0.9815104166666666,"recall":0.6669921875,"f1":0.7804126429126436,"seconds":3.1087547540664673e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.34375,"distances_sum":1518.2151901352822}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":7,"bsize":8}, perf: {"precision":0.9861886160714286,"recall":0.8955078125,"f1":0.9347463083791212,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.8515625,"distances_sum":2239.0581640248124}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":3,"bsize":8}, perf: {"precision":0.9840215773809524,"recall":0.896484375,"f1":0.9329198145604398,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.9140625,"distances_sum":2230.443159470282}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":3,"bsize":7}, perf: {"precision":0.9873976934523809,"recall":0.87109375,"f1":0.9205767539751919,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.875,"distances_sum":2118.2572390701935}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":6,"bsize":6}, perf: {"precision":0.9898158482142856,"recall":0.8291015625,"f1":0.8953626451673334,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.8359375,"distances_sum":1948.331065580343}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":3,"bsize":8},"perf":{"precision":0.9840215773809524,"recall":0.896484375,"f1":0.9329198145604398,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.9140625,"distances_sum":2230.443159470282}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":0.9835565476190476,"recall":0.9091796875,"f1":0.9420501373626375,"seconds":3.516674041748047e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.90625,"distances_sum":2277.64080668394}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":8}, perf: {"precision":0.9906063988095238,"recall":0.9111328125,"f1":0.9456687843406599,"seconds":3.5706907510757446e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.84375,"distances_sum":2266.3370478829443}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":7,"bsize":9}, perf: {"precision":0.9836309523809524,"recall":0.9169921875,"f1":0.9462997939560442,"seconds":3.5446137189865112e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.9140625,"distances_sum":2314.066542569796}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":11}, perf: {"precision":0.9876767113095238,"recall":0.9345703125,"f1":0.958472842261905,"seconds":3.995373845100403e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.9609375,"distances_sum":2358.8073465167304}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":6,"bsize":11}, perf: {"precision":0.9880022321428572,"recall":0.953125,"f1":0.9688630380036634,"seconds":3.6507844924926758e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.9453125,"distances_sum":2439.7530479146926}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":8,"bsize":9}, perf: {"precision":0.9930245535714286,"recall":0.9306640625,"f1":0.9575392055860809,"seconds":3.7122517824172974e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.8515625,"distances_sum":2347.901710289865}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":10}, perf: {"precision":0.9851376488095238,"recall":0.927734375,"f1":0.953375400641026,"seconds":3.959983587265015e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.96875,"distances_sum":2332.625439022514}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":6,"bsize":11},"perf":{"precision":0.9880022321428572,"recall":0.953125,"f1":0.9688630380036634,"seconds":3.6507844924926758e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.9453125,"distances_sum":2439.7530479146926}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":6,"bsize":11},"perf":{"precision":0.9880022321428572,"recall":0.953125,"f1":0.9688630380036634,"seconds":3.6507844924926758e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.9453125,"distances_sum":2439.7530479146926}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":2.505257725715637e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.046875,"distances_sum":792.2135237339462}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":2.4549663066864014e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.234375,"distances_sum":481.00276273378336}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.404296875,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.404296875,"f1":null,"seconds":2.505257725715637e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.046875,"distances_sum":792.2135237339462}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8940653096903107,"seconds":3.682449460029602e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.7890625,"distances_sum":1907.7243667137286}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8212890625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8212890625,"f1":0.8940653096903107,"seconds":3.682449460029602e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.7890625,"distances_sum":1907.7243667137286}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9063015109890119,"seconds":4.131346940994263e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.84375,"distances_sum":1934.5352565699354}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9683493589743594,"seconds":4.325062036514282e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.953125,"distances_sum":2348.8397578505333}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9631524725274729,"seconds":3.991648554801941e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.921875,"distances_sum":2291.6631649648}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9683493589743594,"seconds":4.325062036514282e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.953125,"distances_sum":2348.8397578505333}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9683493589743594,"seconds":4.325062036514282e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.953125,"distances_sum":2348.8397578505333}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7793532856032863,"seconds":3.214925527572632e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.2734375,"distances_sum":1501.6875619052726}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.65625,"f1":0.7793532856032863,"seconds":3.214925527572632e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.2734375,"distances_sum":1501.6875619052726}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.897645063270064,"seconds":3.3695250749588013e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.734375,"distances_sum":2008.012555461345}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9362465659340667,"seconds":3.475695848464966e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.9375,"distances_sum":2248.8883225608047}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.8030027264402273,"seconds":2.9634684324264526e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.484375,"distances_sum":1590.535499162662}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8124573343323352,"seconds":4.179775714874268e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.484375,"distances_sum":1610.3746007268262}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8135050713175721,"seconds":4.585832357406616e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.484375,"distances_sum":1656.7833974959663}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9362465659340667,"seconds":3.475695848464966e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.9375,"distances_sum":2248.8883225608047}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9747596153846158,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.9375,"distances_sum":2538.309864323498}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9632497710622713,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.859375,"distances_sum":2467.032978390709}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9462511446886451,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.8515625,"distances_sum":2359.4161325704745}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9747596153846158,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.9375,"distances_sum":2538.309864323498}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9747596153846158,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.9375,"distances_sum":2538.309864323498}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7079781329781334,"seconds":4.144385457038879e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.6484375,"distances_sum":1336.8301275565036}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.177734375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.177734375,"f1":null,"seconds":2.859160304069519e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.7421875,"distances_sum":439.4879905021826}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.568359375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.568359375,"f1":0.7079781329781334,"seconds":4.144385457038879e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.6484375,"distances_sum":1336.8301275565036}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8556776556776566,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.5390625,"distances_sum":1893.576809146205}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8556776556776566,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.5390625,"distances_sum":1893.576809146205}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8556776556776566,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.5390625,"distances_sum":1893.576809146205}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8556776556776566,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.5390625,"distances_sum":1893.576809146205}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.6265701055526733e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.53125,"distances_sum":929.0725592208271}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7916208791208801,"seconds":4.541128873825073e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.4765625,"distances_sum":1614.2075798004116}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6748046875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6748046875,"f1":0.7916208791208801,"seconds":4.541128873825073e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.4765625,"distances_sum":1614.2075798004116}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8358396811521819,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.53125,"distances_sum":1790.6803065003835}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7353515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7353515625,"f1":0.8358396811521819,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.53125,"distances_sum":1790.6803065003835}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9435928654678661,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.734375,"distances_sum":2409.086292905436}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8947635697635705,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8125,"distances_sum":2040.182867604016}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9564274267399273,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8828125,"distances_sum":2451.667918041883}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8545225607725615,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.6875,"distances_sum":1845.04675049973}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8440413752913762,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.4765625,"distances_sum":1864.7407448692759}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9564274267399273,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8828125,"distances_sum":2451.667918041883}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9564274267399273,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8828125,"distances_sum":2451.667918041883}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6123046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6123046875,"f1":0.7435448232323241,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.453125,"distances_sum":1548.9184318895748}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.169921875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.169921875,"f1":null,"seconds":3.1404197216033936e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":4.8203125,"distances_sum":440.06864072521205}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.142578125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.142578125,"f1":null,"seconds":2.7455389499664307e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":4.28125,"distances_sum":368.07192513229097}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6123046875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6123046875,"f1":0.7435448232323241,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.453125,"distances_sum":1548.9184318895748}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9195486804861811,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6171875,"distances_sum":2297.1152727216772}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8571324508824517,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.296875,"distances_sum":1978.4434260748383}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8460268897768907,"seconds":5.025416612625122e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.140625,"distances_sum":1921.8573936937862}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8662109375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8662109375,"f1":0.9195486804861811,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6171875,"distances_sum":2297.1152727216772}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9464514652014657,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.625,"distances_sum":2493.789157462002}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9488152472527478,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6640625,"distances_sum":2474.1191178938016}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9488152472527478,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6640625,"distances_sum":2474.1191178938016}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9091796875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9488152472527478,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6640625,"distances_sum":2474.1191178938016}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8490056818181825,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7578125,"distances_sum":1749.5803187803376}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.203125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.203125,"f1":null,"seconds":3.762543201446533e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.8203125,"distances_sum":463.4571901780127}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8490056818181825,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7578125,"distances_sum":1749.5803187803376}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9341975732600739,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.859375,"distances_sum":2184.653325856447}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9482257326007331,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8515625,"distances_sum":2298.2786967536003}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9482257326007331,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8515625,"distances_sum":2298.2786967536003}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619448260073263,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9296875,"distances_sum":2349.699506337582}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9693452380952385,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9140625,"distances_sum":2424.6652377978567}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9693452380952385,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9140625,"distances_sum":2424.6652377978567}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9693452380952385,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9140625,"distances_sum":2424.6652377978567}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2294921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.550201654434204e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.3515625,"distances_sum":519.5280948229446}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2294921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.550201654434204e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.3515625,"distances_sum":519.5280948229446}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.525390625,"f1":null,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.2578125,"distances_sum":1192.0515500022982}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1669921875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1669921875,"f1":null,"seconds":3.4347176551818848e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":4.9296875,"distances_sum":384.4739138175358}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.638671875,"f1":0.7670008810633817,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.6328125,"distances_sum":1495.738009597218}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.638671875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.638671875,"f1":0.7670008810633817,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.6328125,"distances_sum":1495.738009597218}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9298623251748257,"seconds":6.3963234424591064e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.53125,"distances_sum":2313.231615219549}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9324862637362643,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.515625,"distances_sum":2260.81852520394}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7821392149517158,"seconds":5.012378096580505e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.7578125,"distances_sum":1538.4877619325819}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9324862637362643,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.515625,"distances_sum":2260.81852520394}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.957357746420247,"seconds":6.664544343948364e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7421875,"distances_sum":2465.635147581707}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9519230769230775,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6953125,"distances_sum":2421.2662093304248}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9712454212454216,"seconds":6.67572021484375e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.84375,"distances_sum":2530.1173721726454}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9588744588744595,"seconds":6.400048732757568e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8125,"distances_sum":2442.6853178199017}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9712454212454216,"seconds":6.67572021484375e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.84375,"distances_sum":2530.1173721726454}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9712454212454216,"seconds":6.67572021484375e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.84375,"distances_sum":2530.1173721726454}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8508361430236439,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.515625,"distances_sum":1872.1059813411905}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.5334378480911255e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.8828125,"distances_sum":519.753575476872}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8508361430236439,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.515625,"distances_sum":1872.1059813411905}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628777472527478,"seconds":4.0084123611450195e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9609375,"distances_sum":2528.6845759035555}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628777472527478,"seconds":4.0084123611450195e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9609375,"distances_sum":2528.6845759035555}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9637877747252751,"seconds":6.204470992088318e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9609375,"distances_sum":2550.4936525929547}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9637877747252751,"seconds":6.204470992088318e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9609375,"distances_sum":2550.4936525929547}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9637877747252751,"seconds":6.204470992088318e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9609375,"distances_sum":2550.4936525929547}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7885713245088253,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.546875,"distances_sum":1528.0542300756676}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2197265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2197265625,"f1":null,"seconds":4.0102750062942505e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":7.5859375,"distances_sum":485.64124376322}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.5800039768218994e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":7.5703125,"distances_sum":468.80966003744805}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7885713245088253,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.546875,"distances_sum":1528.0542300756676}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9089374167499173,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.9140625,"distances_sum":2090.400602143619}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8637081668331676,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.8359375,"distances_sum":1807.5534255951961}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8012409465534475,"seconds":5.146488547325134e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.625,"distances_sum":1593.4487368587347}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.84375,"f1":0.9089374167499173,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.9140625,"distances_sum":2090.400602143619}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9420100732600739,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.859375,"distances_sum":2302.768334230581}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9419528388278392,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.875,"distances_sum":2324.399843787331}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9248829295704304,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.796875,"distances_sum":2175.630263097603}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.966964285714286,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.9296875,"distances_sum":2469.9110367699986}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9303342490842497,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.9921875,"distances_sum":2191.482850985701}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.966964285714286,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.9296875,"distances_sum":2469.9110367699986}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.966964285714286,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.9296875,"distances_sum":2469.9110367699986}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6870750777000785,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.75,"distances_sum":1235.1183114695411}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7856090090465098,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.40625,"distances_sum":1608.5227272850918}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7856090090465098,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.40625,"distances_sum":1608.5227272850918}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8901733682983691,"seconds":4.854053258895874e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.6328125,"distances_sum":2027.5019569744875}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9507383241758246,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.78125,"distances_sum":2458.1832378545637}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9288804945054953,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.84375,"distances_sum":2248.1371232441397}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9342719780219786,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.875,"distances_sum":2267.0204550802755}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9507383241758246,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.78125,"distances_sum":2458.1832378545637}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9722470238095242,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.953125,"distances_sum":2544.003174205281}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9679716117216123,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9609375,"distances_sum":2528.233521951445}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9653331043956047,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9375,"distances_sum":2515.0162323666646}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9624313186813191,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2493.932709594719}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9615384615384621,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9609375,"distances_sum":2489.339469240316}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9776785714285716,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9921875,"distances_sum":2580.335562627719}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9776785714285716,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9921875,"distances_sum":2580.335562627719}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9776785714285716,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9921875,"distances_sum":2580.335562627719}}, n: 9
inertia(cfft.distances) = 17.92818498168498
inertia(cdnet.distances) = 30.23515029761905
inertia(crand.distances) = 23.198252136752142
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444443
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9133333333333332
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9177777777777778
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9311111111111111
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666666
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9066666666666666
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.931111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9066666666666667
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9199999999999999
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8999999999999999
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8666666666666666
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9155555555555556
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9022222222222224
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 1, 2, 3, 3, 1, 3, 3, 1, 2, 3, 3, 2, 3, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.38446666851153444] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38446666851153444, 0.18394914390589223] ***
*** starting iteration: 2; err: [Inf, 0.38446666851153444, 0.18394914390589223] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934] ***
*** starting iteration: 3; err: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934, 0.16633198347999964] ***
*** starting iteration: 4; err: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934, 0.16633198347999964] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934, 0.16633198347999964, 0.16563043541887676] ***
*** finished computation of 12 references, err: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934, 0.16633198347999964, 0.16563043541887676] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.26228916445629485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26228916445629485, 0.1767441960793349] ***
*** starting iteration: 2; err: [Inf, 0.26228916445629485, 0.1767441960793349] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26228916445629485, 0.1767441960793349, 0.15809162530075985] ***
*** starting iteration: 3; err: [Inf, 0.26228916445629485, 0.1767441960793349, 0.15809162530075985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26228916445629485, 0.1767441960793349, 0.15809162530075985, 0.1540599074724474] ***
*** finished computation of 7 references, err: [Inf, 0.26228916445629485, 0.1767441960793349, 0.15809162530075985, 0.1540599074724474] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 4, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 8, 10]]
** centroid: 7, normalized-entropy: 0.9910760598382222, [(2, 8), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4784055099159207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4784055099159207, 0.20216930096281982] ***
*** finished computation of 7 references, err: [Inf, 0.4784055099159207, 0.20216930096281982] ***
*** center 1: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 16, 3]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 11, 7]]
** centroid: 4, normalized-entropy: 0.9640787648082293, [(2, 11), (3, 7)]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4119006659084529] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4119006659084529, 0.20706864268893163] ***
*** finished computation of 7 references, err: [Inf, 0.4119006659084529, 0.20706864268893163] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 21, 7]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 21), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 21]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5973000052105323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5973000052105323, 0.226772842139636] ***
*** starting iteration: 2; err: [Inf, 0.5973000052105323, 0.226772842139636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5973000052105323, 0.226772842139636, 0.2116030719106614] ***
*** starting iteration: 3; err: [Inf, 0.5973000052105323, 0.226772842139636, 0.2116030719106614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5973000052105323, 0.226772842139636, 0.2116030719106614, 0.2110666743408947] ***
*** finished computation of 7 references, err: [Inf, 0.5973000052105323, 0.226772842139636, 0.2116030719106614, 0.2110666743408947] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 8]]
** centroid: 1, normalized-entropy: 0.8904916402194913, [(2, 18), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 7, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6234999986422742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6234999986422742, 0.2714723913987832] ***
*** starting iteration: 2; err: [Inf, 0.6234999986422742, 0.2714723913987832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6234999986422742, 0.2714723913987832, 0.2523434075476401] ***
*** starting iteration: 3; err: [Inf, 0.6234999986422742, 0.2714723913987832, 0.2523434075476401] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6234999986422742, 0.2714723913987832, 0.2523434075476401, 0.2483785705502312] ***
*** finished computation of 7 references, err: [Inf, 0.6234999986422742, 0.2714723913987832, 0.2523434075476401, 0.2483785705502312] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 19]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 1), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 4, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5397000004976743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5397000004976743, 0.26373257748957163] ***
*** starting iteration: 2; err: [Inf, 0.5397000004976743, 0.26373257748957163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5397000004976743, 0.26373257748957163, 0.24352886881819888] ***
*** starting iteration: 3; err: [Inf, 0.5397000004976743, 0.26373257748957163, 0.24352886881819888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5397000004976743, 0.26373257748957163, 0.24352886881819888, 0.23651940782063488] ***
*** finished computation of 7 references, err: [Inf, 0.5397000004976743, 0.26373257748957163, 0.24352886881819888, 0.23651940782063488] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 13]]
** centroid: 1, normalized-entropy: 0.8997437586982626, [(2, 6), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.295499994602943] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.295499994602943, 0.5762248559464307] ***
*** starting iteration: 2; err: [Inf, 1.295499994602943, 0.5762248559464307] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.295499994602943, 0.5762248559464307, 0.5036294374191607] ***
*** starting iteration: 3; err: [Inf, 1.295499994602943, 0.5762248559464307, 0.5036294374191607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.295499994602943, 0.5762248559464307, 0.5036294374191607, 0.4854111293660871] ***
*** starting iteration: 4; err: [Inf, 1.295499994602943, 0.5762248559464307, 0.5036294374191607, 0.4854111293660871] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.295499994602943, 0.5762248559464307, 0.5036294374191607, 0.4854111293660871, 0.48385591925646354] ***
*** starting iteration: 5; err: [Inf, 1.295499994602943, 0.5762248559464307, 0.5036294374191607, 0.4854111293660871, 0.48385591925646354] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.295499994602943, 0.5762248559464307, 0.5036294374191607, 0.4854111293660871, 0.48385591925646354, 0.4827263044956589] ***
*** starting iteration: 6; err: [Inf, 1.295499994602943, 0.5762248559464307, 0.5036294374191607, 0.4854111293660871, 0.48385591925646354, 0.4827263044956589] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.295499994602943, 0.5762248559464307, 0.5036294374191607, 0.4854111293660871, 0.48385591925646354, 0.4827263044956589, 0.481657981292619] ***
*** starting iteration: 7; err: [Inf, 1.295499994602943, 0.5762248559464307, 0.5036294374191607, 0.4854111293660871, 0.48385591925646354, 0.4827263044956589, 0.481657981292619] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.295499994602943, 0.5762248559464307, 0.5036294374191607, 0.4854111293660871, 0.48385591925646354, 0.4827263044956589, 0.481657981292619, 0.481657981292619] ***
*** finished computation of 3 references, err: [Inf, 1.295499994602943, 0.5762248559464307, 0.5036294374191607, 0.4854111293660871, 0.48385591925646354, 0.4827263044956589, 0.481657981292619, 0.481657981292619] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 9]]
** centroid: 1, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 17]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.44997469425720993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44997469425720993, 0.25241421263742647] ***
*** starting iteration: 2; err: [Inf, 0.44997469425720993, 0.25241421263742647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44997469425720993, 0.25241421263742647, 0.2159495926018695] ***
*** starting iteration: 3; err: [Inf, 0.44997469425720993, 0.25241421263742647, 0.2159495926018695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44997469425720993, 0.25241421263742647, 0.2159495926018695, 0.18634754949884333] ***
*** finished computation of 7 references, err: [Inf, 0.44997469425720993, 0.25241421263742647, 0.2159495926018695, 0.18634754949884333] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 11, 7]]
** centroid: 5, normalized-entropy: 0.9640787648082293, [(2, 11), (3, 7)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30542968040421425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30542968040421425, 0.20782686779305032] ***
*** starting iteration: 2; err: [Inf, 0.30542968040421425, 0.20782686779305032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30542968040421425, 0.20782686779305032, 0.18665865474971838] ***
*** starting iteration: 3; err: [Inf, 0.30542968040421425, 0.20782686779305032, 0.18665865474971838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30542968040421425, 0.20782686779305032, 0.18665865474971838, 0.17363590256269454] ***
*** finished computation of 7 references, err: [Inf, 0.30542968040421425, 0.20782686779305032, 0.18665865474971838, 0.17363590256269454] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 6, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.5476000312292992] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5476000312292992, 0.6571413377195644] ***
*** finished computation of 3 references, err: [Inf, 1.5476000312292992, 0.6571413377195644] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [37, 2, 0]]
** centroid: 1, normalized-entropy: 0.29181825659888555, [(1, 37), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 11]]
** centroid: 2, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.334199998298522] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.334199998298522, 0.5768241543496622] ***
*** finished computation of 3 references, err: [Inf, 1.334199998298522, 0.5768241543496622] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 6]]
** centroid: 2, normalized-entropy: 0.6609623351442084, [(2, 29), (3, 6)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 29]]
** centroid: 3, normalized-entropy: 0.3451173149449528, [(2, 2), (3, 29)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 11.213800061871039] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.213800061871039, 1.0242709993309531] ***
*** finished computation of 3 references, err: [Inf, 11.213800061871039, 1.0242709993309531] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [15, 2, 0]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(1, 15), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 39]]
** centroid: 2, normalized-entropy: 0.9876925088958032, [(2, 30), (3, 39)]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4117000006556622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4117000006556622, 0.24339688216108615] ***
*** starting iteration: 2; err: [Inf, 0.4117000006556622, 0.24339688216108615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4117000006556622, 0.24339688216108615, 0.22214453217453453] ***
*** starting iteration: 3; err: [Inf, 0.4117000006556622, 0.24339688216108615, 0.22214453217453453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4117000006556622, 0.24339688216108615, 0.22214453217453453, 0.21925761376451022] ***
*** starting iteration: 4; err: [Inf, 0.4117000006556622, 0.24339688216108615, 0.22214453217453453, 0.21925761376451022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4117000006556622, 0.24339688216108615, 0.22214453217453453, 0.21925761376451022, 0.21621939290563486] ***
*** starting iteration: 5; err: [Inf, 0.4117000006556622, 0.24339688216108615, 0.22214453217453453, 0.21925761376451022, 0.21621939290563486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4117000006556622, 0.24339688216108615, 0.22214453217453453, 0.21925761376451022, 0.21621939290563486, 0.211468568343878] ***
*** starting iteration: 6; err: [Inf, 0.4117000006556622, 0.24339688216108615, 0.22214453217453453, 0.21925761376451022, 0.21621939290563486, 0.211468568343878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4117000006556622, 0.24339688216108615, 0.22214453217453453, 0.21925761376451022, 0.21621939290563486, 0.211468568343878, 0.21115800916036614] ***
*** finished computation of 7 references, err: [Inf, 0.4117000006556622, 0.24339688216108615, 0.22214453217453453, 0.21925761376451022, 0.21621939290563486, 0.211468568343878, 0.21115800916036614] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 18, 8]]
** centroid: 4, normalized-entropy: 0.8904916402194913, [(2, 18), (3, 8)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 6.0004999591511465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.0004999591511465, 1.3525843441191585] ***
*** starting iteration: 2; err: [Inf, 6.0004999591511465, 1.3525843441191585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.0004999591511465, 1.3525843441191585, 0.3536935718578771] ***
*** starting iteration: 3; err: [Inf, 6.0004999591511465, 1.3525843441191585, 0.3536935718578771] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.0004999591511465, 1.3525843441191585, 0.3536935718578771, 0.3122734408251273] ***
*** starting iteration: 4; err: [Inf, 6.0004999591511465, 1.3525843441191585, 0.3536935718578771, 0.3122734408251273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.0004999591511465, 1.3525843441191585, 0.3536935718578771, 0.3122734408251273, 0.29901824396462184] ***
*** starting iteration: 5; err: [Inf, 6.0004999591511465, 1.3525843441191585, 0.3536935718578771, 0.3122734408251273, 0.29901824396462184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.0004999591511465, 1.3525843441191585, 0.3536935718578771, 0.3122734408251273, 0.29901824396462184, 0.2981420282053888] ***
*** finished computation of 7 references, err: [Inf, 6.0004999591511465, 1.3525843441191585, 0.3536935718578771, 0.3122734408251273, 0.29901824396462184, 0.2981420282053888] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 7]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.393800007389553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.393800007389553, 0.24397127128700646] ***
*** starting iteration: 2; err: [Inf, 0.393800007389553, 0.24397127128700646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.393800007389553, 0.24397127128700646, 0.23009537946185993] ***
*** starting iteration: 3; err: [Inf, 0.393800007389553, 0.24397127128700646, 0.23009537946185993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.393800007389553, 0.24397127128700646, 0.23009537946185993, 0.2210404496037915] ***
*** starting iteration: 4; err: [Inf, 0.393800007389553, 0.24397127128700646, 0.23009537946185993, 0.2210404496037915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.393800007389553, 0.24397127128700646, 0.23009537946185993, 0.2210404496037915, 0.2145785005361168] ***
*** starting iteration: 5; err: [Inf, 0.393800007389553, 0.24397127128700646, 0.23009537946185993, 0.2210404496037915, 0.2145785005361168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.393800007389553, 0.24397127128700646, 0.23009537946185993, 0.2210404496037915, 0.2145785005361168, 0.21031861410269825] ***
*** starting iteration: 6; err: [Inf, 0.393800007389553, 0.24397127128700646, 0.23009537946185993, 0.2210404496037915, 0.2145785005361168, 0.21031861410269825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.393800007389553, 0.24397127128700646, 0.23009537946185993, 0.2210404496037915, 0.2145785005361168, 0.21031861410269825, 0.20919552489498536] ***
*** starting iteration: 7; err: [Inf, 0.393800007389553, 0.24397127128700646, 0.23009537946185993, 0.2210404496037915, 0.2145785005361168, 0.21031861410269825, 0.20919552489498536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.393800007389553, 0.24397127128700646, 0.23009537946185993, 0.2210404496037915, 0.2145785005361168, 0.21031861410269825, 0.20919552489498536, 0.20919552489498536] ***
*** finished computation of 7 references, err: [Inf, 0.393800007389553, 0.24397127128700646, 0.23009537946185993, 0.2210404496037915, 0.2145785005361168, 0.21031861410269825, 0.20919552489498536, 0.20919552489498536] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2762182776650724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2762182776650724, 0.19569082055073136] ***
*** starting iteration: 2; err: [Inf, 0.2762182776650724, 0.19569082055073136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2762182776650724, 0.19569082055073136, 0.1739331256473288] ***
*** starting iteration: 3; err: [Inf, 0.2762182776650724, 0.19569082055073136, 0.1739331256473288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2762182776650724, 0.19569082055073136, 0.1739331256473288, 0.16233637589851635] ***
*** finished computation of 7 references, err: [Inf, 0.2762182776650724, 0.19569082055073136, 0.1739331256473288, 0.16233637589851635] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 10]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 5), (3, 10)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 4: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.363433151047264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.363433151047264, 0.28069437022084653] ***
*** starting iteration: 2; err: [Inf, 0.363433151047264, 0.28069437022084653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.363433151047264, 0.28069437022084653, 0.2457749936660395] ***
*** starting iteration: 3; err: [Inf, 0.363433151047264, 0.28069437022084653, 0.2457749936660395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.363433151047264, 0.28069437022084653, 0.2457749936660395, 0.23879282521512127] ***
*** finished computation of 7 references, err: [Inf, 0.363433151047264, 0.28069437022084653, 0.2457749936660395, 0.23879282521512127] ***
*** center 1: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 24]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 2]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.502396905014988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.502396905014988, 0.31936227230480957] ***
*** starting iteration: 2; err: [Inf, 0.502396905014988, 0.31936227230480957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.502396905014988, 0.31936227230480957, 0.28259972661374294] ***
*** starting iteration: 3; err: [Inf, 0.502396905014988, 0.31936227230480957, 0.28259972661374294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.502396905014988, 0.31936227230480957, 0.28259972661374294, 0.2542692225845958] ***
*** finished computation of 7 references, err: [Inf, 0.502396905014988, 0.31936227230480957, 0.28259972661374294, 0.2542692225845958] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 22, 10]]
** centroid: 1, normalized-entropy: 0.8960382325345574, [(2, 22), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 29]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37533058126829827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37533058126829827, 0.19341041567015227] ***
*** starting iteration: 2; err: [Inf, 0.37533058126829827, 0.19341041567015227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37533058126829827, 0.19341041567015227, 0.16165489516626255] ***
*** starting iteration: 3; err: [Inf, 0.37533058126829827, 0.19341041567015227, 0.16165489516626255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37533058126829827, 0.19341041567015227, 0.16165489516626255, 0.15715723253850394] ***
*** finished computation of 7 references, err: [Inf, 0.37533058126829827, 0.19341041567015227, 0.16165489516626255, 0.15715723253850394] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 4, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 7, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41516470404108147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41516470404108147, 0.23659614463496326] ***
*** starting iteration: 2; err: [Inf, 0.41516470404108147, 0.23659614463496326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41516470404108147, 0.23659614463496326, 0.22372582205471794] ***
*** starting iteration: 3; err: [Inf, 0.41516470404108147, 0.23659614463496326, 0.22372582205471794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41516470404108147, 0.23659614463496326, 0.22372582205471794, 0.20184235325298036] ***
*** finished computation of 7 references, err: [Inf, 0.41516470404108147, 0.23659614463496326, 0.22372582205471794, 0.20184235325298036] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 4, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 5, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5450524843546813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5450524843546813, 0.24688483261429184] ***
*** starting iteration: 2; err: [Inf, 0.5450524843546813, 0.24688483261429184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5450524843546813, 0.24688483261429184, 0.22269248929051794] ***
*** starting iteration: 3; err: [Inf, 0.5450524843546813, 0.24688483261429184, 0.22269248929051794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5450524843546813, 0.24688483261429184, 0.22269248929051794, 0.21377779930349136] ***
*** finished computation of 7 references, err: [Inf, 0.5450524843546813, 0.24688483261429184, 0.22269248929051794, 0.21377779930349136] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 13]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 2]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 14), (3, 2)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0302277831821138] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0302277831821138, 0.4440058861007469] ***
*** starting iteration: 2; err: [Inf, 1.0302277831821138, 0.4440058861007469] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0302277831821138, 0.4440058861007469, 0.33585520882262654] ***
*** starting iteration: 3; err: [Inf, 1.0302277831821138, 0.4440058861007469, 0.33585520882262654] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0302277831821138, 0.4440058861007469, 0.33585520882262654, 0.33075907322469705] ***
*** finished computation of 3 references, err: [Inf, 1.0302277831821138, 0.4440058861007469, 0.33585520882262654, 0.33075907322469705] ***
*** center 1: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 9]]
** centroid: 2, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 17]]
** centroid: 3, normalized-entropy: 0.6098403047164005, [(2, 3), (3, 17)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9329997526391538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9329997526391538, 0.49780357996685864] ***
*** starting iteration: 2; err: [Inf, 0.9329997526391538, 0.49780357996685864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9329997526391538, 0.49780357996685864, 0.39644648366514096] ***
*** starting iteration: 3; err: [Inf, 0.9329997526391538, 0.49780357996685864, 0.39644648366514096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9329997526391538, 0.49780357996685864, 0.39644648366514096, 0.3954660530213357] ***
*** finished computation of 3 references, err: [Inf, 0.9329997526391538, 0.49780357996685864, 0.39644648366514096, 0.3954660530213357] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 8]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6181312551557788] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6181312551557788, 0.4105417588310336] ***
*** starting iteration: 2; err: [Inf, 0.6181312551557788, 0.4105417588310336] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6181312551557788, 0.4105417588310336, 0.39808038704880877] ***
*** starting iteration: 3; err: [Inf, 0.6181312551557788, 0.4105417588310336, 0.39808038704880877] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6181312551557788, 0.4105417588310336, 0.39808038704880877, 0.3814040579062112] ***
*** finished computation of 3 references, err: [Inf, 0.6181312551557788, 0.4105417588310336, 0.39808038704880877, 0.3814040579062112] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 13]]
** centroid: 1, normalized-entropy: 0.8756633923230399, [(2, 31), (3, 13)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 3: selecting labels [1] (freq >= 2) [from [29, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3230464898577654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3230464898577654, 0.1807556559666543] ***
*** finished computation of 7 references, err: [Inf, 0.3230464898577654, 0.1807556559666543] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 7, 9]]
** centroid: 4, normalized-entropy: 0.9886994082884974, [(2, 7), (3, 9)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 6: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5356062489508128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5356062489508128, 0.25365297757938277] ***
*** finished computation of 7 references, err: [Inf, 0.5356062489508128, 0.25365297757938277] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 6, 17]]
** centroid: 4, normalized-entropy: 0.828055725379504, [(2, 6), (3, 17)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 6]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.543310897221042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.543310897221042, 0.37402442004817726] ***
*** finished computation of 7 references, err: [Inf, 0.543310897221042, 0.37402442004817726] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 11, 39]]
** centroid: 3, normalized-entropy: 0.7601675029619658, [(2, 11), (3, 39)]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1889000024483436] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1889000024483436, 0.4854111293660871] ***
*** finished computation of 3 references, err: [Inf, 1.1889000024483436, 0.4854111293660871] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 10]]
** centroid: 1, normalized-entropy: 0.7553754125614286, [(2, 36), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 16]]
*** center 3: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6934000235973854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6934000235973854, 0.8700269641175453] ***
*** finished computation of 3 references, err: [Inf, 1.6934000235973854, 0.8700269641175453] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [34, 2, 0]]
** centroid: 1, normalized-entropy: 0.3095434291503252, [(1, 34), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 14]]
** centroid: 2, normalized-entropy: 0.9103480624345157, [(2, 29), (3, 14)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7017000053177828] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7017000053177828, 0.5232547180567397] ***
*** finished computation of 3 references, err: [Inf, 0.7017000053177828, 0.5232547180567397] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 29]]
** centroid: 1, normalized-entropy: 0.3451173149449528, [(2, 2), (3, 29)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 10]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 30), (3, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4006140192026737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4006140192026737, 0.2619344805171808] ***
*** starting iteration: 2; err: [Inf, 0.4006140192026737, 0.2619344805171808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4006140192026737, 0.2619344805171808, 0.2588702148023349] ***
*** starting iteration: 3; err: [Inf, 0.4006140192026737, 0.2619344805171808, 0.2588702148023349] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4006140192026737, 0.2619344805171808, 0.2588702148023349, 0.25796054158271087] ***
*** finished computation of 7 references, err: [Inf, 0.4006140192026737, 0.2619344805171808, 0.2588702148023349, 0.25796054158271087] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 14, 25]]
** centroid: 7, normalized-entropy: 0.9418285354475157, [(2, 14), (3, 25)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4031658796735684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4031658796735684, 0.22748774281804945] ***
*** starting iteration: 2; err: [Inf, 0.4031658796735684, 0.22748774281804945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4031658796735684, 0.22748774281804945, 0.21806629682579395] ***
*** starting iteration: 3; err: [Inf, 0.4031658796735684, 0.22748774281804945, 0.21806629682579395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4031658796735684, 0.22748774281804945, 0.21806629682579395, 0.21607268333235616] ***
*** finished computation of 7 references, err: [Inf, 0.4031658796735684, 0.22748774281804945, 0.21806629682579395, 0.21607268333235616] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 9, 19]]
** centroid: 7, normalized-entropy: 0.9059282160429994, [(2, 9), (3, 19)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29463454102236253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29463454102236253, 0.17671374425192282] ***
*** starting iteration: 2; err: [Inf, 0.29463454102236253, 0.17671374425192282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29463454102236253, 0.17671374425192282, 0.16921852678068544] ***
*** starting iteration: 3; err: [Inf, 0.29463454102236253, 0.17671374425192282, 0.16921852678068544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29463454102236253, 0.17671374425192282, 0.16921852678068544, 0.1653720562540375] ***
*** finished computation of 7 references, err: [Inf, 0.29463454102236253, 0.17671374425192282, 0.16921852678068544, 0.1653720562540375] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 6, 10]]
** centroid: 7, normalized-entropy: 0.954434002924965, [(2, 6), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.970399979762301] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.970399979762301, 1.4137333190395276] ***
*** starting iteration: 2; err: [Inf, 3.970399979762301, 1.4137333190395276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.970399979762301, 1.4137333190395276, 0.6139648879785482] ***
*** starting iteration: 3; err: [Inf, 3.970399979762301, 1.4137333190395276, 0.6139648879785482] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.970399979762301, 1.4137333190395276, 0.6139648879785482, 0.5004760981512146] ***
*** finished computation of 3 references, err: [Inf, 3.970399979762301, 1.4137333190395276, 0.6139648879785482, 0.5004760981512146] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 37, 10]]
** centroid: 1, normalized-entropy: 0.7467366074830678, [(2, 37), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.0622000421265465] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.0622000421265465, 1.904275552874766] ***
*** starting iteration: 2; err: [Inf, 5.0622000421265465, 1.904275552874766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.0622000421265465, 1.904275552874766, 1.0101855100042818] ***
*** starting iteration: 3; err: [Inf, 5.0622000421265465, 1.904275552874766, 1.0101855100042818] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.0622000421265465, 1.904275552874766, 1.0101855100042818, 0.6277369090758369] ***
*** finished computation of 3 references, err: [Inf, 5.0622000421265465, 1.904275552874766, 1.0101855100042818, 0.6277369090758369] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 1, 0]]
** centroid: 2, normalized-entropy: 0.18717625687320805, [(1, 34), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 11]]
** centroid: 3, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0159999954367174] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0159999954367174, 0.561038619190866] ***
*** starting iteration: 2; err: [Inf, 1.0159999954367174, 0.561038619190866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0159999954367174, 0.561038619190866, 0.5371889483341165] ***
*** starting iteration: 3; err: [Inf, 1.0159999954367174, 0.561038619190866, 0.5371889483341165] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0159999954367174, 0.561038619190866, 0.5371889483341165, 0.5245266141929815] ***
*** finished computation of 3 references, err: [Inf, 1.0159999954367174, 0.561038619190866, 0.5371889483341165, 0.5245266141929815] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 29]]
** centroid: 1, normalized-entropy: 0.44886448872302936, [(2, 3), (3, 29)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 10]]
** centroid: 2, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.888699968335361] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.888699968335361, 2.1128585450488475] ***
*** starting iteration: 2; err: [Inf, 6.888699968335361, 2.1128585450488475] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.888699968335361, 2.1128585450488475, 1.1946186492610043] ***
*** starting iteration: 3; err: [Inf, 6.888699968335361, 2.1128585450488475, 1.1946186492610043] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.888699968335361, 2.1128585450488475, 1.1946186492610043, 0.6052633675939054] ***
*** starting iteration: 4; err: [Inf, 6.888699968335361, 2.1128585450488475, 1.1946186492610043, 0.6052633675939054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.888699968335361, 2.1128585450488475, 1.1946186492610043, 0.6052633675939054, 0.48301134884623154] ***
*** starting iteration: 5; err: [Inf, 6.888699968335361, 2.1128585450488475, 1.1946186492610043, 0.6052633675939054, 0.48301134884623154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.888699968335361, 2.1128585450488475, 1.1946186492610043, 0.6052633675939054, 0.48301134884623154, 0.4762426463000986] ***
*** starting iteration: 6; err: [Inf, 6.888699968335361, 2.1128585450488475, 1.1946186492610043, 0.6052633675939054, 0.48301134884623154, 0.4762426463000986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.888699968335361, 2.1128585450488475, 1.1946186492610043, 0.6052633675939054, 0.48301134884623154, 0.4762426463000986, 0.47455841634408313] ***
*** starting iteration: 7; err: [Inf, 6.888699968335361, 2.1128585450488475, 1.1946186492610043, 0.6052633675939054, 0.48301134884623154, 0.4762426463000986, 0.47455841634408313] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.888699968335361, 2.1128585450488475, 1.1946186492610043, 0.6052633675939054, 0.48301134884623154, 0.4762426463000986, 0.47455841634408313, 0.4737676592981221] ***
*** finished computation of 3 references, err: [Inf, 6.888699968335361, 2.1128585450488475, 1.1946186492610043, 0.6052633675939054, 0.48301134884623154, 0.4762426463000986, 0.47455841634408313, 0.4737676592981221] ***
*** center 1: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 23]]
** centroid: 2, normalized-entropy: 0.7837769474847011, [(2, 7), (3, 23)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 3]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 30), (3, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.218399947632131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.218399947632131, 1.0415981917063168] ***
*** starting iteration: 2; err: [Inf, 4.218399947632131, 1.0415981917063168] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.218399947632131, 1.0415981917063168, 0.6258695630676284] ***
*** starting iteration: 3; err: [Inf, 4.218399947632131, 1.0415981917063168, 0.6258695630676284] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.218399947632131, 1.0415981917063168, 0.6258695630676284, 0.5999206049175608] ***
*** starting iteration: 4; err: [Inf, 4.218399947632131, 1.0415981917063168, 0.6258695630676284, 0.5999206049175608] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.218399947632131, 1.0415981917063168, 0.6258695630676284, 0.5999206049175608, 0.5793239474967039] ***
*** starting iteration: 5; err: [Inf, 4.218399947632131, 1.0415981917063168, 0.6258695630676284, 0.5999206049175608, 0.5793239474967039] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.218399947632131, 1.0415981917063168, 0.6258695630676284, 0.5999206049175608, 0.5793239474967039, 0.5628383953742164] ***
*** starting iteration: 6; err: [Inf, 4.218399947632131, 1.0415981917063168, 0.6258695630676284, 0.5999206049175608, 0.5793239474967039, 0.5628383953742164] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.218399947632131, 1.0415981917063168, 0.6258695630676284, 0.5999206049175608, 0.5793239474967039, 0.5628383953742164, 0.5577645543079255] ***
*** starting iteration: 7; err: [Inf, 4.218399947632131, 1.0415981917063168, 0.6258695630676284, 0.5999206049175608, 0.5793239474967039, 0.5628383953742164, 0.5577645543079255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.218399947632131, 1.0415981917063168, 0.6258695630676284, 0.5999206049175608, 0.5793239474967039, 0.5628383953742164, 0.5577645543079255, 0.5577645543079255] ***
*** finished computation of 3 references, err: [Inf, 4.218399947632131, 1.0415981917063168, 0.6258695630676284, 0.5999206049175608, 0.5793239474967039, 0.5628383953742164, 0.5577645543079255, 0.5577645543079255] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 8]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.12590003485497] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.12590003485497, 1.0264883694538398] ***
*** starting iteration: 2; err: [Inf, 3.12590003485497, 1.0264883694538398] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699] ***
*** starting iteration: 3; err: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975] ***
*** starting iteration: 4; err: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975, 0.646977585080746] ***
*** starting iteration: 5; err: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975, 0.646977585080746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975, 0.646977585080746, 0.5875368156859605] ***
*** starting iteration: 6; err: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975, 0.646977585080746, 0.5875368156859605] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975, 0.646977585080746, 0.5875368156859605, 0.5739747384945311] ***
*** starting iteration: 7; err: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975, 0.646977585080746, 0.5875368156859605, 0.5739747384945311] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975, 0.646977585080746, 0.5875368156859605, 0.5739747384945311, 0.5638238215406218] ***
*** starting iteration: 8; err: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975, 0.646977585080746, 0.5875368156859605, 0.5739747384945311, 0.5638238215406218] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975, 0.646977585080746, 0.5875368156859605, 0.5739747384945311, 0.5638238215406218, 0.5459251049629128] ***
*** starting iteration: 9; err: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975, 0.646977585080746, 0.5875368156859605, 0.5739747384945311, 0.5638238215406218, 0.5459251049629128] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975, 0.646977585080746, 0.5875368156859605, 0.5739747384945311, 0.5638238215406218, 0.5459251049629128, 0.5326887238741003] ***
*** starting iteration: 10; err: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975, 0.646977585080746, 0.5875368156859605, 0.5739747384945311, 0.5638238215406218, 0.5459251049629128, 0.5326887238741003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975, 0.646977585080746, 0.5875368156859605, 0.5739747384945311, 0.5638238215406218, 0.5459251049629128, 0.5326887238741003, 0.5245266141929815] ***
*** finished computation of 3 references, err: [Inf, 3.12590003485497, 1.0264883694538398, 0.9638379140504699, 0.808178755622975, 0.646977585080746, 0.5875368156859605, 0.5739747384945311, 0.5638238215406218, 0.5459251049629128, 0.5326887238741003, 0.5245266141929815] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 29]]
** centroid: 1, normalized-entropy: 0.44886448872302936, [(2, 3), (3, 29)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 10]]
** centroid: 2, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.313900024083435] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.313900024083435, 0.564393082626574] ***
*** starting iteration: 2; err: [Inf, 2.313900024083435, 0.564393082626574] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.313900024083435, 0.564393082626574, 0.48273297188771735] ***
*** starting iteration: 3; err: [Inf, 2.313900024083435, 0.564393082626574, 0.48273297188771735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.313900024083435, 0.564393082626574, 0.48273297188771735, 0.481657981292619] ***
*** finished computation of 3 references, err: [Inf, 2.313900024083435, 0.564393082626574, 0.48273297188771735, 0.481657981292619] ***
*** center 1: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 35, 9]]
** centroid: 2, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 17]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.2020999615094885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.2020999615094885, 1.4010031322193266] ***
*** starting iteration: 2; err: [Inf, 5.2020999615094885, 1.4010031322193266] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.2020999615094885, 1.4010031322193266, 0.6897185622973789] ***
*** starting iteration: 3; err: [Inf, 5.2020999615094885, 1.4010031322193266, 0.6897185622973789] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.2020999615094885, 1.4010031322193266, 0.6897185622973789, 0.5928558927739147] ***
*** finished computation of 3 references, err: [Inf, 5.2020999615094885, 1.4010031322193266, 0.6897185622973789, 0.5928558927739147] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 10]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 30), (3, 10)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5813000073943673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5813000073943673, 0.9927326729511017] ***
*** starting iteration: 2; err: [Inf, 1.5813000073943673, 0.9927326729511017] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5813000073943673, 0.9927326729511017, 0.8514085141779222] ***
*** starting iteration: 3; err: [Inf, 1.5813000073943673, 0.9927326729511017, 0.8514085141779222] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5813000073943673, 0.9927326729511017, 0.8514085141779222, 0.646977585080746] ***
*** finished computation of 3 references, err: [Inf, 1.5813000073943673, 0.9927326729511017, 0.8514085141779222, 0.646977585080746] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 39]]
** centroid: 1, normalized-entropy: 0.8329458235361399, [(2, 14), (3, 39)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5772000006132936] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5772000006132936, 0.5774465289938413] ***
*** starting iteration: 2; err: [Inf, 1.5772000006132936, 0.5774465289938413] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5772000006132936, 0.5774465289938413, 0.5598292549022956] ***
*** starting iteration: 3; err: [Inf, 1.5772000006132936, 0.5774465289938413, 0.5598292549022956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5772000006132936, 0.5774465289938413, 0.5598292549022956, 0.558690713855895] ***
*** starting iteration: 4; err: [Inf, 1.5772000006132936, 0.5774465289938413, 0.5598292549022956, 0.558690713855895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5772000006132936, 0.5774465289938413, 0.5598292549022956, 0.558690713855895, 0.5577645543079255] ***
*** finished computation of 3 references, err: [Inf, 1.5772000006132936, 0.5774465289938413, 0.5598292549022956, 0.558690713855895, 0.5577645543079255] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 1, normalized-entropy: 0.2222848306856879, [(2, 1), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 8]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1471999994516633] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1471999994516633, 0.6003537519623852] ***
*** starting iteration: 2; err: [Inf, 1.1471999994516633, 0.6003537519623852] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501] ***
*** starting iteration: 3; err: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501, 0.5668821055011621] ***
*** starting iteration: 4; err: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501, 0.5668821055011621] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501, 0.5668821055011621, 0.5564718192650246] ***
*** starting iteration: 5; err: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501, 0.5668821055011621, 0.5564718192650246] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501, 0.5668821055011621, 0.5564718192650246, 0.5429163325965214] ***
*** starting iteration: 6; err: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501, 0.5668821055011621, 0.5564718192650246, 0.5429163325965214] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501, 0.5668821055011621, 0.5564718192650246, 0.5429163325965214, 0.5326887238741003] ***
*** starting iteration: 7; err: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501, 0.5668821055011621, 0.5564718192650246, 0.5429163325965214, 0.5326887238741003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501, 0.5668821055011621, 0.5564718192650246, 0.5429163325965214, 0.5326887238741003, 0.5245266141929815] ***
*** starting iteration: 8; err: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501, 0.5668821055011621, 0.5564718192650246, 0.5429163325965214, 0.5326887238741003, 0.5245266141929815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501, 0.5668821055011621, 0.5564718192650246, 0.5429163325965214, 0.5326887238741003, 0.5245266141929815, 0.5221821981771145] ***
*** starting iteration: 9; err: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501, 0.5668821055011621, 0.5564718192650246, 0.5429163325965214, 0.5326887238741003, 0.5245266141929815, 0.5221821981771145] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501, 0.5668821055011621, 0.5564718192650246, 0.5429163325965214, 0.5326887238741003, 0.5245266141929815, 0.5221821981771145, 0.52132815873816] ***
*** finished computation of 3 references, err: [Inf, 1.1471999994516633, 0.6003537519623852, 0.577397263896501, 0.5668821055011621, 0.5564718192650246, 0.5429163325965214, 0.5326887238741003, 0.5245266141929815, 0.5221821981771145, 0.52132815873816] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 29]]
** centroid: 1, normalized-entropy: 0.3451173149449528, [(2, 2), (3, 29)]
*** center 2: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 10]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 30), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0376094541312195] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0376094541312195, 0.33452581684743476] ***
*** finished computation of 3 references, err: [Inf, 1.0376094541312195, 0.33452581684743476] ***
*** center 1: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 16]]
** centroid: 2, normalized-entropy: 0.6292492238560344, [(2, 3), (3, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 10]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8134310141868039] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8134310141868039, 0.4608788123605034] ***
*** finished computation of 3 references, err: [Inf, 0.8134310141868039, 0.4608788123605034] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 18]]
** centroid: 1, normalized-entropy: 0.954434002924965, [(2, 30), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 1, 0]]
** centroid: 2, normalized-entropy: 0.18717625687320805, [(1, 34), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8088593652528483] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8088593652528483, 0.39778696379065764] ***
*** finished computation of 3 references, err: [Inf, 0.8088593652528483, 0.39778696379065764] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [29, 1, 0]]
** centroid: 1, normalized-entropy: 0.2108423003185322, [(1, 29), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 17]]
** centroid: 3, normalized-entropy: 0.9377342939868042, [(2, 31), (3, 17)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3597802189397289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3597802189397289, 0.17591104014026282] ***
*** finished computation of 7 references, err: [Inf, 0.3597802189397289, 0.17591104014026282] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 15]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 17, 6]]
** centroid: 7, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8866666666666667, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 3.006387366067477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.006387366067477, 0.6233130655515964] ***
*** starting iteration: 2; err: [Inf, 3.006387366067477, 0.6233130655515964] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.006387366067477, 0.6233130655515964, 0.3256443020308153] ***
*** starting iteration: 3; err: [Inf, 3.006387366067477, 0.6233130655515964, 0.3256443020308153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.006387366067477, 0.6233130655515964, 0.3256443020308153, 0.31948860394429734] ***
*** starting iteration: 4; err: [Inf, 3.006387366067477, 0.6233130655515964, 0.3256443020308153, 0.31948860394429734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.006387366067477, 0.6233130655515964, 0.3256443020308153, 0.31948860394429734, 0.3176491743991475] ***
*** starting iteration: 5; err: [Inf, 3.006387366067477, 0.6233130655515964, 0.3256443020308153, 0.31948860394429734, 0.3176491743991475] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.006387366067477, 0.6233130655515964, 0.3256443020308153, 0.31948860394429734, 0.3176491743991475, 0.3176491743991475] ***
*** finished computation of 3 references, err: [Inf, 3.006387366067477, 0.6233130655515964, 0.3256443020308153, 0.31948860394429734, 0.3176491743991475, 0.3176491743991475] ***
*** center 1: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 2, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 25]]
** centroid: 3, normalized-entropy: 0.9418285354475157, [(2, 14), (3, 25)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0188587620179919] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0188587620179919, 0.5514426611079579] ***
*** starting iteration: 2; err: [Inf, 1.0188587620179919, 0.5514426611079579] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0188587620179919, 0.5514426611079579, 0.39806103983576174] ***
*** starting iteration: 3; err: [Inf, 1.0188587620179919, 0.5514426611079579, 0.39806103983576174] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0188587620179919, 0.5514426611079579, 0.39806103983576174, 0.39614371088465916] ***
*** starting iteration: 4; err: [Inf, 1.0188587620179919, 0.5514426611079579, 0.39806103983576174, 0.39614371088465916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0188587620179919, 0.5514426611079579, 0.39806103983576174, 0.39614371088465916, 0.39614371088465916] ***
*** finished computation of 3 references, err: [Inf, 1.0188587620179919, 0.5514426611079579, 0.39806103983576174, 0.39614371088465916, 0.39614371088465916] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 29]]
** centroid: 2, normalized-entropy: 0.2108423003185322, [(2, 1), (3, 29)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 6]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.396386927590873] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.396386927590873, 1.490164565939785] ***
*** starting iteration: 2; err: [Inf, 4.396386927590873, 1.490164565939785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.396386927590873, 1.490164565939785, 0.7532147486397045] ***
*** starting iteration: 3; err: [Inf, 4.396386927590873, 1.490164565939785, 0.7532147486397045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.396386927590873, 1.490164565939785, 0.7532147486397045, 0.44871669858004304] ***
*** starting iteration: 4; err: [Inf, 4.396386927590873, 1.490164565939785, 0.7532147486397045, 0.44871669858004304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.396386927590873, 1.490164565939785, 0.7532147486397045, 0.44871669858004304, 0.40007040093279217] ***
*** starting iteration: 5; err: [Inf, 4.396386927590873, 1.490164565939785, 0.7532147486397045, 0.44871669858004304, 0.40007040093279217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.396386927590873, 1.490164565939785, 0.7532147486397045, 0.44871669858004304, 0.40007040093279217, 0.3858564208240277] ***
*** starting iteration: 6; err: [Inf, 4.396386927590873, 1.490164565939785, 0.7532147486397045, 0.44871669858004304, 0.40007040093279217, 0.3858564208240277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.396386927590873, 1.490164565939785, 0.7532147486397045, 0.44871669858004304, 0.40007040093279217, 0.3858564208240277, 0.36906444513807507] ***
*** starting iteration: 7; err: [Inf, 4.396386927590873, 1.490164565939785, 0.7532147486397045, 0.44871669858004304, 0.40007040093279217, 0.3858564208240277, 0.36906444513807507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.396386927590873, 1.490164565939785, 0.7532147486397045, 0.44871669858004304, 0.40007040093279217, 0.3858564208240277, 0.36906444513807507, 0.36451926635065407] ***
*** starting iteration: 8; err: [Inf, 4.396386927590873, 1.490164565939785, 0.7532147486397045, 0.44871669858004304, 0.40007040093279217, 0.3858564208240277, 0.36906444513807507, 0.36451926635065407] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.396386927590873, 1.490164565939785, 0.7532147486397045, 0.44871669858004304, 0.40007040093279217, 0.3858564208240277, 0.36906444513807507, 0.36451926635065407, 0.3639526345681374] ***
*** finished computation of 3 references, err: [Inf, 4.396386927590873, 1.490164565939785, 0.7532147486397045, 0.44871669858004304, 0.40007040093279217, 0.3858564208240277, 0.36906444513807507, 0.36451926635065407, 0.3639526345681374] ***
*** center 1: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 2, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 29]]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.3058229271190914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3058229271190914, 0.177652033863477] ***
*** starting iteration: 2; err: [Inf, 0.3058229271190914, 0.177652033863477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3058229271190914, 0.177652033863477, 0.16074532650742873] ***
*** starting iteration: 3; err: [Inf, 0.3058229271190914, 0.177652033863477, 0.16074532650742873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3058229271190914, 0.177652033863477, 0.16074532650742873, 0.15876667262206906] ***
*** starting iteration: 4; err: [Inf, 0.3058229271190914, 0.177652033863477, 0.16074532650742873, 0.15876667262206906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3058229271190914, 0.177652033863477, 0.16074532650742873, 0.15876667262206906, 0.1567525070585228] ***
*** starting iteration: 5; err: [Inf, 0.3058229271190914, 0.177652033863477, 0.16074532650742873, 0.15876667262206906, 0.1567525070585228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3058229271190914, 0.177652033863477, 0.16074532650742873, 0.15876667262206906, 0.1567525070585228, 0.15560746915733692] ***
*** starting iteration: 6; err: [Inf, 0.3058229271190914, 0.177652033863477, 0.16074532650742873, 0.15876667262206906, 0.1567525070585228, 0.15560746915733692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3058229271190914, 0.177652033863477, 0.16074532650742873, 0.15876667262206906, 0.1567525070585228, 0.15560746915733692, 0.1539679763483578] ***
*** starting iteration: 7; err: [Inf, 0.3058229271190914, 0.177652033863477, 0.16074532650742873, 0.15876667262206906, 0.1567525070585228, 0.15560746915733692, 0.1539679763483578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3058229271190914, 0.177652033863477, 0.16074532650742873, 0.15876667262206906, 0.1567525070585228, 0.15560746915733692, 0.1539679763483578, 0.15325863885265956] ***
*** finished computation of 7 references, err: [Inf, 0.3058229271190914, 0.177652033863477, 0.16074532650742873, 0.15876667262206906, 0.1567525070585228, 0.15560746915733692, 0.1539679763483578, 0.15325863885265956] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 4, 4]]
** centroid: 6, normalized-entropy: 1.0, [(2, 4), (3, 4)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 16, 8]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33928837125522904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33928837125522904, 0.23455850653717011] ***
*** starting iteration: 2; err: [Inf, 0.33928837125522904, 0.23455850653717011] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33928837125522904, 0.23455850653717011, 0.23230515080226027] ***
*** starting iteration: 3; err: [Inf, 0.33928837125522904, 0.23455850653717011, 0.23230515080226027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33928837125522904, 0.23455850653717011, 0.23230515080226027, 0.23035509833655232] ***
*** starting iteration: 4; err: [Inf, 0.33928837125522904, 0.23455850653717011, 0.23230515080226027, 0.23035509833655232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33928837125522904, 0.23455850653717011, 0.23230515080226027, 0.23035509833655232, 0.23035509833655232] ***
*** finished computation of 7 references, err: [Inf, 0.33928837125522904, 0.23455850653717011, 0.23230515080226027, 0.23035509833655232, 0.23035509833655232] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 24]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 9), (3, 24)]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3219435385665436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3219435385665436, 0.19542314413116074] ***
*** starting iteration: 2; err: [Inf, 0.3219435385665436, 0.19542314413116074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3219435385665436, 0.19542314413116074, 0.1744948732248399] ***
*** starting iteration: 3; err: [Inf, 0.3219435385665436, 0.19542314413116074, 0.1744948732248399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3219435385665436, 0.19542314413116074, 0.1744948732248399, 0.16152788899965664] ***
*** starting iteration: 4; err: [Inf, 0.3219435385665436, 0.19542314413116074, 0.1744948732248399, 0.16152788899965664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3219435385665436, 0.19542314413116074, 0.1744948732248399, 0.16152788899965664, 0.15598176315619028] ***
*** starting iteration: 5; err: [Inf, 0.3219435385665436, 0.19542314413116074, 0.1744948732248399, 0.16152788899965664, 0.15598176315619028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3219435385665436, 0.19542314413116074, 0.1744948732248399, 0.16152788899965664, 0.15598176315619028, 0.15428638923061366] ***
*** starting iteration: 6; err: [Inf, 0.3219435385665436, 0.19542314413116074, 0.1744948732248399, 0.16152788899965664, 0.15598176315619028, 0.15428638923061366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3219435385665436, 0.19542314413116074, 0.1744948732248399, 0.16152788899965664, 0.15598176315619028, 0.15428638923061366, 0.15404456746013023] ***
*** finished computation of 7 references, err: [Inf, 0.3219435385665436, 0.19542314413116074, 0.1744948732248399, 0.16152788899965664, 0.15598176315619028, 0.15428638923061366, 0.15404456746013023] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 16, 10]]
** centroid: 3, normalized-entropy: 0.961236604722876, [(2, 16), (3, 10)]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 18
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 19
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.6742000002161109] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6742000002161109, 0.22104552184628948] ***
*** finished computation of 7 references, err: [Inf, 0.6742000002161109, 0.22104552184628948] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 3]]
** centroid: 3, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 18, 6]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 18), (3, 6)]
*** center 5: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5441000103932015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5441000103932015, 0.29877281443326137] ***
*** finished computation of 7 references, err: [Inf, 0.5441000103932015, 0.29877281443326137] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 10, 3]]
** centroid: 6, normalized-entropy: 0.7793498372920851, [(2, 10), (3, 3)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5818000031666267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5818000031666267, 0.2738392511557333] ***
*** finished computation of 7 references, err: [Inf, 0.5818000031666267, 0.2738392511557333] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 2]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 10, 8]]
** centroid: 6, normalized-entropy: 0.9910760598382222, [(2, 10), (3, 8)]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 20
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.8680999985719204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8680999985719204, 0.27334378451866326] ***
*** finished computation of 7 references, err: [Inf, 0.8680999985719204, 0.27334378451866326] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 2]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 7]]
** centroid: 5, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 6: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4560000075542864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4560000075542864, 0.27221324038392064] ***
*** finished computation of 7 references, err: [Inf, 0.4560000075542864, 0.27221324038392064] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 18]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 8]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5477000029075372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5477000029075372, 0.31420813070225384] ***
*** finished computation of 7 references, err: [Inf, 0.5477000029075372, 0.31420813070225384] ***
*** center 1: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 6, 21]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(2, 6), (3, 21)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 26, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 22
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.37533539249090536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37533539249090536, 0.2174406608695368] ***
*** starting iteration: 2; err: [Inf, 0.37533539249090536, 0.2174406608695368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37533539249090536, 0.2174406608695368, 0.19043263039626318] ***
*** starting iteration: 3; err: [Inf, 0.37533539249090536, 0.2174406608695368, 0.19043263039626318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37533539249090536, 0.2174406608695368, 0.19043263039626318, 0.17785712487325] ***
*** finished computation of 7 references, err: [Inf, 0.37533539249090536, 0.2174406608695368, 0.19043263039626318, 0.17785712487325] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 8]]
** centroid: 4, normalized-entropy: 0.9975025463691153, [(2, 9), (3, 8)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1376772043216936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1376772043216936, 0.23054535903898463] ***
*** starting iteration: 2; err: [Inf, 1.1376772043216936, 0.23054535903898463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1376772043216936, 0.23054535903898463, 0.21787959210221078] ***
*** starting iteration: 3; err: [Inf, 1.1376772043216936, 0.23054535903898463, 0.21787959210221078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1376772043216936, 0.23054535903898463, 0.21787959210221078, 0.21628673276060958] ***
*** finished computation of 7 references, err: [Inf, 1.1376772043216936, 0.23054535903898463, 0.21787959210221078, 0.21628673276060958] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 3]]
*** center 7: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4716950770322279] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4716950770322279, 0.3224674945586109] ***
*** starting iteration: 2; err: [Inf, 0.4716950770322279, 0.3224674945586109] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4716950770322279, 0.3224674945586109, 0.27511160795755846] ***
*** starting iteration: 3; err: [Inf, 0.4716950770322279, 0.3224674945586109, 0.27511160795755846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4716950770322279, 0.3224674945586109, 0.27511160795755846, 0.24874938841431504] ***
*** finished computation of 7 references, err: [Inf, 0.4716950770322279, 0.3224674945586109, 0.27511160795755846, 0.24874938841431504] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 20, 10]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 20), (3, 10)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 29]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5005000007120413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5005000007120413, 0.3083290514442275] ***
*** starting iteration: 2; err: [Inf, 0.5005000007120413, 0.3083290514442275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5005000007120413, 0.3083290514442275, 0.23551857157048167] ***
*** starting iteration: 3; err: [Inf, 0.5005000007120413, 0.3083290514442275, 0.23551857157048167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5005000007120413, 0.3083290514442275, 0.23551857157048167, 0.23015871842751107] ***
*** finished computation of 7 references, err: [Inf, 0.5005000007120413, 0.3083290514442275, 0.23551857157048167, 0.23015871842751107] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 2]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(2, 17), (3, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 4]]
** centroid: 6, normalized-entropy: 0.9852281360342514, [(2, 3), (3, 4)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6280000050327236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280000050327236, 0.3507088710414655] ***
*** starting iteration: 2; err: [Inf, 0.6280000050327236, 0.3507088710414655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280000050327236, 0.3507088710414655, 0.320298391798616] ***
*** starting iteration: 3; err: [Inf, 0.6280000050327236, 0.3507088710414655, 0.320298391798616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6280000050327236, 0.3507088710414655, 0.320298391798616, 0.2701108677464336] ***
*** finished computation of 7 references, err: [Inf, 0.6280000050327236, 0.3507088710414655, 0.320298391798616, 0.2701108677464336] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 17]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 8]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.806399999890079] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.806399999890079, 0.5170526645860813] ***
*** starting iteration: 2; err: [Inf, 0.806399999890079, 0.5170526645860813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.806399999890079, 0.5170526645860813, 0.4937781355660492] ***
*** starting iteration: 3; err: [Inf, 0.806399999890079, 0.5170526645860813, 0.4937781355660492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.806399999890079, 0.5170526645860813, 0.4937781355660492, 0.4835505268436282] ***
*** finished computation of 7 references, err: [Inf, 0.806399999890079, 0.5170526645860813, 0.4937781355660492, 0.4835505268436282] ***
*** center 1: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 8]]
** centroid: 2, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 31]]
** centroid: 3, normalized-entropy: 0.43055186701043935, [(2, 3), (3, 31)]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 22
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.633333333333333, 3.0, 4.9, 1.5], [6.433333333333334, 3.02, 5.426666666666666, 2.146666666666667], [4.834782608695651, 3.260869565217391, 1.4652173913043476, 0.22173913043478266], [5.283333333333334, 2.433333333333333, 3.5, 1.0666666666666667], [5.392857142857143, 3.8, 1.507142857142857, 0.2857142857142857], [7.6, 3.3499999999999996, 6.35, 1.9], [5.366666666666667, 2.5666666666666664, 4.283333333333332, 1.4833333333333334], [6.26470588235294, 2.9235294117647057, 4.523529411764706, 1.441176470588235], [6.033333333333334, 2.75, 4.883333333333333, 1.7833333333333332]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 1, 3, 2, 2, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.0827586206896544, 3.551724137931035, 1.4724137931034476, 0.25172413793103454], [7.716666666666666, 3.1666666666666665, 6.566666666666667, 2.15], [5.718749999999999, 2.78125, 4.16875, 1.2875], [5.400000000000001, 2.6, 4.8, 1.9000000000000001], [6.381818181818182, 2.9272727272727277, 4.663636363636364, 1.4454545454545455], [6.057142857142857, 2.8285714285714287, 5.142857142857143, 1.842857142857143], [4.720000000000001, 2.8400000000000003, 1.42, 0.24], [5.125, 2.325, 3.375, 1.025], [6.646666666666667, 3.1066666666666665, 5.66, 2.2]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.071428571428572, 2.8238095238095235, 4.419047619047619, 1.380952380952381], [5.971428571428571, 2.6571428571428575, 4.957142857142857, 1.8142857142857145], [4.942857142857142, 3.3607142857142853, 1.4464285714285712, 0.23214285714285712], [7.566666666666666, 2.85, 6.45, 2.066666666666667], [6.500000000000001, 2.9959999999999996, 5.4559999999999995, 2.024], [5.325, 2.45, 3.375, 1.025], [7.366666666666667, 3.5333333333333337, 6.266666666666667, 2.1666666666666665]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 3, 2, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[78, 1, 8, 1, 1, 11, 24, 30, 10, 35, 40, 1, 2, 34, 32, 23, 11, 33, 11, 36, 36, 29, 11, 21, 30, 21, 1, 30, 30, 3, 28, 31, 30, 24, 12, 34, 42, 43, 23, 22, 21, 29, 19, 24, 34, 8, 40, 15, 45, 42, 29, 52, 46, 30, 26, 36, 38, 34, 30, 17, 39, 16, 19, 22, 50, 42, 25, 25, 53, 28, 16, 31, 51, 27, 1, 33, 35, 52, 45, 19, 24, 38, 41, 28, 47, 35, 32, 62, 34, 54, 25, 26, 1, 48, 29, 46, 37, 40, 36, 57, 51, 33, 32, 50, 37, 24, 36, 31, 40, 25, 17, 42, 23, 30, 45, 37, 38, 28, 59, 54, 1, 20, 39, 11, 50, 12, 85, 41, 50, 35, 53, 26, 29, 30, 35, 43, 28, 57, 55, 42, 31, 26, 5, 45, 29, 1, 40, 25, 12, 54, 39, 39, 29, 25, 11, 17, 34, 44, 30, 52, 64, 33, 36, 34, 46, 39, 22, 42, 39, 46, 36, 37, 45, 31, 21, 39, 28, 45, 38, 17, 31, 39, 30, 37, 28, 23, 45, 52, 77, 64, 18, 41, 28, 43, 28, 41, 54, 41, 48, 36, 35, 7, 43, 29, 41, 1, 30, 35, 37, 29, 42, 55, 40, 41, 51, 30, 43, 42, 45, 35, 42, 39, 39, 32, 61, 39, 41, 49, 39, 37, 36, 33, 34, 5, 29, 31, 44, 27, 18, 18, 24, 40, 33, 47, 11, 55, 32, 51, 28, 41, 30, 29, 23, 28, 35, 47, 34, 22, 44, 25, 39, 57, 26, 32, 21, 30, 34, 48, 34, 31, 37, 30, 34, 44, 39, 24, 38, 25, 24, 32, 64, 5, 30, 41, 28, 1, 40, 44, 52, 28, 38, 37, 39, 49, 33, 72, 41, 19, 34, 32]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5940000000000001, speedup = 0.45371582222720164, eval_ratio = 0.041269)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3960813492063493,"recall":0.3958333333333334,"f1":null,"seconds":7.108785212039948e-5,"exhaustive_search_seconds":0.0002639070153236389,"evaluations":340.1328125,"distances_sum":1671.4441118840746}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5798611111111112,"recall":0.5798611111111112,"f1":0.5798611111111112,"seconds":0.00010468997061252594,"exhaustive_search_seconds":0.0002639070153236389,"evaluations":379.8671875,"distances_sum":1559.5936790983603}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6979166666666664,"recall":0.6979166666666664,"f1":0.6979166666666664,"seconds":0.00013426318764686584,"exhaustive_search_seconds":0.0002639070153236389,"evaluations":418.6171875,"distances_sum":1512.5445901622263}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7638888888888883,"recall":0.7638888888888883,"f1":0.7638888888888883,"seconds":0.0001653134822845459,"exhaustive_search_seconds":0.0002639070153236389,"evaluations":458.109375,"distances_sum":1493.222600331814}
KCenters.DeloneInvIndex> reached performance {"precision":0.8081597222222217,"recall":0.8081597222222217,"f1":0.8081597222222217,"seconds":0.00019497796893119812,"exhaustive_search_seconds":0.0002639070153236389,"evaluations":496.7890625,"distances_sum":1482.0256578584283}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7339999999999999, speedup = 2.151485148514851, eval_ratio = 0.048882)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
