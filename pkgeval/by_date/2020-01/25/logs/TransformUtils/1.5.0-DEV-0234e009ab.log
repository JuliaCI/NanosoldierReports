Julia Version 1.5.0-DEV.150
Commit 0234e009ab (2020-01-25 18:06 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_TM3irE/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_TM3irE/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_TM3irE/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.1038262007063353 -0.00977167092191114; -0.1038262007063353 0.0 -0.1886873670887827; 0.00977167092191114 0.1886873670887827 0.0])
dAA = so3([0.0 0.15818412168399515 0.1265871716982238; -0.15818412168399515 0.0 0.17950551669121792; -0.1265871716982238 -0.17950551669121792 0.0])
dAA = so3([0.0 0.004030378351003074 -0.014839047519923744; -0.004030378351003074 0.0 -0.07204508432249747; 0.014839047519923744 0.07204508432249747 0.0])
dAA = Quaternion(0.9943401836571963, [0.09076504195474393, -0.027315010636274503, -0.047991629660462026])
dAA = SO3([0.980914071653279 0.19171028659704606 0.032476915578059595; -0.19439566317956972 0.9632701463335359 0.18525914638566204; 0.00423204082698002 -0.18803667513399436 0.9821528896434565])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8765503919402269 0.2976207966426913 0.3782608515233956; -0.4343026239896769 0.8278342942189991 0.3550656447906681; -0.20746238498849826 -0.47551261047494986 0.8548959679950436]), [1.8868736708878269, -0.09771670921911141, -1.038262007063353])
xj = SE3(SO3([0.9627327985016679 0.21408423188934358 -0.16526796527305754; -0.26540169933839 0.8654024845828644 -0.4250182086288775; 0.052033611035960554 0.45304136823711244 0.8899696747577434]), [0.7204508432249747, -0.14839047519923743, -0.040303783510030736])
Dx = SE3(SO3([0.9483534492492462 -0.28217999524362125 -0.14491440777702852; 0.04207803577164705 0.5646988910199965 -0.8242236355421908; 0.31441242692148313 0.7755576140849215 0.5474077210199423]), [-1.2074594304005504, -0.8636428925135988, 0.39394585612344934])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
