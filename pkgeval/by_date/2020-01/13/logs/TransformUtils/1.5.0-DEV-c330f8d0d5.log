Julia Version 1.5.0-DEV.49
Commit c330f8d0d5 (2020-01-10 15:42 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_720T47/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_720T47/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_720T47/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.023604806668736062 0.11634354396765417; 0.023604806668736062 0.0 -0.10483251428562973; -0.11634354396765417 0.10483251428562973 0.0])
dAA = so3([0.0 0.011922849884328046 0.10739918922203694; -0.011922849884328046 0.0 0.02763118993216053; -0.10739918922203694 -0.02763118993216053 0.0])
dAA = so3([0.0 -0.19239498069275773 0.09641815233917986; 0.19239498069275773 0.0 -0.1022897803686763; -0.09641815233917986 0.1022897803686763 0.0])
dAA = Quaternion(0.9985930451728952, [-0.05046487513931824, 0.00824557038549223, -0.014044111880617834])
dAA = SO3([0.9963841206539639 0.07624877375586367 -0.037480776530838034; -0.07743738695268182 0.9965040813556094 -0.03135389837889535; 0.0349590504815009 0.03414293986083489 0.998805348627595])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9637460028039422 0.02020864892476728 0.26605498038574515; -0.03863608299560238 0.9971881740157149 0.0642105808567496; -0.2640092709928586 -0.07216201294198878 0.9618168997880935]), [1.0483251428562972, 1.1634354396765416, 0.2360480666873606])
xj = SE3(SO3([0.9967036531588596 0.06664110907080627 0.04626867581416996; -0.0761053023813494 0.9655887068197256 0.24868942923182952; -0.028103571467470563 -0.25139095418097823 0.9674775332930218]), [1.0228978036867629, 0.9641815233917985, 1.9239498069275773])
Dx = SE3(SO3([0.9709291759065716 0.09328807962062691 -0.22044017232365204; -0.053721263017899534 0.9823612434700332 0.1791100589798664; 0.23326071523758019 -0.1620608574847892 0.9588147460266491]), [-0.4624288135881997, -0.3210098883398511, 1.6038931390181355])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
