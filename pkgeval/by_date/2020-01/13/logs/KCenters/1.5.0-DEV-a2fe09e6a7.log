Julia Version 1.5.0-DEV.57
Commit a2fe09e6a7 (2020-01-13 17:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed MappedArrays ──────────────── v0.2.2
 Installed InvertedIndices ───────────── v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed KCenters ──────────────────── v0.1.8
 Installed TableTraits ───────────────── v1.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed CategoricalArrays ─────────── v0.7.6
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Parsers ───────────────────── v0.3.10
 Installed PooledArrays ──────────────── v0.5.3
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataFrames ────────────────── v0.20.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataStructures ────────────── v0.17.7
 Installed MLDataPattern ─────────────── v0.5.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed JSON ──────────────────────── v0.21.0
 Installed Tables ────────────────────── v0.2.11
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Compat ────────────────────── v3.2.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed Missings ──────────────────── v0.4.3
 Installed LearnBase ─────────────────── v0.2.2
 Installed StatsBase ─────────────────── v0.32.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.6
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.7
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_0Hg4wX/Project.toml`
 [no changes]
  Updating `/tmp/jl_0Hg4wX/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_0Hg4wX/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 150.81000000000012
[ Info: 82.42000000000003
[ Info: 42.15999999999999
[ Info: 24.03
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999835129265
[ Info: 75.72000115944812
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 17.98709779855209
inertia(cdnet.distances) = 24.59711693128394
inertia(crand.distances) = 19.877562954605487
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8552182192807201,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.40625,"distances_sum":2335.9500035453584}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51953125, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.51953125,"f1":null,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.1640625,"distances_sum":1453.4028558444797}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.7097350566100573,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.4453125,"distances_sum":1620.4039155659098}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8552182192807201,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.40625,"distances_sum":2335.9500035453584}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8716559482184489,"seconds":6.768852472305298e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.3515625,"distances_sum":2457.6181212956362}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9269464910089916,"seconds":7.1302056312561035e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.640625,"distances_sum":2811.8223100137884}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8650734681984691,"seconds":6.673857569694519e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.4140625,"distances_sum":2400.765097152714}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9120509698634705,"seconds":0.00013202987611293793,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.4921875,"distances_sum":2715.6382585187757}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9323920870795878,"seconds":7.273629307746887e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7109375,"distances_sum":2872.972105653311}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9323920870795878,"seconds":7.273629307746887e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7109375,"distances_sum":2872.972105653311}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.951648351648352,"seconds":7.467344403266907e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8203125,"distances_sum":3043.2685045121552}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.950188873626374,"seconds":6.934627890586853e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.78125,"distances_sum":3048.697256600989}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9748340201465203,"seconds":7.377937436103821e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9296875,"distances_sum":3230.503446128861}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9337313727938733,"seconds":6.735324859619141e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.671875,"distances_sum":2877.2426915175765}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9562187812187815,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.828125,"distances_sum":3118.418699080362}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9748340201465203,"seconds":7.377937436103821e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9296875,"distances_sum":3230.503446128861}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9748340201465203,"seconds":7.377937436103821e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9296875,"distances_sum":3230.503446128861}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.412109375,"f1":null,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.34375,"distances_sum":1004.1726109318793}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.412109375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.412109375,"f1":null,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.34375,"distances_sum":1004.1726109318793}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6025390625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.6025390625,"f1":0.7348514332889339,"seconds":1.3921409845352173e-5,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.6953125,"distances_sum":1497.0724471486392}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7887815309690317,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.6875,"distances_sum":1688.2483113334915}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.7887815309690317,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.6875,"distances_sum":1688.2483113334915}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9357371794871798,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5625,"distances_sum":2622.9478617369077}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8667306651681659,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.078125,"distances_sum":2103.1800744809034}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9357371794871798,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5625,"distances_sum":2622.9478617369077}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.890625,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9357371794871798,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5625,"distances_sum":2622.9478617369077}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8748064435564442,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.1953125,"distances_sum":2127.4957100951706}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.79296875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8748064435564442,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.1953125,"distances_sum":2127.4957100951706}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.79296875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8748064435564442,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.1953125,"distances_sum":2127.4957100951706}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.79296875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8748064435564442,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.1953125,"distances_sum":2127.4957100951706}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1884765625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1884765625,"f1":null,"seconds":3.4850090742111206e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.46875,"distances_sum":539.248088875106}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.7010062853812861,"seconds":4.63239848613739e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.4609375,"distances_sum":1403.3221210165543}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55859375,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.55859375,"f1":0.7010062853812861,"seconds":4.63239848613739e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.4609375,"distances_sum":1403.3221210165543}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9448717948717954,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.828125,"distances_sum":2623.235862500678}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9448717948717954,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.828125,"distances_sum":2623.235862500678}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.95884271978022,"seconds":6.373971700668335e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.828125,"distances_sum":2734.7075079654333}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.95884271978022,"seconds":6.373971700668335e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.828125,"distances_sum":2734.7075079654333}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.95884271978022,"seconds":6.373971700668335e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.828125,"distances_sum":2734.7075079654333}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.369140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.369140625,"f1":null,"seconds":4.081055521965027e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.5546875,"distances_sum":963.526279827692}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.369140625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.369140625,"f1":null,"seconds":4.081055521965027e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.5546875,"distances_sum":963.526279827692}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8009006618381627,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.1484375,"distances_sum":1766.316623420888}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9204987720612724,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7265625,"distances_sum":2439.1400047825928}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.86328125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.86328125,"f1":0.9204987720612724,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7265625,"distances_sum":2439.1400047825928}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.920032051282052,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.703125,"distances_sum":2476.8411503756247}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9653102106227112,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8984375,"distances_sum":2788.1349637435765}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9653102106227112,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8984375,"distances_sum":2788.1349637435765}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9653102106227112,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8984375,"distances_sum":2788.1349637435765}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8899017649017656,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.2109375,"distances_sum":2265.8536204852217}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.19921875,"f1":null,"seconds":3.5762786865234375e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.703125,"distances_sum":537.9878319526443}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7138671875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7138671875,"f1":0.8208895271395279,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.8671875,"distances_sum":1889.7677945424737}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.814453125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.814453125,"f1":0.8899017649017656,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.2109375,"distances_sum":2265.8536204852217}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.907217782217783,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.09375,"distances_sum":2402.7897392557084}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9410058691308697,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6875,"distances_sum":2696.8055062195704}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9410058691308697,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6875,"distances_sum":2696.8055062195704}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.950898580586081,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7421875,"distances_sum":2732.3604141723563}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9727163461538464,"seconds":6.5583735704422e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8984375,"distances_sum":2875.286250011449}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9665006868131875,"seconds":6.204470992088318e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8828125,"distances_sum":2837.7996558840123}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9727163461538464,"seconds":6.5583735704422e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8984375,"distances_sum":2875.286250011449}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9727163461538464,"seconds":6.5583735704422e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8984375,"distances_sum":2875.286250011449}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5126953125, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5126953125,"f1":null,"seconds":4.36045229434967e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":6.59375,"distances_sum":1346.886012528838}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.189453125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.189453125,"f1":null,"seconds":3.4961849451065063e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":5.1484375,"distances_sum":545.7936688267006}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3681640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3681640625,"f1":null,"seconds":4.021450877189636e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":5.7265625,"distances_sum":1005.7290104345275}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5244140625, conf: {"ssize":1,"bsize":3}, perf: {"precision":0.982421875,"recall":0.5244140625,"f1":0.6668552801365305,"seconds":4.526227712631226e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":6.640625,"distances_sum":1407.8502101529753}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5244140625,"state":{"ssize":1,"bsize":3},"perf":{"precision":0.982421875,"recall":0.5244140625,"f1":0.6668552801365305,"seconds":4.526227712631226e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":6.640625,"distances_sum":1407.8502101529753}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":5,"bsize":4}, perf: {"precision":0.9858072916666666,"recall":0.65625,"f1":0.7728860549173056,"seconds":4.822388291358948e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":6.9765625,"distances_sum":1761.52468238735}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9911644345238096,"recall":0.796875,"f1":0.877299393315019,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.078125,"distances_sum":2412.0809792858836}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":4,"bsize":6}, perf: {"precision":0.9824683779761906,"recall":0.7744140625,"f1":0.857293812957876,"seconds":7.845461368560791e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.03125,"distances_sum":2367.7555523004753}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":0.9941127232142858,"recall":0.8193359375,"f1":0.8918295896811529,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.203125,"distances_sum":2548.2932561571674}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":6,"bsize":5}, perf: {"precision":0.9870349702380952,"recall":0.7646484375,"f1":0.8550743527306033,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":7.71875,"distances_sum":2194.077404935446}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9881138392857143,"recall":0.86328125,"f1":0.9164792239010993,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.6328125,"distances_sum":2757.9768782896335}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.52734375, conf: {"ssize":7,"bsize":3}, perf: {"precision":null,"recall":0.52734375,"f1":null,"seconds":6.534159183502197e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":6.6171875,"distances_sum":1393.7606674641986}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":3,"bsize":6}, perf: {"precision":0.9873046875,"recall":0.7890625,"f1":0.8704868699009333,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.0625,"distances_sum":2455.319867140235}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9874999999999998,"recall":0.6494140625,"f1":0.7702368811743817,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":6.890625,"distances_sum":1652.3229747724554}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.86328125,"state":{"ssize":1,"bsize":7},"perf":{"precision":0.9881138392857143,"recall":0.86328125,"f1":0.9164792239010993,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.6328125,"distances_sum":2757.9768782896335}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":11}, perf: {"precision":0.9862351190476191,"recall":0.921875,"f1":0.9508012820512824,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.7890625,"distances_sum":3104.1975312470286}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":0.9909319196428572,"recall":0.89453125,"f1":0.9337776156135535,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.609375,"distances_sum":2971.965432944431}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9946521577380953,"recall":0.90625,"f1":0.9441399095695975,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.71875,"distances_sum":2959.6874665502896}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":0.9891648065476191,"recall":0.923828125,"f1":0.9529525812728942,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.7890625,"distances_sum":3087.9145246335884}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.9853236607142858,"recall":0.939453125,"f1":0.9601290636446888,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.859375,"distances_sum":3174.9597118294587}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.9853236607142858,"recall":0.939453125,"f1":0.9601290636446888,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.859375,"distances_sum":3174.9597118294587}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.9853236607142858,"recall":0.939453125,"f1":0.9601290636446888,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.859375,"distances_sum":3174.9597118294587}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":0.9653645833333333,"recall":0.564453125,"f1":0.6971570096570099,"seconds":0.00021563470363616943,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.53125,"distances_sum":1461.7348103454422}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.564453125,"state":{"ssize":1,"bsize":3},"perf":{"precision":0.9653645833333333,"recall":0.564453125,"f1":0.6971570096570099,"seconds":0.00021563470363616943,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.53125,"distances_sum":1461.7348103454422}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9783854166666665,"recall":0.6923828125,"f1":0.7976455835830841,"seconds":4.967674612998962e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.0546875,"distances_sum":1858.2709512436104}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6923828125,"state":{"ssize":1,"bsize":4},"perf":{"precision":0.9783854166666665,"recall":0.6923828125,"f1":0.7976455835830841,"seconds":4.967674612998962e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.0546875,"distances_sum":1858.2709512436104}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9826264880952381,"recall":0.900390625,"f1":0.9356716200466204,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.7734375,"distances_sum":2814.2604159115317}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":0.9826264880952381,"recall":0.900390625,"f1":0.9356716200466204,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.7734375,"distances_sum":2814.2604159115317}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.900390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":0.9826264880952381,"recall":0.900390625,"f1":0.9356716200466204,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.7734375,"distances_sum":2814.2604159115317}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4794921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.4794921875,"f1":null,"seconds":4.019588232040405e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":5.984375,"distances_sum":1267.0807902252868}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8470165251415259,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.875,"distances_sum":1980.5050047384198}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7939114704739713,"seconds":4.542991518974304e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.578125,"distances_sum":1657.8332238651694}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8470165251415259,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.875,"distances_sum":1980.5050047384198}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.890946033133534,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.1015625,"distances_sum":2262.410987355305}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8997486888111896,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.1171875,"distances_sum":2344.2903926850677}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9019891566766576,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.140625,"distances_sum":2355.543126455641}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9073010323010331,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.1640625,"distances_sum":2439.759543221874}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.84375,"f1":0.9073010323010331,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.1640625,"distances_sum":2439.759543221874}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9324862637362641,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.640625,"distances_sum":2637.7157619517016}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9573145604395606,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.7578125,"distances_sum":2796.248021737481}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9082360347985355,"seconds":6.455928087234497e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.2890625,"distances_sum":2460.3152066072375}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9262992216117223,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.421875,"distances_sum":2595.4509328282256}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9613381410256416,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.8046875,"distances_sum":2843.9577285377613}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9613381410256416,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.8046875,"distances_sum":2843.9577285377613}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9613381410256416,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.8046875,"distances_sum":2843.9577285377613}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7780571858696868,"seconds":4.6622008085250854e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.203125,"distances_sum":1671.3019544792269}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8839774808524815,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3125,"distances_sum":2192.8062712073183}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8839774808524815,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3125,"distances_sum":2192.8062712073183}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9422905219780227,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6796875,"distances_sum":2667.768721646822}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9575206043956049,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7578125,"distances_sum":2787.430914731706}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9575206043956049,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7578125,"distances_sum":2787.430914731706}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9673592032967036,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8046875,"distances_sum":2873.8954475887977}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9718005952380957,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8984375,"distances_sum":2873.4182434731483}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9718005952380957,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8984375,"distances_sum":2873.4182434731483}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9718005952380957,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8984375,"distances_sum":2873.4182434731483}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3505859375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3505859375,"f1":null,"seconds":3.6712735891342163e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":5.734375,"distances_sum":886.2631319816692}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3359375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3359375,"f1":null,"seconds":3.4775584936141968e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":5.6640625,"distances_sum":878.4767543467801}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3505859375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3505859375,"f1":null,"seconds":3.6712735891342163e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":5.734375,"distances_sum":886.2631319816692}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8774735680985689,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.171875,"distances_sum":2090.1973556154785}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5390625,"f1":null,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.015625,"distances_sum":1336.7278792457616}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.35546875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.35546875,"f1":null,"seconds":4.610046744346619e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":5.625,"distances_sum":937.1636578599513}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7978515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7978515625,"f1":0.8774735680985689,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.171875,"distances_sum":2090.1973556154785}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9427541208791214,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.59375,"distances_sum":2699.4000369224964}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9372512903762907,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.6328125,"distances_sum":2578.942518869657}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.903815455377956,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.3671875,"distances_sum":2304.7222896297667}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8766944860694867,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.1953125,"distances_sum":2107.842406920355}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9427541208791214,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.59375,"distances_sum":2699.4000369224964}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8984375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9427541208791214,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.59375,"distances_sum":2699.4000369224964}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.359375,"f1":null,"seconds":3.6954879760742188e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.6015625,"distances_sum":849.0692275649712}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8216866466866477,"seconds":4.8745423555374146e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.9921875,"distances_sum":1824.4959923162755}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8563733141858151,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.21875,"distances_sum":1956.192886861782}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8563733141858151,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.21875,"distances_sum":1956.192886861782}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9494848901098907,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.765625,"distances_sum":2666.661947749876}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9034741300366308,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6640625,"distances_sum":2283.052470181241}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9494848901098907,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.765625,"distances_sum":2666.661947749876}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688816391941396,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.890625,"distances_sum":2789.9085267047026}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9525354853479857,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8203125,"distances_sum":2672.9916340387376}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688816391941396,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.890625,"distances_sum":2789.9085267047026}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688816391941396,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.890625,"distances_sum":2789.9085267047026}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5380859375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5380859375,"f1":0.6864572927072933,"seconds":4.239380359649658e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.6875,"distances_sum":1325.2178507527078}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.509765625, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.509765625,"f1":null,"seconds":4.103407263755798e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.4140625,"distances_sum":1251.5938730239452}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3388671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3388671875,"f1":null,"seconds":3.5017728805541992e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.0078125,"distances_sum":844.3065905966574}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5380859375,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5380859375,"f1":0.6864572927072933,"seconds":4.239380359649658e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.6875,"distances_sum":1325.2178507527078}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8592350357975364,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.8203125,"distances_sum":1973.1880022586324}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.71875,"f1":0.8234957750582759,"seconds":4.734843969345093e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7578125,"distances_sum":1783.8601858347315}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8660183566433574,"seconds":6.2659382820129395e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.890625,"distances_sum":2018.2049576590757}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8032699938949946,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.5390625,"distances_sum":1654.7439671613743}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9059357309357318,"seconds":6.280839443206787e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3515625,"distances_sum":2275.808259702523}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.83984375,"f1":0.9059357309357318,"seconds":6.280839443206787e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3515625,"distances_sum":2275.808259702523}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9302369505494513,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.4609375,"distances_sum":2568.007377563447}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9496565934065939,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6953125,"distances_sum":2645.8611910269688}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9245109057609062,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.4921875,"distances_sum":2477.8580321231943}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.907552343489844,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.28125,"distances_sum":2367.6435938019936}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.917711455211456,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.4140625,"distances_sum":2454.5246737871275}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9471039377289385,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.703125,"distances_sum":2593.639073661394}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9496565934065939,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6953125,"distances_sum":2645.8611910269688}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.912109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9496565934065939,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6953125,"distances_sum":2645.8611910269688}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7926519660894669,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.484375,"distances_sum":1591.970775899339}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.595703125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.595703125,"f1":0.729522040459541,"seconds":4.6622008085250854e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.21875,"distances_sum":1375.5377573309197}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5654296875,"f1":null,"seconds":4.5318156480789185e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.9765625,"distances_sum":1243.863569184437}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.7926519660894669,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.484375,"distances_sum":1591.970775899339}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9535370879120885,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6875,"distances_sum":2632.1639640125272}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9474244505494511,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6875,"distances_sum":2569.245432001565}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9091720779220787,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.421875,"distances_sum":2249.80155765661}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8617195304695312,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.0625,"distances_sum":1916.1738537123247}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8040079711954721,"seconds":4.410743713378906e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.4765625,"distances_sum":1603.5637559510662}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8752783674658683,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.2421875,"distances_sum":1950.2342837337428}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9535370879120885,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6875,"distances_sum":2632.1639640125272}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644691,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9296875,"distances_sum":2719.914300759759}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9587282509157515,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7578125,"distances_sum":2607.937228174049}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9630780677655683,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8984375,"distances_sum":2588.248038585459}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9758756868131869,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8828125,"distances_sum":2731.206812786582}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9570226648351654,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8046875,"distances_sum":2593.6213483453826}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644691,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9296875,"distances_sum":2719.914300759759}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644691,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9296875,"distances_sum":2719.914300759759}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3759765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3759765625,"f1":null,"seconds":3.5297125577926636e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.3203125,"distances_sum":914.3454591840606}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8709004537129545,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.1484375,"distances_sum":2017.5234151279528}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8709004537129545,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.1484375,"distances_sum":2017.5234151279528}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9497455669330674,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.71875,"distances_sum":2603.735867537014}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9567739552114556,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.703125,"distances_sum":2704.3484013287834}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9179492382617389,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.5390625,"distances_sum":2399.2238679178868}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9028102106227113,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.3515625,"distances_sum":2210.293599656909}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9567739552114556,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.703125,"distances_sum":2704.3484013287834}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9686240842490844,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8515625,"distances_sum":2708.336099025816}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9734375000000004,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9296875,"distances_sum":2735.5698919345355}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752804487179493,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.90625,"distances_sum":2765.3876451744813}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752804487179493,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.90625,"distances_sum":2765.3876451744813}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752804487179493,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.90625,"distances_sum":2765.3876451744813}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8766462703962713,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.25,"distances_sum":2098.979380515293}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7874484890109897,"seconds":4.364177584648132e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":7.375,"distances_sum":1637.7495375074081}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.79296875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8766462703962713,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.25,"distances_sum":2098.979380515293}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9298248626373634,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.671875,"distances_sum":2463.225833984216}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9584134615384621,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.7734375,"distances_sum":2722.548248906627}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9394459706959711,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.6328125,"distances_sum":2580.548866824704}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9114671786546795,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.3828125,"distances_sum":2316.026651962022}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9584134615384621,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.7734375,"distances_sum":2722.548248906627}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723786630036633,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.8984375,"distances_sum":2789.0932368555373}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739983974358977,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.8984375,"distances_sum":2807.1498030404196}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654075091575095,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.859375,"distances_sum":2733.1003251340053}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731799450549452,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.9375,"distances_sum":2791.292716776973}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9755036630036633,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.90625,"distances_sum":2830.884808540646}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9672676282051285,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.84375,"distances_sum":2764.323992197852}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679887820512825,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.8671875,"distances_sum":2772.3914740379814}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9755036630036633,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.90625,"distances_sum":2830.884808540646}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9755036630036633,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.90625,"distances_sum":2830.884808540646}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7058916777666782,"seconds":4.366040229797363e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":7.34375,"distances_sum":1273.7199764551276}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5654296875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5654296875,"f1":0.7058916777666782,"seconds":4.366040229797363e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":7.34375,"distances_sum":1273.7199764551276}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8769381660006667,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.171875,"distances_sum":2068.7579644788366}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7978515625,"state":{"ssize":8,"bsize":5},"perf":{"precision":1.0,"recall":0.7978515625,"f1":0.8769381660006667,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.171875,"distances_sum":2068.7579644788366}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9372341200466205,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.6484375,"distances_sum":2521.962680288936}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9542124542124548,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.75,"distances_sum":2629.218900313135}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":10,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9542124542124548,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.75,"distances_sum":2629.218900313135}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":10,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9542124542124548,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.75,"distances_sum":2629.218900313135}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1982421875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1982421875,"f1":null,"seconds":3.0603259801864624e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":4.921875,"distances_sum":530.8783303291725}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.53515625,"f1":0.6834831834831842,"seconds":4.14624810218811e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.9453125,"distances_sum":1328.1060921930982}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.53515625,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.53515625,"f1":0.6834831834831842,"seconds":4.14624810218811e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.9453125,"distances_sum":1328.1060921930982}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8079991189366197,"seconds":4.6622008085250854e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.4921875,"distances_sum":1814.0032580599488}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6953125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6953125,"f1":0.8079991189366197,"seconds":4.6622008085250854e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.4921875,"distances_sum":1814.0032580599488}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8768981018981027,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.109375,"distances_sum":2107.473471854154}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.796875,"f1":0.8768981018981027,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.109375,"distances_sum":2107.473471854154}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.796875,"f1":0.8768981018981027,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.109375,"distances_sum":2107.473471854154}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7128930097680103,"seconds":4.407018423080444e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.96875,"distances_sum":1110.0821216083896}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8576813811188818,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.21875,"distances_sum":1475.1471008692722}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1806640625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1806640625,"f1":null,"seconds":3.2298266887664795e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":4.984375,"distances_sum":346.20130905907723}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8576813811188818,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.21875,"distances_sum":1475.1471008692722}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9345123626373635,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.5546875,"distances_sum":1859.975630744476}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9009537337662346,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.4453125,"distances_sum":1669.3296861312765}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9345123626373635,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.5546875,"distances_sum":1859.975630744476}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.95117902930403,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.734375,"distances_sum":1954.95542348823}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.95117902930403,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.734375,"distances_sum":1954.95542348823}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.95117902930403,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.734375,"distances_sum":1954.95542348823}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1630859375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1630859375,"f1":null,"seconds":3.1441450119018555e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.2890625,"distances_sum":341.21634745356596}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1630859375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1630859375,"f1":null,"seconds":3.1441450119018555e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.2890625,"distances_sum":341.21634745356596}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1630859375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1630859375,"f1":null,"seconds":3.1441450119018555e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.2890625,"distances_sum":341.21634745356596}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.812286151348652,"seconds":4.637986421585083e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.03125,"distances_sum":1406.788458669952}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.8022878163503173,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.0546875,"distances_sum":1346.946885618951}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5986328125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5986328125,"f1":0.7341307997558004,"seconds":4.4442713260650635e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.6875,"distances_sum":1220.9785596174445}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7001953125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7001953125,"f1":0.812286151348652,"seconds":4.637986421585083e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.03125,"distances_sum":1406.788458669952}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9485347985347993,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.875,"distances_sum":2079.949033180198}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8652930402930412,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.578125,"distances_sum":1630.8377563056051}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8948182026307033,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7265625,"distances_sum":1751.1560183055915}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9271150724275729,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7890625,"distances_sum":1933.4269797793959}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8608235514485523,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.5078125,"distances_sum":1643.3834525086884}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9485347985347993,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.875,"distances_sum":2079.949033180198}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.960828754578755,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.875,"distances_sum":2184.8715578947345}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.956421703296704,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8828125,"distances_sum":2145.0282407083237}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619677197802201,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8671875,"distances_sum":2188.294028636792}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9619677197802201,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8671875,"distances_sum":2188.294028636792}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9619677197802201,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8671875,"distances_sum":2188.294028636792}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7963494838494847,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.03125,"distances_sum":1469.9484487143043}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3857421875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3857421875,"f1":null,"seconds":3.6098062992095947e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":5.6484375,"distances_sum":833.1926403550639}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.53515625,"f1":0.6816417957042961,"seconds":4.235655069351196e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.28125,"distances_sum":1146.1148671096034}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.7963494838494847,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.03125,"distances_sum":1469.9484487143043}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9397238178488184,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.7421875,"distances_sum":2209.6012755313664}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8488558316683326,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.296875,"distances_sum":1658.1183664554517}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7942781177156184,"seconds":4.714354872703552e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.9921875,"distances_sum":1496.2409960809546}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.857649642024643,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.3828125,"distances_sum":1704.3078914433295}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9313015109890118,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.65625,"distances_sum":2143.2741554892254}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9144910644910652,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.6640625,"distances_sum":2026.8037347131499}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9106398809523815,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.7734375,"distances_sum":1995.3162119103933}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.886341262903764,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.5859375,"distances_sum":1837.09538755726}, best_list's length: 16, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9397238178488184,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.7421875,"distances_sum":2209.6012755313664}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9618532509157511,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8359375,"distances_sum":2329.654453267907}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9503262362637367,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8515625,"distances_sum":2227.0923136207507}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9606971153846158,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.796875,"distances_sum":2319.493743048114}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.94755608974359,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.71875,"distances_sum":2259.682333312125}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9441277472527478,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8203125,"distances_sum":2182.92923253163}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9618532509157511,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8359375,"distances_sum":2329.654453267907}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9618532509157511,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8359375,"distances_sum":2329.654453267907}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3974609375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3974609375,"f1":null,"seconds":3.900378942489624e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.6875,"distances_sum":810.6331788173042}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7988423035298043,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.5078125,"distances_sum":1414.2599932206306}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.677734375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.677734375,"f1":0.7988423035298043,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.5078125,"distances_sum":1414.2599932206306}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9435928654678659,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8828125,"distances_sum":2171.2078298914344}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8011582167832176,"seconds":4.695728421211243e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4375,"distances_sum":1447.4085169500556}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9435928654678659,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8828125,"distances_sum":2171.2078298914344}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.975486492673993,"seconds":6.170943379402161e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.984375,"distances_sum":2356.2967661414805}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9813072344322348,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9609375,"distances_sum":2405.2158113945447}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9465518856143861,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8984375,"distances_sum":2172.858256946971}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9813072344322348,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9609375,"distances_sum":2405.2158113945447}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9813072344322348,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9609375,"distances_sum":2405.2158113945447}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.7033986846486853,"seconds":4.451721906661987e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.625,"distances_sum":1186.5798846395314}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5576171875,"f1":0.7033986846486853,"seconds":4.451721906661987e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.625,"distances_sum":1186.5798846395314}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7197265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7197265625,"f1":0.8250277500277509,"seconds":4.582107067108154e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.9765625,"distances_sum":1542.2068902477322}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8833541458541465,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.3984375,"distances_sum":1874.3832155737912}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9052863802863809,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4921875,"distances_sum":1962.5368336769413}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8408203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.9052863802863809,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4921875,"distances_sum":1962.5368336769413}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.962894917582418,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8046875,"distances_sum":2352.5576534814727}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9652014652014657,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8515625,"distances_sum":2336.3794974670964}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.933591408591409,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6015625,"distances_sum":2146.3103682905844}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9530792124542129,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.765625,"distances_sum":2263.7246378321292}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9652014652014657,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8515625,"distances_sum":2336.3794974670964}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9652014652014657,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8515625,"distances_sum":2336.3794974670964}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3984375,"f1":null,"seconds":3.7364661693573e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.4453125,"distances_sum":870.2999691179975}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7898773101898109,"seconds":4.760921001434326e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.2578125,"distances_sum":1470.021580468834}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.376975655555725e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.3515625,"distances_sum":499.8356925781534}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.666015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.666015625,"f1":0.7898773101898109,"seconds":4.760921001434326e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.2578125,"distances_sum":1470.021580468834}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9388335622710628,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":2229.5829007617826}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9361664377289384,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8203125,"distances_sum":2230.3403484400546}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9388335622710628,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":2229.5829007617826}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9694227647352649,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8984375,"distances_sum":2472.9553288175666}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9634672619047623,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9296875,"distances_sum":2409.02214218046}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9415235805860812,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8125,"distances_sum":2280.6644989561228}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9531135531135536,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.84375,"distances_sum":2364.185614772593}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.967599587912088,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8828125,"distances_sum":2435.4451380283595}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9694227647352649,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8984375,"distances_sum":2472.9553288175666}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9694227647352649,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8984375,"distances_sum":2472.9553288175666}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8072505619380629,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.609375,"distances_sum":1436.14112883678}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6923828125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6923828125,"f1":0.8072505619380629,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.609375,"distances_sum":1436.14112883678}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9521462912087916,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9765625,"distances_sum":2156.7253799122973}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8649616008991019,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.640625,"distances_sum":1701.6019585156116}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8701215451215462,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8125,"distances_sum":1701.3368990765105}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8855914918414927,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8359375,"distances_sum":1750.260818860461}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9521462912087916,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9765625,"distances_sum":2156.7253799122973}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.974851190476191,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.984375,"distances_sum":2324.5633033678578}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9677312271062275,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.96875,"distances_sum":2289.2454137213017}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9533367673992679,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9453125,"distances_sum":2193.7245479104704}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9599587912087916,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.921875,"distances_sum":2258.9619965439138}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9614239926739929,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.953125,"distances_sum":2234.11656208337}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9641769688644691,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.921875,"distances_sum":2270.3716152367083}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.974851190476191,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.984375,"distances_sum":2324.5633033678578}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.974851190476191,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.984375,"distances_sum":2324.5633033678578}}, n: 9
inertia(cfft.distances) = 17.987097680097676
inertia(cdnet.distances) = 29.23649494949496
inertia(crand.distances) = 20.83539599135432
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9488888888888889
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9355555555555556
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9199999999999999
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9288888888888889
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.92
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9044444444444445
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.88
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9222222222222222
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8733333333333334
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9222222222222222
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 1, 3, 2, 3, 1, 2, 1, 2, 3, 3, 1, 3, 3, 3, 2, 3, 3, 3, 2, 1]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.4126666684941669] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4126666684941669, 0.1843485072804229] ***
*** starting iteration: 2; err: [Inf, 0.4126666684941669, 0.1843485072804229] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4126666684941669, 0.1843485072804229, 0.16808938383638877] ***
*** starting iteration: 3; err: [Inf, 0.4126666684941669, 0.1843485072804229, 0.16808938383638877] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4126666684941669, 0.1843485072804229, 0.16808938383638877, 0.16418100697894997] ***
*** starting iteration: 4; err: [Inf, 0.4126666684941669, 0.1843485072804229, 0.16808938383638877, 0.16418100697894997] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4126666684941669, 0.1843485072804229, 0.16808938383638877, 0.16418100697894997, 0.16349131641382694] ***
*** finished computation of 12 references, err: [Inf, 0.4126666684941669, 0.1843485072804229, 0.16808938383638877, 0.16418100697894997, 0.16349131641382694] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.4842000003174472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4842000003174472, 0.314158285646692] ***
*** finished computation of 7 references, err: [Inf, 0.4842000003174472, 0.314158285646692] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 14]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 8, 6]]
** centroid: 4, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 5: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 11, 4]]
** centroid: 7, normalized-entropy: 0.8366407419411671, [(2, 11), (3, 4)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3625000026156786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3625000026156786, 0.2515054180359975] ***
*** finished computation of 7 references, err: [Inf, 0.3625000026156786, 0.2515054180359975] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 18]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43360000518010167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43360000518010167, 0.2576945146834578] ***
*** finished computation of 7 references, err: [Inf, 0.43360000518010167, 0.2576945146834578] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 6, 6]]
** centroid: 4, normalized-entropy: 1.0, [(2, 6), (3, 6)]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.713300006987359] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.713300006987359, 0.47597154384581264] ***
*** starting iteration: 2; err: [Inf, 0.713300006987359, 0.47597154384581264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458] ***
*** starting iteration: 3; err: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458, 0.31856806687383415] ***
*** starting iteration: 4; err: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458, 0.31856806687383415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458, 0.31856806687383415, 0.30669473705483696] ***
*** starting iteration: 5; err: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458, 0.31856806687383415, 0.30669473705483696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458, 0.31856806687383415, 0.30669473705483696, 0.30336800506796097] ***
*** starting iteration: 6; err: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458, 0.31856806687383415, 0.30669473705483696, 0.30336800506796097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458, 0.31856806687383415, 0.30669473705483696, 0.30336800506796097, 0.2985312935705544] ***
*** starting iteration: 7; err: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458, 0.31856806687383415, 0.30669473705483696, 0.30336800506796097, 0.2985312935705544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458, 0.31856806687383415, 0.30669473705483696, 0.30336800506796097, 0.2985312935705544, 0.2939107306593688] ***
*** starting iteration: 8; err: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458, 0.31856806687383415, 0.30669473705483696, 0.30336800506796097, 0.2985312935705544, 0.2939107306593688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458, 0.31856806687383415, 0.30669473705483696, 0.30336800506796097, 0.2985312935705544, 0.2939107306593688, 0.29234976281960506] ***
*** starting iteration: 9; err: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458, 0.31856806687383415, 0.30669473705483696, 0.30336800506796097, 0.2985312935705544, 0.2939107306593688, 0.29234976281960506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458, 0.31856806687383415, 0.30669473705483696, 0.30336800506796097, 0.2985312935705544, 0.2939107306593688, 0.29234976281960506, 0.2916973775639295] ***
*** finished computation of 7 references, err: [Inf, 0.713300006987359, 0.47597154384581264, 0.380946834078458, 0.31856806687383415, 0.30669473705483696, 0.30336800506796097, 0.2985312935705544, 0.2939107306593688, 0.29234976281960506, 0.2916973775639295] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 19]]
** centroid: 3, normalized-entropy: 0.9629004147713269, [(2, 12), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7511000080818251] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7511000080818251, 0.3620042714989198] ***
*** starting iteration: 2; err: [Inf, 0.7511000080818251, 0.3620042714989198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7511000080818251, 0.3620042714989198, 0.26420362467123415] ***
*** starting iteration: 3; err: [Inf, 0.7511000080818251, 0.3620042714989198, 0.26420362467123415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7511000080818251, 0.3620042714989198, 0.26420362467123415, 0.25501608244182766] ***
*** starting iteration: 4; err: [Inf, 0.7511000080818251, 0.3620042714989198, 0.26420362467123415, 0.25501608244182766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7511000080818251, 0.3620042714989198, 0.26420362467123415, 0.25501608244182766, 0.2528407187923942] ***
*** starting iteration: 5; err: [Inf, 0.7511000080818251, 0.3620042714989198, 0.26420362467123415, 0.25501608244182766, 0.2528407187923942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7511000080818251, 0.3620042714989198, 0.26420362467123415, 0.25501608244182766, 0.2528407187923942, 0.25067820737037944] ***
*** starting iteration: 6; err: [Inf, 0.7511000080818251, 0.3620042714989198, 0.26420362467123415, 0.25501608244182766, 0.2528407187923942, 0.25067820737037944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7511000080818251, 0.3620042714989198, 0.26420362467123415, 0.25501608244182766, 0.2528407187923942, 0.25067820737037944, 0.25007806213917017] ***
*** finished computation of 7 references, err: [Inf, 0.7511000080818251, 0.3620042714989198, 0.26420362467123415, 0.25501608244182766, 0.2528407187923942, 0.25067820737037944, 0.25007806213917017] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 17]]
** centroid: 4, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8782000043329716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8782000043329716, 0.3955137798290269] ***
*** starting iteration: 2; err: [Inf, 0.8782000043329716, 0.3955137798290269] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8782000043329716, 0.3955137798290269, 0.3512285393249634] ***
*** starting iteration: 3; err: [Inf, 0.8782000043329716, 0.3955137798290269, 0.3512285393249634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8782000043329716, 0.3955137798290269, 0.3512285393249634, 0.32046723179000985] ***
*** starting iteration: 4; err: [Inf, 0.8782000043329716, 0.3955137798290269, 0.3512285393249634, 0.32046723179000985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8782000043329716, 0.3955137798290269, 0.3512285393249634, 0.32046723179000985, 0.30814549241504124] ***
*** starting iteration: 5; err: [Inf, 0.8782000043329716, 0.3955137798290269, 0.3512285393249634, 0.32046723179000985, 0.30814549241504124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8782000043329716, 0.3955137798290269, 0.3512285393249634, 0.32046723179000985, 0.30814549241504124, 0.301694965566133] ***
*** starting iteration: 6; err: [Inf, 0.8782000043329716, 0.3955137798290269, 0.3512285393249634, 0.32046723179000985, 0.30814549241504124, 0.301694965566133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8782000043329716, 0.3955137798290269, 0.3512285393249634, 0.32046723179000985, 0.30814549241504124, 0.301694965566133, 0.2993468584850202] ***
*** starting iteration: 7; err: [Inf, 0.8782000043329716, 0.3955137798290269, 0.3512285393249634, 0.32046723179000985, 0.30814549241504124, 0.301694965566133, 0.2993468584850202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8782000043329716, 0.3955137798290269, 0.3512285393249634, 0.32046723179000985, 0.30814549241504124, 0.301694965566133, 0.2993468584850202, 0.2988294990529571] ***
*** finished computation of 7 references, err: [Inf, 0.8782000043329716, 0.3955137798290269, 0.3512285393249634, 0.32046723179000985, 0.30814549241504124, 0.301694965566133, 0.2993468584850202, 0.2988294990529571] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 19, 6]]
** centroid: 3, normalized-entropy: 0.7950402793845225, [(2, 19), (3, 6)]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6282000043227035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6282000043227035, 0.3299832692573939] ***
*** finished computation of 7 references, err: [Inf, 0.6282000043227035, 0.3299832692573939] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 6, 18]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 6), (3, 18)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5537000058427403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5537000058427403, 0.3419967581348499] ***
*** finished computation of 7 references, err: [Inf, 0.5537000058427403, 0.3419967581348499] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 1, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 17, 14]]
** centroid: 6, normalized-entropy: 0.9932338197397066, [(2, 17), (3, 14)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7910000137085466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7910000137085466, 0.36448574282698504] ***
*** finished computation of 7 references, err: [Inf, 0.7910000137085466, 0.36448574282698504] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 4]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 1), (3, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 4]]
** centroid: 7, normalized-entropy: 1.0, [(2, 4), (3, 4)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8022906173845362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8022906173845362, 0.37039489381241464] ***
*** finished computation of 7 references, err: [Inf, 0.8022906173845362, 0.37039489381241464] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [3, 2, 0]]
** centroid: 2, normalized-entropy: 0.9709505944546688, [(1, 3), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 29, 8]]
** centroid: 4, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 15]]
** centroid: 5, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.556220699004993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.556220699004993, 0.27528972327008217] ***
*** finished computation of 7 references, err: [Inf, 0.556220699004993, 0.27528972327008217] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 32]]
** centroid: 7, normalized-entropy: 0.32275695889739825, [(2, 2), (3, 32)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1581849289927915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1581849289927915, 0.2454956597841291] ***
*** finished computation of 7 references, err: [Inf, 1.1581849289927915, 0.2454956597841291] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 5]]
** centroid: 4, normalized-entropy: 0.940285958670631, [(2, 9), (3, 5)]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.401065093981603] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.401065093981603, 0.7790069370358192] ***
*** starting iteration: 2; err: [Inf, 2.401065093981603, 0.7790069370358192] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.401065093981603, 0.7790069370358192, 0.44524089909906905] ***
*** starting iteration: 3; err: [Inf, 2.401065093981603, 0.7790069370358192, 0.44524089909906905] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.401065093981603, 0.7790069370358192, 0.44524089909906905, 0.41612390037458197] ***
*** finished computation of 3 references, err: [Inf, 2.401065093981603, 0.7790069370358192, 0.44524089909906905, 0.41612390037458197] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 17]]
** centroid: 2, normalized-entropy: 0.9248187049730301, [(2, 33), (3, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6428952116511139] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6428952116511139, 0.39704887985975523] ***
*** starting iteration: 2; err: [Inf, 0.6428952116511139, 0.39704887985975523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6428952116511139, 0.39704887985975523, 0.38383501867696895] ***
*** starting iteration: 3; err: [Inf, 0.6428952116511139, 0.39704887985975523, 0.38383501867696895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6428952116511139, 0.39704887985975523, 0.38383501867696895, 0.3771515489979915] ***
*** finished computation of 3 references, err: [Inf, 0.6428952116511139, 0.39704887985975523, 0.38383501867696895, 0.3771515489979915] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 10]]
** centroid: 2, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.882297445120326] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.882297445120326, 1.6421921706304021] ***
*** starting iteration: 2; err: [Inf, 6.882297445120326, 1.6421921706304021] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.882297445120326, 1.6421921706304021, 0.4453316595770811] ***
*** starting iteration: 3; err: [Inf, 6.882297445120326, 1.6421921706304021, 0.4453316595770811] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.882297445120326, 1.6421921706304021, 0.4453316595770811, 0.3315881878508615] ***
*** finished computation of 3 references, err: [Inf, 6.882297445120326, 1.6421921706304021, 0.4453316595770811, 0.3315881878508615] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 6]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.598400006905559] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.598400006905559, 0.3305589720589245] ***
*** starting iteration: 2; err: [Inf, 0.598400006905559, 0.3305589720589245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.598400006905559, 0.3305589720589245, 0.324024977423933] ***
*** starting iteration: 3; err: [Inf, 0.598400006905559, 0.3305589720589245, 0.324024977423933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.598400006905559, 0.3305589720589245, 0.324024977423933, 0.3195850782250647] ***
*** starting iteration: 4; err: [Inf, 0.598400006905559, 0.3305589720589245, 0.324024977423933, 0.3195850782250647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.598400006905559, 0.3305589720589245, 0.324024977423933, 0.3195850782250647, 0.3160985231296858] ***
*** starting iteration: 5; err: [Inf, 0.598400006905559, 0.3305589720589245, 0.324024977423933, 0.3195850782250647, 0.3160985231296858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.598400006905559, 0.3305589720589245, 0.324024977423933, 0.3195850782250647, 0.3160985231296858, 0.3101757515808275] ***
*** starting iteration: 6; err: [Inf, 0.598400006905559, 0.3305589720589245, 0.324024977423933, 0.3195850782250647, 0.3160985231296858, 0.3101757515808275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.598400006905559, 0.3305589720589245, 0.324024977423933, 0.3195850782250647, 0.3160985231296858, 0.3101757515808275, 0.3067663074903144] ***
*** starting iteration: 7; err: [Inf, 0.598400006905559, 0.3305589720589245, 0.324024977423933, 0.3195850782250647, 0.3160985231296858, 0.3101757515808275, 0.3067663074903144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.598400006905559, 0.3305589720589245, 0.324024977423933, 0.3195850782250647, 0.3160985231296858, 0.3101757515808275, 0.3067663074903144, 0.303042781796783] ***
*** starting iteration: 8; err: [Inf, 0.598400006905559, 0.3305589720589245, 0.324024977423933, 0.3195850782250647, 0.3160985231296858, 0.3101757515808275, 0.3067663074903144, 0.303042781796783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.598400006905559, 0.3305589720589245, 0.324024977423933, 0.3195850782250647, 0.3160985231296858, 0.3101757515808275, 0.3067663074903144, 0.303042781796783, 0.3021556257288778] ***
*** finished computation of 7 references, err: [Inf, 0.598400006905559, 0.3305589720589245, 0.324024977423933, 0.3195850782250647, 0.3160985231296858, 0.3101757515808275, 0.3067663074903144, 0.303042781796783, 0.3021556257288778] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 19]]
** centroid: 1, normalized-entropy: 0.9293636260137188, [(2, 10), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2484000168559357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2484000168559357, 0.4208583397941436] ***
*** starting iteration: 2; err: [Inf, 1.2484000168559357, 0.4208583397941436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2484000168559357, 0.4208583397941436, 0.3754703206866379] ***
*** starting iteration: 3; err: [Inf, 1.2484000168559357, 0.4208583397941436, 0.3754703206866379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2484000168559357, 0.4208583397941436, 0.3754703206866379, 0.31406002638891356] ***
*** starting iteration: 4; err: [Inf, 1.2484000168559357, 0.4208583397941436, 0.3754703206866379, 0.31406002638891356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2484000168559357, 0.4208583397941436, 0.3754703206866379, 0.31406002638891356, 0.28466779994430763] ***
*** starting iteration: 5; err: [Inf, 1.2484000168559357, 0.4208583397941436, 0.3754703206866379, 0.31406002638891356, 0.28466779994430763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2484000168559357, 0.4208583397941436, 0.3754703206866379, 0.31406002638891356, 0.28466779994430763, 0.27429067665935636] ***
*** starting iteration: 6; err: [Inf, 1.2484000168559357, 0.4208583397941436, 0.3754703206866379, 0.31406002638891356, 0.28466779994430763, 0.27429067665935636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2484000168559357, 0.4208583397941436, 0.3754703206866379, 0.31406002638891356, 0.28466779994430763, 0.27429067665935636, 0.27283019214683846] ***
*** starting iteration: 7; err: [Inf, 1.2484000168559357, 0.4208583397941436, 0.3754703206866379, 0.31406002638891356, 0.28466779994430763, 0.27429067665935636, 0.27283019214683846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2484000168559357, 0.4208583397941436, 0.3754703206866379, 0.31406002638891356, 0.28466779994430763, 0.27429067665935636, 0.27283019214683846, 0.271901638468624] ***
*** finished computation of 7 references, err: [Inf, 1.2484000168559357, 0.4208583397941436, 0.3754703206866379, 0.31406002638891356, 0.28466779994430763, 0.27429067665935636, 0.27283019214683846, 0.271901638468624] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 16]]
** centroid: 5, normalized-entropy: 0.9967916319816367, [(2, 14), (3, 16)]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5254000049273942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5254000049273942, 0.26836688276073034] ***
*** starting iteration: 2; err: [Inf, 0.5254000049273942, 0.26836688276073034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5254000049273942, 0.26836688276073034, 0.24029228589692664] ***
*** starting iteration: 3; err: [Inf, 0.5254000049273942, 0.26836688276073034, 0.24029228589692664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5254000049273942, 0.26836688276073034, 0.24029228589692664, 0.23239856751670743] ***
*** starting iteration: 4; err: [Inf, 0.5254000049273942, 0.26836688276073034, 0.24029228589692664, 0.23239856751670743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5254000049273942, 0.26836688276073034, 0.24029228589692664, 0.23239856751670743, 0.22889632277511784] ***
*** starting iteration: 5; err: [Inf, 0.5254000049273942, 0.26836688276073034, 0.24029228589692664, 0.23239856751670743, 0.22889632277511784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5254000049273942, 0.26836688276073034, 0.24029228589692664, 0.23239856751670743, 0.22889632277511784, 0.2268738475572959] ***
*** starting iteration: 6; err: [Inf, 0.5254000049273942, 0.26836688276073034, 0.24029228589692664, 0.23239856751670743, 0.22889632277511784, 0.2268738475572959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5254000049273942, 0.26836688276073034, 0.24029228589692664, 0.23239856751670743, 0.22889632277511784, 0.2268738475572959, 0.2263411406601741] ***
*** finished computation of 7 references, err: [Inf, 0.5254000049273942, 0.26836688276073034, 0.24029228589692664, 0.23239856751670743, 0.22889632277511784, 0.2268738475572959, 0.2263411406601741] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 6]]
** centroid: 1, normalized-entropy: 0.954434002924965, [(2, 10), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5516815718684562] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5516815718684562, 0.3950954887385186] ***
*** finished computation of 3 references, err: [Inf, 0.5516815718684562, 0.3950954887385186] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 13]]
** centroid: 2, normalized-entropy: 0.8589810370425965, [(2, 33), (3, 13)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.821013134700205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.821013134700205, 1.1732834140019628] ***
*** finished computation of 3 references, err: [Inf, 2.821013134700205, 1.1732834140019628] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [33, 15, 0]]
** centroid: 1, normalized-entropy: 0.8960382325345574, [(1, 33), (2, 15)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 19]]
** centroid: 2, normalized-entropy: 1.0, [(2, 19), (3, 19)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.434615054018207] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.434615054018207, 0.49444466533143244] ***
*** finished computation of 3 references, err: [Inf, 2.434615054018207, 0.49444466533143244] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 31]]
** centroid: 3, normalized-entropy: 0.9661773513883509, [(2, 20), (3, 31)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5190925724032598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5190925724032598, 0.43591182437698733] ***
*** finished computation of 7 references, err: [Inf, 1.5190925724032598, 0.43591182437698733] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 6]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 27), (3, 6)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [32, 2, 0]]
** centroid: 5, normalized-entropy: 0.32275695889739825, [(1, 32), (2, 2)]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 7]]
** centroid: 7, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42339864685075795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42339864685075795, 0.22808438391523694] ***
*** finished computation of 7 references, err: [Inf, 0.42339864685075795, 0.22808438391523694] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 9]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.144662594918179] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.144662594918179, 0.2160897237028082] ***
*** finished computation of 7 references, err: [Inf, 1.144662594918179, 0.2160897237028082] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 5]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 10), (3, 5)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 3]]
** centroid: 3, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 6: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 10]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4058000012089005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4058000012089005, 0.292094563797851] ***
*** starting iteration: 2; err: [Inf, 0.4058000012089005, 0.292094563797851] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4058000012089005, 0.292094563797851, 0.28640037682013536] ***
*** starting iteration: 3; err: [Inf, 0.4058000012089005, 0.292094563797851, 0.28640037682013536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4058000012089005, 0.292094563797851, 0.28640037682013536, 0.2841546919290023] ***
*** finished computation of 7 references, err: [Inf, 0.4058000012089005, 0.292094563797851, 0.28640037682013536, 0.2841546919290023] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 5]]
** centroid: 1, normalized-entropy: 0.954434002924965, [(2, 3), (3, 5)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7807000073417188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7807000073417188, 0.3296306381761295] ***
*** starting iteration: 2; err: [Inf, 0.7807000073417188, 0.3296306381761295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7807000073417188, 0.3296306381761295, 0.3052016562933031] ***
*** starting iteration: 3; err: [Inf, 0.7807000073417188, 0.3296306381761295, 0.3052016562933031] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7807000073417188, 0.3296306381761295, 0.3052016562933031, 0.2694181935264696] ***
*** finished computation of 7 references, err: [Inf, 0.7807000073417188, 0.3296306381761295, 0.3052016562933031, 0.2694181935264696] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 10]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 10, 4]]
** centroid: 6, normalized-entropy: 0.8631205685666311, [(2, 10), (3, 4)]
*** center 7: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6367000016176196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6367000016176196, 0.29517668456907636] ***
*** starting iteration: 2; err: [Inf, 0.6367000016176196, 0.29517668456907636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6367000016176196, 0.29517668456907636, 0.26039040508206035] ***
*** starting iteration: 3; err: [Inf, 0.6367000016176196, 0.29517668456907636, 0.26039040508206035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6367000016176196, 0.29517668456907636, 0.26039040508206035, 0.22651802110866523] ***
*** finished computation of 7 references, err: [Inf, 0.6367000016176196, 0.29517668456907636, 0.26039040508206035, 0.22651802110866523] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 17, 3]]
** centroid: 5, normalized-entropy: 0.6098403047164005, [(2, 17), (3, 3)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 7]]
** centroid: 6, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5258820424958952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5258820424958952, 0.2390918697628356] ***
*** starting iteration: 2; err: [Inf, 0.5258820424958952, 0.2390918697628356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5258820424958952, 0.2390918697628356, 0.21901743425703163] ***
*** starting iteration: 3; err: [Inf, 0.5258820424958952, 0.2390918697628356, 0.21901743425703163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5258820424958952, 0.2390918697628356, 0.21901743425703163, 0.2057964868855214] ***
*** finished computation of 7 references, err: [Inf, 0.5258820424958952, 0.2390918697628356, 0.21901743425703163, 0.2057964868855214] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 19]]
** centroid: 4, normalized-entropy: 0.9833761901392238, [(2, 14), (3, 19)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.736300050137536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.736300050137536, 0.43667223945608996] ***
*** starting iteration: 2; err: [Inf, 1.736300050137536, 0.43667223945608996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.736300050137536, 0.43667223945608996, 0.21360787225670871] ***
*** starting iteration: 3; err: [Inf, 1.736300050137536, 0.43667223945608996, 0.21360787225670871] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.736300050137536, 0.43667223945608996, 0.21360787225670871, 0.18946562282449902] ***
*** finished computation of 7 references, err: [Inf, 1.736300050137536, 0.43667223945608996, 0.21360787225670871, 0.18946562282449902] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 10]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2993901426582204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2993901426582204, 0.19032103883553744] ***
*** starting iteration: 2; err: [Inf, 0.2993901426582204, 0.19032103883553744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2993901426582204, 0.19032103883553744, 0.1691994750661076] ***
*** starting iteration: 3; err: [Inf, 0.2993901426582204, 0.19032103883553744, 0.1691994750661076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2993901426582204, 0.19032103883553744, 0.1691994750661076, 0.16186322851196797] ***
*** finished computation of 7 references, err: [Inf, 0.2993901426582204, 0.19032103883553744, 0.1691994750661076, 0.16186322851196797] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 6]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6437856555700736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6437856555700736, 0.4950578932621401] ***
*** starting iteration: 2; err: [Inf, 0.6437856555700736, 0.4950578932621401] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6437856555700736, 0.4950578932621401, 0.3162878512267815] ***
*** starting iteration: 3; err: [Inf, 0.6437856555700736, 0.4950578932621401, 0.3162878512267815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6437856555700736, 0.4950578932621401, 0.3162878512267815, 0.26724259954107504] ***
*** starting iteration: 4; err: [Inf, 0.6437856555700736, 0.4950578932621401, 0.3162878512267815, 0.26724259954107504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6437856555700736, 0.4950578932621401, 0.3162878512267815, 0.26724259954107504, 0.2347625539872552] ***
*** starting iteration: 5; err: [Inf, 0.6437856555700736, 0.4950578932621401, 0.3162878512267815, 0.26724259954107504, 0.2347625539872552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6437856555700736, 0.4950578932621401, 0.3162878512267815, 0.26724259954107504, 0.2347625539872552, 0.2230940491491534] ***
*** starting iteration: 6; err: [Inf, 0.6437856555700736, 0.4950578932621401, 0.3162878512267815, 0.26724259954107504, 0.2347625539872552, 0.2230940491491534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6437856555700736, 0.4950578932621401, 0.3162878512267815, 0.26724259954107504, 0.2347625539872552, 0.2230940491491534, 0.22234602000518944] ***
*** finished computation of 7 references, err: [Inf, 0.6437856555700736, 0.4950578932621401, 0.3162878512267815, 0.26724259954107504, 0.2347625539872552, 0.2230940491491534, 0.22234602000518944] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 19]]
** centroid: 2, normalized-entropy: 0.9899927915575186, [(2, 15), (3, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 7, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2875507387376766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2875507387376766, 0.21309285581906512] ***
*** starting iteration: 2; err: [Inf, 0.2875507387376766, 0.21309285581906512] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2875507387376766, 0.21309285581906512, 0.20352156536477892] ***
*** starting iteration: 3; err: [Inf, 0.2875507387376766, 0.21309285581906512, 0.20352156536477892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2875507387376766, 0.21309285581906512, 0.20352156536477892, 0.20035056917591784] ***
*** starting iteration: 4; err: [Inf, 0.2875507387376766, 0.21309285581906512, 0.20352156536477892, 0.20035056917591784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2875507387376766, 0.21309285581906512, 0.20352156536477892, 0.20035056917591784, 0.1875261948945393] ***
*** starting iteration: 5; err: [Inf, 0.2875507387376766, 0.21309285581906512, 0.20352156536477892, 0.20035056917591784, 0.1875261948945393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2875507387376766, 0.21309285581906512, 0.20352156536477892, 0.20035056917591784, 0.1875261948945393, 0.1845219389821387] ***
*** starting iteration: 6; err: [Inf, 0.2875507387376766, 0.21309285581906512, 0.20352156536477892, 0.20035056917591784, 0.1875261948945393, 0.1845219389821387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2875507387376766, 0.21309285581906512, 0.20352156536477892, 0.20035056917591784, 0.1875261948945393, 0.1845219389821387, 0.18430063844245076] ***
*** finished computation of 7 references, err: [Inf, 0.2875507387376766, 0.21309285581906512, 0.20352156536477892, 0.20035056917591784, 0.1875261948945393, 0.1845219389821387, 0.18430063844245076] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 4]]
** centroid: 3, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
*** center 4: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7896154202905925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7896154202905925, 0.28286249957352094] ***
*** starting iteration: 2; err: [Inf, 0.7896154202905925, 0.28286249957352094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7896154202905925, 0.28286249957352094, 0.2560106193477453] ***
*** starting iteration: 3; err: [Inf, 0.7896154202905925, 0.28286249957352094, 0.2560106193477453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7896154202905925, 0.28286249957352094, 0.2560106193477453, 0.22887707291283133] ***
*** starting iteration: 4; err: [Inf, 0.7896154202905925, 0.28286249957352094, 0.2560106193477453, 0.22887707291283133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7896154202905925, 0.28286249957352094, 0.2560106193477453, 0.22887707291283133, 0.2146917059336667] ***
*** starting iteration: 5; err: [Inf, 0.7896154202905925, 0.28286249957352094, 0.2560106193477453, 0.22887707291283133, 0.2146917059336667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7896154202905925, 0.28286249957352094, 0.2560106193477453, 0.22887707291283133, 0.2146917059336667, 0.21301449051917715] ***
*** starting iteration: 6; err: [Inf, 0.7896154202905925, 0.28286249957352094, 0.2560106193477453, 0.22887707291283133, 0.2146917059336667, 0.21301449051917715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7896154202905925, 0.28286249957352094, 0.2560106193477453, 0.22887707291283133, 0.2146917059336667, 0.21301449051917715, 0.21301449051917715] ***
*** finished computation of 7 references, err: [Inf, 0.7896154202905925, 0.28286249957352094, 0.2560106193477453, 0.22887707291283133, 0.2146917059336667, 0.21301449051917715, 0.21301449051917715] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 5, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 22, 5]]
** centroid: 6, normalized-entropy: 0.6912898694057888, [(2, 22), (3, 5)]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4970999984232083] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4970999984232083, 1.0256111073635374] ***
*** starting iteration: 2; err: [Inf, 1.4970999984232083, 1.0256111073635374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4970999984232083, 1.0256111073635374, 0.6641060730436525] ***
*** starting iteration: 3; err: [Inf, 1.4970999984232083, 1.0256111073635374, 0.6641060730436525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4970999984232083, 1.0256111073635374, 0.6641060730436525, 0.6214641868508358] ***
*** finished computation of 3 references, err: [Inf, 1.4970999984232083, 1.0256111073635374, 0.6641060730436525, 0.6214641868508358] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 10, 34]]
** centroid: 2, normalized-entropy: 0.7732266742876346, [(2, 10), (3, 34)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 3, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2631000249989592] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2631000249989592, 0.9298924116954081] ***
*** starting iteration: 2; err: [Inf, 1.2631000249989592, 0.9298924116954081] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2631000249989592, 0.9298924116954081, 0.6967425852243901] ***
*** starting iteration: 3; err: [Inf, 1.2631000249989592, 0.9298924116954081, 0.6967425852243901] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2631000249989592, 0.9298924116954081, 0.6967425852243901, 0.5683152496118273] ***
*** finished computation of 3 references, err: [Inf, 1.2631000249989592, 0.9298924116954081, 0.6967425852243901, 0.5683152496118273] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 33]]
** centroid: 2, normalized-entropy: 0.8366407419411671, [(2, 12), (3, 33)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.216700014836647] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.216700014836647, 0.47308873116543376] ***
*** starting iteration: 2; err: [Inf, 1.216700014836647, 0.47308873116543376] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.216700014836647, 0.47308873116543376, 0.46310266944040007] ***
*** starting iteration: 3; err: [Inf, 1.216700014836647, 0.47308873116543376, 0.46310266944040007] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.216700014836647, 0.47308873116543376, 0.46310266944040007, 0.46310266944040007] ***
*** finished computation of 3 references, err: [Inf, 1.216700014836647, 0.47308873116543376, 0.46310266944040007, 0.46310266944040007] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 6]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9343000016393165] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9343000016393165, 0.616089060344893] ***
*** finished computation of 3 references, err: [Inf, 0.9343000016393165, 0.616089060344893] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 18]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(2, 33), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2819999945022116] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2819999945022116, 0.5558438969503524] ***
*** finished computation of 3 references, err: [Inf, 1.2819999945022116, 0.5558438969503524] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 33]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 12), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.2126999841820583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2126999841820583, 0.4636775254356458] ***
*** finished computation of 3 references, err: [Inf, 2.2126999841820583, 0.4636775254356458] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 6]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0485000064235255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0485000064235255, 0.6083206026214355] ***
*** starting iteration: 2; err: [Inf, 1.0485000064235255, 0.6083206026214355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0485000064235255, 0.6083206026214355, 0.5775899377937588] ***
*** starting iteration: 3; err: [Inf, 1.0485000064235255, 0.6083206026214355, 0.5775899377937588] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0485000064235255, 0.6083206026214355, 0.5775899377937588, 0.5634409575065813] ***
*** finished computation of 3 references, err: [Inf, 1.0485000064235255, 0.6083206026214355, 0.5775899377937588, 0.5634409575065813] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3284000012348605] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3284000012348605, 0.5398055369189034] ***
*** starting iteration: 2; err: [Inf, 1.3284000012348605, 0.5398055369189034] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3284000012348605, 0.5398055369189034, 0.5389580325414396] ***
*** finished computation of 3 references, err: [Inf, 1.3284000012348605, 0.5398055369189034, 0.5389580325414396] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.2126999841820583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2126999841820583, 0.4636775254356458] ***
*** starting iteration: 2; err: [Inf, 2.2126999841820583, 0.4636775254356458] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2126999841820583, 0.4636775254356458, 0.46310266944040007] ***
*** finished computation of 3 references, err: [Inf, 2.2126999841820583, 0.4636775254356458, 0.46310266944040007] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 6]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5076999979187065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5076999979187065, 0.5775899377937588] ***
*** finished computation of 3 references, err: [Inf, 1.5076999979187065, 0.5775899377937588] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 13]]
** centroid: 3, normalized-entropy: 0.8589810370425965, [(2, 33), (3, 13)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0228000022818236] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0228000022818236, 0.5760830485675126] ***
*** finished computation of 3 references, err: [Inf, 1.0228000022818236, 0.5760830485675126] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 14]]
** centroid: 3, normalized-entropy: 0.8708644692353648, [(2, 34), (3, 14)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.450799996503364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.450799996503364, 0.49487183250248745] ***
*** finished computation of 3 references, err: [Inf, 1.450799996503364, 0.49487183250248745] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 7]]
** centroid: 3, normalized-entropy: 0.6690158350565576, [(2, 33), (3, 7)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.523100001229351] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.523100001229351, 0.569152256898866] ***
*** finished computation of 3 references, err: [Inf, 1.523100001229351, 0.569152256898866] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.4445999885379117] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.4445999885379117, 0.538225774966639] ***
*** finished computation of 3 references, err: [Inf, 2.4445999885379117, 0.538225774966639] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 23]]
** centroid: 2, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9357000038808876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9357000038808876, 0.6342661115365421] ***
*** finished computation of 3 references, err: [Inf, 0.9357000038808876, 0.6342661115365421] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 20]]
** centroid: 1, normalized-entropy: 0.961236604722876, [(2, 32), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [35, 1, 0]]
** centroid: 2, normalized-entropy: 0.18312206830137262, [(1, 35), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9733333333333333
finished with 16
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9733333333333333
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.663300001624965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.663300001624965, 0.2748630788187744] ***
*** starting iteration: 2; err: [Inf, 0.663300001624965, 0.2748630788187744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.663300001624965, 0.2748630788187744, 0.25011146239959825] ***
*** starting iteration: 3; err: [Inf, 0.663300001624965, 0.2748630788187744, 0.25011146239959825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.663300001624965, 0.2748630788187744, 0.25011146239959825, 0.24610270861900344] ***
*** finished computation of 7 references, err: [Inf, 0.663300001624965, 0.2748630788187744, 0.25011146239959825, 0.24610270861900344] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 5]]
** centroid: 4, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6783000063788681] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6783000063788681, 0.2807014551104977] ***
*** starting iteration: 2; err: [Inf, 0.6783000063788681, 0.2807014551104977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6783000063788681, 0.2807014551104977, 0.2616160803299113] ***
*** starting iteration: 3; err: [Inf, 0.6783000063788681, 0.2807014551104977, 0.2616160803299113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6783000063788681, 0.2807014551104977, 0.2616160803299113, 0.2597741731428429] ***
*** finished computation of 7 references, err: [Inf, 0.6783000063788681, 0.2807014551104977, 0.2616160803299113, 0.2597741731428429] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 9]]
** centroid: 1, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5481000028275074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5481000028275074, 0.21319627848541342] ***
*** starting iteration: 2; err: [Inf, 0.5481000028275074, 0.21319627848541342] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5481000028275074, 0.21319627848541342, 0.19900778000426741] ***
*** starting iteration: 3; err: [Inf, 0.5481000028275074, 0.21319627848541342, 0.19900778000426741] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5481000028275074, 0.21319627848541342, 0.19900778000426741, 0.19666082424127165] ***
*** finished computation of 7 references, err: [Inf, 0.5481000028275074, 0.21319627848541342, 0.19900778000426741, 0.19666082424127165] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 5]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3636756441068765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3636756441068765, 0.23017245449800272] ***
*** starting iteration: 2; err: [Inf, 0.3636756441068765, 0.23017245449800272] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3636756441068765, 0.23017245449800272, 0.2261775163766503] ***
*** starting iteration: 3; err: [Inf, 0.3636756441068765, 0.23017245449800272, 0.2261775163766503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3636756441068765, 0.23017245449800272, 0.2261775163766503, 0.21791622358550836] ***
*** finished computation of 7 references, err: [Inf, 0.3636756441068765, 0.23017245449800272, 0.2261775163766503, 0.21791622358550836] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 15]]
** centroid: 4, normalized-entropy: 0.9910760598382222, [(2, 12), (3, 15)]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 7, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34096792324797803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34096792324797803, 0.2204621202584629] ***
*** starting iteration: 2; err: [Inf, 0.34096792324797803, 0.2204621202584629] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34096792324797803, 0.2204621202584629, 0.19895548099387395] ***
*** starting iteration: 3; err: [Inf, 0.34096792324797803, 0.2204621202584629, 0.19895548099387395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34096792324797803, 0.2204621202584629, 0.19895548099387395, 0.19106283287574413] ***
*** finished computation of 7 references, err: [Inf, 0.34096792324797803, 0.2204621202584629, 0.19895548099387395, 0.19106283287574413] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 8]]
** centroid: 3, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 5, 17]]
** centroid: 4, normalized-entropy: 0.7732266742876346, [(2, 5), (3, 17)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3268918276606435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3268918276606435, 0.1695866032690164] ***
*** starting iteration: 2; err: [Inf, 0.3268918276606435, 0.1695866032690164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3268918276606435, 0.1695866032690164, 0.15539037839276176] ***
*** starting iteration: 3; err: [Inf, 0.3268918276606435, 0.1695866032690164, 0.15539037839276176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3268918276606435, 0.1695866032690164, 0.15539037839276176, 0.14975909055278255] ***
*** finished computation of 7 references, err: [Inf, 0.3268918276606435, 0.1695866032690164, 0.15539037839276176, 0.14975909055278255] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 5]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 7, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9733333333333333
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.2798186162302992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2798186162302992, 0.20965010794969413] ***
*** starting iteration: 2; err: [Inf, 0.2798186162302992, 0.20965010794969413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2798186162302992, 0.20965010794969413, 0.20544512457605582] ***
*** starting iteration: 3; err: [Inf, 0.2798186162302992, 0.20965010794969413, 0.20544512457605582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2798186162302992, 0.20965010794969413, 0.20544512457605582, 0.2009281518190467] ***
*** finished computation of 7 references, err: [Inf, 0.2798186162302992, 0.20965010794969413, 0.20544512457605582, 0.2009281518190467] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 13, 9]]
** centroid: 6, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 7, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48789515278276185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48789515278276185, 0.26419700982072125] ***
*** starting iteration: 2; err: [Inf, 0.48789515278276185, 0.26419700982072125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48789515278276185, 0.26419700982072125, 0.20409477539996357] ***
*** starting iteration: 3; err: [Inf, 0.48789515278276185, 0.26419700982072125, 0.20409477539996357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48789515278276185, 0.26419700982072125, 0.20409477539996357, 0.19935174584502868] ***
*** finished computation of 7 references, err: [Inf, 0.48789515278276185, 0.26419700982072125, 0.20409477539996357, 0.19935174584502868] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3055754244372131] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3055754244372131, 0.19244160300608243] ***
*** starting iteration: 2; err: [Inf, 0.3055754244372131, 0.19244160300608243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3055754244372131, 0.19244160300608243, 0.1811719779171439] ***
*** starting iteration: 3; err: [Inf, 0.3055754244372131, 0.19244160300608243, 0.1811719779171439] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3055754244372131, 0.19244160300608243, 0.1811719779171439, 0.16658943317196123] ***
*** finished computation of 7 references, err: [Inf, 0.3055754244372131, 0.19244160300608243, 0.1811719779171439, 0.16658943317196123] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 20]]
** centroid: 5, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9733333333333333
finished with 19
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9733333333333333
finished with 20
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.5411000096361758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5411000096361758, 0.3353379389464102] ***
*** starting iteration: 2; err: [Inf, 0.5411000096361758, 0.3353379389464102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5411000096361758, 0.3353379389464102, 0.2969801680445643] ***
*** starting iteration: 3; err: [Inf, 0.5411000096361758, 0.3353379389464102, 0.2969801680445643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5411000096361758, 0.3353379389464102, 0.2969801680445643, 0.287826797006921] ***
*** finished computation of 7 references, err: [Inf, 0.5411000096361758, 0.3353379389464102, 0.2969801680445643, 0.287826797006921] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 15, 6]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 15), (3, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 6]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6994000058256309] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6994000058256309, 0.2968708549579952] ***
*** starting iteration: 2; err: [Inf, 0.6994000058256309, 0.2968708549579952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6994000058256309, 0.2968708549579952, 0.28589375052128885] ***
*** starting iteration: 3; err: [Inf, 0.6994000058256309, 0.2968708549579952, 0.28589375052128885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6994000058256309, 0.2968708549579952, 0.28589375052128885, 0.27780752207860393] ***
*** finished computation of 7 references, err: [Inf, 0.6994000058256309, 0.2968708549579952, 0.28589375052128885, 0.27780752207860393] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 15]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6776999995463656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6776999995463656, 0.2911973995839615] ***
*** starting iteration: 2; err: [Inf, 0.6776999995463656, 0.2911973995839615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6776999995463656, 0.2911973995839615, 0.2615810026975069] ***
*** starting iteration: 3; err: [Inf, 0.6776999995463656, 0.2911973995839615, 0.2615810026975069] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6776999995463656, 0.2911973995839615, 0.2615810026975069, 0.24204889856957557] ***
*** finished computation of 7 references, err: [Inf, 0.6776999995463656, 0.2911973995839615, 0.2615810026975069, 0.24204889856957557] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 7, 4]]
** centroid: 6, normalized-entropy: 0.9456603046006401, [(2, 7), (3, 4)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 10, 2]]
** centroid: 7, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9733333333333333
finished with 22
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.6860999941669091] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6860999941669091, 0.5614682251694213] ***
*** finished computation of 3 references, err: [Inf, 0.6860999941669091, 0.5614682251694213] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 12]]
** centroid: 2, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.416599978974346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.416599978974346, 0.7777211736867663] ***
*** finished computation of 3 references, err: [Inf, 3.416599978974346, 0.7777211736867663] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 32]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 10), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 1, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9492000048965694] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9492000048965694, 0.6430918361281037] ***
*** finished computation of 3 references, err: [Inf, 0.9492000048965694, 0.6430918361281037] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 21]]
** centroid: 1, normalized-entropy: 0.9731560354421095, [(2, 31), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 2, 0]]
** centroid: 2, normalized-entropy: 0.30337483608641397, [(1, 35), (2, 2)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.0496693277692035] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0496693277692035, 0.4979719569463066] ***
*** finished computation of 3 references, err: [Inf, 2.0496693277692035, 0.4979719569463066] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 12]]
** centroid: 1, normalized-entropy: 0.8812908992306927, [(2, 28), (3, 12)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 23]]
** centroid: 2, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [32, 2, 0]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(1, 32), (2, 2)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.4102576148738] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.4102576148738, 1.666827052210636] ***
*** finished computation of 3 references, err: [Inf, 7.4102576148738, 1.666827052210636] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 23]]
** centroid: 1, normalized-entropy: 0.943601631299382, [(2, 13), (3, 23)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [33, 21, 0]]
** centroid: 3, normalized-entropy: 0.9640787648082293, [(1, 33), (2, 21)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5953925015403172] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5953925015403172, 0.35804473941997245] ***
*** finished computation of 3 references, err: [Inf, 0.5953925015403172, 0.35804473941997245] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 31]]
** centroid: 3, normalized-entropy: 0.7320666900931937, [(2, 8), (3, 31)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9733333333333333
finished with 23
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.35545532229663507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35545532229663507, 0.23411663337944788] ***
*** starting iteration: 2; err: [Inf, 0.35545532229663507, 0.23411663337944788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35545532229663507, 0.23411663337944788, 0.22575138075659912] ***
*** starting iteration: 3; err: [Inf, 0.35545532229663507, 0.23411663337944788, 0.22575138075659912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35545532229663507, 0.23411663337944788, 0.22575138075659912, 0.22334236849390895] ***
*** starting iteration: 4; err: [Inf, 0.35545532229663507, 0.23411663337944788, 0.22575138075659912, 0.22334236849390895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35545532229663507, 0.23411663337944788, 0.22575138075659912, 0.22334236849390895, 0.21948752471439298] ***
*** starting iteration: 5; err: [Inf, 0.35545532229663507, 0.23411663337944788, 0.22575138075659912, 0.22334236849390895, 0.21948752471439298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35545532229663507, 0.23411663337944788, 0.22575138075659912, 0.22334236849390895, 0.21948752471439298, 0.21620224403669433] ***
*** starting iteration: 6; err: [Inf, 0.35545532229663507, 0.23411663337944788, 0.22575138075659912, 0.22334236849390895, 0.21948752471439298, 0.21620224403669433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35545532229663507, 0.23411663337944788, 0.22575138075659912, 0.22334236849390895, 0.21948752471439298, 0.21620224403669433, 0.2132941498971076] ***
*** starting iteration: 7; err: [Inf, 0.35545532229663507, 0.23411663337944788, 0.22575138075659912, 0.22334236849390895, 0.21948752471439298, 0.21620224403669433, 0.2132941498971076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35545532229663507, 0.23411663337944788, 0.22575138075659912, 0.22334236849390895, 0.21948752471439298, 0.21620224403669433, 0.2132941498971076, 0.2115782787602827] ***
*** starting iteration: 8; err: [Inf, 0.35545532229663507, 0.23411663337944788, 0.22575138075659912, 0.22334236849390895, 0.21948752471439298, 0.21620224403669433, 0.2132941498971076, 0.2115782787602827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35545532229663507, 0.23411663337944788, 0.22575138075659912, 0.22334236849390895, 0.21948752471439298, 0.21620224403669433, 0.2132941498971076, 0.2115782787602827, 0.21108846496935982] ***
*** finished computation of 7 references, err: [Inf, 0.35545532229663507, 0.23411663337944788, 0.22575138075659912, 0.22334236849390895, 0.21948752471439298, 0.21620224403669433, 0.2132941498971076, 0.2115782787602827, 0.21108846496935982] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 17]]
** centroid: 1, normalized-entropy: 0.9666186325481027, [(2, 11), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 4]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 12), (3, 4)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43196158506433024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43196158506433024, 0.2235752481807381] ***
*** starting iteration: 2; err: [Inf, 0.43196158506433024, 0.2235752481807381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43196158506433024, 0.2235752481807381, 0.20292125656412718] ***
*** starting iteration: 3; err: [Inf, 0.43196158506433024, 0.2235752481807381, 0.20292125656412718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43196158506433024, 0.2235752481807381, 0.20292125656412718, 0.19823072684703769] ***
*** starting iteration: 4; err: [Inf, 0.43196158506433024, 0.2235752481807381, 0.20292125656412718, 0.19823072684703769] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43196158506433024, 0.2235752481807381, 0.20292125656412718, 0.19823072684703769, 0.19732601902043598] ***
*** finished computation of 7 references, err: [Inf, 0.43196158506433024, 0.2235752481807381, 0.20292125656412718, 0.19823072684703769, 0.19732601902043598] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 13, 14]]
** centroid: 3, normalized-entropy: 0.9990102708804813, [(2, 13), (3, 14)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3173379596805753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3173379596805753, 0.19769742883888294] ***
*** starting iteration: 2; err: [Inf, 0.3173379596805753, 0.19769742883888294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3173379596805753, 0.19769742883888294, 0.17284448383903353] ***
*** starting iteration: 3; err: [Inf, 0.3173379596805753, 0.19769742883888294, 0.17284448383903353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3173379596805753, 0.19769742883888294, 0.17284448383903353, 0.1685723476152914] ***
*** starting iteration: 4; err: [Inf, 0.3173379596805753, 0.19769742883888294, 0.17284448383903353, 0.1685723476152914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3173379596805753, 0.19769742883888294, 0.17284448383903353, 0.1685723476152914, 0.16822751772254382] ***
*** finished computation of 7 references, err: [Inf, 0.3173379596805753, 0.19769742883888294, 0.17284448383903353, 0.1685723476152914, 0.16822751772254382] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 4]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 5), (3, 4)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 23)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9733333333333333
finished with 23
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.2, 2.5, 4.8, 1.4666666666666668], [6.220000000000001, 2.6, 4.959999999999999, 1.7], [5.505263157894736, 2.6473684210526316, 4.0, 1.2368421052631582], [7.512500000000001, 3.1125000000000003, 6.425, 2.1250000000000004], [6.613333333333332, 3.1199999999999997, 5.533333333333333, 2.1733333333333333], [5.8, 2.8000000000000003, 5.0, 1.9833333333333334], [6.449999999999999, 3.0416666666666665, 4.658333333333333, 1.4749999999999999], [5.0375, 3.4375000000000004, 1.45625, 0.2437500000000001]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 3, 3, 3, 2, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.5, 2.542857142857143, 3.7857142857142856, 1.1642857142857144], [6.921052631578949, 3.0947368421052635, 5.889473684210526, 2.115789473684211], [6.122222222222223, 2.788888888888889, 4.522222222222222, 1.5111111111111113], [4.680000000000001, 3.1100000000000003, 1.4300000000000002, 0.17], [5.7727272727272725, 2.7181818181818183, 4.909090909090909, 1.718181818181818], [6.669999999999999, 3.0700000000000003, 4.67, 1.47], [6.425, 2.9000000000000004, 5.125, 1.925], [5.247826086956522, 3.652173913043479, 1.4999999999999998, 0.2913043478260871]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 1, 3, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.725, 3.3499999999999996, 6.6, 2.075], [5.1625, 3.5937499999999996, 1.525, 0.2875000000000001], [6.735714285714287, 3.021428571428572, 5.714285714285714, 2.1285714285714286], [4.7, 3.115789473684211, 1.4, 0.18947368421052635], [6.123529411764705, 2.8705882352941177, 4.541176470588235, 1.435294117647059], [5.966666666666666, 2.8333333333333335, 4.999999999999999, 1.8333333333333333], [6.5, 2.8, 4.800000000000001, 1.5], [6.328571428571428, 2.885714285714286, 5.3, 1.742857142857143], [5.506666666666667, 2.5866666666666664, 3.8666666666666667, 1.2066666666666666]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 3, 1, 2, 3, 2, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[49, 1, 1, 11, 6, 1, 1, 1, 9, 46, 17, 11, 27, 20, 32, 39, 25, 41, 3, 19, 38, 25, 30, 23, 33, 1, 27, 2, 24, 17, 35, 43, 16, 7, 32, 37, 36, 17, 59, 36, 22, 21, 17, 35, 39, 30, 32, 44, 48, 44, 41, 27, 13, 20, 4, 35, 38, 24, 27, 31, 22, 25, 26, 45, 28, 22, 38, 33, 2, 44, 48, 38, 42, 40, 20, 72, 31, 16, 27, 22, 21, 37, 41, 29, 33, 42, 35, 23, 47, 26, 43, 22, 41, 19, 26, 1, 1, 28, 40, 23, 35, 26, 24, 26, 51, 45, 30, 41, 64, 35, 30, 35, 39, 36, 31, 15, 32, 32, 22, 32, 46, 30, 28, 27, 30, 41, 17, 53, 18, 27, 31, 59, 39, 2, 42, 47, 30, 34, 11, 38, 34, 1, 65, 28, 34, 15, 33, 56, 12, 54, 32, 22, 49, 24, 39, 37, 53, 30, 47, 38, 46, 38, 42, 29, 40, 78, 33, 69, 31, 32, 83, 23, 30, 40, 59, 23, 48, 65, 34, 52, 21, 27, 64, 38, 33, 56, 41, 36, 20, 43, 34, 2, 1, 20, 33, 43, 41, 41, 32, 40, 55, 36, 32, 23, 27, 27, 30, 43, 50, 28, 50, 10, 42, 48, 45, 48, 38, 9, 33, 50, 19, 42, 37, 47, 56, 42, 21, 46, 39, 42, 31, 45, 44, 42, 38, 38, 42, 25, 37, 36, 50, 31, 39, 53, 40, 20, 37, 45, 40, 31, 48, 47, 42, 24, 18, 59, 38, 35, 28, 23, 25, 33, 47, 93, 46, 31, 26, 30, 18, 10, 39, 39, 39, 46, 36, 38, 34, 27, 33, 31, 39, 37, 35, 35, 16, 36, 46, 47, 38, 40, 37, 21, 29, 40, 46, 21, 61, 56, 1, 53]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5980000000000001, speedup = 0.3918580101864331, eval_ratio = 0.041748)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.34374999999999994,"recall":0.3368055555555556,"f1":null,"seconds":7.893145084381104e-5,"exhaustive_search_seconds":0.0006267260760068893,"evaluations":341.4765625,"distances_sum":1745.1965406267766}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5052083333333333,"recall":0.5052083333333333,"f1":0.5052083333333333,"seconds":0.00011418014764785767,"exhaustive_search_seconds":0.0006267260760068893,"evaluations":378.0078125,"distances_sum":1644.6727099264938}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6310763888888888,"recall":0.6310763888888888,"f1":0.6310763888888888,"seconds":0.00014754198491573334,"exhaustive_search_seconds":0.0006267260760068893,"evaluations":418.3203125,"distances_sum":1584.3712165051697}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7065972222222223,"recall":0.7065972222222223,"f1":0.7065972222222223,"seconds":0.0002464223653078079,"exhaustive_search_seconds":0.0006267260760068893,"evaluations":457.5859375,"distances_sum":1560.25037191239}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.764756944444444,"recall":0.764756944444444,"f1":0.764756944444444,"seconds":0.00020433031022548676,"exhaustive_search_seconds":0.0006267260760068893,"evaluations":496.5625,"distances_sum":1541.5157229037557}
KCenters.DeloneInvIndex> reached performance {"precision":0.8168402777777769,"recall":0.8168402777777769,"f1":0.8168402777777769,"seconds":0.00026634521782398224,"exhaustive_search_seconds":0.0006267260760068893,"evaluations":534.203125,"distances_sum":1528.2816649333072}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.801, speedup = 1.5982427804156611, eval_ratio = 0.053837)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
