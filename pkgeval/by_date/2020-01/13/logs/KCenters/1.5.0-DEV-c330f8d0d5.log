Julia Version 1.5.0-DEV.49
Commit c330f8d0d5 (2020-01-10 15:42 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Missings ──────────────────── v0.4.3
 Installed MappedArrays ──────────────── v0.2.2
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed LearnBase ─────────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.8
 Installed OrderedCollections ────────── v1.1.0
 Installed JSON ──────────────────────── v0.21.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed Reexport ──────────────────── v0.2.0
 Installed TableTraits ───────────────── v1.0.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed DataFrames ────────────────── v0.20.0
 Installed CategoricalArrays ─────────── v0.7.6
 Installed DataValueInterfaces ───────── v1.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Tables ────────────────────── v0.2.11
 Installed MLDataPattern ─────────────── v0.5.0
 Installed Compat ────────────────────── v3.2.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed Parsers ───────────────────── v0.3.10
 Installed MLDataUtils ───────────────── v0.5.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataStructures ────────────── v0.17.7
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.6
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.7
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_lnntGR/Project.toml`
 [no changes]
  Updating `/tmp/jl_lnntGR/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_lnntGR/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 158.98000000000002
[ Info: 80.40999999999994
[ Info: 41.03999999999999
[ Info: 23.62999999999999
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.19999834944844
[ Info: 75.68000114231452
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.68112382564134
inertia(cdnet.distances) = 24.255288086914497
inertia(crand.distances) = 22.158286131109964
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8043902278277286,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":7.984375,"distances_sum":2052.4189416286067}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5419921875,"f1":0.6879995004995011,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":7.453125,"distances_sum":1486.614392795613}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.8043902278277286,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":7.984375,"distances_sum":2052.4189416286067}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9196917665667672,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.6171875,"distances_sum":2720.7032604893784}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9534684065934069,"seconds":8.799135684967041e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.7734375,"distances_sum":2983.326221429092}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9095810439560447,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.5234375,"distances_sum":2611.187785756381}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7138671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7138671875,"f1":0.8222657550782558,"seconds":4.909932613372803e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.0546875,"distances_sum":2108.7103238887526}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.904017857142858,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.5859375,"distances_sum":2555.9443388246927}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9534684065934069,"seconds":8.799135684967041e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.7734375,"distances_sum":2983.326221429092}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9583192848817854,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.8828125,"distances_sum":2995.296925368876}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9772893772893776,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.9453125,"distances_sum":3128.298120352134}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9565132783882788,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.890625,"distances_sum":2961.742857517482}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9772893772893776,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.9453125,"distances_sum":3128.298120352134}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9772893772893776,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.9453125,"distances_sum":3128.298120352134}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.720703125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.720703125,"f1":0.8255910755910764,"seconds":4.470348358154297e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.671875,"distances_sum":2083.6416974786193}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.140625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.140625,"f1":null,"seconds":2.4940818548202515e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":4.40625,"distances_sum":379.3313302528392}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.720703125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.720703125,"f1":0.8255910755910764,"seconds":4.470348358154297e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.671875,"distances_sum":2083.6416974786193}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9368964368964373,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6015625,"distances_sum":2743.2857741412463}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8534777722277731,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.7578125,"distances_sum":2229.35983844264}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9368964368964373,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6015625,"distances_sum":2743.2857741412463}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9559981684981689,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.78125,"distances_sum":2808.5998193542014}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570913461538466,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7734375,"distances_sum":2837.5098583219333}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9483745421245426,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7265625,"distances_sum":2790.347910126587}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9570913461538466,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7734375,"distances_sum":2837.5098583219333}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9570913461538466,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7734375,"distances_sum":2837.5098583219333}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5537109375,"f1":null,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.1171875,"distances_sum":1391.0395268807854}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.431640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.431640625,"f1":null,"seconds":3.8351863622665405e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":6.2109375,"distances_sum":1053.7839128598089}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5537109375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5537109375,"f1":null,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.1171875,"distances_sum":1391.0395268807854}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9264797702297709,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.5703125,"distances_sum":2465.5427961803516}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9264797702297709,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.5703125,"distances_sum":2465.5427961803516}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9659855769230773,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8125,"distances_sum":2801.344888302672}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9534855769230774,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.7265625,"distances_sum":2735.5316973371264}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9659855769230773,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8125,"distances_sum":2801.344888302672}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9659855769230773,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8125,"distances_sum":2801.344888302672}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2880859375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.2880859375,"f1":null,"seconds":3.648921847343445e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":4.4921875,"distances_sum":856.9368822979558}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1337890625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1337890625,"f1":null,"seconds":2.689659595489502e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":3.765625,"distances_sum":378.34540161842204}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.7984166874791881,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.484375,"distances_sum":1883.222147717926}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.685546875,"f1":0.7984166874791881,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.484375,"distances_sum":1883.222147717926}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8784491550116559,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.171875,"distances_sum":2234.9729884191233}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9174799159174166,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.453125,"distances_sum":2521.4966846605607}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8603515625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8603515625,"f1":0.9174799159174166,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.453125,"distances_sum":2521.4966846605607}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9250317390942397,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.46875,"distances_sum":2587.4518740133512}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9588026556776559,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.75,"distances_sum":2767.265800855156}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9436272061272067,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6640625,"distances_sum":2638.8942199932594}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9340518856143863,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.609375,"distances_sum":2621.4776684856656}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9291094322344329,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.5703125,"distances_sum":2584.3403687633618}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.932912920412921,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.5625,"distances_sum":2627.081404750507}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9588026556776559,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.75,"distances_sum":2767.265800855156}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9588026556776559,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.75,"distances_sum":2767.265800855156}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.548828125,"f1":0.6955792471417477,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.5,"distances_sum":1442.6186314998072}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5478515625,"f1":null,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.4140625,"distances_sum":1436.279748520385}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.548828125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.548828125,"f1":0.6955792471417477,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.5,"distances_sum":1442.6186314998072}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8772045662670671,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.3671875,"distances_sum":2270.4534271932193}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8040277430902438,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.9921875,"distances_sum":1952.1532503459437}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9126194985569992,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.484375,"distances_sum":2547.6385682043256}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9096871878121886,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.53125,"distances_sum":2468.0629942285964}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8157207375957385,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.109375,"distances_sum":1911.5679172300177}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8745827089577098,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.46875,"distances_sum":2259.743395354986}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8525390625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8525390625,"f1":0.9126194985569992,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.484375,"distances_sum":2547.6385682043256}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9418643856143861,"seconds":6.243586540222168e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.734375,"distances_sum":2728.7831306891444}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9495764652014657,"seconds":6.290152668952942e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7734375,"distances_sum":2830.9978491621696}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9461226273726282,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8125,"distances_sum":2769.710093875245}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9353740009990018,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.75,"distances_sum":2666.766172155883}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9495764652014657,"seconds":6.290152668952942e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7734375,"distances_sum":2830.9978491621696}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9495764652014657,"seconds":6.290152668952942e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7734375,"distances_sum":2830.9978491621696}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8067900849150856,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.375,"distances_sum":1709.8693740670644}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8689919455544461,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.5234375,"distances_sum":2092.2840154874475}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":4.149973392486572e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":6.8046875,"distances_sum":563.6829133741052}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8689919455544461,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.5234375,"distances_sum":2092.2840154874475}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9126290376290385,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.7734375,"distances_sum":2354.0106673089704}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964680631868132,"seconds":7.074326276779175e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.9609375,"distances_sum":2709.184791981703}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9668727106227111,"seconds":6.794929504394531e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.9921875,"distances_sum":2719.2236364450673}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9668727106227111,"seconds":6.794929504394531e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.9921875,"distances_sum":2719.2236364450673}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9762477106227109,"seconds":6.75395131111145e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.9921875,"distances_sum":2802.738335933348}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9766941391941393,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":9.0,"distances_sum":2788.5104272438894}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.97967032967033,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":9.0,"distances_sum":2819.9882109859573}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9692193223443223,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.9765625,"distances_sum":2757.707485565859}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9745936355311358,"seconds":6.962567567825317e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.9765625,"distances_sum":2788.8056489151404}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.97967032967033,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":9.0,"distances_sum":2819.9882109859573}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.97967032967033,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":9.0,"distances_sum":2819.9882109859573}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":0.9797805059523809,"recall":0.7177734375,"f1":0.8208476419413926,"seconds":4.71062958240509e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.8359375,"distances_sum":1721.086129360791}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":0.9882440476190475,"recall":0.73828125,"f1":0.8394719863469872,"seconds":4.665926098823547e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.90625,"distances_sum":1770.033627939867}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73828125,"state":{"ssize":3,"bsize":5},"perf":{"precision":0.9882440476190475,"recall":0.73828125,"f1":0.8394719863469872,"seconds":4.665926098823547e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.90625,"distances_sum":1770.033627939867}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":0.9861607142857144,"recall":0.9296875,"f1":0.9547332875457877,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.90625,"distances_sum":2586.9904705427803}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":4,"bsize":9},"perf":{"precision":0.9861607142857144,"recall":0.9296875,"f1":0.9547332875457877,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.90625,"distances_sum":2586.9904705427803}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":5,"bsize":13}, perf: {"precision":0.9868396577380952,"recall":0.9580078125,"f1":0.9711774553571428,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9765625,"distances_sum":2689.003566355771}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":6,"bsize":10}, perf: {"precision":0.9898158482142858,"recall":0.939453125,"f1":0.9618968921703299,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9453125,"distances_sum":2603.6985425705493}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":5,"bsize":13},"perf":{"precision":0.9868396577380952,"recall":0.9580078125,"f1":0.9711774553571428,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9765625,"distances_sum":2689.003566355771}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":5,"bsize":13},"perf":{"precision":0.9868396577380952,"recall":0.9580078125,"f1":0.9711774553571428,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9765625,"distances_sum":2689.003566355771}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7825058621933628,"seconds":4.168599843978882e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.8359375,"distances_sum":1454.734030678075}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":3.2633543014526367e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.5,"distances_sum":812.8194173845884}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7923784548784557,"seconds":4.08664345741272e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.9609375,"distances_sum":1489.387878343534}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.671875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.671875,"f1":0.7923784548784557,"seconds":4.08664345741272e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.9609375,"distances_sum":1489.387878343534}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604967948717953,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8046875,"distances_sum":2470.249330846839}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8957792207792215,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1640625,"distances_sum":2039.371811773036}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9418815559440564,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.640625,"distances_sum":2398.981386197023}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8383442945942955,"seconds":4.639849066734314e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.671875,"distances_sum":1736.8417195586255}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8523466117216124,"seconds":4.731118679046631e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.7890625,"distances_sum":1781.8520550649425}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8382001678876686,"seconds":4.407018423080444e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.53125,"distances_sum":1712.273170090273}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7119140625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7119140625,"f1":0.8230982559107567,"seconds":4.3157488107681274e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.484375,"distances_sum":1642.8014651251626}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8954529845154854,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.2578125,"distances_sum":2039.705135075986}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9604967948717953,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8046875,"distances_sum":2470.249330846839}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9652758699633704,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8828125,"distances_sum":2478.3763931228837}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.976247710622711,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.90625,"distances_sum":2562.0661663608153}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9683493589743594,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.890625,"distances_sum":2495.043645286985}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758184523809526,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9375,"distances_sum":2541.70482562101}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274726,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9140625,"distances_sum":2528.4727915621693}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9625629578754583,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8515625,"distances_sum":2473.3493795285403}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.976247710622711,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.90625,"distances_sum":2562.0661663608153}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.976247710622711,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.90625,"distances_sum":2562.0661663608153}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.71367954961705,"seconds":3.8053840398788452e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.046875,"distances_sum":1201.3910441594617}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8445112179487188,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.0,"distances_sum":1755.4893384441684}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8445112179487188,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.0,"distances_sum":1755.4893384441684}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9568738553113558,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8359375,"distances_sum":2424.6004909096264}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9568738553113558,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8359375,"distances_sum":2424.6004909096264}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9716796875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9716796875,"f1":0.9847470238095238,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.984375,"distances_sum":2612.1702120798614}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9644173534798541,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8515625,"distances_sum":2491.017163424816}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9716796875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9847470238095238,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.984375,"distances_sum":2612.1702120798614}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9716796875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9847470238095238,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.984375,"distances_sum":2612.1702120798614}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8482682248307257,"seconds":4.98257577419281e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6953125,"distances_sum":1717.839281174648}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6906334984459989,"seconds":4.176050424575806e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.7578125,"distances_sum":1126.6060059403592}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.75,"f1":0.8482682248307257,"seconds":4.98257577419281e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6953125,"distances_sum":1717.839281174648}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9464171245421249,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.859375,"distances_sum":2294.764395095672}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9587854853479859,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.90625,"distances_sum":2389.2524951444398}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8645807317682326,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7578125,"distances_sum":1788.1729136351248}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.905520521145522,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.765625,"distances_sum":2002.9456325866843}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8515827922077931,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.71875,"distances_sum":1707.9347364964062}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9587854853479859,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.90625,"distances_sum":2389.2524951444398}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9721554487179489,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9765625,"distances_sum":2461.6438946596595}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9721554487179489,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9765625,"distances_sum":2461.6438946596595}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9721554487179489,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9765625,"distances_sum":2461.6438946596595}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":3.1981617212295532e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.1015625,"distances_sum":538.9894027937022}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6991241397491403,"seconds":3.928318619728088e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.4921875,"distances_sum":1124.8343723218957}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.720703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.720703125,"f1":0.8282056485181495,"seconds":4.991888999938965e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.7421875,"distances_sum":1658.847535814215}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.720703125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.720703125,"f1":0.8282056485181495,"seconds":4.991888999938965e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.7421875,"distances_sum":1658.847535814215}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9573920870795873,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8359375,"distances_sum":2410.6236989103118}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8481861888111898,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.8671875,"distances_sum":1741.5700144481418}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8344830516705524,"seconds":4.941597580909729e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.78125,"distances_sum":1664.7854735810913}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9573920870795873,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8359375,"distances_sum":2410.6236989103118}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604052197802202,"seconds":6.3516199588775635e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8046875,"distances_sum":2410.927285698413}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9650698260073263,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.84375,"distances_sum":2439.105023573833}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707989926739932,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2486.8337226578933}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707989926739932,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2486.8337226578933}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707989926739932,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2486.8337226578933}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":2.982094883918762e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":5.65625,"distances_sum":483.87754743166244}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4150390625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4150390625,"f1":null,"seconds":3.473833203315735e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.2890625,"distances_sum":890.3704832815054}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4150390625,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.4150390625,"f1":null,"seconds":3.473833203315735e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.2890625,"distances_sum":890.3704832815054}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.848544164169165,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.984375,"distances_sum":1818.9524514389384}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8026900183150191,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.390625,"distances_sum":1599.857550773989}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8621113261738268,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.1015625,"distances_sum":1888.3874923278138}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8452734765234773,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.953125,"distances_sum":1796.954391589015}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8621113261738268,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.1015625,"distances_sum":1888.3874923278138}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8996456668331675,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.0703125,"distances_sum":2105.432265615275}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9674507783882789,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8828125,"distances_sum":2537.8066007334523}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564961080586085,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7890625,"distances_sum":2474.7389575806806}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9420272435897441,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.5859375,"distances_sum":2395.5160754328385}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9450320512820518,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.6796875,"distances_sum":2424.3085081612007}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9496508699633706,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.6875,"distances_sum":2463.328440392317}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9446714743589748,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7109375,"distances_sum":2397.6496347959874}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.892691683316684,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.0703125,"distances_sum":2019.6413791925052}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9674507783882789,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8828125,"distances_sum":2537.8066007334523}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9674507783882789,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8828125,"distances_sum":2537.8066007334523}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4296875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4296875,"f1":null,"seconds":3.4887343645095825e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.28125,"distances_sum":914.3774330652599}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.439453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.439453125,"f1":null,"seconds":3.559514880180359e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.375,"distances_sum":938.2437375649151}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8033605283605291,"seconds":4.317611455917358e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.3125,"distances_sum":1560.9865431218}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.8033605283605291,"seconds":4.317611455917358e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.3125,"distances_sum":1560.9865431218}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9548820970695975,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.796875,"distances_sum":2455.720586051402}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8887882950382958,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.484375,"distances_sum":2009.6634054828526}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.852946012321013,"seconds":4.980713129043579e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.296875,"distances_sum":1831.421656501423}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9548820970695975,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.796875,"distances_sum":2455.720586051402}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9614812271062273,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.84375,"distances_sum":2500.5209187019723}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.956089743589744,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.84375,"distances_sum":2462.322053775947}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614812271062273,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.84375,"distances_sum":2500.5209187019723}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614812271062273,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.84375,"distances_sum":2500.5209187019723}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.193359375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.193359375,"f1":null,"seconds":3.043562173843384e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.4375,"distances_sum":439.4349098044891}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.7013618326118332,"seconds":3.8817524909973145e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.3125,"distances_sum":1192.7966299496502}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2060546875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2060546875,"f1":null,"seconds":3.0584633350372314e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.484375,"distances_sum":483.7858104463292}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55859375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.55859375,"f1":0.7013618326118332,"seconds":3.8817524909973145e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.3125,"distances_sum":1192.7966299496502}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.6728515625,"f1":null,"seconds":4.3157488107681274e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.859375,"distances_sum":1521.3774497817205}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.922390630203131,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.3984375,"distances_sum":2255.937566180942}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5771484375,"f1":null,"seconds":4.014000296592712e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.5625,"distances_sum":1266.2256711138657}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.922390630203131,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.3984375,"distances_sum":2255.937566180942}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9542639652014657,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.75,"distances_sum":2445.2855225897843}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9542639652014657,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.75,"distances_sum":2445.2855225897843}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9542639652014657,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.75,"distances_sum":2445.2855225897843}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.691762685775757e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.2421875,"distances_sum":884.4844518895087}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.591796875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.591796875,"f1":0.7295733780108786,"seconds":4.259869456291199e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.1328125,"distances_sum":1271.2363243047723}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.591796875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.591796875,"f1":0.7295733780108786,"seconds":4.259869456291199e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.1328125,"distances_sum":1271.2363243047723}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9403388278388284,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":2261.293201203524}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9403388278388284,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":2261.293201203524}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9403388278388284,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":2261.293201203524}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8955078125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9403388278388284,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":2261.293201203524}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7957535520035528,"seconds":4.4871121644973755e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":7.5625,"distances_sum":1562.4317151699668}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3818359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3818359375,"f1":null,"seconds":3.6228448152542114e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":6.2265625,"distances_sum":834.3323980957803}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6767578125,"f1":0.7957535520035528,"seconds":4.4871121644973755e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":7.5625,"distances_sum":1562.4317151699668}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.8329592282717291,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.0,"distances_sum":1755.64581493987}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.908287545787547,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.390625,"distances_sum":2146.303616224031}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8942713536463545,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.3984375,"distances_sum":2043.3875943546059}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8854171869796879,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.2890625,"distances_sum":2002.5553946617156}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8408203125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.908287545787547,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.390625,"distances_sum":2146.303616224031}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9328067765567771,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.546875,"distances_sum":2303.7299074701095}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9114645770895778,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.34375,"distances_sum":2163.4825887164734}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9659111721611726,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.859375,"distances_sum":2512.119088401543}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688816391941396,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.8828125,"distances_sum":2520.4577464376525}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9674507783882786,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.8515625,"distances_sum":2506.1752053017362}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9362267940392947,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.625,"distances_sum":2282.7415318560934}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9306833791208797,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.53125,"distances_sum":2262.9340963525187}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688816391941396,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.8828125,"distances_sum":2520.4577464376525}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688816391941396,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.8828125,"distances_sum":2520.4577464376525}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2265625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2265625,"f1":null,"seconds":3.2689422369003296e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.171875,"distances_sum":504.0595565307516}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8657857767232777,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.5234375,"distances_sum":1864.351851046355}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2080078125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2080078125,"f1":null,"seconds":3.213062882423401e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.0234375,"distances_sum":454.3794010176348}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8657857767232777,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.5234375,"distances_sum":1864.351851046355}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9532280219780224,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.859375,"distances_sum":2451.261271485961}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9589171245421249,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.890625,"distances_sum":2461.7981122356873}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9589171245421249,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.890625,"distances_sum":2461.7981122356873}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9799851190476194,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.921875,"distances_sum":2613.8144290738333}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688072344322349,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9375,"distances_sum":2526.5441301493174}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658310439560445,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8515625,"distances_sum":2534.382485566351}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":10,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9799851190476194,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.921875,"distances_sum":2613.8144290738333}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":10,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9799851190476194,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.921875,"distances_sum":2613.8144290738333}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.388671875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.388671875,"f1":null,"seconds":3.909692168235779e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.203125,"distances_sum":866.2861653251884}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.388671875,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.388671875,"f1":null,"seconds":3.909692168235779e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.203125,"distances_sum":866.2861653251884}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8422801157176164,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.0625,"distances_sum":1802.9713421070744}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8742283757908764,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3359375,"distances_sum":2000.838264909427}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.794921875,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.794921875,"f1":0.8742283757908764,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3359375,"distances_sum":2000.838264909427}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9506467490842495,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.796875,"distances_sum":2411.073927706552}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":10,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8945715742590751,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3515625,"distances_sum":2064.019979668441}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9414923618048625,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.703125,"distances_sum":2374.603943317655}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9380437271062276,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.640625,"distances_sum":2403.3005260193313}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9506467490842495,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.796875,"distances_sum":2411.073927706552}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9506467490842495,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.796875,"distances_sum":2411.073927706552}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.23046875,"f1":null,"seconds":3.4105032682418823e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.2890625,"distances_sum":511.4069965408379}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.57421875,"f1":0.71107520951271,"seconds":3.976747393608093e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.984375,"distances_sum":1171.1490764118357}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.40625,"f1":null,"seconds":3.77558171749115e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.4140625,"distances_sum":858.5081006447874}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.57421875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.57421875,"f1":0.71107520951271,"seconds":3.976747393608093e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.984375,"distances_sum":1171.1490764118357}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.8345623126873134,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.8671875,"distances_sum":1667.3099092706339}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7177734375,"f1":0.8245036213786221,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.6953125,"distances_sum":1625.7949773249932}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8910230394605402,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.09375,"distances_sum":1977.8459555601287}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5791015625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5791015625,"f1":0.7148566711066716,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.0859375,"distances_sum":1160.6019454296181}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.814453125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.814453125,"f1":0.8910230394605402,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.09375,"distances_sum":1977.8459555601287}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8917098526473535,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.109375,"distances_sum":1958.8290655051308}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9568566849816859,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.734375,"distances_sum":2387.8477364883356}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9436329295704301,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5625,"distances_sum":2346.226660079087}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.950085851648352,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7109375,"distances_sum":2337.1416393374598}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9592319139194141,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7734375,"distances_sum":2398.267821311287}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9592319139194141,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7734375,"distances_sum":2398.267821311287}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9592319139194141,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7734375,"distances_sum":2398.267821311287}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4033203125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4033203125,"f1":null,"seconds":3.345310688018799e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.6015625,"distances_sum":844.9349356048398}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.533203125,"f1":0.6772378663003669,"seconds":3.939494490623474e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.171875,"distances_sum":1109.8592176187017}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.533203125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.533203125,"f1":0.6772378663003669,"seconds":3.939494490623474e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.171875,"distances_sum":1109.8592176187017}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.533203125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.533203125,"f1":0.6772378663003669,"seconds":3.939494490623474e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.171875,"distances_sum":1109.8592176187017}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.533203125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.533203125,"f1":0.6772378663003669,"seconds":3.939494490623474e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.171875,"distances_sum":1109.8592176187017}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.4013671875,"f1":0.5535485347985348,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.2890625,"distances_sum":646.5945410886728}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8080710955710964,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.7421875,"distances_sum":1199.0428427568147}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.8080710955710964,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.7421875,"distances_sum":1199.0428427568147}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9242850899100908,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.515625,"distances_sum":1626.6208078008551}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.9242850899100908,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.515625,"distances_sum":1626.6208078008551}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9565190018315022,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7265625,"distances_sum":1877.7781330995815}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9659626831501835,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8828125,"distances_sum":1878.5632110179881}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659626831501835,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8828125,"distances_sum":1878.5632110179881}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659626831501835,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8828125,"distances_sum":1878.5632110179881}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8001529720279729,"seconds":4.742294549942017e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.75,"distances_sum":1293.3559741609408}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.232421875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.232421875,"f1":null,"seconds":3.388151526451111e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":6.7734375,"distances_sum":493.890867830387}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6845703125,"f1":0.8001529720279729,"seconds":4.742294549942017e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.75,"distances_sum":1293.3559741609408}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.931670933233434,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.5625,"distances_sum":1808.2989490299144}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9550824175824182,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.71875,"distances_sum":2001.9471794043486}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9550824175824182,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.71875,"distances_sum":2001.9471794043486}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9750972985347988,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.921875,"distances_sum":2102.9083957914386}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9706501831501835,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.8671875,"distances_sum":2067.374415054605}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9750972985347988,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.921875,"distances_sum":2102.9083957914386}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9750972985347988,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.921875,"distances_sum":2102.9083957914386}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.412109375,"f1":null,"seconds":3.913417458534241e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.3125,"distances_sum":769.9545258251884}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8704540251415259,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.984375,"distances_sum":1584.2587366303098}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2158203125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2158203125,"f1":null,"seconds":3.4868717193603516e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.046875,"distances_sum":441.4264877434317}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5634765625,"f1":null,"seconds":4.034489393234253e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.9296875,"distances_sum":1043.9573885117134}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8704540251415259,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.984375,"distances_sum":1584.2587366303098}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9432005494505501,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.703125,"distances_sum":1952.8779141774403}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9441849816849822,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.671875,"distances_sum":1942.2496795170398}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9117934149184155,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.3359375,"distances_sum":1755.8655758224425}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9441849816849822,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.671875,"distances_sum":1942.2496795170398}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9642742673992677,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8046875,"distances_sum":2068.3184014517897}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9789835164835167,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.90625,"distances_sum":2146.1261515392202}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9628205128205134,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7734375,"distances_sum":2069.3170341362566}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9789835164835167,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.90625,"distances_sum":2146.1261515392202}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9789835164835167,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.90625,"distances_sum":2146.1261515392202}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.8223587176712184,"seconds":4.759058356285095e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.53125,"distances_sum":1421.3944644809558}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.869672514985016,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.953125,"distances_sum":1615.3717634058485}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.869672514985016,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.953125,"distances_sum":1615.3717634058485}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9608688186813191,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8125,"distances_sum":2088.2313140467813}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9513049450549454,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7265625,"distances_sum":2064.177375728073}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9254438270063274,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.421875,"distances_sum":1902.5842920987043}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9608688186813191,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8125,"distances_sum":2088.2313140467813}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9768429487179491,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.890625,"distances_sum":2207.392862215952}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9642857142857147,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8671875,"distances_sum":2118.3024045138804}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9768429487179491,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.890625,"distances_sum":2207.392862215952}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9768429487179491,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.890625,"distances_sum":2207.392862215952}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8022482725607734,"seconds":4.583969712257385e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.625,"distances_sum":1359.1250370374175}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8757331210456218,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.140625,"distances_sum":1675.1709799180662}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8757331210456218,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.140625,"distances_sum":1675.1709799180662}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9603308150183154,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.7734375,"distances_sum":2131.2826451950573}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9086257492507499,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.40625,"distances_sum":1802.7856617919485}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9370993589743596,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.671875,"distances_sum":2002.5396436805675}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9603308150183154,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.7734375,"distances_sum":2131.2826451950573}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9817708333333335,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.921875,"distances_sum":2251.775944799325}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9729739010989014,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.828125,"distances_sum":2217.1261001446233}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9635130494505499,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.8203125,"distances_sum":2156.9415141393715}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9658539377289379,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.8515625,"distances_sum":2165.589374753026}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9817708333333335,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.921875,"distances_sum":2251.775944799325}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9817708333333335,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.921875,"distances_sum":2251.775944799325}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4267578125, conf: {"ssize":2,"bsize":2}, perf: {"precision":1.0,"recall":0.4267578125,"f1":0.5749505702630703,"seconds":3.7048012018203735e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.3828125,"distances_sum":799.141634926425}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8019105894105902,"seconds":4.718080163002014e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.796875,"distances_sum":1380.374631574808}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.8019105894105902,"seconds":4.718080163002014e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.796875,"distances_sum":1380.374631574808}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9036520770895775,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.25,"distances_sum":1791.0515397695465}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9289522977022985,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5078125,"distances_sum":1917.735740904146}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9289522977022985,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5078125,"distances_sum":1917.735740904146}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9506925366300373,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.765625,"distances_sum":2064.987188727908}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9674679487179492,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.828125,"distances_sum":2174.4502695074243}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9704269688644693,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":2183.1370687508897}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9704269688644693,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":2183.1370687508897}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9704269688644693,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":2183.1370687508897}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.507360816001892e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.3125,"distances_sum":726.7122852563974}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7866893523143531,"seconds":4.71062958240509e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.6484375,"distances_sum":1217.9143057886379}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.666015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.666015625,"f1":0.7866893523143531,"seconds":4.71062958240509e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.6484375,"distances_sum":1217.9143057886379}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8516670829170837,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.9453125,"distances_sum":1490.5182935590049}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9417525183150187,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.59375,"distances_sum":1925.0708520686735}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9417525183150187,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.59375,"distances_sum":1925.0708520686735}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.945009157509158,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6640625,"distances_sum":1946.7589653853029}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.945009157509158,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6640625,"distances_sum":1946.7589653853029}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.904296875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.945009157509158,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6640625,"distances_sum":1946.7589653853029}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7928866272616281,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.390625,"distances_sum":1321.231116741555}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8484702797202806,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.78125,"distances_sum":1534.6566825168443}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8484702797202806,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.78125,"distances_sum":1534.6566825168443}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8942567848817857,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.21875,"distances_sum":1673.94136140654}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9356704059829064,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.609375,"distances_sum":1982.1421822079988}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9491732226107232,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.703125,"distances_sum":2050.8062402850237}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9337199259074266,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.3984375,"distances_sum":1935.3131948057612}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9491732226107232,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.703125,"distances_sum":2050.8062402850237}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9746108058608062,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8828125,"distances_sum":2174.215441877494}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9539491758241762,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.6875,"distances_sum":2055.6593973581084}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687500000000003,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8203125,"distances_sum":2135.651369343918}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9556375915750921,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.75,"distances_sum":2047.2172533673752}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9603994963369965,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8359375,"distances_sum":2069.7004188121155}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9746108058608062,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8828125,"distances_sum":2174.215441877494}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9746108058608062,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8828125,"distances_sum":2174.215441877494}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8649309024309032,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.1484375,"distances_sum":1594.5669317088164}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.6079436540603638e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.5,"distances_sum":745.514569235654}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.548828125,"f1":null,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.2109375,"distances_sum":1012.7362174565064}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8649309024309032,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.1484375,"distances_sum":1594.5669317088164}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9158659049284055,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4609375,"distances_sum":1863.7505028261253}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9481398809523814,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.75,"distances_sum":2045.7994269474166}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.917648497335998,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.484375,"distances_sum":1866.4936858231906}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9039262820512828,"seconds":5.038455128669739e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4921875,"distances_sum":1760.010310253732}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9481398809523814,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.75,"distances_sum":2045.7994269474166}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9818452380952383,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2227.3866732254764}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9711137820512824,"seconds":6.290152668952942e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.90625,"distances_sum":2167.6792437623963}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":12,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9599187271062277,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7734375,"distances_sum":2105.4426213087877}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9673992673992677,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.828125,"distances_sum":2157.032395945091}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9642113095238098,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":2135.2769667070233}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9818452380952383,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2227.3866732254764}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9818452380952383,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2227.3866732254764}}, n: 9
inertia(cfft.distances) = 18.8143545066045
inertia(cdnet.distances) = 23.068166525280546
inertia(crand.distances) = 19.690034639582805
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.94
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9288888888888889
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.94
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8866666666666666
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8466666666666667
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 3, 2, 3, 3, 1, 2, 3, 3, 2, 3, 3, 3, 1, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 2, 2, 3, 3, 1]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.40753333526666724] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.40753333526666724, 0.18666128653591982] ***
*** starting iteration: 2; err: [Inf, 0.40753333526666724, 0.18666128653591982] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.40753333526666724, 0.18666128653591982, 0.16849608874638897] ***
*** starting iteration: 3; err: [Inf, 0.40753333526666724, 0.18666128653591982, 0.16849608874638897] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.40753333526666724, 0.18666128653591982, 0.16849608874638897, 0.16451158196661028] ***
*** starting iteration: 4; err: [Inf, 0.40753333526666724, 0.18666128653591982, 0.16849608874638897, 0.16451158196661028] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.40753333526666724, 0.18666128653591982, 0.16849608874638897, 0.16451158196661028, 0.16349131641382694] ***
*** starting iteration: 5; err: [Inf, 0.40753333526666724, 0.18666128653591982, 0.16849608874638897, 0.16451158196661028, 0.16349131641382694] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.40753333526666724, 0.18666128653591982, 0.16849608874638897, 0.16451158196661028, 0.16349131641382694, 0.1623779148122655] ***
*** starting iteration: 6; err: [Inf, 0.40753333526666724, 0.18666128653591982, 0.16849608874638897, 0.16451158196661028, 0.16349131641382694, 0.1623779148122655] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.40753333526666724, 0.18666128653591982, 0.16849608874638897, 0.16451158196661028, 0.16349131641382694, 0.1623779148122655, 0.16209971251282457] ***
*** finished computation of 12 references, err: [Inf, 0.40753333526666724, 0.18666128653591982, 0.16849608874638897, 0.16451158196661028, 0.16349131641382694, 0.1623779148122655, 0.16209971251282457] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.5694252945138065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5694252945138065, 0.3401161784573101] ***
*** starting iteration: 2; err: [Inf, 0.5694252945138065, 0.3401161784573101] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5694252945138065, 0.3401161784573101, 0.30660630346538825] ***
*** starting iteration: 3; err: [Inf, 0.5694252945138065, 0.3401161784573101, 0.30660630346538825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5694252945138065, 0.3401161784573101, 0.30660630346538825, 0.2815433018897673] ***
*** finished computation of 7 references, err: [Inf, 0.5694252945138065, 0.3401161784573101, 0.30660630346538825, 0.2815433018897673] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 24]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 24, 7]]
** centroid: 2, normalized-entropy: 0.7706290693639406, [(2, 24), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4482074567394065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4482074567394065, 0.22279803985833385] ***
*** starting iteration: 2; err: [Inf, 0.4482074567394065, 0.22279803985833385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4482074567394065, 0.22279803985833385, 0.21576840949376874] ***
*** starting iteration: 3; err: [Inf, 0.4482074567394065, 0.22279803985833385, 0.21576840949376874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4482074567394065, 0.22279803985833385, 0.21576840949376874, 0.21047487348822141] ***
*** finished computation of 7 references, err: [Inf, 0.4482074567394065, 0.22279803985833385, 0.21576840949376874, 0.21047487348822141] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 19, 9]]
** centroid: 1, normalized-entropy: 0.9059282160429994, [(2, 19), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4165289417564466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4165289417564466, 0.2172081424912242] ***
*** starting iteration: 2; err: [Inf, 0.4165289417564466, 0.2172081424912242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4165289417564466, 0.2172081424912242, 0.205275515657853] ***
*** starting iteration: 3; err: [Inf, 0.4165289417564466, 0.2172081424912242, 0.205275515657853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4165289417564466, 0.2172081424912242, 0.205275515657853, 0.20317011128186022] ***
*** finished computation of 7 references, err: [Inf, 0.4165289417564466, 0.2172081424912242, 0.205275515657853, 0.20317011128186022] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 6]]
** centroid: 3, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 5, 13]]
** centroid: 4, normalized-entropy: 0.8524051786494784, [(2, 5), (3, 13)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47909999828193306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47909999828193306, 0.2691939673585459] ***
*** starting iteration: 2; err: [Inf, 0.47909999828193306, 0.2691939673585459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47909999828193306, 0.2691939673585459, 0.259916251656735] ***
*** starting iteration: 3; err: [Inf, 0.47909999828193306, 0.2691939673585459, 0.259916251656735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47909999828193306, 0.2691939673585459, 0.259916251656735, 0.25795379472219854] ***
*** starting iteration: 4; err: [Inf, 0.47909999828193306, 0.2691939673585459, 0.259916251656735, 0.25795379472219854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47909999828193306, 0.2691939673585459, 0.259916251656735, 0.25795379472219854, 0.25747508752464027] ***
*** finished computation of 7 references, err: [Inf, 0.47909999828193306, 0.2691939673585459, 0.259916251656735, 0.25795379472219854, 0.25747508752464027] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 5]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(2, 4), (3, 5)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 5]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.360200003126036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.360200003126036, 0.3967962098931973] ***
*** starting iteration: 2; err: [Inf, 1.360200003126036, 0.3967962098931973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.360200003126036, 0.3967962098931973, 0.3094792045993624] ***
*** starting iteration: 3; err: [Inf, 1.360200003126036, 0.3967962098931973, 0.3094792045993624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.360200003126036, 0.3967962098931973, 0.3094792045993624, 0.27594975572384206] ***
*** starting iteration: 4; err: [Inf, 1.360200003126036, 0.3967962098931973, 0.3094792045993624, 0.27594975572384206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.360200003126036, 0.3967962098931973, 0.3094792045993624, 0.27594975572384206, 0.2613389493746471] ***
*** starting iteration: 5; err: [Inf, 1.360200003126036, 0.3967962098931973, 0.3094792045993624, 0.27594975572384206, 0.2613389493746471] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.360200003126036, 0.3967962098931973, 0.3094792045993624, 0.27594975572384206, 0.2613389493746471, 0.2493083130088427] ***
*** starting iteration: 6; err: [Inf, 1.360200003126036, 0.3967962098931973, 0.3094792045993624, 0.27594975572384206, 0.2613389493746471, 0.2493083130088427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.360200003126036, 0.3967962098931973, 0.3094792045993624, 0.27594975572384206, 0.2613389493746471, 0.2493083130088427, 0.23502113167800412] ***
*** starting iteration: 7; err: [Inf, 1.360200003126036, 0.3967962098931973, 0.3094792045993624, 0.27594975572384206, 0.2613389493746471, 0.2493083130088427, 0.23502113167800412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.360200003126036, 0.3967962098931973, 0.3094792045993624, 0.27594975572384206, 0.2613389493746471, 0.2493083130088427, 0.23502113167800412, 0.2314865155722244] ***
*** starting iteration: 8; err: [Inf, 1.360200003126036, 0.3967962098931973, 0.3094792045993624, 0.27594975572384206, 0.2613389493746471, 0.2493083130088427, 0.23502113167800412, 0.2314865155722244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.360200003126036, 0.3967962098931973, 0.3094792045993624, 0.27594975572384206, 0.2613389493746471, 0.2493083130088427, 0.23502113167800412, 0.2314865155722244, 0.2314865155722244] ***
*** finished computation of 7 references, err: [Inf, 1.360200003126036, 0.3967962098931973, 0.3094792045993624, 0.27594975572384206, 0.2613389493746471, 0.2493083130088427, 0.23502113167800412, 0.2314865155722244, 0.2314865155722244] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 7, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 6, 13]]
** centroid: 4, normalized-entropy: 0.8997437586982626, [(2, 6), (3, 13)]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4841000061499409] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4841000061499409, 0.26782205790812363] ***
*** starting iteration: 2; err: [Inf, 0.4841000061499409, 0.26782205790812363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4841000061499409, 0.26782205790812363, 0.24878425143141886] ***
*** starting iteration: 3; err: [Inf, 0.4841000061499409, 0.26782205790812363, 0.24878425143141886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4841000061499409, 0.26782205790812363, 0.24878425143141886, 0.2450189169125351] ***
*** starting iteration: 4; err: [Inf, 0.4841000061499409, 0.26782205790812363, 0.24878425143141886, 0.2450189169125351] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4841000061499409, 0.26782205790812363, 0.24878425143141886, 0.2450189169125351, 0.24351136005584234] ***
*** starting iteration: 5; err: [Inf, 0.4841000061499409, 0.26782205790812363, 0.24878425143141886, 0.2450189169125351, 0.24351136005584234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4841000061499409, 0.26782205790812363, 0.24878425143141886, 0.2450189169125351, 0.24351136005584234, 0.24197785663296176] ***
*** starting iteration: 6; err: [Inf, 0.4841000061499409, 0.26782205790812363, 0.24878425143141886, 0.2450189169125351, 0.24351136005584234, 0.24197785663296176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4841000061499409, 0.26782205790812363, 0.24878425143141886, 0.2450189169125351, 0.24351136005584234, 0.24197785663296176, 0.2410114726398755] ***
*** finished computation of 7 references, err: [Inf, 0.4841000061499409, 0.26782205790812363, 0.24878425143141886, 0.2450189169125351, 0.24351136005584234, 0.24197785663296176, 0.2410114726398755] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5075183237433141] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5075183237433141, 0.3233100173273163] ***
*** starting iteration: 2; err: [Inf, 0.5075183237433141, 0.3233100173273163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5075183237433141, 0.3233100173273163, 0.317866037738099] ***
*** starting iteration: 3; err: [Inf, 0.5075183237433141, 0.3233100173273163, 0.317866037738099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5075183237433141, 0.3233100173273163, 0.317866037738099, 0.3160066751815499] ***
*** finished computation of 7 references, err: [Inf, 0.5075183237433141, 0.3233100173273163, 0.317866037738099, 0.3160066751815499] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [9, 1, 0]]
** centroid: 4, normalized-entropy: 0.46899559358928133, [(1, 9), (2, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4099233507808016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4099233507808016, 0.29290293501846354] ***
*** starting iteration: 2; err: [Inf, 0.4099233507808016, 0.29290293501846354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4099233507808016, 0.29290293501846354, 0.2851987370528642] ***
*** starting iteration: 3; err: [Inf, 0.4099233507808016, 0.29290293501846354, 0.2851987370528642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4099233507808016, 0.29290293501846354, 0.2851987370528642, 0.283390870907296] ***
*** finished computation of 7 references, err: [Inf, 0.4099233507808016, 0.29290293501846354, 0.2851987370528642, 0.283390870907296] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 23]]
** centroid: 2, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36977291984833627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36977291984833627, 0.19010386022463183] ***
*** starting iteration: 2; err: [Inf, 0.36977291984833627, 0.19010386022463183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36977291984833627, 0.19010386022463183, 0.17783606055662987] ***
*** starting iteration: 3; err: [Inf, 0.36977291984833627, 0.19010386022463183, 0.17783606055662987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36977291984833627, 0.19010386022463183, 0.17783606055662987, 0.1770555357874433] ***
*** finished computation of 7 references, err: [Inf, 0.36977291984833627, 0.19010386022463183, 0.17783606055662987, 0.1770555357874433] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 12]]
** centroid: 2, normalized-entropy: 0.998845535995202, [(2, 13), (3, 12)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.3016805311470596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3016805311470596, 0.4187533327102265] ***
*** starting iteration: 2; err: [Inf, 1.3016805311470596, 0.4187533327102265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3016805311470596, 0.4187533327102265, 0.40368201786576235] ***
*** starting iteration: 3; err: [Inf, 1.3016805311470596, 0.4187533327102265, 0.40368201786576235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3016805311470596, 0.4187533327102265, 0.40368201786576235, 0.39673630313980834] ***
*** finished computation of 3 references, err: [Inf, 1.3016805311470596, 0.4187533327102265, 0.40368201786576235, 0.39673630313980834] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 27, 2]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 6, 29]]
** centroid: 3, normalized-entropy: 0.6609623351442084, [(2, 6), (3, 29)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0787805913284996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0787805913284996, 0.4145128898602897] ***
*** starting iteration: 2; err: [Inf, 1.0787805913284996, 0.4145128898602897] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0787805913284996, 0.4145128898602897, 0.3581725613240972] ***
*** starting iteration: 3; err: [Inf, 1.0787805913284996, 0.4145128898602897, 0.3581725613240972] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0787805913284996, 0.4145128898602897, 0.3581725613240972, 0.34581784642165986] ***
*** finished computation of 3 references, err: [Inf, 1.0787805913284996, 0.4145128898602897, 0.3581725613240972, 0.34581784642165986] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 21]]
** centroid: 1, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 3, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.5568722878206] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5568722878206, 0.7610348544882625] ***
*** starting iteration: 2; err: [Inf, 2.5568722878206, 0.7610348544882625] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5568722878206, 0.7610348544882625, 0.4031532785830656] ***
*** starting iteration: 3; err: [Inf, 2.5568722878206, 0.7610348544882625, 0.4031532785830656] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5568722878206, 0.7610348544882625, 0.4031532785830656, 0.3853094763637155] ***
*** finished computation of 3 references, err: [Inf, 2.5568722878206, 0.7610348544882625, 0.4031532785830656, 0.3853094763637155] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 9]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 29]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5607852681425463] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5607852681425463, 0.40579534989601185] ***
*** starting iteration: 2; err: [Inf, 0.5607852681425463, 0.40579534989601185] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5607852681425463, 0.40579534989601185, 0.3920662510857237] ***
*** starting iteration: 3; err: [Inf, 0.5607852681425463, 0.40579534989601185, 0.3920662510857237] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5607852681425463, 0.40579534989601185, 0.3920662510857237, 0.38723456628222425] ***
*** finished computation of 3 references, err: [Inf, 0.5607852681425463, 0.40579534989601185, 0.3920662510857237, 0.38723456628222425] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 5]]
** centroid: 1, normalized-entropy: 0.6024308020404452, [(2, 29), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 26]]
** centroid: 2, normalized-entropy: 0.5665095065529052, [(2, 4), (3, 26)]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.0605858939213544] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.0605858939213544, 0.6738471594810599] ***
*** starting iteration: 2; err: [Inf, 3.0605858939213544, 0.6738471594810599] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.0605858939213544, 0.6738471594810599, 0.34369510601801523] ***
*** starting iteration: 3; err: [Inf, 3.0605858939213544, 0.6738471594810599, 0.34369510601801523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.0605858939213544, 0.6738471594810599, 0.34369510601801523, 0.33514571805710147] ***
*** finished computation of 3 references, err: [Inf, 3.0605858939213544, 0.6738471594810599, 0.34369510601801523, 0.33514571805710147] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 23]]
** centroid: 1, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6305419842917077] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6305419842917077, 0.3958258543521562] ***
*** starting iteration: 2; err: [Inf, 0.6305419842917077, 0.3958258543521562] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6305419842917077, 0.3958258543521562, 0.39219314415054535] ***
*** starting iteration: 3; err: [Inf, 0.6305419842917077, 0.3958258543521562, 0.39219314415054535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6305419842917077, 0.3958258543521562, 0.39219314415054535, 0.38580002166482474] ***
*** finished computation of 3 references, err: [Inf, 0.6305419842917077, 0.3958258543521562, 0.39219314415054535, 0.38580002166482474] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 26, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 37]]
** centroid: 3, normalized-entropy: 0.5830194167347007, [(2, 6), (3, 37)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5879000033617737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5879000033617737, 0.3007004977306175] ***
*** starting iteration: 2; err: [Inf, 0.5879000033617737, 0.3007004977306175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5879000033617737, 0.3007004977306175, 0.2963979586657921] ***
*** starting iteration: 3; err: [Inf, 0.5879000033617737, 0.3007004977306175, 0.2963979586657921] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5879000033617737, 0.3007004977306175, 0.2963979586657921, 0.2955268942509071] ***
*** finished computation of 7 references, err: [Inf, 0.5879000033617737, 0.3007004977306175, 0.2963979586657921, 0.2955268942509071] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 14]]
** centroid: 1, normalized-entropy: 0.9833761901392238, [(2, 19), (3, 14)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.729899997319435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.729899997319435, 0.3779926279050319] ***
*** starting iteration: 2; err: [Inf, 0.729899997319435, 0.3779926279050319] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.729899997319435, 0.3779926279050319, 0.34784686586479796] ***
*** starting iteration: 3; err: [Inf, 0.729899997319435, 0.3779926279050319, 0.34784686586479796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.729899997319435, 0.3779926279050319, 0.34784686586479796, 0.3338843331074423] ***
*** starting iteration: 4; err: [Inf, 0.729899997319435, 0.3779926279050319, 0.34784686586479796, 0.3338843331074423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.729899997319435, 0.3779926279050319, 0.34784686586479796, 0.3338843331074423, 0.323796067997132] ***
*** starting iteration: 5; err: [Inf, 0.729899997319435, 0.3779926279050319, 0.34784686586479796, 0.3338843331074423, 0.323796067997132] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.729899997319435, 0.3779926279050319, 0.34784686586479796, 0.3338843331074423, 0.323796067997132, 0.3136481124850688] ***
*** starting iteration: 6; err: [Inf, 0.729899997319435, 0.3779926279050319, 0.34784686586479796, 0.3338843331074423, 0.323796067997132, 0.3136481124850688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.729899997319435, 0.3779926279050319, 0.34784686586479796, 0.3338843331074423, 0.323796067997132, 0.3136481124850688, 0.30092411792761214] ***
*** starting iteration: 7; err: [Inf, 0.729899997319435, 0.3779926279050319, 0.34784686586479796, 0.3338843331074423, 0.323796067997132, 0.3136481124850688, 0.30092411792761214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.729899997319435, 0.3779926279050319, 0.34784686586479796, 0.3338843331074423, 0.323796067997132, 0.3136481124850688, 0.30092411792761214, 0.296308891015849] ***
*** starting iteration: 8; err: [Inf, 0.729899997319435, 0.3779926279050319, 0.34784686586479796, 0.3338843331074423, 0.323796067997132, 0.3136481124850688, 0.30092411792761214, 0.296308891015849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.729899997319435, 0.3779926279050319, 0.34784686586479796, 0.3338843331074423, 0.323796067997132, 0.3136481124850688, 0.30092411792761214, 0.296308891015849, 0.2957736758466161] ***
*** finished computation of 7 references, err: [Inf, 0.729899997319435, 0.3779926279050319, 0.34784686586479796, 0.3338843331074423, 0.323796067997132, 0.3136481124850688, 0.30092411792761214, 0.296308891015849, 0.2957736758466161] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 1, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 11]]
** centroid: 2, normalized-entropy: 0.9575534837147484, [(2, 18), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7944999937026813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7944999937026813, 0.4056529730261037] ***
*** starting iteration: 2; err: [Inf, 0.7944999937026813, 0.4056529730261037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7944999937026813, 0.4056529730261037, 0.34732969030334615] ***
*** starting iteration: 3; err: [Inf, 0.7944999937026813, 0.4056529730261037, 0.34732969030334615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7944999937026813, 0.4056529730261037, 0.34732969030334615, 0.32831263085670487] ***
*** starting iteration: 4; err: [Inf, 0.7944999937026813, 0.4056529730261037, 0.34732969030334615, 0.32831263085670487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7944999937026813, 0.4056529730261037, 0.34732969030334615, 0.32831263085670487, 0.3218783271465757] ***
*** starting iteration: 5; err: [Inf, 0.7944999937026813, 0.4056529730261037, 0.34732969030334615, 0.32831263085670487, 0.3218783271465757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7944999937026813, 0.4056529730261037, 0.34732969030334615, 0.32831263085670487, 0.3218783271465757, 0.31798788591422067] ***
*** starting iteration: 6; err: [Inf, 0.7944999937026813, 0.4056529730261037, 0.34732969030334615, 0.32831263085670487, 0.3218783271465757, 0.31798788591422067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7944999937026813, 0.4056529730261037, 0.34732969030334615, 0.32831263085670487, 0.3218783271465757, 0.31798788591422067, 0.31798788591422067] ***
*** finished computation of 7 references, err: [Inf, 0.7944999937026813, 0.4056529730261037, 0.34732969030334615, 0.32831263085670487, 0.3218783271465757, 0.31798788591422067, 0.31798788591422067] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 26]]
** centroid: 1, normalized-entropy: 0.8779620013943914, [(2, 11), (3, 26)]
*** center 2: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.5052999918251226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5052999918251226, 0.6367841432485281] ***
*** finished computation of 7 references, err: [Inf, 1.5052999918251226, 0.6367841432485281] ***
*** center 1: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 19, 30]]
** centroid: 3, normalized-entropy: 0.9633355456726842, [(2, 19), (3, 30)]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3634000023736854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3634000023736854, 0.23722025253923504] ***
*** finished computation of 7 references, err: [Inf, 0.3634000023736854, 0.23722025253923504] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 4, 13]]
** centroid: 4, normalized-entropy: 0.787126586201269, [(2, 4), (3, 13)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5436000088772819] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5436000088772819, 0.3116369245618368] ***
*** finished computation of 7 references, err: [Inf, 0.5436000088772819, 0.3116369245618368] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 19]]
** centroid: 1, normalized-entropy: 0.9059282160429994, [(2, 9), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 4]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 12), (3, 4)]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.9270409793870653] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9270409793870653, 0.4362144008402419] ***
*** finished computation of 3 references, err: [Inf, 1.9270409793870653, 0.4362144008402419] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 30]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 12), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 3, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.91346495629852] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.91346495629852, 0.5723910683797486] ***
*** finished computation of 3 references, err: [Inf, 0.91346495629852, 0.5723910683797486] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [21, 2, 0]]
** centroid: 1, normalized-entropy: 0.42622865699814483, [(1, 21), (2, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 31]]
** centroid: 3, normalized-entropy: 0.9992954443621548, [(2, 33), (3, 31)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.455164228028266] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.455164228028266, 0.7237600144627213] ***
*** finished computation of 3 references, err: [Inf, 8.455164228028266, 0.7237600144627213] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [11, 1, 0]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(1, 11), (2, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 38]]
** centroid: 3, normalized-entropy: 0.992563136012236, [(2, 31), (3, 38)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.519662276915248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.519662276915248, 0.3479122491062114] ***
*** starting iteration: 2; err: [Inf, 0.519662276915248, 0.3479122491062114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.519662276915248, 0.3479122491062114, 0.3387348486127705] ***
*** starting iteration: 3; err: [Inf, 0.519662276915248, 0.3479122491062114, 0.3387348486127705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.519662276915248, 0.3479122491062114, 0.3387348486127705, 0.33141466805329517] ***
*** finished computation of 7 references, err: [Inf, 0.519662276915248, 0.3479122491062114, 0.3387348486127705, 0.33141466805329517] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 28]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 4), (3, 28)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 3]]
** centroid: 2, normalized-entropy: 0.44886448872302936, [(2, 29), (3, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37120209423243344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37120209423243344, 0.22568080628364684] ***
*** starting iteration: 2; err: [Inf, 0.37120209423243344, 0.22568080628364684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37120209423243344, 0.22568080628364684, 0.22009400043234983] ***
*** starting iteration: 3; err: [Inf, 0.37120209423243344, 0.22568080628364684, 0.22009400043234983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37120209423243344, 0.22568080628364684, 0.22009400043234983, 0.21841690478296352] ***
*** finished computation of 7 references, err: [Inf, 0.37120209423243344, 0.22568080628364684, 0.22009400043234983, 0.21841690478296352] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 20]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(2, 12), (3, 20)]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4629544837633206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4629544837633206, 0.3064208995079739] ***
*** starting iteration: 2; err: [Inf, 0.4629544837633206, 0.3064208995079739] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4629544837633206, 0.3064208995079739, 0.2636919421985141] ***
*** starting iteration: 3; err: [Inf, 0.4629544837633206, 0.3064208995079739, 0.2636919421985141] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4629544837633206, 0.3064208995079739, 0.2636919421985141, 0.2491138346083933] ***
*** finished computation of 7 references, err: [Inf, 0.4629544837633206, 0.3064208995079739, 0.2636919421985141, 0.2491138346083933] ***
*** center 1: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 6]]
** centroid: 2, normalized-entropy: 0.6609623351442084, [(2, 29), (3, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 24]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35920000299311655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35920000299311655, 0.2779763297873112] ***
*** starting iteration: 2; err: [Inf, 0.35920000299311655, 0.2779763297873112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35920000299311655, 0.2779763297873112, 0.2634099945733224] ***
*** starting iteration: 3; err: [Inf, 0.35920000299311655, 0.2779763297873112, 0.2634099945733224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35920000299311655, 0.2779763297873112, 0.2634099945733224, 0.2496494957647649] ***
*** finished computation of 7 references, err: [Inf, 0.35920000299311655, 0.2779763297873112, 0.2634099945733224, 0.2496494957647649] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 7]]
** centroid: 5, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 6, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6502000008640414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6502000008640414, 0.3994977949617456] ***
*** starting iteration: 2; err: [Inf, 0.6502000008640414, 0.3994977949617456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6502000008640414, 0.3994977949617456, 0.34883924137659333] ***
*** starting iteration: 3; err: [Inf, 0.6502000008640414, 0.3994977949617456, 0.34883924137659333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6502000008640414, 0.3994977949617456, 0.34883924137659333, 0.30310630622266976] ***
*** finished computation of 7 references, err: [Inf, 0.6502000008640414, 0.3994977949617456, 0.34883924137659333, 0.30310630622266976] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 5]]
** centroid: 1, normalized-entropy: 0.8960382325345574, [(2, 11), (3, 5)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5341000069223114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5341000069223114, 0.3227245300912014] ***
*** starting iteration: 2; err: [Inf, 0.5341000069223114, 0.3227245300912014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5341000069223114, 0.3227245300912014, 0.30347425140019163] ***
*** starting iteration: 3; err: [Inf, 0.5341000069223114, 0.3227245300912014, 0.30347425140019163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5341000069223114, 0.3227245300912014, 0.30347425140019163, 0.29493171526590034] ***
*** finished computation of 7 references, err: [Inf, 0.5341000069223114, 0.3227245300912014, 0.30347425140019163, 0.29493171526590034] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 21]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8562000057766853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8562000057766853, 0.345945784348501] ***
*** starting iteration: 2; err: [Inf, 0.8562000057766853, 0.345945784348501] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8562000057766853, 0.345945784348501, 0.24805345752833297] ***
*** starting iteration: 3; err: [Inf, 0.8562000057766853, 0.345945784348501, 0.24805345752833297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8562000057766853, 0.345945784348501, 0.24805345752833297, 0.24395659749657506] ***
*** starting iteration: 4; err: [Inf, 0.8562000057766853, 0.345945784348501, 0.24805345752833297, 0.24395659749657506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8562000057766853, 0.345945784348501, 0.24805345752833297, 0.24395659749657506, 0.24395659749657506] ***
*** finished computation of 7 references, err: [Inf, 0.8562000057766853, 0.345945784348501, 0.24805345752833297, 0.24395659749657506, 0.24395659749657506] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 15]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9375999990568196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9375999990568196, 0.47621051282757987] ***
*** starting iteration: 2; err: [Inf, 0.9375999990568196, 0.47621051282757987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9375999990568196, 0.47621051282757987, 0.42951618803900726] ***
*** starting iteration: 3; err: [Inf, 0.9375999990568196, 0.47621051282757987, 0.42951618803900726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9375999990568196, 0.47621051282757987, 0.42951618803900726, 0.4219130078060583] ***
*** starting iteration: 4; err: [Inf, 0.9375999990568196, 0.47621051282757987, 0.42951618803900726, 0.4219130078060583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9375999990568196, 0.47621051282757987, 0.42951618803900726, 0.4219130078060583, 0.41950229347995005] ***
*** starting iteration: 5; err: [Inf, 0.9375999990568196, 0.47621051282757987, 0.42951618803900726, 0.4219130078060583, 0.41950229347995005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9375999990568196, 0.47621051282757987, 0.42951618803900726, 0.4219130078060583, 0.41950229347995005, 0.41858534751774984] ***
*** finished computation of 7 references, err: [Inf, 0.9375999990568196, 0.47621051282757987, 0.42951618803900726, 0.4219130078060583, 0.41950229347995005, 0.41858534751774984] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 9]]
** centroid: 3, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 22]]
** centroid: 6, normalized-entropy: 0.5293608652873645, [(2, 3), (3, 22)]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4628000017389913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4628000017389913, 0.2788171383694995] ***
*** starting iteration: 2; err: [Inf, 0.4628000017389913, 0.2788171383694995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4628000017389913, 0.2788171383694995, 0.263126404923317] ***
*** starting iteration: 3; err: [Inf, 0.4628000017389913, 0.2788171383694995, 0.263126404923317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4628000017389913, 0.2788171383694995, 0.263126404923317, 0.25650765161249306] ***
*** starting iteration: 4; err: [Inf, 0.4628000017389913, 0.2788171383694995, 0.263126404923317, 0.25650765161249306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4628000017389913, 0.2788171383694995, 0.263126404923317, 0.25650765161249306, 0.2535711960626724] ***
*** starting iteration: 5; err: [Inf, 0.4628000017389913, 0.2788171383694995, 0.263126404923317, 0.25650765161249306, 0.2535711960626724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4628000017389913, 0.2788171383694995, 0.263126404923317, 0.25650765161249306, 0.2535711960626724, 0.25087095563449835] ***
*** starting iteration: 6; err: [Inf, 0.4628000017389913, 0.2788171383694995, 0.263126404923317, 0.25650765161249306, 0.2535711960626724, 0.25087095563449835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4628000017389913, 0.2788171383694995, 0.263126404923317, 0.25650765161249306, 0.2535711960626724, 0.25087095563449835, 0.25053611552920796] ***
*** finished computation of 7 references, err: [Inf, 0.4628000017389913, 0.2788171383694995, 0.263126404923317, 0.25650765161249306, 0.2535711960626724, 0.25087095563449835, 0.25053611552920796] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 10]]
** centroid: 4, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.220299991128619] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.220299991128619, 0.6381372184525312] ***
*** starting iteration: 2; err: [Inf, 1.220299991128619, 0.6381372184525312] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718] ***
*** starting iteration: 3; err: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037] ***
*** starting iteration: 4; err: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037, 0.583829682423515] ***
*** starting iteration: 5; err: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037, 0.583829682423515] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037, 0.583829682423515, 0.571735612445418] ***
*** starting iteration: 6; err: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037, 0.583829682423515, 0.571735612445418] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037, 0.583829682423515, 0.571735612445418, 0.5654399096383831] ***
*** starting iteration: 7; err: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037, 0.583829682423515, 0.571735612445418, 0.5654399096383831] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037, 0.583829682423515, 0.571735612445418, 0.5654399096383831, 0.553018498191089] ***
*** starting iteration: 8; err: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037, 0.583829682423515, 0.571735612445418, 0.5654399096383831, 0.553018498191089] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037, 0.583829682423515, 0.571735612445418, 0.5654399096383831, 0.553018498191089, 0.5427175114920532] ***
*** starting iteration: 9; err: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037, 0.583829682423515, 0.571735612445418, 0.5654399096383831, 0.553018498191089, 0.5427175114920532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037, 0.583829682423515, 0.571735612445418, 0.5654399096383831, 0.553018498191089, 0.5427175114920532, 0.5332527000998811] ***
*** starting iteration: 10; err: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037, 0.583829682423515, 0.571735612445418, 0.5654399096383831, 0.553018498191089, 0.5427175114920532, 0.5332527000998811] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037, 0.583829682423515, 0.571735612445418, 0.5654399096383831, 0.553018498191089, 0.5427175114920532, 0.5332527000998811, 0.5323107137045338] ***
*** finished computation of 3 references, err: [Inf, 1.220299991128619, 0.6381372184525312, 0.6086996447799718, 0.5932254774353037, 0.583829682423515, 0.571735612445418, 0.5654399096383831, 0.553018498191089, 0.5427175114920532, 0.5332527000998811, 0.5323107137045338] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0968999967124449] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0968999967124449, 0.5735909228877776] ***
*** starting iteration: 2; err: [Inf, 1.0968999967124449, 0.5735909228877776] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0968999967124449, 0.5735909228877776, 0.4994793370703101] ***
*** starting iteration: 3; err: [Inf, 1.0968999967124449, 0.5735909228877776, 0.4994793370703101] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0968999967124449, 0.5735909228877776, 0.4994793370703101, 0.491205653192234] ***
*** starting iteration: 4; err: [Inf, 1.0968999967124449, 0.5735909228877776, 0.4994793370703101, 0.491205653192234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0968999967124449, 0.5735909228877776, 0.4994793370703101, 0.491205653192234, 0.4876589753938788] ***
*** starting iteration: 5; err: [Inf, 1.0968999967124449, 0.5735909228877776, 0.4994793370703101, 0.491205653192234, 0.4876589753938788] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0968999967124449, 0.5735909228877776, 0.4994793370703101, 0.491205653192234, 0.4876589753938788, 0.4857869145597776] ***
*** starting iteration: 6; err: [Inf, 1.0968999967124449, 0.5735909228877776, 0.4994793370703101, 0.491205653192234, 0.4876589753938788, 0.4857869145597776] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0968999967124449, 0.5735909228877776, 0.4994793370703101, 0.491205653192234, 0.4876589753938788, 0.4857869145597776, 0.4857869145597776] ***
*** finished computation of 3 references, err: [Inf, 1.0968999967124449, 0.5735909228877776, 0.4994793370703101, 0.491205653192234, 0.4876589753938788, 0.4857869145597776, 0.4857869145597776] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 9]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 22]]
** centroid: 3, normalized-entropy: 0.5293608652873645, [(2, 3), (3, 22)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.391599996468558] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.391599996468558, 0.5647902604964357] ***
*** starting iteration: 2; err: [Inf, 1.391599996468558, 0.5647902604964357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.391599996468558, 0.5647902604964357, 0.543469829583045] ***
*** starting iteration: 3; err: [Inf, 1.391599996468558, 0.5647902604964357, 0.543469829583045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.391599996468558, 0.5647902604964357, 0.543469829583045, 0.5391092355626357] ***
*** starting iteration: 4; err: [Inf, 1.391599996468558, 0.5647902604964357, 0.543469829583045, 0.5391092355626357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.391599996468558, 0.5647902604964357, 0.543469829583045, 0.5391092355626357, 0.5382409590874427] ***
*** finished computation of 3 references, err: [Inf, 1.391599996468558, 0.5647902604964357, 0.543469829583045, 0.5391092355626357, 0.5382409590874427] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 30]]
*** center 3: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2053000028364382] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2053000028364382, 0.5752635174244128] ***
*** finished computation of 3 references, err: [Inf, 1.2053000028364382, 0.5752635174244128] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 13]]
** centroid: 1, normalized-entropy: 0.8589810370425965, [(2, 33), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6090999965390085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6090999965390085, 0.5055231865084528] ***
*** finished computation of 3 references, err: [Inf, 1.6090999965390085, 0.5055231865084528] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 20]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 11]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2683000010682286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2683000010682286, 0.5872405696049273] ***
*** finished computation of 3 references, err: [Inf, 1.2683000010682286, 0.5872405696049273] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 12]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 32), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1340999981601045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1340999981601045, 0.5323107137045338] ***
*** finished computation of 3 references, err: [Inf, 1.1340999981601045, 0.5323107137045338] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2996000005716213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2996000005716213, 0.5065378722330387] ***
*** finished computation of 3 references, err: [Inf, 1.2996000005716213, 0.5065378722330387] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 30]]
** centroid: 1, normalized-entropy: 0.8390040613676978, [(2, 11), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 24, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1962999923953532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1962999923953532, 0.5947204972594209] ***
*** finished computation of 3 references, err: [Inf, 1.1962999923953532, 0.5947204972594209] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 38]]
** centroid: 1, normalized-entropy: 0.7682814090975241, [(2, 11), (3, 38)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3751406952316954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3751406952316954, 0.18648031870749626] ***
*** starting iteration: 2; err: [Inf, 0.3751406952316954, 0.18648031870749626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3751406952316954, 0.18648031870749626, 0.176322433655013] ***
*** starting iteration: 3; err: [Inf, 0.3751406952316954, 0.18648031870749626, 0.176322433655013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3751406952316954, 0.18648031870749626, 0.176322433655013, 0.17040714866686038] ***
*** finished computation of 7 references, err: [Inf, 0.3751406952316954, 0.18648031870749626, 0.176322433655013, 0.17040714866686038] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 7]]
** centroid: 1, normalized-entropy: 0.8554508105601307, [(2, 18), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 14]]
** centroid: 5, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4906478563202235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4906478563202235, 0.17201083298339565] ***
*** starting iteration: 2; err: [Inf, 0.4906478563202235, 0.17201083298339565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4906478563202235, 0.17201083298339565, 0.16338078635117217] ***
*** starting iteration: 3; err: [Inf, 0.4906478563202235, 0.17201083298339565, 0.16338078635117217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4906478563202235, 0.17201083298339565, 0.16338078635117217, 0.16086422146628915] ***
*** finished computation of 7 references, err: [Inf, 0.4906478563202235, 0.17201083298339565, 0.16338078635117217, 0.16086422146628915] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3947591944790325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3947591944790325, 0.1994923488161982] ***
*** starting iteration: 2; err: [Inf, 0.3947591944790325, 0.1994923488161982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3947591944790325, 0.1994923488161982, 0.18465513395607538] ***
*** starting iteration: 3; err: [Inf, 0.3947591944790325, 0.1994923488161982, 0.18465513395607538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3947591944790325, 0.1994923488161982, 0.18465513395607538, 0.17529852547260705] ***
*** finished computation of 7 references, err: [Inf, 0.3947591944790325, 0.1994923488161982, 0.18465513395607538, 0.17529852547260705] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 7]]
** centroid: 1, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 4, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7265999983080235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7265999983080235, 0.22505527616406668] ***
*** starting iteration: 2; err: [Inf, 0.7265999983080235, 0.22505527616406668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7265999983080235, 0.22505527616406668, 0.21658882104248328] ***
*** starting iteration: 3; err: [Inf, 0.7265999983080235, 0.22505527616406668, 0.21658882104248328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7265999983080235, 0.22505527616406668, 0.21658882104248328, 0.21437038355657687] ***
*** starting iteration: 4; err: [Inf, 0.7265999983080235, 0.22505527616406668, 0.21658882104248328, 0.21437038355657687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7265999983080235, 0.22505527616406668, 0.21658882104248328, 0.21437038355657687, 0.21437038355657687] ***
*** finished computation of 7 references, err: [Inf, 0.7265999983080235, 0.22505527616406668, 0.21658882104248328, 0.21437038355657687, 0.21437038355657687] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 15, 9]]
** centroid: 5, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5409999997681284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5409999997681284, 0.26631407946342456] ***
*** starting iteration: 2; err: [Inf, 0.5409999997681284, 0.26631407946342456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5409999997681284, 0.26631407946342456, 0.2557351278014633] ***
*** starting iteration: 3; err: [Inf, 0.5409999997681284, 0.26631407946342456, 0.2557351278014633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5409999997681284, 0.26631407946342456, 0.2557351278014633, 0.2516266068463818] ***
*** starting iteration: 4; err: [Inf, 0.5409999997681284, 0.26631407946342456, 0.2557351278014633, 0.2516266068463818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5409999997681284, 0.26631407946342456, 0.2557351278014633, 0.2516266068463818, 0.2513905611156665] ***
*** finished computation of 7 references, err: [Inf, 0.5409999997681284, 0.26631407946342456, 0.2557351278014633, 0.2516266068463818, 0.2513905611156665] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 17, 4]]
** centroid: 5, normalized-entropy: 0.7024665512903904, [(2, 17), (3, 4)]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5080000035378821] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5080000035378821, 0.26437406378498723] ***
*** starting iteration: 2; err: [Inf, 0.5080000035378821, 0.26437406378498723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5080000035378821, 0.26437406378498723, 0.2503852312007549] ***
*** starting iteration: 3; err: [Inf, 0.5080000035378821, 0.26437406378498723, 0.2503852312007549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5080000035378821, 0.26437406378498723, 0.2503852312007549, 0.24458153968739688] ***
*** starting iteration: 4; err: [Inf, 0.5080000035378821, 0.26437406378498723, 0.2503852312007549, 0.24458153968739688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5080000035378821, 0.26437406378498723, 0.2503852312007549, 0.24458153968739688, 0.24423397439482789] ***
*** finished computation of 7 references, err: [Inf, 0.5080000035378821, 0.26437406378498723, 0.2503852312007549, 0.24458153968739688, 0.24423397439482789] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 10]]
** centroid: 7, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9666666666666667
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.5906000007046588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5906000007046588, 0.2270438075126226] ***
*** starting iteration: 2; err: [Inf, 0.5906000007046588, 0.2270438075126226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5906000007046588, 0.2270438075126226, 0.21828834612305825] ***
*** starting iteration: 3; err: [Inf, 0.5906000007046588, 0.2270438075126226, 0.21828834612305825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5906000007046588, 0.2270438075126226, 0.21828834612305825, 0.21590372180246786] ***
*** finished computation of 7 references, err: [Inf, 0.5906000007046588, 0.2270438075126226, 0.21828834612305825, 0.21590372180246786] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 10]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 5), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6533000032577957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6533000032577957, 0.2692559169949509] ***
*** starting iteration: 2; err: [Inf, 0.6533000032577957, 0.2692559169949509] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6533000032577957, 0.2692559169949509, 0.26096063620196214] ***
*** starting iteration: 3; err: [Inf, 0.6533000032577957, 0.2692559169949509, 0.26096063620196214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6533000032577957, 0.2692559169949509, 0.26096063620196214, 0.25768208190757164] ***
*** finished computation of 7 references, err: [Inf, 0.6533000032577957, 0.2692559169949509, 0.26096063620196214, 0.25768208190757164] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 9]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5141000017123746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5141000017123746, 0.26588218875550834] ***
*** starting iteration: 2; err: [Inf, 0.5141000017123746, 0.26588218875550834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5141000017123746, 0.26588218875550834, 0.25609693384171] ***
*** starting iteration: 3; err: [Inf, 0.5141000017123746, 0.26588218875550834, 0.25609693384171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5141000017123746, 0.26588218875550834, 0.25609693384171, 0.250659067972057] ***
*** finished computation of 7 references, err: [Inf, 0.5141000017123746, 0.26588218875550834, 0.25609693384171, 0.250659067972057] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 2]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 14), (3, 2)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 11, 5]]
** centroid: 6, normalized-entropy: 0.8960382325345574, [(2, 11), (3, 5)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9666666666666667
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 8.153149065814222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.153149065814222, 0.8296486839782642] ***
*** starting iteration: 2; err: [Inf, 8.153149065814222, 0.8296486839782642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105] ***
*** starting iteration: 3; err: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558] ***
*** starting iteration: 4; err: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558, 0.4813859149177911] ***
*** starting iteration: 5; err: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558, 0.4813859149177911] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558, 0.4813859149177911, 0.39332988624433207] ***
*** starting iteration: 6; err: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558, 0.4813859149177911, 0.39332988624433207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558, 0.4813859149177911, 0.39332988624433207, 0.3625441036788149] ***
*** starting iteration: 7; err: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558, 0.4813859149177911, 0.39332988624433207, 0.3625441036788149] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558, 0.4813859149177911, 0.39332988624433207, 0.3625441036788149, 0.3476433062658015] ***
*** starting iteration: 8; err: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558, 0.4813859149177911, 0.39332988624433207, 0.3625441036788149, 0.3476433062658015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558, 0.4813859149177911, 0.39332988624433207, 0.3625441036788149, 0.3476433062658015, 0.33913901103683686] ***
*** starting iteration: 9; err: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558, 0.4813859149177911, 0.39332988624433207, 0.3625441036788149, 0.3476433062658015, 0.33913901103683686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558, 0.4813859149177911, 0.39332988624433207, 0.3625441036788149, 0.3476433062658015, 0.33913901103683686, 0.33204140634923607] ***
*** starting iteration: 10; err: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558, 0.4813859149177911, 0.39332988624433207, 0.3625441036788149, 0.3476433062658015, 0.33913901103683686, 0.33204140634923607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558, 0.4813859149177911, 0.39332988624433207, 0.3625441036788149, 0.3476433062658015, 0.33913901103683686, 0.33204140634923607, 0.3270261384822466] ***
*** finished computation of 7 references, err: [Inf, 8.153149065814222, 0.8296486839782642, 0.6582840959707105, 0.6121381496167558, 0.4813859149177911, 0.39332988624433207, 0.3625441036788149, 0.3476433062658015, 0.33913901103683686, 0.33204140634923607, 0.3270261384822466] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 6]]
** centroid: 3, normalized-entropy: 0.6609623351442084, [(2, 29), (3, 6)]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 25]]
** centroid: 5, normalized-entropy: 0.5787946246321198, [(2, 4), (3, 25)]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41062230347688045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41062230347688045, 0.3026923848087691] ***
*** starting iteration: 2; err: [Inf, 0.41062230347688045, 0.3026923848087691] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41062230347688045, 0.3026923848087691, 0.2874302643368576] ***
*** starting iteration: 3; err: [Inf, 0.41062230347688045, 0.3026923848087691, 0.2874302643368576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41062230347688045, 0.3026923848087691, 0.2874302643368576, 0.28195011440412693] ***
*** starting iteration: 4; err: [Inf, 0.41062230347688045, 0.3026923848087691, 0.2874302643368576, 0.28195011440412693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41062230347688045, 0.3026923848087691, 0.2874302643368576, 0.28195011440412693, 0.28195011440412693] ***
*** finished computation of 7 references, err: [Inf, 0.41062230347688045, 0.3026923848087691, 0.2874302643368576, 0.28195011440412693, 0.28195011440412693] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 23]]
** centroid: 4, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5394177222649736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5394177222649736, 0.40730605412947524] ***
*** starting iteration: 2; err: [Inf, 0.5394177222649736, 0.40730605412947524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5394177222649736, 0.40730605412947524, 0.3718529064281406] ***
*** starting iteration: 3; err: [Inf, 0.5394177222649736, 0.40730605412947524, 0.3718529064281406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5394177222649736, 0.40730605412947524, 0.3718529064281406, 0.34045333491177393] ***
*** starting iteration: 4; err: [Inf, 0.5394177222649736, 0.40730605412947524, 0.3718529064281406, 0.34045333491177393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5394177222649736, 0.40730605412947524, 0.3718529064281406, 0.34045333491177393, 0.3289543229974167] ***
*** starting iteration: 5; err: [Inf, 0.5394177222649736, 0.40730605412947524, 0.3718529064281406, 0.34045333491177393, 0.3289543229974167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5394177222649736, 0.40730605412947524, 0.3718529064281406, 0.34045333491177393, 0.3289543229974167, 0.32507366771722374] ***
*** starting iteration: 6; err: [Inf, 0.5394177222649736, 0.40730605412947524, 0.3718529064281406, 0.34045333491177393, 0.3289543229974167, 0.32507366771722374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5394177222649736, 0.40730605412947524, 0.3718529064281406, 0.34045333491177393, 0.3289543229974167, 0.32507366771722374, 0.3247143343611025] ***
*** finished computation of 7 references, err: [Inf, 0.5394177222649736, 0.40730605412947524, 0.3718529064281406, 0.34045333491177393, 0.3289543229974167, 0.32507366771722374, 0.3247143343611025] ***
*** center 1: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 8]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 30]]
** centroid: 3, normalized-entropy: 0.2055925081850832, [(2, 1), (3, 30)]
*** center 4: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [9, 1, 0]]
** centroid: 5, normalized-entropy: 0.46899559358928133, [(1, 9), (2, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9666666666666667
finished with 20
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.7340000150213487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7340000150213487, 0.34074050223021524] ***
*** finished computation of 7 references, err: [Inf, 0.7340000150213487, 0.34074050223021524] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 10]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 3]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 2), (3, 3)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39880000741769195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39880000741769195, 0.27736713918173816] ***
*** finished computation of 7 references, err: [Inf, 0.39880000741769195, 0.27736713918173816] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 21, 4]]
** centroid: 1, normalized-entropy: 0.634309554640566, [(2, 21), (3, 4)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 13]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4821000032416549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4821000032416549, 0.3024167436219461] ***
*** finished computation of 7 references, err: [Inf, 0.4821000032416549, 0.3024167436219461] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9856829761064253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9856829761064253, 0.35599706127483954] ***
*** finished computation of 7 references, err: [Inf, 0.9856829761064253, 0.35599706127483954] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 4]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 4)]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 7, 27]]
** centroid: 6, normalized-entropy: 0.7335379291086666, [(2, 7), (3, 27)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2984343866738694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2984343866738694, 0.18311535084539896] ***
*** finished computation of 7 references, err: [Inf, 0.2984343866738694, 0.18311535084539896] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 4: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 8, 8]]
** centroid: 6, normalized-entropy: 1.0, [(2, 8), (3, 8)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5229270632449853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5229270632449853, 0.296222744357366] ***
*** finished computation of 7 references, err: [Inf, 0.5229270632449853, 0.296222744357366] ***
*** center 1: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 3: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 11]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 1]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 6 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 2) => 0.9733333333333333
finished with 21
iteration 5 finished
*** starting iteration: 1; err: [Inf, 1.5749999991292651] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5749999991292651, 0.9972528418721209] ***
*** finished computation of 3 references, err: [Inf, 1.5749999991292651, 0.9972528418721209] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 31]]
** centroid: 1, normalized-entropy: 0.99919835426364, [(2, 29), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [14, 4, 0]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(1, 14), (2, 4)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2246999913729482] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2246999913729482, 0.859250287514459] ***
*** finished computation of 3 references, err: [Inf, 1.2246999913729482, 0.859250287514459] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 31]]
** centroid: 1, normalized-entropy: 0.9973487979180449, [(2, 35), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5806999844916754] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5806999844916754, 0.5710860436091942] ***
*** finished computation of 3 references, err: [Inf, 1.5806999844916754, 0.5710860436091942] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 37]]
** centroid: 1, normalized-entropy: 0.5830194167347007, [(2, 6), (3, 37)]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 1]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(2, 26), (3, 1)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 2) => 0.9733333333333333
finished with 21
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 2) => 0.9733333333333333
finished with 21
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 2) => 0.9733333333333333
finished with 22
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.5077921173704574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5077921173704574, 0.37355804795689423] ***
*** starting iteration: 2; err: [Inf, 0.5077921173704574, 0.37355804795689423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294] ***
*** starting iteration: 3; err: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731] ***
*** starting iteration: 4; err: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731, 0.33341966468600176] ***
*** starting iteration: 5; err: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731, 0.33341966468600176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731, 0.33341966468600176, 0.3284043968190123] ***
*** starting iteration: 6; err: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731, 0.33341966468600176, 0.3284043968190123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731, 0.33341966468600176, 0.3284043968190123, 0.3223097919614794] ***
*** starting iteration: 7; err: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731, 0.33341966468600176, 0.3284043968190123, 0.3223097919614794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731, 0.33341966468600176, 0.3284043968190123, 0.3223097919614794, 0.3177554789461293] ***
*** starting iteration: 8; err: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731, 0.33341966468600176, 0.3284043968190123, 0.3223097919614794, 0.3177554789461293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731, 0.33341966468600176, 0.3284043968190123, 0.3223097919614794, 0.3177554789461293, 0.31591821968793427] ***
*** starting iteration: 9; err: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731, 0.33341966468600176, 0.3284043968190123, 0.3223097919614794, 0.3177554789461293, 0.31591821968793427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731, 0.33341966468600176, 0.3284043968190123, 0.3223097919614794, 0.3177554789461293, 0.31591821968793427, 0.3140786887091344] ***
*** starting iteration: 10; err: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731, 0.33341966468600176, 0.3284043968190123, 0.3223097919614794, 0.3177554789461293, 0.31591821968793427, 0.3140786887091344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731, 0.33341966468600176, 0.3284043968190123, 0.3223097919614794, 0.3177554789461293, 0.31591821968793427, 0.3140786887091344, 0.3140786887091344] ***
*** finished computation of 7 references, err: [Inf, 0.5077921173704574, 0.37355804795689423, 0.3543657199769294, 0.3435858188928731, 0.33341966468600176, 0.3284043968190123, 0.3223097919614794, 0.3177554789461293, 0.31591821968793427, 0.3140786887091344, 0.3140786887091344] ***
*** center 1: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 5, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6997827294418129] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6997827294418129, 0.24992538085974592] ***
*** starting iteration: 2; err: [Inf, 0.6997827294418129, 0.24992538085974592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6997827294418129, 0.24992538085974592, 0.22289107456109408] ***
*** starting iteration: 3; err: [Inf, 0.6997827294418129, 0.24992538085974592, 0.22289107456109408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6997827294418129, 0.24992538085974592, 0.22289107456109408, 0.2170512196384532] ***
*** starting iteration: 4; err: [Inf, 0.6997827294418129, 0.24992538085974592, 0.22289107456109408, 0.2170512196384532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6997827294418129, 0.24992538085974592, 0.22289107456109408, 0.2170512196384532, 0.21373235176745797] ***
*** starting iteration: 5; err: [Inf, 0.6997827294418129, 0.24992538085974592, 0.22289107456109408, 0.2170512196384532, 0.21373235176745797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6997827294418129, 0.24992538085974592, 0.22289107456109408, 0.2170512196384532, 0.21373235176745797, 0.20911176038897483] ***
*** starting iteration: 6; err: [Inf, 0.6997827294418129, 0.24992538085974592, 0.22289107456109408, 0.2170512196384532, 0.21373235176745797, 0.20911176038897483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6997827294418129, 0.24992538085974592, 0.22289107456109408, 0.2170512196384532, 0.21373235176745797, 0.20911176038897483, 0.2060704090804988] ***
*** starting iteration: 7; err: [Inf, 0.6997827294418129, 0.24992538085974592, 0.22289107456109408, 0.2170512196384532, 0.21373235176745797, 0.20911176038897483, 0.2060704090804988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6997827294418129, 0.24992538085974592, 0.22289107456109408, 0.2170512196384532, 0.21373235176745797, 0.20911176038897483, 0.2060704090804988, 0.20537533062451963] ***
*** finished computation of 7 references, err: [Inf, 0.6997827294418129, 0.24992538085974592, 0.22289107456109408, 0.2170512196384532, 0.21373235176745797, 0.20911176038897483, 0.2060704090804988, 0.20537533062451963] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 18, 10]]
** centroid: 7, normalized-entropy: 0.940285958670631, [(2, 18), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0402217458789629] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0402217458789629, 0.19151376471408646] ***
*** starting iteration: 2; err: [Inf, 1.0402217458789629, 0.19151376471408646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0402217458789629, 0.19151376471408646, 0.18514688403054946] ***
*** starting iteration: 3; err: [Inf, 1.0402217458789629, 0.19151376471408646, 0.18514688403054946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0402217458789629, 0.19151376471408646, 0.18514688403054946, 0.18208130042038448] ***
*** starting iteration: 4; err: [Inf, 1.0402217458789629, 0.19151376471408646, 0.18514688403054946, 0.18208130042038448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0402217458789629, 0.19151376471408646, 0.18514688403054946, 0.18208130042038448, 0.18127860693376646] ***
*** finished computation of 7 references, err: [Inf, 1.0402217458789629, 0.19151376471408646, 0.18514688403054946, 0.18208130042038448, 0.18127860693376646] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 9]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 7: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 2) => 0.9733333333333333
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.091666666666668, 2.6583333333333337, 4.916666666666666, 1.716666666666667], [6.15, 3.3499999999999996, 4.6, 1.6], [6.75, 2.9, 4.9, 1.5499999999999998], [6.433333333333334, 2.966666666666667, 5.433333333333333, 1.8666666666666665], [6.945, 3.05, 5.895, 2.1049999999999995], [4.84, 3.256, 1.5239999999999998, 0.30000000000000004], [5.283333333333333, 3.533333333333333, 1.5583333333333333, 0.24166666666666667], [5.738461538461538, 2.715384615384615, 4.119230769230769, 1.2807692307692307]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 2, 3, 3, 1, 1, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.142307692307692, 2.965384615384615, 4.5346153846153845, 1.4538461538461536], [6.833333333333334, 3.02, 5.593333333333333, 2.0466666666666673], [5.6000000000000005, 2.4166666666666665, 3.866666666666666, 1.15], [5.2176470588235295, 3.6470588235294112, 1.4823529411764707, 0.2705882352941177], [4.735294117647059, 3.0941176470588236, 1.4470588235294117, 0.1941176470588236], [6.7, 3.4000000000000004, 5.833333333333333, 2.3333333333333335], [5.685714285714286, 2.7, 5.042857142857143, 1.8857142857142857]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 1, 1, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.865517241379309, 3.0862068965517233, 5.7862068965517235, 2.120689655172414], [6.392857142857143, 2.9071428571428575, 4.607142857142857, 1.4142857142857144], [4.366666666666667, 3.0666666666666664, 1.2333333333333334, 0.16666666666666666], [5.963636363636363, 2.690909090909091, 5.072727272727273, 1.8181818181818181], [4.9363636363636365, 3.2545454545454544, 1.481818181818182, 0.21818181818181823], [5.29375, 3.80625, 1.4249999999999998, 0.26875], [5.593750000000001, 2.6499999999999995, 3.9250000000000003, 1.2125000000000001]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 1, 3, 1, 1, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.9, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[60, 1, 21, 14, 22, 50, 25, 1, 34, 17, 2, 1, 30, 35, 29, 27, 25, 1, 42, 18, 38, 30, 1, 17, 21, 54, 45, 32, 41, 27, 3, 15, 2, 48, 9, 33, 22, 33, 44, 27, 40, 29, 11, 34, 8, 33, 30, 33, 17, 47, 17, 34, 23, 12, 55, 25, 26, 27, 22, 35, 27, 26, 31, 1, 28, 6, 1, 26, 26, 41, 26, 27, 28, 16, 34, 42, 55, 15, 33, 25, 36, 28, 31, 49, 33, 46, 35, 31, 39, 48, 40, 1, 52, 24, 22, 2, 36, 48, 41, 41, 26, 44, 48, 21, 10, 38, 23, 20, 40, 30, 29, 41, 33, 22, 32, 1, 34, 40, 34, 23, 52, 54, 37, 37, 34, 25, 45, 27, 36, 55, 37, 38, 38, 41, 43, 31, 44, 30, 49, 26, 40, 48, 28, 28, 36, 31, 40, 39, 26, 36, 43, 69, 29, 23, 41, 33, 27, 25, 55, 8, 29, 38, 49, 41, 46, 46, 10, 16, 36, 49, 19, 51, 42, 47, 46, 53, 26, 40, 42, 29, 31, 17, 52, 27, 35, 34, 25, 49, 34, 42, 28, 28, 25, 70, 25, 1, 36, 47, 35, 39, 39, 33, 42, 52, 36, 31, 13, 1, 64, 40, 42, 32, 34, 24, 32, 40, 31, 36, 47, 66, 53, 28, 33, 49, 55, 45, 16, 41, 26, 34, 25, 35, 54, 28, 42, 29, 36, 34, 31, 33, 32, 36, 55, 33, 32, 26, 52, 51, 58, 50, 53, 19, 33, 34, 48, 35, 24, 30, 41, 1, 38, 48, 47, 35, 59, 39, 21, 46, 62, 45, 42, 58, 16, 25, 25, 22, 32, 35, 36, 37, 28, 32, 29, 42, 55, 68, 38, 18, 42, 41, 37, 48, 57, 35, 21, 43, 44, 25, 34, 30]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6099999999999999, speedup = 0.3955595678435628, eval_ratio = 0.041595)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.37586805555555547,"recall":0.37586805555555547,"f1":0.37586805555555547,"seconds":7.467716932296753e-5,"exhaustive_search_seconds":0.00038758479058742523,"evaluations":339.546875,"distances_sum":1745.330084192958}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.556423611111111,"recall":0.556423611111111,"f1":0.556423611111111,"seconds":0.00011028721928596497,"exhaustive_search_seconds":0.00038758479058742523,"evaluations":378.2421875,"distances_sum":1615.9504343789856}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6718749999999997,"recall":0.6718749999999997,"f1":0.6718749999999997,"seconds":0.00014112330973148346,"exhaustive_search_seconds":0.00038758479058742523,"evaluations":417.3203125,"distances_sum":1569.0112821529165}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7447916666666665,"recall":0.7447916666666665,"f1":0.7447916666666665,"seconds":0.0001701153814792633,"exhaustive_search_seconds":0.00038758479058742523,"evaluations":456.484375,"distances_sum":1547.5202163388267}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7968749999999994,"recall":0.7968749999999994,"f1":0.7968749999999994,"seconds":0.0002023652195930481,"exhaustive_search_seconds":0.00038758479058742523,"evaluations":495.0546875,"distances_sum":1532.3963573703493}
KCenters.DeloneInvIndex> reached performance {"precision":0.8463541666666656,"recall":0.8463541666666656,"f1":0.8463541666666656,"seconds":0.00023477710783481598,"exhaustive_search_seconds":0.00038758479058742523,"evaluations":534.9609375,"distances_sum":1521.9537024362592}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7759999999999999, speedup = 1.8466777373720387, eval_ratio = 0.053222000000000005)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
