Julia Version 1.5.0-DEV.104
Commit 372a7a726d (2020-01-18 18:35 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed Requires ─────────── v0.5.2
 Installed ProgressMeter ────── v1.2.0
 Installed Conda ────────────── v1.3.0
 Installed Parsers ──────────── v0.3.10
 Installed OrderedCollections ─ v1.1.0
 Installed PyCall ───────────── v1.91.2
 Installed FEniCS ───────────── v0.4.0
 Installed MacroTools ───────── v0.5.3
 Installed VersionParsing ───── v1.2.0
 Installed DataStructures ───── v0.17.9
 Installed JSON ─────────────── v0.21.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [186dfeec] + FEniCS v0.4.0
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [8f4d0f93] + Conda v1.3.0
  [864edb3b] + DataStructures v0.17.9
  [186dfeec] + FEniCS v0.4.0
  [682c06a0] + JSON v0.21.0
  [1914dd2f] + MacroTools v0.5.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [92933f4c] + ProgressMeter v1.2.0
  [438e738f] + PyCall v1.91.2
  [ae029012] + Requires v0.5.2
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Conda ─→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Updating `/tmp/jl_PqR5MJ/Project.toml`
 [no changes]
  Updating `/tmp/jl_PqR5MJ/Manifest.toml`
 [no changes]
  Building PyCall → `~/.julia/packages/PyCall/ttONZ/deps/build.log`
  Updating `/tmp/jl_yXlAkf/Project.toml`
 [no changes]
  Updating `/tmp/jl_yXlAkf/Manifest.toml`
 [no changes]
  Building FEniCS → `~/.julia/packages/FEniCS/bNxUh/deps/build.log`
  Updating `/tmp/jl_7y0zgc/Project.toml`
 [no changes]
  Updating `/tmp/jl_7y0zgc/Manifest.toml`
 [no changes]
   Testing FEniCS
 Installed DiffRules ─────────────────── v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed ZygoteRules ───────────────── v0.2.0
 Installed TableTraits ───────────────── v1.0.0
 Installed RecursiveFactorization ────── v0.1.0
 Installed GenericSVD ────────────────── v0.2.2
 Installed ChainRulesCore ────────────── v0.4.0
 Installed DiffEqDiffTools ───────────── v1.7.0
 Installed OrdinaryDiffEq ────────────── v5.27.1
 Installed DiffResults ───────────────── v1.0.2
 Installed Roots ─────────────────────── v0.8.4
 Installed LightGraphs ───────────────── v1.3.0
 Installed Parameters ────────────────── v0.12.0
 Installed Compat ────────────────────── v2.2.0
 Installed NaNMath ───────────────────── v0.3.3
 Installed SimpleTraits ──────────────── v0.9.1
 Installed OpenSpecFun_jll ───────────── v0.5.3+1
 Installed CommonSubexpressions ──────── v0.2.0
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed ArrayInterface ────────────── v2.3.1
 Installed RecursiveArrayTools ───────── v2.0.0
 Installed RecipesBase ───────────────── v0.7.0
 Installed MuladdMacro ───────────────── v0.2.2
 Installed ForwardDiff ───────────────── v0.10.9
 Installed DocStringExtensions ───────── v0.8.1
 Installed SparseDiffTools ───────────── v1.2.0
 Installed ExponentialUtilities ──────── v1.6.0
 Installed StaticArrays ──────────────── v0.12.1
 Installed Inflate ───────────────────── v0.1.1
 Installed TreeViews ─────────────────── v0.3.0
 Installed DiffEqBase ────────────────── v6.12.2
 Installed IterativeSolvers ──────────── v0.8.1
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed SpecialFunctions ──────────── v0.9.0
 Installed Adapt ─────────────────────── v1.0.0
 Installed FunctionWrappers ──────────── v1.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
  Updating `/tmp/jl_uEbPuA/Project.toml`
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  Updating `/tmp/jl_uEbPuA/Manifest.toml`
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [4fba245c] + ArrayInterface v2.3.1
  [d360d2e6] + ChainRulesCore v0.4.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [2b5f629d] + DiffEqBase v6.12.2
  [01453d9d] + DiffEqDiffTools v1.7.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [ffbed154] + DocStringExtensions v0.8.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [d25df0c9] + Inflate v0.1.1
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [093fc24a] + LightGraphs v1.3.0
  [46d2c3a1] + MuladdMacro v0.2.2
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [d96e819e] + Parameters v0.12.0
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.0
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.2.0
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [3783bdb8] + TableTraits v1.0.0
  [a2a6695c] + TreeViews v0.3.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
Running sandbox
Status `/tmp/jl_uEbPuA/Project.toml`
  [186dfeec] FEniCS v0.4.0
  [1dea7af3] OrdinaryDiffEq v5.27.1
  [92933f4c] ProgressMeter v1.2.0
  [438e738f] PyCall v1.91.2
  [ae029012] Requires v0.5.2
  [8dfed614] Test 
mshr has not been includedWARNING: Method definition lvsolve(Any, Any, Any) in module FEniCS at /home/pkgeval/.julia/packages/FEniCS/bNxUh/src/jsolve.jl:9 overwritten at /home/pkgeval/.julia/packages/FEniCS/bNxUh/src/jsolve.jl:11.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition lvsolve##kw(Any, typeof(FEniCS.lvsolve), Any, Any, Any) in module FEniCS at /home/pkgeval/.julia/packages/FEniCS/bNxUh/src/jsolve.jl:9 overwritten at /home/pkgeval/.julia/packages/FEniCS/bNxUh/src/jsolve.jl:11.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition nlvsolve(Any, Any) in module FEniCS at /home/pkgeval/.julia/packages/FEniCS/bNxUh/src/jsolve.jl:22 overwritten at /home/pkgeval/.julia/packages/FEniCS/bNxUh/src/jsolve.jl:23.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition nlvsolve##kw(Any, typeof(FEniCS.nlvsolve), Any, Any) in module FEniCS at /home/pkgeval/.julia/packages/FEniCS/bNxUh/src/jsolve.jl:22 overwritten at /home/pkgeval/.julia/packages/FEniCS/bNxUh/src/jsolve.jl:23.
  ** incremental compilation may be fatally broken for this module **

ERROR: LoadError: InitError: PyError (PyImport_ImportModule

The Python package fenics could not be found by pyimport. Usually this means
that you did not install fenics in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the fenics module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the fenics module, you can use `pyimport_conda("fenics", PKG)`,
where PKG is the Anaconda package the contains the module fenics,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'fenics'",)

Stacktrace:
 [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:544
 [2] pyimport_conda(::String, ::String, ::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:702
 [3] __init__() at /home/pkgeval/.julia/packages/FEniCS/bNxUh/src/FEniCS.jl:27
 [4] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:697
 [5] _require_from_serialized(::String) at ./loading.jl:748
 [6] _require(::Base.PkgId) at ./loading.jl:1039
 [7] require(::Base.PkgId) at ./loading.jl:927
 [8] require(::Module, ::Symbol) at ./loading.jl:922
 [9] include(::String) at ./client.jl:439
 [10] top-level scope at none:6
during initialization of module FEniCS
in expression starting at /home/pkgeval/.julia/packages/FEniCS/bNxUh/test/runtests.jl:1
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/FEniCS/bNxUh/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/FEniCS/bNxUh/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package FEniCS errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
