Julia Version 1.5.0-DEV.107
Commit 248bc460bb (2020-01-19 02:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed NeighbourLists ─ v0.5.0
 Installed StaticArrays ─── v0.12.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [2fcf5ba9] + NeighbourLists v0.5.0
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [2fcf5ba9] + NeighbourLists v0.5.0
  [90137ffa] + StaticArrays v0.12.1
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
   Testing NeighbourLists
 Installed DiffResults ────────── v1.0.2
 Installed Distances ──────────── v0.8.2
 Installed NaNMath ────────────── v0.3.3
 Installed DiffRules ──────────── v1.0.0
 Installed NearestNeighbors ───── v0.4.4
 Installed ForwardDiff ────────── v0.10.9
 Installed CommonSubexpressions ─ v0.2.0
 Installed SpecialFunctions ───── v0.9.0
 Installed OpenSpecFun_jll ────── v0.5.3+1
  Updating `/tmp/jl_XU0prv/Project.toml`
  [b4f34e82] + Distances v0.8.2
  [f6369f11] + ForwardDiff v0.10.9
  [b8a86587] + NearestNeighbors v0.4.4
  [de0858da] + Printf 
  [8dfed614] + Test 
  Updating `/tmp/jl_XU0prv/Manifest.toml`
  [bbf7d656] + CommonSubexpressions v0.2.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [b4f34e82] + Distances v0.8.2
  [f6369f11] + ForwardDiff v0.10.9
  [77ba4419] + NaNMath v0.3.3
  [b8a86587] + NearestNeighbors v0.4.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [276daf66] + SpecialFunctions v0.9.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [ea8e919c] + SHA 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
Running sandbox
Status `/tmp/jl_XU0prv/Project.toml`
  [b4f34e82] Distances v0.8.2
  [f6369f11] ForwardDiff v0.10.9
  [b8a86587] NearestNeighbors v0.4.4
  [2fcf5ba9] NeighbourLists v0.5.0
  [90137ffa] StaticArrays v0.12.1
  [37e2e46d] LinearAlgebra 
  [de0858da] Printf 
  [8dfed614] Test 
# threads = 2
Checking that `fnbody` is correct...
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = fnbody_d(::SArray{Tuple{3},Float64,1,3}, ::Float64, ::Float64) at test_aux.jl:32
└ @ Main ~/.julia/packages/NeighbourLists/mW4WV/test/test_aux.jl:32
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = fnbody_d(::SArray{Tuple{3},Float64,1,3}, ::Float64, ::Float64) at test_aux.jl:34
└ @ Main ~/.julia/packages/NeighbourLists/mW4WV/test/test_aux.jl:34
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = fnbody(::SArray{Tuple{3},ForwardDiff.Dual{ForwardDiff.Tag{var"#9#10"{Float64,Float64},Float64},Float64,3},1,3}, ::Float64, ::Float64) at test_aux.jl:26
└ @ Main ~/.julia/packages/NeighbourLists/mW4WV/test/test_aux.jl:26
[ Info: Testing PairList Correctness: 
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index(::SArray{Tuple{3,3},Float64,2,9}, ::SArray{Tuple{3},Float64,1,3}, ::SArray{Tuple{3},Int32,1,3}) at cell_list.jl:48
└ @ NeighbourLists ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index at cell_list.jl:48 [inlined]
└ @ Core ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = _find_neighbours_!(::Int64, ::NeighbourLists.CellList{Float64,Int32}, ::SArray{Tuple{3},Int32,1,3}, ::SArray{Tuple{3,3},Float64,2,9}, ::CartesianIndices{3,Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}}}, ::Array{Int32,1}, ::Array{Int32,1}, ::Array{SArray{Tuple{3},Int32,1,3},1}) at cell_list.jl:235
└ @ NeighbourLists ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:235
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index at cell_list.jl:48 [inlined]
└ @ Core ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = _find_neighbours_!(::Int64, ::NeighbourLists.CellList{Float64,Int32}, ::SArray{Tuple{3},Int32,1,3}, ::SArray{Tuple{3,3},Float64,2,9}, ::CartesianIndices{3,Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}}}, ::Array{Int32,1}, ::Array{Int32,1}, ::Array{SArray{Tuple{3},Int32,1,3},1}) at cell_list.jl:266
└ @ NeighbourLists ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:266
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed

Test Summary:  | Pass  Total
NeighbourLists |   23     23
   Testing NeighbourLists tests passed 
