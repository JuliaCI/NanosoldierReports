Julia Version 1.5.0-DEV.104
Commit 372a7a726d (2020-01-18 18:35 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed CMakeWrapper ─────── v0.2.3
 Installed Retry ────────────── v0.4.0
 Installed XMLDict ──────────── v0.4.0
 Installed EzXML ────────────── v1.1.0
 Installed Zarr ─────────────── v0.3.3
 Installed AWSCore ──────────── v0.6.7
 Installed DataStructures ───── v0.17.9
 Installed JSON ─────────────── v0.21.0
 Installed Parameters ───────── v0.12.0
 Installed IterTools ────────── v1.3.0
 Installed CMake ────────────── v1.1.2
 Installed Libiconv_jll ─────── v1.16.0+0
 Installed FillArrays ───────── v0.8.4
 Installed XML2_jll ─────────── v2.9.9+1
 Installed HTTP ─────────────── v0.8.8
 Installed Compat ───────────── v2.2.0
 Installed Blosc ────────────── v0.5.1
 Installed Mocking ──────────── v0.7.0
 Installed FilePathsBase ────── v0.6.2
 Installed BinDeps ──────────── v1.0.0
 Installed Parsers ──────────── v0.3.10
 Installed IniFile ──────────── v0.5.0
 Installed BinaryProvider ───── v0.5.8
 Installed OrderedCollections ─ v1.1.0
 Installed AWSS3 ────────────── v0.6.2
 Installed Zlib_jll ─────────── v1.2.11+7
 Installed SymDict ──────────── v0.3.0
 Installed LazyJSON ─────────── v0.1.1
 Installed URIParser ────────── v0.4.0
 Installed MbedTLS ──────────── v0.7.0
 Installed OffsetArrays ─────── v0.11.4
 Installed AWSSDK ───────────── v0.4.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0a941bbe] + Zarr v0.3.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [4f1ea46c] + AWSCore v0.6.7
  [1c724243] + AWSS3 v0.6.2
  [0d499d91] + AWSSDK v0.4.0
  [9e28174c] + BinDeps v1.0.0
  [b99e7846] + BinaryProvider v0.5.8
  [a74b3585] + Blosc v0.5.1
  [631607c0] + CMake v1.1.2
  [d5fb7624] + CMakeWrapper v0.2.3
  [34da2185] + Compat v2.2.0
  [864edb3b] + DataStructures v0.17.9
  [8f5d6c58] + EzXML v1.1.0
  [48062228] + FilePathsBase v0.6.2
  [1a297f60] + FillArrays v0.8.4
  [cd3eb016] + HTTP v0.8.8
  [83e8ac13] + IniFile v0.5.0
  [c8e1da08] + IterTools v1.3.0
  [682c06a0] + JSON v0.21.0
  [fc18253b] + LazyJSON v0.1.1
  [94ce4f54] + Libiconv_jll v1.16.0+0
  [739be429] + MbedTLS v0.7.0
  [78c3b35d] + Mocking v0.7.0
  [6fe1bfb0] + OffsetArrays v0.11.4
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  [20febd7b] + Retry v0.4.0
  [2da68c74] + SymDict v0.3.0
  [30578b45] + URIParser v0.4.0
  [02c8fc9c] + XML2_jll v2.9.9+1
  [228000da] + XMLDict v0.4.0
  [0a941bbe] + Zarr v0.3.3
  [83775a58] + Zlib_jll v1.2.11+7
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building CMake ──→ `~/.julia/packages/CMake/nSK2r/deps/build.log`
  Updating `/tmp/jl_iZCv2J/Project.toml`
 [no changes]
  Updating `/tmp/jl_iZCv2J/Manifest.toml`
 [no changes]
  Building Blosc ──→ `~/.julia/packages/Blosc/lzFr0/deps/build.log`
  Updating `/tmp/jl_lE52Li/Project.toml`
 [no changes]
  Updating `/tmp/jl_lE52Li/Manifest.toml`
 [no changes]
  Building MbedTLS → `~/.julia/packages/MbedTLS/a1JFn/deps/build.log`
  Updating `/tmp/jl_Ub1KFU/Project.toml`
 [no changes]
  Updating `/tmp/jl_Ub1KFU/Manifest.toml`
 [no changes]
   Testing Zarr
 Installed VersionParsing ─ v1.2.0
 Installed MacroTools ───── v0.5.3
 Installed Conda ────────── v1.3.0
 Installed PyCall ───────── v1.91.2
  Updating `/tmp/jl_HpetRV/Project.toml`
  [8f4d0f93] + Conda v1.3.0
  [438e738f] + PyCall v1.91.2
  Updating `/tmp/jl_HpetRV/Manifest.toml`
  [8f4d0f93] + Conda v1.3.0
  [1914dd2f] + MacroTools v0.5.3
  [438e738f] + PyCall v1.91.2
  [81def892] + VersionParsing v1.2.0
  Building Conda ─→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Updating `/tmp/jl_sTNUq5/Project.toml`
 [no changes]
  Updating `/tmp/jl_sTNUq5/Manifest.toml`
 [no changes]
  Building PyCall → `~/.julia/packages/PyCall/ttONZ/deps/build.log`
  Updating `/tmp/jl_dbcVaa/Project.toml`
 [no changes]
  Updating `/tmp/jl_dbcVaa/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_HpetRV/Project.toml`
  [4f1ea46c] AWSCore v0.6.7
  [8f4d0f93] Conda v1.3.0
  [682c06a0] JSON v0.21.0
  [438e738f] PyCall v1.91.2
  [0a941bbe] Zarr v0.3.3
  [44cfe95a] Pkg 
  [8dfed614] Test 
Python zarr implementation: Error During Test at /home/pkgeval/.julia/packages/Zarr/bi2mW/test/python.jl:6
  Got exception outside of a @test
  PyError (PyImport_ImportModule
  
  The Python package zarr could not be found by pyimport. Usually this means
  that you did not install zarr in the Python version being used by PyCall.
  
  PyCall is currently configured to use the Python version at:
  
  /usr/bin/python3
  
  and you should use whatever mechanism you usually use (apt-get, pip, conda,
  etcetera) to install the Python package containing the zarr module.
  
  One alternative is to re-configure PyCall to use a different Python
  version on your system: set ENV["PYTHON"] to the path/name of the python
  executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.
  
  Another alternative is to configure PyCall to use a Julia-specific Python
  distribution via the Conda.jl package (which installs a private Anaconda
  Python distribution), which has the advantage that packages can be installed
  and kept up-to-date via Julia.  As explained in the PyCall documentation,
  set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
  To install the zarr module, you can use `pyimport_conda("zarr", PKG)`,
  where PKG is the Anaconda package the contains the module zarr,
  or alternatively you can use the Conda package directly (via
  `using Conda` followed by `Conda.add` etcetera).
  
  ) <class 'ModuleNotFoundError'>
  ModuleNotFoundError("No module named 'zarr'",)
  
  Stacktrace:
   [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:544
   [2] pyimport_conda(::String, ::String, ::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:702
   [3] pyimport_conda(::String, ::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:701
   [4] top-level scope at /home/pkgeval/.julia/packages/Zarr/bi2mW/test/python.jl:11
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [6] top-level scope at /home/pkgeval/.julia/packages/Zarr/bi2mW/test/python.jl:8
   [7] include(::String) at ./client.jl:439
   [8] top-level scope at /home/pkgeval/.julia/packages/Zarr/bi2mW/test/runtests.jl:182
   [9] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [10] top-level scope at /home/pkgeval/.julia/packages/Zarr/bi2mW/test/runtests.jl:10
   [11] include(::String) at ./client.jl:439
   [12] top-level scope at none:6
   [13] eval(::Module, ::Any) at ./boot.jl:331
   [14] exec_options(::Base.JLOptions) at ./client.jl:264
   [15] _start() at ./client.jl:484
  
Test Summary:                | Pass  Error  Total
Zarr                         |  145      1    146
  ZArray                     |   32            32
  Metadata                   |   32            32
  getindex/setindex          |    9             9
  resize                     |   11            11
  Path Normalization         |    5             5
  DirectoryStore             |   22            22
  DictStore                  |   21            21
  AWS S3 Storage             |    8             8
  GCS S3 Storage             |    5             5
  Python zarr implementation |           1      1
ERROR: LoadError: Some tests did not pass: 145 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Zarr/bi2mW/test/runtests.jl:7
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/Zarr/bi2mW/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/Zarr/bi2mW/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package Zarr errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
