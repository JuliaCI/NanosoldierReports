Julia Version 1.5.0-DEV.104
Commit 372a7a726d (2020-01-18 18:35 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_BH3pVo/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_BH3pVo/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_BH3pVo/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.18675205164169265 -0.013685929346392726; 0.18675205164169265 0.0 0.09001743899955966; 0.013685929346392726 -0.09001743899955966 0.0])
dAA = so3([0.0 0.04656629318279537 -0.010523554822192228; -0.04656629318279537 0.0 -0.005788042006703409; 0.010523554822192228 0.005788042006703409 0.0])
dAA = so3([0.0 -0.013778493780691018 -0.1842724336824522; 0.013778493780691018 0.0 0.02827975946244129; 0.1842724336824522 -0.02827975946244129 0.0])
dAA = Quaternion(0.9982344441031409, [0.058574772053563776, -0.006636853484751636, 0.0072761844938331755])
dAA = SO3([0.9974255838068149 -0.0690694718323875 0.019277261953640427; 0.06874591507621754 0.9974898353622992 0.01697137322748246; -0.020401076637465244 -0.015602448836258082 0.9996701254225535])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9928861846752022 0.11594536986502775 -0.02708681391345646; -0.11632560389530905 0.9931272808609977 -0.012905730821331684; 0.02540429411560106 0.01596481182171987 0.9995497719593482]), [-0.9001743899955966, -0.13685929346392725, 1.8675205164169264])
xj = SE3(SO3([0.9987964199433279 -0.03899867934892659 -0.02974583193375138; 0.028750336067588075 0.9568576238119717 -0.2891312953121957; 0.03973826473805973 0.28792809998669283 0.9568271941963506]), [-0.2827975946244129, -1.8427243368245219, 0.13778493780691017])
Dx = SE3(SO3([0.9893562890245761 -0.14271368074167726 0.02840666641270132; 0.14499297733150318 0.9503564117406129 -0.27531750250947185; 0.012295116594245255 0.2765058697255259 0.9609335742470781]), [0.7674779608146881, -1.6501740341569806, -1.7236641384531874])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
