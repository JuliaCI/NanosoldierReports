Julia Version 1.5.0-DEV.107
Commit 248bc460bb (2020-01-19 02:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed DataAPI ───────────────────── v1.1.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed PooledArrays ──────────────── v0.5.3
 Installed KCenters ──────────────────── v0.1.8
 Installed Compat ────────────────────── v3.2.0
 Installed Missings ──────────────────── v0.4.3
 Installed OrderedCollections ────────── v1.1.0
 Installed JSON ──────────────────────── v0.21.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed TableTraits ───────────────── v1.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataStructures ────────────── v0.17.9
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed MLDataPattern ─────────────── v0.5.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Parsers ───────────────────── v0.3.10
 Installed Reexport ──────────────────── v0.2.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Tables ────────────────────── v0.2.11
 Installed CategoricalArrays ─────────── v0.7.7
 Installed DataFrames ────────────────── v0.20.0
 Installed StatsBase ─────────────────── v0.32.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_3vUuHW/Project.toml`
 [no changes]
  Updating `/tmp/jl_3vUuHW/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_3vUuHW/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 185.56999999999996
[ Info: 71.46
[ Info: 40.88999999999999
[ Info: 24.28
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.19999834944844
[ Info: 76.0200011681837
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.45294726009688
inertia(cdnet.distances) = 20.042353627594153
inertia(crand.distances) = 21.74941620570294
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7752272033522042,"seconds":4.505738615989685e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":7.578125,"distances_sum":1921.3608049132608}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.15625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.15625,"f1":null,"seconds":2.0135194063186646e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":5.3515625,"distances_sum":479.8709279974001}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.650390625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.650390625,"f1":0.7752272033522042,"seconds":4.505738615989685e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":7.578125,"distances_sum":1921.3608049132608}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9376259157509163,"seconds":6.379559636116028e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.6640625,"distances_sum":2954.5496578322427}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.8320106976356985,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":7.90625,"distances_sum":2278.2000156385275}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7801426004551012,"seconds":4.969537258148193e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":7.375,"distances_sum":2014.7231869295867}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9376259157509163,"seconds":6.379559636116028e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.6640625,"distances_sum":2954.5496578322427}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679716117216122,"seconds":4.135072231292725e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.8203125,"distances_sum":3200.214947388911}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9686069139194143,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.8515625,"distances_sum":3200.5641609327618}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.944116300366301,"seconds":3.63960862159729e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.6796875,"distances_sum":3000.1947130306685}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9686069139194143,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.8515625,"distances_sum":3200.5641609327618}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9686069139194143,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.8515625,"distances_sum":3200.5641609327618}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.13671875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.13671875,"f1":null,"seconds":2.0619481801986694e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":4.78125,"distances_sum":432.6327312809026}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7872637778887787,"seconds":3.4552067518234253e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":7.890625,"distances_sum":1935.609504336603}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7844343156843164,"seconds":3.077089786529541e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":7.7734375,"distances_sum":1929.3499095121194}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7872637778887787,"seconds":3.4552067518234253e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":7.890625,"distances_sum":1935.609504336603}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9414720695970703,"seconds":4.163011908531189e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.7578125,"distances_sum":2845.823882517644}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8527831543456551,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.28125,"distances_sum":2235.698941719457}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9061792374292382,"seconds":3.768131136894226e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.4765625,"distances_sum":2595.2857300150563}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9282509157509166,"seconds":3.946945071220398e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.609375,"distances_sum":2737.5596066960843}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9405448717948726,"seconds":4.0121376514434814e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.7421875,"distances_sum":2819.456394429192}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9414720695970703,"seconds":4.163011908531189e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.7578125,"distances_sum":2845.823882517644}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9765453296703299,"seconds":4.237517714500427e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.921875,"distances_sum":3104.258163296921}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9603079212454219,"seconds":3.997236490249634e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.8671875,"distances_sum":2984.1860571083894}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619448260073263,"seconds":3.93204391002655e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.84375,"distances_sum":3010.4594433320663}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.976247710622711,"seconds":4.075467586517334e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.96875,"distances_sum":3098.8635452684375}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.947313103563104,"seconds":4.155561327934265e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.7734375,"distances_sum":2900.5252340510183}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9596955128205132,"seconds":3.999099135398865e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.890625,"distances_sum":2972.834672171278}, best_list's length: 15, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9528674450549456,"seconds":4.0512531995773315e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.859375,"distances_sum":2918.9516900757767}, best_list's length: 16, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9765453296703299,"seconds":4.237517714500427e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.921875,"distances_sum":3104.258163296921}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9765453296703299,"seconds":4.237517714500427e-6,"exhaustive_search_seconds":1.039355993270874e-6,"evaluations":8.921875,"distances_sum":3104.258163296921}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.854139090076591,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":8.0859375,"distances_sum":2231.4764165141055}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.854139090076591,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":8.0859375,"distances_sum":2231.4764165141055}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.938055173992675,"seconds":4.2244791984558105e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":8.78125,"distances_sum":2728.7813675754865}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.938055173992675,"seconds":4.2244791984558105e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":8.78125,"distances_sum":2728.7813675754865}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9649439102564107,"seconds":4.015862941741943e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":8.875,"distances_sum":2934.533056683227}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9755780677655682,"seconds":4.682689905166626e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":8.9296875,"distances_sum":2987.2057655634426}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9755780677655682,"seconds":4.682689905166626e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":8.9296875,"distances_sum":2987.2057655634426}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9755780677655682,"seconds":4.682689905166626e-6,"exhaustive_search_seconds":1.0319054126739502e-6,"evaluations":8.9296875,"distances_sum":2987.2057655634426}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6484375,"f1":0.7697684260184265,"seconds":3.507360816001892e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.7734375,"distances_sum":1887.9751437614782}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.478515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.478515625,"f1":0.6343370171495177,"seconds":3.162771463394165e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.8984375,"distances_sum":1343.4244376120591}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6484375,"f1":0.7697684260184265,"seconds":3.507360816001892e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.7734375,"distances_sum":1887.9751437614782}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8761431277056283,"seconds":3.637745976448059e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.453125,"distances_sum":2308.306773519821}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9198665917415926,"seconds":4.265457391738892e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6875,"distances_sum":2590.3212949713493}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.870756847319348,"seconds":3.7476420402526855e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4609375,"distances_sum":2268.478723515593}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9073863636363642,"seconds":3.995373845100403e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6015625,"distances_sum":2468.795289795989}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7759324009324018,"seconds":3.4924596548080444e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.7578125,"distances_sum":1869.069810475401}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.865234375,"f1":0.9198665917415926,"seconds":4.265457391738892e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6875,"distances_sum":2590.3212949713493}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9480769230769235,"seconds":6.698817014694214e-5,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":2806.9336692389484}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9791494963369967,"seconds":4.114583134651184e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9140625,"distances_sum":3041.979747254581}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9509958791208796,"seconds":4.043802618980408e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.71875,"distances_sum":2821.7991878297703}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620936355311361,"seconds":3.593042492866516e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":2908.658688009725}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9791494963369967,"seconds":4.114583134651184e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9140625,"distances_sum":3041.979747254581}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9791494963369967,"seconds":4.114583134651184e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9140625,"distances_sum":3041.979747254581}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1708984375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1708984375,"f1":null,"seconds":2.5480985641479492e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":5.328125,"distances_sum":435.8021039165203}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3544921875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3544921875,"f1":null,"seconds":3.164634108543396e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":5.921875,"distances_sum":973.4042124237359}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8447037337662346,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.9921875,"distances_sum":2164.4771777585947}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8447037337662346,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.9921875,"distances_sum":2164.4771777585947}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8447037337662346,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.9921875,"distances_sum":2164.4771777585947}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.744140625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8447037337662346,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.9921875,"distances_sum":2164.4771777585947}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8517331626706635,"seconds":5.153939127922058e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.515625,"distances_sum":2086.1520601532425}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8517331626706635,"seconds":5.153939127922058e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.515625,"distances_sum":2086.1520601532425}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8709889069264076,"seconds":3.67872416973114e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.4140625,"distances_sum":2196.338554090319}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8660912004662012,"seconds":4.349276423454285e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.5234375,"distances_sum":2175.295779821817}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8709889069264076,"seconds":3.67872416973114e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.4140625,"distances_sum":2196.338554090319}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9177629662004669,"seconds":3.5334378480911255e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.7265625,"distances_sum":2496.983085126574}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9721554487179489,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.90625,"distances_sum":2928.7169642231615}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9039127539127547,"seconds":3.4980475902557373e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.625,"distances_sum":2422.6158246043738}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9197916666666675,"seconds":3.4850090742111206e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.75,"distances_sum":2468.4697738044883}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9721554487179489,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.90625,"distances_sum":2928.7169642231615}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9721554487179489,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.90625,"distances_sum":2928.7169642231615}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1484375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1484375,"f1":null,"seconds":1.6223639249801636e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":4.25,"distances_sum":415.8407729474172}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8659959831834838,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.421875,"distances_sum":2133.7456873945907}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.8659959831834838,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.421875,"distances_sum":2133.7456873945907}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570741758241763,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.828125,"distances_sum":2709.2128357289316}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9283112720612726,"seconds":3.634020686149597e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.765625,"distances_sum":2484.1036798357823}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9570741758241763,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.828125,"distances_sum":2709.2128357289316}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598614926739931,"seconds":3.7811696529388428e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8203125,"distances_sum":2765.6564098009267}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9592319139194144,"seconds":4.718080163002014e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8203125,"distances_sum":2732.9929091291942}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9696428571428575,"seconds":3.958120942115784e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.90625,"distances_sum":2800.1204346611225}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9686412545787549,"seconds":3.764405846595764e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8984375,"distances_sum":2807.3878454180376}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9696428571428575,"seconds":3.958120942115784e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.90625,"distances_sum":2800.1204346611225}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9696428571428575,"seconds":3.958120942115784e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.90625,"distances_sum":2800.1204346611225}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5712890625,"f1":null,"seconds":2.983957529067993e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.4921875,"distances_sum":1524.9952389031666}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.836697157009658,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.9296875,"distances_sum":2097.5633862340924}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5751953125,"f1":null,"seconds":2.9169023036956787e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.5234375,"distances_sum":1543.744421723149}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.734375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.734375,"f1":0.836697157009658,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.9296875,"distances_sum":2097.5633862340924}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8802343489843498,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.2578125,"distances_sum":2337.4593477042977}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9286916208791217,"seconds":3.769993782043457e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.734375,"distances_sum":2598.5194279217417}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9286916208791217,"seconds":3.769993782043457e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.734375,"distances_sum":2598.5194279217417}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9469951923076932,"seconds":3.87243926525116e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.734375,"distances_sum":2796.941682758331}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9523351648351653,"seconds":3.917142748832703e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8125,"distances_sum":2800.575212212029}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635989010989018,"seconds":4.060566425323486e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.84375,"distances_sum":2899.493703720664}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9595295329670335,"seconds":3.954395651817322e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8203125,"distances_sum":2857.0744135794607}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9635989010989018,"seconds":4.060566425323486e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.84375,"distances_sum":2899.493703720664}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9635989010989018,"seconds":4.060566425323486e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.84375,"distances_sum":2899.493703720664}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9758370535714285,"recall":0.638671875,"f1":0.7588877268564773,"seconds":3.50363552570343e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":7.4921875,"distances_sum":1943.6160604298402}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.33203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.33203125,"f1":null,"seconds":2.3636966943740845e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":5.28125,"distances_sum":968.7508686501849}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.638671875,"state":{"ssize":1,"bsize":4},"perf":{"precision":0.9758370535714285,"recall":0.638671875,"f1":0.7588877268564773,"seconds":3.50363552570343e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":7.4921875,"distances_sum":1943.6160604298402}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":5,"bsize":6}, perf: {"precision":0.9902064732142857,"recall":0.7626953125,"f1":0.8514720305735936,"seconds":3.3527612686157227e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":8.15625,"distances_sum":2563.709199230114}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":4,"bsize":8}, perf: {"precision":0.9809337797619048,"recall":0.8955078125,"f1":0.9318380837912088,"seconds":4.084780812263489e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":8.71875,"distances_sum":3223.1113484576035}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7197265625, conf: {"ssize":4,"bsize":5}, perf: {"precision":0.9830543154761904,"recall":0.7197265625,"f1":0.8201129599567107,"seconds":3.546476364135742e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":8.0625,"distances_sum":2241.7426100210837}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9869326636904762,"recall":0.7734375,"f1":0.8611602590118222,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":8.2109375,"distances_sum":2625.7685259689856}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":4,"bsize":8},"perf":{"precision":0.9809337797619048,"recall":0.8955078125,"f1":0.9318380837912088,"seconds":4.084780812263489e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":8.71875,"distances_sum":3223.1113484576035}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":11}, perf: {"precision":0.981538318452381,"recall":0.9541015625,"f1":0.9666201636904762,"seconds":4.14624810218811e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":8.9375,"distances_sum":3458.6344904045222}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.9831194196428571,"recall":0.9228515625,"f1":0.9485283596611724,"seconds":4.027038812637329e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":8.8125,"distances_sum":3292.248017794027}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":0.981538318452381,"recall":0.9541015625,"f1":0.9666201636904762,"seconds":4.14624810218811e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":8.9375,"distances_sum":3458.6344904045222}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":0.981538318452381,"recall":0.9541015625,"f1":0.9666201636904762,"seconds":4.14624810218811e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":8.9375,"distances_sum":3458.6344904045222}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5234375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5234375,"f1":0.6744366744366748,"seconds":4.274770617485046e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":6.546875,"distances_sum":1478.281679644563}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.17578125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.17578125,"f1":null,"seconds":3.0118972063064575e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":4.1953125,"distances_sum":585.8454567363947}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6318359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6318359375,"f1":0.7611506549006557,"seconds":4.557892680168152e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.15625,"distances_sum":1788.1791526555469}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6318359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6318359375,"f1":0.7611506549006557,"seconds":4.557892680168152e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.15625,"distances_sum":1788.1791526555469}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9376748251748257,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.6171875,"distances_sum":2802.9405625354366}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9086684149184155,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.484375,"distances_sum":2540.168660931383}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8556214618714627,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.0625,"distances_sum":2204.8032465787355}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8375098859473867,"seconds":4.7013163566589355e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.9921875,"distances_sum":2098.8573725577694}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7824878246753254,"seconds":4.108995199203491e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.4140625,"distances_sum":1865.198496851634}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9376748251748257,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.6171875,"distances_sum":2802.9405625354366}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9655334249084253,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8515625,"distances_sum":2973.054102351972}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9522951007326013,"seconds":4.14624810218811e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.71875,"distances_sum":2892.5136964089206}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9655334249084253,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8515625,"distances_sum":2973.054102351972}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9655334249084253,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8515625,"distances_sum":2973.054102351972}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8567942474192481,"seconds":4.98257577419281e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.859375,"distances_sum":2063.9821955268126}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8567942474192481,"seconds":4.98257577419281e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.859375,"distances_sum":2063.9821955268126}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9534512362637365,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.78125,"distances_sum":2846.4651914111705}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9534512362637365,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.78125,"distances_sum":2846.4651914111705}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9676911630036633,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.890625,"distances_sum":2920.5686757139597}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9831845238095238,"seconds":6.338581442832947e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.984375,"distances_sum":3046.2972898168555}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9831845238095238,"seconds":6.338581442832947e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.984375,"distances_sum":3046.2972898168555}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9831845238095238,"seconds":6.338581442832947e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.984375,"distances_sum":3046.2972898168555}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.25, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.25,"f1":null,"seconds":1.905485987663269e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":5.7578125,"distances_sum":662.818984137077}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.25,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.25,"f1":null,"seconds":1.905485987663269e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":5.7578125,"distances_sum":662.818984137077}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.25,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.25,"f1":null,"seconds":1.905485987663269e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":5.7578125,"distances_sum":662.818984137077}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.7061206154956162,"seconds":2.522021532058716e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":6.515625,"distances_sum":1418.9565788354762}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2255859375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2255859375,"f1":null,"seconds":1.695007085800171e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":5.0,"distances_sum":611.1536991990112}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.564453125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.564453125,"f1":0.7061206154956162,"seconds":2.522021532058716e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":6.515625,"distances_sum":1418.9565788354762}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8730576714951722,"seconds":3.3229589462280273e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.28125,"distances_sum":2222.395196901534}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.931055402930404,"seconds":3.5353004932403564e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.6953125,"distances_sum":2588.734049059852}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7177734375,"f1":0.825246628371629,"seconds":3.0044466257095337e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":7.8203125,"distances_sum":1917.1197941569403}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.634765625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.634765625,"f1":0.7658336455211463,"seconds":2.7995556592941284e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":7.328125,"distances_sum":1618.8111611984853}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.623046875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.623046875,"f1":0.7545157967032974,"seconds":2.7567148208618164e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":7.15625,"distances_sum":1554.8334981771222}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.931055402930404,"seconds":3.5353004932403564e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.6953125,"distances_sum":2588.734049059852}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9500801282051285,"seconds":3.505498170852661e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.78125,"distances_sum":2733.528911010024}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9663175366300368,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.875,"distances_sum":2850.5246938659784}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9444482600732604,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.703125,"distances_sum":2752.0451730057857}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9663175366300368,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.875,"distances_sum":2850.5246938659784}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9663175366300368,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.875,"distances_sum":2850.5246938659784}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.373046875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.373046875,"f1":null,"seconds":3.6153942346572876e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":5.4375,"distances_sum":850.2952178621771}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8530027264402272,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.109375,"distances_sum":1992.658924052422}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.251953125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.251953125,"f1":null,"seconds":4.4014304876327515e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":5.6015625,"distances_sum":655.3275239760543}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6376953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6376953125,"f1":0.7642884892884901,"seconds":4.610046744346619e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.1953125,"distances_sum":1612.840142943428}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8530027264402272,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.109375,"distances_sum":1992.658924052422}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9660943223443229,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8203125,"distances_sum":2967.0129107672483}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9428056318681326,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.796875,"distances_sum":2742.822935713286}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9076083638583646,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.6328125,"distances_sum":2468.0145406530296}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9660943223443229,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8203125,"distances_sum":2967.0129107672483}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9771577380952383,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9921875,"distances_sum":2980.547542607613}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9733115842490843,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9453125,"distances_sum":2979.214400945725}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9771577380952383,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9921875,"distances_sum":2980.547542607613}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9771577380952383,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9921875,"distances_sum":2980.547542607613}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4609375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4609375,"f1":null,"seconds":3.7178397178649902e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.8203125,"distances_sum":1027.5602911626263}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5205078125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5205078125,"f1":0.66757998945499,"seconds":3.95067036151886e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.390625,"distances_sum":1232.4130051123393}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7886439948939957,"seconds":4.431232810020447e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.03125,"distances_sum":1693.3482036249682}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6689453125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6689453125,"f1":0.7886439948939957,"seconds":4.431232810020447e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.03125,"distances_sum":1693.3482036249682}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9060241841491848,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.40625,"distances_sum":2434.799460082646}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8354940198690206,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.78125,"distances_sum":1900.8872407579277}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.8011736527361536,"seconds":4.8317015171051025e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.140625,"distances_sum":1714.5682670769334}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.885494193306694,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.21875,"distances_sum":2298.3916701418034}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8838203463203471,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.203125,"distances_sum":2254.3870181411758}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83984375,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.83984375,"f1":0.9060241841491848,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.40625,"distances_sum":2434.799460082646}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9098729395604401,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.3515625,"distances_sum":2470.561466227545}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9636790293040297,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.90625,"distances_sum":2866.376587946949}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9680116758241761,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8671875,"distances_sum":2922.6025264450504}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9618532509157512,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.84375,"distances_sum":2894.7928985287167}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9339946511821519,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.671875,"distances_sum":2690.212071992368}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9680116758241761,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8671875,"distances_sum":2922.6025264450504}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9680116758241761,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8671875,"distances_sum":2922.6025264450504}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.197265625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.197265625,"f1":null,"seconds":2.864748239517212e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":4.9765625,"distances_sum":565.9731961489764}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.197265625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.197265625,"f1":null,"seconds":2.864748239517212e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":4.9765625,"distances_sum":565.9731961489764}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.7705905205905212,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.46875,"distances_sum":1596.9857378971967}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3662109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3662109375,"f1":null,"seconds":3.7066638469696045e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.765625,"distances_sum":898.4523366412895}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6455078125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6455078125,"f1":0.7705905205905212,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.46875,"distances_sum":1596.9857378971967}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6455078125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6455078125,"f1":0.7705905205905212,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.46875,"distances_sum":1596.9857378971967}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.6455078125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6455078125,"f1":0.7705905205905212,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.46875,"distances_sum":1596.9857378971967}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8176432942057952,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.3984375,"distances_sum":1790.8539079486222}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.525390625,"f1":0.6687425421800428,"seconds":3.939494490623474e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.4921875,"distances_sum":1193.3637220848382}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8688655094905103,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.2109375,"distances_sum":2099.968677950865}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7822265625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7822265625,"f1":0.8688655094905103,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.2109375,"distances_sum":2099.968677950865}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9423482767232773,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.734375,"distances_sum":2649.948649515805}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9360576923076928,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6484375,"distances_sum":2567.7289728603605}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9157509157509166,"seconds":4.945322871208191e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4609375,"distances_sum":2372.959080363583}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9438644688644694,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.734375,"distances_sum":2601.5930473569056}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9423482767232773,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.734375,"distances_sum":2649.948649515805}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622653388278393,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8515625,"distances_sum":2737.164106938028}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9740899725274729,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.90625,"distances_sum":2862.95444249527}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586939102564105,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.84375,"distances_sum":2721.9863906522137}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9609832875457881,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8671875,"distances_sum":2769.181949550834}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9603282134532138,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8203125,"distances_sum":2757.674501533992}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9469207875457883,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7734375,"distances_sum":2683.309397862464}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9593406593406599,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8515625,"distances_sum":2732.3120751690867}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9740899725274729,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.90625,"distances_sum":2862.95444249527}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9740899725274729,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.90625,"distances_sum":2862.95444249527}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2685546875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2685546875,"f1":null,"seconds":3.032386302947998e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.7578125,"distances_sum":705.0488885241692}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8045624514374522,"seconds":4.133209586143494e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.421875,"distances_sum":1722.060534416872}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.59765625,"f1":0.7333883130758135,"seconds":3.7886202335357666e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.9921875,"distances_sum":1453.912058384763}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6884765625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6884765625,"f1":0.8045624514374522,"seconds":4.133209586143494e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.421875,"distances_sum":1722.060534416872}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9492044413919423,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7734375,"distances_sum":2678.4752512406426}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.810732323232324,"seconds":4.190951585769653e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.5390625,"distances_sum":1775.4878369164908}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8115290959040966,"seconds":4.120171070098877e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.3828125,"distances_sum":1713.4308651790705}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":3,"bsize":4}, perf: {"precision":null,"recall":0.69140625,"f1":null,"seconds":4.120171070098877e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.3828125,"distances_sum":1736.481880912172}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9492044413919423,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7734375,"distances_sum":2678.4752512406426}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9605711996336999,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8125,"distances_sum":2744.8091822745378}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9584706959706965,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8359375,"distances_sum":2715.3187638757518}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9605711996336999,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8125,"distances_sum":2744.8091822745378}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9605711996336999,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8125,"distances_sum":2744.8091822745378}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5888671875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5888671875,"f1":0.7237047674547683,"seconds":4.250556230545044e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.3671875,"distances_sum":1410.4365206821103}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.22265625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.22265625,"f1":null,"seconds":3.2708048820495605e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.2109375,"distances_sum":564.6096524740062}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5888671875,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5888671875,"f1":0.7237047674547683,"seconds":4.250556230545044e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.3671875,"distances_sum":1410.4365206821103}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9403362262737268,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.734375,"distances_sum":2542.8019127652365}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9403362262737268,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.734375,"distances_sum":2542.8019127652365}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9627461080586085,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8515625,"distances_sum":2740.344432862265}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":10,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9627461080586085,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8515625,"distances_sum":2740.344432862265}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":10,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9627461080586085,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8515625,"distances_sum":2740.344432862265}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2021484375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2021484375,"f1":null,"seconds":2.8870999813079834e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.4609375,"distances_sum":520.7548371071169}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4580078125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4580078125,"f1":null,"seconds":3.723427653312683e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.0546875,"distances_sum":1118.178926358626}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.205078125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.205078125,"f1":null,"seconds":3.0100345611572266e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.53125,"distances_sum":547.3875420501242}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4580078125,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.4580078125,"f1":null,"seconds":3.723427653312683e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.0546875,"distances_sum":1118.178926358626}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8659522768897777,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.0,"distances_sum":2149.4686578254295}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7940387737262745,"seconds":4.459172487258911e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.3671875,"distances_sum":1737.4107836799594}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.6953262015762021,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.1796875,"distances_sum":1386.9697828719281}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8454493423243432,"seconds":4.688277840614319e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.78125,"distances_sum":2003.2417851390187}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7893887362637372,"seconds":4.516914486885071e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.2578125,"distances_sum":1681.14927638114}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8659522768897777,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.0,"distances_sum":2149.4686578254295}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9258673618048625,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.5703125,"distances_sum":2606.4548356788478}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9369765651015658,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6953125,"distances_sum":2659.555901144076}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9555116758241762,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7265625,"distances_sum":2801.750605471464}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8942427364302372,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.1640625,"distances_sum":2337.32136496717}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9555116758241762,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7265625,"distances_sum":2801.750605471464}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9555116758241762,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7265625,"distances_sum":2801.750605471464}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.814834124209125,"seconds":4.6603381633758545e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1015625,"distances_sum":1977.3603234076897}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.7716053044178051,"seconds":4.5318156480789185e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.9140625,"distances_sum":1710.6994332852696}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.703125,"f1":0.814834124209125,"seconds":4.6603381633758545e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1015625,"distances_sum":1977.3603234076897}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8921505577755586,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6171875,"distances_sum":2407.8784221492756}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8173828125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8921505577755586,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6171875,"distances_sum":2407.8784221492756}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9464202464202467,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.921875,"distances_sum":2838.3584508821523}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9464202464202467,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.921875,"distances_sum":2838.3584508821523}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9072265625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9464202464202467,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.921875,"distances_sum":2838.3584508821523}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.326171875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.326171875,"f1":null,"seconds":3.4514814615249634e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.109375,"distances_sum":878.0940717742357}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3212890625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3212890625,"f1":null,"seconds":3.516674041748047e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.125,"distances_sum":856.9721057385744}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1513671875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1513671875,"f1":null,"seconds":2.8405338525772095e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":4.40625,"distances_sum":381.0936187906025}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.326171875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.326171875,"f1":null,"seconds":3.4514814615249634e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.109375,"distances_sum":878.0940717742357}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.890962683150184,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5859375,"distances_sum":2231.5593874049987}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7236328125,"f1":0.8316001706626714,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.71875,"distances_sum":1928.9891878881165}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.486328125, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.486328125,"f1":0.6407418969918973,"seconds":3.7550926208496094e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.25,"distances_sum":1202.426483726089}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.48828125, conf: {"ssize":9,"bsize":3}, perf: {"precision":1.0,"recall":0.48828125,"f1":0.6403547841047845,"seconds":3.945082426071167e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.3203125,"distances_sum":1201.3313411000595}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5029296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5029296875,"f1":0.6551313270063277,"seconds":4.0121376514434814e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.2890625,"distances_sum":1277.6824903422962}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.505859375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.505859375,"f1":0.6566078019203024,"seconds":3.974884748458862e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.234375,"distances_sum":1250.5845109818922}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8154296875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8154296875,"f1":0.890962683150184,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5859375,"distances_sum":2231.5593874049987}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9584878663003666,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.875,"distances_sum":2744.4438771611603}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9532108516483522,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.78125,"distances_sum":2725.1845790602433}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9378865925740932,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8125,"distances_sum":2571.140241845507}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9584878663003666,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.875,"distances_sum":2744.4438771611603}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9584878663003666,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.875,"distances_sum":2744.4438771611603}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5224609375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5224609375,"f1":0.6740363802863808,"seconds":4.284083843231201e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.1875,"distances_sum":1326.0592951220171}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8714358558108566,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.59375,"distances_sum":2185.971544483784}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8714358558108566,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.59375,"distances_sum":2185.971544483784}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.917247856310357,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7109375,"distances_sum":2508.3571035018836}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9366617757242762,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.859375,"distances_sum":2698.3554483441353}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9079852439227446,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.703125,"distances_sum":2471.384069212172}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9366617757242762,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.859375,"distances_sum":2698.3554483441353}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9630608974358981,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.859375,"distances_sum":2914.15229359086}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9630608974358981,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.859375,"distances_sum":2914.15229359086}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9630608974358981,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.859375,"distances_sum":2914.15229359086}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2412109375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2412109375,"f1":null,"seconds":3.7997961044311523e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.2265625,"distances_sum":642.7757140316668}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":3.645196557044983e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.4609375,"distances_sum":990.2698490208771}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8523382867132875,"seconds":4.952773451805115e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3359375,"distances_sum":2068.3081163863562}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8523382867132875,"seconds":4.952773451805115e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3359375,"distances_sum":2068.3081163863562}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9327729562104567,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8984375,"distances_sum":2731.7552370738204}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8574664918414926,"seconds":4.863366484642029e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2578125,"distances_sum":2113.644730988627}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609603937728941,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9453125,"distances_sum":2935.990338230738}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8532888986013994,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3359375,"distances_sum":2073.86862630221}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9609603937728941,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9453125,"distances_sum":2935.990338230738}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9822744963369964,"seconds":6.85080885887146e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":9.0,"distances_sum":3126.5686752394618}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723786630036633,"seconds":6.336718797683716e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":9.0,"distances_sum":3022.3603172661183}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9710393772893777,"seconds":7.100403308868408e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9921875,"distances_sum":3018.529803062342}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9674507783882788,"seconds":6.606802344322205e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9765625,"distances_sum":2996.953430029729}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9615212912087918,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9609375,"distances_sum":2963.539425858006}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9646608599733603,"seconds":6.616115570068359e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9609375,"distances_sum":2970.324455813626}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9822744963369964,"seconds":6.85080885887146e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":9.0,"distances_sum":3126.5686752394618}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9822744963369964,"seconds":6.85080885887146e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":9.0,"distances_sum":3126.5686752394618}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.716796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.716796875,"f1":0.8227269258519266,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.2109375,"distances_sum":1872.3877798755695}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.423828125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.423828125,"f1":null,"seconds":4.202127456665039e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.078125,"distances_sum":1028.7640878121845}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.716796875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.716796875,"f1":0.8227269258519266,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.2109375,"distances_sum":1872.3877798755695}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9222959332334338,"seconds":6.876885890960693e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.625,"distances_sum":2521.5272648782475}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8642578125,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.8642578125,"f1":0.9222959332334338,"seconds":6.876885890960693e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.625,"distances_sum":2521.5272648782475}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9310267857142861,"seconds":9.765848517417908e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.890625,"distances_sum":2604.9321611017635}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9310267857142861,"seconds":9.765848517417908e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.890625,"distances_sum":2604.9321611017635}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.880859375,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9310267857142861,"seconds":9.765848517417908e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.890625,"distances_sum":2604.9321611017635}}, n: 9
inertia(cfft.distances) = 19.52881200897868
inertia(cdnet.distances) = 24.94678603517225
inertia(crand.distances) = 25.672914100577987
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9288888888888889
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9355555555555556
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9177777777777777
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9222222222222222
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.86
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9133333333333334
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 3, 3, 2, 3, 3, 2, 1, 3, 3, 2, 3, 3, 2, 3, 1, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.35333333658332494] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35333333658332494, 0.1951423132785651] ***
*** starting iteration: 2; err: [Inf, 0.35333333658332494, 0.1951423132785651] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116] ***
*** starting iteration: 3; err: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534] ***
*** starting iteration: 4; err: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534, 0.15947630480009847] ***
*** starting iteration: 5; err: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534, 0.15947630480009847] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534, 0.15947630480009847, 0.15812046066583346] ***
*** starting iteration: 6; err: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534, 0.15947630480009847, 0.15812046066583346] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534, 0.15947630480009847, 0.15812046066583346, 0.15812046066583346] ***
*** finished computation of 12 references, err: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534, 0.15947630480009847, 0.15812046066583346, 0.15812046066583346] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 11, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
acc = 0.9533333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.145200003176098] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.145200003176098, 0.6096312052530972] ***
*** starting iteration: 2; err: [Inf, 1.145200003176098, 0.6096312052530972] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.145200003176098, 0.6096312052530972, 0.5724780395936393] ***
*** starting iteration: 3; err: [Inf, 1.145200003176098, 0.6096312052530972, 0.5724780395936393] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.145200003176098, 0.6096312052530972, 0.5724780395936393, 0.544448478320166] ***
*** starting iteration: 4; err: [Inf, 1.145200003176098, 0.6096312052530972, 0.5724780395936393, 0.544448478320166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.145200003176098, 0.6096312052530972, 0.5724780395936393, 0.544448478320166, 0.5244672367896235] ***
*** starting iteration: 5; err: [Inf, 1.145200003176098, 0.6096312052530972, 0.5724780395936393, 0.544448478320166, 0.5244672367896235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.145200003176098, 0.6096312052530972, 0.5724780395936393, 0.544448478320166, 0.5244672367896235, 0.520146571518112] ***
*** starting iteration: 6; err: [Inf, 1.145200003176098, 0.6096312052530972, 0.5724780395936393, 0.544448478320166, 0.5244672367896235, 0.520146571518112] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.145200003176098, 0.6096312052530972, 0.5724780395936393, 0.544448478320166, 0.5244672367896235, 0.520146571518112, 0.518650791702476] ***
*** starting iteration: 7; err: [Inf, 1.145200003176098, 0.6096312052530972, 0.5724780395936393, 0.544448478320166, 0.5244672367896235, 0.520146571518112, 0.518650791702476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.145200003176098, 0.6096312052530972, 0.5724780395936393, 0.544448478320166, 0.5244672367896235, 0.520146571518112, 0.518650791702476, 0.5177980518653298] ***
*** finished computation of 3 references, err: [Inf, 1.145200003176098, 0.6096312052530972, 0.5724780395936393, 0.544448478320166, 0.5244672367896235, 0.520146571518112, 0.518650791702476, 0.5177980518653298] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 9]]
** centroid: 3, normalized-entropy: 0.8003922080453356, [(2, 28), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4432027476336103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4432027476336103, 0.232859627911338] ***
*** starting iteration: 2; err: [Inf, 0.4432027476336103, 0.232859627911338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4432027476336103, 0.232859627911338, 0.22509147904461757] ***
*** starting iteration: 3; err: [Inf, 0.4432027476336103, 0.232859627911338, 0.22509147904461757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4432027476336103, 0.232859627911338, 0.22509147904461757, 0.22231024646014574] ***
*** finished computation of 7 references, err: [Inf, 0.4432027476336103, 0.232859627911338, 0.22509147904461757, 0.22231024646014574] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 8, 21]]
** centroid: 4, normalized-entropy: 0.8497511372532974, [(2, 8), (3, 21)]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3621249013352258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3621249013352258, 0.1603600352122435] ***
*** starting iteration: 2; err: [Inf, 0.3621249013352258, 0.1603600352122435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3621249013352258, 0.1603600352122435, 0.15091718255813988] ***
*** starting iteration: 3; err: [Inf, 0.3621249013352258, 0.1603600352122435, 0.15091718255813988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3621249013352258, 0.1603600352122435, 0.15091718255813988, 0.15000815589886596] ***
*** finished computation of 7 references, err: [Inf, 0.3621249013352258, 0.1603600352122435, 0.15091718255813988, 0.15000815589886596] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 1, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 5, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26720503088021963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26720503088021963, 0.18938308246306612] ***
*** starting iteration: 2; err: [Inf, 0.26720503088021963, 0.18938308246306612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26720503088021963, 0.18938308246306612, 0.1789294001101205] ***
*** starting iteration: 3; err: [Inf, 0.26720503088021963, 0.18938308246306612, 0.1789294001101205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26720503088021963, 0.18938308246306612, 0.1789294001101205, 0.1783484476401146] ***
*** finished computation of 7 references, err: [Inf, 0.26720503088021963, 0.18938308246306612, 0.1789294001101205, 0.1783484476401146] ***
*** center 1: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 3]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 24), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 22]]
** centroid: 4, normalized-entropy: 0.5293608652873645, [(2, 3), (3, 22)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.58909999579701] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.58909999579701, 0.5391429570692605] ***
*** finished computation of 3 references, err: [Inf, 1.58909999579701, 0.5391429570692605] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 11]]
** centroid: 3, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4281000027080668] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4281000027080668, 0.5086708210859845] ***
*** finished computation of 3 references, err: [Inf, 1.4281000027080668, 0.5086708210859845] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 11]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7529999957377476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7529999957377476, 0.7013464557155042] ***
*** finished computation of 3 references, err: [Inf, 1.7529999957377476, 0.7013464557155042] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 21]]
** centroid: 1, normalized-entropy: 0.9593160320543779, [(2, 34), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [28, 2, 0]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(1, 28), (2, 2)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.4842000476295705] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.4842000476295705, 0.761820317337376] ***
*** starting iteration: 2; err: [Inf, 2.4842000476295705, 0.761820317337376] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.4842000476295705, 0.761820317337376, 0.5268553589948048] ***
*** starting iteration: 3; err: [Inf, 2.4842000476295705, 0.761820317337376, 0.5268553589948048] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.4842000476295705, 0.761820317337376, 0.5268553589948048, 0.5002309401686502] ***
*** starting iteration: 4; err: [Inf, 2.4842000476295705, 0.761820317337376, 0.5268553589948048, 0.5002309401686502] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.4842000476295705, 0.761820317337376, 0.5268553589948048, 0.5002309401686502, 0.4963266466591331] ***
*** starting iteration: 5; err: [Inf, 2.4842000476295705, 0.761820317337376, 0.5268553589948048, 0.5002309401686502, 0.4963266466591331] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.4842000476295705, 0.761820317337376, 0.5268553589948048, 0.5002309401686502, 0.4963266466591331, 0.4952550116229041] ***
*** starting iteration: 6; err: [Inf, 2.4842000476295705, 0.761820317337376, 0.5268553589948048, 0.5002309401686502, 0.4963266466591331, 0.4952550116229041] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.4842000476295705, 0.761820317337376, 0.5268553589948048, 0.5002309401686502, 0.4963266466591331, 0.4952550116229041, 0.49436584054153443] ***
*** finished computation of 3 references, err: [Inf, 2.4842000476295705, 0.761820317337376, 0.5268553589948048, 0.5002309401686502, 0.4963266466591331, 0.4952550116229041, 0.49436584054153443] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 27]]
** centroid: 1, normalized-entropy: 0.625262405223423, [(2, 5), (3, 27)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 3]]
** centroid: 2, normalized-entropy: 0.44886448872302936, [(2, 29), (3, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.3707000289595452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.3707000289595452, 1.2313642675867174] ***
*** starting iteration: 2; err: [Inf, 3.3707000289595452, 1.2313642675867174] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.3707000289595452, 1.2313642675867174, 0.7145199712108372] ***
*** starting iteration: 3; err: [Inf, 3.3707000289595452, 1.2313642675867174, 0.7145199712108372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.3707000289595452, 1.2313642675867174, 0.7145199712108372, 0.5896556848537918] ***
*** starting iteration: 4; err: [Inf, 3.3707000289595452, 1.2313642675867174, 0.7145199712108372, 0.5896556848537918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.3707000289595452, 1.2313642675867174, 0.7145199712108372, 0.5896556848537918, 0.5479194512650559] ***
*** starting iteration: 5; err: [Inf, 3.3707000289595452, 1.2313642675867174, 0.7145199712108372, 0.5896556848537918, 0.5479194512650559] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.3707000289595452, 1.2313642675867174, 0.7145199712108372, 0.5896556848537918, 0.5479194512650559, 0.5426919672420989] ***
*** starting iteration: 6; err: [Inf, 3.3707000289595452, 1.2313642675867174, 0.7145199712108372, 0.5896556848537918, 0.5479194512650559, 0.5426919672420989] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.3707000289595452, 1.2313642675867174, 0.7145199712108372, 0.5896556848537918, 0.5479194512650559, 0.5426919672420989, 0.5417886346437829] ***
*** finished computation of 3 references, err: [Inf, 3.3707000289595452, 1.2313642675867174, 0.7145199712108372, 0.5896556848537918, 0.5479194512650559, 0.5426919672420989, 0.5417886346437829] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 8]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 28]]
*** center 3: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.42895597811358294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42895597811358294, 0.23709143826298443] ***
*** starting iteration: 2; err: [Inf, 0.42895597811358294, 0.23709143826298443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42895597811358294, 0.23709143826298443, 0.17611945258001735] ***
*** starting iteration: 3; err: [Inf, 0.42895597811358294, 0.23709143826298443, 0.17611945258001735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42895597811358294, 0.23709143826298443, 0.17611945258001735, 0.1678169952018062] ***
*** finished computation of 7 references, err: [Inf, 0.42895597811358294, 0.23709143826298443, 0.17611945258001735, 0.1678169952018062] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 11]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 4, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5493545932865743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5493545932865743, 0.22290487028068856] ***
*** starting iteration: 2; err: [Inf, 0.5493545932865743, 0.22290487028068856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5493545932865743, 0.22290487028068856, 0.21293469019049016] ***
*** starting iteration: 3; err: [Inf, 0.5493545932865743, 0.22290487028068856, 0.21293469019049016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5493545932865743, 0.22290487028068856, 0.21293469019049016, 0.20796609716328035] ***
*** finished computation of 7 references, err: [Inf, 0.5493545932865743, 0.22290487028068856, 0.21293469019049016, 0.20796609716328035] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 7, 7]]
** centroid: 4, normalized-entropy: 1.0, [(2, 7), (3, 7)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 4, 11]]
** centroid: 6, normalized-entropy: 0.8366407419411671, [(2, 4), (3, 11)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3837329769540227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3837329769540227, 0.26156725823115917] ***
*** starting iteration: 2; err: [Inf, 0.3837329769540227, 0.26156725823115917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3837329769540227, 0.26156725823115917, 0.2328503876238972] ***
*** starting iteration: 3; err: [Inf, 0.3837329769540227, 0.26156725823115917, 0.2328503876238972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3837329769540227, 0.26156725823115917, 0.2328503876238972, 0.22633601249906163] ***
*** finished computation of 7 references, err: [Inf, 0.3837329769540227, 0.26156725823115917, 0.2328503876238972, 0.22633601249906163] ***
*** center 1: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 16]]
** centroid: 3, normalized-entropy: 0.9967916319816367, [(2, 14), (3, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.950699975981738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.950699975981738, 0.43257231775392235] ***
*** starting iteration: 2; err: [Inf, 4.950699975981738, 0.43257231775392235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.950699975981738, 0.43257231775392235, 0.3099062557843273] ***
*** starting iteration: 3; err: [Inf, 4.950699975981738, 0.43257231775392235, 0.3099062557843273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.950699975981738, 0.43257231775392235, 0.3099062557843273, 0.28390973717669665] ***
*** starting iteration: 4; err: [Inf, 4.950699975981738, 0.43257231775392235, 0.3099062557843273, 0.28390973717669665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.950699975981738, 0.43257231775392235, 0.3099062557843273, 0.28390973717669665, 0.2744421680016573] ***
*** starting iteration: 5; err: [Inf, 4.950699975981738, 0.43257231775392235, 0.3099062557843273, 0.28390973717669665, 0.2744421680016573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.950699975981738, 0.43257231775392235, 0.3099062557843273, 0.28390973717669665, 0.2744421680016573, 0.27057046919908234] ***
*** starting iteration: 6; err: [Inf, 4.950699975981738, 0.43257231775392235, 0.3099062557843273, 0.28390973717669665, 0.2744421680016573, 0.27057046919908234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.950699975981738, 0.43257231775392235, 0.3099062557843273, 0.28390973717669665, 0.2744421680016573, 0.27057046919908234, 0.2695852721337235] ***
*** finished computation of 7 references, err: [Inf, 4.950699975981738, 0.43257231775392235, 0.3099062557843273, 0.28390973717669665, 0.2744421680016573, 0.27057046919908234, 0.2695852721337235] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 6, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5993999961228406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5993999961228406, 0.34800275262348535] ***
*** starting iteration: 2; err: [Inf, 0.5993999961228406, 0.34800275262348535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5993999961228406, 0.34800275262348535, 0.2756069976056127] ***
*** starting iteration: 3; err: [Inf, 0.5993999961228406, 0.34800275262348535, 0.2756069976056127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5993999961228406, 0.34800275262348535, 0.2756069976056127, 0.25091282514105034] ***
*** starting iteration: 4; err: [Inf, 0.5993999961228406, 0.34800275262348535, 0.2756069976056127, 0.25091282514105034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5993999961228406, 0.34800275262348535, 0.2756069976056127, 0.25091282514105034, 0.24461493416150643] ***
*** starting iteration: 5; err: [Inf, 0.5993999961228406, 0.34800275262348535, 0.2756069976056127, 0.25091282514105034, 0.24461493416150643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5993999961228406, 0.34800275262348535, 0.2756069976056127, 0.25091282514105034, 0.24461493416150643, 0.24300341950428916] ***
*** starting iteration: 6; err: [Inf, 0.5993999961228406, 0.34800275262348535, 0.2756069976056127, 0.25091282514105034, 0.24461493416150643, 0.24300341950428916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5993999961228406, 0.34800275262348535, 0.2756069976056127, 0.25091282514105034, 0.24461493416150643, 0.24300341950428916, 0.2408820108282267] ***
*** starting iteration: 7; err: [Inf, 0.5993999961228406, 0.34800275262348535, 0.2756069976056127, 0.25091282514105034, 0.24461493416150643, 0.24300341950428916, 0.2408820108282267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5993999961228406, 0.34800275262348535, 0.2756069976056127, 0.25091282514105034, 0.24461493416150643, 0.24300341950428916, 0.2408820108282267, 0.2408820108282267] ***
*** finished computation of 7 references, err: [Inf, 0.5993999961228406, 0.34800275262348535, 0.2756069976056127, 0.25091282514105034, 0.24461493416150643, 0.24300341950428916, 0.2408820108282267, 0.2408820108282267] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 11]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(2, 4), (3, 11)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4978000033696249] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4978000033696249, 0.27167728096665217] ***
*** starting iteration: 2; err: [Inf, 0.4978000033696249, 0.27167728096665217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4978000033696249, 0.27167728096665217, 0.2478288151275442] ***
*** starting iteration: 3; err: [Inf, 0.4978000033696249, 0.27167728096665217, 0.2478288151275442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4978000033696249, 0.27167728096665217, 0.2478288151275442, 0.24277143554774652] ***
*** starting iteration: 4; err: [Inf, 0.4978000033696249, 0.27167728096665217, 0.2478288151275442, 0.24277143554774652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4978000033696249, 0.27167728096665217, 0.2478288151275442, 0.24277143554774652, 0.24127585374929367] ***
*** starting iteration: 5; err: [Inf, 0.4978000033696249, 0.27167728096665217, 0.2478288151275442, 0.24277143554774652, 0.24127585374929367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4978000033696249, 0.27167728096665217, 0.2478288151275442, 0.24277143554774652, 0.24127585374929367, 0.24127585374929367] ***
*** finished computation of 7 references, err: [Inf, 0.4978000033696249, 0.27167728096665217, 0.2478288151275442, 0.24277143554774652, 0.24127585374929367, 0.24127585374929367] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 4]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.028500015358473] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.028500015358473, 0.9029158393241957] ***
*** starting iteration: 2; err: [Inf, 3.028500015358473, 0.9029158393241957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.028500015358473, 0.9029158393241957, 0.6195354855449546] ***
*** starting iteration: 3; err: [Inf, 3.028500015358473, 0.9029158393241957, 0.6195354855449546] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.028500015358473, 0.9029158393241957, 0.6195354855449546, 0.5724780395936393] ***
*** finished computation of 3 references, err: [Inf, 3.028500015358473, 0.9029158393241957, 0.6195354855449546, 0.5724780395936393] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 15]]
** centroid: 2, normalized-entropy: 0.9256859869821296, [(2, 29), (3, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6447000031727425] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6447000031727425, 0.49557443579853483] ***
*** starting iteration: 2; err: [Inf, 0.6447000031727425, 0.49557443579853483] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6447000031727425, 0.49557443579853483, 0.4908170275156506] ***
*** starting iteration: 3; err: [Inf, 0.6447000031727425, 0.49557443579853483, 0.4908170275156506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6447000031727425, 0.49557443579853483, 0.4908170275156506, 0.4908170275156506] ***
*** finished computation of 3 references, err: [Inf, 0.6447000031727425, 0.49557443579853483, 0.4908170275156506, 0.4908170275156506] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 29]]
** centroid: 1, normalized-entropy: 0.9103480624345157, [(2, 14), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2435000154325955] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2435000154325955, 1.1378539528398335] ***
*** starting iteration: 2; err: [Inf, 1.2435000154325955, 1.1378539528398335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2435000154325955, 1.1378539528398335, 1.1378539528398335] ***
*** finished computation of 3 references, err: [Inf, 1.2435000154325955, 1.1378539528398335, 1.1378539528398335] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 36]]
** centroid: 1, normalized-entropy: 0.9994110647387552, [(2, 34), (3, 36)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [24, 2, 0]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(1, 24), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.775100269532652] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.775100269532652, 0.4281331303908067] ***
*** finished computation of 3 references, err: [Inf, 2.775100269532652, 0.4281331303908067] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 10]]
** centroid: 3, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.8469728617898586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8469728617898586, 0.6244834798552142] ***
*** finished computation of 3 references, err: [Inf, 3.8469728617898586, 0.6244834798552142] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [36, 2, 0]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(1, 36), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 8, 25]]
** centroid: 2, normalized-entropy: 0.7990485210442682, [(2, 8), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 24, 5]]
** centroid: 3, normalized-entropy: 0.6631968402398286, [(2, 24), (3, 5)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8932365702601726] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8932365702601726, 0.38646412983473893] ***
*** finished computation of 3 references, err: [Inf, 1.8932365702601726, 0.38646412983473893] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 7]]
** centroid: 1, normalized-entropy: 0.6593758812786991, [(2, 34), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 29]]
** centroid: 3, normalized-entropy: 0.3451173149449528, [(2, 2), (3, 29)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.33945016011694146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33945016011694146, 0.20788743444503133] ***
*** starting iteration: 2; err: [Inf, 0.33945016011694146, 0.20788743444503133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33945016011694146, 0.20788743444503133, 0.19415416865867777] ***
*** starting iteration: 3; err: [Inf, 0.33945016011694146, 0.20788743444503133, 0.19415416865867777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33945016011694146, 0.20788743444503133, 0.19415416865867777, 0.1883519222685237] ***
*** starting iteration: 4; err: [Inf, 0.33945016011694146, 0.20788743444503133, 0.19415416865867777, 0.1883519222685237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33945016011694146, 0.20788743444503133, 0.19415416865867777, 0.1883519222685237, 0.18799085076550248] ***
*** finished computation of 7 references, err: [Inf, 0.33945016011694146, 0.20788743444503133, 0.19415416865867777, 0.1883519222685237, 0.18799085076550248] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5050752151505881] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5050752151505881, 0.29715722194823696] ***
*** starting iteration: 2; err: [Inf, 0.5050752151505881, 0.29715722194823696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356] ***
*** starting iteration: 3; err: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356, 0.22895417848958494] ***
*** starting iteration: 4; err: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356, 0.22895417848958494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356, 0.22895417848958494, 0.20990286991889054] ***
*** starting iteration: 5; err: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356, 0.22895417848958494, 0.20990286991889054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356, 0.22895417848958494, 0.20990286991889054, 0.1991816776113769] ***
*** starting iteration: 6; err: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356, 0.22895417848958494, 0.20990286991889054, 0.1991816776113769] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356, 0.22895417848958494, 0.20990286991889054, 0.1991816776113769, 0.1890548943885773] ***
*** starting iteration: 7; err: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356, 0.22895417848958494, 0.20990286991889054, 0.1991816776113769, 0.1890548943885773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356, 0.22895417848958494, 0.20990286991889054, 0.1991816776113769, 0.1890548943885773, 0.1796534278307546] ***
*** starting iteration: 8; err: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356, 0.22895417848958494, 0.20990286991889054, 0.1991816776113769, 0.1890548943885773, 0.1796534278307546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356, 0.22895417848958494, 0.20990286991889054, 0.1991816776113769, 0.1890548943885773, 0.1796534278307546, 0.17781587418177217] ***
*** starting iteration: 9; err: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356, 0.22895417848958494, 0.20990286991889054, 0.1991816776113769, 0.1890548943885773, 0.1796534278307546, 0.17781587418177217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356, 0.22895417848958494, 0.20990286991889054, 0.1991816776113769, 0.1890548943885773, 0.1796534278307546, 0.17781587418177217, 0.1771276811278226] ***
*** finished computation of 7 references, err: [Inf, 0.5050752151505881, 0.29715722194823696, 0.2473413886405356, 0.22895417848958494, 0.20990286991889054, 0.1991816776113769, 0.1890548943885773, 0.1796534278307546, 0.17781587418177217, 0.1771276811278226] ***
*** center 1: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 11]]
** centroid: 2, normalized-entropy: 0.9666186325481027, [(2, 17), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 4, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3610325231867488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3610325231867488, 0.17011147265834606] ***
*** starting iteration: 2; err: [Inf, 0.3610325231867488, 0.17011147265834606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3610325231867488, 0.17011147265834606, 0.16359732719727568] ***
*** starting iteration: 3; err: [Inf, 0.3610325231867488, 0.17011147265834606, 0.16359732719727568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3610325231867488, 0.17011147265834606, 0.16359732719727568, 0.163019519954498] ***
*** finished computation of 7 references, err: [Inf, 0.3610325231867488, 0.17011147265834606, 0.16359732719727568, 0.163019519954498] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 2]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 5]]
** centroid: 6, normalized-entropy: 0.8960382325345574, [(2, 11), (3, 5)]
*** center 7: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 5.664400035455915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.664400035455915, 1.6006584504798167] ***
*** starting iteration: 2; err: [Inf, 5.664400035455915, 1.6006584504798167] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.664400035455915, 1.6006584504798167, 0.8409994339505282] ***
*** starting iteration: 3; err: [Inf, 5.664400035455915, 1.6006584504798167, 0.8409994339505282] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.664400035455915, 1.6006584504798167, 0.8409994339505282, 0.6083235152302061] ***
*** finished computation of 3 references, err: [Inf, 5.664400035455915, 1.6006584504798167, 0.8409994339505282, 0.6083235152302061] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [36, 1, 0]]
** centroid: 1, normalized-entropy: 0.1792560669283214, [(1, 36), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 18]]
** centroid: 2, normalized-entropy: 0.9601186626422924, [(2, 29), (3, 18)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9245000086283727] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9245000086283727, 0.5116734079891256] ***
*** starting iteration: 2; err: [Inf, 0.9245000086283727, 0.5116734079891256] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9245000086283727, 0.5116734079891256, 0.4938866944738173] ***
*** starting iteration: 3; err: [Inf, 0.9245000086283727, 0.5116734079891256, 0.4938866944738173] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9245000086283727, 0.5116734079891256, 0.4938866944738173, 0.4931554359605555] ***
*** finished computation of 3 references, err: [Inf, 0.9245000086283727, 0.5116734079891256, 0.4938866944738173, 0.4931554359605555] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 28]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 7), (3, 28)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 2]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1411000011268746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1411000011268746, 0.7310801114361166] ***
*** starting iteration: 2; err: [Inf, 1.1411000011268746, 0.7310801114361166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1411000011268746, 0.7310801114361166, 0.6097688657151599] ***
*** starting iteration: 3; err: [Inf, 1.1411000011268746, 0.7310801114361166, 0.6097688657151599] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1411000011268746, 0.7310801114361166, 0.6097688657151599, 0.5838578606642925] ***
*** finished computation of 3 references, err: [Inf, 1.1411000011268746, 0.7310801114361166, 0.6097688657151599, 0.5838578606642925] ***
*** center 1: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 1]]
** centroid: 2, normalized-entropy: 0.2006223243127146, [(2, 31), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 35]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 5), (3, 35)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5457999944656475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5457999944656475, 0.33625898129841003] ***
*** finished computation of 7 references, err: [Inf, 0.5457999944656475, 0.33625898129841003] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 6]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 7, 3]]
** centroid: 4, normalized-entropy: 0.8812908992306927, [(2, 7), (3, 3)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.4355000063646206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.4355000063646206, 0.38957438151251866] ***
*** finished computation of 7 references, err: [Inf, 2.4355000063646206, 0.38957438151251866] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 5, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46719999685838703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46719999685838703, 0.2710422358161945] ***
*** finished computation of 7 references, err: [Inf, 0.46719999685838703, 0.2710422358161945] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 5]]
** centroid: 1, normalized-entropy: 0.954434002924965, [(2, 3), (3, 5)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 3]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 15), (3, 3)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 5.147399970872468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.147399970872468, 0.6617247144753113] ***
*** starting iteration: 2; err: [Inf, 5.147399970872468, 0.6617247144753113] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.147399970872468, 0.6617247144753113, 0.5359403946327701] ***
*** starting iteration: 3; err: [Inf, 5.147399970872468, 0.6617247144753113, 0.5359403946327701] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.147399970872468, 0.6617247144753113, 0.5359403946327701, 0.5185423648922238] ***
*** finished computation of 3 references, err: [Inf, 5.147399970872468, 0.6617247144753113, 0.5359403946327701, 0.5185423648922238] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 9]]
** centroid: 1, normalized-entropy: 0.8003922080453356, [(2, 28), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.9832000226869917] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9832000226869917, 0.5069681418789004] ***
*** starting iteration: 2; err: [Inf, 1.9832000226869917, 0.5069681418789004] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9832000226869917, 0.5069681418789004, 0.4907199927260295] ***
*** starting iteration: 3; err: [Inf, 1.9832000226869917, 0.5069681418789004, 0.4907199927260295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9832000226869917, 0.5069681418789004, 0.4907199927260295, 0.4907199927260295] ***
*** finished computation of 3 references, err: [Inf, 1.9832000226869917, 0.5069681418789004, 0.4907199927260295, 0.4907199927260295] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 11, 29]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(2, 11), (3, 29)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.226400004428629] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.226400004428629, 1.4663789111559469] ***
*** starting iteration: 2; err: [Inf, 4.226400004428629, 1.4663789111559469] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.226400004428629, 1.4663789111559469, 0.609701358104028] ***
*** starting iteration: 3; err: [Inf, 4.226400004428629, 1.4663789111559469, 0.609701358104028] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.226400004428629, 1.4663789111559469, 0.609701358104028, 0.5449938050669304] ***
*** finished computation of 3 references, err: [Inf, 4.226400004428629, 1.4663789111559469, 0.609701358104028, 0.5449938050669304] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 9]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 27]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1390031376607594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1390031376607594, 0.3849064931260092] ***
*** starting iteration: 2; err: [Inf, 1.1390031376607594, 0.3849064931260092] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1390031376607594, 0.3849064931260092, 0.37317326524871847] ***
*** starting iteration: 3; err: [Inf, 1.1390031376607594, 0.3849064931260092, 0.37317326524871847] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1390031376607594, 0.3849064931260092, 0.37317326524871847, 0.36912540334464394] ***
*** finished computation of 3 references, err: [Inf, 1.1390031376607594, 0.3849064931260092, 0.37317326524871847, 0.36912540334464394] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 9]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7557251052565316] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7557251052565316, 0.3872572106903624] ***
*** starting iteration: 2; err: [Inf, 0.7557251052565316, 0.3872572106903624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7557251052565316, 0.3872572106903624, 0.3606506517302755] ***
*** starting iteration: 3; err: [Inf, 0.7557251052565316, 0.3872572106903624, 0.3606506517302755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7557251052565316, 0.3872572106903624, 0.3606506517302755, 0.3539890425486516] ***
*** finished computation of 3 references, err: [Inf, 0.7557251052565316, 0.3872572106903624, 0.3606506517302755, 0.3539890425486516] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 20]]
** centroid: 3, normalized-entropy: 0.5586293734521991, [(2, 3), (3, 20)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7543048023987212] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7543048023987212, 0.400675105318532] ***
*** starting iteration: 2; err: [Inf, 0.7543048023987212, 0.400675105318532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7543048023987212, 0.400675105318532, 0.38197735908118186] ***
*** starting iteration: 3; err: [Inf, 0.7543048023987212, 0.400675105318532, 0.38197735908118186] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7543048023987212, 0.400675105318532, 0.38197735908118186, 0.37329958314179434] ***
*** finished computation of 3 references, err: [Inf, 0.7543048023987212, 0.400675105318532, 0.38197735908118186, 0.37329958314179434] ***
*** center 1: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 28]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 36, 8]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.380766870385947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.380766870385947, 0.19260825404078952] ***
*** starting iteration: 2; err: [Inf, 0.380766870385947, 0.19260825404078952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.380766870385947, 0.19260825404078952, 0.18186326250408993] ***
*** starting iteration: 3; err: [Inf, 0.380766870385947, 0.19260825404078952, 0.18186326250408993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.380766870385947, 0.19260825404078952, 0.18186326250408993, 0.18098905954083286] ***
*** finished computation of 7 references, err: [Inf, 0.380766870385947, 0.19260825404078952, 0.18186326250408993, 0.18098905954083286] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 3]]
** centroid: 4, normalized-entropy: 0.6722948170756378, [(2, 14), (3, 3)]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 6, normalized-entropy: 0.2761954276479391, [(2, 1), (3, 20)]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4074798709575718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4074798709575718, 0.17478377996718147] ***
*** starting iteration: 2; err: [Inf, 0.4074798709575718, 0.17478377996718147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4074798709575718, 0.17478377996718147, 0.15569190381930054] ***
*** starting iteration: 3; err: [Inf, 0.4074798709575718, 0.17478377996718147, 0.15569190381930054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4074798709575718, 0.17478377996718147, 0.15569190381930054, 0.15058708060521256] ***
*** finished computation of 7 references, err: [Inf, 0.4074798709575718, 0.17478377996718147, 0.15569190381930054, 0.15058708060521256] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 1, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 6, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35953884389423424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35953884389423424, 0.17914646931102873] ***
*** starting iteration: 2; err: [Inf, 0.35953884389423424, 0.17914646931102873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35953884389423424, 0.17914646931102873, 0.1730228441400127] ***
*** starting iteration: 3; err: [Inf, 0.35953884389423424, 0.17914646931102873, 0.1730228441400127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35953884389423424, 0.17914646931102873, 0.1730228441400127, 0.16463532214915397] ***
*** finished computation of 7 references, err: [Inf, 0.35953884389423424, 0.17914646931102873, 0.1730228441400127, 0.16463532214915397] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6485999999485209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6485999999485209, 0.31843366726584454] ***
*** finished computation of 7 references, err: [Inf, 0.6485999999485209, 0.31843366726584454] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 23, 9]]
** centroid: 1, normalized-entropy: 0.8571484374283717, [(2, 23), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 18]]
** centroid: 4, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48340000084315277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48340000084315277, 0.22035137837269406] ***
*** finished computation of 7 references, err: [Inf, 0.48340000084315277, 0.22035137837269406] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 5, 10]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 5), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49300000390943965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49300000390943965, 0.27036338869319015] ***
*** finished computation of 7 references, err: [Inf, 0.49300000390943965, 0.27036338869319015] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 23]]
** centroid: 1, normalized-entropy: 0.6769418697808861, [(2, 5), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 23, 2]]
** centroid: 6, normalized-entropy: 0.4021791902022729, [(2, 23), (3, 2)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6242000032912484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6242000032912484, 0.2998993802778025] ***
*** finished computation of 7 references, err: [Inf, 0.6242000032912484, 0.2998993802778025] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 9]]
** centroid: 1, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5856000049239612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5856000049239612, 0.2201260906561567] ***
*** finished computation of 7 references, err: [Inf, 0.5856000049239612, 0.2201260906561567] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 5, 10]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 5), (3, 10)]
*** center 5: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4751999999923693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4751999999923693, 0.25005159825466816] ***
*** finished computation of 7 references, err: [Inf, 0.4751999999923693, 0.25005159825466816] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 25, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 15]]
*** center 5: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 4, 11]]
** centroid: 6, normalized-entropy: 0.8366407419411671, [(2, 4), (3, 11)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.8933333333333332, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 15
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.8933333333333332, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 16
iteration 3 finished
*** starting iteration: 1; err: [Inf, 4.104738568237324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.104738568237324, 0.55971329774767] ***
*** starting iteration: 2; err: [Inf, 4.104738568237324, 0.55971329774767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.104738568237324, 0.55971329774767, 0.22084115088483947] ***
*** starting iteration: 3; err: [Inf, 4.104738568237324, 0.55971329774767, 0.22084115088483947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.104738568237324, 0.55971329774767, 0.22084115088483947, 0.2143760022580375] ***
*** starting iteration: 4; err: [Inf, 4.104738568237324, 0.55971329774767, 0.22084115088483947, 0.2143760022580375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.104738568237324, 0.55971329774767, 0.22084115088483947, 0.2143760022580375, 0.21195658986485202] ***
*** starting iteration: 5; err: [Inf, 4.104738568237324, 0.55971329774767, 0.22084115088483947, 0.2143760022580375, 0.21195658986485202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.104738568237324, 0.55971329774767, 0.22084115088483947, 0.2143760022580375, 0.21195658986485202, 0.21068235817290445] ***
*** starting iteration: 6; err: [Inf, 4.104738568237324, 0.55971329774767, 0.22084115088483947, 0.2143760022580375, 0.21195658986485202, 0.21068235817290445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.104738568237324, 0.55971329774767, 0.22084115088483947, 0.2143760022580375, 0.21195658986485202, 0.21068235817290445, 0.20981018299287096] ***
*** finished computation of 7 references, err: [Inf, 4.104738568237324, 0.55971329774767, 0.22084115088483947, 0.2143760022580375, 0.21195658986485202, 0.21068235817290445, 0.20981018299287096] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 2, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 5]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 2), (3, 5)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.713661452030639] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.713661452030639, 0.49511107093769013] ***
*** starting iteration: 2; err: [Inf, 2.713661452030639, 0.49511107093769013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.713661452030639, 0.49511107093769013, 0.26913496970175993] ***
*** starting iteration: 3; err: [Inf, 2.713661452030639, 0.49511107093769013, 0.26913496970175993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.713661452030639, 0.49511107093769013, 0.26913496970175993, 0.2057672225855704] ***
*** starting iteration: 4; err: [Inf, 2.713661452030639, 0.49511107093769013, 0.26913496970175993, 0.2057672225855704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.713661452030639, 0.49511107093769013, 0.26913496970175993, 0.2057672225855704, 0.18428116569888497] ***
*** starting iteration: 5; err: [Inf, 2.713661452030639, 0.49511107093769013, 0.26913496970175993, 0.2057672225855704, 0.18428116569888497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.713661452030639, 0.49511107093769013, 0.26913496970175993, 0.2057672225855704, 0.18428116569888497, 0.18245120258265016] ***
*** starting iteration: 6; err: [Inf, 2.713661452030639, 0.49511107093769013, 0.26913496970175993, 0.2057672225855704, 0.18428116569888497, 0.18245120258265016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.713661452030639, 0.49511107093769013, 0.26913496970175993, 0.2057672225855704, 0.18428116569888497, 0.18245120258265016, 0.18011013399704479] ***
*** starting iteration: 7; err: [Inf, 2.713661452030639, 0.49511107093769013, 0.26913496970175993, 0.2057672225855704, 0.18428116569888497, 0.18245120258265016, 0.18011013399704479] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.713661452030639, 0.49511107093769013, 0.26913496970175993, 0.2057672225855704, 0.18428116569888497, 0.18245120258265016, 0.18011013399704479, 0.1793258619971388] ***
*** finished computation of 7 references, err: [Inf, 2.713661452030639, 0.49511107093769013, 0.26913496970175993, 0.2057672225855704, 0.18428116569888497, 0.18245120258265016, 0.18011013399704479, 0.1793258619971388] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 8, 9]]
** centroid: 7, normalized-entropy: 0.9975025463691153, [(2, 8), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8653437872122121] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8653437872122121, 0.38134710837388025] ***
*** starting iteration: 2; err: [Inf, 0.8653437872122121, 0.38134710837388025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8653437872122121, 0.38134710837388025, 0.30327027939916723] ***
*** starting iteration: 3; err: [Inf, 0.8653437872122121, 0.38134710837388025, 0.30327027939916723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8653437872122121, 0.38134710837388025, 0.30327027939916723, 0.22279036123347332] ***
*** starting iteration: 4; err: [Inf, 0.8653437872122121, 0.38134710837388025, 0.30327027939916723, 0.22279036123347332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8653437872122121, 0.38134710837388025, 0.30327027939916723, 0.22279036123347332, 0.18715682176932194] ***
*** starting iteration: 5; err: [Inf, 0.8653437872122121, 0.38134710837388025, 0.30327027939916723, 0.22279036123347332, 0.18715682176932194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8653437872122121, 0.38134710837388025, 0.30327027939916723, 0.22279036123347332, 0.18715682176932194, 0.17922070508388102] ***
*** starting iteration: 6; err: [Inf, 0.8653437872122121, 0.38134710837388025, 0.30327027939916723, 0.22279036123347332, 0.18715682176932194, 0.17922070508388102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8653437872122121, 0.38134710837388025, 0.30327027939916723, 0.22279036123347332, 0.18715682176932194, 0.17922070508388102, 0.17678034550529034] ***
*** starting iteration: 7; err: [Inf, 0.8653437872122121, 0.38134710837388025, 0.30327027939916723, 0.22279036123347332, 0.18715682176932194, 0.17922070508388102, 0.17678034550529034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8653437872122121, 0.38134710837388025, 0.30327027939916723, 0.22279036123347332, 0.18715682176932194, 0.17922070508388102, 0.17678034550529034, 0.17602829172782722] ***
*** finished computation of 7 references, err: [Inf, 0.8653437872122121, 0.38134710837388025, 0.30327027939916723, 0.22279036123347332, 0.18715682176932194, 0.17922070508388102, 0.17678034550529034, 0.17602829172782722] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 21, 5]]
** centroid: 2, normalized-entropy: 0.7062740891876008, [(2, 21), (3, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 20]]
** centroid: 6, normalized-entropy: 0.5586293734521991, [(2, 3), (3, 20)]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.8933333333333332, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 16
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.8933333333333332, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 16
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.8933333333333332, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 16
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.8933333333333332, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 16
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.8933333333333332, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 16
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.8933333333333332, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 16
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.069565217391304, 2.747826086956522, 4.3999999999999995, 1.3521739130434782], [5.777777777777777, 2.6777777777777776, 4.933333333333334, 1.8222222222222224], [5.012121212121212, 3.454545454545455, 1.4424242424242422, 0.2515151515151515], [7.540000000000001, 2.82, 6.5200000000000005, 2.0199999999999996], [6.800000000000001, 3.05, 4.95, 1.6], [6.5888888888888895, 3.0611111111111113, 5.561111111111113, 2.066666666666666], [7.550000000000001, 3.7, 6.25, 2.25], [4.633333333333334, 2.733333333333333, 1.4333333333333336, 0.2333333333333333], [5.05, 2.25, 3.25, 1.05]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 3, 3, 1, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.521052631578947, 2.6315789473684212, 3.9421052631578943, 1.2368421052631582], [7.533333333333334, 3.3333333333333335, 6.266666666666667, 2.1], [4.917857142857142, 3.2785714285714285, 1.4464285714285712, 0.2321428571428572], [6.41578947368421, 3.0894736842105264, 5.5052631578947375, 2.142105263157894], [5.5, 3.9749999999999996, 1.45, 0.25], [6.572727272727272, 3.063636363636364, 4.636363636363637, 1.4727272727272729], [6.04, 2.7800000000000002, 4.720000000000001, 1.56], [6.029999999999999, 2.7299999999999995, 4.99, 1.8400000000000003]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 1, 2, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.62, 2.98, 4.76, 1.48], [6.465217391304349, 2.9347826086956528, 5.343478260869565, 2.039130434782608], [4.855000000000002, 3.2299999999999995, 1.48, 0.23500000000000001], [5.283333333333334, 2.3666666666666667, 3.533333333333333, 1.0166666666666666], [7.566666666666667, 2.85, 6.449999999999999, 2.066666666666667], [5.3125, 3.9250000000000003, 1.5999999999999999, 0.275], [5.908695652173913, 2.860869565217391, 4.321739130434784, 1.3391304347826085], [5.85, 2.75, 4.9, 1.9], [7.6000000000000005, 3.733333333333333, 6.400000000000001, 2.2333333333333334]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3, 1, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[70, 1, 1, 1, 13, 26, 17, 17, 4, 27, 33, 45, 24, 20, 23, 22, 1, 35, 36, 44, 1, 26, 33, 37, 13, 43, 42, 11, 20, 38, 32, 18, 21, 27, 5, 55, 12, 30, 31, 40, 43, 9, 32, 2, 45, 36, 24, 36, 45, 23, 52, 43, 15, 1, 33, 40, 27, 34, 38, 21, 28, 20, 27, 31, 27, 18, 23, 46, 35, 34, 47, 38, 41, 32, 50, 39, 38, 34, 3, 17, 19, 42, 36, 38, 41, 33, 26, 37, 29, 22, 24, 29, 27, 26, 25, 24, 27, 39, 33, 34, 32, 33, 32, 27, 29, 40, 44, 1, 22, 9, 32, 24, 26, 42, 32, 36, 44, 15, 45, 23, 32, 28, 33, 22, 30, 39, 46, 35, 39, 28, 29, 38, 20, 45, 29, 84, 34, 1, 35, 28, 38, 5, 25, 12, 9, 34, 38, 45, 73, 96, 35, 36, 1, 49, 34, 38, 58, 28, 36, 47, 39, 36, 29, 40, 30, 52, 49, 20, 32, 44, 38, 44, 21, 29, 41, 11, 36, 26, 25, 33, 51, 25, 5, 46, 26, 35, 20, 33, 28, 20, 32, 34, 43, 39, 60, 39, 57, 59, 44, 29, 43, 33, 40, 56, 37, 33, 50, 18, 20, 37, 48, 37, 49, 34, 56, 26, 1, 31, 21, 38, 34, 40, 27, 31, 29, 29, 38, 10, 36, 38, 46, 64, 28, 23, 32, 48, 63, 53, 40, 42, 65, 44, 36, 20, 51, 42, 51, 37, 45, 24, 52, 74, 46, 30, 42, 29, 41, 24, 27, 24, 52, 39, 36, 36, 32, 24, 48, 9, 34, 34, 22, 44, 63, 39, 55, 28, 25, 40, 55, 44, 77, 50, 33, 45, 30, 27, 40, 60, 26, 28, 40, 39, 32, 47, 16, 31, 7, 44, 37, 36]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6100000000000001, speedup = 0.6223010543698259, eval_ratio = 0.041986)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.37326388888888906,"recall":0.37326388888888906,"f1":null,"seconds":6.547011435031891e-5,"exhaustive_search_seconds":0.00040300004184246063,"evaluations":339.078125,"distances_sum":1774.6299459777026}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5468750000000003,"recall":0.5468750000000003,"f1":null,"seconds":9.653531014919281e-5,"exhaustive_search_seconds":0.00040300004184246063,"evaluations":378.0234375,"distances_sum":1648.1947902969086}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6493055555555554,"recall":0.6493055555555554,"f1":0.6493055555555554,"seconds":0.00012649782001972198,"exhaustive_search_seconds":0.00040300004184246063,"evaluations":417.1328125,"distances_sum":1604.618532697271}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7178819444444439,"recall":0.7178819444444439,"f1":0.7178819444444439,"seconds":0.0001569315791130066,"exhaustive_search_seconds":0.00040300004184246063,"evaluations":457.5078125,"distances_sum":1581.6948077629233}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7760416666666662,"recall":0.7760416666666662,"f1":0.7760416666666662,"seconds":0.0001935809850692749,"exhaustive_search_seconds":0.00040300004184246063,"evaluations":497.0390625,"distances_sum":1565.4310517406636}
KCenters.DeloneInvIndex> reached performance {"precision":0.824652777777777,"recall":0.824652777777777,"f1":0.824652777777777,"seconds":0.00035756267607212067,"exhaustive_search_seconds":0.00040300004184246063,"evaluations":538.0234375,"distances_sum":1555.3690268867288}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7959999999999999, speedup = 1.9178845677483278, eval_ratio = 0.053801999999999996)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
