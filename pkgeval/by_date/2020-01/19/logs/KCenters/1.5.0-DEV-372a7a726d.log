Julia Version 1.5.0-DEV.104
Commit 372a7a726d (2020-01-18 18:35 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed LearnBase ─────────────────── v0.2.2
 Installed MappedArrays ──────────────── v0.2.2
 Installed Reexport ──────────────────── v0.2.0
 Installed Tables ────────────────────── v0.2.11
 Installed KCenters ──────────────────── v0.1.8
 Installed TableTraits ───────────────── v1.0.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed DataFrames ────────────────── v0.20.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed Compat ────────────────────── v3.2.0
 Installed DataStructures ────────────── v0.17.9
 Installed JSON ──────────────────────── v0.21.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed MLDataPattern ─────────────── v0.5.0
 Installed Missings ──────────────────── v0.4.3
 Installed Parsers ───────────────────── v0.3.10
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed OrderedCollections ────────── v1.1.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed SimilaritySearch ──────────── v0.3.17
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_yFjnel/Project.toml`
 [no changes]
  Updating `/tmp/jl_yFjnel/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_yFjnel/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 147.23000000000005
[ Info: 73.14000000000001
[ Info: 45.269999999999996
[ Info: 24.830000000000005
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.2399983987154
[ Info: 75.72000115944812
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.04104830899008
inertia(cdnet.distances) = 27.680116368876533
inertia(crand.distances) = 19.23739074369346
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7873038419913428,"seconds":4.926696419715881e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.7578125,"distances_sum":1919.677274938994}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6650390625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6650390625,"f1":0.7873038419913428,"seconds":4.926696419715881e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.7578125,"distances_sum":1919.677274938994}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8198988511488519,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.8359375,"distances_sum":2130.149265408518}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9146010239760246,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.5234375,"distances_sum":2692.2464096174217}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9235977564102572,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.5546875,"distances_sum":2732.3385913252114}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8602288336663346,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.1875,"distances_sum":2310.043600613398}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.865234375,"f1":0.9235977564102572,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.5546875,"distances_sum":2732.3385913252114}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619677197802202,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.890625,"distances_sum":3054.9459011812623}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9551282051282056,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.828125,"distances_sum":3006.5086166796714}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9232116841491849,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.546875,"distances_sum":2768.632678093769}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9565190018315023,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8828125,"distances_sum":3028.0298334236645}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9557749542124547,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8046875,"distances_sum":3038.5690555504757}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9619677197802202,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.890625,"distances_sum":3054.9459011812623}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9619677197802202,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.890625,"distances_sum":3054.9459011812623}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.782534826284827,"seconds":4.796311259269714e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.6171875,"distances_sum":1842.3476518101609}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6630859375,"f1":0.782534826284827,"seconds":4.796311259269714e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.6171875,"distances_sum":1842.3476518101609}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9144548160173169,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6015625,"distances_sum":2515.0878646755928}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.853515625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.9144548160173169,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6015625,"distances_sum":2515.0878646755928}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9444253663003667,"seconds":6.621703505516052e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7578125,"distances_sum":2742.2293169773016}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9183696511821521,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7265625,"distances_sum":2524.5293408085827}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9611263736263739,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.84375,"distances_sum":2853.428606309087}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9611263736263739,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.84375,"distances_sum":2853.428606309087}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9611263736263739,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.84375,"distances_sum":2853.428606309087}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8595643939393947,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.3359375,"distances_sum":2146.4562675842435}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7933628871128879,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.9375,"distances_sum":1857.8833134831077}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2001953125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2001953125,"f1":null,"seconds":3.334134817123413e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.9296875,"distances_sum":526.2664110209223}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8595643939393947,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.3359375,"distances_sum":2146.4562675842435}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8926172785547796,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.359375,"distances_sum":2350.0256022680896}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.915387737262738,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.625,"distances_sum":2507.8448697301874}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9445231851481855,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.734375,"distances_sum":2719.3460899805577}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9445231851481855,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.734375,"distances_sum":2719.3460899805577}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9705185439560444,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.90625,"distances_sum":2928.2289272320213}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9746108058608063,"seconds":6.893649697303772e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9296875,"distances_sum":2932.0918174409862}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9497825091575097,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.765625,"distances_sum":2769.611488369925}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9630837912087915,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.84375,"distances_sum":2875.305619077886}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9746108058608063,"seconds":6.893649697303772e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9296875,"distances_sum":2932.0918174409862}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9746108058608063,"seconds":6.893649697303772e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9296875,"distances_sum":2932.0918174409862}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.328125,"f1":null,"seconds":3.4999102354049683e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":5.125,"distances_sum":933.6669411852247}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8418914418914426,"seconds":4.909932613372803e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.9140625,"distances_sum":2113.805594988037}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8418914418914426,"seconds":4.909932613372803e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.9140625,"distances_sum":2113.805594988037}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8713978729603736,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.109375,"distances_sum":2258.163163534405}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8713978729603736,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.109375,"distances_sum":2258.163163534405}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8832766192141199,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.2109375,"distances_sum":2319.2997555856664}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9242559523809529,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.5546875,"distances_sum":2543.601879007275}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9292020479520484,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.609375,"distances_sum":2603.903828843259}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9292020479520484,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.609375,"distances_sum":2603.903828843259}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8818359375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9292020479520484,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.609375,"distances_sum":2603.903828843259}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5146484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5146484375,"f1":0.664346070596071,"seconds":4.338100552558899e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.2890625,"distances_sum":1367.508596055151}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5146484375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5146484375,"f1":0.664346070596071,"seconds":4.338100552558899e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.2890625,"distances_sum":1367.508596055151}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.8998912545787554,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.546875,"distances_sum":2462.9446459733526}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9243823884448891,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7265625,"distances_sum":2667.3537222866685}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.9243823884448891,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7265625,"distances_sum":2667.3537222866685}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964365842490843,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9375,"distances_sum":2903.5626964974754}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9539320054945057,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8359375,"distances_sum":2862.205191124621}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.942307692307693,"seconds":8.437782526016235e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7421875,"distances_sum":2787.4724396857237}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9499713827838834,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7578125,"distances_sum":2831.2005797943852}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9422790750915755,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6796875,"distances_sum":2803.55054354538}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.964365842490843,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9375,"distances_sum":2903.5626964974754}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.964365842490843,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9375,"distances_sum":2903.5626964974754}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.6899230977355985,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.4921875,"distances_sum":1356.9771483561876}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5390625,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5390625,"f1":0.6899230977355985,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.4921875,"distances_sum":1356.9771483561876}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8567796786546794,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.15625,"distances_sum":2057.2137582077285}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9188301282051291,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6796875,"distances_sum":2500.1959755064972}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9353193681318687,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.765625,"distances_sum":2602.425729218714}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8911234598734604,"seconds":5.112960934638977e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.4296875,"distances_sum":2314.4573083185987}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9353193681318687,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.765625,"distances_sum":2602.425729218714}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9389594780219783,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8359375,"distances_sum":2599.009913295106}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9607543498168499,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.84375,"distances_sum":2770.1466636043037}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707989926739933,"seconds":6.6943466663360596e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9296875,"distances_sum":2850.095920699266}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":12,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9536343864468868,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8515625,"distances_sum":2737.1374624285177}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9467548076923086,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8125,"distances_sum":2680.93659052597}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9565590659340664,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8046875,"distances_sum":2759.2939722313085}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707989926739933,"seconds":6.6943466663360596e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9296875,"distances_sum":2850.095920699266}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707989926739933,"seconds":6.6943466663360596e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9296875,"distances_sum":2850.095920699266}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5107421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5107421875,"f1":0.6625032953157957,"seconds":4.0084123611450195e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.921875,"distances_sum":1353.1801650922202}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5107421875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5107421875,"f1":0.6625032953157957,"seconds":4.0084123611450195e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.921875,"distances_sum":1353.1801650922202}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5224609375, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5224609375,"f1":null,"seconds":4.2282044887542725e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.8359375,"distances_sum":1419.1699241187189}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5224609375,"state":{"ssize":4,"bsize":3},"perf":{"precision":null,"recall":0.5224609375,"f1":null,"seconds":4.2282044887542725e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.8359375,"distances_sum":1419.1699241187189}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7177734375,"f1":0.8271816724941734,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.9453125,"distances_sum":1999.8650121587073}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8426344488844499,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8203125,"distances_sum":2132.3741626861934}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.626953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.626953125,"f1":0.7572313103563111,"seconds":4.500150680541992e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.265625,"distances_sum":1760.7320431939415}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73828125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.73828125,"f1":0.8426344488844499,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8203125,"distances_sum":2132.3741626861934}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.73828125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.73828125,"f1":0.8426344488844499,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8203125,"distances_sum":2132.3741626861934}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":3.855675458908081e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.3828125,"distances_sum":1029.5198689367385}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.699346313408814,"seconds":4.24310564994812e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.1640625,"distances_sum":1487.8896303263118}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.556640625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.556640625,"f1":0.699346313408814,"seconds":4.24310564994812e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.1640625,"distances_sum":1487.8896303263118}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8533601814851822,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.9921875,"distances_sum":2172.2354575488334}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9257211538461545,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8203125,"distances_sum":2555.5100269742097}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8915839368964376,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.3671875,"distances_sum":2373.861584325009}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8149475524475531,"seconds":4.557892680168152e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.984375,"distances_sum":1908.6260479203218}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9257211538461545,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8203125,"distances_sum":2555.5100269742097}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684008699633706,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.875,"distances_sum":2906.9898167565666}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9568681318681321,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.78125,"distances_sum":2849.233266915328}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684008699633706,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.875,"distances_sum":2906.9898167565666}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684008699633706,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.875,"distances_sum":2906.9898167565666}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8568872100122107,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.1328125,"distances_sum":2104.076288498391}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8568872100122107,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.1328125,"distances_sum":2104.076288498391}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8996394230769237,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.3984375,"distances_sum":2345.0985819612706}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.826171875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.826171875,"f1":0.8996394230769237,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.3984375,"distances_sum":2345.0985819612706}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9500286172161175,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.75,"distances_sum":2721.5050710946703}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9276015651015658,"seconds":6.634742021560669e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.765625,"distances_sum":2534.735607742937}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9030048076923084,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.4140625,"distances_sum":2406.5644037646857}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9500286172161175,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.75,"distances_sum":2721.5050710946703}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9500286172161175,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.75,"distances_sum":2721.5050710946703}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1767578125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1767578125,"f1":null,"seconds":4.079192876815796e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.0859375,"distances_sum":483.50730924771864}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5068359375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5068359375,"f1":0.6561840936840941,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.7578125,"distances_sum":1308.3406218572222}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5068359375,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5068359375,"f1":0.6561840936840941,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.7578125,"distances_sum":1308.3406218572222}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.8370686605061612,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.21875,"distances_sum":2033.8215613368825}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6959956709956715,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.015625,"distances_sum":1448.8589957019335}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":8,"bsize":3}, perf: {"precision":null,"recall":0.533203125,"f1":null,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.8984375,"distances_sum":1432.5796879571699}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.734375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.734375,"f1":0.8370686605061612,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.21875,"distances_sum":2033.8215613368825}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8972355769230776,"seconds":6.4354389905929565e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.578125,"distances_sum":2349.368199320517}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9035719488844495,"seconds":6.416812539100647e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5546875,"distances_sum":2382.4919410922453}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9407165750915757,"seconds":7.3909759521484375e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.765625,"distances_sum":2610.974219989393}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8928259240759246,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4609375,"distances_sum":2348.801418139925}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.902495421245422,"seconds":6.420537829399109e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6015625,"distances_sum":2358.2622072341946}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9407165750915757,"seconds":7.3909759521484375e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.765625,"distances_sum":2610.974219989393}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8994140625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9407165750915757,"seconds":7.3909759521484375e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.765625,"distances_sum":2610.974219989393}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4267578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4267578125,"f1":0.5771353646353646,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":6.40625,"distances_sum":977.3910396139386}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.451171875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.451171875,"f1":null,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":6.609375,"distances_sum":1078.3235371275855}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.451171875,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.451171875,"f1":null,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":6.609375,"distances_sum":1078.3235371275855}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8540417915417925,"seconds":6.899237632751465e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.2578125,"distances_sum":1998.5383632597443}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9245624167499176,"seconds":7.292255759239197e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.46875,"distances_sum":2404.4211942425713}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8055246836496844,"seconds":6.835907697677612e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":7.8671875,"distances_sum":1747.9331674359073}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5888671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5888671875,"f1":0.725857996170497,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":7.6875,"distances_sum":1494.3193565767804}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8671875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.9245624167499176,"seconds":7.292255759239197e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.46875,"distances_sum":2404.4211942425713}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9722870879120881,"seconds":7.428228855133057e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.90625,"distances_sum":2839.0896684604472}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9694940476190479,"seconds":6.595626473426819e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.921875,"distances_sum":2804.384727402305}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9530734890109894,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8046875,"distances_sum":2674.891020575667}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591804029304034,"seconds":6.601214408874512e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.875,"distances_sum":2721.1490954191286}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9288607226107233,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.5703125,"distances_sum":2465.2609028417837}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.931925366300367,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.65625,"distances_sum":2482.6296302658734}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9722870879120881,"seconds":7.428228855133057e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.90625,"distances_sum":2839.0896684604472}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9722870879120881,"seconds":7.428228855133057e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.90625,"distances_sum":2839.0896684604472}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6064453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.6064453125,"f1":0.7371669996670003,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.7578125,"distances_sum":1420.7317748990424}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.884129412254413,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.3515625,"distances_sum":2027.5510436996958}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.400390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.400390625,"f1":null,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":6.359375,"distances_sum":837.2670834247045}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8076171875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.8076171875,"f1":0.884129412254413,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.3515625,"distances_sum":2027.5510436996958}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8979884698634706,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.4140625,"distances_sum":2060.9484253744017}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9541323260073264,"seconds":1.0095536708831787e-5,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.90625,"distances_sum":2429.045180239861}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9541323260073264,"seconds":1.0095536708831787e-5,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.90625,"distances_sum":2429.045180239861}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9775297619047622,"seconds":7.072463631629944e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9609375,"distances_sum":2617.0593412464327}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9743704212454215,"seconds":7.111579179763794e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.984375,"distances_sum":2569.2277155303527}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720810439560444,"seconds":6.962567567825317e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9375,"distances_sum":2576.9261430171105}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9775297619047622,"seconds":7.072463631629944e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9609375,"distances_sum":2617.0593412464327}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9775297619047622,"seconds":7.072463631629944e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9609375,"distances_sum":2617.0593412464327}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8764058857808867,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.25,"distances_sum":1886.6889946684896}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7939453125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7939453125,"f1":0.8764058857808867,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.25,"distances_sum":1886.6889946684896}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9091861263736273,"seconds":6.360933184623718e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.65625,"distances_sum":2094.495374611584}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9346127830502838,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.828125,"distances_sum":2242.2566678938088}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9346127830502838,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.828125,"distances_sum":2242.2566678938088}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654819139194142,"seconds":6.77257776260376e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8984375,"distances_sum":2485.654017013224}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9634157509157515,"seconds":6.712973117828369e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.90625,"distances_sum":2443.321482718352}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.938350191475192,"seconds":6.360933184623718e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8125,"distances_sum":2271.4758064462003}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274728,"seconds":6.759539246559143e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9609375,"distances_sum":2494.031174775995}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274728,"seconds":6.759539246559143e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9609375,"distances_sum":2494.031174775995}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274728,"seconds":6.759539246559143e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9609375,"distances_sum":2494.031174775995}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8550928238428247,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.171875,"distances_sum":1871.617339339349}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.6960437132312137,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.5234375,"distances_sum":1251.387407138458}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8550928238428247,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.171875,"distances_sum":1871.617339339349}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9165178571428578,"seconds":6.346032023429871e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.625,"distances_sum":2215.147647986757}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9513679029304036,"seconds":6.5267086029052734e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8828125,"distances_sum":2458.18846529077}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9388512529137536,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.765625,"distances_sum":2386.361742094326}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9513679029304036,"seconds":6.5267086029052734e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8828125,"distances_sum":2458.18846529077}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9590831043956047,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8984375,"distances_sum":2519.744888296821}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9659798534798539,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.921875,"distances_sum":2559.4780229989315}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9658367673992677,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8984375,"distances_sum":2546.033940596579}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9794471153846155,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.953125,"distances_sum":2647.394912402642}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9794471153846155,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.953125,"distances_sum":2647.394912402642}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9794471153846155,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.953125,"distances_sum":2647.394912402642}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.834444721944723,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.9765625,"distances_sum":1833.6434506759558}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6318359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6318359375,"f1":0.7634755869130877,"seconds":4.494562745094299e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.546875,"distances_sum":1505.4370305799378}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5263671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5263671875,"f1":null,"seconds":4.06801700592041e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.609375,"distances_sum":1288.6612788641428}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73046875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.73046875,"f1":0.834444721944723,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.9765625,"distances_sum":1833.6434506759558}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9578926282051285,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7734375,"distances_sum":2527.986848121852}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9285599816849823,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6328125,"distances_sum":2352.8686513531848}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8753012612387621,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.4140625,"distances_sum":2057.7739736482913}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9325695138195146,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6171875,"distances_sum":2386.5723830761717}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8866420038295048,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.5546875,"distances_sum":2042.3073338016407}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9578926282051285,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7734375,"distances_sum":2527.986848121852}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9830357142857147,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9453125,"distances_sum":2682.9511356359253}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9660370879120885,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8515625,"distances_sum":2575.0788915037588}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9686584249084254,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8203125,"distances_sum":2609.751515009914}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679887820512825,"seconds":6.3963234424591064e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.890625,"distances_sum":2574.779220163987}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9598271520146525,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9140625,"distances_sum":2512.775023159624}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96875,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9830357142857147,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9453125,"distances_sum":2682.9511356359253}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96875,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9830357142857147,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9453125,"distances_sum":2682.9511356359253}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":3.7513673305511475e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.03125,"distances_sum":581.1322446091564}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.816559910774231e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":5.8515625,"distances_sum":357.4440010716923}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.40234375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.40234375,"f1":null,"seconds":3.7513673305511475e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.03125,"distances_sum":581.1322446091564}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8416557400932411,"seconds":6.487593054771423e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.2265625,"distances_sum":1131.923525931872}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8498974983349993,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.2421875,"distances_sum":1148.6631807879924}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8486185689310698,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.2734375,"distances_sum":1153.4527613285989}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8498974983349993,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.2421875,"distances_sum":1148.6631807879924}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9538404304029309,"seconds":7.107853889465332e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.75,"distances_sum":1539.6921658520107}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9630093864468869,"seconds":7.333233952522278e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.765625,"distances_sum":1568.2228752864849}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8986268939393948,"seconds":1.138448715209961e-5,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.328125,"distances_sum":1275.1396538629888}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9039637445887455,"seconds":1.249648630619049e-5,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.5,"distances_sum":1319.4296907940764}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9385302197802206,"seconds":1.2867152690887451e-5,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.7265625,"distances_sum":1451.0075826399084}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9630093864468869,"seconds":7.333233952522278e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.765625,"distances_sum":1568.2228752864849}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9630093864468869,"seconds":7.333233952522278e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.765625,"distances_sum":1568.2228752864849}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8397560772560781,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":3.3285468816757202e-6,"evaluations":7.9921875,"distances_sum":1218.9826700835658}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8397560772560781,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":3.3285468816757202e-6,"evaluations":7.9921875,"distances_sum":1218.9826700835658}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.946265713453214,"seconds":8.795410394668579e-6,"exhaustive_search_seconds":3.3285468816757202e-6,"evaluations":8.71875,"distances_sum":1588.75649219068}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9560153388278391,"seconds":1.023896038532257e-5,"exhaustive_search_seconds":3.3285468816757202e-6,"evaluations":8.671875,"distances_sum":1663.4299853169268}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9560153388278391,"seconds":1.023896038532257e-5,"exhaustive_search_seconds":3.3285468816757202e-6,"evaluations":8.671875,"distances_sum":1663.4299853169268}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9662030677655681,"seconds":1.0902062058448792e-5,"exhaustive_search_seconds":3.3285468816757202e-6,"evaluations":8.828125,"distances_sum":1676.3106151039717}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9562531218781223,"seconds":1.0453164577484131e-5,"exhaustive_search_seconds":3.3285468816757202e-6,"evaluations":8.703125,"distances_sum":1677.8411142674545}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":8,"bsize":13}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9757268772893776,"seconds":1.1889263987541199e-5,"exhaustive_search_seconds":3.3285468816757202e-6,"evaluations":8.875,"distances_sum":1739.7230335133618}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.971039377289378,"seconds":1.093931496143341e-5,"exhaustive_search_seconds":3.3285468816757202e-6,"evaluations":8.859375,"distances_sum":1694.8254583055498}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9706845238095243,"seconds":1.1244788765907288e-5,"exhaustive_search_seconds":3.3285468816757202e-6,"evaluations":8.875,"distances_sum":1698.030720520424}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.970575778388279,"seconds":1.1228024959564209e-5,"exhaustive_search_seconds":3.3285468816757202e-6,"evaluations":8.859375,"distances_sum":1711.124905607803}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":8,"bsize":13},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9757268772893776,"seconds":1.1889263987541199e-5,"exhaustive_search_seconds":3.3285468816757202e-6,"evaluations":8.875,"distances_sum":1739.7230335133618}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":8,"bsize":13},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9757268772893776,"seconds":1.1889263987541199e-5,"exhaustive_search_seconds":3.3285468816757202e-6,"evaluations":8.875,"distances_sum":1739.7230335133618}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":7.716938853263855e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":6.1796875,"distances_sum":716.9810809853465}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":6.368383765220642e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":4.84375,"distances_sum":414.8318580429847}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4267578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4267578125,"f1":null,"seconds":4.3138861656188965e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":6.09375,"distances_sum":751.5597746376083}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4267578125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4267578125,"f1":null,"seconds":4.3138861656188965e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":6.09375,"distances_sum":751.5597746376083}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5322265625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5322265625,"f1":0.6793567543567549,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":7.1484375,"distances_sum":911.5700097722528}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5439453125,"f1":null,"seconds":4.781410098075867e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":7.3515625,"distances_sum":978.9941183816504}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8507013819513827,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":8.1953125,"distances_sum":1356.5625802614848}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8549412393162401,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":8.3046875,"distances_sum":1380.3721204839483}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7756764069264076,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":7.8671875,"distances_sum":1140.1389879040275}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7769098956598964,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":7.78125,"distances_sum":1124.9559173642135}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8549412393162401,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":8.3046875,"distances_sum":1380.3721204839483}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.923211684149185,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":8.5546875,"distances_sum":1650.1109731285783}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9483776640026643,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":8.6875,"distances_sum":1829.0229484861716}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9615155677655685,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":8.78125,"distances_sum":1855.6399239942575}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8719015359640366,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":8.3671875,"distances_sum":1439.5652290058981}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9045163170163177,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":8.46875,"distances_sum":1565.6774037334908}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9100675366300374,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":8.46875,"distances_sum":1608.6163674983743}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8644090284715291,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":8.3046875,"distances_sum":1405.6808629436941}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9561126373626379,"seconds":6.444752216339111e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":8.765625,"distances_sum":1835.9534757471945}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9615155677655685,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":8.78125,"distances_sum":1855.6399239942575}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9615155677655685,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":2.678483724594116e-6,"evaluations":8.78125,"distances_sum":1855.6399239942575}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5400390625,"f1":0.6825977841602846,"seconds":4.552304744720459e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.140625,"distances_sum":987.6417945669494}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5400390625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5400390625,"f1":0.6825977841602846,"seconds":4.552304744720459e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.140625,"distances_sum":987.6417945669494}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":7,"bsize":3}, perf: {"precision":null,"recall":0.5751953125,"f1":null,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.421875,"distances_sum":1104.4194358633229}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5751953125,"state":{"ssize":7,"bsize":3},"perf":{"precision":null,"recall":0.5751953125,"f1":null,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.421875,"distances_sum":1104.4194358633229}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5751953125,"state":{"ssize":7,"bsize":3},"perf":{"precision":null,"recall":0.5751953125,"f1":null,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.421875,"distances_sum":1104.4194358633229}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.5751953125,"state":{"ssize":7,"bsize":3},"perf":{"precision":null,"recall":0.5751953125,"f1":null,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.421875,"distances_sum":1104.4194358633229}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.7038598554223561,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":7.484375,"distances_sum":1069.5089003962048}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3984375,"f1":null,"seconds":4.254281520843506e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":6.4140625,"distances_sum":784.4690827670563}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5595703125,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.5595703125,"f1":0.7038598554223561,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":7.484375,"distances_sum":1069.5089003962048}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9315418956043963,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.65625,"distances_sum":1844.553137575415}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9315418956043963,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.65625,"distances_sum":1844.553137575415}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.974851190476191,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.9140625,"distances_sum":2080.621700739524}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9365587537462544,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.71875,"distances_sum":1888.4358182573285}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9466949716949722,"seconds":6.8694353103637695e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.765625,"distances_sum":1938.3371826867126}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.974851190476191,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.9140625,"distances_sum":2080.621700739524}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.974851190476191,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.9140625,"distances_sum":2080.621700739524}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8429180194805204,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.25,"distances_sum":1409.8175957567928}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.544921875,"f1":0.6868756243756248,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.125,"distances_sum":920.1109852643057}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.740234375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.740234375,"f1":0.8429180194805204,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.25,"distances_sum":1409.8175957567928}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9276473526473531,"seconds":6.338581442832947e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.5234375,"distances_sum":1737.7494924500193}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9385505119880126,"seconds":6.949529051780701e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6796875,"distances_sum":1770.8906141978384}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.93851304945055,"seconds":6.966292858123779e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.5546875,"distances_sum":1805.7561300512448}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9385505119880126,"seconds":6.949529051780701e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6796875,"distances_sum":1770.8906141978384}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.977346611721612,"seconds":7.249414920806885e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.90625,"distances_sum":1981.2749520960838}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9496336996337004,"seconds":6.875023245811462e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7578125,"distances_sum":1818.0514038407148}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9666494963369969,"seconds":7.0892274379730225e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.859375,"distances_sum":1904.0679814391071}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9595810439560444,"seconds":6.845220923423767e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8203125,"distances_sum":1873.4719251240722}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9754292582417583,"seconds":7.1767717599868774e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.90625,"distances_sum":1955.0609531506627}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.977346611721612,"seconds":7.249414920806885e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.90625,"distances_sum":1981.2749520960838}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.977346611721612,"seconds":7.249414920806885e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.90625,"distances_sum":1981.2749520960838}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.205078125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.205078125,"f1":null,"seconds":3.5353004932403564e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.125,"distances_sum":402.9254771468456}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.205078125,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.205078125,"f1":null,"seconds":3.5353004932403564e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.125,"distances_sum":402.9254771468456}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7921767468642477,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.875,"distances_sum":1285.9291665030705}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6396484375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6396484375,"f1":0.7681266650016657,"seconds":5.038455128669739e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.671875,"distances_sum":1209.1226789605546}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3369140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3369140625,"f1":null,"seconds":3.643333911895752e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.6015625,"distances_sum":687.8788383240399}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.671875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.671875,"f1":0.7921767468642477,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.875,"distances_sum":1285.9291665030705}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9426968864468868,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6875,"distances_sum":1918.4183675473773}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9419585622710629,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6640625,"distances_sum":1929.8608801074379}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8543279637029646,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.203125,"distances_sum":1536.080974039926}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9035376082251091,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.5625,"distances_sum":1723.7793177152128}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8467672952047961,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.234375,"distances_sum":1509.025649141489}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9426968864468868,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6875,"distances_sum":1918.4183675473773}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8984375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9426968864468868,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6875,"distances_sum":1918.4183675473773}}, n: 9
inertia(cfft.distances) = 17.85366200466201
inertia(cdnet.distances) = 26.79665721832624
inertia(crand.distances) = 20.513463708347278
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8955555555555555
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9222222222222222
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9044444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9133333333333332
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9111111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9088888888888889
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9133333333333334
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8622222222222223
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8999999999999999
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8488888888888889
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8711111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 3, 2, 2, 3, 3, 1, 2, 3, 2, 3, 3, 3, 1, 3, 2, 3, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.42560000308277496] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.42560000308277496, 0.1760802376463254] ***
*** starting iteration: 2; err: [Inf, 0.42560000308277496, 0.1760802376463254] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.42560000308277496, 0.1760802376463254, 0.16318945914185368] ***
*** starting iteration: 3; err: [Inf, 0.42560000308277496, 0.1760802376463254, 0.16318945914185368] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.42560000308277496, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754] ***
*** starting iteration: 4; err: [Inf, 0.42560000308277496, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.42560000308277496, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754, 0.15913698527851505] ***
*** finished computation of 12 references, err: [Inf, 0.42560000308277496, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754, 0.15913698527851505] ***
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
acc = 0.92
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.830299987568099] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.830299987568099, 0.9704191290752763] ***
*** finished computation of 3 references, err: [Inf, 1.830299987568099, 0.9704191290752763] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 35]]
** centroid: 1, normalized-entropy: 0.9985532860835362, [(2, 32), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6109000047449061] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6109000047449061, 0.2764089795066978] ***
*** starting iteration: 2; err: [Inf, 0.6109000047449061, 0.2764089795066978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6109000047449061, 0.2764089795066978, 0.256398615960633] ***
*** starting iteration: 3; err: [Inf, 0.6109000047449061, 0.2764089795066978, 0.256398615960633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6109000047449061, 0.2764089795066978, 0.256398615960633, 0.2500007630869244] ***
*** finished computation of 7 references, err: [Inf, 0.6109000047449061, 0.2764089795066978, 0.256398615960633, 0.2500007630869244] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 19, 2]]
** centroid: 6, normalized-entropy: 0.45371633918694493, [(2, 19), (3, 2)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6704000057391352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6704000057391352, 0.2466536488503871] ***
*** starting iteration: 2; err: [Inf, 0.6704000057391352, 0.2466536488503871] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6704000057391352, 0.2466536488503871, 0.22303900964551804] ***
*** starting iteration: 3; err: [Inf, 0.6704000057391352, 0.2466536488503871, 0.22303900964551804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6704000057391352, 0.2466536488503871, 0.22303900964551804, 0.22147202126616897] ***
*** finished computation of 7 references, err: [Inf, 0.6704000057391352, 0.2466536488503871, 0.22303900964551804, 0.22147202126616897] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 11]]
** centroid: 4, normalized-entropy: 0.9895875212220558, [(2, 14), (3, 11)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.573500003772659] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.573500003772659, 0.2814489816851217] ***
*** starting iteration: 2; err: [Inf, 0.573500003772659, 0.2814489816851217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.573500003772659, 0.2814489816851217, 0.26162856686958746] ***
*** starting iteration: 3; err: [Inf, 0.573500003772659, 0.2814489816851217, 0.26162856686958746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.573500003772659, 0.2814489816851217, 0.26162856686958746, 0.25215926568960423] ***
*** finished computation of 7 references, err: [Inf, 0.573500003772659, 0.2814489816851217, 0.26162856686958746, 0.25215926568960423] ***
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.5514999835390335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5514999835390335, 0.782188741562021] ***
*** finished computation of 3 references, err: [Inf, 1.5514999835390335, 0.782188741562021] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 37, 13]]
** centroid: 1, normalized-entropy: 0.8267463724926181, [(2, 37), (3, 13)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [28, 3, 0]]
** centroid: 3, normalized-entropy: 0.45868581620054033, [(1, 28), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4501000217595617] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4501000217595617, 0.9673898257929399] ***
*** finished computation of 3 references, err: [Inf, 1.4501000217595617, 0.9673898257929399] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [20, 2, 0]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(1, 20), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 25, 33]]
** centroid: 3, normalized-entropy: 0.9862325350724501, [(2, 25), (3, 33)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8051000081456094] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8051000081456094, 0.9174356545231683] ***
*** finished computation of 3 references, err: [Inf, 1.8051000081456094, 0.9174356545231683] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 5, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 28, 35]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(2, 28), (3, 35)]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.513999981873274] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.513999981873274, 2.415006320768037] ***
*** finished computation of 3 references, err: [Inf, 4.513999981873274, 2.415006320768037] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [28, 33, 1]]
** centroid: 1, normalized-entropy: 0.995148095654003, [(1, 28), (2, 33)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 28]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 7), (3, 28)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3248000006032703] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3248000006032703, 0.5674795799320446] ***
*** finished computation of 3 references, err: [Inf, 1.3248000006032703, 0.5674795799320446] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 10]]
** centroid: 1, normalized-entropy: 0.8418521897563208, [(2, 27), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4470000004767644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4470000004767644, 0.28436532318742513] ***
*** starting iteration: 2; err: [Inf, 0.4470000004767644, 0.28436532318742513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4470000004767644, 0.28436532318742513, 0.22048702149245436] ***
*** starting iteration: 3; err: [Inf, 0.4470000004767644, 0.28436532318742513, 0.22048702149245436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4470000004767644, 0.28436532318742513, 0.22048702149245436, 0.2127600505705691] ***
*** starting iteration: 4; err: [Inf, 0.4470000004767644, 0.28436532318742513, 0.22048702149245436, 0.2127600505705691] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4470000004767644, 0.28436532318742513, 0.22048702149245436, 0.2127600505705691, 0.2090851263871643] ***
*** starting iteration: 5; err: [Inf, 0.4470000004767644, 0.28436532318742513, 0.22048702149245436, 0.2127600505705691, 0.2090851263871643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4470000004767644, 0.28436532318742513, 0.22048702149245436, 0.2127600505705691, 0.2090851263871643, 0.20703666765633247] ***
*** starting iteration: 6; err: [Inf, 0.4470000004767644, 0.28436532318742513, 0.22048702149245436, 0.2127600505705691, 0.2090851263871643, 0.20703666765633247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4470000004767644, 0.28436532318742513, 0.22048702149245436, 0.2127600505705691, 0.2090851263871643, 0.20703666765633247, 0.20703666765633247] ***
*** finished computation of 7 references, err: [Inf, 0.4470000004767644, 0.28436532318742513, 0.22048702149245436, 0.2127600505705691, 0.2090851263871643, 0.20703666765633247, 0.20703666765633247] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 2]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 4: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6107999973765728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6107999973765728, 0.2839076559443416] ***
*** starting iteration: 2; err: [Inf, 0.6107999973765728, 0.2839076559443416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6107999973765728, 0.2839076559443416, 0.2561353564262064] ***
*** starting iteration: 3; err: [Inf, 0.6107999973765728, 0.2839076559443416, 0.2561353564262064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6107999973765728, 0.2839076559443416, 0.2561353564262064, 0.25143446599740554] ***
*** starting iteration: 4; err: [Inf, 0.6107999973765728, 0.2839076559443416, 0.2561353564262064, 0.25143446599740554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6107999973765728, 0.2839076559443416, 0.2561353564262064, 0.25143446599740554, 0.2508131554463854] ***
*** finished computation of 7 references, err: [Inf, 0.6107999973765728, 0.2839076559443416, 0.2561353564262064, 0.25143446599740554, 0.2508131554463854] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 4, 5]]
** centroid: 6, normalized-entropy: 0.9910760598382222, [(2, 4), (3, 5)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 12]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.582400002407948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.582400002407948, 0.3121346221355045] ***
*** starting iteration: 2; err: [Inf, 0.582400002407948, 0.3121346221355045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.582400002407948, 0.3121346221355045, 0.29177749653067403] ***
*** starting iteration: 3; err: [Inf, 0.582400002407948, 0.3121346221355045, 0.29177749653067403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.582400002407948, 0.3121346221355045, 0.29177749653067403, 0.27698399570948523] ***
*** starting iteration: 4; err: [Inf, 0.582400002407948, 0.3121346221355045, 0.29177749653067403, 0.27698399570948523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.582400002407948, 0.3121346221355045, 0.29177749653067403, 0.27698399570948523, 0.27458128640435214] ***
*** starting iteration: 5; err: [Inf, 0.582400002407948, 0.3121346221355045, 0.29177749653067403, 0.27698399570948523, 0.27458128640435214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.582400002407948, 0.3121346221355045, 0.29177749653067403, 0.27698399570948523, 0.27458128640435214, 0.27458128640435214] ***
*** finished computation of 7 references, err: [Inf, 0.582400002407948, 0.3121346221355045, 0.29177749653067403, 0.27698399570948523, 0.27458128640435214, 0.27458128640435214] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 14]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0168000198182283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0168000198182283, 0.9476986797466164] ***
*** starting iteration: 2; err: [Inf, 1.0168000198182283, 0.9476986797466164] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0168000198182283, 0.9476986797466164, 0.9423469767643895] ***
*** starting iteration: 3; err: [Inf, 1.0168000198182283, 0.9476986797466164, 0.9423469767643895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0168000198182283, 0.9476986797466164, 0.9423469767643895, 0.9360110821971245] ***
*** finished computation of 3 references, err: [Inf, 1.0168000198182283, 0.9476986797466164, 0.9423469767643895, 0.9360110821971245] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 35]]
** centroid: 1, normalized-entropy: 0.9985532860835362, [(2, 32), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8646000000418687] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8646000000418687, 0.53542892500148] ***
*** starting iteration: 2; err: [Inf, 0.8646000000418687, 0.53542892500148] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8646000000418687, 0.53542892500148, 0.5301403334835126] ***
*** starting iteration: 3; err: [Inf, 0.8646000000418687, 0.53542892500148, 0.5301403334835126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8646000000418687, 0.53542892500148, 0.5301403334835126, 0.5301403334835126] ***
*** finished computation of 3 references, err: [Inf, 0.8646000000418687, 0.53542892500148, 0.5301403334835126, 0.5301403334835126] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 38, 13]]
** centroid: 1, normalized-entropy: 0.8189555018403103, [(2, 38), (3, 13)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 19]]
** centroid: 2, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 3: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8348999956819912] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8348999956819912, 0.5794104139739958] ***
*** starting iteration: 2; err: [Inf, 0.8348999956819912, 0.5794104139739958] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8348999956819912, 0.5794104139739958, 0.560189483753989] ***
*** starting iteration: 3; err: [Inf, 0.8348999956819912, 0.5794104139739958, 0.560189483753989] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8348999956819912, 0.5794104139739958, 0.560189483753989, 0.5497267560112422] ***
*** finished computation of 3 references, err: [Inf, 0.8348999956819912, 0.5794104139739958, 0.560189483753989, 0.5497267560112422] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 7]]
** centroid: 1, normalized-entropy: 0.7455178428108284, [(2, 26), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 26]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4353418232782903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4353418232782903, 0.283094233266209] ***
*** starting iteration: 2; err: [Inf, 0.4353418232782903, 0.283094233266209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4353418232782903, 0.283094233266209, 0.2450401270752968] ***
*** starting iteration: 3; err: [Inf, 0.4353418232782903, 0.283094233266209, 0.2450401270752968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4353418232782903, 0.283094233266209, 0.2450401270752968, 0.214495470327498] ***
*** finished computation of 7 references, err: [Inf, 0.4353418232782903, 0.283094233266209, 0.2450401270752968, 0.214495470327498] ***
*** center 1: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 3]]
** centroid: 3, normalized-entropy: 0.44886448872302936, [(2, 29), (3, 3)]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 3]]
** centroid: 5, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5089733433926922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5089733433926922, 0.2500560156434561] ***
*** starting iteration: 2; err: [Inf, 0.5089733433926922, 0.2500560156434561] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5089733433926922, 0.2500560156434561, 0.1947809012613156] ***
*** starting iteration: 3; err: [Inf, 0.5089733433926922, 0.2500560156434561, 0.1947809012613156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5089733433926922, 0.2500560156434561, 0.1947809012613156, 0.1763753212026505] ***
*** finished computation of 7 references, err: [Inf, 0.5089733433926922, 0.2500560156434561, 0.1947809012613156, 0.1763753212026505] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 12]]
** centroid: 3, normalized-entropy: 0.8739810481273581, [(2, 5), (3, 12)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4300425923848067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4300425923848067, 0.23841693595770067] ***
*** starting iteration: 2; err: [Inf, 0.4300425923848067, 0.23841693595770067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4300425923848067, 0.23841693595770067, 0.19573862360198566] ***
*** starting iteration: 3; err: [Inf, 0.4300425923848067, 0.23841693595770067, 0.19573862360198566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4300425923848067, 0.23841693595770067, 0.19573862360198566, 0.1820951599932637] ***
*** finished computation of 7 references, err: [Inf, 0.4300425923848067, 0.23841693595770067, 0.19573862360198566, 0.1820951599932637] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 5]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 7: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2554693214860438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2554693214860438, 0.17534293590205485] ***
*** starting iteration: 2; err: [Inf, 0.2554693214860438, 0.17534293590205485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2554693214860438, 0.17534293590205485, 0.15685489291210203] ***
*** starting iteration: 3; err: [Inf, 0.2554693214860438, 0.17534293590205485, 0.15685489291210203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2554693214860438, 0.17534293590205485, 0.15685489291210203, 0.15198175032845337] ***
*** starting iteration: 4; err: [Inf, 0.2554693214860438, 0.17534293590205485, 0.15685489291210203, 0.15198175032845337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2554693214860438, 0.17534293590205485, 0.15685489291210203, 0.15198175032845337, 0.1513105543104434] ***
*** finished computation of 7 references, err: [Inf, 0.2554693214860438, 0.17534293590205485, 0.15685489291210203, 0.15198175032845337, 0.1513105543104434] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 7]]
** centroid: 1, normalized-entropy: 0.9494520153879484, [(2, 12), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6333209919062308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6333209919062308, 0.22298672094647862] ***
*** starting iteration: 2; err: [Inf, 0.6333209919062308, 0.22298672094647862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6333209919062308, 0.22298672094647862, 0.20886364386250483] ***
*** starting iteration: 3; err: [Inf, 0.6333209919062308, 0.22298672094647862, 0.20886364386250483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6333209919062308, 0.22298672094647862, 0.20886364386250483, 0.2006430769164137] ***
*** starting iteration: 4; err: [Inf, 0.6333209919062308, 0.22298672094647862, 0.20886364386250483, 0.2006430769164137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6333209919062308, 0.22298672094647862, 0.20886364386250483, 0.2006430769164137, 0.19669521721326003] ***
*** starting iteration: 5; err: [Inf, 0.6333209919062308, 0.22298672094647862, 0.20886364386250483, 0.2006430769164137, 0.19669521721326003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6333209919062308, 0.22298672094647862, 0.20886364386250483, 0.2006430769164137, 0.19669521721326003, 0.19490875252949505] ***
*** starting iteration: 6; err: [Inf, 0.6333209919062308, 0.22298672094647862, 0.20886364386250483, 0.2006430769164137, 0.19669521721326003, 0.19490875252949505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6333209919062308, 0.22298672094647862, 0.20886364386250483, 0.2006430769164137, 0.19669521721326003, 0.19490875252949505, 0.1924197290699196] ***
*** starting iteration: 7; err: [Inf, 0.6333209919062308, 0.22298672094647862, 0.20886364386250483, 0.2006430769164137, 0.19669521721326003, 0.19490875252949505, 0.1924197290699196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6333209919062308, 0.22298672094647862, 0.20886364386250483, 0.2006430769164137, 0.19669521721326003, 0.19490875252949505, 0.1924197290699196, 0.19187065154079128] ***
*** finished computation of 7 references, err: [Inf, 0.6333209919062308, 0.22298672094647862, 0.20886364386250483, 0.2006430769164137, 0.19669521721326003, 0.19490875252949505, 0.1924197290699196, 0.19187065154079128] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 7]]
** centroid: 1, normalized-entropy: 0.9967916319816367, [(2, 8), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 7]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5228280336744436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228280336744436, 0.2474364369111733] ***
*** starting iteration: 2; err: [Inf, 0.5228280336744436, 0.2474364369111733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777] ***
*** starting iteration: 3; err: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929] ***
*** starting iteration: 4; err: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929, 0.22801469704257368] ***
*** starting iteration: 5; err: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929, 0.22801469704257368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929, 0.22801469704257368, 0.2209167703296875] ***
*** starting iteration: 6; err: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929, 0.22801469704257368, 0.2209167703296875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929, 0.22801469704257368, 0.2209167703296875, 0.21402594925051854] ***
*** starting iteration: 7; err: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929, 0.22801469704257368, 0.2209167703296875, 0.21402594925051854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929, 0.22801469704257368, 0.2209167703296875, 0.21402594925051854, 0.21176381307729958] ***
*** starting iteration: 8; err: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929, 0.22801469704257368, 0.2209167703296875, 0.21402594925051854, 0.21176381307729958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929, 0.22801469704257368, 0.2209167703296875, 0.21402594925051854, 0.21176381307729958, 0.21022251639659703] ***
*** starting iteration: 9; err: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929, 0.22801469704257368, 0.2209167703296875, 0.21402594925051854, 0.21176381307729958, 0.21022251639659703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929, 0.22801469704257368, 0.2209167703296875, 0.21402594925051854, 0.21176381307729958, 0.21022251639659703, 0.20674638772088227] ***
*** starting iteration: 10; err: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929, 0.22801469704257368, 0.2209167703296875, 0.21402594925051854, 0.21176381307729958, 0.21022251639659703, 0.20674638772088227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929, 0.22801469704257368, 0.2209167703296875, 0.21402594925051854, 0.21176381307729958, 0.21022251639659703, 0.20674638772088227, 0.20454386435134894] ***
*** finished computation of 7 references, err: [Inf, 0.5228280336744436, 0.2474364369111733, 0.24091250456516777, 0.23417920678996929, 0.22801469704257368, 0.2209167703296875, 0.21402594925051854, 0.21176381307729958, 0.21022251639659703, 0.20674638772088227, 0.20454386435134894] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 6]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
*** center 7: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3489000057467895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3489000057467895, 0.27022399259409996] ***
*** starting iteration: 2; err: [Inf, 0.3489000057467895, 0.27022399259409996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763] ***
*** starting iteration: 3; err: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763, 0.24210463012248315] ***
*** starting iteration: 4; err: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763, 0.24210463012248315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763, 0.24210463012248315, 0.22267418352778295] ***
*** starting iteration: 5; err: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763, 0.24210463012248315, 0.22267418352778295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763, 0.24210463012248315, 0.22267418352778295, 0.21056382777184265] ***
*** starting iteration: 6; err: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763, 0.24210463012248315, 0.22267418352778295, 0.21056382777184265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763, 0.24210463012248315, 0.22267418352778295, 0.21056382777184265, 0.2080696068803255] ***
*** starting iteration: 7; err: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763, 0.24210463012248315, 0.22267418352778295, 0.21056382777184265, 0.2080696068803255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763, 0.24210463012248315, 0.22267418352778295, 0.21056382777184265, 0.2080696068803255, 0.20621696611742837] ***
*** starting iteration: 8; err: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763, 0.24210463012248315, 0.22267418352778295, 0.21056382777184265, 0.2080696068803255, 0.20621696611742837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763, 0.24210463012248315, 0.22267418352778295, 0.21056382777184265, 0.2080696068803255, 0.20621696611742837, 0.20412736710648183] ***
*** starting iteration: 9; err: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763, 0.24210463012248315, 0.22267418352778295, 0.21056382777184265, 0.2080696068803255, 0.20621696611742837, 0.20412736710648183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763, 0.24210463012248315, 0.22267418352778295, 0.21056382777184265, 0.2080696068803255, 0.20621696611742837, 0.20412736710648183, 0.2035944493244579] ***
*** finished computation of 7 references, err: [Inf, 0.3489000057467895, 0.27022399259409996, 0.2561123808333763, 0.24210463012248315, 0.22267418352778295, 0.21056382777184265, 0.2080696068803255, 0.20621696611742837, 0.20412736710648183, 0.2035944493244579] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7740000075862433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7740000075862433, 0.3658217800858166] ***
*** starting iteration: 2; err: [Inf, 0.7740000075862433, 0.3658217800858166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7740000075862433, 0.3658217800858166, 0.28647405538930587] ***
*** starting iteration: 3; err: [Inf, 0.7740000075862433, 0.3658217800858166, 0.28647405538930587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7740000075862433, 0.3658217800858166, 0.28647405538930587, 0.2753296522014773] ***
*** starting iteration: 4; err: [Inf, 0.7740000075862433, 0.3658217800858166, 0.28647405538930587, 0.2753296522014773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7740000075862433, 0.3658217800858166, 0.28647405538930587, 0.2753296522014773, 0.27351082131419235] ***
*** starting iteration: 5; err: [Inf, 0.7740000075862433, 0.3658217800858166, 0.28647405538930587, 0.2753296522014773, 0.27351082131419235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7740000075862433, 0.3658217800858166, 0.28647405538930587, 0.2753296522014773, 0.27351082131419235, 0.27230185010747776] ***
*** starting iteration: 6; err: [Inf, 0.7740000075862433, 0.3658217800858166, 0.28647405538930587, 0.2753296522014773, 0.27351082131419235, 0.27230185010747776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7740000075862433, 0.3658217800858166, 0.28647405538930587, 0.2753296522014773, 0.27351082131419235, 0.27230185010747776, 0.27171273646682415] ***
*** finished computation of 7 references, err: [Inf, 0.7740000075862433, 0.3658217800858166, 0.28647405538930587, 0.2753296522014773, 0.27351082131419235, 0.27230185010747776, 0.27171273646682415] ***
*** center 1: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 14]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 4), (3, 14)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 6, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.540499997899408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.540499997899408, 0.39109436014719035] ***
*** starting iteration: 2; err: [Inf, 0.540499997899408, 0.39109436014719035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.540499997899408, 0.39109436014719035, 0.3505770288948742] ***
*** starting iteration: 3; err: [Inf, 0.540499997899408, 0.39109436014719035, 0.3505770288948742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.540499997899408, 0.39109436014719035, 0.3505770288948742, 0.3410985330463586] ***
*** starting iteration: 4; err: [Inf, 0.540499997899408, 0.39109436014719035, 0.3505770288948742, 0.3410985330463586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.540499997899408, 0.39109436014719035, 0.3505770288948742, 0.3410985330463586, 0.33867835911970184] ***
*** starting iteration: 5; err: [Inf, 0.540499997899408, 0.39109436014719035, 0.3505770288948742, 0.3410985330463586, 0.33867835911970184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.540499997899408, 0.39109436014719035, 0.3505770288948742, 0.3410985330463586, 0.33867835911970184, 0.3342565940029498] ***
*** starting iteration: 6; err: [Inf, 0.540499997899408, 0.39109436014719035, 0.3505770288948742, 0.3410985330463586, 0.33867835911970184, 0.3342565940029498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.540499997899408, 0.39109436014719035, 0.3505770288948742, 0.3410985330463586, 0.33867835911970184, 0.3342565940029498, 0.332432694113664] ***
*** starting iteration: 7; err: [Inf, 0.540499997899408, 0.39109436014719035, 0.3505770288948742, 0.3410985330463586, 0.33867835911970184, 0.3342565940029498, 0.332432694113664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.540499997899408, 0.39109436014719035, 0.3505770288948742, 0.3410985330463586, 0.33867835911970184, 0.3342565940029498, 0.332432694113664, 0.33162303544078603] ***
*** finished computation of 7 references, err: [Inf, 0.540499997899408, 0.39109436014719035, 0.3505770288948742, 0.3410985330463586, 0.33867835911970184, 0.3342565940029498, 0.332432694113664, 0.33162303544078603] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 6, 19]]
** centroid: 4, normalized-entropy: 0.7950402793845225, [(2, 6), (3, 19)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 21, 3]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(2, 21), (3, 3)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0639000001971448] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0639000001971448, 0.5270352790717351] ***
*** starting iteration: 2; err: [Inf, 1.0639000001971448, 0.5270352790717351] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0639000001971448, 0.5270352790717351, 0.49354501163830006] ***
*** starting iteration: 3; err: [Inf, 1.0639000001971448, 0.5270352790717351, 0.49354501163830006] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0639000001971448, 0.5270352790717351, 0.49354501163830006, 0.4847130327197233] ***
*** starting iteration: 4; err: [Inf, 1.0639000001971448, 0.5270352790717351, 0.49354501163830006, 0.4847130327197233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0639000001971448, 0.5270352790717351, 0.49354501163830006, 0.4847130327197233, 0.4847130327197233] ***
*** finished computation of 3 references, err: [Inf, 1.0639000001971448, 0.5270352790717351, 0.49354501163830006, 0.4847130327197233, 0.4847130327197233] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 2, normalized-entropy: 0.2222848306856879, [(2, 1), (3, 27)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 10.413099921043365] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.413099921043365, 2.9235405575753326] ***
*** starting iteration: 2; err: [Inf, 10.413099921043365, 2.9235405575753326] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.413099921043365, 2.9235405575753326, 2.1341570919334445] ***
*** starting iteration: 3; err: [Inf, 10.413099921043365, 2.9235405575753326, 2.1341570919334445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.413099921043365, 2.9235405575753326, 2.1341570919334445, 1.291836293011549] ***
*** starting iteration: 4; err: [Inf, 10.413099921043365, 2.9235405575753326, 2.1341570919334445, 1.291836293011549] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.413099921043365, 2.9235405575753326, 2.1341570919334445, 1.291836293011549, 0.7339525498380338] ***
*** starting iteration: 5; err: [Inf, 10.413099921043365, 2.9235405575753326, 2.1341570919334445, 1.291836293011549, 0.7339525498380338] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.413099921043365, 2.9235405575753326, 2.1341570919334445, 1.291836293011549, 0.7339525498380338, 0.590104377025916] ***
*** starting iteration: 6; err: [Inf, 10.413099921043365, 2.9235405575753326, 2.1341570919334445, 1.291836293011549, 0.7339525498380338, 0.590104377025916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.413099921043365, 2.9235405575753326, 2.1341570919334445, 1.291836293011549, 0.7339525498380338, 0.590104377025916, 0.5359077065405967] ***
*** starting iteration: 7; err: [Inf, 10.413099921043365, 2.9235405575753326, 2.1341570919334445, 1.291836293011549, 0.7339525498380338, 0.590104377025916, 0.5359077065405967] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.413099921043365, 2.9235405575753326, 2.1341570919334445, 1.291836293011549, 0.7339525498380338, 0.590104377025916, 0.5359077065405967, 0.5301403334835126] ***
*** starting iteration: 8; err: [Inf, 10.413099921043365, 2.9235405575753326, 2.1341570919334445, 1.291836293011549, 0.7339525498380338, 0.590104377025916, 0.5359077065405967, 0.5301403334835126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.413099921043365, 2.9235405575753326, 2.1341570919334445, 1.291836293011549, 0.7339525498380338, 0.590104377025916, 0.5359077065405967, 0.5301403334835126, 0.5301403334835126] ***
*** finished computation of 3 references, err: [Inf, 10.413099921043365, 2.9235405575753326, 2.1341570919334445, 1.291836293011549, 0.7339525498380338, 0.590104377025916, 0.5359077065405967, 0.5301403334835126, 0.5301403334835126] ***
*** center 1: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 19]]
** centroid: 2, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 38, 13]]
** centroid: 3, normalized-entropy: 0.8189555018403103, [(2, 38), (3, 13)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.7602999811556934] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7602999811556934, 1.011534576633852] ***
*** starting iteration: 2; err: [Inf, 2.7602999811556934, 1.011534576633852] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7602999811556934, 1.011534576633852, 0.9796010010483677] ***
*** starting iteration: 3; err: [Inf, 2.7602999811556934, 1.011534576633852, 0.9796010010483677] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7602999811556934, 1.011534576633852, 0.9796010010483677, 0.974864754233659] ***
*** starting iteration: 4; err: [Inf, 2.7602999811556934, 1.011534576633852, 0.9796010010483677, 0.974864754233659] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7602999811556934, 1.011534576633852, 0.9796010010483677, 0.974864754233659, 0.9745730193121959] ***
*** finished computation of 3 references, err: [Inf, 2.7602999811556934, 1.011534576633852, 0.9796010010483677, 0.974864754233659, 0.9745730193121959] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 25, 33]]
** centroid: 1, normalized-entropy: 0.9862325350724501, [(2, 25), (3, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [26, 2, 0]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(1, 26), (2, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.277399972524793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.277399972524793, 0.28422712642935066] ***
*** starting iteration: 2; err: [Inf, 2.277399972524793, 0.28422712642935066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.277399972524793, 0.28422712642935066, 0.2223162363203494] ***
*** starting iteration: 3; err: [Inf, 2.277399972524793, 0.28422712642935066, 0.2223162363203494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.277399972524793, 0.28422712642935066, 0.2223162363203494, 0.20747290095108503] ***
*** finished computation of 7 references, err: [Inf, 2.277399972524793, 0.28422712642935066, 0.2223162363203494, 0.20747290095108503] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 11]]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5271000070806593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5271000070806593, 0.2627589225301725] ***
*** starting iteration: 2; err: [Inf, 0.5271000070806593, 0.2627589225301725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5271000070806593, 0.2627589225301725, 0.2567172193769245] ***
*** starting iteration: 3; err: [Inf, 0.5271000070806593, 0.2627589225301725, 0.2567172193769245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5271000070806593, 0.2627589225301725, 0.2567172193769245, 0.2563525705499677] ***
*** finished computation of 7 references, err: [Inf, 0.5271000070806593, 0.2627589225301725, 0.2567172193769245, 0.2563525705499677] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 14]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 20, 12]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(2, 20), (3, 12)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6073000054603613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6073000054603613, 0.31993367767666125] ***
*** starting iteration: 2; err: [Inf, 0.6073000054603613, 0.31993367767666125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6073000054603613, 0.31993367767666125, 0.29205409163750307] ***
*** starting iteration: 3; err: [Inf, 0.6073000054603613, 0.31993367767666125, 0.29205409163750307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6073000054603613, 0.31993367767666125, 0.29205409163750307, 0.27961848690353813] ***
*** finished computation of 7 references, err: [Inf, 0.6073000054603613, 0.31993367767666125, 0.29205409163750307, 0.27961848690353813] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 13, 5]]
** centroid: 6, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4187000036287771] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4187000036287771, 0.9508701501055041] ***
*** starting iteration: 2; err: [Inf, 1.4187000036287771, 0.9508701501055041] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4187000036287771, 0.9508701501055041, 0.9421326900855719] ***
*** starting iteration: 3; err: [Inf, 1.4187000036287771, 0.9508701501055041, 0.9421326900855719] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4187000036287771, 0.9508701501055041, 0.9421326900855719, 0.9381153119026958] ***
*** finished computation of 3 references, err: [Inf, 1.4187000036287771, 0.9508701501055041, 0.9421326900855719, 0.9381153119026958] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 35]]
** centroid: 2, normalized-entropy: 0.9985532860835362, [(2, 32), (3, 35)]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8478000075763505] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8478000075763505, 0.53542892500148] ***
*** starting iteration: 2; err: [Inf, 0.8478000075763505, 0.53542892500148] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8478000075763505, 0.53542892500148, 0.5301403334835126] ***
*** starting iteration: 3; err: [Inf, 0.8478000075763505, 0.53542892500148, 0.5301403334835126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8478000075763505, 0.53542892500148, 0.5301403334835126, 0.5301403334835126] ***
*** finished computation of 3 references, err: [Inf, 0.8478000075763505, 0.53542892500148, 0.5301403334835126, 0.5301403334835126] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 38, 13]]
** centroid: 1, normalized-entropy: 0.8189555018403103, [(2, 38), (3, 13)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 19]]
** centroid: 2, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 3: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 12.650699771858896] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 12.650699771858896, 1.682155511049604] ***
*** starting iteration: 2; err: [Inf, 12.650699771858896, 1.682155511049604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 12.650699771858896, 1.682155511049604, 0.5879169408304554] ***
*** starting iteration: 3; err: [Inf, 12.650699771858896, 1.682155511049604, 0.5879169408304554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 12.650699771858896, 1.682155511049604, 0.5879169408304554, 0.5574424328076445] ***
*** finished computation of 3 references, err: [Inf, 12.650699771858896, 1.682155511049604, 0.5879169408304554, 0.5574424328076445] ***
*** center 1: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 10]]
** centroid: 3, normalized-entropy: 0.8418521897563208, [(2, 27), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7454065983624454] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7454065983624454, 0.4379897738002917] ***
*** finished computation of 3 references, err: [Inf, 0.7454065983624454, 0.4379897738002917] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 20]]
** centroid: 1, normalized-entropy: 0.961236604722876, [(2, 32), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5998381042911914] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5998381042911914, 0.3849673442929075] ***
*** finished computation of 3 references, err: [Inf, 0.5998381042911914, 0.3849673442929075] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 31]]
** centroid: 1, normalized-entropy: 0.9377342939868042, [(2, 17), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.11055051190409] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.11055051190409, 0.39176084016136187] ***
*** finished computation of 3 references, err: [Inf, 1.11055051190409, 0.39176084016136187] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 10]]
** centroid: 3, normalized-entropy: 0.8418521897563208, [(2, 27), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1027999994101476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1027999994101476, 0.5539587291712053] ***
*** starting iteration: 2; err: [Inf, 1.1027999994101476, 0.5539587291712053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1027999994101476, 0.5539587291712053, 0.49248669453291927] ***
*** starting iteration: 3; err: [Inf, 1.1027999994101476, 0.5539587291712053, 0.49248669453291927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1027999994101476, 0.5539587291712053, 0.49248669453291927, 0.4847130327197233] ***
*** finished computation of 3 references, err: [Inf, 1.1027999994101476, 0.5539587291712053, 0.49248669453291927, 0.4847130327197233] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1542000107837707] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1542000107837707, 0.6297527814968844] ***
*** starting iteration: 2; err: [Inf, 1.1542000107837707, 0.6297527814968844] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1542000107837707, 0.6297527814968844, 0.5524776270590246] ***
*** starting iteration: 3; err: [Inf, 1.1542000107837707, 0.6297527814968844, 0.5524776270590246] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1542000107837707, 0.6297527814968844, 0.5524776270590246, 0.5328134828007155] ***
*** finished computation of 3 references, err: [Inf, 1.1542000107837707, 0.6297527814968844, 0.5524776270590246, 0.5328134828007155] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 38, 13]]
** centroid: 1, normalized-entropy: 0.8189555018403103, [(2, 38), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 19]]
** centroid: 3, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.2914999782259384] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2914999782259384, 0.5497267560112422] ***
*** starting iteration: 2; err: [Inf, 2.2914999782259384, 0.5497267560112422] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2914999782259384, 0.5497267560112422, 0.5486290992656538] ***
*** starting iteration: 3; err: [Inf, 2.2914999782259384, 0.5497267560112422, 0.5486290992656538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2914999782259384, 0.5497267560112422, 0.5486290992656538, 0.5476754537350031] ***
*** finished computation of 3 references, err: [Inf, 2.2914999782259384, 0.5497267560112422, 0.5486290992656538, 0.5476754537350031] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 8]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(2, 26), (3, 8)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 3: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5445000013097814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5445000013097814, 0.23134931627968364] ***
*** starting iteration: 2; err: [Inf, 0.5445000013097814, 0.23134931627968364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5445000013097814, 0.23134931627968364, 0.22449536586085736] ***
*** starting iteration: 3; err: [Inf, 0.5445000013097814, 0.23134931627968364, 0.22449536586085736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5445000013097814, 0.23134931627968364, 0.22449536586085736, 0.2220277332727038] ***
*** finished computation of 7 references, err: [Inf, 0.5445000013097814, 0.23134931627968364, 0.22449536586085736, 0.2220277332727038] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 13, 8]]
** centroid: 7, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.633500008140928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.633500008140928, 0.24717513828908383] ***
*** starting iteration: 2; err: [Inf, 0.633500008140928, 0.24717513828908383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.633500008140928, 0.24717513828908383, 0.22437693991898652] ***
*** starting iteration: 3; err: [Inf, 0.633500008140928, 0.24717513828908383, 0.22437693991898652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.633500008140928, 0.24717513828908383, 0.22437693991898652, 0.22179108428833835] ***
*** finished computation of 7 references, err: [Inf, 0.633500008140928, 0.24717513828908383, 0.22437693991898652, 0.22179108428833835] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 11]]
** centroid: 4, normalized-entropy: 0.9895875212220558, [(2, 14), (3, 11)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5714000033768599] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5714000033768599, 0.28040865833702944] ***
*** starting iteration: 2; err: [Inf, 0.5714000033768599, 0.28040865833702944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5714000033768599, 0.28040865833702944, 0.26162856686958746] ***
*** starting iteration: 3; err: [Inf, 0.5714000033768599, 0.28040865833702944, 0.26162856686958746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5714000033768599, 0.28040865833702944, 0.26162856686958746, 0.25215926568960423] ***
*** finished computation of 7 references, err: [Inf, 0.5714000033768599, 0.28040865833702944, 0.26162856686958746, 0.25215926568960423] ***
*** center 1: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 7]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 14)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9733333333333333
finished with 14
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 14)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9733333333333333
finished with 14
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 14)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9733333333333333
finished with 15
iteration 4 finished
*** starting iteration: 1; err: [Inf, 1.7328999939548269] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7328999939548269, 0.648171086396573] ***
*** finished computation of 3 references, err: [Inf, 1.7328999939548269, 0.648171086396573] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 20]]
** centroid: 1, normalized-entropy: 0.961236604722876, [(2, 32), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1002999957391324] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1002999957391324, 0.6745492979939689] ***
*** finished computation of 3 references, err: [Inf, 1.1002999957391324, 0.6745492979939689] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 40, 21]]
** centroid: 1, normalized-entropy: 0.9288391461883213, [(2, 40), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4487000008955095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4487000008955095, 0.5574424328076445] ***
*** finished computation of 3 references, err: [Inf, 1.4487000008955095, 0.5574424328076445] ***
*** center 1: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 10]]
** centroid: 3, normalized-entropy: 0.8418521897563208, [(2, 27), (3, 10)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9733333333333333
finished with 15
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9733333333333333
finished with 15
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9733333333333333
finished with 15
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9733333333333333
finished with 15
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9733333333333333
finished with 15
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.235, 3.6049999999999995, 1.4899999999999998, 0.275], [6.175, 2.683333333333333, 5.175, 1.7666666666666666], [4.725, 3.016666666666667, 1.45, 0.18333333333333335], [6.205882352941177, 2.9764705882352938, 4.488235294117647, 1.411764705882353], [5.539999999999998, 2.56, 3.846666666666667, 1.18], [6.600000000000001, 3.0875, 5.481249999999999, 2.1437500000000003], [7.487500000000001, 3.0125, 6.262499999999999, 2.0124999999999997]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 1, 2, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.587500000000001, 3.1249999999999996, 5.437499999999999, 2.075], [6.1450000000000005, 2.8949999999999996, 4.5649999999999995, 1.45], [6.016666666666666, 2.7249999999999996, 4.991666666666666, 1.8416666666666668], [7.5, 3.2800000000000002, 6.32, 2.16], [5.375000000000001, 3.8625, 1.5375, 0.3], [4.654545454545454, 3.1636363636363636, 1.3636363636363635, 0.2], [5.463157894736841, 2.6, 3.8631578947368417, 1.205263157894737], [4.988888888888889, 3.3111111111111113, 1.488888888888889, 0.21111111111111114]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 3, 1, 1, 2, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.647368421052631, 2.5421052631578944, 4.205263157894737, 1.3368421052631578], [4.433333333333334, 2.9166666666666665, 1.3166666666666667, 0.19999999999999998], [7.522222222222222, 3.166666666666667, 6.422222222222222, 2.066666666666667], [6.561111111111111, 3.016666666666667, 5.5555555555555545, 2.122222222222222], [4.972727272727273, 3.340909090909091, 1.4772727272727273, 0.25454545454545463], [6.407692307692307, 3.0076923076923077, 4.684615384615385, 1.5076923076923074], [5.859999999999999, 2.7, 4.9799999999999995, 1.8199999999999998], [5.341666666666668, 3.916666666666666, 1.5083333333333335, 0.2833333333333334]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 3, 3, 1, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[54, 23, 1, 23, 20, 31, 10, 22, 39, 1, 20, 46, 28, 1, 35, 25, 30, 36, 30, 24, 29, 32, 14, 23, 26, 46, 23, 27, 19, 13, 31, 1, 2, 16, 2, 41, 35, 27, 15, 24, 29, 25, 25, 44, 27, 31, 21, 41, 29, 23, 39, 39, 31, 34, 1, 13, 8, 31, 14, 35, 39, 36, 41, 22, 1, 1, 36, 36, 36, 28, 26, 33, 34, 49, 56, 17, 43, 29, 9, 20, 1, 22, 14, 43, 38, 21, 52, 11, 69, 31, 26, 23, 40, 31, 26, 37, 45, 36, 24, 32, 33, 43, 4, 31, 27, 36, 38, 36, 34, 47, 50, 25, 59, 33, 46, 41, 32, 39, 43, 39, 25, 19, 30, 14, 35, 22, 39, 40, 16, 41, 21, 1, 37, 37, 40, 45, 45, 29, 23, 2, 35, 53, 20, 36, 43, 22, 41, 35, 1, 40, 34, 28, 51, 22, 32, 30, 31, 40, 56, 30, 31, 36, 36, 50, 43, 36, 41, 37, 35, 30, 45, 36, 43, 32, 47, 37, 36, 49, 36, 28, 29, 31, 44, 38, 17, 40, 37, 35, 32, 65, 42, 1, 43, 23, 31, 38, 33, 46, 57, 29, 1, 40, 36, 35, 41, 74, 42, 32, 53, 37, 34, 28, 35, 38, 36, 26, 35, 72, 32, 65, 1, 20, 42, 59, 27, 18, 38, 39, 55, 44, 50, 37, 32, 41, 49, 35, 1, 37, 34, 68, 83, 64, 40, 23, 27, 36, 50, 53, 57, 27, 41, 43, 46, 19, 56, 44, 65, 26, 49, 16, 39, 26, 28, 8, 33, 50, 45, 43, 42, 58, 26, 55, 27, 33, 40, 39, 37, 32, 58, 20, 30, 43, 45, 44, 30, 36, 25, 30, 38, 30, 24, 49, 52, 48, 46, 4, 63, 29, 14, 46]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6490000000000002, speedup = 0.36893049825452234, eval_ratio = 0.041878)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.4184027777777779,"recall":0.4184027777777779,"f1":null,"seconds":7.460638880729675e-5,"exhaustive_search_seconds":0.0004887189716100693,"evaluations":340.1640625,"distances_sum":1786.9395537038884}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5868055555555552,"recall":0.5868055555555552,"f1":null,"seconds":0.00011542811989784241,"exhaustive_search_seconds":0.0004887189716100693,"evaluations":380.8515625,"distances_sum":1678.7751836515824}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.7083333333333329,"recall":0.7083333333333329,"f1":0.7083333333333329,"seconds":0.00014376826584339142,"exhaustive_search_seconds":0.0004887189716100693,"evaluations":420.515625,"distances_sum":1637.6435955171833}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7682291666666657,"recall":0.7682291666666657,"f1":0.7682291666666657,"seconds":0.00017168931663036346,"exhaustive_search_seconds":0.0004887189716100693,"evaluations":458.9921875,"distances_sum":1619.7141439851296}
KCenters.DeloneInvIndex> reached performance {"precision":0.8133680555555545,"recall":0.8133680555555545,"f1":0.8133680555555545,"seconds":0.0002090930938720703,"exhaustive_search_seconds":0.0004887189716100693,"evaluations":496.3828125,"distances_sum":1608.7587276536503}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7949999999999996, speedup = 1.0906334031462042, eval_ratio = 0.050054)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
