Julia Version 1.5.0-DEV.62
Commit 756891d910 (2020-01-14 06:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_XZX3Td/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_XZX3Td/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_XZX3Td/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.0423049126989056 -0.07911364035693366; 0.0423049126989056 0.0 -0.22447059454885904; 0.07911364035693366 0.22447059454885904 0.0])
dAA = so3([0.0 -0.11770128708278116 0.11415402661250727; 0.11770128708278116 0.0 -0.10693576374747188; -0.11415402661250727 0.10693576374747188 0.0])
dAA = so3([0.0 0.04330151170763663 0.11539580055581328; -0.04330151170763663 0.0 -0.16153894026753013; -0.11539580055581328 0.16153894026753013 0.0])
dAA = Quaternion(0.9912471408174295, [0.028450893167470015, 0.023226293878461767, -0.12680769602794487])
dAA = SO3([0.9998449634023808 0.009549159413559232 -0.014794009374963567; -0.011204322577488575 0.9931656026493086 -0.11617464813725602; 0.013583531001608404 0.11632239366833068 0.9931186174958148])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9176486694948869 -0.24525543396614843 0.31268305276164243; 0.3200394993229227 0.9225370639780669 -0.21563878236500267; -0.23557512230156397 0.2979515693813412 0.9250563356119448]), [2.2447059454885903, -0.7911364035693366, 0.423049126989056])
xj = SE3(SO3([0.798359975449248 0.5961254635545306 0.08518087404207657; -0.5798724035898647 0.7991991161703537 -0.1582048301014815; -0.16238640692985723 0.07691036610510678 0.9837252921573122]), [1.615389402675301, 1.1539580055581327, -0.4330151170763663])
Dx = SE3(SO3([0.5852860932055055 0.7846908545798514 -0.20420688489612374; -0.7791391917206555 0.6140033611860366 0.12626160294061461; 0.22446003881564272 0.08520642693478162 0.97075102667156]), [0.24668299162294272, 1.6936993021558142, -1.4081220603930529])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
