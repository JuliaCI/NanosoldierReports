Julia Version 1.5.0-DEV.71
Commit 15d693b0ec (2020-01-15 18:13 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_gjWw2Y/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_gjWw2Y/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_gjWw2Y/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.07274510594502835 -0.022668094549968293; -0.07274510594502835 0.0 0.09298860732061094; 0.022668094549968293 -0.09298860732061094 0.0])
dAA = so3([0.0 0.05734031830376274 -0.06837515828203038; -0.05734031830376274 0.0 0.06029833674247895; 0.06837515828203038 -0.06029833674247895 0.0])
dAA = so3([0.0 0.050575050587083274 -0.14698246180385166; -0.050575050587083274 0.0 0.08648503410479388; 0.14698246180385166 -0.08648503410479388 0.0])
dAA = Quaternion(0.9920313978376366, [-0.007496914887280428, 0.06668697664930959, -0.10663183913284269])
dAA = SO3([0.9885310881256445 0.12425106190220252 -0.08583683023798432; -0.1312554425406531 0.9879979961036242 -0.08143689887686524; 0.07468799510354267 0.0917694573994992 0.9929753622703913])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9752653608588373 0.15443150408033704 -0.15814040108829483; -0.12881862023671428 0.978493515948433 0.1611092869054504; 0.17961970657250026 -0.13675287855967933 0.9741844852061906]), [-0.9298860732061094, -0.2266809454996829, -0.7274510594502835])
xj = SE3(SO3([0.8070306480103269 0.49288089053291484 0.32522294033403093; -0.5161291272568853 0.8563412400581976 -0.017041260887451552; -0.28690112786302807 -0.15410421254160842 0.945483809754484]), [-0.8648503410479388, -1.4698246180385166, -0.5057505058708327])
Dx = SE3(SO3([0.8020229817910676 0.3426968091316044 0.48920142445620624; -0.3411634925045345 0.9351148827568786 -0.09574772806024075; -0.4902719735627083 -0.09010578814707787 0.8668992668593746]), [0.26338893782531314, -1.2366826459156832, 0.005410472286406454])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
