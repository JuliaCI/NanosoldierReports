Julia Version 1.5.0-DEV.71
Commit 15d693b0ec (2020-01-15 18:13 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed CEnum ────────────── v0.2.0
 Installed TimerOutputs ─────── v0.5.3
 Installed CUDAatomics ──────── v0.4.0
 Installed MacroTools ───────── v0.5.3
 Installed CUDAdrv ──────────── v5.0.1
 Installed CUDAnative ───────── v2.7.0
 Installed LLVM ─────────────── v1.3.3
 Installed CuArrays ─────────── v1.6.0
 Installed Requires ─────────── v1.0.0
 Installed DataStructures ───── v0.17.8
 Installed BinaryProvider ───── v0.5.8
 Installed OrderedCollections ─ v1.1.0
 Installed Adapt ────────────── v1.0.0
 Installed AbstractFFTs ─────── v0.5.0
 Installed CUDAapi ──────────── v2.1.0
 Installed NNlib ────────────── v0.6.3
 Installed GPUArrays ────────── v2.0.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [7ef05209] + CUDAatomics v0.4.0
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v1.0.0
  [b99e7846] + BinaryProvider v0.5.8
  [fa961155] + CEnum v0.2.0
  [3895d2a7] + CUDAapi v2.1.0
  [7ef05209] + CUDAatomics v0.4.0
  [c5f51814] + CUDAdrv v5.0.1
  [be33ccc6] + CUDAnative v2.7.0
  [3a865a2d] + CuArrays v1.6.0
  [864edb3b] + DataStructures v0.17.8
  [0c68f7d7] + GPUArrays v2.0.1
  [929cbde3] + LLVM v1.3.3
  [1914dd2f] + MacroTools v0.5.3
  [872c559c] + NNlib v0.6.3
  [bac558e1] + OrderedCollections v1.1.0
  [ae029012] + Requires v1.0.0
  [a759f4b9] + TimerOutputs v0.5.3
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building NNlib → `~/.julia/packages/NNlib/arc6W/deps/build.log`
  Updating `/tmp/jl_8928GM/Project.toml`
 [no changes]
  Updating `/tmp/jl_8928GM/Manifest.toml`
 [no changes]
   Testing CUDAatomics
  Updating `/tmp/jl_M8fKdw/Project.toml`
 [no changes]
  Updating `/tmp/jl_M8fKdw/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_M8fKdw/Project.toml`
  [7ef05209] CUDAatomics v0.4.0
  [be33ccc6] CUDAnative v2.7.0
  [3a865a2d] CuArrays v1.6.0
  [929cbde3] LLVM v1.3.3
  [8dfed614] Test 
[ Info: CUDAdrv.jl failed to initialize, GPU functionality unavailable (set JULIA_CUDA_SILENT or JULIA_CUDA_VERBOSE to silence or expand this message)
ERROR: LoadError: LoadError: syntax: invalid keyword argument syntax "(escape (= threads nthreads))"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CuArrays/rNxse/src/array.jl:317
 [2] include(::Module, ::String) at ./Base.jl:377
 [3] include(::String) at /home/pkgeval/.julia/packages/CuArrays/rNxse/src/CuArrays.jl:1
 [4] top-level scope at /home/pkgeval/.julia/packages/CuArrays/rNxse/src/CuArrays.jl:22
 [5] include(::Module, ::String) at ./Base.jl:377
 [6] top-level scope at none:2
 [7] eval at ./boot.jl:331 [inlined]
 [8] eval(::Expr) at ./client.jl:449
 [9] top-level scope at ./none:3
in expression starting at /home/pkgeval/.julia/packages/CuArrays/rNxse/src/array.jl:317
in expression starting at /home/pkgeval/.julia/packages/CuArrays/rNxse/src/CuArrays.jl:22
ERROR: LoadError: Failed to precompile CuArrays [3a865a2d-5b23-5a0f-bc46-62713ec82fae] to /home/pkgeval/.julia/compiled/v1.5/CuArrays/7YFE0_HyIpY.ji.
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] compilecache(::Base.PkgId, ::String) at ./loading.jl:1270
 [3] _require(::Base.PkgId) at ./loading.jl:1029
 [4] require(::Base.PkgId) at ./loading.jl:927
 [5] require(::Module, ::Symbol) at ./loading.jl:922
 [6] include(::String) at ./client.jl:439
 [7] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/CUDAatomics/pOvDm/test/runtests.jl:2
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/CUDAatomics/pOvDm/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/CUDAatomics/pOvDm/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package CUDAatomics errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
