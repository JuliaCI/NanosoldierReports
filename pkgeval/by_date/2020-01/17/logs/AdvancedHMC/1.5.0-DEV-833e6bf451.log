Julia Version 1.5.0-DEV.84
Commit 833e6bf451 (2020-01-17 18:45 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed ArgCheck ─────────── v1.0.1
 Installed DataAPI ──────────── v1.1.0
 Installed OrderedCollections ─ v1.1.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed MacroTools ───────── v0.5.3
 Installed StatsFuns ────────── v0.9.3
 Installed DataStructures ───── v0.17.9
 Installed BinaryProvider ───── v0.5.8
 Installed ProgressMeter ────── v1.2.0
 Installed Missings ─────────── v0.4.3
 Installed FillArrays ───────── v0.8.4
 Installed StatsBase ────────── v0.32.0
 Installed SortingAlgorithms ── v0.3.1
 Installed InplaceOps ───────── v0.3.0
 Installed Rmath ────────────── v0.6.0
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed LazyArrays ───────── v0.14.11
 Installed Requires ─────────── v1.0.0
 Installed ArrayLayouts ─────── v0.1.5
 Installed StaticArrays ─────── v0.12.1
 Installed Parameters ───────── v0.12.0
 Installed SpecialFunctions ─── v0.9.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_21yB13/Project.toml`
 [no changes]
  Updating `/tmp/jl_21yB13/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed TreeViews ─────────────────── v0.3.0
 Installed ForwardDiff ───────────────── v0.10.9
 Installed Bijectors ─────────────────── v0.5.2
 Installed InvertedIndices ───────────── v1.0.0
 Installed Combinatorics ─────────────── v0.7.0
 Installed Zygote ────────────────────── v0.4.6
 Installed ArrayInterface ────────────── v2.3.1
 Installed UnicodePlots ──────────────── v1.1.0
 Installed Distributions ─────────────── v0.21.12
 Installed OrdinaryDiffEq ────────────── v5.27.1
 Installed IRTools ───────────────────── v0.3.0
 Installed Turing ────────────────────── v0.8.2
 Installed Roots ─────────────────────── v0.8.4
 Installed RecursiveFactorization ────── v0.1.0
 Installed Libtask ───────────────────── v0.3.1
 Installed DiffResults ───────────────── v1.0.2
 Installed MuladdMacro ───────────────── v0.2.2
 Installed LineSearches ──────────────── v7.0.1
 Installed NNlib ─────────────────────── v0.6.4
 Installed JSON ──────────────────────── v0.21.0
 Installed DistributionsAD ───────────── v0.1.4
 Installed TableTraits ───────────────── v1.0.0
 Installed Arpack ────────────────────── v0.4.0
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed AxisArrays ────────────────── v0.4.0
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed RecursiveArrayTools ───────── v2.0.0
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed Reexport ──────────────────── v0.2.0
 Installed SimpleTraits ──────────────── v0.9.1
 Installed NaNMath ───────────────────── v0.3.3
 Installed ExponentialUtilities ──────── v1.6.0
 Installed IterativeSolvers ──────────── v0.8.1
 Installed IntervalSets ──────────────── v0.3.2
 Installed KernelDensity ─────────────── v0.5.1
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed LogDensityProblems ────────── v0.10.1
 Installed Interpolations ────────────── v0.12.6
 Installed MappedArrays ──────────────── v0.2.2
 Installed BenchmarkTools ────────────── v0.4.3
 Installed Tracker ───────────────────── v0.2.6
 Installed Ratios ────────────────────── v0.3.1
 Installed Inflate ───────────────────── v0.1.1
 Installed RecipesBase ───────────────── v0.7.0
 Installed DocStringExtensions ───────── v0.8.1
 Installed PositiveFactorizations ────── v0.2.3
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed Parsers ───────────────────── v0.3.10
 Installed PDMats ────────────────────── v0.9.10
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed ChainRulesCore ────────────── v0.4.0
 Installed Adapt ─────────────────────── v1.0.0
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed ZygoteRules ───────────────── v0.2.0
 Installed FFTW ──────────────────────── v1.2.0
 Installed OffsetArrays ──────────────── v0.11.4
 Installed SparseDiffTools ───────────── v1.2.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed CommonSubexpressions ──────── v0.2.0
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed TransformVariables ────────── v0.3.9
 Installed Showoff ───────────────────── v0.3.1
 Installed PooledArrays ──────────────── v0.5.3
 Installed Optim ─────────────────────── v0.19.7
 Installed NLSolversBase ─────────────── v7.5.0
 Installed LightGraphs ───────────────── v1.3.0
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed DiffEqBase ────────────────── v6.12.2
 Installed MCMCChains ────────────────── v1.0.1
 Installed Calculus ──────────────────── v0.5.1
 Installed DiffRules ─────────────────── v1.0.0
 Installed Tables ────────────────────── v0.2.11
 Installed IterTools ─────────────────── v1.3.0
 Installed DynamicPPL ────────────────── v0.1.1
 Installed GenericSVD ────────────────── v0.2.2
 Installed FunctionWrappers ──────────── v1.0.0
 Installed QuadGK ────────────────────── v2.3.1
 Installed DiffEqDiffTools ───────────── v1.7.0
 Installed DataFrames ────────────────── v0.20.0
 Installed Polynomials ───────────────── v0.6.0
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed RangeArrays ───────────────── v0.3.2
 Installed Compat ────────────────────── v2.2.0
 Installed ArnoldiMethod ─────────────── v0.0.4
  Updating `/tmp/jl_phhg4e/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.21.12
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [fce5fe82] + Turing v0.8.2
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_phhg4e/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.0
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [49dc2e85] + Calculus v0.5.1
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.4.0
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.12.2
  [01453d9d] + DiffEqDiffTools v1.7.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.21.12
  [ced4e74d] + DistributionsAD v0.1.4
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.0
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.6
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.1
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.5.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v0.11.4
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.19.7
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [90014a1f] + PDMats v0.9.10
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.0
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.2.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.2
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_0CAU8R/Project.toml`
 [no changes]
  Updating `/tmp/jl_0CAU8R/Manifest.toml`
 [no changes]
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_znJ0GT/Project.toml`
 [no changes]
  Updating `/tmp/jl_znJ0GT/Manifest.toml`
 [no changes]
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_06Oqwf/Project.toml`
 [no changes]
  Updating `/tmp/jl_06Oqwf/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_phhg4e/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.21.12
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.27.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.2
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.162246746
│   t_steps = 0.007993047
└   t_step / t_steps = 20.29848517092418
Sampling  0%|                               |  ETA: 5:28:47[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               2.087400871685508e-5
  log_density:                   -11.45771128357982
  hamiltonian_energy:            18.24237616410918
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  10.7770057749726
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▍                            |  ETA: 0:00:30[K
  iterations:                    938
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6953466449813327
  log_density:                   -15.432666839961229
  hamiltonian_energy:            20.50918731737147
  hamiltonian_energy_error:      0.32538084472160733
  max_hamiltonian_energy_error:  0.6381119010172256
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6139498906051649
  nom_step_size:                 0.6139498906051649
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.932214649321024, 0.83798 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▉                            |  ETA: 0:00:25[K
  iterations:                    1128
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.6474786962873318
  log_density:                   -14.599917341297314
  hamiltonian_energy:            24.15399140170875
  hamiltonian_energy_error:      -0.05625186370921398
  max_hamiltonian_energy_error:  0.9001582993121922
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8293993073380065
  nom_step_size:                 0.8293993073380065
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.932214649321024, 0.83798 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:23[K
  iterations:                    1290
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8521949776506402
  log_density:                   -12.704847900439571
  hamiltonian_energy:            18.414229911207038
  hamiltonian_energy_error:      -0.11347343313815017
  max_hamiltonian_energy_error:  0.34415941877147915
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.756918835139984
  nom_step_size:                 0.756918835139984
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.932214649321024, 0.83798 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:19[K
  iterations:                    1559
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9585920162340066
  log_density:                   -12.88497165370384
  hamiltonian_energy:            16.825934506773237
  hamiltonian_energy_error:      -0.06999929914799097
  max_hamiltonian_energy_error:  -0.2618388552989046
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8055294369529336
  nom_step_size:                 0.8055294369529336
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.932214649321024, 0.83798 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:17[K
  iterations:                    1786
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.9970838735840204
  log_density:                   -14.0748871756529
  hamiltonian_energy:            19.99825090171428
  hamiltonian_energy_error:      -0.5457242968629501
  max_hamiltonian_energy_error:  -0.7397255146799004
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8590144930323731
  nom_step_size:                 0.8590144930323731
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.932214649321024, 0.83798 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▎                         |  ETA: 0:00:15[K
  iterations:                    2030
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.852039830212871
  log_density:                   -10.944978973352661
  hamiltonian_energy:            14.521937888058766
  hamiltonian_energy_error:      -0.04564727568809879
  max_hamiltonian_energy_error:  0.33338621694806037
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|██████                         |  ETA: 0:00:13[K
  iterations:                    2325
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.7817112292187659
  log_density:                   -15.801908311630688
  hamiltonian_energy:            18.721952334504888
  hamiltonian_energy_error:      0.47964965479632227
  max_hamiltonian_energy_error:  0.4904409349831127
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▉                        |  ETA: 0:00:11[K
  iterations:                    2642
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7042566882737631
  log_density:                   -13.510666005068702
  hamiltonian_energy:            17.195058395813778
  hamiltonian_energy_error:      0.31813881806663247
  max_hamiltonian_energy_error:  0.640832236858337
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▋                       |  ETA: 0:00:10[K
  iterations:                    2965
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.931144658935808
  log_density:                   -20.451361460931462
  hamiltonian_energy:            26.826835388890107
  hamiltonian_energy_error:      0.268806260092763
  max_hamiltonian_energy_error:  -0.29951791908830216
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▌                      |  ETA: 0:00:09[K
  iterations:                    3311
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5046193955375647
  log_density:                   -11.884986525190888
  hamiltonian_energy:            21.48633045907974
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  1.2082204962196919
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▎                     |  ETA: 0:00:08[K
  iterations:                    3583
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9963557045453256
  log_density:                   -11.464275415789801
  hamiltonian_energy:            15.547861128285447
  hamiltonian_energy_error:      -0.36601236770489187
  max_hamiltonian_energy_error:  -0.3920787784223627
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|██████████                     |  ETA: 0:00:08[K
  iterations:                    3873
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9981477697833642
  log_density:                   -12.697446751501216
  hamiltonian_energy:            17.430002159283656
  hamiltonian_energy_error:      -0.34608298492964806
  max_hamiltonian_energy_error:  -0.3940496429635374
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▉                    |  ETA: 0:00:07[K
  iterations:                    4227
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7709548196864322
  log_density:                   -12.878742017970367
  hamiltonian_energy:            18.309879615940645
  hamiltonian_energy_error:      0.05090470416359949
  max_hamiltonian_energy_error:  0.4564791092611493
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████▏                  |  ETA: 0:00:06[K
  iterations:                    4671
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.694341447027226
  hamiltonian_energy:            15.594259555213728
  hamiltonian_energy_error:      -0.0091426867833313
  max_hamiltonian_energy_error:  -0.35785683088836606
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|████████████▉                  |  ETA: 0:00:06[K
  iterations:                    5003
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9536625547984281
  log_density:                   -10.355580840271278
  hamiltonian_energy:            14.135655146513896
  hamiltonian_energy_error:      -0.3196212432171297
  max_hamiltonian_energy_error:  -0.3196212432171297
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▉                 |  ETA: 0:00:05[K
  iterations:                    5372
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9705031461977516
  log_density:                   -17.157663195164695
  hamiltonian_energy:            19.70277990612506
  hamiltonian_energy_error:      0.11991606863011839
  max_hamiltonian_energy_error:  -0.5414978864013555
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▊                |  ETA: 0:00:05[K
  iterations:                    5724
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.7406471914528298
  log_density:                   -17.475992845361816
  hamiltonian_energy:            23.873639754769776
  hamiltonian_energy_error:      0.3916759308414228
  max_hamiltonian_energy_error:  0.8200735624939064
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:04[K
  iterations:                    6128
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6895275864523521
  log_density:                   -13.86250281509739
  hamiltonian_energy:            18.420177028873162
  hamiltonian_energy_error:      0.2944313419775142
  max_hamiltonian_energy_error:  0.6894977148955732
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|████████████████▉              |  ETA: 0:00:04[K
  iterations:                    6542
  n_steps:                       59
  is_accept:                     true
  acceptance_rate:               0.9776563187816333
  log_density:                   -14.010165398320579
  hamiltonian_energy:            24.506063647334692
  hamiltonian_energy_error:      -1.0757513328817225
  max_hamiltonian_energy_error:  -1.1804520443465947
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|█████████████████▉             |  ETA: 0:00:03[K
  iterations:                    6917
  n_steps:                       39
  is_accept:                     true
  acceptance_rate:               0.9597479499803137
  log_density:                   -13.352228123040456
  hamiltonian_energy:            15.48771739527885
  hamiltonian_energy_error:      0.13231400918780345
  max_hamiltonian_energy_error:  0.13747559168171186
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|███████████████████            |  ETA: 0:00:03[K
  iterations:                    7336
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.967863715803066
  log_density:                   -11.562247354850435
  hamiltonian_energy:            14.071001378780782
  hamiltonian_energy_error:      -0.10576046315672905
  max_hamiltonian_energy_error:  -0.23022270293403047
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|███████████████████▉           |  ETA: 0:00:03[K
  iterations:                    7697
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8581019609991195
  log_density:                   -11.413745197863014
  hamiltonian_energy:            18.035306811696817
  hamiltonian_energy_error:      -0.36636723929257187
  max_hamiltonian_energy_error:  0.4377851371207804
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▊          |  ETA: 0:00:02[K
  iterations:                    8018
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.762689390028278
  hamiltonian_energy:            23.647579933637843
  hamiltonian_energy_error:      -0.46987603102065734
  max_hamiltonian_energy_error:  -0.5060054145318524
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▉         |  ETA: 0:00:02[K
  iterations:                    8453
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8740181779490132
  log_density:                   -11.716294368430797
  hamiltonian_energy:            18.50483964438343
  hamiltonian_energy_error:      -0.3795762018330606
  max_hamiltonian_energy_error:  0.4278572635158824
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 74%|██████████████████████▊        |  ETA: 0:00:02[K
  iterations:                    8826
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9569001974856348
  log_density:                   -15.479879765371486
  hamiltonian_energy:            19.77262954231619
  hamiltonian_energy_error:      -0.06028620805174967
  max_hamiltonian_energy_error:  -0.5510167656270752
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|███████████████████████▉       |  ETA: 0:00:02[K
  iterations:                    9234
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.71343984286143
  hamiltonian_energy:            15.94594600294019
  hamiltonian_energy_error:      -0.004320193529474992
  max_hamiltonian_energy_error:  -0.27952639298692716
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▉      |  ETA: 0:00:01[K
  iterations:                    9610
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7346331402153433
  log_density:                   -15.894701313034357
  hamiltonian_energy:            20.179409604654246
  hamiltonian_energy_error:      0.42386125533547414
  max_hamiltonian_energy_error:  0.5930362077810258
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▋     |  ETA: 0:00:01[K
  iterations:                    9932
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               0.9726084775058743
  log_density:                   -14.100705873271245
  hamiltonian_energy:            21.50231124350931
  hamiltonian_energy_error:      -0.564748047980494
  max_hamiltonian_energy_error:  -0.8011708960934527
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▊    |  ETA: 0:00:01[K
  iterations:                    10366
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.701402835281483
  log_density:                   -14.484137206949649
  hamiltonian_energy:            15.801236598816244
  hamiltonian_energy_error:      0.5315026125036457
  max_hamiltonian_energy_error:  0.5315026125036457
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▊   |  ETA: 0:00:01[K
  iterations:                    10726
  n_steps:                       67
  is_accept:                     true
  acceptance_rate:               0.9592152051950127
  log_density:                   -12.583784421078517
  hamiltonian_energy:            17.432078202046245
  hamiltonian_energy_error:      -0.2570240200929703
  max_hamiltonian_energy_error:  -0.40216799398051606
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|████████████████████████████▊  |  ETA: 0:00:00[K
  iterations:                    11120
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9734259111897072
  log_density:                   -11.722708763215312
  hamiltonian_energy:            15.801448274324205
  hamiltonian_energy_error:      -0.3531111038816519
  max_hamiltonian_energy_error:  -0.448408265447533
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▋ |  ETA: 0:00:00[K
  iterations:                    11447
  n_steps:                       27
  is_accept:                     true
  acceptance_rate:               0.8569692106068793
  log_density:                   -11.891981826926246
  hamiltonian_energy:            15.308316941051688
  hamiltonian_energy_error:      0.04944057116251699
  max_hamiltonian_energy_error:  0.38183863884586877
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▍|  ETA: 0:00:00[K
  iterations:                    11775
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.172785413465432
  hamiltonian_energy:            17.66379296945362
  hamiltonian_energy_error:      -0.2512827894162051
  max_hamiltonian_energy_error:  -0.6394673873449932
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7707249270421295
  log_density:                   -16.259682247263118
  hamiltonian_energy:            20.16034096439114
  hamiltonian_energy_error:      0.41282151096302755
  max_hamiltonian_energy_error:  0.5800873518893823
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7572597397286334
  nom_step_size:                 0.7572597397286334
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9441036717346227, 1.0610 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.866377213 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9441036717346227, 1.0610 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.757), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0685178015578833
└   average_acceptance_rate = 0.849871773319337
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.001688383 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡄⠀⠀⢀⡄⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠁⠀⢱⠀⠀⡜⠈⢆│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠱⡀⡸⠀⠀⢠⡆⠀⠀⠀⠀⠀⠀⢰⠑⢄⠀⠀⢠⠃⠀⠀⠀⢣⡸⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠘⠇⠀⠀⡎⢱⠀⠀⠀⠀⠀⢠⠃⠀⠀⠑⠤⡎⠀⠀⠀⠀⠈⠃⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⢰⠁⠈⡆⠀⡠⠤⠤⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⡄⠀⠀⠀⠀⠀⢀⣀⠇⠀⠀⠀⠀⠀⡇⠀⠀⢸⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢣⠀⠀⠀⠀⡜⠁⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠘⡄⠀⠀⡜⢠⢄⣀⢀⠔⠊⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡄⢣⠀⡰⡕⠁⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠈⢎⡲⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
