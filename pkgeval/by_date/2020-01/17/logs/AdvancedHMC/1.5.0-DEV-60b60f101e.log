Julia Version 1.5.0-DEV.77
Commit 60b60f101e (2020-01-16 15:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed InplaceOps ───────── v0.3.0
 Installed ProgressMeter ────── v1.2.0
 Installed Requires ─────────── v1.0.0
 Installed ArgCheck ─────────── v1.0.1
 Installed Rmath ────────────── v0.6.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed SpecialFunctions ─── v0.9.0
 Installed MacroTools ───────── v0.5.3
 Installed BinaryProvider ───── v0.5.8
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed Parameters ───────── v0.12.0
 Installed OrderedCollections ─ v1.1.0
 Installed StaticArrays ─────── v0.12.1
 Installed StatsFuns ────────── v0.9.3
 Installed DataStructures ───── v0.17.9
 Installed LazyArrays ───────── v0.14.11
 Installed DataAPI ──────────── v1.1.0
 Installed ArrayLayouts ─────── v0.1.5
 Installed SortingAlgorithms ── v0.3.1
 Installed Missings ─────────── v0.4.3
 Installed FillArrays ───────── v0.8.4
 Installed StatsBase ────────── v0.32.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_tFcl5K/Project.toml`
 [no changes]
  Updating `/tmp/jl_tFcl5K/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed ForwardDiff ───────────────── v0.10.9
 Installed Zygote ────────────────────── v0.4.6
 Installed RecipesBase ───────────────── v0.7.0
 Installed Distributions ─────────────── v0.21.12
 Installed Bijectors ─────────────────── v0.5.2
 Installed UnicodePlots ──────────────── v1.1.0
 Installed Arpack ────────────────────── v0.4.0
 Installed RecursiveArrayTools ───────── v2.0.0
 Installed IterativeSolvers ──────────── v0.8.1
 Installed OrdinaryDiffEq ────────────── v5.27.1
 Installed PooledArrays ──────────────── v0.5.3
 Installed ChainRulesCore ────────────── v0.4.0
 Installed QuadGK ────────────────────── v2.3.1
 Installed CommonSubexpressions ──────── v0.2.0
 Installed Turing ────────────────────── v0.8.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed IRTools ───────────────────── v0.3.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed Optim ─────────────────────── v0.19.7
 Installed TableTraits ───────────────── v1.0.0
 Installed LogDensityProblems ────────── v0.10.1
 Installed TreeViews ─────────────────── v0.3.0
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed DiffRules ─────────────────── v1.0.0
 Installed MCMCChains ────────────────── v1.0.1
 Installed DynamicPPL ────────────────── v0.1.1
 Installed Tables ────────────────────── v0.2.11
 Installed MuladdMacro ───────────────── v0.2.2
 Installed LightGraphs ───────────────── v1.3.0
 Installed DocStringExtensions ───────── v0.8.1
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed Combinatorics ─────────────── v0.7.0
 Installed Inflate ───────────────────── v0.1.1
 Installed Showoff ───────────────────── v0.3.1
 Installed Tracker ───────────────────── v0.2.6
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed DiffEqBase ────────────────── v6.12.2
 Installed FunctionWrappers ──────────── v1.0.0
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed Roots ─────────────────────── v0.8.4
 Installed IterTools ─────────────────── v1.3.0
 Installed BenchmarkTools ────────────── v0.4.3
 Installed DiffResults ───────────────── v1.0.2
 Installed Ratios ────────────────────── v0.3.1
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed Adapt ─────────────────────── v1.0.0
 Installed AxisArrays ────────────────── v0.4.0
 Installed PositiveFactorizations ────── v0.2.3
 Installed JSON ──────────────────────── v0.21.0
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed NaNMath ───────────────────── v0.3.3
 Installed Libtask ───────────────────── v0.3.1
 Installed RecursiveFactorization ────── v0.1.0
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed NLSolversBase ─────────────── v7.5.0
 Installed GenericSVD ────────────────── v0.2.2
 Installed TransformVariables ────────── v0.3.9
 Installed Calculus ──────────────────── v0.5.1
 Installed ArrayInterface ────────────── v2.3.1
 Installed FFTW ──────────────────────── v1.2.0
 Installed DiffEqDiffTools ───────────── v1.7.0
 Installed DataFrames ────────────────── v0.20.0
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed ExponentialUtilities ──────── v1.6.0
 Installed DistributionsAD ───────────── v0.1.4
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed Parsers ───────────────────── v0.3.10
 Installed CategoricalArrays ─────────── v0.7.7
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed ZygoteRules ───────────────── v0.2.0
 Installed PDMats ────────────────────── v0.9.10
 Installed SparseDiffTools ───────────── v1.2.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed LineSearches ──────────────── v7.0.1
 Installed Reexport ──────────────────── v0.2.0
 Installed Polynomials ───────────────── v0.6.0
 Installed OffsetArrays ──────────────── v0.11.4
 Installed IntervalSets ──────────────── v0.3.2
 Installed KernelDensity ─────────────── v0.5.1
 Installed Compat ────────────────────── v2.2.0
 Installed RangeArrays ───────────────── v0.3.2
 Installed NNlib ─────────────────────── v0.6.4
 Installed Interpolations ────────────── v0.12.6
 Installed SimpleTraits ──────────────── v0.9.1
  Updating `/tmp/jl_4oK2Fh/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.21.12
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [fce5fe82] + Turing v0.8.2
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_4oK2Fh/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.0
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [49dc2e85] + Calculus v0.5.1
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.4.0
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.12.2
  [01453d9d] + DiffEqDiffTools v1.7.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.21.12
  [ced4e74d] + DistributionsAD v0.1.4
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.0
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.6
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.1
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.5.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v0.11.4
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.19.7
  [1dea7af3] + OrdinaryDiffEq v5.27.1
  [90014a1f] + PDMats v0.9.10
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.0
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.2.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.2
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_76OBlQ/Project.toml`
 [no changes]
  Updating `/tmp/jl_76OBlQ/Manifest.toml`
 [no changes]
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_CaGkic/Project.toml`
 [no changes]
  Updating `/tmp/jl_CaGkic/Manifest.toml`
 [no changes]
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_HnxC8z/Project.toml`
 [no changes]
  Updating `/tmp/jl_HnxC8z/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_4oK2Fh/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.21.12
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.27.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.2
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.183418598
│   t_steps = 0.008942475
└   t_step / t_steps = 20.510943335038675
Sampling  0%|                               |  ETA: 5:38:27[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5323784309865659
  log_density:                   -10.85820792577558
  hamiltonian_energy:            15.531163709460628
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  0.8292460472655385
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9
  nom_step_size:                 0.9
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▊                            |  ETA: 0:00:28[K
  iterations:                    1046
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9247268710981492
  log_density:                   -15.911260685516202
  hamiltonian_energy:            21.245885024267235
  hamiltonian_energy_error:      0.10659458094756147
  max_hamiltonian_energy_error:  0.2104913512788329
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.5811962033597894
  nom_step_size:                 0.5811962033597894
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0197186620760472, 1.0413 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:23[K
  iterations:                    1288
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.996096227189894
  log_density:                   -15.352001255586682
  hamiltonian_energy:            19.536139980252823
  hamiltonian_energy_error:      0.007274467876516866
  max_hamiltonian_energy_error:  -0.11377358137962545
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6139774429182987
  nom_step_size:                 0.6139774429182987
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0197186620760472, 1.0413 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:19[K
  iterations:                    1552
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6729051888311378
  log_density:                   -14.237923154223775
  hamiltonian_energy:            17.057481364134322
  hamiltonian_energy_error:      0.3435591426131843
  max_hamiltonian_energy_error:  0.43013394105017255
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.1066787856904434
  nom_step_size:                 1.1066787856904434
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0197186620760472, 1.0413 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:17[K
  iterations:                    1785
  n_steps:                       47
  is_accept:                     true
  acceptance_rate:               0.9917446790837952
  log_density:                   -11.865106430504383
  hamiltonian_energy:            17.74088287121296
  hamiltonian_energy_error:      -0.6915307049911519
  max_hamiltonian_energy_error:  -0.8612063395344443
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7748484889732183
  nom_step_size:                 0.7748484889732183
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0197186620760472, 1.0413 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▎                         |  ETA: 0:00:15[K
  iterations:                    2056
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9880254424092748
  log_density:                   -12.262426401135805
  hamiltonian_energy:            17.688875646492757
  hamiltonian_energy_error:      -0.36860434036640655
  max_hamiltonian_energy_error:  -0.36860434036640655
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▍                        |  ETA: 0:00:13[K
  iterations:                    2446
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9651737439774057
  log_density:                   -17.052091266555202
  hamiltonian_energy:            24.674797400186364
  hamiltonian_energy_error:      -0.14070900337625858
  max_hamiltonian_energy_error:  -0.3550123149467339
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████▎                       |  ETA: 0:00:11[K
  iterations:                    2813
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8341714883556707
  log_density:                   -12.79912083730239
  hamiltonian_energy:            21.000065951641982
  hamiltonian_energy_error:      -0.2550471777775769
  max_hamiltonian_energy_error:  0.5010189883030982
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▌                      |  ETA: 0:00:09[K
  iterations:                    3287
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9122022094511354
  log_density:                   -14.048163264819388
  hamiltonian_energy:            20.050988841396478
  hamiltonian_energy_error:      -0.07817479187925258
  max_hamiltonian_energy_error:  0.20108720380986966
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▌                     |  ETA: 0:00:08[K
  iterations:                    3683
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7356085728500891
  log_density:                   -15.493029707768523
  hamiltonian_energy:            17.806204796745334
  hamiltonian_energy_error:      0.5382504605196203
  max_hamiltonian_energy_error:  0.5760958500142905
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▋                    |  ETA: 0:00:07[K
  iterations:                    4112
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.993377219505055
  log_density:                   -14.627600904420024
  hamiltonian_energy:            21.452089530243576
  hamiltonian_energy_error:      -0.32690518717020467
  max_hamiltonian_energy_error:  -0.5004196087503985
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▋                   |  ETA: 0:00:06[K
  iterations:                    4503
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9605321880776
  log_density:                   -12.19671484626411
  hamiltonian_energy:            16.00043265208041
  hamiltonian_energy_error:      -0.19686635656460538
  max_hamiltonian_energy_error:  -0.4132764739676631
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▊                  |  ETA: 0:00:06[K
  iterations:                    4912
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8135171475403443
  log_density:                   -17.53341185782243
  hamiltonian_energy:            26.477564220957362
  hamiltonian_energy_error:      0.03939359962715372
  max_hamiltonian_energy_error:  0.6131414733237932
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 44%|█████████████▋                 |  ETA: 0:00:05[K
  iterations:                    5296
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8761301896382842
  log_density:                   -14.122894953421056
  hamiltonian_energy:            17.661271667798438
  hamiltonian_energy_error:      0.1878980049779706
  max_hamiltonian_energy_error:  0.25782070557967884
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▋                |  ETA: 0:00:05[K
  iterations:                    5646
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.31397712629538
  hamiltonian_energy:            14.291614159162567
  hamiltonian_energy_error:      -0.016583905443107838
  max_hamiltonian_energy_error:  -0.14376840594508344
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▊               |  ETA: 0:00:04[K
  iterations:                    6101
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8427982590797523
  log_density:                   -13.597735347132755
  hamiltonian_energy:            17.715920141389546
  hamiltonian_energy_error:      0.11318420741665847
  max_hamiltonian_energy_error:  0.46587660610696346
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▋              |  ETA: 0:00:04[K
  iterations:                    6437
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7694479583612492
  log_density:                   -12.006481354736442
  hamiltonian_energy:            18.784939073141746
  hamiltonian_energy_error:      -0.07356286526492894
  max_hamiltonian_energy_error:  0.585879779555178
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▊             |  ETA: 0:00:03[K
  iterations:                    6884
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9035691631091645
  log_density:                   -13.963261971863645
  hamiltonian_energy:            18.50515764103994
  hamiltonian_energy_error:      -0.010676943676354966
  max_hamiltonian_energy_error:  0.29342111285137307
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|██████████████████▉            |  ETA: 0:00:03[K
  iterations:                    7285
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7777239074299158
  log_density:                   -12.611161496866814
  hamiltonian_energy:            18.18171083504847
  hamiltonian_energy_error:      0.03952206851894502
  max_hamiltonian_energy_error:  0.48127731367128135
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|████████████████████           |  ETA: 0:00:03[K
  iterations:                    7725
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8195954352971431
  log_density:                   -13.186285008276876
  hamiltonian_energy:            20.384165303704094
  hamiltonian_energy_error:      -0.1905064924315667
  max_hamiltonian_energy_error:  0.49090636489617623
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████▏         |  ETA: 0:00:02[K
  iterations:                    8183
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7470226419153992
  log_density:                   -15.273109761455448
  hamiltonian_energy:            17.018396493328858
  hamiltonian_energy_error:      0.5085383578269074
  max_hamiltonian_energy_error:  0.5085383578269074
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|█████████████████████▉         |  ETA: 0:00:02[K
  iterations:                    8489
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9199005876577235
  log_density:                   -14.332953714536927
  hamiltonian_energy:            19.39836853145871
  hamiltonian_energy_error:      -0.1767085021676671
  max_hamiltonian_energy_error:  -0.6486097082916658
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▏       |  ETA: 0:00:02[K
  iterations:                    8962
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9005066721393423
  log_density:                   -14.505121305015031
  hamiltonian_energy:            18.696315390872435
  hamiltonian_energy_error:      0.12140337813170987
  max_hamiltonian_energy_error:  0.2849091707869569
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|████████████████████████       |  ETA: 0:00:01[K
  iterations:                    9293
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9829056919748294
  log_density:                   -14.456059617513436
  hamiltonian_energy:            23.393390016055733
  hamiltonian_energy_error:      -0.43177493526529886
  max_hamiltonian_energy_error:  -0.43177493526529886
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 81%|█████████████████████████▏     |  ETA: 0:00:01[K
  iterations:                    9727
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9550457860020101
  log_density:                   -10.692368888781568
  hamiltonian_energy:            18.310456579927607
  hamiltonian_energy_error:      -0.6359685721918176
  max_hamiltonian_energy_error:  -0.6359685721918176
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████     |  ETA: 0:00:01[K
  iterations:                    10069
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7486097270484479
  log_density:                   -12.584314119335886
  hamiltonian_energy:            19.27284909150646
  hamiltonian_energy_error:      -0.033294684164207666
  max_hamiltonian_energy_error:  0.5370340999943011
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|███████████████████████████▏   |  ETA: 0:00:01[K
  iterations:                    10483
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7904913537338599
  log_density:                   -15.672207802058216
  hamiltonian_energy:            20.5954353492074
  hamiltonian_energy_error:      0.2889667313826578
  max_hamiltonian_energy_error:  0.5143025855943328
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 90%|████████████████████████████   |  ETA: 0:00:01[K
  iterations:                    10852
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.35659862030138
  hamiltonian_energy:            22.243404002123768
  hamiltonian_energy_error:      -0.8855515048459672
  max_hamiltonian_energy_error:  -0.9809401548939256
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|█████████████████████████████  |  ETA: 0:00:00[K
  iterations:                    11215
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.96673870177763
  hamiltonian_energy:            19.112557083756414
  hamiltonian_energy_error:      -0.5174638664344897
  max_hamiltonian_energy_error:  -0.5963627420072619
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████ |  ETA: 0:00:00[K
  iterations:                    11624
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5127366085901287
  log_density:                   -18.553327487863527
  hamiltonian_energy:            19.932373419471176
  hamiltonian_energy_error:      0.9710034388358864
  max_hamiltonian_energy_error:  0.9710034388358864
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8023170596621322
  log_density:                   -13.194024779757427
  hamiltonian_energy:            19.748539169396167
  hamiltonian_energy_error:      -0.059218541378765366
  max_hamiltonian_energy_error:  0.47046276674047505
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7150759830728972
  nom_step_size:                 0.7150759830728972
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0125680627417073, 0.9161 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.729452545 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0125680627417073, 0.9161 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.715), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.088384976339523
└   average_acceptance_rate = 0.8631455005074592
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.962865952 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢄⣀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢄⡀⠀⠀⢠⠃⠈⠢│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠈⠑⠢⠇⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⡰⢣⠀⠀⠀⠀⣀⠤⢄⣀⠤⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠁⠀⠀⠀⢠⠃⠀⠱⡠⠔⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⢀⣀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣣⠀⠀⢀⡜⠀⣀⡠⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⢧⣠⠮⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
