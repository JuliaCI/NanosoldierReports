Julia Version 1.5.0-DEV.77
Commit 60b60f101e (2020-01-16 15:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed DataValueInterfaces ───────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed LearnBase ─────────────────── v0.2.2
 Installed MappedArrays ──────────────── v0.2.2
 Installed Tables ────────────────────── v0.2.11
 Installed KCenters ──────────────────── v0.1.8
 Installed TableTraits ───────────────── v1.0.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed DataStructures ────────────── v0.17.9
 Installed JSON ──────────────────────── v0.21.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed MLDataPattern ─────────────── v0.5.0
 Installed DataFrames ────────────────── v0.20.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed InvertedIndices ───────────── v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed CategoricalArrays ─────────── v0.7.7
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed Parsers ───────────────────── v0.3.10
 Installed Reexport ──────────────────── v0.2.0
 Installed Compat ────────────────────── v3.2.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_8d8CBg/Project.toml`
 [no changes]
  Updating `/tmp/jl_8d8CBg/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_8d8CBg/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 113.99000000000012
[ Info: 74.39
[ Info: 44.99999999999999
[ Info: 24.32
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999835129265
[ Info: 76.86000119157046
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.92052880891481
inertia(cdnet.distances) = 21.07052060549733
inertia(crand.distances) = 21.307254317633753
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.166015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.166015625,"f1":null,"seconds":0.0010040588676929474,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.4296875,"distances_sum":485.3458922767804}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.166015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.166015625,"f1":null,"seconds":0.0010040588676929474,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.4296875,"distances_sum":485.3458922767804}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7138671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7138671875,"f1":0.8223261113886122,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.1796875,"distances_sum":2040.2922966230985}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1943359375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1943359375,"f1":null,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.609375,"distances_sum":541.7343020337225}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7138671875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7138671875,"f1":0.8223261113886122,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.1796875,"distances_sum":2040.2922966230985}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8771384865134874,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.1953125,"distances_sum":2370.691777275586}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9085794413919419,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.609375,"distances_sum":2528.967355540767}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8845732392607399,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.28125,"distances_sum":2381.0497147733554}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.84375,"f1":0.9085794413919419,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.609375,"distances_sum":2528.967355540767}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9315018315018321,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.828125,"distances_sum":2698.3468883147702}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9617616758241763,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.90625,"distances_sum":2943.1282432615735}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9598443223443228,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.890625,"distances_sum":2913.023354854534}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9575206043956048,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9765625,"distances_sum":2871.1965603994845}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9617616758241763,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.90625,"distances_sum":2943.1282432615735}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9617616758241763,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.90625,"distances_sum":2943.1282432615735}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.484375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.484375,"f1":0.6346743534243537,"seconds":3.980472683906555e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":6.3046875,"distances_sum":1381.3229080161973}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.306640625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.306640625,"f1":null,"seconds":3.7811696529388428e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":5.0546875,"distances_sum":878.6227652216492}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.484375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.484375,"f1":0.6346743534243537,"seconds":3.980472683906555e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":6.3046875,"distances_sum":1381.3229080161973}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8617320179820186,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.1875,"distances_sum":2181.2692235412674}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8933816183816193,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.3203125,"distances_sum":2386.1289984486502}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8428389319014327,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.078125,"distances_sum":2102.2154314052536}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8562593656343667,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.15625,"distances_sum":2161.3850661317288}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.82421875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.82421875,"f1":0.8933816183816193,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.3203125,"distances_sum":2386.1289984486502}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9621508699633703,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.828125,"distances_sum":2826.8385730741147}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9186355311355318,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.59375,"distances_sum":2560.772173790272}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9436641483516487,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7265625,"distances_sum":2680.4332612523194}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9249828296703301,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7109375,"distances_sum":2576.599796860234}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9353766025641033,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.6015625,"distances_sum":2662.2506957704522}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9474244505494511,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.625,"distances_sum":2780.550541636806}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9498054029304034,"seconds":6.319954991340637e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7421875,"distances_sum":2745.9603055966545}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8956132409257416,"seconds":0.001129150390625,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.390625,"distances_sum":2396.1823400726093}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9512133699633704,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7734375,"distances_sum":2734.149167560848}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9621508699633703,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.828125,"distances_sum":2826.8385730741147}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9621508699633703,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.828125,"distances_sum":2826.8385730741147}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.19921875,"f1":null,"seconds":3.466382622718811e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.2109375,"distances_sum":532.0889041123546}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2109375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2109375,"f1":null,"seconds":3.3248215913772583e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.1796875,"distances_sum":593.9068948249632}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7759355228105236,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.171875,"distances_sum":1766.4368079800108}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65234375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.65234375,"f1":0.7759355228105236,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.171875,"distances_sum":1766.4368079800108}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9096528471528481,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7890625,"distances_sum":2405.9732623551445}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9406765109890115,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.765625,"distances_sum":2692.144020404756}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.8002965784215792,"seconds":4.995614290237427e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.234375,"distances_sum":1835.1972710705243}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8746373418248428,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.3515625,"distances_sum":2267.7944104857247}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7927676490176497,"seconds":5.159527063369751e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.0546875,"distances_sum":1850.9842057940593}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9406765109890115,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.765625,"distances_sum":2692.144020404756}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9683264652014654,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9140625,"distances_sum":2886.6567361219095}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9693853021978026,"seconds":7.294118404388428e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9609375,"distances_sum":2865.6847563361835}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9581902472527477,"seconds":6.454065442085266e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8828125,"distances_sum":2801.6593056406546}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9693853021978026,"seconds":7.294118404388428e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9609375,"distances_sum":2865.6847563361835}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9693853021978026,"seconds":7.294118404388428e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9609375,"distances_sum":2865.6847563361835}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.796569576257077,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":7.7109375,"distances_sum":1843.5492894617657}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5498046875,"f1":null,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":7.171875,"distances_sum":1403.682842873559}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8804008491508499,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.2890625,"distances_sum":2229.25008803512}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7978515625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7978515625,"f1":0.8804008491508499,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.2890625,"distances_sum":2229.25008803512}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9371336996337003,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.6640625,"distances_sum":2600.877385162833}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9453754578754584,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.7265625,"distances_sum":2693.1728731214776}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9084452006327013,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.5703125,"distances_sum":2404.737290775023}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9453754578754584,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.7265625,"distances_sum":2693.1728731214776}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9505093864468872,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.7421875,"distances_sum":2728.085561644361}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9499516108891114,"seconds":6.707385182380676e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.8359375,"distances_sum":2690.2161018825363}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9622996794871798,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.8203125,"distances_sum":2820.719536029078}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9622996794871798,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.8203125,"distances_sum":2820.719536029078}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9622996794871798,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.8203125,"distances_sum":2820.719536029078}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":3.915280103683472e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":6.25,"distances_sum":938.2340758837893}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.764405846595764e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":6.28125,"distances_sum":947.7842756311894}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.870711580086581,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.2421875,"distances_sum":2158.7992533306838}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.870711580086581,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.2421875,"distances_sum":2158.7992533306838}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9385874542124548,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.734375,"distances_sum":2606.050776061786}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.960665896603397,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9140625,"distances_sum":2815.280020224021}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9157139735264744,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.6640625,"distances_sum":2447.9589285333386}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.960665896603397,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9140625,"distances_sum":2815.280020224021}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9664491758241761,"seconds":6.16908073425293e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.875,"distances_sum":2843.873166676231}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667639652014655,"seconds":6.506219506263733e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9375,"distances_sum":2840.445628164902}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9664491758241761,"seconds":6.16908073425293e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.875,"distances_sum":2843.873166676231}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9664491758241761,"seconds":6.16908073425293e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.875,"distances_sum":2843.873166676231}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3916015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3916015625,"f1":null,"seconds":4.155561327934265e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.3125,"distances_sum":935.9193181871194}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1904296875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1904296875,"f1":null,"seconds":4.297122359275818e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.375,"distances_sum":540.2270403548853}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5732421875,"f1":null,"seconds":4.708766937255859e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.2421875,"distances_sum":1496.077562147273}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7939740814740823,"seconds":5.112960934638977e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.890625,"distances_sum":1859.6885048198476}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.677734375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.677734375,"f1":0.7939740814740823,"seconds":5.112960934638977e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.890625,"distances_sum":1859.6885048198476}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8718333749583759,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.3359375,"distances_sum":2241.1082891504634}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9295678280053286,"seconds":6.543472409248352e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.734375,"distances_sum":2596.841120118675}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9308894230769238,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.671875,"distances_sum":2624.0661157659747}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9414153554778558,"seconds":6.966292858123779e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7421875,"distances_sum":2667.8665882872156}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9048742923742932,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.5234375,"distances_sum":2437.231734497617}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8679409132534142,"seconds":4.882551729679108e-5,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.171875,"distances_sum":2233.118841305258}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9414153554778558,"seconds":6.966292858123779e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7421875,"distances_sum":2667.8665882872156}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9633756868131871,"seconds":6.413087248802185e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.890625,"distances_sum":2828.99788943784}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9736664377289381,"seconds":6.508082151412964e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.90625,"distances_sum":2937.917627328896}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9440621878121885,"seconds":6.5695494413375854e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8203125,"distances_sum":2690.721713200392}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9559924450549454,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.84375,"distances_sum":2811.2144362663976}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.954206730769231,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.859375,"distances_sum":2761.0193511374378}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9600103021978027,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.875,"distances_sum":2842.1565314572927}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9509558150183155,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.859375,"distances_sum":2771.349892146689}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9525183150183156,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8515625,"distances_sum":2757.697589131512}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9736664377289381,"seconds":6.508082151412964e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.90625,"distances_sum":2937.917627328896}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9736664377289381,"seconds":6.508082151412964e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.90625,"distances_sum":2937.917627328896}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3623046875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3623046875,"f1":null,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":5.7109375,"distances_sum":954.019923414616}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3623046875,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.3623046875,"f1":null,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":5.7109375,"distances_sum":954.019923414616}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":4,"bsize":6}, perf: {"precision":0.9900669642857143,"recall":0.8115234375,"f1":0.8838117611555117,"seconds":0.0008788052946329117,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.2890625,"distances_sum":2345.1955796187676}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5009765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":0.9973958333333333,"recall":0.5009765625,"f1":0.6511994949494955,"seconds":4.1369348764419556e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":6.375,"distances_sum":1287.8324306668492}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8115234375,"state":{"ssize":4,"bsize":6},"perf":{"precision":0.9900669642857143,"recall":0.8115234375,"f1":0.8838117611555117,"seconds":0.0008788052946329117,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.2890625,"distances_sum":2345.1955796187676}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":7,"bsize":7}, perf: {"precision":0.9847935267857144,"recall":0.857421875,"f1":0.9096218234890114,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.46875,"distances_sum":2597.0833711132304}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":10}, perf: {"precision":0.9885137648809524,"recall":0.9208984375,"f1":0.9507361778846158,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.828125,"distances_sum":2857.7684597418056}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.986235119047619,"recall":0.8203125,"f1":0.8881587162837167,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.375,"distances_sum":2420.124652115469}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":4,"bsize":10},"perf":{"precision":0.9885137648809524,"recall":0.9208984375,"f1":0.9507361778846158,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.828125,"distances_sum":2857.7684597418056}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":4,"bsize":10},"perf":{"precision":0.9885137648809524,"recall":0.9208984375,"f1":0.9507361778846158,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.828125,"distances_sum":2857.7684597418056}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.447265625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.447265625,"f1":null,"seconds":3.7085264921188354e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.0234375,"distances_sum":1014.9170215525061}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.447265625,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.447265625,"f1":null,"seconds":3.7085264921188354e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.0234375,"distances_sum":1014.9170215525061}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8935101356976366,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.4375,"distances_sum":2178.1483240526977}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8173828125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8935101356976366,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.4375,"distances_sum":2178.1483240526977}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9671359890109892,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9140625,"distances_sum":2728.395854209293}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9531879578754584,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.796875,"distances_sum":2686.058096563835}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9558836996336999,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8359375,"distances_sum":2654.8869882044696}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9671359890109892,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9140625,"distances_sum":2728.395854209293}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9671359890109892,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9140625,"distances_sum":2728.395854209293}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.248046875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.248046875,"f1":null,"seconds":3.1422823667526245e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.359375,"distances_sum":612.9996649724178}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.521484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.521484375,"f1":null,"seconds":3.727152943611145e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.296875,"distances_sum":1189.5537211609408}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.521484375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.521484375,"f1":null,"seconds":3.727152943611145e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.296875,"distances_sum":1189.5537211609408}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6240234375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6240234375,"f1":0.757509157509158,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.828125,"distances_sum":1488.5701512333471}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.71875,"f1":0.8288159756909764,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.515625,"distances_sum":1819.0292698106282}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.71875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.71875,"f1":0.8288159756909764,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.515625,"distances_sum":1819.0292698106282}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8887794497169503,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.3359375,"distances_sum":2182.507735884345}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9466632326007329,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.828125,"distances_sum":2607.7989147178578}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9555918040293044,"seconds":6.450340151786804e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.859375,"distances_sum":2682.0780345918884}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9311298076923086,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.765625,"distances_sum":2512.125073875493}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8816855019980028,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.3125,"distances_sum":2203.637768497744}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8843807234432242,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.390625,"distances_sum":2156.137711091693}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9555918040293044,"seconds":6.450340151786804e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.859375,"distances_sum":2682.0780345918884}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9555918040293044,"seconds":6.450340151786804e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.859375,"distances_sum":2682.0780345918884}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.720703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.720703125,"f1":0.8299258033633041,"seconds":4.863366484642029e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.3984375,"distances_sum":1833.052598224915}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2373046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2373046875,"f1":null,"seconds":3.1497329473495483e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.2578125,"distances_sum":605.9484581298336}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.720703125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.720703125,"f1":0.8299258033633041,"seconds":4.863366484642029e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.3984375,"distances_sum":1833.052598224915}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9502117673992679,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.859375,"distances_sum":2637.2140103922866}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8815335705960714,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.3125,"distances_sum":2163.505978764159}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9502117673992679,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.859375,"distances_sum":2637.2140103922866}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9825148809523814,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9765625,"distances_sum":2869.7490738273623}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9737179487179493,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.953125,"distances_sum":2800.215867482639}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.96700434981685,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9375,"distances_sum":2752.497690017231}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9825148809523814,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9765625,"distances_sum":2869.7490738273623}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9825148809523814,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9765625,"distances_sum":2869.7490738273623}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4033203125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4033203125,"f1":null,"seconds":2.205371856689453e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":5.8125,"distances_sum":962.9277415080678}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.240234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.240234375,"f1":null,"seconds":1.9259750843048096e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":5.4609375,"distances_sum":602.444257687106}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8582136613386621,"seconds":3.259629011154175e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.7421875,"distances_sum":1946.4081952437903}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8582136613386621,"seconds":3.259629011154175e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.7421875,"distances_sum":1946.4081952437903}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8648013444888453,"seconds":3.069639205932617e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.796875,"distances_sum":1985.1014561576985}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8627664002664011,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.7734375,"distances_sum":1983.935069211032}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8648013444888453,"seconds":3.069639205932617e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.796875,"distances_sum":1985.1014561576985}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7734375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8648013444888453,"seconds":3.069639205932617e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.796875,"distances_sum":1985.1014561576985}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.59375,"f1":0.7343344155844161,"seconds":2.4978071451187134e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.9765625,"distances_sum":1330.8871418341814}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7801628926628934,"seconds":2.8815120458602905e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.015625,"distances_sum":1554.5187338348128}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.65625,"f1":0.7801628926628934,"seconds":2.8815120458602905e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.015625,"distances_sum":1554.5187338348128}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9501430860805867,"seconds":3.6954879760742188e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7578125,"distances_sum":2594.3424983820832}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8760078463203471,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.078125,"distances_sum":2059.3755779503085}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7992455461205469,"seconds":2.8349459171295166e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.296875,"distances_sum":1636.1696225201995}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8643960206460215,"seconds":3.3471733331680298e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.8671875,"distances_sum":1993.8992307224087}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9501430860805867,"seconds":3.6954879760742188e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7578125,"distances_sum":2594.3424983820832}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9712797619047625,"seconds":4.151836037635803e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9296875,"distances_sum":2739.1154885271103}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9597012362637367,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.796875,"distances_sum":2696.195491606225}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9712797619047625,"seconds":4.151836037635803e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9296875,"distances_sum":2739.1154885271103}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9712797619047625,"seconds":4.151836037635803e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9296875,"distances_sum":2739.1154885271103}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8562624875124882,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.734375,"distances_sum":1910.4588453636738}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.419921875,"f1":null,"seconds":3.5855919122695923e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.5234375,"distances_sum":937.7181861446472}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4384765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4384765625,"f1":0.5927010489510494,"seconds":3.913417458534241e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.6015625,"distances_sum":937.9902980796296}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8562624875124882,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.734375,"distances_sum":1910.4588453636738}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8693863428238435,"seconds":3.1534582376480103e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.7421875,"distances_sum":1966.1429609221295}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8845326548451554,"seconds":3.335997462272644e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.34375,"distances_sum":2119.115196280332}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9412660256410265,"seconds":4.276633262634277e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.875,"distances_sum":2486.4629291840874}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9017170329670338,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.40625,"distances_sum":2178.325584937978}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9131009615384622,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.546875,"distances_sum":2246.935321909065}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9412660256410265,"seconds":4.276633262634277e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.875,"distances_sum":2486.4629291840874}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9660027472527476,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8828125,"distances_sum":2673.3594603747583}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9528903388278392,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8359375,"distances_sum":2616.221380796842}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9636191933066935,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8515625,"distances_sum":2675.281064824123}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9593406593406597,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.921875,"distances_sum":2615.7796293025267}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.95571771978022,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.828125,"distances_sum":2598.1519131942055}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.966391941391942,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9453125,"distances_sum":2670.9951250273093}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9660027472527476,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8828125,"distances_sum":2673.3594603747583}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9660027472527476,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8828125,"distances_sum":2673.3594603747583}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7955825424575432,"seconds":4.5765191316604614e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.390625,"distances_sum":1651.35676554128}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.673828125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.673828125,"f1":0.7955825424575432,"seconds":4.5765191316604614e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.390625,"distances_sum":1651.35676554128}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9376774267399275,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8984375,"distances_sum":2440.092665714635}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.846735556110557,"seconds":5.112960934638977e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.859375,"distances_sum":1900.8682496326903}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9376774267399275,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8984375,"distances_sum":2440.092665714635}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9601076007326012,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8828125,"distances_sum":2662.5955497412747}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9754292582417583,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9609375,"distances_sum":2756.9738106994455}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9366357600732608,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8046875,"distances_sum":2499.976775616528}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9502174908424912,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.859375,"distances_sum":2592.9045540258007}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9754292582417583,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9609375,"distances_sum":2756.9738106994455}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9754292582417583,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9609375,"distances_sum":2756.9738106994455}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":4,"bsize":5}, perf: {"precision":0.9802083333333331,"recall":0.759765625,"f1":0.8493022602397609,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5,"distances_sum":1753.5837452550327}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":5,"bsize":3}, perf: {"precision":0.994921875,"recall":0.546875,"f1":0.6886217081529586,"seconds":4.334375262260437e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.3046875,"distances_sum":1163.0758355587545}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.498046875, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.498046875,"f1":null,"seconds":4.176050424575806e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.1171875,"distances_sum":1078.2738058051718}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":4,"bsize":5},"perf":{"precision":0.9802083333333331,"recall":0.759765625,"f1":0.8493022602397609,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5,"distances_sum":1753.5837452550327}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":2,"bsize":7}, perf: {"precision":0.9873697916666666,"recall":0.8642578125,"f1":0.9158899694055951,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7421875,"distances_sum":2096.2611635235353}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":4,"bsize":9}, perf: {"precision":0.9848865327380953,"recall":0.9013671875,"f1":0.9382605025183153,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2285.770613260774}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":7,"bsize":6}, perf: {"precision":0.978720238095238,"recall":0.822265625,"f1":0.8861151868964373,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.53125,"distances_sum":1976.7342117222372}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9840215773809523,"recall":0.8681640625,"f1":0.9183364812271068,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7578125,"distances_sum":2119.09398596076}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":6,"bsize":6}, perf: {"precision":0.9806082589285716,"recall":0.8271484375,"f1":0.891412949030137,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6171875,"distances_sum":1951.8719592343975}, best_list's length: 16, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":4,"bsize":9},"perf":{"precision":0.9848865327380953,"recall":0.9013671875,"f1":0.9382605025183153,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2285.770613260774}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":13}, perf: {"precision":0.9881417410714286,"recall":0.9453125,"f1":0.964463856456044,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.953125,"distances_sum":2423.674182059498}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.9836774553571429,"recall":0.916015625,"f1":0.9450842777014653,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.828125,"distances_sum":2354.2435301087326}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9867652529761906,"recall":0.9033203125,"f1":0.9398659283424914,"seconds":4.59328293800354e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":2304.690670373041}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":9}, perf: {"precision":0.9868861607142858,"recall":0.912109375,"f1":0.9442407852564105,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":2324.2388038117847}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":8}, perf: {"precision":0.9810453869047618,"recall":0.9111328125,"f1":0.9420859088827841,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":2360.3698887729443}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":10}, perf: {"precision":0.9845145089285714,"recall":0.919921875,"f1":0.9489518944597072,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2353.7829335426745}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":13},"perf":{"precision":0.9881417410714286,"recall":0.9453125,"f1":0.964463856456044,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.953125,"distances_sum":2423.674182059498}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":13},"perf":{"precision":0.9881417410714286,"recall":0.9453125,"f1":0.964463856456044,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.953125,"distances_sum":2423.674182059498}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.55078125,"f1":null,"seconds":3.868713974952698e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.3203125,"distances_sum":1200.5909146919773}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.28515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.28515625,"f1":null,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.09375,"distances_sum":723.1497526867563}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.55078125,"f1":null,"seconds":3.868713974952698e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.3203125,"distances_sum":1200.5909146919773}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.609375,"f1":0.7418827700077707,"seconds":4.500150680541992e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.1640625,"distances_sum":1362.5738435123317}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8573041541791551,"seconds":5.0086528062820435e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.8046875,"distances_sum":1855.2935096613699}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6298828125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6298828125,"f1":0.7559353840603847,"seconds":4.371628165245056e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.265625,"distances_sum":1410.9719205864772}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8573041541791551,"seconds":5.0086528062820435e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.8046875,"distances_sum":1855.2935096613699}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8970727189477198,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.140625,"distances_sum":2042.3636050555003}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8935070138195149,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.15625,"distances_sum":1970.224454782034}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8616503288378297,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.8671875,"distances_sum":1835.5063119971844}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9458791208791217,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7265625,"distances_sum":2394.8314228349363}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9454326923076927,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.71875,"distances_sum":2415.47601153326}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9454326923076927,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.71875,"distances_sum":2415.47601153326}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90625,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9454326923076927,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.71875,"distances_sum":2415.47601153326}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2138671875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2138671875,"f1":null,"seconds":2.948567271232605e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":5.0,"distances_sum":558.2637318296604}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2138671875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.2138671875,"f1":null,"seconds":2.948567271232605e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":5.0,"distances_sum":558.2637318296604}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2138671875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.2138671875,"f1":null,"seconds":2.948567271232605e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":5.0,"distances_sum":558.2637318296604}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.240234375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.240234375,"f1":null,"seconds":3.291293978691101e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.5078125,"distances_sum":605.841237851455}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7005145895770902,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.9453125,"distances_sum":1283.964503276008}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6827675796425804,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.6328125,"distances_sum":1208.6177746613698}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5625,"f1":0.7005145895770902,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.9453125,"distances_sum":1283.964503276008}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8508741258741267,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.859375,"distances_sum":1813.2730657465959}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9308722527472534,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.40625,"distances_sum":2326.425286884465}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.857065677378178,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.046875,"distances_sum":1867.1612303643224}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8882846320346329,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2421875,"distances_sum":2016.9935241188157}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7828112859362866,"seconds":4.464760422706604e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.3828125,"distances_sum":1473.8701141191896}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9308722527472534,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.40625,"distances_sum":2326.425286884465}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9550251831501838,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7265625,"distances_sum":2461.9267979863143}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9381467490842498,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5859375,"distances_sum":2376.1233804040585}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.939480311355312,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5625,"distances_sum":2374.558562833576}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9484432234432236,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.703125,"distances_sum":2395.869182272083}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9550251831501838,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7265625,"distances_sum":2461.9267979863143}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9550251831501838,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7265625,"distances_sum":2461.9267979863143}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2822265625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2822265625,"f1":null,"seconds":3.4458935260772705e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.265625,"distances_sum":658.8037912894881}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2744140625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2744140625,"f1":null,"seconds":3.3937394618988037e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.453125,"distances_sum":655.9607693491889}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.8002559940059948,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.5234375,"distances_sum":1499.3962258900797}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.8002559940059948,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.5234375,"distances_sum":1499.3962258900797}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8979915917415925,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.3203125,"distances_sum":1977.6910405269507}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8623803280053287,"seconds":4.608184099197388e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.0390625,"distances_sum":1823.220204326288}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.82421875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.82421875,"f1":0.8979915917415925,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.3203125,"distances_sum":1977.6910405269507}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9379381035631041,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.53125,"distances_sum":2276.2815999594054}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9573489010989017,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7578125,"distances_sum":2451.3209215342813}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9296188186813193,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4296875,"distances_sum":2237.8222091259818}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9573489010989017,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7578125,"distances_sum":2451.3209215342813}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9573489010989017,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7578125,"distances_sum":2451.3209215342813}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.232421875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.232421875,"f1":null,"seconds":2.950429916381836e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.4453125,"distances_sum":532.775822330292}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.232421875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.232421875,"f1":null,"seconds":2.950429916381836e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.4453125,"distances_sum":532.775822330292}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8534205377955386,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":7.765625,"distances_sum":1629.7662160619614}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7082859848484854,"seconds":4.06801700592041e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":6.796875,"distances_sum":1155.307079942023}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.2410025596618652e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":5.15625,"distances_sum":470.38544876956854}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8534205377955386,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":7.765625,"distances_sum":1629.7662160619614}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9510702838827844,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.65625,"distances_sum":2250.1038904925113}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9510702838827844,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.65625,"distances_sum":2250.1038904925113}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9573717948717951,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.734375,"distances_sum":2290.1430884036963}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9573717948717951,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.734375,"distances_sum":2290.1430884036963}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9573717948717951,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.734375,"distances_sum":2290.1430884036963}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8479666167166175,"seconds":4.3157488107681274e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":7.7890625,"distances_sum":1630.1311944186193}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.431640625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.431640625,"f1":null,"seconds":3.0901283025741577e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":5.7265625,"distances_sum":860.2911232733989}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8479666167166175,"seconds":4.3157488107681274e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":7.7890625,"distances_sum":1630.1311944186193}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9530563186813189,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.7265625,"distances_sum":2243.038397359756}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9547676282051288,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.7734375,"distances_sum":2229.6070848253416}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9413461538461546,"seconds":4.168599843978882e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.6015625,"distances_sum":2199.1057740824576}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8891405469530479,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.0625,"distances_sum":1818.2634901127333}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9547676282051288,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.7734375,"distances_sum":2229.6070848253416}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9710565476190478,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.828125,"distances_sum":2349.228445453917}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9704441391941394,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.859375,"distances_sum":2343.5645175900654}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9682864010989016,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.8203125,"distances_sum":2333.7742791958444}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9759672619047622,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.890625,"distances_sum":2363.981781564784}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9759672619047622,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.890625,"distances_sum":2363.981781564784}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9759672619047622,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.890625,"distances_sum":2363.981781564784}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.859779283216784,"seconds":5.153939127922058e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.8359375,"distances_sum":1723.2633157791083}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5537109375,"f1":0.6965152902652907,"seconds":4.129484295845032e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.6015625,"distances_sum":1077.767654048016}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8433243839493847,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7734375,"distances_sum":1662.7852878173633}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.859779283216784,"seconds":5.153939127922058e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.8359375,"distances_sum":1723.2633157791083}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9621165293040298,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7890625,"distances_sum":2333.4249938327803}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8697146603396614,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.8671875,"distances_sum":1796.9360921491648}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9086111804861813,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.2890625,"distances_sum":1988.258616170228}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8980087620712629,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.1796875,"distances_sum":1928.7443680591912}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9621165293040298,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7890625,"distances_sum":2333.4249938327803}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9770833333333339,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.90625,"distances_sum":2435.619998050038}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.975057234432235,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.875,"distances_sum":2419.1063840737797}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9770833333333339,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.90625,"distances_sum":2435.619998050038}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9770833333333339,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.90625,"distances_sum":2435.619998050038}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51953125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.51953125,"f1":0.6660742035742041,"seconds":4.064291715621948e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.4765625,"distances_sum":1117.5245904889862}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8660464535464545,"seconds":5.014240741729736e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.8203125,"distances_sum":1845.9512616914074}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8660464535464545,"seconds":5.014240741729736e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.8203125,"distances_sum":1845.9512616914074}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9152873168498175,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.28125,"distances_sum":2124.495356565273}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9265396062271065,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.4765625,"distances_sum":2179.7576009734357}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.907615301365302,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.21875,"distances_sum":2023.7331853914798}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8869276556776565,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.109375,"distances_sum":1938.6048804168506}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9265396062271065,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.4765625,"distances_sum":2179.7576009734357}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9348729395604402,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.4921875,"distances_sum":2298.482647397613}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519745879120883,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.71875,"distances_sum":2358.547275009551}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.875,"f1":0.926348651348652,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.5,"distances_sum":2234.200899153001}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9609203296703303,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.828125,"distances_sum":2388.043174447806}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9502632783882791,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.6875,"distances_sum":2355.6828197489453}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.955752060439561,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.7890625,"distances_sum":2373.31079912723}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9609203296703303,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.828125,"distances_sum":2388.043174447806}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9609203296703303,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.828125,"distances_sum":2388.043174447806}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.7988651973026982,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.15625,"distances_sum":1607.0313178244319}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.388671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.388671875,"f1":null,"seconds":3.593042492866516e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.203125,"distances_sum":870.3124225954537}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.7988651973026982,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.15625,"distances_sum":1607.0313178244319}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9513850732600737,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.734375,"distances_sum":2407.8718713896938}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9223328754578762,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.765625,"distances_sum":2158.058675901736}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8702110389610396,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.515625,"distances_sum":1904.5027387220973}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9513850732600737,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.734375,"distances_sum":2407.8718713896938}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.952667124542125,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.859375,"distances_sum":2361.9807496632684}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9592090201465207,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.796875,"distances_sum":2436.3944088093176}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9592090201465207,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.796875,"distances_sum":2436.3944088093176}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9592090201465207,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.796875,"distances_sum":2436.3944088093176}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2275390625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2275390625,"f1":null,"seconds":3.043562173843384e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":5.546875,"distances_sum":502.6835350724048}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.44921875,"f1":null,"seconds":3.645196557044983e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":6.2109375,"distances_sum":952.9581682193743}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.44921875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.44921875,"f1":null,"seconds":3.645196557044983e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":6.2109375,"distances_sum":952.9581682193743}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8683779761904771,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":7.8515625,"distances_sum":1759.978058744808}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8457828629703638,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":7.6328125,"distances_sum":1665.6936872950548}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8683779761904771,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":7.8515625,"distances_sum":1759.978058744808}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657967032967036,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.8828125,"distances_sum":2351.4560765055953}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9441849816849823,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.671875,"distances_sum":2239.686514895777}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9527014652014657,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.765625,"distances_sum":2290.569628881477}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9502117673992679,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.7109375,"distances_sum":2310.471927009901}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9657967032967036,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.8828125,"distances_sum":2351.4560765055953}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9657967032967036,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.8828125,"distances_sum":2351.4560765055953}}, n: 9
inertia(cfft.distances) = 19.132564751796046
inertia(cdnet.distances) = 26.4836253909261
inertia(crand.distances) = 21.43924057315233
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9155555555555556
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8688888888888889
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.931111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9311111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.931111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9222222222222222
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9133333333333334
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9422222222222222
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9066666666666667
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9244444444444445
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8688888888888888
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8577777777777778
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8822222222222221
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.888888888888889
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 3, 2, 3, 1, 3, 1, 2, 3, 3, 1, 2, 2, 3, 3, 3, 3, 3, 2, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 14]]
** centroid: 1, normalized-entropy: 0.9656361333706099, [(2, 9), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 8, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 2, 3, 1, 2, 1, 3, 1, 3]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.38780000206983173] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38780000206983173, 0.18206704781429844] ***
*** starting iteration: 2; err: [Inf, 0.38780000206983173, 0.18206704781429844] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38780000206983173, 0.18206704781429844, 0.16983942214707934] ***
*** starting iteration: 3; err: [Inf, 0.38780000206983173, 0.18206704781429844, 0.16983942214707934] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38780000206983173, 0.18206704781429844, 0.16983942214707934, 0.16633198347999964] ***
*** starting iteration: 4; err: [Inf, 0.38780000206983173, 0.18206704781429844, 0.16983942214707934, 0.16633198347999964] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38780000206983173, 0.18206704781429844, 0.16983942214707934, 0.16633198347999964, 0.16563043541887676] ***
*** finished computation of 12 references, err: [Inf, 0.38780000206983173, 0.18206704781429844, 0.16983942214707934, 0.16633198347999964, 0.16563043541887676] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.826300004450121] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.826300004450121, 0.310340035544344] ***
*** finished computation of 7 references, err: [Inf, 0.826300004450121, 0.310340035544344] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 26, 2]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 26), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 4: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 12]]
** centroid: 5, normalized-entropy: 0.3912435636292556, [(2, 1), (3, 12)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3008971564977401] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3008971564977401, 0.15525219822911057] ***
*** starting iteration: 2; err: [Inf, 0.3008971564977401, 0.15525219822911057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3008971564977401, 0.15525219822911057, 0.14995437876471118] ***
*** starting iteration: 3; err: [Inf, 0.3008971564977401, 0.15525219822911057, 0.14995437876471118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3008971564977401, 0.15525219822911057, 0.14995437876471118, 0.14751606332354728] ***
*** finished computation of 7 references, err: [Inf, 0.3008971564977401, 0.15525219822911057, 0.14995437876471118, 0.14751606332354728] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 11]]
** centroid: 6, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3325371975527112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3325371975527112, 0.14854877105833503] ***
*** starting iteration: 2; err: [Inf, 0.3325371975527112, 0.14854877105833503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3325371975527112, 0.14854877105833503, 0.1446756857896049] ***
*** starting iteration: 3; err: [Inf, 0.3325371975527112, 0.14854877105833503, 0.1446756857896049] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3325371975527112, 0.14854877105833503, 0.1446756857896049, 0.14281599002622358] ***
*** finished computation of 7 references, err: [Inf, 0.3325371975527112, 0.14854877105833503, 0.1446756857896049, 0.14281599002622358] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 13, 4]]
** centroid: 7, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44990956003578986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44990956003578986, 0.20594544093420455] ***
*** starting iteration: 2; err: [Inf, 0.44990956003578986, 0.20594544093420455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44990956003578986, 0.20594544093420455, 0.17901524951689712] ***
*** starting iteration: 3; err: [Inf, 0.44990956003578986, 0.20594544093420455, 0.17901524951689712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44990956003578986, 0.20594544093420455, 0.17901524951689712, 0.1645469369953595] ***
*** finished computation of 7 references, err: [Inf, 0.44990956003578986, 0.20594544093420455, 0.17901524951689712, 0.1645469369953595] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 8]]
** centroid: 1, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5502000139650601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5502000139650601, 0.309104777038059] ***
*** finished computation of 7 references, err: [Inf, 0.5502000139650601, 0.309104777038059] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 10]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8553000053983846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8553000053983846, 0.3993044313297184] ***
*** finished computation of 7 references, err: [Inf, 0.8553000053983846, 0.3993044313297184] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 2]]
** centroid: 2, normalized-entropy: 0.45371633918694493, [(2, 19), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 5, 2]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 5), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 6: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.09529999437259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.09529999437259, 1.3481774546739687] ***
*** starting iteration: 2; err: [Inf, 4.09529999437259, 1.3481774546739687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.09529999437259, 1.3481774546739687, 0.34520269511942986] ***
*** starting iteration: 3; err: [Inf, 4.09529999437259, 1.3481774546739687, 0.34520269511942986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.09529999437259, 1.3481774546739687, 0.34520269511942986, 0.2830857784277186] ***
*** finished computation of 7 references, err: [Inf, 4.09529999437259, 1.3481774546739687, 0.34520269511942986, 0.2830857784277186] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 13]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 2, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 5, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8077000045801571] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8077000045801571, 0.42367249494440684] ***
*** starting iteration: 2; err: [Inf, 0.8077000045801571, 0.42367249494440684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8077000045801571, 0.42367249494440684, 0.34306115263468845] ***
*** starting iteration: 3; err: [Inf, 0.8077000045801571, 0.42367249494440684, 0.34306115263468845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8077000045801571, 0.42367249494440684, 0.34306115263468845, 0.29735827153172] ***
*** finished computation of 7 references, err: [Inf, 0.8077000045801571, 0.42367249494440684, 0.34306115263468845, 0.29735827153172] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 2]]
** centroid: 6, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.799299996078321] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.799299996078321, 0.4766636439704773] ***
*** starting iteration: 2; err: [Inf, 0.799299996078321, 0.4766636439704773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.799299996078321, 0.4766636439704773, 0.4666208550480599] ***
*** starting iteration: 3; err: [Inf, 0.799299996078321, 0.4766636439704773, 0.4666208550480599] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.799299996078321, 0.4766636439704773, 0.4666208550480599, 0.4659838633816136] ***
*** finished computation of 7 references, err: [Inf, 0.799299996078321, 0.4766636439704773, 0.4666208550480599, 0.4659838633816136] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 2, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 7, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3033295763655939] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3033295763655939, 0.19312596066923504] ***
*** starting iteration: 2; err: [Inf, 0.3033295763655939, 0.19312596066923504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3033295763655939, 0.19312596066923504, 0.18006053931454624] ***
*** starting iteration: 3; err: [Inf, 0.3033295763655939, 0.19312596066923504, 0.18006053931454624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3033295763655939, 0.19312596066923504, 0.18006053931454624, 0.17166382331842914] ***
*** starting iteration: 4; err: [Inf, 0.3033295763655939, 0.19312596066923504, 0.18006053931454624, 0.17166382331842914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3033295763655939, 0.19312596066923504, 0.18006053931454624, 0.17166382331842914, 0.16810849727942542] ***
*** starting iteration: 5; err: [Inf, 0.3033295763655939, 0.19312596066923504, 0.18006053931454624, 0.17166382331842914, 0.16810849727942542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3033295763655939, 0.19312596066923504, 0.18006053931454624, 0.17166382331842914, 0.16810849727942542, 0.16729950357769005] ***
*** finished computation of 7 references, err: [Inf, 0.3033295763655939, 0.19312596066923504, 0.18006053931454624, 0.17166382331842914, 0.16810849727942542, 0.16729950357769005] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 17]]
** centroid: 2, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 2]]
** centroid: 4, normalized-entropy: 0.48546076074591343, [(2, 17), (3, 2)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3570462940038353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3570462940038353, 0.25954597683269925] ***
*** starting iteration: 2; err: [Inf, 0.3570462940038353, 0.25954597683269925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3570462940038353, 0.25954597683269925, 0.22055528277828892] ***
*** starting iteration: 3; err: [Inf, 0.3570462940038353, 0.25954597683269925, 0.22055528277828892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3570462940038353, 0.25954597683269925, 0.22055528277828892, 0.2044248440583671] ***
*** starting iteration: 4; err: [Inf, 0.3570462940038353, 0.25954597683269925, 0.22055528277828892, 0.2044248440583671] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3570462940038353, 0.25954597683269925, 0.22055528277828892, 0.2044248440583671, 0.20262099852746712] ***
*** starting iteration: 5; err: [Inf, 0.3570462940038353, 0.25954597683269925, 0.22055528277828892, 0.2044248440583671, 0.20262099852746712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3570462940038353, 0.25954597683269925, 0.22055528277828892, 0.2044248440583671, 0.20262099852746712, 0.19949939485391802] ***
*** starting iteration: 6; err: [Inf, 0.3570462940038353, 0.25954597683269925, 0.22055528277828892, 0.2044248440583671, 0.20262099852746712, 0.19949939485391802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3570462940038353, 0.25954597683269925, 0.22055528277828892, 0.2044248440583671, 0.20262099852746712, 0.19949939485391802, 0.19758725697661153] ***
*** starting iteration: 7; err: [Inf, 0.3570462940038353, 0.25954597683269925, 0.22055528277828892, 0.2044248440583671, 0.20262099852746712, 0.19949939485391802, 0.19758725697661153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3570462940038353, 0.25954597683269925, 0.22055528277828892, 0.2044248440583671, 0.20262099852746712, 0.19949939485391802, 0.19758725697661153, 0.19593011602120078] ***
*** starting iteration: 8; err: [Inf, 0.3570462940038353, 0.25954597683269925, 0.22055528277828892, 0.2044248440583671, 0.20262099852746712, 0.19949939485391802, 0.19758725697661153, 0.19593011602120078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3570462940038353, 0.25954597683269925, 0.22055528277828892, 0.2044248440583671, 0.20262099852746712, 0.19949939485391802, 0.19758725697661153, 0.19593011602120078, 0.19593011602120078] ***
*** finished computation of 7 references, err: [Inf, 0.3570462940038353, 0.25954597683269925, 0.22055528277828892, 0.2044248440583671, 0.20262099852746712, 0.19949939485391802, 0.19758725697661153, 0.19593011602120078, 0.19593011602120078] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 10]]
** centroid: 1, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25749767977400795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25749767977400795, 0.17550382577838125] ***
*** starting iteration: 2; err: [Inf, 0.25749767977400795, 0.17550382577838125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25749767977400795, 0.17550382577838125, 0.17269522055779832] ***
*** starting iteration: 3; err: [Inf, 0.25749767977400795, 0.17550382577838125, 0.17269522055779832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25749767977400795, 0.17550382577838125, 0.17269522055779832, 0.16726990787300075] ***
*** starting iteration: 4; err: [Inf, 0.25749767977400795, 0.17550382577838125, 0.17269522055779832, 0.16726990787300075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25749767977400795, 0.17550382577838125, 0.17269522055779832, 0.16726990787300075, 0.16614749491047826] ***
*** starting iteration: 5; err: [Inf, 0.25749767977400795, 0.17550382577838125, 0.17269522055779832, 0.16726990787300075, 0.16614749491047826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25749767977400795, 0.17550382577838125, 0.17269522055779832, 0.16726990787300075, 0.16614749491047826, 0.16564439798314] ***
*** finished computation of 7 references, err: [Inf, 0.25749767977400795, 0.17550382577838125, 0.17269522055779832, 0.16726990787300075, 0.16614749491047826, 0.16564439798314] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 8, 11]]
** centroid: 5, normalized-entropy: 0.9819407868640977, [(2, 8), (3, 11)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6188000029451591] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6188000029451591, 0.256174409499929] ***
*** starting iteration: 2; err: [Inf, 0.6188000029451591, 0.256174409499929] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6188000029451591, 0.256174409499929, 0.24119336709647257] ***
*** starting iteration: 3; err: [Inf, 0.6188000029451591, 0.256174409499929, 0.24119336709647257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6188000029451591, 0.256174409499929, 0.24119336709647257, 0.2369372578480496] ***
*** starting iteration: 4; err: [Inf, 0.6188000029451591, 0.256174409499929, 0.24119336709647257, 0.2369372578480496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6188000029451591, 0.256174409499929, 0.24119336709647257, 0.2369372578480496, 0.23407175039669303] ***
*** starting iteration: 5; err: [Inf, 0.6188000029451591, 0.256174409499929, 0.24119336709647257, 0.2369372578480496, 0.23407175039669303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6188000029451591, 0.256174409499929, 0.24119336709647257, 0.2369372578480496, 0.23407175039669303, 0.23080651639029973] ***
*** starting iteration: 6; err: [Inf, 0.6188000029451591, 0.256174409499929, 0.24119336709647257, 0.2369372578480496, 0.23407175039669303, 0.23080651639029973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6188000029451591, 0.256174409499929, 0.24119336709647257, 0.2369372578480496, 0.23407175039669303, 0.23080651639029973, 0.2295902341289764] ***
*** starting iteration: 7; err: [Inf, 0.6188000029451591, 0.256174409499929, 0.24119336709647257, 0.2369372578480496, 0.23407175039669303, 0.23080651639029973, 0.2295902341289764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6188000029451591, 0.256174409499929, 0.24119336709647257, 0.2369372578480496, 0.23407175039669303, 0.23080651639029973, 0.2295902341289764, 0.2295902341289764] ***
*** finished computation of 7 references, err: [Inf, 0.6188000029451591, 0.256174409499929, 0.24119336709647257, 0.2369372578480496, 0.23407175039669303, 0.23080651639029973, 0.2295902341289764, 0.2295902341289764] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 20, 10]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 20), (3, 10)]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5438000009828543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5438000009828543, 0.26788685264443635] ***
*** starting iteration: 2; err: [Inf, 0.5438000009828543, 0.26788685264443635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5438000009828543, 0.26788685264443635, 0.22447659145849397] ***
*** starting iteration: 3; err: [Inf, 0.5438000009828543, 0.26788685264443635, 0.22447659145849397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5438000009828543, 0.26788685264443635, 0.22447659145849397, 0.21340529083890505] ***
*** starting iteration: 4; err: [Inf, 0.5438000009828543, 0.26788685264443635, 0.22447659145849397, 0.21340529083890505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5438000009828543, 0.26788685264443635, 0.22447659145849397, 0.21340529083890505, 0.20841132605945878] ***
*** starting iteration: 5; err: [Inf, 0.5438000009828543, 0.26788685264443635, 0.22447659145849397, 0.21340529083890505, 0.20841132605945878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5438000009828543, 0.26788685264443635, 0.22447659145849397, 0.21340529083890505, 0.20841132605945878, 0.20454732513225557] ***
*** starting iteration: 6; err: [Inf, 0.5438000009828543, 0.26788685264443635, 0.22447659145849397, 0.21340529083890505, 0.20841132605945878, 0.20454732513225557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5438000009828543, 0.26788685264443635, 0.22447659145849397, 0.21340529083890505, 0.20841132605945878, 0.20454732513225557, 0.20356490657536422] ***
*** finished computation of 7 references, err: [Inf, 0.5438000009828543, 0.26788685264443635, 0.22447659145849397, 0.21340529083890505, 0.20841132605945878, 0.20454732513225557, 0.20356490657536422] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 5, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 6, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7059000031146678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7059000031146678, 0.3041552704567473] ***
*** starting iteration: 2; err: [Inf, 0.7059000031146678, 0.3041552704567473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7059000031146678, 0.3041552704567473, 0.2797857120127034] ***
*** starting iteration: 3; err: [Inf, 0.7059000031146678, 0.3041552704567473, 0.2797857120127034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7059000031146678, 0.3041552704567473, 0.2797857120127034, 0.26201099629858615] ***
*** starting iteration: 4; err: [Inf, 0.7059000031146678, 0.3041552704567473, 0.2797857120127034, 0.26201099629858615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7059000031146678, 0.3041552704567473, 0.2797857120127034, 0.26201099629858615, 0.259422615012259] ***
*** starting iteration: 5; err: [Inf, 0.7059000031146678, 0.3041552704567473, 0.2797857120127034, 0.26201099629858615, 0.259422615012259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7059000031146678, 0.3041552704567473, 0.2797857120127034, 0.26201099629858615, 0.259422615012259, 0.25902655015542514] ***
*** finished computation of 7 references, err: [Inf, 0.7059000031146678, 0.3041552704567473, 0.2797857120127034, 0.26201099629858615, 0.259422615012259, 0.25902655015542514] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 14]]
** centroid: 4, normalized-entropy: 0.3533593350214213, [(2, 1), (3, 14)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8824000040298285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8824000040298285, 0.508784039828315] ***
*** starting iteration: 2; err: [Inf, 0.8824000040298285, 0.508784039828315] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409] ***
*** starting iteration: 3; err: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784] ***
*** starting iteration: 4; err: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784, 0.47906134675724377] ***
*** starting iteration: 5; err: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784, 0.47906134675724377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784, 0.47906134675724377, 0.47638951753096764] ***
*** starting iteration: 6; err: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784, 0.47906134675724377, 0.47638951753096764] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784, 0.47906134675724377, 0.47638951753096764, 0.4732766487272769] ***
*** starting iteration: 7; err: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784, 0.47906134675724377, 0.47638951753096764, 0.4732766487272769] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784, 0.47906134675724377, 0.47638951753096764, 0.4732766487272769, 0.47041503622676684] ***
*** starting iteration: 8; err: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784, 0.47906134675724377, 0.47638951753096764, 0.4732766487272769, 0.47041503622676684] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784, 0.47906134675724377, 0.47638951753096764, 0.4732766487272769, 0.47041503622676684, 0.4674107704623728] ***
*** starting iteration: 9; err: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784, 0.47906134675724377, 0.47638951753096764, 0.4732766487272769, 0.47041503622676684, 0.4674107704623728] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784, 0.47906134675724377, 0.47638951753096764, 0.4732766487272769, 0.47041503622676684, 0.4674107704623728, 0.4656666062192328] ***
*** starting iteration: 10; err: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784, 0.47906134675724377, 0.47638951753096764, 0.4732766487272769, 0.47041503622676684, 0.4674107704623728, 0.4656666062192328] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784, 0.47906134675724377, 0.47638951753096764, 0.4732766487272769, 0.47041503622676684, 0.4674107704623728, 0.4656666062192328, 0.4656666062192328] ***
*** finished computation of 3 references, err: [Inf, 0.8824000040298285, 0.508784039828315, 0.4902766335992409, 0.48387279950416784, 0.47906134675724377, 0.47638951753096764, 0.4732766487272769, 0.47041503622676684, 0.4674107704623728, 0.4656666062192328, 0.4656666062192328] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 9]]
** centroid: 3, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.5369999592711894] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5369999592711894, 1.118472240312079] ***
*** starting iteration: 2; err: [Inf, 3.5369999592711894, 1.118472240312079] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481] ***
*** starting iteration: 3; err: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481, 0.9866280710338994] ***
*** starting iteration: 4; err: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481, 0.9866280710338994] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481, 0.9866280710338994, 0.962494157817432] ***
*** starting iteration: 5; err: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481, 0.9866280710338994, 0.962494157817432] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481, 0.9866280710338994, 0.962494157817432, 0.8614748204381057] ***
*** starting iteration: 6; err: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481, 0.9866280710338994, 0.962494157817432, 0.8614748204381057] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481, 0.9866280710338994, 0.962494157817432, 0.8614748204381057, 0.6476214128338198] ***
*** starting iteration: 7; err: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481, 0.9866280710338994, 0.962494157817432, 0.8614748204381057, 0.6476214128338198] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481, 0.9866280710338994, 0.962494157817432, 0.8614748204381057, 0.6476214128338198, 0.560437502765296] ***
*** starting iteration: 8; err: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481, 0.9866280710338994, 0.962494157817432, 0.8614748204381057, 0.6476214128338198, 0.560437502765296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481, 0.9866280710338994, 0.962494157817432, 0.8614748204381057, 0.6476214128338198, 0.560437502765296, 0.5584896120034758] ***
*** starting iteration: 9; err: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481, 0.9866280710338994, 0.962494157817432, 0.8614748204381057, 0.6476214128338198, 0.560437502765296, 0.5584896120034758] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481, 0.9866280710338994, 0.962494157817432, 0.8614748204381057, 0.6476214128338198, 0.560437502765296, 0.5584896120034758, 0.5576381278598652] ***
*** finished computation of 3 references, err: [Inf, 3.5369999592711894, 1.118472240312079, 0.9947656990129481, 0.9866280710338994, 0.962494157817432, 0.8614748204381057, 0.6476214128338198, 0.560437502765296, 0.5584896120034758, 0.5576381278598652] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 32]]
** centroid: 1, normalized-entropy: 0.8203636429576731, [(2, 11), (3, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9592000007631821] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9592000007631821, 0.6207273170838572] ***
*** starting iteration: 2; err: [Inf, 0.9592000007631821, 0.6207273170838572] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9592000007631821, 0.6207273170838572, 0.5491679505874865] ***
*** starting iteration: 3; err: [Inf, 0.9592000007631821, 0.6207273170838572, 0.5491679505874865] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9592000007631821, 0.6207273170838572, 0.5491679505874865, 0.539615410432475] ***
*** starting iteration: 4; err: [Inf, 0.9592000007631821, 0.6207273170838572, 0.5491679505874865, 0.539615410432475] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9592000007631821, 0.6207273170838572, 0.5491679505874865, 0.539615410432475, 0.5369546783164525] ***
*** starting iteration: 5; err: [Inf, 0.9592000007631821, 0.6207273170838572, 0.5491679505874865, 0.539615410432475, 0.5369546783164525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9592000007631821, 0.6207273170838572, 0.5491679505874865, 0.539615410432475, 0.5369546783164525, 0.5369546783164525] ***
*** finished computation of 3 references, err: [Inf, 0.9592000007631821, 0.6207273170838572, 0.5491679505874865, 0.539615410432475, 0.5369546783164525, 0.5369546783164525] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 2, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6218000085000683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6218000085000683, 0.3276055576125217] ***
*** finished computation of 7 references, err: [Inf, 0.6218000085000683, 0.3276055576125217] ***
*** center 1: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 14, 4]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 4: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 2, 1]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 8, 3]]
** centroid: 7, normalized-entropy: 0.8453509366224364, [(2, 8), (3, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7245000061504043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7245000061504043, 0.46271876271911844] ***
*** finished computation of 7 references, err: [Inf, 0.7245000061504043, 0.46271876271911844] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 9, 30]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 9), (3, 30)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 3]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 9), (3, 3)]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.680000003929792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.680000003929792, 0.3032964759106937] ***
*** finished computation of 7 references, err: [Inf, 0.680000003929792, 0.3032964759106937] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 14]]
** centroid: 1, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.671611959624359] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.671611959624359, 0.6024144537263871] ***
*** starting iteration: 2; err: [Inf, 1.671611959624359, 0.6024144537263871] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.671611959624359, 0.6024144537263871, 0.3299185344237807] ***
*** starting iteration: 3; err: [Inf, 1.671611959624359, 0.6024144537263871, 0.3299185344237807] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.671611959624359, 0.6024144537263871, 0.3299185344237807, 0.32864525347411083] ***
*** starting iteration: 4; err: [Inf, 1.671611959624359, 0.6024144537263871, 0.3299185344237807, 0.32864525347411083] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.671611959624359, 0.6024144537263871, 0.3299185344237807, 0.32864525347411083, 0.32777801132162504] ***
*** finished computation of 3 references, err: [Inf, 1.671611959624359, 0.6024144537263871, 0.3299185344237807, 0.32864525347411083, 0.32777801132162504] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 9]]
** centroid: 2, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6824182828056441] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6824182828056441, 0.3835271392257568] ***
*** starting iteration: 2; err: [Inf, 0.6824182828056441, 0.3835271392257568] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6824182828056441, 0.3835271392257568, 0.38269542546271473] ***
*** finished computation of 3 references, err: [Inf, 0.6824182828056441, 0.3835271392257568, 0.38269542546271473] ***
*** center 1: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 32]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 12), (3, 32)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7350576620310282] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7350576620310282, 0.3983343268675007] ***
*** starting iteration: 2; err: [Inf, 0.7350576620310282, 0.3983343268675007] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7350576620310282, 0.3983343268675007, 0.38455805063892556] ***
*** starting iteration: 3; err: [Inf, 0.7350576620310282, 0.3983343268675007, 0.38455805063892556] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7350576620310282, 0.3983343268675007, 0.38455805063892556, 0.3787682481514159] ***
*** starting iteration: 4; err: [Inf, 0.7350576620310282, 0.3983343268675007, 0.38455805063892556, 0.3787682481514159] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7350576620310282, 0.3983343268675007, 0.38455805063892556, 0.3787682481514159, 0.3761180032673015] ***
*** starting iteration: 5; err: [Inf, 0.7350576620310282, 0.3983343268675007, 0.38455805063892556, 0.3787682481514159, 0.3761180032673015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7350576620310282, 0.3983343268675007, 0.38455805063892556, 0.3787682481514159, 0.3761180032673015, 0.3761180032673015] ***
*** finished computation of 3 references, err: [Inf, 0.7350576620310282, 0.3983343268675007, 0.38455805063892556, 0.3787682481514159, 0.3761180032673015, 0.3761180032673015] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 1, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37686646473600094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37686646473600094, 0.21477228680456587] ***
*** finished computation of 7 references, err: [Inf, 0.37686646473600094, 0.21477228680456587] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 4, 20]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 4), (3, 20)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 9, 11]]
** centroid: 7, normalized-entropy: 0.9927744539878083, [(2, 9), (3, 11)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3625564884049022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3625564884049022, 0.22084792580806142] ***
*** finished computation of 7 references, err: [Inf, 0.3625564884049022, 0.22084792580806142] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 2]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 3), (3, 2)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 5]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 1), (3, 5)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 4]]
** centroid: 5, normalized-entropy: 0.8631205685666311, [(2, 10), (3, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41635267733415476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41635267733415476, 0.2510825763489955] ***
*** finished computation of 7 references, err: [Inf, 0.41635267733415476, 0.2510825763489955] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 22, 8]]
** centroid: 5, normalized-entropy: 0.8366407419411671, [(2, 22), (3, 8)]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8491000046635052] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8491000046635052, 0.4750966648696274] ***
*** starting iteration: 2; err: [Inf, 0.8491000046635052, 0.4750966648696274] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8491000046635052, 0.4750966648696274, 0.4656666062192328] ***
*** starting iteration: 3; err: [Inf, 0.8491000046635052, 0.4750966648696274, 0.4656666062192328] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8491000046635052, 0.4750966648696274, 0.4656666062192328, 0.4656666062192328] ***
*** finished computation of 3 references, err: [Inf, 0.8491000046635052, 0.4750966648696274, 0.4656666062192328, 0.4656666062192328] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 35, 9]]
** centroid: 2, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.8580000380120083] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8580000380120083, 0.6218447974324394] ***
*** starting iteration: 2; err: [Inf, 3.8580000380120083, 0.6218447974324394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8580000380120083, 0.6218447974324394, 0.5535933486891923] ***
*** starting iteration: 3; err: [Inf, 3.8580000380120083, 0.6218447974324394, 0.5535933486891923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8580000380120083, 0.6218447974324394, 0.5535933486891923, 0.5513673920845388] ***
*** starting iteration: 4; err: [Inf, 3.8580000380120083, 0.6218447974324394, 0.5535933486891923, 0.5513673920845388] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8580000380120083, 0.6218447974324394, 0.5535933486891923, 0.5513673920845388, 0.5502978764198776] ***
*** starting iteration: 5; err: [Inf, 3.8580000380120083, 0.6218447974324394, 0.5535933486891923, 0.5513673920845388, 0.5502978764198776] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8580000380120083, 0.6218447974324394, 0.5535933486891923, 0.5513673920845388, 0.5502978764198776, 0.5502978764198776] ***
*** finished computation of 3 references, err: [Inf, 3.8580000380120083, 0.6218447974324394, 0.5535933486891923, 0.5513673920845388, 0.5502978764198776, 0.5502978764198776] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 9]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 27), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.794600037031566] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.794600037031566, 0.6600337835744706] ***
*** starting iteration: 2; err: [Inf, 2.794600037031566, 0.6600337835744706] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.794600037031566, 0.6600337835744706, 0.5733233921044635] ***
*** starting iteration: 3; err: [Inf, 2.794600037031566, 0.6600337835744706, 0.5733233921044635] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.794600037031566, 0.6600337835744706, 0.5733233921044635, 0.539615410432475] ***
*** starting iteration: 4; err: [Inf, 2.794600037031566, 0.6600337835744706, 0.5733233921044635, 0.539615410432475] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.794600037031566, 0.6600337835744706, 0.5733233921044635, 0.539615410432475, 0.5369546783164525] ***
*** starting iteration: 5; err: [Inf, 2.794600037031566, 0.6600337835744706, 0.5733233921044635, 0.539615410432475, 0.5369546783164525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.794600037031566, 0.6600337835744706, 0.5733233921044635, 0.539615410432475, 0.5369546783164525, 0.5369546783164525] ***
*** finished computation of 3 references, err: [Inf, 2.794600037031566, 0.6600337835744706, 0.5733233921044635, 0.539615410432475, 0.5369546783164525, 0.5369546783164525] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 26]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.7538999662064123] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7538999662064123, 1.0394459620072194] ***
*** starting iteration: 2; err: [Inf, 3.7538999662064123, 1.0394459620072194] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7538999662064123, 1.0394459620072194, 0.6450190541144093] ***
*** starting iteration: 3; err: [Inf, 3.7538999662064123, 1.0394459620072194, 0.6450190541144093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7538999662064123, 1.0394459620072194, 0.6450190541144093, 0.48344932083203473] ***
*** finished computation of 3 references, err: [Inf, 3.7538999662064123, 1.0394459620072194, 0.6450190541144093, 0.48344932083203473] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 35, 5]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 35), (3, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.496399990133082] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.496399990133082, 1.2419415818785997] ***
*** starting iteration: 2; err: [Inf, 5.496399990133082, 1.2419415818785997] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.496399990133082, 1.2419415818785997, 0.5898373826056869] ***
*** starting iteration: 3; err: [Inf, 5.496399990133082, 1.2419415818785997, 0.5898373826056869] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.496399990133082, 1.2419415818785997, 0.5898373826056869, 0.5520281437821708] ***
*** finished computation of 3 references, err: [Inf, 5.496399990133082, 1.2419415818785997, 0.5898373826056869, 0.5520281437821708] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 9]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 27), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.7276000368094087] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7276000368094087, 1.1148983747567427] ***
*** starting iteration: 2; err: [Inf, 2.7276000368094087, 1.1148983747567427] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7276000368094087, 1.1148983747567427, 1.0828049124991572] ***
*** starting iteration: 3; err: [Inf, 2.7276000368094087, 1.1148983747567427, 1.0828049124991572] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7276000368094087, 1.1148983747567427, 1.0828049124991572, 1.0723855547777723] ***
*** finished computation of 3 references, err: [Inf, 2.7276000368094087, 1.1148983747567427, 1.0828049124991572, 1.0723855547777723] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 35]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(2, 30), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [11, 4, 0]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(1, 11), (2, 4)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0790000023600026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0790000023600026, 0.4964226681278495] ***
*** finished computation of 3 references, err: [Inf, 1.0790000023600026, 0.4964226681278495] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 37, 13]]
** centroid: 3, normalized-entropy: 0.8267463724926181, [(2, 37), (3, 13)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4158999883929886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4158999883929886, 0.5593316472505396] ***
*** finished computation of 3 references, err: [Inf, 1.4158999883929886, 0.5593316472505396] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 9]]
** centroid: 3, normalized-entropy: 0.8003922080453356, [(2, 28), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0493000073544472] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0493000073544472, 0.5879397225614283] ***
*** finished computation of 3 references, err: [Inf, 1.0493000073544472, 0.5879397225614283] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 12]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(2, 34), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1763000021964645] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1763000021964645, 0.6249045351246988] ***
*** starting iteration: 2; err: [Inf, 1.1763000021964645, 0.6249045351246988] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1763000021964645, 0.6249045351246988, 0.5509386251938289] ***
*** starting iteration: 3; err: [Inf, 1.1763000021964645, 0.6249045351246988, 0.5509386251938289] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1763000021964645, 0.6249045351246988, 0.5509386251938289, 0.4964226681278495] ***
*** starting iteration: 4; err: [Inf, 1.1763000021964645, 0.6249045351246988, 0.5509386251938289, 0.4964226681278495] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1763000021964645, 0.6249045351246988, 0.5509386251938289, 0.4964226681278495, 0.4697667067073499] ***
*** starting iteration: 5; err: [Inf, 1.1763000021964645, 0.6249045351246988, 0.5509386251938289, 0.4964226681278495, 0.4697667067073499] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1763000021964645, 0.6249045351246988, 0.5509386251938289, 0.4964226681278495, 0.4697667067073499, 0.4677418775457508] ***
*** starting iteration: 6; err: [Inf, 1.1763000021964645, 0.6249045351246988, 0.5509386251938289, 0.4964226681278495, 0.4697667067073499, 0.4677418775457508] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1763000021964645, 0.6249045351246988, 0.5509386251938289, 0.4964226681278495, 0.4697667067073499, 0.4677418775457508, 0.4655860952726761] ***
*** starting iteration: 7; err: [Inf, 1.1763000021964645, 0.6249045351246988, 0.5509386251938289, 0.4964226681278495, 0.4697667067073499, 0.4677418775457508, 0.4655860952726761] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1763000021964645, 0.6249045351246988, 0.5509386251938289, 0.4964226681278495, 0.4697667067073499, 0.4677418775457508, 0.4655860952726761, 0.4649497032488361] ***
*** finished computation of 3 references, err: [Inf, 1.1763000021964645, 0.6249045351246988, 0.5509386251938289, 0.4964226681278495, 0.4697667067073499, 0.4677418775457508, 0.4655860952726761, 0.4649497032488361] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 10]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 22]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.126499996840784] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.126499996840784, 0.6617752223488363] ***
*** starting iteration: 2; err: [Inf, 1.126499996840784, 0.6617752223488363] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.126499996840784, 0.6617752223488363, 0.6234327815424443] ***
*** starting iteration: 3; err: [Inf, 1.126499996840784, 0.6617752223488363, 0.6234327815424443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.126499996840784, 0.6617752223488363, 0.6234327815424443, 0.5648626001637648] ***
*** starting iteration: 4; err: [Inf, 1.126499996840784, 0.6617752223488363, 0.6234327815424443, 0.5648626001637648] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.126499996840784, 0.6617752223488363, 0.6234327815424443, 0.5648626001637648, 0.5523478527650255] ***
*** starting iteration: 5; err: [Inf, 1.126499996840784, 0.6617752223488363, 0.6234327815424443, 0.5648626001637648, 0.5523478527650255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.126499996840784, 0.6617752223488363, 0.6234327815424443, 0.5648626001637648, 0.5523478527650255, 0.5513673920845388] ***
*** finished computation of 3 references, err: [Inf, 1.126499996840784, 0.6617752223488363, 0.6234327815424443, 0.5648626001637648, 0.5523478527650255, 0.5513673920845388] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 9]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 27), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.159600000753875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.159600000753875, 0.6574518645505235] ***
*** starting iteration: 2; err: [Inf, 1.159600000753875, 0.6574518645505235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.159600000753875, 0.6574518645505235, 0.5649560167560911] ***
*** starting iteration: 3; err: [Inf, 1.159600000753875, 0.6574518645505235, 0.5649560167560911] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.159600000753875, 0.6574518645505235, 0.5649560167560911, 0.5450734441854419] ***
*** starting iteration: 4; err: [Inf, 1.159600000753875, 0.6574518645505235, 0.5649560167560911, 0.5450734441854419] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.159600000753875, 0.6574518645505235, 0.5649560167560911, 0.5450734441854419, 0.5379049332984629] ***
*** starting iteration: 5; err: [Inf, 1.159600000753875, 0.6574518645505235, 0.5649560167560911, 0.5450734441854419, 0.5379049332984629] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.159600000753875, 0.6574518645505235, 0.5649560167560911, 0.5450734441854419, 0.5379049332984629, 0.5369546783164525] ***
*** finished computation of 3 references, err: [Inf, 1.159600000753875, 0.6574518645505235, 0.5649560167560911, 0.5450734441854419, 0.5379049332984629, 0.5369546783164525] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 26]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6732863712394138] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6732863712394138, 0.3509822936234859] ***
*** starting iteration: 2; err: [Inf, 0.6732863712394138, 0.3509822936234859] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6732863712394138, 0.3509822936234859, 0.33643004240937735] ***
*** starting iteration: 3; err: [Inf, 0.6732863712394138, 0.3509822936234859, 0.33643004240937735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6732863712394138, 0.3509822936234859, 0.33643004240937735, 0.3317287212661959] ***
*** finished computation of 3 references, err: [Inf, 0.6732863712394138, 0.3509822936234859, 0.33643004240937735, 0.3317287212661959] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 28]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 7), (3, 28)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 4]]
** centroid: 3, normalized-entropy: 0.5225593745369407, [(2, 30), (3, 4)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.113439668828953] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.113439668828953, 0.39368687153825016] ***
*** starting iteration: 2; err: [Inf, 1.113439668828953, 0.39368687153825016] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.113439668828953, 0.39368687153825016, 0.38327911368981793] ***
*** starting iteration: 3; err: [Inf, 1.113439668828953, 0.39368687153825016, 0.38327911368981793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.113439668828953, 0.39368687153825016, 0.38327911368981793, 0.38324797765964996] ***
*** finished computation of 3 references, err: [Inf, 1.113439668828953, 0.39368687153825016, 0.38327911368981793, 0.38324797765964996] ***
*** center 1: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 9]]
** centroid: 3, normalized-entropy: 0.8224042259549892, [(2, 26), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1247023155517022] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1247023155517022, 0.3908185046850026] ***
*** starting iteration: 2; err: [Inf, 1.1247023155517022, 0.3908185046850026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1247023155517022, 0.3908185046850026, 0.37825030170034524] ***
*** starting iteration: 3; err: [Inf, 1.1247023155517022, 0.3908185046850026, 0.37825030170034524] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1247023155517022, 0.3908185046850026, 0.37825030170034524, 0.3761180032673015] ***
*** finished computation of 3 references, err: [Inf, 1.1247023155517022, 0.3908185046850026, 0.37825030170034524, 0.3761180032673015] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 2, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37915686239302204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37915686239302204, 0.17397797629573222] ***
*** starting iteration: 2; err: [Inf, 0.37915686239302204, 0.17397797629573222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37915686239302204, 0.17397797629573222, 0.16586352379695904] ***
*** starting iteration: 3; err: [Inf, 0.37915686239302204, 0.17397797629573222, 0.16586352379695904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37915686239302204, 0.17397797629573222, 0.16586352379695904, 0.1644484609668356] ***
*** finished computation of 7 references, err: [Inf, 0.37915686239302204, 0.17397797629573222, 0.16586352379695904, 0.1644484609668356] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 13]]
** centroid: 7, normalized-entropy: 0.6962122601251459, [(2, 3), (3, 13)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3386207332820014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3386207332820014, 0.19065995069604583] ***
*** starting iteration: 2; err: [Inf, 0.3386207332820014, 0.19065995069604583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3386207332820014, 0.19065995069604583, 0.1842407884180785] ***
*** starting iteration: 3; err: [Inf, 0.3386207332820014, 0.19065995069604583, 0.1842407884180785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3386207332820014, 0.19065995069604583, 0.1842407884180785, 0.18090386321316337] ***
*** finished computation of 7 references, err: [Inf, 0.3386207332820014, 0.19065995069604583, 0.1842407884180785, 0.18090386321316337] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 23]]
** centroid: 4, normalized-entropy: 0.8849636363831529, [(2, 10), (3, 23)]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6358248890517072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6358248890517072, 0.22014213798906468] ***
*** starting iteration: 2; err: [Inf, 0.6358248890517072, 0.22014213798906468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6358248890517072, 0.22014213798906468, 0.20023977591557782] ***
*** starting iteration: 3; err: [Inf, 0.6358248890517072, 0.22014213798906468, 0.20023977591557782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6358248890517072, 0.22014213798906468, 0.20023977591557782, 0.19756243140855012] ***
*** finished computation of 7 references, err: [Inf, 0.6358248890517072, 0.22014213798906468, 0.20023977591557782, 0.19756243140855012] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 21, 2]]
** centroid: 3, normalized-entropy: 0.42622865699814483, [(2, 21), (3, 2)]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 19]]
** centroid: 5, normalized-entropy: 0.6665783579949205, [(2, 4), (3, 19)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999, 0.8866666666666667, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 1) => 0.9666666666666667
finished with 15
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999, 0.8866666666666667, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 1) => 0.9666666666666667
finished with 15
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999, 0.8866666666666667, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 1) => 0.9666666666666667
finished with 15
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999, 0.8866666666666667, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 1) => 0.9666666666666667
finished with 15
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999, 0.8866666666666667, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 1) => 0.9666666666666667
finished with 16
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.6308000114970983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6308000114970983, 0.39263335144036576] ***
*** starting iteration: 2; err: [Inf, 0.6308000114970983, 0.39263335144036576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6308000114970983, 0.39263335144036576, 0.34178391173491746] ***
*** starting iteration: 3; err: [Inf, 0.6308000114970983, 0.39263335144036576, 0.34178391173491746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6308000114970983, 0.39263335144036576, 0.34178391173491746, 0.3027733593907333] ***
*** starting iteration: 4; err: [Inf, 0.6308000114970983, 0.39263335144036576, 0.34178391173491746, 0.3027733593907333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6308000114970983, 0.39263335144036576, 0.34178391173491746, 0.3027733593907333, 0.2877512359070622] ***
*** starting iteration: 5; err: [Inf, 0.6308000114970983, 0.39263335144036576, 0.34178391173491746, 0.3027733593907333, 0.2877512359070622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6308000114970983, 0.39263335144036576, 0.34178391173491746, 0.3027733593907333, 0.2877512359070622, 0.28297379556085783] ***
*** starting iteration: 6; err: [Inf, 0.6308000114970983, 0.39263335144036576, 0.34178391173491746, 0.3027733593907333, 0.2877512359070622, 0.28297379556085783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6308000114970983, 0.39263335144036576, 0.34178391173491746, 0.3027733593907333, 0.2877512359070622, 0.28297379556085783, 0.2814644226252601] ***
*** starting iteration: 7; err: [Inf, 0.6308000114970983, 0.39263335144036576, 0.34178391173491746, 0.3027733593907333, 0.2877512359070622, 0.28297379556085783, 0.2814644226252601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6308000114970983, 0.39263335144036576, 0.34178391173491746, 0.3027733593907333, 0.2877512359070622, 0.28297379556085783, 0.2814644226252601, 0.28108904786336725] ***
*** finished computation of 7 references, err: [Inf, 0.6308000114970983, 0.39263335144036576, 0.34178391173491746, 0.3027733593907333, 0.2877512359070622, 0.28297379556085783, 0.2814644226252601, 0.28108904786336725] ***
*** center 1: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 19, 13]]
** centroid: 4, normalized-entropy: 0.9744894033980525, [(2, 19), (3, 13)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5179000028318925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5179000028318925, 0.3272424707687572] ***
*** starting iteration: 2; err: [Inf, 0.5179000028318925, 0.3272424707687572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553] ***
*** starting iteration: 3; err: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927] ***
*** starting iteration: 4; err: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927, 0.29309994807929884] ***
*** starting iteration: 5; err: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927, 0.29309994807929884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927, 0.29309994807929884, 0.28844026326282374] ***
*** starting iteration: 6; err: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927, 0.29309994807929884, 0.28844026326282374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927, 0.29309994807929884, 0.28844026326282374, 0.2826908388695437] ***
*** starting iteration: 7; err: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927, 0.29309994807929884, 0.28844026326282374, 0.2826908388695437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927, 0.29309994807929884, 0.28844026326282374, 0.2826908388695437, 0.2779535356350706] ***
*** starting iteration: 8; err: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927, 0.29309994807929884, 0.28844026326282374, 0.2826908388695437, 0.2779535356350706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927, 0.29309994807929884, 0.28844026326282374, 0.2826908388695437, 0.2779535356350706, 0.2732146780359849] ***
*** starting iteration: 9; err: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927, 0.29309994807929884, 0.28844026326282374, 0.2826908388695437, 0.2779535356350706, 0.2732146780359849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927, 0.29309994807929884, 0.28844026326282374, 0.2826908388695437, 0.2779535356350706, 0.2732146780359849, 0.27151823642398293] ***
*** starting iteration: 10; err: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927, 0.29309994807929884, 0.28844026326282374, 0.2826908388695437, 0.2779535356350706, 0.2732146780359849, 0.27151823642398293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927, 0.29309994807929884, 0.28844026326282374, 0.2826908388695437, 0.2779535356350706, 0.2732146780359849, 0.27151823642398293, 0.27151823642398293] ***
*** finished computation of 7 references, err: [Inf, 0.5179000028318925, 0.3272424707687572, 0.30375376167254553, 0.29593893565502927, 0.29309994807929884, 0.28844026326282374, 0.2826908388695437, 0.2779535356350706, 0.2732146780359849, 0.27151823642398293, 0.27151823642398293] ***
*** center 1: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 11, 20]]
** centroid: 4, normalized-entropy: 0.9383153522334071, [(2, 11), (3, 20)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7494000053851435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7494000053851435, 0.33063469478140645] ***
*** starting iteration: 2; err: [Inf, 0.7494000053851435, 0.33063469478140645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7494000053851435, 0.33063469478140645, 0.2918296873216816] ***
*** starting iteration: 3; err: [Inf, 0.7494000053851435, 0.33063469478140645, 0.2918296873216816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7494000053851435, 0.33063469478140645, 0.2918296873216816, 0.2788916916576544] ***
*** starting iteration: 4; err: [Inf, 0.7494000053851435, 0.33063469478140645, 0.2918296873216816, 0.2788916916576544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7494000053851435, 0.33063469478140645, 0.2918296873216816, 0.2788916916576544, 0.2721616159791825] ***
*** starting iteration: 5; err: [Inf, 0.7494000053851435, 0.33063469478140645, 0.2918296873216816, 0.2788916916576544, 0.2721616159791825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7494000053851435, 0.33063469478140645, 0.2918296873216816, 0.2788916916576544, 0.2721616159791825, 0.2714374263002992] ***
*** finished computation of 7 references, err: [Inf, 0.7494000053851435, 0.33063469478140645, 0.2918296873216816, 0.2788916916576544, 0.2721616159791825, 0.2714374263002992] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 9]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 4: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999, 0.8866666666666667, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.98
finished with 16
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999, 0.8866666666666667, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.98
finished with 17
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.439846801822356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.439846801822356, 0.27086749142648164] ***
*** starting iteration: 2; err: [Inf, 0.439846801822356, 0.27086749142648164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.439846801822356, 0.27086749142648164, 0.22955151094005238] ***
*** starting iteration: 3; err: [Inf, 0.439846801822356, 0.27086749142648164, 0.22955151094005238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.439846801822356, 0.27086749142648164, 0.22955151094005238, 0.19475339377660889] ***
*** starting iteration: 4; err: [Inf, 0.439846801822356, 0.27086749142648164, 0.22955151094005238, 0.19475339377660889] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.439846801822356, 0.27086749142648164, 0.22955151094005238, 0.19475339377660889, 0.17766934333483606] ***
*** starting iteration: 5; err: [Inf, 0.439846801822356, 0.27086749142648164, 0.22955151094005238, 0.19475339377660889, 0.17766934333483606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.439846801822356, 0.27086749142648164, 0.22955151094005238, 0.19475339377660889, 0.17766934333483606, 0.1645116417379656] ***
*** starting iteration: 6; err: [Inf, 0.439846801822356, 0.27086749142648164, 0.22955151094005238, 0.19475339377660889, 0.17766934333483606, 0.1645116417379656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.439846801822356, 0.27086749142648164, 0.22955151094005238, 0.19475339377660889, 0.17766934333483606, 0.1645116417379656, 0.1639370713937436] ***
*** finished computation of 7 references, err: [Inf, 0.439846801822356, 0.27086749142648164, 0.22955151094005238, 0.19475339377660889, 0.17766934333483606, 0.1645116417379656, 0.1639370713937436] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 8, 11]]
** centroid: 7, normalized-entropy: 0.9819407868640977, [(2, 8), (3, 11)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2450675937495992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2450675937495992, 0.1613235716925504] ***
*** starting iteration: 2; err: [Inf, 0.2450675937495992, 0.1613235716925504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2450675937495992, 0.1613235716925504, 0.15777177906664666] ***
*** starting iteration: 3; err: [Inf, 0.2450675937495992, 0.1613235716925504, 0.15777177906664666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2450675937495992, 0.1613235716925504, 0.15777177906664666, 0.1574174456940871] ***
*** finished computation of 7 references, err: [Inf, 0.2450675937495992, 0.1613235716925504, 0.15777177906664666, 0.1574174456940871] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 4]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 5, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5175669959005488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5175669959005488, 0.22632819060311227] ***
*** starting iteration: 2; err: [Inf, 0.5175669959005488, 0.22632819060311227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5175669959005488, 0.22632819060311227, 0.20038873042636865] ***
*** starting iteration: 3; err: [Inf, 0.5175669959005488, 0.22632819060311227, 0.20038873042636865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5175669959005488, 0.22632819060311227, 0.20038873042636865, 0.1923506732606769] ***
*** starting iteration: 4; err: [Inf, 0.5175669959005488, 0.22632819060311227, 0.20038873042636865, 0.1923506732606769] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5175669959005488, 0.22632819060311227, 0.20038873042636865, 0.1923506732606769, 0.19085401999410812] ***
*** starting iteration: 5; err: [Inf, 0.5175669959005488, 0.22632819060311227, 0.20038873042636865, 0.1923506732606769, 0.19085401999410812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5175669959005488, 0.22632819060311227, 0.20038873042636865, 0.1923506732606769, 0.19085401999410812, 0.19085401999410812] ***
*** finished computation of 7 references, err: [Inf, 0.5175669959005488, 0.22632819060311227, 0.20038873042636865, 0.1923506732606769, 0.19085401999410812, 0.19085401999410812] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 3]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 11), (3, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 5]]
** centroid: 2, normalized-entropy: 1.0, [(2, 5), (3, 5)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 4: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999, 0.8866666666666667, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.98
finished with 17
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.414285714285713, 3.985714285714286, 1.5, 0.2571428571428572], [5.041666666666666, 3.391666666666666, 1.5249999999999997, 0.2916666666666667], [4.514285714285714, 3.1142857142857143, 1.342857142857143, 0.19999999999999998], [6.378947368421053, 2.9631578947368418, 4.6684210526315795, 1.4842105263157894], [6.076923076923077, 2.7384615384615385, 5.06923076923077, 1.8461538461538463], [5.688235294117646, 2.7058823529411766, 4.041176470588236, 1.2411764705882353], [4.76, 2.96, 1.5, 0.18], [6.815789473684212, 3.057894736842105, 5.81578947368421, 2.105263157894737]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 1, 1, 2, 3, 2, 1, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.550000000000001, 3.1625, 1.2875, 0.175], [4.941666666666666, 3.2249999999999996, 1.5333333333333332, 0.275], [5.6571428571428575, 2.6, 4.164285714285715, 1.2571428571428573], [6.536363636363635, 3.0090909090909093, 4.6818181818181825, 1.4636363636363634], [6.265, 2.9349999999999996, 5.234999999999999, 2.0349999999999997], [7.266666666666667, 3.141666666666667, 6.133333333333333, 2.15], [5.294444444444445, 3.6999999999999997, 1.5055555555555555, 0.26666666666666666], [5.1, 2.32, 3.3600000000000003, 1.02]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 1, 2, 2, 3, 3, 1, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.3083333333333345, 2.8416666666666663, 4.608333333333333, 1.4833333333333334], [6.022222222222222, 2.7222222222222223, 5.044444444444444, 1.7555555555555555], [5.66923076923077, 2.8307692307692305, 4.276923076923077, 1.3384615384615386], [6.670588235294117, 3.0588235294117645, 5.6000000000000005, 2.1058823529411765], [5.025806451612903, 3.419354838709678, 1.448387096774193, 0.23548387096774195], [7.550000000000001, 3.2250000000000005, 6.3625, 2.1375], [5.55, 2.6, 3.783333333333333, 1.2166666666666668], [5.0, 2.3, 3.2750000000000004, 1.025]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 3, 1, 3, 2, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[80, 1, 21, 32, 10, 23, 21, 16, 21, 29, 29, 28, 28, 23, 29, 20, 40, 30, 26, 23, 42, 39, 25, 17, 30, 13, 23, 37, 27, 16, 32, 41, 25, 39, 40, 54, 22, 34, 2, 31, 34, 11, 20, 27, 21, 33, 24, 12, 19, 26, 21, 38, 40, 28, 17, 43, 29, 37, 35, 29, 24, 6, 36, 1, 33, 30, 23, 29, 26, 29, 39, 37, 27, 34, 46, 36, 22, 44, 41, 23, 38, 14, 35, 16, 29, 41, 27, 27, 28, 30, 37, 35, 42, 58, 45, 30, 35, 33, 35, 30, 23, 37, 36, 36, 19, 40, 2, 42, 43, 34, 43, 43, 24, 36, 34, 32, 27, 25, 39, 30, 43, 28, 43, 58, 12, 62, 41, 24, 25, 15, 46, 42, 15, 24, 42, 39, 29, 21, 49, 35, 48, 46, 28, 40, 46, 22, 26, 36, 34, 41, 47, 31, 28, 28, 59, 53, 36, 33, 28, 47, 45, 22, 44, 24, 33, 29, 50, 30, 41, 33, 53, 30, 28, 17, 44, 36, 27, 30, 20, 41, 60, 21, 30, 70, 46, 32, 43, 51, 28, 26, 34, 39, 37, 23, 15, 23, 27, 28, 29, 54, 67, 29, 23, 37, 47, 49, 18, 25, 35, 28, 26, 29, 34, 60, 27, 29, 31, 47, 36, 34, 23, 25, 18, 35, 36, 35, 39, 26, 22, 19, 42, 43, 30, 20, 72, 23, 39, 41, 24, 25, 91, 26, 61, 33, 43, 46, 35, 20, 38, 32, 47, 41, 34, 58, 34, 5, 1, 27, 2, 82, 19, 31, 29, 47, 34, 15, 28, 39, 37, 22, 62, 50, 35, 37, 52, 33, 41, 33, 26, 36, 43, 40, 59, 45, 27, 36, 43, 40, 44, 29, 72, 35, 24, 24, 43, 33, 49, 40, 25, 37]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6129999999999998, speedup = 0.4656058128607528, eval_ratio = 0.041525)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.37326388888888895,"recall":0.37326388888888895,"f1":null,"seconds":7.054395973682404e-5,"exhaustive_search_seconds":0.000407414510846138,"evaluations":338.1796875,"distances_sum":1775.5808901225485}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5520833333333334,"recall":0.5520833333333334,"f1":0.5520833333333334,"seconds":0.00010488182306289673,"exhaustive_search_seconds":0.000407414510846138,"evaluations":375.140625,"distances_sum":1648.495413008168}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6501736111111112,"recall":0.6501736111111112,"f1":0.6501736111111112,"seconds":0.00013572350144386292,"exhaustive_search_seconds":0.000407414510846138,"evaluations":411.6171875,"distances_sum":1604.2311953819615}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7256944444444436,"recall":0.7256944444444436,"f1":0.7256944444444436,"seconds":0.00016770511865615845,"exhaustive_search_seconds":0.000407414510846138,"evaluations":451.0625,"distances_sum":1577.543732307391}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7777777777777771,"recall":0.7777777777777771,"f1":0.7777777777777771,"seconds":0.00019505992531776428,"exhaustive_search_seconds":0.000407414510846138,"evaluations":489.046875,"distances_sum":1563.7678289349712}
KCenters.DeloneInvIndex> reached performance {"precision":0.8116319444444435,"recall":0.8116319444444435,"f1":0.8116319444444435,"seconds":0.00022682547569274902,"exhaustive_search_seconds":0.000407414510846138,"evaluations":527.3203125,"distances_sum":1556.9699534523886}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8029999999999999, speedup = 1.860983837671819, eval_ratio = 0.053279999999999994)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
