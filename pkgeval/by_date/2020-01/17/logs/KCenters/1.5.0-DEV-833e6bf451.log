Julia Version 1.5.0-DEV.84
Commit 833e6bf451 (2020-01-17 18:45 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed Reexport ──────────────────── v0.2.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed KCenters ──────────────────── v0.1.8
 Installed TableTraits ───────────────── v1.0.0
 Installed DataStructures ────────────── v0.17.9
 Installed JSON ──────────────────────── v0.21.0
 Installed Missings ──────────────────── v0.4.3
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed Parsers ───────────────────── v0.3.10
 Installed OrderedCollections ────────── v1.1.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed CategoricalArrays ─────────── v0.7.7
 Installed DataValueInterfaces ───────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed Tables ────────────────────── v0.2.11
 Installed MLDataPattern ─────────────── v0.5.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed Compat ────────────────────── v3.2.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataFrames ────────────────── v0.20.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_zIweBR/Project.toml`
 [no changes]
  Updating `/tmp/jl_zIweBR/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_zIweBR/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 144.89000000000001
[ Info: 70.65999999999998
[ Info: 43.43000000000001
[ Info: 26.679999999999986
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.2399983987154
[ Info: 75.72000115944812
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.004517414385244
inertia(cdnet.distances) = 28.950502252381018
inertia(crand.distances) = 19.211818363134242
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.7168711496836503,"seconds":4.695728421211243e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":7.4765625,"distances_sum":1603.3501529024404}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8633964993340002,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.25,"distances_sum":2292.992951797558}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8633964993340002,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.25,"distances_sum":2292.992951797558}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9069061147186153,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.484375,"distances_sum":2652.2953704508163}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9637336621711625,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.8671875,"distances_sum":3082.308182412838}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9637336621711625,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.8671875,"distances_sum":3082.308182412838}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9771233974358979,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.9765625,"distances_sum":3137.3761871730617}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9771233974358979,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.9765625,"distances_sum":3137.3761871730617}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9771233974358979,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.9765625,"distances_sum":3137.3761871730617}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8101386460761468,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.25,"distances_sum":1892.9364854883863}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8621742840492849,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.34375,"distances_sum":2200.209321987171}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.812834620475769e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":6.453125,"distances_sum":983.5399012561409}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8621742840492849,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.34375,"distances_sum":2200.209321987171}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9428113553113556,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8125,"distances_sum":2682.725524842818}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9019007034632044,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.4140625,"distances_sum":2391.1492619139103}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9169559607059613,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.5546875,"distances_sum":2507.5024201909355}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9345180860805866,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.6953125,"distances_sum":2681.050691284545}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9428113553113556,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8125,"distances_sum":2682.725524842818}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9615613553113558,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.828125,"distances_sum":2853.7009875342333}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9500057234432239,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8046875,"distances_sum":2742.5557999683124}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964880952380953,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8828125,"distances_sum":2854.855100616092}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9781994047619051,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.96875,"distances_sum":2947.8385891982443}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9470123626373633,"seconds":4.393979907035828e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.7890625,"distances_sum":2740.5573542645675}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9577609890109893,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.828125,"distances_sum":2817.2776038693737}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781994047619051,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.96875,"distances_sum":2947.8385891982443}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781994047619051,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.96875,"distances_sum":2947.8385891982443}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5361328125,"f1":0.6839450480075485,"seconds":4.837289452552795e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.453125,"distances_sum":1292.1578100752936}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7146121239871246,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.515625,"distances_sum":1454.5757569409072}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8615166083916093,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.453125,"distances_sum":2061.1967492742942}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8615166083916093,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.453125,"distances_sum":2061.1967492742942}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9604395604395608,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9453125,"distances_sum":2733.499958631924}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8664705086580096,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.4765625,"distances_sum":2114.0117180393586}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9219239094239101,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7421875,"distances_sum":2448.2352424373303}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9343151640026645,"seconds":1.2269243597984314e-5,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7890625,"distances_sum":2521.544487164869}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9223672161172166,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6640625,"distances_sum":2434.212956515051}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9604395604395608,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9453125,"distances_sum":2733.499958631924}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9770833333333336,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.984375,"distances_sum":2867.748597908741}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":7,"bsize":13}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9815876831501833,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.953125,"distances_sum":2921.4886508365184}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9777529761904764,"seconds":8.959323167800903e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9765625,"distances_sum":2881.6074377572445}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9695512820512824,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.953125,"distances_sum":2806.421448950497}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9815876831501833,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.953125,"distances_sum":2921.4886508365184}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9815876831501833,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.953125,"distances_sum":2921.4886508365184}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8435647685647693,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":7.9296875,"distances_sum":1926.6024195966143}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5810546875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5810546875,"f1":0.7207871989121996,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":7.25,"distances_sum":1435.899540496413}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.8435647685647693,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":7.9296875,"distances_sum":1926.6024195966143}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9567021520146526,"seconds":7.020309567451477e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.8359375,"distances_sum":2670.7314475231083}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9435725732600738,"seconds":6.450340151786804e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.7421875,"distances_sum":2611.3475406843704}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9294013278388285,"seconds":7.009133696556091e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.5234375,"distances_sum":2460.4166905701463}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9056495587745593,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.3046875,"distances_sum":2327.650998250875}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8670423326673334,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.078125,"distances_sum":2065.099696601436}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9567021520146526,"seconds":7.020309567451477e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.8359375,"distances_sum":2670.7314475231083}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.975280448717949,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.921875,"distances_sum":2824.674914249436}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9775297619047622,"seconds":6.6533684730529785e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.90625,"distances_sum":2843.6993304816488}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.972865155677656,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.875,"distances_sum":2805.4812126620095}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9775297619047622,"seconds":6.6533684730529785e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.90625,"distances_sum":2843.6993304816488}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9775297619047622,"seconds":6.6533684730529785e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.90625,"distances_sum":2843.6993304816488}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6318359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6318359375,"f1":0.7614104645354652,"seconds":4.110857844352722e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":7.4296875,"distances_sum":1711.2293783170394}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4853515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4853515625,"f1":0.6390019702519707,"seconds":4.08664345741272e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":6.78125,"distances_sum":1266.3048982646574}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6318359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6318359375,"f1":0.7614104645354652,"seconds":4.110857844352722e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":7.4296875,"distances_sum":1711.2293783170394}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8460263694638704,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.0703125,"distances_sum":2089.787807969989}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8912009865134871,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.28125,"distances_sum":2396.3123322951137}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9379781676656683,"seconds":6.4391642808914185e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.8203125,"distances_sum":2622.7507841291}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9379781676656683,"seconds":6.4391642808914185e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.8203125,"distances_sum":2622.7507841291}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9693108974358976,"seconds":6.563961505889893e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.8828125,"distances_sum":2845.6763428373133}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9531536172161176,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.8046875,"distances_sum":2746.41300638589}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9693108974358976,"seconds":6.563961505889893e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.8828125,"distances_sum":2845.6763428373133}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9693108974358976,"seconds":6.563961505889893e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.8828125,"distances_sum":2845.6763428373133}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.154296875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.154296875,"f1":null,"seconds":2.680346369743347e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":4.921875,"distances_sum":409.36639809680133}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.848161734099235,"seconds":4.8782676458358765e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.0859375,"distances_sum":2124.2341478961043}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.6832027347652351,"seconds":3.948807716369629e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.125,"distances_sum":1461.2589409572643}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.848161734099235,"seconds":4.8782676458358765e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.0859375,"distances_sum":2124.2341478961043}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9597928113553118,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.875,"distances_sum":2859.2129306312254}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.924997398434899,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.65625,"distances_sum":2648.4513127227888}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8868735431235438,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.5390625,"distances_sum":2357.9892694249643}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9201184232434239,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.609375,"distances_sum":2600.733672981184}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8881956585081592,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.4296875,"distances_sum":2399.5521591023166}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9597928113553118,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.875,"distances_sum":2859.2129306312254}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9666494963369969,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9140625,"distances_sum":2904.2863639787893}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9726762820512821,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.875,"distances_sum":2976.7711969024854}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9726762820512821,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.875,"distances_sum":2976.7711969024854}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9726762820512821,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.875,"distances_sum":2976.7711969024854}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.181640625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.181640625,"f1":null,"seconds":3.125518560409546e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":5.0703125,"distances_sum":347.6461418236904}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5849609375, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5849609375,"f1":null,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":7.375,"distances_sum":1153.13023441588}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5849609375,"state":{"ssize":4,"bsize":3},"perf":{"precision":null,"recall":0.5849609375,"f1":null,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":7.375,"distances_sum":1153.13023441588}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9368074633699639,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.84375,"distances_sum":1958.9458054955862}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8855519480519489,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.4296875,"distances_sum":1728.7515373704975}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9368074633699639,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.84375,"distances_sum":1958.9458054955862}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9498969780219784,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.7890625,"distances_sum":2091.9474018362157}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9635817307692314,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.8671875,"distances_sum":2150.9727413149953}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":10,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9635817307692314,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.8671875,"distances_sum":2150.9727413149953}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":10,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9635817307692314,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.8671875,"distances_sum":2150.9727413149953}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40625,"f1":null,"seconds":4.22261655330658e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.2734375,"distances_sum":679.3179236110531}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8647238178488188,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.875,"distances_sum":1476.390417990637}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8647238178488188,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.875,"distances_sum":1476.390417990637}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9329758782883788,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.828125,"distances_sum":1827.7039652729834}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9329758782883788,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.828125,"distances_sum":1827.7039652729834}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9768257783882786,"seconds":6.3516199588775635e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":2056.6010403955997}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9462745587745591,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.90625,"distances_sum":1891.9745640071194}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9663378288378293,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":2012.158283419322}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9448031135531143,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":1848.0088830771335}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9768257783882786,"seconds":6.3516199588775635e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":2056.6010403955997}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9768257783882786,"seconds":6.3516199588775635e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":2056.6010403955997}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8692453379953388,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.1484375,"distances_sum":1567.623302534822}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.868015318015319,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.1875,"distances_sum":1541.2328253695957}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6201171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6201171875,"f1":0.7511478105228111,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.0625,"distances_sum":1239.6689365203044}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8692453379953388,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.1484375,"distances_sum":1567.623302534822}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8886597777222784,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.2578125,"distances_sum":1675.6539843733597}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9393174533799539,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6328125,"distances_sum":1954.6625356379216}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9257528929403933,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.53125,"distances_sum":1911.3733329444453}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9382586163836171,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.625,"distances_sum":1948.8264318816498}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9338859057609064,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.5625,"distances_sum":1953.391412747212}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9393174533799539,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6328125,"distances_sum":1954.6625356379216}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670043498168505,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8515625,"distances_sum":2083.953805849024}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9627804487179493,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.875,"distances_sum":2039.880516196047}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9559924450549457,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8046875,"distances_sum":2007.5087359432703}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.95586652930403,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.703125,"distances_sum":2067.6887610582753}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646233974358978,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8671875,"distances_sum":2049.52821727702}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9544013278388286,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7734375,"distances_sum":2025.5423208879872}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9529418498168502,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.765625,"distances_sum":1996.688136032544}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9611435439560444,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8671875,"distances_sum":2045.3685870676047}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670043498168505,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8515625,"distances_sum":2083.953805849024}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670043498168505,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8515625,"distances_sum":2083.953805849024}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.208984375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.208984375,"f1":null,"seconds":3.939494490623474e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.2109375,"distances_sum":406.4687979030468}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.208984375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.208984375,"f1":null,"seconds":3.939494490623474e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.2109375,"distances_sum":406.4687979030468}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.15234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.15234375,"f1":null,"seconds":2.9802322387695312e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":4.640625,"distances_sum":267.4054953877181}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.162109375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.162109375,"f1":null,"seconds":3.1441450119018555e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":4.6953125,"distances_sum":307.74359967555057}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6956243409368416,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.7265625,"distances_sum":982.1225085394551}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.55078125,"f1":0.6956243409368416,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.7265625,"distances_sum":982.1225085394551}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9285313644688651,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6875,"distances_sum":1831.5027415935497}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8944571053946062,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.3828125,"distances_sum":1660.8915499279983}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.62890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.62890625,"f1":0.7567496739371746,"seconds":4.3548643589019775e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.0625,"distances_sum":1158.002930269025}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6416015625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6416015625,"f1":0.7664490023865032,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.1796875,"distances_sum":1192.0283820533582}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7864916333666343,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.1171875,"distances_sum":1278.372449246097}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9285313644688651,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6875,"distances_sum":1831.5027415935497}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9654590201465205,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8828125,"distances_sum":2038.8167432172952}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9686240842490847,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2048.783322345241}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.927412691475192,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6640625,"distances_sum":1845.2069600970688}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9464342948717953,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.75,"distances_sum":1955.1129583447457}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9686240842490847,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2048.783322345241}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9686240842490847,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2048.783322345241}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.388671875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.388671875,"f1":null,"seconds":3.8035213947296143e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.375,"distances_sum":714.7479515569213}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.205078125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.205078125,"f1":null,"seconds":3.4458935260772705e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.921875,"distances_sum":332.57636267436516}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.203125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.203125,"f1":null,"seconds":3.4030526876449585e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.9921875,"distances_sum":358.44734871069994}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.388671875,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.388671875,"f1":null,"seconds":3.8035213947296143e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.375,"distances_sum":714.7479515569213}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7974754412254419,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.0703125,"distances_sum":1310.0632902644254}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7066884504384512,"seconds":4.490837454795837e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.4765625,"distances_sum":1096.142053453361}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5673828125,"f1":null,"seconds":4.490837454795837e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.5703125,"distances_sum":1048.5183362989214}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7060546875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7060546875,"f1":0.8145933927183936,"seconds":5.161389708518982e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.109375,"distances_sum":1398.872573346801}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8693858225108232,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4921875,"distances_sum":1589.1440704350782}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8693858225108232,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4921875,"distances_sum":1589.1440704350782}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9369848901098907,"seconds":6.198883056640625e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.921875,"distances_sum":1905.8284367876438}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9210851648351657,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6875,"distances_sum":1840.5505490368994}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9091320138195149,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.75,"distances_sum":1764.2893058605996}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9318369130869136,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8125,"distances_sum":1890.1360772727423}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9454873251748258,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.921875,"distances_sum":1972.7710705588795}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9454873251748258,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.921875,"distances_sum":1972.7710705588795}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9052734375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9454873251748258,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.921875,"distances_sum":1972.7710705588795}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5537109375,"f1":0.6981204559329565,"seconds":4.626810550689697e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.046875,"distances_sum":1083.812889105929}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5537109375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5537109375,"f1":0.6981204559329565,"seconds":4.626810550689697e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.046875,"distances_sum":1083.812889105929}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8136641136641144,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.453125,"distances_sum":1456.706078897965}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8651364260739267,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7421875,"distances_sum":1662.2866694307784}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8561735139860147,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7109375,"distances_sum":1587.1483232886371}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8651364260739267,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7421875,"distances_sum":1662.2866694307784}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9130494505494513,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8046875,"distances_sum":1845.3675060165042}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8992195304695313,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8203125,"distances_sum":1794.374801848612}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9609463453213456,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9765625,"distances_sum":2139.967253340574}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9515739468864475,"seconds":6.280839443206787e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2064.6681064864433}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":13,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.962225274725275,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.953125,"distances_sum":2148.439196144245}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":12,"bsize":7}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9525443306693312,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9453125,"distances_sum":2079.567530182589}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8717901889776897,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7421875,"distances_sum":1673.415483086714}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.8990535506160512,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.796875,"distances_sum":1794.3077123055523}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9609463453213456,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9765625,"distances_sum":2139.967253340574}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9609463453213456,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9765625,"distances_sum":2139.967253340574}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8553665084915094,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.3515625,"distances_sum":1575.0633070134309}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.858347902097903,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.3984375,"distances_sum":1623.9397293043862}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.858347902097903,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.3984375,"distances_sum":1623.9397293043862}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9652930402930406,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.890625,"distances_sum":2108.819671775546}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652930402930406,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.890625,"distances_sum":2108.819671775546}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652930402930406,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.890625,"distances_sum":2108.819671775546}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652930402930406,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.890625,"distances_sum":2108.819671775546}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.533203125,"f1":0.6794642857142861,"seconds":4.4014304876327515e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.9609375,"distances_sum":1096.1407931740187}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":3.0659139156341553e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.5390625,"distances_sum":380.83781964840676}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8028325840825848,"seconds":4.7460198402404785e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.765625,"distances_sum":1484.6071329113006}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6875,"f1":0.8028325840825848,"seconds":4.7460198402404785e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.765625,"distances_sum":1484.6071329113006}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8104126776001784,"seconds":4.839152097702026e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.8203125,"distances_sum":1533.424471199364}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9554976273726277,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.796875,"distances_sum":2203.4503951150937}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9385130494505498,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7109375,"distances_sum":2045.5829350808888}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.858769875957377,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3046875,"distances_sum":1674.142021212324}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8723505661005669,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.296875,"distances_sum":1786.007920209601}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9554976273726277,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.796875,"distances_sum":2203.4503951150937}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9783882783882787,"seconds":6.284564733505249e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.953125,"distances_sum":2315.284081595882}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9783882783882787,"seconds":6.284564733505249e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.953125,"distances_sum":2315.284081595882}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9783882783882787,"seconds":6.284564733505249e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.953125,"distances_sum":2315.284081595882}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2119140625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2119140625,"f1":null,"seconds":3.07522714138031e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":4.921875,"distances_sum":505.9304130551846}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2119140625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.2119140625,"f1":null,"seconds":3.07522714138031e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":4.921875,"distances_sum":505.9304130551846}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8031390484515493,"seconds":4.7869980335235596e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.578125,"distances_sum":1588.1217242470025}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6884765625,"state":{"ssize":9,"bsize":4},"perf":{"precision":1.0,"recall":0.6884765625,"f1":0.8031390484515493,"seconds":4.7869980335235596e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.578125,"distances_sum":1588.1217242470025}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9338141025641032,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.5703125,"distances_sum":2301.662822038449}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8565276737151744,"seconds":5.044043064117432e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.796875,"distances_sum":1827.6166846905717}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9338141025641032,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.5703125,"distances_sum":2301.662822038449}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8857421875,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9338141025641032,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.5703125,"distances_sum":2301.662822038449}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6884641400266406,"seconds":4.118308424949646e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.6015625,"distances_sum":1239.3158712548009}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.6793329933954939,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.4140625,"distances_sum":1225.8458750024924}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5458984375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5458984375,"f1":0.6884641400266406,"seconds":4.118308424949646e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.6015625,"distances_sum":1239.3158712548009}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8888455294705304,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.3125,"distances_sum":2105.18743871423}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7873839701964711,"seconds":4.494562745094299e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.296875,"distances_sum":1568.8090756742822}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7936022311022319,"seconds":4.526227712631226e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.28125,"distances_sum":1588.0604086264932}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.810546875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.810546875,"f1":0.8888455294705304,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.3125,"distances_sum":2105.18743871423}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9445570054945059,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6796875,"distances_sum":2462.716198152331}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.957243277555778,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8203125,"distances_sum":2529.4192889404844}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9472184065934068,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.765625,"distances_sum":2469.2486470022586}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9215518856143862,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6171875,"distances_sum":2313.7278761888465}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9382013819513826,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6484375,"distances_sum":2443.2211211927397}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.957243277555778,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8203125,"distances_sum":2529.4192889404844}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.957243277555778,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8203125,"distances_sum":2529.4192889404844}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8601565101565111,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.171875,"distances_sum":1787.1684834196226}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8601565101565111,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.171875,"distances_sum":1787.1684834196226}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9128121878121886,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.4140625,"distances_sum":2100.4402515968964}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9399152930402938,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.7265625,"distances_sum":2326.1524274362046}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9399152930402938,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.7265625,"distances_sum":2326.1524274362046}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.959884386446887,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.859375,"distances_sum":2467.9016364338086}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684352106227111,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.953125,"distances_sum":2478.576082589556}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684352106227111,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.953125,"distances_sum":2478.576082589556}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684352106227111,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.953125,"distances_sum":2478.576082589556}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.775540605228106,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.3515625,"distances_sum":1600.2970382938815}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7855368589743598,"seconds":4.298985004425049e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.3984375,"distances_sum":1669.8238157045587}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7115813006438012,"seconds":4.291534423828125e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.0703125,"distances_sum":1407.4251651101383}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.666015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.666015625,"f1":0.7855368589743598,"seconds":4.298985004425049e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.3984375,"distances_sum":1669.8238157045587}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7926354895104902,"seconds":4.4442713260650635e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.4296875,"distances_sum":1662.245073944657}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9360779845154852,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.6640625,"distances_sum":2463.8289307044383}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9186069139194145,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.5703125,"distances_sum":2353.1403548567982}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9139568764568773,"seconds":5.4541975259780884e-5,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.5078125,"distances_sum":2309.5523838223876}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8474202880452889,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.953125,"distances_sum":1955.6381307656827}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9269548160173166,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.65625,"distances_sum":2388.358342526927}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9360779845154852,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.6640625,"distances_sum":2463.8289307044383}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9590118215118218,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8203125,"distances_sum":2602.8164609897162}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9695512820512825,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.890625,"distances_sum":2654.3749766211445}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9663518772893778,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8828125,"distances_sum":2634.7886589042496}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9585794413919421,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8203125,"distances_sum":2603.936582845934}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.958487866300367,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.796875,"distances_sum":2598.716128208947}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9667124542124546,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8828125,"distances_sum":2643.0852516161517}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9695512820512825,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.890625,"distances_sum":2654.3749766211445}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9695512820512825,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.890625,"distances_sum":2654.3749766211445}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.7513673305511475e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.0078125,"distances_sum":902.6851699360802}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4111328125,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.7513673305511475e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.0078125,"distances_sum":902.6851699360802}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8589259698634707,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.0703125,"distances_sum":1851.104922969714}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7108185217560223,"seconds":4.509463906288147e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.8828125,"distances_sum":1279.9326249307312}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5732421875,"f1":null,"seconds":4.552304744720459e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.828125,"distances_sum":1272.7138266594482}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":8,"bsize":3}, perf: {"precision":null,"recall":0.57421875,"f1":null,"seconds":4.3585896492004395e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.8828125,"distances_sum":1271.2405133497193}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.431640625, conf: {"ssize":8,"bsize":2}, perf: {"precision":null,"recall":0.431640625,"f1":null,"seconds":3.766268491744995e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.1875,"distances_sum":939.2475662841647}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8076864108114116,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.640625,"distances_sum":1587.7963006780174}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8589259698634707,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.0703125,"distances_sum":1851.104922969714}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9586195054945061,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2513.3545914015554}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9330846237096241,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.71875,"distances_sum":2353.3357264510064}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.9004609973359983,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.375,"distances_sum":2103.979305041536}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9586195054945061,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2513.3545914015554}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9586195054945061,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2513.3545914015554}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6416015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6416015625,"f1":0.7667518245643252,"seconds":4.215165972709656e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.1796875,"distances_sum":1647.2183397630827}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.375,"f1":null,"seconds":3.1013041734695435e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.3046875,"distances_sum":949.8758241409964}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6416015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6416015625,"f1":0.7667518245643252,"seconds":4.215165972709656e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.1796875,"distances_sum":1647.2183397630827}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9426053113553121,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.671875,"distances_sum":2535.277371487683}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8193920662670671,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.7578125,"distances_sum":1832.1290994949575}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9426053113553121,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.671875,"distances_sum":2535.277371487683}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9565304487179491,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8125,"distances_sum":2616.826655119539}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681948260073263,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8203125,"distances_sum":2707.5803480682007}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9681948260073263,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8203125,"distances_sum":2707.5803480682007}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9681948260073263,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8203125,"distances_sum":2707.5803480682007}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7048259032634039,"seconds":3.859400749206543e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.109375,"distances_sum":1303.9370843281447}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7947729353979363,"seconds":4.211440682411194e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.671875,"distances_sum":1620.4772929703242}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4423828125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4423828125,"f1":null,"seconds":3.2316893339157104e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.4140625,"distances_sum":1021.4878430086179}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.673828125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.673828125,"f1":0.7947729353979363,"seconds":4.211440682411194e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.671875,"distances_sum":1620.4772929703242}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8076000388500396,"seconds":4.561617970466614e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.7734375,"distances_sum":1682.1941251034984}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8523313492063501,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.328125,"distances_sum":1895.0606241038215}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9407852564102569,"seconds":6.9588422775268555e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8671875,"distances_sum":2501.9813701705903}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9271925990675998,"seconds":7.640570402145386e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8828125,"distances_sum":2374.8636792008087}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9118277555777565,"seconds":1.12876296043396e-5,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.828125,"distances_sum":2262.557980584846}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8968921703296712,"seconds":1.1157244443893433e-5,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8359375,"distances_sum":2106.82355448178}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9407852564102569,"seconds":6.9588422775268555e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8671875,"distances_sum":2501.9813701705903}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9660771520146524,"seconds":1.0671094059944153e-5,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9609375,"distances_sum":2660.228332969876}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9504349816849824,"seconds":8.044764399528503e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8515625,"distances_sum":2563.7971537434637}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9669471153846155,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.921875,"distances_sum":2674.107158630447}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9695341117216121,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9375,"distances_sum":2697.915117096171}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9455815018315025,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8828125,"distances_sum":2528.770186269566}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9651442307692313,"seconds":6.204470992088318e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9453125,"distances_sum":2658.684844244863}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9616903929403934,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8828125,"distances_sum":2647.6583654697447}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9695341117216121,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9375,"distances_sum":2697.915117096171}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9695341117216121,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9375,"distances_sum":2697.915117096171}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.630859375, conf: {"ssize":4,"bsize":4}, perf: {"precision":null,"recall":0.630859375,"f1":null,"seconds":4.021450877189636e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.8828125,"distances_sum":1515.1334639281038}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.630859375,"state":{"ssize":4,"bsize":4},"perf":{"precision":null,"recall":0.630859375,"f1":null,"seconds":4.021450877189636e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.8828125,"distances_sum":1515.1334639281038}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8433701714951725,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.78125,"distances_sum":1871.6553608824474}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6376953125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6376953125,"f1":0.7700960497835505,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.9609375,"distances_sum":1516.705388707634}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8927468364968372,"seconds":6.638467311859131e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.1640625,"distances_sum":2166.2121272493396}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.818359375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.818359375,"f1":0.8927468364968372,"seconds":6.638467311859131e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.1640625,"distances_sum":2166.2121272493396}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8977277930402939,"seconds":1.0669231414794922e-5,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.2734375,"distances_sum":2165.1092885072576}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9535199175824184,"seconds":6.495043635368347e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.734375,"distances_sum":2602.2143477464747}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9261446886446896,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.671875,"distances_sum":2400.7048022937506}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9285885989010996,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6328125,"distances_sum":2412.126106184813}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9535199175824184,"seconds":6.495043635368347e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.734375,"distances_sum":2602.2143477464747}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9535199175824184,"seconds":6.495043635368347e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.734375,"distances_sum":2602.2143477464747}}, n: 9
inertia(cfft.distances) = 18.845835497835502
inertia(cdnet.distances) = 22.637412329407177
inertia(crand.distances) = 22.9234696969697
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8822222222222221
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9288888888888889
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9400000000000001
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9355555555555556
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9422222222222222
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666666
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9333333333333335
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9222222222222222
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9133333333333332
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9155555555555556
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444443
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9222222222222222
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8488888888888889
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9044444444444443
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 3, 1, 2, 3, 3, 3, 2, 3, 3, 3, 1, 2, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 1, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.3500000015111565] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3500000015111565, 0.17229703002151114] ***
*** starting iteration: 2; err: [Inf, 0.3500000015111565, 0.17229703002151114] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3500000015111565, 0.17229703002151114, 0.16114790698175255] ***
*** starting iteration: 3; err: [Inf, 0.3500000015111565, 0.17229703002151114, 0.16114790698175255] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3500000015111565, 0.17229703002151114, 0.16114790698175255, 0.1598574876249081] ***
*** starting iteration: 4; err: [Inf, 0.3500000015111565, 0.17229703002151114, 0.16114790698175255, 0.1598574876249081] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3500000015111565, 0.17229703002151114, 0.16114790698175255, 0.1598574876249081, 0.15836132003079448] ***
*** starting iteration: 5; err: [Inf, 0.3500000015111565, 0.17229703002151114, 0.16114790698175255, 0.1598574876249081, 0.15836132003079448] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3500000015111565, 0.17229703002151114, 0.16114790698175255, 0.1598574876249081, 0.15836132003079448, 0.15804166051706978] ***
*** finished computation of 12 references, err: [Inf, 0.3500000015111565, 0.17229703002151114, 0.16114790698175255, 0.1598574876249081, 0.15836132003079448, 0.15804166051706978] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 6]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 9, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 11, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 14 centroids; started with 12
acc = 0.96
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 7.927691833688009] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.927691833688009, 1.2647733865113069] ***
*** starting iteration: 2; err: [Inf, 7.927691833688009, 1.2647733865113069] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.927691833688009, 1.2647733865113069, 0.6483633252128453] ***
*** starting iteration: 3; err: [Inf, 7.927691833688009, 1.2647733865113069, 0.6483633252128453] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.927691833688009, 1.2647733865113069, 0.6483633252128453, 0.6400739941212008] ***
*** finished computation of 3 references, err: [Inf, 7.927691833688009, 1.2647733865113069, 0.6483633252128453, 0.6400739941212008] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 31]]
** centroid: 2, normalized-entropy: 0.9984628557283827, [(2, 34), (3, 31)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [20, 1, 0]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(1, 20), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.173136149771997] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.173136149771997, 1.12715458570712] ***
*** starting iteration: 2; err: [Inf, 8.173136149771997, 1.12715458570712] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.173136149771997, 1.12715458570712, 0.6469713418309506] ***
*** starting iteration: 3; err: [Inf, 8.173136149771997, 1.12715458570712, 0.6469713418309506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.173136149771997, 1.12715458570712, 0.6469713418309506, 0.6403883024853526] ***
*** finished computation of 3 references, err: [Inf, 8.173136149771997, 1.12715458570712, 0.6469713418309506, 0.6403883024853526] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 33]]
** centroid: 2, normalized-entropy: 0.9998292601233937, [(2, 32), (3, 33)]
*** center 3: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7550623013007665] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7550623013007665, 0.4135987875321725] ***
*** starting iteration: 2; err: [Inf, 0.7550623013007665, 0.4135987875321725] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7550623013007665, 0.4135987875321725, 0.38265783683767146] ***
*** starting iteration: 3; err: [Inf, 0.7550623013007665, 0.4135987875321725, 0.38265783683767146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7550623013007665, 0.4135987875321725, 0.38265783683767146, 0.3777401698919475] ***
*** finished computation of 3 references, err: [Inf, 0.7550623013007665, 0.4135987875321725, 0.38265783683767146, 0.3777401698919475] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 1, 0]]
** centroid: 1, normalized-entropy: 0.2006223243127146, [(1, 31), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 16]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 32), (3, 16)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3498184340517416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3498184340517416, 0.2173958940899884] ***
*** starting iteration: 2; err: [Inf, 0.3498184340517416, 0.2173958940899884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3498184340517416, 0.2173958940899884, 0.19899260399913118] ***
*** starting iteration: 3; err: [Inf, 0.3498184340517416, 0.2173958940899884, 0.19899260399913118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3498184340517416, 0.2173958940899884, 0.19899260399913118, 0.19166083038509613] ***
*** starting iteration: 4; err: [Inf, 0.3498184340517416, 0.2173958940899884, 0.19899260399913118, 0.19166083038509613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3498184340517416, 0.2173958940899884, 0.19899260399913118, 0.19166083038509613, 0.1897056024810549] ***
*** starting iteration: 5; err: [Inf, 0.3498184340517416, 0.2173958940899884, 0.19899260399913118, 0.19166083038509613, 0.1897056024810549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3498184340517416, 0.2173958940899884, 0.19899260399913118, 0.19166083038509613, 0.1897056024810549, 0.1873955646282764] ***
*** starting iteration: 6; err: [Inf, 0.3498184340517416, 0.2173958940899884, 0.19899260399913118, 0.19166083038509613, 0.1897056024810549, 0.1873955646282764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3498184340517416, 0.2173958940899884, 0.19899260399913118, 0.19166083038509613, 0.1897056024810549, 0.1873955646282764, 0.18714272788618744] ***
*** finished computation of 7 references, err: [Inf, 0.3498184340517416, 0.2173958940899884, 0.19899260399913118, 0.19166083038509613, 0.1897056024810549, 0.1873955646282764, 0.18714272788618744] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 7, 7]]
** centroid: 5, normalized-entropy: 1.0, [(2, 7), (3, 7)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7604223258056642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7604223258056642, 0.42445770164081364] ***
*** starting iteration: 2; err: [Inf, 0.7604223258056642, 0.42445770164081364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846] ***
*** starting iteration: 3; err: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846, 0.31927569218741036] ***
*** starting iteration: 4; err: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846, 0.31927569218741036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846, 0.31927569218741036, 0.31528274430010367] ***
*** starting iteration: 5; err: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846, 0.31927569218741036, 0.31528274430010367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846, 0.31927569218741036, 0.31528274430010367, 0.31134210146466607] ***
*** starting iteration: 6; err: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846, 0.31927569218741036, 0.31528274430010367, 0.31134210146466607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846, 0.31927569218741036, 0.31528274430010367, 0.31134210146466607, 0.30526258537739226] ***
*** starting iteration: 7; err: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846, 0.31927569218741036, 0.31528274430010367, 0.31134210146466607, 0.30526258537739226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846, 0.31927569218741036, 0.31528274430010367, 0.31134210146466607, 0.30526258537739226, 0.3026580857344143] ***
*** starting iteration: 8; err: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846, 0.31927569218741036, 0.31528274430010367, 0.31134210146466607, 0.30526258537739226, 0.3026580857344143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846, 0.31927569218741036, 0.31528274430010367, 0.31134210146466607, 0.30526258537739226, 0.3026580857344143, 0.3008893891118507] ***
*** starting iteration: 9; err: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846, 0.31927569218741036, 0.31528274430010367, 0.31134210146466607, 0.30526258537739226, 0.3026580857344143, 0.3008893891118507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846, 0.31927569218741036, 0.31528274430010367, 0.31134210146466607, 0.30526258537739226, 0.3026580857344143, 0.3008893891118507, 0.3005592137240728] ***
*** finished computation of 7 references, err: [Inf, 0.7604223258056642, 0.42445770164081364, 0.33657109830558846, 0.31927569218741036, 0.31528274430010367, 0.31134210146466607, 0.30526258537739226, 0.3026580857344143, 0.3008893891118507, 0.3005592137240728] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 25]]
** centroid: 1, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 29, 8]]
** centroid: 6, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3179794712583936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3179794712583936, 0.220736192454644] ***
*** starting iteration: 2; err: [Inf, 0.3179794712583936, 0.220736192454644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3179794712583936, 0.220736192454644, 0.21749793949465088] ***
*** starting iteration: 3; err: [Inf, 0.3179794712583936, 0.220736192454644, 0.21749793949465088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3179794712583936, 0.220736192454644, 0.21749793949465088, 0.21749793949465088] ***
*** finished computation of 7 references, err: [Inf, 0.3179794712583936, 0.220736192454644, 0.21749793949465088, 0.21749793949465088] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 20]]
** centroid: 3, normalized-entropy: 0.9383153522334071, [(2, 11), (3, 20)]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5254640519420909] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5254640519420909, 0.21985015457919002] ***
*** finished computation of 7 references, err: [Inf, 0.5254640519420909, 0.21985015457919002] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 3]]
** centroid: 1, normalized-entropy: 0.6722948170756378, [(2, 14), (3, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 14]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(2, 1), (3, 14)]
*** center 7: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.536402543969583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.536402543969583, 0.27812058729628464] ***
*** finished computation of 7 references, err: [Inf, 0.536402543969583, 0.27812058729628464] ***
*** center 1: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 26]]
** centroid: 2, normalized-entropy: 0.5665095065529052, [(2, 4), (3, 26)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 23, 7]]
** centroid: 4, normalized-entropy: 0.7837769474847011, [(2, 23), (3, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 7.91783127194833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 7.91783127194833, 0.6758556115243993] ***
*** finished computation of 7 references, err: [Inf, 7.91783127194833, 0.6758556115243993] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 33]]
** centroid: 1, normalized-entropy: 0.8589810370425965, [(2, 13), (3, 33)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 19, 3]]
** centroid: 3, normalized-entropy: 0.5746356978376794, [(2, 19), (3, 3)]
*** center 4: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4425000007069778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4425000007069778, 0.29440227821512355] ***
*** finished computation of 7 references, err: [Inf, 0.4425000007069778, 0.29440227821512355] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 4, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.073200004419786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.073200004419786, 0.42543655077838677] ***
*** finished computation of 7 references, err: [Inf, 1.073200004419786, 0.42543655077838677] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 11, 5]]
** centroid: 2, normalized-entropy: 0.8960382325345574, [(2, 11), (3, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 18, 3]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 18), (3, 3)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6726999958238727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6726999958238727, 0.4131793506081638] ***
*** finished computation of 7 references, err: [Inf, 0.6726999958238727, 0.4131793506081638] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 2]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 16]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3042557294368056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3042557294368056, 0.19223006174538085] ***
*** starting iteration: 2; err: [Inf, 0.3042557294368056, 0.19223006174538085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3042557294368056, 0.19223006174538085, 0.16953374992665837] ***
*** starting iteration: 3; err: [Inf, 0.3042557294368056, 0.19223006174538085, 0.16953374992665837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3042557294368056, 0.19223006174538085, 0.16953374992665837, 0.1603956476919813] ***
*** finished computation of 7 references, err: [Inf, 0.3042557294368056, 0.19223006174538085, 0.16953374992665837, 0.1603956476919813] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 5, 7]]
** centroid: 7, normalized-entropy: 0.9798687566511527, [(2, 5), (3, 7)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.571695874701116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.571695874701116, 0.39187678373033163] ***
*** starting iteration: 2; err: [Inf, 2.571695874701116, 0.39187678373033163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.571695874701116, 0.39187678373033163, 0.21826862934111968] ***
*** starting iteration: 3; err: [Inf, 2.571695874701116, 0.39187678373033163, 0.21826862934111968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.571695874701116, 0.39187678373033163, 0.21826862934111968, 0.19687764193764315] ***
*** finished computation of 7 references, err: [Inf, 2.571695874701116, 0.39187678373033163, 0.21826862934111968, 0.19687764193764315] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 8, 7]]
** centroid: 5, normalized-entropy: 0.9967916319816367, [(2, 8), (3, 7)]
*** center 6: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.07513726273941] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.07513726273941, 0.593394060185843] ***
*** starting iteration: 2; err: [Inf, 3.07513726273941, 0.593394060185843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.07513726273941, 0.593394060185843, 0.25412948515799605] ***
*** starting iteration: 3; err: [Inf, 3.07513726273941, 0.593394060185843, 0.25412948515799605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.07513726273941, 0.593394060185843, 0.25412948515799605, 0.2209642751712495] ***
*** finished computation of 7 references, err: [Inf, 3.07513726273941, 0.593394060185843, 0.25412948515799605, 0.2209642751712495] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 10]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 6, 10]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(2, 6), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.620255794059887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.620255794059887, 0.1961925760476864] ***
*** finished computation of 7 references, err: [Inf, 0.620255794059887, 0.1961925760476864] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 15]]
** centroid: 6, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5743083058811124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5743083058811124, 0.26555807891927236] ***
*** finished computation of 7 references, err: [Inf, 0.5743083058811124, 0.26555807891927236] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 8]]
** centroid: 4, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.7924974818752961] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7924974818752961, 0.5884543356903366] ***
*** finished computation of 7 references, err: [Inf, 1.7924974818752961, 0.5884543356903366] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 28, 36]]
** centroid: 4, normalized-entropy: 0.9886994082884974, [(2, 28), (3, 36)]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9268000087837318] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9268000087837318, 0.5293020988727131] ***
*** finished computation of 3 references, err: [Inf, 0.9268000087837318, 0.5293020988727131] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 23]]
** centroid: 1, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0525000002330227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0525000002330227, 0.5171279915073143] ***
*** finished computation of 3 references, err: [Inf, 1.0525000002330227, 0.5171279915073143] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8334000002071457] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8334000002071457, 0.5760520083391887] ***
*** finished computation of 3 references, err: [Inf, 0.8334000002071457, 0.5760520083391887] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 1, 0]]
** centroid: 1, normalized-entropy: 0.2006223243127146, [(1, 31), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 19]]
** centroid: 3, normalized-entropy: 0.9526092095121206, [(2, 32), (3, 19)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4462999978694137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4462999978694137, 0.2867291649190982] ***
*** finished computation of 7 references, err: [Inf, 0.4462999978694137, 0.2867291649190982] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 16, 10]]
** centroid: 3, normalized-entropy: 0.961236604722876, [(2, 16), (3, 10)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4181000015513577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4181000015513577, 0.28041976536232405] ***
*** finished computation of 7 references, err: [Inf, 0.4181000015513577, 0.28041976536232405] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 8]]
** centroid: 1, normalized-entropy: 0.9975025463691153, [(2, 9), (3, 8)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45740000400635156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45740000400635156, 0.2859533950004539] ***
*** finished computation of 7 references, err: [Inf, 0.45740000400635156, 0.2859533950004539] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 4, 12]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 4), (3, 12)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.783164344937123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.783164344937123, 0.21385447430574225] ***
*** starting iteration: 2; err: [Inf, 0.783164344937123, 0.21385447430574225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.783164344937123, 0.21385447430574225, 0.1983400866707267] ***
*** starting iteration: 3; err: [Inf, 0.783164344937123, 0.21385447430574225, 0.1983400866707267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.783164344937123, 0.21385447430574225, 0.1983400866707267, 0.19742102040408718] ***
*** finished computation of 7 references, err: [Inf, 0.783164344937123, 0.21385447430574225, 0.1983400866707267, 0.19742102040408718] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 17]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(2, 1), (3, 17)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3236555604812335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3236555604812335, 0.24473590957073812] ***
*** starting iteration: 2; err: [Inf, 0.3236555604812335, 0.24473590957073812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3236555604812335, 0.24473590957073812, 0.2249144379376781] ***
*** starting iteration: 3; err: [Inf, 0.3236555604812335, 0.24473590957073812, 0.2249144379376781] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3236555604812335, 0.24473590957073812, 0.2249144379376781, 0.21850468723232186] ***
*** finished computation of 7 references, err: [Inf, 0.3236555604812335, 0.24473590957073812, 0.2249144379376781, 0.21850468723232186] ***
*** center 1: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 10, 22]]
** centroid: 6, normalized-entropy: 0.8960382325345574, [(2, 10), (3, 22)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 7, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28634450269804906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28634450269804906, 0.16593037913465597] ***
*** starting iteration: 2; err: [Inf, 0.28634450269804906, 0.16593037913465597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28634450269804906, 0.16593037913465597, 0.1588552082667805] ***
*** starting iteration: 3; err: [Inf, 0.28634450269804906, 0.16593037913465597, 0.1588552082667805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28634450269804906, 0.16593037913465597, 0.1588552082667805, 0.15815182888887278] ***
*** finished computation of 7 references, err: [Inf, 0.28634450269804906, 0.16593037913465597, 0.1588552082667805, 0.15815182888887278] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 6, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0483660943342086] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0483660943342086, 0.6428234635255669] ***
*** starting iteration: 2; err: [Inf, 1.0483660943342086, 0.6428234635255669] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0483660943342086, 0.6428234635255669, 0.6388083369406836] ***
*** starting iteration: 3; err: [Inf, 1.0483660943342086, 0.6428234635255669, 0.6388083369406836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0483660943342086, 0.6428234635255669, 0.6388083369406836, 0.6386606309132759] ***
*** finished computation of 3 references, err: [Inf, 1.0483660943342086, 0.6428234635255669, 0.6388083369406836, 0.6386606309132759] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 31]]
** centroid: 1, normalized-entropy: 0.9984628557283827, [(2, 34), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [24, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6396236232529742] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6396236232529742, 0.36320718043961375] ***
*** starting iteration: 2; err: [Inf, 0.6396236232529742, 0.36320718043961375] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6396236232529742, 0.36320718043961375, 0.3607539642390961] ***
*** starting iteration: 3; err: [Inf, 0.6396236232529742, 0.36320718043961375, 0.3607539642390961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6396236232529742, 0.36320718043961375, 0.3607539642390961, 0.36002305450710276] ***
*** finished computation of 3 references, err: [Inf, 0.6396236232529742, 0.36320718043961375, 0.3607539642390961, 0.36002305450710276] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 8]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.3217738970975255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.3217738970975255, 1.6045217209578602] ***
*** starting iteration: 2; err: [Inf, 4.3217738970975255, 1.6045217209578602] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.3217738970975255, 1.6045217209578602, 0.48699453832022] ***
*** starting iteration: 3; err: [Inf, 4.3217738970975255, 1.6045217209578602, 0.48699453832022] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.3217738970975255, 1.6045217209578602, 0.48699453832022, 0.37123111480549725] ***
*** finished computation of 3 references, err: [Inf, 4.3217738970975255, 1.6045217209578602, 0.48699453832022, 0.37123111480549725] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 13]]
** centroid: 3, normalized-entropy: 0.8672816222000259, [(2, 32), (3, 13)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6198457311758632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6198457311758632, 0.1975760665960456] ***
*** starting iteration: 2; err: [Inf, 0.6198457311758632, 0.1975760665960456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6198457311758632, 0.1975760665960456, 0.19323097552331508] ***
*** starting iteration: 3; err: [Inf, 0.6198457311758632, 0.1975760665960456, 0.19323097552331508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6198457311758632, 0.1975760665960456, 0.19323097552331508, 0.19323097552331508] ***
*** finished computation of 7 references, err: [Inf, 0.6198457311758632, 0.1975760665960456, 0.19323097552331508, 0.19323097552331508] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 8, 2]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 15, 5]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 6: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45096435969786486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45096435969786486, 0.2248501653012319] ***
*** starting iteration: 2; err: [Inf, 0.45096435969786486, 0.2248501653012319] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45096435969786486, 0.2248501653012319, 0.1846116932260157] ***
*** starting iteration: 3; err: [Inf, 0.45096435969786486, 0.2248501653012319, 0.1846116932260157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45096435969786486, 0.2248501653012319, 0.1846116932260157, 0.17123682076062832] ***
*** starting iteration: 4; err: [Inf, 0.45096435969786486, 0.2248501653012319, 0.1846116932260157, 0.17123682076062832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45096435969786486, 0.2248501653012319, 0.1846116932260157, 0.17123682076062832, 0.16880929589170168] ***
*** starting iteration: 5; err: [Inf, 0.45096435969786486, 0.2248501653012319, 0.1846116932260157, 0.17123682076062832, 0.16880929589170168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45096435969786486, 0.2248501653012319, 0.1846116932260157, 0.17123682076062832, 0.16880929589170168, 0.16792767634792122] ***
*** finished computation of 7 references, err: [Inf, 0.45096435969786486, 0.2248501653012319, 0.1846116932260157, 0.17123682076062832, 0.16880929589170168, 0.16792767634792122] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 7]]
** centroid: 3, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6618336672394852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6618336672394852, 0.27360914134282044] ***
*** starting iteration: 2; err: [Inf, 0.6618336672394852, 0.27360914134282044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6618336672394852, 0.27360914134282044, 0.2241111108258372] ***
*** starting iteration: 3; err: [Inf, 0.6618336672394852, 0.27360914134282044, 0.2241111108258372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6618336672394852, 0.27360914134282044, 0.2241111108258372, 0.20640985586121322] ***
*** starting iteration: 4; err: [Inf, 0.6618336672394852, 0.27360914134282044, 0.2241111108258372, 0.20640985586121322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6618336672394852, 0.27360914134282044, 0.2241111108258372, 0.20640985586121322, 0.2040488265509384] ***
*** starting iteration: 5; err: [Inf, 0.6618336672394852, 0.27360914134282044, 0.2241111108258372, 0.20640985586121322, 0.2040488265509384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6618336672394852, 0.27360914134282044, 0.2241111108258372, 0.20640985586121322, 0.2040488265509384, 0.2040488265509384] ***
*** finished computation of 7 references, err: [Inf, 0.6618336672394852, 0.27360914134282044, 0.2241111108258372, 0.20640985586121322, 0.2040488265509384, 0.2040488265509384] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 11, 20]]
** centroid: 3, normalized-entropy: 0.9383153522334071, [(2, 11), (3, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7937999970448434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7937999970448434, 0.36532353674411133] ***
*** starting iteration: 2; err: [Inf, 0.7937999970448434, 0.36532353674411133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7937999970448434, 0.36532353674411133, 0.3026930889386748] ***
*** starting iteration: 3; err: [Inf, 0.7937999970448434, 0.36532353674411133, 0.3026930889386748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7937999970448434, 0.36532353674411133, 0.3026930889386748, 0.2838754482936367] ***
*** finished computation of 7 references, err: [Inf, 0.7937999970448434, 0.36532353674411133, 0.3026930889386748, 0.2838754482936367] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 5]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(2, 4), (3, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 5]]
** centroid: 4, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5108000010158789] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5108000010158789, 0.29391776630550426] ***
*** starting iteration: 2; err: [Inf, 0.5108000010158789, 0.29391776630550426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5108000010158789, 0.29391776630550426, 0.2778074293513647] ***
*** starting iteration: 3; err: [Inf, 0.5108000010158789, 0.29391776630550426, 0.2778074293513647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5108000010158789, 0.29391776630550426, 0.2778074293513647, 0.275744175782911] ***
*** finished computation of 7 references, err: [Inf, 0.5108000010158789, 0.29391776630550426, 0.2778074293513647, 0.275744175782911] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 15, 7]]
** centroid: 5, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.334599993297549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.334599993297549, 0.47938992955471044] ***
*** starting iteration: 2; err: [Inf, 1.334599993297549, 0.47938992955471044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.334599993297549, 0.47938992955471044, 0.47213830810341995] ***
*** starting iteration: 3; err: [Inf, 1.334599993297549, 0.47938992955471044, 0.47213830810341995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.334599993297549, 0.47938992955471044, 0.47213830810341995, 0.4692785095727953] ***
*** finished computation of 7 references, err: [Inf, 1.334599993297549, 0.47938992955471044, 0.47213830810341995, 0.4692785095727953] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 13]]
** centroid: 1, normalized-entropy: 0.8672816222000259, [(2, 32), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.65088680631426] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.65088680631426, 0.3982564599853552] ***
*** starting iteration: 2; err: [Inf, 0.65088680631426, 0.3982564599853552] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.65088680631426, 0.3982564599853552, 0.3747810695968046] ***
*** starting iteration: 3; err: [Inf, 0.65088680631426, 0.3982564599853552, 0.3747810695968046] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.65088680631426, 0.3982564599853552, 0.3747810695968046, 0.3687990877381256] ***
*** finished computation of 3 references, err: [Inf, 0.65088680631426, 0.3982564599853552, 0.3747810695968046, 0.3687990877381256] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 7]]
** centroid: 3, normalized-entropy: 0.6789538995185759, [(2, 32), (3, 7)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.833629611633701] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.833629611633701, 0.39905959026171856] ***
*** starting iteration: 2; err: [Inf, 0.833629611633701, 0.39905959026171856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.833629611633701, 0.39905959026171856, 0.36320718043961375] ***
*** starting iteration: 3; err: [Inf, 0.833629611633701, 0.39905959026171856, 0.36320718043961375] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.833629611633701, 0.39905959026171856, 0.36320718043961375, 0.3607539642390961] ***
*** finished computation of 3 references, err: [Inf, 0.833629611633701, 0.39905959026171856, 0.36320718043961375, 0.3607539642390961] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 8]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7802272349574961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7802272349574961, 0.38411642555006753] ***
*** starting iteration: 2; err: [Inf, 0.7802272349574961, 0.38411642555006753] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7802272349574961, 0.38411642555006753, 0.37272061301882714] ***
*** starting iteration: 3; err: [Inf, 0.7802272349574961, 0.38411642555006753, 0.37272061301882714] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7802272349574961, 0.38411642555006753, 0.37272061301882714, 0.3700288647421246] ***
*** finished computation of 3 references, err: [Inf, 0.7802272349574961, 0.38411642555006753, 0.37272061301882714, 0.3700288647421246] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 12]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 32), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.47550000853775587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47550000853775587, 0.26472093078572745] ***
*** starting iteration: 2; err: [Inf, 0.47550000853775587, 0.26472093078572745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47550000853775587, 0.26472093078572745, 0.2526875389258286] ***
*** starting iteration: 3; err: [Inf, 0.47550000853775587, 0.26472093078572745, 0.2526875389258286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47550000853775587, 0.26472093078572745, 0.2526875389258286, 0.25001637059371357] ***
*** finished computation of 7 references, err: [Inf, 0.47550000853775587, 0.26472093078572745, 0.2526875389258286, 0.25001637059371357] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 23]]
** centroid: 1, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5559000038922179] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5559000038922179, 0.30737577455357273] ***
*** starting iteration: 2; err: [Inf, 0.5559000038922179, 0.30737577455357273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5559000038922179, 0.30737577455357273, 0.29880851254561913] ***
*** starting iteration: 3; err: [Inf, 0.5559000038922179, 0.30737577455357273, 0.29880851254561913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5559000038922179, 0.30737577455357273, 0.29880851254561913, 0.29562146271152245] ***
*** finished computation of 7 references, err: [Inf, 0.5559000038922179, 0.30737577455357273, 0.29880851254561913, 0.29562146271152245] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 6, 15]]
** centroid: 5, normalized-entropy: 0.8631205685666311, [(2, 6), (3, 15)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5950000011481578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5950000011481578, 0.2545219365953208] ***
*** starting iteration: 2; err: [Inf, 0.5950000011481578, 0.2545219365953208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5950000011481578, 0.2545219365953208, 0.24565600766031387] ***
*** starting iteration: 3; err: [Inf, 0.5950000011481578, 0.2545219365953208, 0.24565600766031387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5950000011481578, 0.2545219365953208, 0.24565600766031387, 0.24565600766031387] ***
*** finished computation of 7 references, err: [Inf, 0.5950000011481578, 0.2545219365953208, 0.24565600766031387, 0.24565600766031387] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 11]]
** centroid: 1, normalized-entropy: 0.9575534837147484, [(2, 18), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46980000102593594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46980000102593594, 0.24109750234491006] ***
*** starting iteration: 2; err: [Inf, 0.46980000102593594, 0.24109750234491006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46980000102593594, 0.24109750234491006, 0.22848545424029812] ***
*** starting iteration: 3; err: [Inf, 0.46980000102593594, 0.24109750234491006, 0.22848545424029812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46980000102593594, 0.24109750234491006, 0.22848545424029812, 0.22600241050842282] ***
*** finished computation of 7 references, err: [Inf, 0.46980000102593594, 0.24109750234491006, 0.22848545424029812, 0.22600241050842282] ***
*** center 1: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 13, 3]]
** centroid: 3, normalized-entropy: 0.6962122601251459, [(2, 13), (3, 3)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 10, 4]]
** centroid: 7, normalized-entropy: 0.8631205685666311, [(2, 10), (3, 4)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6835000102440794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6835000102440794, 0.2723188508719747] ***
*** starting iteration: 2; err: [Inf, 0.6835000102440794, 0.2723188508719747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6835000102440794, 0.2723188508719747, 0.25161929754107165] ***
*** starting iteration: 3; err: [Inf, 0.6835000102440794, 0.2723188508719747, 0.25161929754107165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6835000102440794, 0.2723188508719747, 0.25161929754107165, 0.24595426847462573] ***
*** finished computation of 7 references, err: [Inf, 0.6835000102440794, 0.2723188508719747, 0.25161929754107165, 0.24595426847462573] ***
*** center 1: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 4, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 7]]
** centroid: 4, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5002000081692488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5002000081692488, 0.2600970510251452] ***
*** starting iteration: 2; err: [Inf, 0.5002000081692488, 0.2600970510251452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5002000081692488, 0.2600970510251452, 0.2567378688802441] ***
*** starting iteration: 3; err: [Inf, 0.5002000081692488, 0.2600970510251452, 0.2567378688802441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5002000081692488, 0.2600970510251452, 0.2567378688802441, 0.2552345229455625] ***
*** finished computation of 7 references, err: [Inf, 0.5002000081692488, 0.2600970510251452, 0.2567378688802441, 0.2552345229455625] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 8]]
** centroid: 6, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4148850915012321] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4148850915012321, 0.17940988688889] ***
*** starting iteration: 2; err: [Inf, 0.4148850915012321, 0.17940988688889] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4148850915012321, 0.17940988688889, 0.16782801549829243] ***
*** starting iteration: 3; err: [Inf, 0.4148850915012321, 0.17940988688889, 0.16782801549829243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4148850915012321, 0.17940988688889, 0.16782801549829243, 0.1656087833366649] ***
*** finished computation of 7 references, err: [Inf, 0.4148850915012321, 0.17940988688889, 0.16782801549829243, 0.1656087833366649] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 7]]
** centroid: 1, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40099194620551487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40099194620551487, 0.22225657408665017] ***
*** starting iteration: 2; err: [Inf, 0.40099194620551487, 0.22225657408665017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40099194620551487, 0.22225657408665017, 0.21566839486735728] ***
*** starting iteration: 3; err: [Inf, 0.40099194620551487, 0.22225657408665017, 0.21566839486735728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40099194620551487, 0.22225657408665017, 0.21566839486735728, 0.21108644025567874] ***
*** finished computation of 7 references, err: [Inf, 0.40099194620551487, 0.22225657408665017, 0.21566839486735728, 0.21108644025567874] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 20]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 4), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 23, 7]]
** centroid: 6, normalized-entropy: 0.7837769474847011, [(2, 23), (3, 7)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4163825644942324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4163825644942324, 0.19784770051552172] ***
*** starting iteration: 2; err: [Inf, 0.4163825644942324, 0.19784770051552172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4163825644942324, 0.19784770051552172, 0.1888239795967541] ***
*** starting iteration: 3; err: [Inf, 0.4163825644942324, 0.19784770051552172, 0.1888239795967541] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4163825644942324, 0.19784770051552172, 0.1888239795967541, 0.18780408818386493] ***
*** finished computation of 7 references, err: [Inf, 0.4163825644942324, 0.19784770051552172, 0.1888239795967541, 0.18780408818386493] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 11]]
** centroid: 4, normalized-entropy: 0.9949848281859699, [(2, 13), (3, 11)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666667, 0.9199999999999999, 0.9066666666666666, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 2) => 0.9733333333333333
finished with 18
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.648942087585598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.648942087585598, 0.3982564599853552] ***
*** finished computation of 3 references, err: [Inf, 0.648942087585598, 0.3982564599853552] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 10]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1986199156106998] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1986199156106998, 0.37466787186343153] ***
*** finished computation of 3 references, err: [Inf, 1.1986199156106998, 0.37466787186343153] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6750635967519854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6750635967519854, 0.42509997861089793] ***
*** finished computation of 3 references, err: [Inf, 0.6750635967519854, 0.42509997861089793] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 23]]
** centroid: 1, normalized-entropy: 0.980597440991727, [(2, 32), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1061000035541635] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1061000035541635, 0.5574200761076024] ***
*** finished computation of 3 references, err: [Inf, 1.1061000035541635, 0.5574200761076024] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 31]]
** centroid: 1, normalized-entropy: 0.8756633923230399, [(2, 13), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6032000004233737] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6032000004233737, 0.5260203406405843] ***
*** finished computation of 3 references, err: [Inf, 1.6032000004233737, 0.5260203406405843] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5021999914142912] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5021999914142912, 0.5369593057908895] ***
*** finished computation of 3 references, err: [Inf, 1.5021999914142912, 0.5369593057908895] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 15]]
** centroid: 3, normalized-entropy: 0.8960382325345574, [(2, 33), (3, 15)]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666667, 0.9199999999999999, 0.9066666666666666, 0.9, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 2) => 0.9733333333333333
finished with 19
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.5851999987098684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5851999987098684, 0.2783813561570327] ***
*** starting iteration: 2; err: [Inf, 0.5851999987098684, 0.2783813561570327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224] ***
*** starting iteration: 3; err: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224, 0.25298779193051685] ***
*** starting iteration: 4; err: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224, 0.25298779193051685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224, 0.25298779193051685, 0.2498981508203502] ***
*** starting iteration: 5; err: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224, 0.25298779193051685, 0.2498981508203502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224, 0.25298779193051685, 0.2498981508203502, 0.2456508559592504] ***
*** starting iteration: 6; err: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224, 0.25298779193051685, 0.2498981508203502, 0.2456508559592504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224, 0.25298779193051685, 0.2498981508203502, 0.2456508559592504, 0.24111713982601235] ***
*** starting iteration: 7; err: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224, 0.25298779193051685, 0.2498981508203502, 0.2456508559592504, 0.24111713982601235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224, 0.25298779193051685, 0.2498981508203502, 0.2456508559592504, 0.24111713982601235, 0.23988462961712909] ***
*** starting iteration: 8; err: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224, 0.25298779193051685, 0.2498981508203502, 0.2456508559592504, 0.24111713982601235, 0.23988462961712909] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224, 0.25298779193051685, 0.2498981508203502, 0.2456508559592504, 0.24111713982601235, 0.23988462961712909, 0.23844201480234875] ***
*** starting iteration: 9; err: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224, 0.25298779193051685, 0.2498981508203502, 0.2456508559592504, 0.24111713982601235, 0.23988462961712909, 0.23844201480234875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224, 0.25298779193051685, 0.2498981508203502, 0.2456508559592504, 0.24111713982601235, 0.23988462961712909, 0.23844201480234875, 0.23757235635220905] ***
*** finished computation of 7 references, err: [Inf, 0.5851999987098684, 0.2783813561570327, 0.25740106710191224, 0.25298779193051685, 0.2498981508203502, 0.2456508559592504, 0.24111713982601235, 0.23988462961712909, 0.23844201480234875, 0.23757235635220905] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 17]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0982000063087485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0982000063087485, 0.46971035286213547] ***
*** starting iteration: 2; err: [Inf, 1.0982000063087485, 0.46971035286213547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455] ***
*** starting iteration: 3; err: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455, 0.3900422358078513] ***
*** starting iteration: 4; err: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455, 0.3900422358078513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455, 0.3900422358078513, 0.3616277178071148] ***
*** starting iteration: 5; err: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455, 0.3900422358078513, 0.3616277178071148] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455, 0.3900422358078513, 0.3616277178071148, 0.3374399703973537] ***
*** starting iteration: 6; err: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455, 0.3900422358078513, 0.3616277178071148, 0.3374399703973537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455, 0.3900422358078513, 0.3616277178071148, 0.3374399703973537, 0.31219543398657845] ***
*** starting iteration: 7; err: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455, 0.3900422358078513, 0.3616277178071148, 0.3374399703973537, 0.31219543398657845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455, 0.3900422358078513, 0.3616277178071148, 0.3374399703973537, 0.31219543398657845, 0.2921905609719498] ***
*** starting iteration: 8; err: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455, 0.3900422358078513, 0.3616277178071148, 0.3374399703973537, 0.31219543398657845, 0.2921905609719498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455, 0.3900422358078513, 0.3616277178071148, 0.3374399703973537, 0.31219543398657845, 0.2921905609719498, 0.2824268547287527] ***
*** starting iteration: 9; err: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455, 0.3900422358078513, 0.3616277178071148, 0.3374399703973537, 0.31219543398657845, 0.2921905609719498, 0.2824268547287527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455, 0.3900422358078513, 0.3616277178071148, 0.3374399703973537, 0.31219543398657845, 0.2921905609719498, 0.2824268547287527, 0.28199177341468185] ***
*** finished computation of 7 references, err: [Inf, 1.0982000063087485, 0.46971035286213547, 0.4293783919828455, 0.3900422358078513, 0.3616277178071148, 0.3374399703973537, 0.31219543398657845, 0.2921905609719498, 0.2824268547287527, 0.28199177341468185] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 8]]
** centroid: 4, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8949000045609785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8949000045609785, 0.5167457347085752] ***
*** starting iteration: 2; err: [Inf, 0.8949000045609785, 0.5167457347085752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8949000045609785, 0.5167457347085752, 0.4088609787235304] ***
*** starting iteration: 3; err: [Inf, 0.8949000045609785, 0.5167457347085752, 0.4088609787235304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8949000045609785, 0.5167457347085752, 0.4088609787235304, 0.3455427722204629] ***
*** starting iteration: 4; err: [Inf, 0.8949000045609785, 0.5167457347085752, 0.4088609787235304, 0.3455427722204629] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8949000045609785, 0.5167457347085752, 0.4088609787235304, 0.3455427722204629, 0.32568700865844874] ***
*** starting iteration: 5; err: [Inf, 0.8949000045609785, 0.5167457347085752, 0.4088609787235304, 0.3455427722204629, 0.32568700865844874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8949000045609785, 0.5167457347085752, 0.4088609787235304, 0.3455427722204629, 0.32568700865844874, 0.32305402689736945] ***
*** starting iteration: 6; err: [Inf, 0.8949000045609785, 0.5167457347085752, 0.4088609787235304, 0.3455427722204629, 0.32568700865844874, 0.32305402689736945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8949000045609785, 0.5167457347085752, 0.4088609787235304, 0.3455427722204629, 0.32568700865844874, 0.32305402689736945, 0.3222300894811766] ***
*** finished computation of 7 references, err: [Inf, 0.8949000045609785, 0.5167457347085752, 0.4088609787235304, 0.3455427722204629, 0.32568700865844874, 0.32305402689736945, 0.3222300894811766] ***
*** center 1: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 18]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(2, 15), (3, 18)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666667, 0.9199999999999999, 0.9066666666666666, 0.9, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.98
finished with 19
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666667, 0.9199999999999999, 0.9066666666666666, 0.9, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.98
finished with 20
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.464600009354842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.464600009354842, 0.29743023297474613] ***
*** starting iteration: 2; err: [Inf, 0.464600009354842, 0.29743023297474613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.464600009354842, 0.29743023297474613, 0.262756133383582] ***
*** starting iteration: 3; err: [Inf, 0.464600009354842, 0.29743023297474613, 0.262756133383582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.464600009354842, 0.29743023297474613, 0.262756133383582, 0.25133347902740083] ***
*** finished computation of 7 references, err: [Inf, 0.464600009354842, 0.29743023297474613, 0.262756133383582, 0.25133347902740083] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 4]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 15), (3, 4)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 6]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(2, 1), (3, 6)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.487800005207488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.487800005207488, 0.3075382741993329] ***
*** starting iteration: 2; err: [Inf, 0.487800005207488, 0.3075382741993329] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.487800005207488, 0.3075382741993329, 0.27470206764621363] ***
*** starting iteration: 3; err: [Inf, 0.487800005207488, 0.3075382741993329, 0.27470206764621363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.487800005207488, 0.3075382741993329, 0.27470206764621363, 0.2687462512209058] ***
*** finished computation of 7 references, err: [Inf, 0.487800005207488, 0.3075382741993329, 0.27470206764621363, 0.2687462512209058] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 7]]
** centroid: 5, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 7: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47980000528726857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47980000528726857, 0.2902183548331079] ***
*** starting iteration: 2; err: [Inf, 0.47980000528726857, 0.2902183548331079] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47980000528726857, 0.2902183548331079, 0.2571014649942441] ***
*** starting iteration: 3; err: [Inf, 0.47980000528726857, 0.2902183548331079, 0.2571014649942441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47980000528726857, 0.2902183548331079, 0.2571014649942441, 0.23577141789552875] ***
*** finished computation of 7 references, err: [Inf, 0.47980000528726857, 0.2902183548331079, 0.2571014649942441, 0.23577141789552875] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 2]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(2, 14), (3, 2)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666667, 0.9199999999999999, 0.9066666666666666, 0.9, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.98
finished with 22
iteration 6 finished
*** starting iteration: 1; err: [Inf, 1.572597844070137] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.572597844070137, 0.6467504361350102] ***
*** starting iteration: 2; err: [Inf, 1.572597844070137, 0.6467504361350102] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.572597844070137, 0.6467504361350102, 0.6377196877094251] ***
*** starting iteration: 3; err: [Inf, 1.572597844070137, 0.6467504361350102, 0.6377196877094251] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.572597844070137, 0.6467504361350102, 0.6377196877094251, 0.636192208514708] ***
*** starting iteration: 4; err: [Inf, 1.572597844070137, 0.6467504361350102, 0.6377196877094251, 0.636192208514708] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.572597844070137, 0.6467504361350102, 0.6377196877094251, 0.636192208514708, 0.6355973781841466] ***
*** finished computation of 3 references, err: [Inf, 1.572597844070137, 0.6467504361350102, 0.6377196877094251, 0.636192208514708, 0.6355973781841466] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 31]]
** centroid: 1, normalized-entropy: 0.9998182469603427, [(2, 32), (3, 31)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [22, 3, 0]]
** centroid: 2, normalized-entropy: 0.5293608652873645, [(1, 22), (2, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.564978103908607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.564978103908607, 0.6437854318308172] ***
*** starting iteration: 2; err: [Inf, 2.564978103908607, 0.6437854318308172] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.564978103908607, 0.6437854318308172, 0.6347621618509168] ***
*** starting iteration: 3; err: [Inf, 2.564978103908607, 0.6437854318308172, 0.6347621618509168] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.564978103908607, 0.6437854318308172, 0.6347621618509168, 0.6336512336456827] ***
*** starting iteration: 4; err: [Inf, 2.564978103908607, 0.6437854318308172, 0.6347621618509168, 0.6336512336456827] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.564978103908607, 0.6437854318308172, 0.6347621618509168, 0.6336512336456827, 0.6336512336456827] ***
*** finished computation of 3 references, err: [Inf, 2.564978103908607, 0.6437854318308172, 0.6347621618509168, 0.6336512336456827, 0.6336512336456827] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 33]]
** centroid: 1, normalized-entropy: 0.9998292601233937, [(2, 32), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7733931581326022] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7733931581326022, 0.4047697421329083] ***
*** starting iteration: 2; err: [Inf, 0.7733931581326022, 0.4047697421329083] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7733931581326022, 0.4047697421329083, 0.38265783683767146] ***
*** starting iteration: 3; err: [Inf, 0.7733931581326022, 0.4047697421329083, 0.38265783683767146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7733931581326022, 0.4047697421329083, 0.38265783683767146, 0.3777401698919475] ***
*** starting iteration: 4; err: [Inf, 0.7733931581326022, 0.4047697421329083, 0.38265783683767146, 0.3777401698919475] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7733931581326022, 0.4047697421329083, 0.38265783683767146, 0.3777401698919475, 0.37290409507911265] ***
*** starting iteration: 5; err: [Inf, 0.7733931581326022, 0.4047697421329083, 0.38265783683767146, 0.3777401698919475, 0.37290409507911265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7733931581326022, 0.4047697421329083, 0.38265783683767146, 0.3777401698919475, 0.37290409507911265, 0.36981373911887283] ***
*** starting iteration: 6; err: [Inf, 0.7733931581326022, 0.4047697421329083, 0.38265783683767146, 0.3777401698919475, 0.37290409507911265, 0.36981373911887283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7733931581326022, 0.4047697421329083, 0.38265783683767146, 0.3777401698919475, 0.37290409507911265, 0.36981373911887283, 0.36945697875944883] ***
*** finished computation of 3 references, err: [Inf, 0.7733931581326022, 0.4047697421329083, 0.38265783683767146, 0.3777401698919475, 0.37290409507911265, 0.36981373911887283, 0.36945697875944883] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 13]]
** centroid: 3, normalized-entropy: 0.8589810370425965, [(2, 33), (3, 13)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 12.109200037677468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 12.109200037677468, 1.7714544460535928] ***
*** starting iteration: 2; err: [Inf, 12.109200037677468, 1.7714544460535928] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312] ***
*** starting iteration: 3; err: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129] ***
*** starting iteration: 4; err: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129, 0.5574200761076024] ***
*** starting iteration: 5; err: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129, 0.5574200761076024] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129, 0.5574200761076024, 0.5484561643263346] ***
*** starting iteration: 6; err: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129, 0.5574200761076024, 0.5484561643263346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129, 0.5574200761076024, 0.5484561643263346, 0.540552291023188] ***
*** starting iteration: 7; err: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129, 0.5574200761076024, 0.5484561643263346, 0.540552291023188] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129, 0.5574200761076024, 0.5484561643263346, 0.540552291023188, 0.5370023844190951] ***
*** starting iteration: 8; err: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129, 0.5574200761076024, 0.5484561643263346, 0.540552291023188, 0.5370023844190951] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129, 0.5574200761076024, 0.5484561643263346, 0.540552291023188, 0.5370023844190951, 0.5347941533277466] ***
*** starting iteration: 9; err: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129, 0.5574200761076024, 0.5484561643263346, 0.540552291023188, 0.5370023844190951, 0.5347941533277466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129, 0.5574200761076024, 0.5484561643263346, 0.540552291023188, 0.5370023844190951, 0.5347941533277466, 0.5300242469404798] ***
*** starting iteration: 10; err: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129, 0.5574200761076024, 0.5484561643263346, 0.540552291023188, 0.5370023844190951, 0.5347941533277466, 0.5300242469404798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129, 0.5574200761076024, 0.5484561643263346, 0.540552291023188, 0.5370023844190951, 0.5347941533277466, 0.5300242469404798, 0.5288610724224673] ***
*** finished computation of 3 references, err: [Inf, 12.109200037677468, 1.7714544460535928, 0.7842014892203312, 0.5963654717062129, 0.5574200761076024, 0.5484561643263346, 0.540552291023188, 0.5370023844190951, 0.5347941533277466, 0.5300242469404798, 0.5288610724224673] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 2]]
** centroid: 1, normalized-entropy: 0.32984607020714635, [(2, 31), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 29]]
** centroid: 2, normalized-entropy: 0.5328350630342235, [(2, 4), (3, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2520000004758387] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2520000004758387, 0.5439771578012502] ***
*** starting iteration: 2; err: [Inf, 1.2520000004758387, 0.5439771578012502] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2520000004758387, 0.5439771578012502, 0.5357324344593031] ***
*** starting iteration: 3; err: [Inf, 1.2520000004758387, 0.5439771578012502, 0.5357324344593031] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2520000004758387, 0.5439771578012502, 0.5357324344593031, 0.5269334701678551] ***
*** starting iteration: 4; err: [Inf, 1.2520000004758387, 0.5439771578012502, 0.5357324344593031, 0.5269334701678551] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2520000004758387, 0.5439771578012502, 0.5357324344593031, 0.5269334701678551, 0.5216051963271421] ***
*** starting iteration: 5; err: [Inf, 1.2520000004758387, 0.5439771578012502, 0.5357324344593031, 0.5269334701678551, 0.5216051963271421] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2520000004758387, 0.5439771578012502, 0.5357324344593031, 0.5269334701678551, 0.5216051963271421, 0.5184785717958736] ***
*** starting iteration: 6; err: [Inf, 1.2520000004758387, 0.5439771578012502, 0.5357324344593031, 0.5269334701678551, 0.5216051963271421, 0.5184785717958736] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2520000004758387, 0.5439771578012502, 0.5357324344593031, 0.5269334701678551, 0.5216051963271421, 0.5184785717958736, 0.5149684560214818] ***
*** starting iteration: 7; err: [Inf, 1.2520000004758387, 0.5439771578012502, 0.5357324344593031, 0.5269334701678551, 0.5216051963271421, 0.5184785717958736, 0.5149684560214818] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2520000004758387, 0.5439771578012502, 0.5357324344593031, 0.5269334701678551, 0.5216051963271421, 0.5184785717958736, 0.5149684560214818, 0.5142476463127138] ***
*** finished computation of 3 references, err: [Inf, 1.2520000004758387, 0.5439771578012502, 0.5357324344593031, 0.5269334701678551, 0.5216051963271421, 0.5184785717958736, 0.5149684560214818, 0.5142476463127138] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 8]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.865199998287807] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.865199998287807, 1.556290500827244] ***
*** starting iteration: 2; err: [Inf, 4.865199998287807, 1.556290500827244] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.865199998287807, 1.556290500827244, 0.7082464009714368] ***
*** starting iteration: 3; err: [Inf, 4.865199998287807, 1.556290500827244, 0.7082464009714368] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.865199998287807, 1.556290500827244, 0.7082464009714368, 0.5450621335355864] ***
*** starting iteration: 4; err: [Inf, 4.865199998287807, 1.556290500827244, 0.7082464009714368, 0.5450621335355864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.865199998287807, 1.556290500827244, 0.7082464009714368, 0.5450621335355864, 0.5337120611918624] ***
*** starting iteration: 5; err: [Inf, 4.865199998287807, 1.556290500827244, 0.7082464009714368, 0.5450621335355864, 0.5337120611918624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.865199998287807, 1.556290500827244, 0.7082464009714368, 0.5450621335355864, 0.5337120611918624, 0.5255249661693883] ***
*** starting iteration: 6; err: [Inf, 4.865199998287807, 1.556290500827244, 0.7082464009714368, 0.5450621335355864, 0.5337120611918624, 0.5255249661693883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.865199998287807, 1.556290500827244, 0.7082464009714368, 0.5450621335355864, 0.5337120611918624, 0.5255249661693883, 0.5246015132751778] ***
*** finished computation of 3 references, err: [Inf, 4.865199998287807, 1.556290500827244, 0.7082464009714368, 0.5450621335355864, 0.5337120611918624, 0.5255249661693883, 0.5246015132751778] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 13]]
** centroid: 2, normalized-entropy: 0.8672816222000259, [(2, 32), (3, 13)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 22)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9066666666666666, 0.9, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.98
finished with 22
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9066666666666666, 0.9, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.98
finished with 22
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9066666666666666, 0.9, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.98
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.085714285714287, 3.15, 6.0, 2.1071428571428577], [5.475, 2.5749999999999997, 3.7937499999999997, 1.1625], [6.205263157894738, 2.905263157894737, 5.205263157894737, 1.9315789473684208], [6.270588235294118, 3.005882352941176, 4.511764705882354, 1.423529411764706], [4.706666666666665, 3.0933333333333337, 1.3666666666666667, 0.18666666666666668], [5.1571428571428575, 3.5571428571428565, 1.507142857142857, 0.32857142857142857], [5.5200000000000005, 4.12, 1.3800000000000001, 0.26000000000000006]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 2, 1, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.686666666666666, 3.0800000000000005, 1.3733333333333333, 0.20000000000000004], [5.1125, 3.5062499999999996, 1.55625, 0.2625], [4.966666666666667, 2.2333333333333334, 3.3666666666666667, 1.0], [6.3933333333333335, 2.86, 4.673333333333335, 1.4666666666666663], [6.1125, 2.6999999999999997, 5.0, 1.8000000000000003], [6.891666666666668, 3.087499999999999, 5.779166666666668, 2.0999999999999996], [5.613333333333332, 2.7266666666666666, 4.153333333333333, 1.2666666666666664], [5.6, 4.074999999999999, 1.475, 0.25]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 1, 2, 2, 3, 3, 2, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.4, 3.033333333333333, 1.3333333333333333, 0.20000000000000004], [7.082352941176472, 3.0588235294117645, 6.023529411764706, 2.2], [6.386666666666666, 2.8999999999999995, 4.6000000000000005, 1.4666666666666663], [6.105555555555555, 2.838888888888889, 5.127777777777776, 1.8944444444444446], [5.563157894736842, 2.6315789473684212, 4.0, 1.2578947368421052], [4.9, 3.3875, 1.4375, 0.24999999999999997], [4.8571428571428585, 3.1142857142857143, 1.5571428571428572, 0.1571428571428571], [5.330769230769231, 3.723076923076923, 1.546153846153846, 0.29230769230769227]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 1, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[89, 22, 1, 23, 17, 25, 4, 25, 22, 24, 6, 1, 39, 1, 13, 24, 30, 31, 15, 14, 7, 2, 7, 16, 8, 22, 2, 31, 1, 9, 37, 22, 33, 32, 42, 1, 1, 19, 2, 26, 53, 34, 47, 34, 31, 25, 33, 9, 20, 3, 22, 44, 49, 1, 25, 40, 45, 38, 39, 36, 11, 48, 43, 27, 29, 31, 14, 28, 17, 1, 40, 12, 28, 41, 33, 1, 20, 50, 32, 3, 25, 26, 51, 38, 30, 23, 34, 48, 30, 34, 24, 29, 54, 36, 31, 30, 30, 31, 48, 42, 45, 33, 54, 19, 30, 45, 20, 31, 41, 48, 37, 30, 20, 35, 48, 24, 38, 37, 56, 55, 23, 63, 53, 66, 15, 34, 72, 23, 34, 11, 36, 38, 31, 39, 40, 26, 54, 28, 23, 4, 38, 30, 42, 29, 47, 40, 34, 35, 37, 24, 33, 35, 19, 35, 26, 51, 27, 39, 49, 34, 50, 22, 41, 44, 29, 19, 22, 36, 50, 33, 43, 59, 44, 34, 36, 31, 40, 29, 43, 37, 44, 44, 42, 30, 26, 13, 45, 35, 50, 23, 34, 42, 8, 39, 47, 32, 45, 26, 26, 31, 1, 24, 76, 41, 34, 46, 38, 73, 57, 47, 48, 21, 33, 36, 41, 34, 38, 32, 33, 15, 42, 40, 42, 17, 69, 28, 31, 48, 51, 38, 23, 42, 33, 35, 56, 30, 26, 50, 24, 49, 43, 42, 18, 51, 35, 1, 23, 29, 40, 63, 39, 35, 54, 18, 37, 60, 39, 54, 29, 34, 43, 31, 36, 50, 70, 38, 37, 40, 33, 55, 31, 46, 21, 31, 37, 22, 60, 39, 44, 34, 33, 42, 34, 45, 17, 39, 41, 41, 23, 49, 34, 61, 41, 35, 35, 22, 42, 34, 51, 33]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.618, speedup = 0.38289734653007773, eval_ratio = 0.04172)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.39583333333333354,"recall":0.39496527777777796,"f1":null,"seconds":6.891600787639618e-5,"exhaustive_search_seconds":0.0004224441945552826,"evaluations":340.6875,"distances_sum":1775.1901767788875}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5529513888888887,"recall":0.5529513888888887,"f1":0.5529513888888887,"seconds":9.923428297042847e-5,"exhaustive_search_seconds":0.0004224441945552826,"evaluations":379.5859375,"distances_sum":1666.2279685151752}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6510416666666664,"recall":0.6510416666666664,"f1":0.6510416666666664,"seconds":0.00012682005763053894,"exhaustive_search_seconds":0.0004224441945552826,"evaluations":417.7109375,"distances_sum":1622.867368774165}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7369791666666665,"recall":0.7369791666666665,"f1":0.7369791666666665,"seconds":0.00015745870769023895,"exhaustive_search_seconds":0.0004224441945552826,"evaluations":458.234375,"distances_sum":1589.1039880754165}
KCenters.DeloneInvIndex> reached performance {"precision":0.801215277777777,"recall":0.801215277777777,"f1":0.801215277777777,"seconds":0.0001906082034111023,"exhaustive_search_seconds":0.0004224441945552826,"evaluations":498.6953125,"distances_sum":1572.4633590970743}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.755, speedup = 1.993471096129024, eval_ratio = 0.049871)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
