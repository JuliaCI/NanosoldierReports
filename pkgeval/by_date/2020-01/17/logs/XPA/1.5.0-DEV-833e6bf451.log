Julia Version 1.5.0-DEV.84
Commit 833e6bf451 (2020-01-17 18:45 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed XPA ─ v0.0.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [d310a076] + XPA v0.0.1
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [d310a076] + XPA v0.0.1
  Building XPA → `~/.julia/packages/XPA/DgLur/deps/build.log`
  Updating `/tmp/jl_xKE1VN/Project.toml`
 [no changes]
  Updating `/tmp/jl_xKE1VN/Manifest.toml`
 [no changes]
┌ Error: Error building `XPA`: 
│ if test "" != ""; then \
│     defs="-DXPA_DLL=\"\\\"\\\"\""; \
│     libs=""; \
│ elif test "" != ""; then \
│     defs="-UXPA_DLL"; \
│     libs=""; \
│ else \
│     defs="-UXPA_DLL"; \
│     libs="-lxpa"; \
│ fi; \
│ cc   $defs  -o "gencode" "gencode.c" $libs 
│ gencode.c:14:10: fatal error: xpa.h: No such file or directory
│  #include <xpa.h>
│           ^~~~~~~
│ compilation terminated.
│ Makefile:28: recipe for target 'gencode' failed
│ make: *** [gencode] Error 1
│ ERROR: LoadError: failed process: Process(`make`, ProcessExited(2)) [2]
│ 
│ Stacktrace:
│  [1] pipeline_error at ./process.jl:525 [inlined]
│  [2] run(::Cmd; wait::Bool) at ./process.jl:440
│  [3] run(::Cmd) at ./process.jl:438
│  [4] top-level scope at /home/pkgeval/.julia/packages/XPA/DgLur/deps/build.jl:1
│  [5] include(::String) at ./client.jl:439
│  [6] top-level scope at none:5
│ in expression starting at /home/pkgeval/.julia/packages/XPA/DgLur/deps/build.jl:1
└ @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:883
   Testing XPA
  Updating `/tmp/jl_0SiOyZ/Project.toml`
 [no changes]
  Updating `/tmp/jl_0SiOyZ/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_0SiOyZ/Project.toml`
  [d310a076] XPA v0.0.1
ERROR: LoadError: XPA not properly installed.  Please run Pkg.build("XPA")
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] top-level scope at /home/pkgeval/.julia/packages/XPA/DgLur/src/XPA.jl:25
 [3] include(::Module, ::String) at ./Base.jl:377
 [4] top-level scope at none:2
 [5] eval at ./boot.jl:331 [inlined]
 [6] eval(::Expr) at ./client.jl:449
 [7] top-level scope at ./none:3
in expression starting at /home/pkgeval/.julia/packages/XPA/DgLur/src/XPA.jl:22
ERROR: LoadError: Failed to precompile XPA [d310a076-6a08-52b6-ab78-79baa254182b] to /home/pkgeval/.julia/compiled/v1.5/XPA/yg1lA_50YPC.ji.
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] compilecache(::Base.PkgId, ::String) at ./loading.jl:1270
 [3] _require(::Base.PkgId) at ./loading.jl:1029
 [4] require(::Base.PkgId) at ./loading.jl:927
 [5] require(::Module, ::Symbol) at ./loading.jl:922
 [6] include(::String) at ./client.jl:439
 [7] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/XPA/DgLur/test/runtests.jl:13
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/XPA/DgLur/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/XPA/DgLur/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package XPA errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
