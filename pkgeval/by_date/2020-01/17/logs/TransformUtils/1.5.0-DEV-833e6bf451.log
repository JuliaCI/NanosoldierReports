Julia Version 1.5.0-DEV.84
Commit 833e6bf451 (2020-01-17 18:45 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_3zdpnX/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_3zdpnX/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_3zdpnX/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.10263518525937983 0.212570603781562; -0.10263518525937983 0.0 0.0294952299751553; -0.212570603781562 -0.0294952299751553 0.0])
dAA = so3([0.0 0.029392144667948344 0.03461835039991034; -0.029392144667948344 0.0 0.03707139974136136; -0.03461835039991034 -0.03707139974136136 0.0])
dAA = so3([0.0 0.10686961825494135 0.04052463248138213; -0.10686961825494135 0.0 0.03613747790807571; -0.04052463248138213 -0.03613747790807571 0.0])
dAA = Quaternion(0.9972014482994002, [-0.043903918626897714, -0.05413277473314343, 0.027043670950378833])
dAA = SO3([0.9994405568127167 0.021829558657097337 -0.02533858257131783; -0.018810980501582735 0.9933261084306015 0.11379538357370247; 0.027653578619343637 -0.11325507793893105 0.9931810343087462])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9935667511773717 0.06921430059841512 0.08963532533278913; -0.07722089606456488 0.9930181763345486 0.08917306028276195; -0.08283745629742856 -0.09552110793892447 0.9919746336334876]), [-0.294952299751553, 2.12570603781562, -1.0263518525937982])
xj = SE3(SO3([0.9546782634156937 -0.11435978211025465 -0.27479311053461736; 0.1738898421598357 0.963591952957707 0.20310802787871143; 0.24156104022632208 -0.2416865499585094 0.939806296751586]), [-0.3613747790807571, 0.4052463248138212, -1.0686961825494135])
Dx = SE3(SO3([0.9150983490605682 -0.1680128122047717 -0.3665606450257125; 0.2156789840461919 0.9720351585473329 0.092899011774419; 0.3407016104855169 -0.16407115981459153 0.9257446014585611]), [0.07036797027086189, -1.709000374800599, -0.20137695943983358])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
