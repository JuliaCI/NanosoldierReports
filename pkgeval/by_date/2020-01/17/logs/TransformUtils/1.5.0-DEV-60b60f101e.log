Julia Version 1.5.0-DEV.77
Commit 60b60f101e (2020-01-16 15:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_jY5wFU/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_jY5wFU/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_jY5wFU/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.08653722841693597 -0.21094435521120347; 0.08653722841693597 0.0 -0.15258022227804813; 0.21094435521120347 0.15258022227804813 0.0])
dAA = so3([0.0 0.07786554069456932 0.13545907866303017; -0.07786554069456932 0.0 0.013393997925364418; -0.13545907866303017 -0.013393997925364418 0.0])
dAA = so3([0.0 0.09464693726498434 -0.14237340736838275; -0.09464693726498434 0.0 0.06443183267000575; 0.14237340736838275 -0.06443183267000575 0.0])
dAA = Quaternion(0.9960040102231247, [0.037367883226574125, -0.06834417638583876, 0.04368897431573054])
dAA = SO3([0.9668328462576249 -0.16747915941408995 -0.19283407001702202; 0.15961213255285192 0.9856044930688258 -0.055747200687332486; 0.19939462013632847 0.023119567567165843 0.9796465031102782])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9246839770946298 0.18411791467423982 0.33325686189554676; -0.19531303385356633 0.980740949606476 9.25845750937915e-5; -0.3268216047194155 -0.06517502022245354 0.9428360702834979]), [1.5258022227804813, -2.1094435521120345, 0.8653722841693596])
xj = SE3(SO3([0.9187667119294287 -0.2301477688920456 -0.32077988329133056; 0.1706376929366035 0.9641885142390323 -0.2030351860116882; 0.3560203741356097 0.13180483103263313 0.9251361952257622]), [-0.6443183267000575, -1.4237340736838273, -0.9464693726498433])
Dx = SE3(SO3([0.6998859417240323 -0.4442092045691969 -0.5593190960025107; 0.31330914899796297 0.8946544492511442 -0.3184820145460389; 0.6418699601408657 0.04766129468586465 0.7653308795923698]), [-1.5484547012632712, 0.39103211148884465, -2.431413745825585])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
