Julia Version 1.5.0-DEV.150
Commit 0234e009ab (2020-01-25 18:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed MKL_jll ──────────── v2019.0.117+2
 Installed FFTW_jll ─────────── v3.3.9+3
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed Compat ───────────── v2.2.0
 Installed SignalOperators ──── v0.3.1
 Installed AbstractFFTs ─────── v0.5.0
 Installed PrettyPrinting ───── v0.2.0
 Installed DSP ──────────────── v0.6.3
 Installed FileIO ───────────── v1.2.1
 Installed FFTW ─────────────── v1.2.0
 Installed DataStructures ───── v0.17.9
 Installed MacroTools ───────── v0.5.3
 Installed RecipesBase ──────── v0.7.0
 Installed IterTools ────────── v1.3.0
 Installed LambdaFn ─────────── v0.3.0
 Installed OrderedCollections ─ v1.1.0
 Installed SpecialFunctions ─── v0.10.0
 Installed FillArrays ───────── v0.8.4
 Installed Requires ─────────── v0.5.2
 Installed ConstructionBase ─── v1.0.0
 Installed Reexport ─────────── v0.2.0
 Installed Polynomials ──────── v0.6.0
 Installed MetaArrays ───────── v0.2.7
 Installed Unitful ──────────── v0.18.0
 Installed IntelOpenMP_jll ──── v2018.0.3+0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [4d633899] + SignalOperators v0.3.1
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [34da2185] + Compat v2.2.0
  [187b0558] + ConstructionBase v1.0.0
  [717857b8] + DSP v0.6.3
  [864edb3b] + DataStructures v0.17.9
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [5789e2e9] + FileIO v1.2.1
  [1a297f60] + FillArrays v0.8.4
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [c8e1da08] + IterTools v1.3.0
  [fcefd6c4] + LambdaFn v0.3.0
  [856f044c] + MKL_jll v2019.0.117+2
  [1914dd2f] + MacroTools v0.5.3
  [36b8f3f0] + MetaArrays v0.2.7
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [f27b6e38] + Polynomials v0.6.0
  [54e16d92] + PrettyPrinting v0.2.0
  [3cdcf5f2] + RecipesBase v0.7.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [4d633899] + SignalOperators v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [1986cc42] + Unitful v0.18.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building FFTW → `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_7v0ivV/Project.toml`
 [no changes]
  Updating `/tmp/jl_7v0ivV/Manifest.toml`
 [no changes]
   Testing SignalOperators
 Installed ProgressMeter ───── v1.2.0
 Installed BenchmarkTools ──── v0.4.3
 Installed FixedPointNumbers ─ v0.7.1
 Installed IntervalSets ────── v0.3.2
 Installed JSON ────────────── v0.21.0
 Installed DimensionalData ─── v0.5.1
 Installed WAV ─────────────── v1.0.3
 Installed AxisArrays ──────── v0.4.1
 Installed RangeArrays ─────── v0.3.2
 Installed Parsers ─────────── v0.3.10
  Updating `/tmp/jl_IK4BGK/Project.toml`
  [39de3d68] + AxisArrays v0.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [0703355e] + DimensionalData v0.5.1
  [53c48c17] + FixedPointNumbers v0.7.1
  [92933f4c] + ProgressMeter v1.2.0
  [8149f6b0] + WAV v1.0.3
  Updating `/tmp/jl_IK4BGK/Manifest.toml`
  [39de3d68] + AxisArrays v0.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [0703355e] + DimensionalData v0.5.1
  [53c48c17] + FixedPointNumbers v0.7.1
  [8197267c] + IntervalSets v0.3.2
  [682c06a0] + JSON v0.21.0
  [69de0a69] + Parsers v0.3.10
  [92933f4c] + ProgressMeter v1.2.0
  [b3c3ace0] + RangeArrays v0.3.2
  [8149f6b0] + WAV v1.0.3
Running sandbox
Status `/tmp/jl_IK4BGK/Project.toml`
  [39de3d68] AxisArrays v0.4.1
  [6e4b80f9] BenchmarkTools v0.4.3
  [34da2185] Compat v2.2.0
  [717857b8] DSP v0.6.3
  [0703355e] DimensionalData v0.5.1
  [5789e2e9] FileIO v1.2.1
  [1a297f60] FillArrays v0.8.4
  [53c48c17] FixedPointNumbers v0.7.1
  [fcefd6c4] LambdaFn v0.3.0
  [36b8f3f0] MetaArrays v0.2.7
  [54e16d92] PrettyPrinting v0.2.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v0.5.2
  [4d633899] SignalOperators v0.3.1
  [1986cc42] Unitful v0.18.0
  [8149f6b0] WAV v1.0.3
  [44cfe95a] Pkg 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
Running tests...  3%|█                                  |  ETA: 0:07:22[KRunning tests...  9%|███▏                               |  ETA: 0:03:38[KRunning tests... 12%|████▏                              |  ETA: 0:03:37[KRunning tests... 15%|█████▏                             |  ETA: 0:03:17[KRunning tests... 18%|██████▏                            |  ETA: 0:02:39[KRunning tests... 21%|███████▎                           |  ETA: 0:02:37[KRunning tests... 24%|████████▎                          |  ETA: 0:02:31[KRunning tests... 26%|█████████▎                         |  ETA: 0:02:58[KRunning tests... 29%|██████████▎                        |  ETA: 0:03:20[KRunning tests... 32%|███████████▍                       |  ETA: 0:03:36[KRunning tests... 35%|████████████▍                      |  ETA: 0:03:21[KRunning tests... 38%|█████████████▍                     |  ETA: 0:03:23[KFiltering: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:336
  Got exception outside of a @test
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] nyquist_check(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Quantity{Int64,𝐓^-1,Unitful.FreeUnits{(Hz,),𝐓^-1,nothing}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/filters.jl:15
   [3] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(SignalOperators.nyquist_check),Tuple{Base.RefValue{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}},Tuple{Quantity{Int64,𝐓^-1,Unitful.FreeUnits{(Hz,),𝐓^-1,nothing}}}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:41 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] Filt(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Type{Highpass}, ::Quantity{Int64,𝐓^-1,Unitful.FreeUnits{(Hz,),𝐓^-1,nothing}}; blocksize::Int64, order::Int64, method::ZeroPoleGain{Complex{Float64},Complex{Float64},Float64}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/filters.jl:59
   [10] (::SignalOperators.var"#54#55"{Highpass,Base.Iterators.Pairs{Symbol,ZeroPoleGain{Complex{Float64},Complex{Float64},Float64},Tuple{Symbol},NamedTuple{(:method,),Tuple{ZeroPoleGain{Complex{Float64},Complex{Float64},Float64}}}},Tuple{Quantity{Int64,𝐓^-1,Unitful.FreeUnits{(Hz,),𝐓^-1,nothing}}}})(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/filters.jl:55
   [11] |>(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::SignalOperators.var"#54#55"{Highpass,Base.Iterators.Pairs{Symbol,ZeroPoleGain{Complex{Float64},Complex{Float64},Float64},Tuple{Symbol},NamedTuple{(:method,),Tuple{ZeroPoleGain{Complex{Float64},Complex{Float64},Float64}}}},Tuple{Quantity{Int64,𝐓^-1,Unitful.FreeUnits{(Hz,),𝐓^-1,nothing}}}}) at ./operators.jl:823
   [12] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:345
   [13] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [14] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:337
   [15] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [16] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
   [17] include(::String) at ./client.jl:439
   [18] top-level scope at none:6
   [19] eval(::Module, ::Any) at ./boot.jl:331
   [20] exec_options(::Base.JLOptions) at ./client.jl:264
   [21] _start() at ./client.jl:484
  
Running tests... 41%|██████████████▍                    |  ETA: 0:03:25[KRunning tests... 44%|███████████████▌                   |  ETA: 0:04:25[KRunning tests... 47%|████████████████▌                  |  ETA: 0:04:07[KRunning tests... 50%|█████████████████▌                 |  ETA: 0:03:48[KAxis Arrays: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:495
  Got exception outside of a @test
  MethodError: no method matching /(::Int64, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    /(::Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64, UInt8}, !Matched::Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64, UInt8}) at int.jl:59
    /(::Union{Int16, Int32, Int64, Int8, UInt16, UInt32, UInt64, UInt8}, !Matched::BigInt) at gmp.jl:538
    /(::T, !Matched::T) where T<:Integer at int.jl:57
    ...
  Stacktrace:
   [1] framerate(::AxisArray{Float64,1,Array{Float64,1},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}}}}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/AxisArrays.jl:13
   [2] Signal(::AxisArray{Float64,1,Array{Float64,1},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}}}}}, ::Missing) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/AxisArrays.jl:30 (repeats 2 times)
   [3] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:497
   [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [5] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:496
   [6] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [7] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
   [8] include(::String) at ./client.jl:439
   [9] top-level scope at none:6
   [10] eval(::Module, ::Any) at ./boot.jl:331
   [11] exec_options(::Base.JLOptions) at ./client.jl:264
   [12] _start() at ./client.jl:484
  
Running tests... 53%|██████████████████▌                |  ETA: 0:03:23[KRunning tests... 56%|███████████████████▌               |  ETA: 0:03:02[KRunning tests... 59%|████████████████████▋              |  ETA: 0:02:49[KRunning tests... 62%|█████████████████████▋             |  ETA: 0:02:47[KRunning tests... 65%|██████████████████████▋            |  ETA: 0:02:31[KRunning tests... 68%|███████████████████████▋           |  ETA: 0:02:13[KRunning tests... 71%|████████████████████████▊          |  ETA: 0:02:04[KRunning tests... 74%|█████████████████████████▊         |  ETA: 0:01:53[KNon-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:695
  Test threw exception
  Expression: until(x, 5frames) |> size == (5, 2)
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] framerate(::SignalOperators.CutApply{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}},Val{:Until},Float64}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/wrapping.jl:16
   [3] Signal(::SignalOperators.CutApply{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}},Val{:Until},Float64}, ::IsSignal{Float64,Float64,Int64}, ::Missing) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/signal.jl:200
   [4] Signal(::SignalOperators.CutApply{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}},Val{:Until},Float64}, ::Missing) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/signal.jl:156 (repeats 2 times)
   [5] process_sink_params(::SignalOperators.CutApply{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}},Val{:Until},Float64}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/sink.jl:95
   [6] sink(::SignalOperators.CutApply{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}},Val{:Until},Float64}, ::Type{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}, ::SignalOperators.DataCut) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/sink.jl:66
   [7] sink(::SignalOperators.CutApply{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}},Val{:Until},Float64}, ::Type{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/sink.jl:64
   [8] sink(::SignalOperators.CutApply{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}},Val{:Until},Float64}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/sink.jl:30
   [9] until(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/cutting.jl:90
   [10] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:695
   [11] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [12] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [13] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [14] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:696
  Test threw exception
  Expression: after(x, 5frames) |> size == (5, 2)
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] framerate(::SignalOperators.CutApply{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}},Val{:After},Float64}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/wrapping.jl:16
   [3] Signal(::SignalOperators.CutApply{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}},Val{:After},Float64}, ::IsSignal{Float64,Float64,Int64}, ::Missing) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/signal.jl:200
   [4] Signal(::SignalOperators.CutApply{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}},Val{:After},Float64}, ::Missing) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/signal.jl:156 (repeats 2 times)
   [5] process_sink_params(::SignalOperators.CutApply{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}},Val{:After},Float64}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/sink.jl:95
   [6] sink(::SignalOperators.CutApply{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}},Val{:After},Float64}, ::Type{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}, ::SignalOperators.DataCut) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/sink.jl:66
   [7] sink(::SignalOperators.CutApply{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}},Val{:After},Float64}, ::Type{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/sink.jl:64
   [8] sink(::SignalOperators.CutApply{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}},Val{:After},Float64}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/sink.jl:30
   [9] after(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/cutting.jl:118
   [10] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:696
   [11] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [12] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [13] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [14] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:697
  Test threw exception
  Expression: append(x, y) |> size == (20, 2)
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [4] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(framerate),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}}}})(::Int64) at ./broadcast.jl:1024
   [5] ntuple at ./ntuple.jl:42 [inlined]
   [6] copy at ./broadcast.jl:1024 [inlined]
   [7] materialize at ./broadcast.jl:820 [inlined]
   [8] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:243
   [9] Append(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/appending.jl:60
   [10] append(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},N} where N) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/appending.jl:45
   [11] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:697
   [12] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [13] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [14] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [15] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:698
  Test threw exception
  Expression: prepend(x, y) |> size == (20, 2)
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [4] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(framerate),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}}}})(::Int64) at ./broadcast.jl:1024
   [5] ntuple at ./ntuple.jl:42 [inlined]
   [6] copy at ./broadcast.jl:1024 [inlined]
   [7] materialize at ./broadcast.jl:820 [inlined]
   [8] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:243
   [9] Append(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/appending.jl:60
   [10] Prepend(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/appending.jl:33
   [11] prepend(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},N} where N) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/appending.jl:57
   [12] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:698
   [13] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [14] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [15] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [16] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:699
  Test threw exception
  Expression: operate(+, x, y) == x .+ y
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [4] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(framerate),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}}}})(::Int64) at ./broadcast.jl:1024
   [5] ntuple at ./ntuple.jl:42 [inlined]
   [6] copy at ./broadcast.jl:1024 [inlined]
   [7] materialize at ./broadcast.jl:820 [inlined]
   [8] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:243
   [9] OperateOn(::Function, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},N} where N; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [10] OperateOn(::Function, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},N} where N) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [11] operate(::Function, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},N} where N; kwds::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:173
   [12] operate(::Function, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},N} where N) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:173
   [13] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:699
   [14] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [15] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [16] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [17] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:700
  Test threw exception
  Expression: mix(x, y) == x .+ y
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [4] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(framerate),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}}}})(::Int64) at ./broadcast.jl:1024
   [5] ntuple at ./ntuple.jl:42 [inlined]
   [6] copy at ./broadcast.jl:1024 [inlined]
   [7] materialize at ./broadcast.jl:820 [inlined]
   [8] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:243
   [9] OperateOn(::Function, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},N} where N; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [10] OperateOn(::Function, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},N} where N) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [11] Mix(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:300
   [12] mix(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},N} where N) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:313
   [13] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:700
   [14] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [15] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [16] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [17] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:701
  Test threw exception
  Expression: amplify(x, y) == x .* y
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [4] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(framerate),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}}}})(::Int64) at ./broadcast.jl:1024
   [5] ntuple at ./ntuple.jl:42 [inlined]
   [6] copy at ./broadcast.jl:1024 [inlined]
   [7] materialize at ./broadcast.jl:820 [inlined]
   [8] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:243
   [9] OperateOn(::Function, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},N} where N; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [10] OperateOn(::Function, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},N} where N) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [11] Amplify(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:325
   [12] amplify(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},N} where N) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:338
   [13] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:701
   [14] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [15] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [16] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [17] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:702
  Test threw exception
  Expression: addchannel(x, y) |> size == (10, 4)
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [4] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(framerate),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}}}})(::Int64) at ./broadcast.jl:1024
   [5] ntuple at ./ntuple.jl:42 [inlined]
   [6] copy at ./broadcast.jl:1024 [inlined]
   [7] materialize at ./broadcast.jl:820 [inlined]
   [8] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:243
   [9] OperateOn(::Function, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},N} where N; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [10] AddChannel(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:352
   [11] addchannel(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},N} where N) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:367
   [12] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:702
   [13] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [14] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [15] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [16] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:703
  Test threw exception
  Expression: all(selectchannel(x, 1) .== x[:, 1])
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [4] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(framerate),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}}}})(::Int64) at ./broadcast.jl:1024
   [5] ntuple at ./ntuple.jl:41 [inlined]
   [6] copy at ./broadcast.jl:1024 [inlined]
   [7] materialize at ./broadcast.jl:820 [inlined]
   [8] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:243
   [9] OperateOn(::SignalOperators.GetChanFn, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [10] SelectChannel(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:381
   [11] selectchannel(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:396
   [12] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:703
   [13] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [14] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [15] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [16] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:704
  Test threw exception
  Expression: rampon(x) |> size == (10, 2)
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] framerate(::SignalOperators.RampSignal{:on,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/wrapping.jl:16
   [3] Signal(::SignalOperators.RampSignal{:on,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}, ::IsSignal{Float64,Float64,Int64}, ::Missing) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/signal.jl:200
   [4] Signal(::SignalOperators.RampSignal{:on,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}, ::Missing) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/signal.jl:156 (repeats 2 times)
   [5] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [6] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [7] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(Signal),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},SignalOperators.RampSignal{:on,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}}}}})(::Int64) at ./broadcast.jl:1024
   [8] ntuple at ./ntuple.jl:42 [inlined]
   [9] copy at ./broadcast.jl:1024 [inlined]
   [10] materialize at ./broadcast.jl:820 [inlined]
   [11] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},SignalOperators.RampSignal{:on,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:242
   [12] OperateOn(::Function, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{Any,N} where N; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [13] OperateOn at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133 [inlined]
   [14] Amplify at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:325 [inlined]
   [15] #95 at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:324 [inlined]
   [16] |> at ./operators.jl:823 [inlined]
   [17] RampOn at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/ramps.jl:158 [inlined]
   [18] RampOn at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/ramps.jl:157 [inlined]
   [19] rampon(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/ramps.jl:171
   [20] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:704
   [21] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [22] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [23] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [24] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:705
  Test threw exception
  Expression: rampoff(x) |> size == (10, 2)
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] framerate(::SignalOperators.RampSignal{:off,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/wrapping.jl:16
   [3] Signal(::SignalOperators.RampSignal{:off,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}, ::IsSignal{Float64,Float64,Int64}, ::Missing) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/signal.jl:200
   [4] Signal(::SignalOperators.RampSignal{:off,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}, ::Missing) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/signal.jl:156 (repeats 2 times)
   [5] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [6] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [7] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(Signal),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},SignalOperators.RampSignal{:off,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}}}}})(::Int64) at ./broadcast.jl:1024
   [8] ntuple at ./ntuple.jl:42 [inlined]
   [9] copy at ./broadcast.jl:1024 [inlined]
   [10] materialize at ./broadcast.jl:820 [inlined]
   [11] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},SignalOperators.RampSignal{:off,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:242
   [12] OperateOn(::Function, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{Any,N} where N; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [13] OperateOn at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133 [inlined]
   [14] Amplify at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:325 [inlined]
   [15] #95 at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:324 [inlined]
   [16] |> at ./operators.jl:823 [inlined]
   [17] RampOff at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/ramps.jl:193 [inlined]
   [18] RampOff at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/ramps.jl:192 [inlined]
   [19] rampoff(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/ramps.jl:206
   [20] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:705
   [21] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [22] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [23] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [24] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:706
  Test threw exception
  Expression: ramp(x) |> size == (10, 2)
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] framerate(::SignalOperators.RampSignal{:on,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/wrapping.jl:16
   [3] Signal(::SignalOperators.RampSignal{:on,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}, ::IsSignal{Float64,Float64,Int64}, ::Missing) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/signal.jl:200
   [4] Signal(::SignalOperators.RampSignal{:on,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}, ::Missing) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/signal.jl:156 (repeats 2 times)
   [5] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [6] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [7] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(Signal),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},SignalOperators.RampSignal{:on,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}}}}})(::Int64) at ./broadcast.jl:1024
   [8] ntuple at ./ntuple.jl:42 [inlined]
   [9] copy at ./broadcast.jl:1024 [inlined]
   [10] materialize at ./broadcast.jl:820 [inlined]
   [11] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},SignalOperators.RampSignal{:on,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp),Float64}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:242
   [12] OperateOn(::Function, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{Any,N} where N; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [13] OperateOn at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133 [inlined]
   [14] Amplify at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:325 [inlined]
   [15] #95 at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:324 [inlined]
   [16] |> at ./operators.jl:823 [inlined]
   [17] RampOn at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/ramps.jl:158 [inlined]
   [18] #119 at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/ramps.jl:155 [inlined]
   [19] |>(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::SignalOperators.var"#119#120"{Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}},typeof(sinramp)}) at ./operators.jl:823
   [20] Ramp(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Quantity{Int64,𝐓,Unitful.FreeUnits{(ms,),𝐓,nothing}}, ::Function) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/ramps.jl:228
   [21] Ramp at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/ramps.jl:227 [inlined]
   [22] ramp(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/ramps.jl:241
   [23] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:706
   [24] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [25] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [26] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [27] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:707
  Test threw exception
  Expression: fadeto(x, y, 4frames) |> size == ((10 + 10) - 4, 2)
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [4] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(framerate),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}}}})(::Int64) at ./broadcast.jl:1024
   [5] ntuple at ./ntuple.jl:42 [inlined]
   [6] copy at ./broadcast.jl:1024 [inlined]
   [7] materialize at ./broadcast.jl:820 [inlined]
   [8] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:243
   [9] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:242
   [10] FadeTo(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Quantity{Int64,𝐒,Unitful.FreeUnits{(frames,),𝐒,nothing}}, ::Function) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/ramps.jl:262 (repeats 2 times)
   [11] fadeto(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/ramps.jl:283
   [12] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:707
   [13] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [14] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [15] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [16] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:710
  Test threw exception
  Expression: toframerate(x_, 40Hz) |> size == (80, 2)
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] ToFramerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Quantity{Int64,𝐓^-1,Unitful.FreeUnits{(Hz,),𝐓^-1,nothing}}; blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:66
   [3] toframerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Quantity{Int64,𝐓^-1,Unitful.FreeUnits{(Hz,),𝐓^-1,nothing}}; blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:82
   [4] toframerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Quantity{Int64,𝐓^-1,Unitful.FreeUnits{(Hz,),𝐓^-1,nothing}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:82
   [5] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:710
   [6] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [7] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [9] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:711
  Test threw exception
  Expression: tochannels(x, 1) |> size == (10, 1)
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [4] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(framerate),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}}}})(::Int64) at ./broadcast.jl:1024
   [5] ntuple at ./ntuple.jl:41 [inlined]
   [6] copy at ./broadcast.jl:1024 [inlined]
   [7] materialize at ./broadcast.jl:820 [inlined]
   [8] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:243
   [9] OperateOn(::SignalOperators.As1Channel, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [10] ToChannels(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::IsSignal{Float64,Float64,Int64}, ::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:163
   [11] ToChannels at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:133 [inlined]
   [12] tochannels(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:146
   [13] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:711
   [14] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [15] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [16] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [17] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:712
  Test threw exception
  Expression: toeltype(x, Float32) |> eltype <: Float32
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [4] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(framerate),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}}}})(::Int64) at ./broadcast.jl:1024
   [5] ntuple at ./ntuple.jl:41 [inlined]
   [6] copy at ./broadcast.jl:1024 [inlined]
   [7] materialize at ./broadcast.jl:820 [inlined]
   [8] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:243
   [9] OperateOn(::SignalOperators.ToEltypeFn{Float32}, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [10] OperateOn(::SignalOperators.ToEltypeFn{Float32}, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [11] ToEltype(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Type{Float32}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:184
   [12] toeltype(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Type{Float32}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:196
   [13] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:712
   [14] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [15] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [16] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [17] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Non-lazy operators: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:714
  Test threw exception
  Expression: format(x_, 40Hz, 1) |> size == (80, 1)
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [4] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(framerate),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}}}})(::Int64) at ./broadcast.jl:1024
   [5] ntuple at ./ntuple.jl:41 [inlined]
   [6] copy at ./broadcast.jl:1024 [inlined]
   [7] materialize at ./broadcast.jl:820 [inlined]
   [8] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:243
   [9] OperateOn(::SignalOperators.As1Channel, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [10] ToChannels(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::IsSignal{Float64,Float64,Int64}, ::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:163
   [11] ToChannels at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:133 [inlined]
   [12] Format(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Quantity{Int64,𝐓^-1,Unitful.FreeUnits{(Hz,),𝐓^-1,nothing}}, ::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:211
   [13] format(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},SigChannel{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Quantity{Int64,𝐓^-1,Unitful.FreeUnits{(Hz,),𝐓^-1,nothing}}, ::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:225
   [14] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:714
   [15] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [16] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:692
   [17] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [18] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Running tests... 76%|██████████████████████████▊        |  ETA: 0:01:39[KRunning tests... 79%|███████████████████████████▊       |  ETA: 0:01:34[KRunning tests... 82%|████████████████████████████▉      |  ETA: 0:01:27[KRunning tests... 85%|█████████████████████████████▉     |  ETA: 0:01:14[KRunning tests... 88%|██████████████████████████████▉    |  ETA: 0:01:10[KRunning tests... 91%|███████████████████████████████▉   |  ETA: 0:00:59[KTesting DimensionalData: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:938
  Test threw exception
  Expression: all(Array(Mix(data, 1)) .== data .+ 1)
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},X{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [4] #19 at ./broadcast.jl:1024 [inlined]
   [5] ntuple at ./ntuple.jl:42 [inlined]
   [6] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(framerate),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},X{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},SignalOperators.NumberSignal{Int64,Missing,false}}}}) at ./broadcast.jl:1024
   [7] materialize at ./broadcast.jl:820 [inlined]
   [8] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},X{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Int64}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:243
   [9] OperateOn(::Function, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},X{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{Any,N} where N; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [10] OperateOn at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133 [inlined]
   [11] Mix(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},X{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:300
   [12] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:938
   [13] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [14] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:936
   [15] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [16] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Testing DimensionalData: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:941
  Test threw exception
  Expression: sink(Mix(data, 1)) isa DimensionalArray
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},X{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [4] #19 at ./broadcast.jl:1024 [inlined]
   [5] ntuple at ./ntuple.jl:42 [inlined]
   [6] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(framerate),Tuple{Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},X{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},SignalOperators.NumberSignal{Int64,Missing,false}}}}) at ./broadcast.jl:1024
   [7] materialize at ./broadcast.jl:820 [inlined]
   [8] Uniform(::Tuple{DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},X{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}},Int64}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:243
   [9] OperateOn(::Function, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},X{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Vararg{Any,N} where N; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [10] OperateOn at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133 [inlined]
   [11] Mix(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},X{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}, ::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:300
   [12] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:941
   [13] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [14] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:936
   [15] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [16] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Running tests... 94%|█████████████████████████████████  |  ETA: 0:00:38[KActivating new environment at `~/.julia/packages/SignalOperators/7KLxy/test/jl_hfvoKF/Project.toml`
 Resolving package versions...
 Installed LibSndFile ──────── v2.2.0
 Installed TreeViews ───────── v0.3.0
 Installed Ogg_jll ─────────── v1.3.3+0
 Installed libvorbis_jll ───── v1.3.6+2
 Installed libsndfile_jll ──── v1.0.28+0
 Installed FLAC_jll ────────── v1.3.3+1
 Installed FixedPointNumbers ─ v0.6.1
 Installed SampledSignals ──── v2.1.0
 Installed Unitful ─────────── v0.17.0
  Updating `~/.julia/packages/SignalOperators/7KLxy/test/jl_hfvoKF/Project.toml`
  [b13ce0c6] + LibSndFile v2.2.0
  Updating `~/.julia/packages/SignalOperators/7KLxy/test/jl_hfvoKF/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [34da2185] + Compat v2.2.0
  [717857b8] + DSP v0.6.3
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [1d38b3a6] + FLAC_jll v1.3.3+1
  [5789e2e9] + FileIO v1.2.1
  [53c48c17] + FixedPointNumbers v0.6.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [8197267c] + IntervalSets v0.3.2
  [c8e1da08] + IterTools v1.3.0
  [b13ce0c6] + LibSndFile v2.2.0
  [856f044c] + MKL_jll v2019.0.117+2
  [e7412a2a] + Ogg_jll v1.3.3+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [f27b6e38] + Polynomials v0.6.0
  [3cdcf5f2] + RecipesBase v0.7.0
  [189a3867] + Reexport v0.2.0
  [bd7594eb] + SampledSignals v2.1.0
  [276daf66] + SpecialFunctions v0.10.0
  [a2a6695c] + TreeViews v0.3.0
  [1986cc42] + Unitful v0.17.0
  [5bf562c0] + libsndfile_jll v1.0.28+0
  [f27f6e37] + libvorbis_jll v1.3.6+2
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
 Resolving package versions...
  Updating `~/.julia/packages/SignalOperators/7KLxy/test/jl_hfvoKF/Project.toml`
  [bd7594eb] + SampledSignals v2.1.0
  Updating `~/.julia/packages/SignalOperators/7KLxy/test/jl_hfvoKF/Manifest.toml`
 [no changes]
[ Info: Loading LibSndFile backend for SignalOperators.
Running tests... 97%|██████████████████████████████████ |  ETA: 0:00:21[KTest adaptive return type: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:969
  Test threw exception
  Expression: sink(Mix(1, data)) isa DimensionalArray
  MethodError: no method matching inseconds(::Type{Float64}, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    inseconds(!Matched::Missing, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:136
    inseconds(!Matched::SignalOperators.InfiniteLength, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:138
    inseconds(!Matched::Union{Quantity{T,𝐓,U}, Level{L,S,Quantity{T,𝐓,U}} where S where L} where U where T, ::Any) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/units.jl:124
    ...
  Stacktrace:
   [1] framerate(::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},X{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/DimensionalData.jl:29
   [2] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [4] #19 at ./broadcast.jl:1024 [inlined]
   [5] ntuple at ./ntuple.jl:42 [inlined]
   [6] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(framerate),Tuple{Tuple{SignalOperators.NumberSignal{Int64,Missing,false},DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},X{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}}}) at ./broadcast.jl:1024
   [7] materialize at ./broadcast.jl:820 [inlined]
   [8] Uniform(::Tuple{Int64,DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},X{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:243
   [9] OperateOn(::Function, ::Int64, ::Vararg{Any,N} where N; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [10] OperateOn at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133 [inlined]
   [11] Mix(::Int64, ::DimensionalArray{Float64,2,Tuple{Time{StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}},Nothing},X{UnitRange{Int64},RegularGrid{Ordered{DimensionalData.Forward,DimensionalData.Forward,DimensionalData.Forward},Start,UnknownSampling,Int64},Nothing}},Tuple{},Array{Float64,2}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:300
   [12] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:969
   [13] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [14] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:966
   [15] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [16] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Test adaptive return type: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:976
  Test threw exception
  Expression: sink(Mix(data, data2)) isa AxisArray
  MethodError: no method matching /(::Int64, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    /(::Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64, UInt8}, !Matched::Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64, UInt8}) at int.jl:59
    /(::Union{Int16, Int32, Int64, Int8, UInt16, UInt32, UInt64, UInt8}, !Matched::BigInt) at gmp.jl:538
    /(::T, !Matched::T) where T<:Integer at int.jl:57
    ...
  Stacktrace:
   [1] framerate(::AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}}},Axis{:channel,UnitRange{Int64}}}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/AxisArrays.jl:13
   [2] Signal(::AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}}},Axis{:channel,UnitRange{Int64}}}}, ::Missing) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/AxisArrays.jl:30 (repeats 2 times)
   [3] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(Signal),Tuple{Tuple{AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}}},Axis{:channel,UnitRange{Int64}}}},SampleBuf{Float64,2}}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:42 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] Uniform(::Tuple{AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}}},Axis{:channel,UnitRange{Int64}}}},SampleBuf{Float64,2}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:242
   [10] OperateOn(::Function, ::AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}}},Axis{:channel,UnitRange{Int64}}}}, ::Vararg{Any,N} where N; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [11] OperateOn(::Function, ::AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}}},Axis{:channel,UnitRange{Int64}}}}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [12] Mix(::AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}}},Axis{:channel,UnitRange{Int64}}}}, ::SampleBuf{Float64,2}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:300
   [13] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:976
   [14] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [15] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:966
   [16] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [17] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Test adaptive return type: Error During Test at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:977
  Test threw exception
  Expression: sink(Mix(data2, data)) isa SampleBuf
  MethodError: no method matching /(::Int64, ::Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}})
  Closest candidates are:
    /(::Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64, UInt8}, !Matched::Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64, UInt8}) at int.jl:59
    /(::Union{Int16, Int32, Int64, Int8, UInt16, UInt32, UInt64, UInt8}, !Matched::BigInt) at gmp.jl:538
    /(::T, !Matched::T) where T<:Integer at int.jl:57
    ...
  Stacktrace:
   [1] framerate(::AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}}},Axis{:channel,UnitRange{Int64}}}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/AxisArrays.jl:13
   [2] Signal(::AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}}},Axis{:channel,UnitRange{Int64}}}}, ::Missing) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/AxisArrays.jl:30 (repeats 2 times)
   [3] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:604 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(Signal),Tuple{Tuple{SampleBuf{Float64,2},AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}}},Axis{:channel,UnitRange{Int64}}}}}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:42 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] Uniform(::Tuple{SampleBuf{Float64,2},AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}}},Axis{:channel,UnitRange{Int64}}}}}; channels::Bool) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/reformatting.jl:242
   [10] OperateOn(::Function, ::SampleBuf{Float64,2}, ::Vararg{Any,N} where N; padding::Function, bychannel::Bool, blocksize::Int64) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [11] OperateOn(::Function, ::SampleBuf{Float64,2}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:133
   [12] Mix(::SampleBuf{Float64,2}, ::AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},Base.TwicePrecision{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}}},Axis{:channel,UnitRange{Int64}}}}) at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/src/mapsignal.jl:300
   [13] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:977
   [14] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [15] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:966
   [16] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [17] top-level scope at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:31
  
Running tests...100%|███████████████████████████████████| Time: 0:11:39[K
Test Summary:                           | Pass  Error  Total
SignalOperators.jl                      |  415     24    439
  Unit Conversions                      |   29            29
  Function Currying                     |   11            11
  Basic signals                         |   12            12
  Array tuple output                    |    2             2
  Function signals                      |    6             6
  Sink to arrays                        |    1             1
  Files as signals                      |    2             2
  Change channel Count                  |    6             6
  Cutting Operators                     |   36            36
  Padding                               |   45            45
  Appending                             |   14            14
  Mixing                                |    6             6
  Handling of padded Mix and Amplify    |    7             7
  Filtering                             |           1      1
  Ramps                                 |   22            22
  Resampling                            |   34            34
  Automatic reformatting                |    4             4
  Axis Arrays                           |           1      1
  Operating over empty signals          |    4             4
  Normpower                             |    4             4
  Handling of arrays/numbers            |   22            22
  Handling of infinite signals          |   20            20
  Test that non-signals correctly error |   16            16
  Handle of frame units                 |    7             7
  Handle printing                       |   20            20
  Non-lazy operators                    |          17     17
  Handle lower bitrate                  |   18            18
  Handle fixed point numbers            |   20            20
  Handle unknown frame rates            |   22            22
  Short-block Operators                 |    8             8
  Stress tests                          |    9             9
  README Examples                       |    3             3
  Testing DimensionalData               |    1      2      3
  Testing LibSndFile                    |    2             2
  Test adaptive return type             |    2      3      5
ERROR: LoadError: Some tests did not pass: 415 passed, 0 failed, 24 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl:29
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/SignalOperators/7KLxy/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/SignalOperators/7KLxy/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package SignalOperators errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
