Julia Version 1.5.0-DEV.150
Commit 0234e009ab (2020-01-25 18:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed Tables ────────────────────── v0.2.11
 Installed MappedArrays ──────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.9
 Installed Compat ────────────────────── v3.2.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataStructures ────────────── v0.17.9
 Installed JSON ──────────────────────── v0.21.0
 Installed DataFrames ────────────────── v0.20.0
 Installed Missings ──────────────────── v0.4.3
 Installed DataValueInterfaces ───────── v1.0.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed TableTraits ───────────────── v1.0.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed OrderedCollections ────────── v1.1.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed Parsers ───────────────────── v0.3.10
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed StatsBase ─────────────────── v0.32.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed MLDataPattern ─────────────── v0.5.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_v7dLd5/Project.toml`
 [no changes]
  Updating `/tmp/jl_v7dLd5/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_v7dLd5/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 138.44000000000003
[ Info: 80.99999999999997
[ Info: 36.94000000000001
[ Info: 24.19
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999835129265
[ Info: 75.78000114538527
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 17.800734801082232
inertia(cdnet.distances) = 21.56246018532291
inertia(crand.distances) = 21.60344392340862
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8026473526473534,"seconds":3.6675482988357544e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.34375,"distances_sum":1985.4716547939447}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.52734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.52734375,"f1":0.6777930402930409,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.6796875,"distances_sum":1498.2684098591349}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6875,"f1":0.8026473526473534,"seconds":3.6675482988357544e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.34375,"distances_sum":1985.4716547939447}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8134683025308035,"seconds":3.1441450119018555e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.34375,"distances_sum":1978.9446895946537}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8757169913419921,"seconds":4.127621650695801e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5078125,"distances_sum":2374.4705153807913}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8077224858474866,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.2109375,"distances_sum":1984.999053920348}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9199925074925082,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.6796875,"distances_sum":2618.2977692356862}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8623046875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9199925074925082,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.6796875,"distances_sum":2618.2977692356862}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.959214743589744,"seconds":4.583969712257385e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8984375,"distances_sum":2973.173757498676}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9429201007326012,"seconds":4.328787326812744e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8671875,"distances_sum":2829.5406520839765}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.959214743589744,"seconds":4.583969712257385e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8984375,"distances_sum":2973.173757498676}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.959214743589744,"seconds":4.583969712257385e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8984375,"distances_sum":2973.173757498676}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4423828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4423828125,"f1":null,"seconds":4.088506102561951e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.7265625,"distances_sum":1073.14760921172}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5361328125,"f1":0.6832785270285275,"seconds":4.207715392112732e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.5234375,"distances_sum":1367.2661038708036}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8051089535464543,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.0546875,"distances_sum":1821.4206526971561}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6865234375,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6865234375,"f1":0.8051089535464543,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.0546875,"distances_sum":1821.4206526971561}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9434268856143863,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8203125,"distances_sum":2708.4925341224566}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9287145146520154,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.828125,"distances_sum":2560.028381625631}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8700122793872802,"seconds":3.959983587265015e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.390625,"distances_sum":2173.055757617992}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9434268856143863,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8203125,"distances_sum":2708.4925341224566}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9805631868131871,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.9765625,"distances_sum":2968.227329692465}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9792410714285718,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.984375,"distances_sum":2948.476549532471}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9780505952380953,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.984375,"distances_sum":2946.0466514099485}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9448889652014656,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8359375,"distances_sum":2734.554502295817}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9581158424908428,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.890625,"distances_sum":2787.994848199034}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9805631868131871,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.9765625,"distances_sum":2968.227329692465}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9805631868131871,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.9765625,"distances_sum":2968.227329692465}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3505859375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3505859375,"f1":null,"seconds":2.8721988201141357e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":5.84375,"distances_sum":849.1884490755691}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3505859375,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.3505859375,"f1":null,"seconds":2.8721988201141357e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":5.84375,"distances_sum":849.1884490755691}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.5419921875,"f1":0.6903762903762909,"seconds":3.3564865589141846e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.21875,"distances_sum":1325.857493191091}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8713458416583425,"seconds":3.95067036151886e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.3984375,"distances_sum":2001.423434500198}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":7,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8713458416583425,"seconds":3.95067036151886e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.3984375,"distances_sum":2001.423434500198}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9422905219780223,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.734375,"distances_sum":2479.1958511621806}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8776790917415926,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.3359375,"distances_sum":2050.503795912677}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9422905219780223,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.734375,"distances_sum":2479.1958511621806}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.900390625,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9422905219780223,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.734375,"distances_sum":2479.1958511621806}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.533203125,"f1":0.6808531746031751,"seconds":3.419816493988037e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.3359375,"distances_sum":1393.3902108520265}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.408203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.408203125,"f1":null,"seconds":3.1013041734695435e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.3125,"distances_sum":989.00418032605}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.533203125,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.533203125,"f1":0.6808531746031751,"seconds":3.419816493988037e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.3359375,"distances_sum":1393.3902108520265}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.855655282217783,"seconds":4.1835010051727295e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.296875,"distances_sum":2078.809416669529}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7901742354867364,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.9453125,"distances_sum":1790.0489993644878}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9025531759906767,"seconds":4.5765191316604614e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.78125,"distances_sum":2296.716307124364}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9060101356976366,"seconds":4.410743713378906e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7421875,"distances_sum":2291.211810681734}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8620483682983692,"seconds":4.2244791984558105e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.375,"distances_sum":2065.0214661619143}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8388671875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8388671875,"f1":0.9060101356976366,"seconds":4.410743713378906e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7421875,"distances_sum":2291.211810681734}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9421016483516491,"seconds":4.692003130912781e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.734375,"distances_sum":2625.5629407784754}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9471211080586086,"seconds":4.688277840614319e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.75,"distances_sum":2643.8375293985987}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.95761217948718,"seconds":4.623085260391235e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7890625,"distances_sum":2748.2350693524945}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9112637362637369,"seconds":4.246830940246582e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.796875,"distances_sum":2316.064137963923}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9439789377289384,"seconds":7.777288556098938e-5,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.671875,"distances_sum":2629.5385143498193}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9513278388278394,"seconds":3.973022103309631e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8359375,"distances_sum":2669.5476687172236}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.95761217948718,"seconds":4.623085260391235e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7890625,"distances_sum":2748.2350693524945}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.95761217948718,"seconds":4.623085260391235e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7890625,"distances_sum":2748.2350693524945}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8758075258075266,"seconds":3.4533441066741943e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.328125,"distances_sum":2105.9551937953015}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8089665542790552,"seconds":3.1795352697372437e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.109375,"distances_sum":1771.4796417189266}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":2.3227185010910034e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":6.53125,"distances_sum":974.8492376609113}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7900390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7900390625,"f1":0.8758075258075266,"seconds":3.4533441066741943e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.328125,"distances_sum":2105.9551937953015}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8981544497169502,"seconds":3.4477561712265015e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.421875,"distances_sum":2270.1068410793014}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9320772977022981,"seconds":3.6265701055526733e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.6875,"distances_sum":2450.127320582015}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9320772977022981,"seconds":3.6265701055526733e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.6875,"distances_sum":2450.127320582015}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9630666208791213,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.890625,"distances_sum":2698.819086216174}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9665407509157516,"seconds":4.02890145778656e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.9140625,"distances_sum":2744.2435848980444}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9741071428571431,"seconds":3.973022103309631e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8984375,"distances_sum":2782.9156499911246}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9698489010989014,"seconds":3.95067036151886e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8828125,"distances_sum":2762.2032106433794}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9384157509157517,"seconds":3.928318619728088e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7109375,"distances_sum":2490.816836354566}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9573202838827843,"seconds":3.870576620101929e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8671875,"distances_sum":2677.684503322447}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9741071428571431,"seconds":3.973022103309631e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8984375,"distances_sum":2782.9156499911246}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9741071428571431,"seconds":3.973022103309631e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8984375,"distances_sum":2782.9156499911246}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2490234375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2490234375,"f1":null,"seconds":2.5816261768341064e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":6.4609375,"distances_sum":558.3489303777775}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2490234375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2490234375,"f1":null,"seconds":2.5816261768341064e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":6.4609375,"distances_sum":558.3489303777775}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8662436521811531,"seconds":3.905966877937317e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.09375,"distances_sum":1989.4452471694199}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8689706127206135,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.2109375,"distances_sum":2054.1908209687167}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8689706127206135,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.2109375,"distances_sum":2054.1908209687167}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9480540293040297,"seconds":4.408881068229675e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.7265625,"distances_sum":2539.8080380366164}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.950898580586081,"seconds":4.120171070098877e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.6953125,"distances_sum":2588.2663040303414}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9494104853479859,"seconds":4.597008228302002e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.6953125,"distances_sum":2555.272517062974}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.950898580586081,"seconds":4.120171070098877e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.6953125,"distances_sum":2588.2663040303414}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9808779761904763,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.953125,"distances_sum":2747.9344313863267}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9632497710622716,"seconds":4.3138861656188965e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.7578125,"distances_sum":2678.535048709338}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":9,"bsize":13}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9780334249084249,"seconds":4.505738615989685e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.875,"distances_sum":2757.2828228235494}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9715430402930407,"seconds":4.4424086809158325e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.8515625,"distances_sum":2711.958499197278}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9718234890109894,"seconds":4.503875970840454e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.8984375,"distances_sum":2698.557147289558}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9606971153846158,"seconds":4.45730984210968e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.796875,"distances_sum":2625.4958430955944}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9822172619047619,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.8828125,"distances_sum":2791.382710674426}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9822172619047619,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.8828125,"distances_sum":2791.382710674426}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9822172619047619,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.8828125,"distances_sum":2791.382710674426}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8637908966033975,"seconds":3.883615136146545e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.0703125,"distances_sum":1982.7044879436555}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.392578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.392578125,"f1":null,"seconds":2.8070062398910522e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":6.0,"distances_sum":911.7525895991664}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8637908966033975,"seconds":3.883615136146545e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.0703125,"distances_sum":1982.7044879436555}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9553056318681323,"seconds":4.362314939498901e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.7890625,"distances_sum":2582.9869009118124}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8994224525474531,"seconds":3.883615136146545e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.3984375,"distances_sum":2183.4124882813157}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9553056318681323,"seconds":4.362314939498901e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.7890625,"distances_sum":2582.9869009118124}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358978,"seconds":4.4424086809158325e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.8828125,"distances_sum":2711.1510572877996}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9690476190476194,"seconds":4.518777132034302e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.8984375,"distances_sum":2686.416406176654}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9683608058608063,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.8671875,"distances_sum":2692.3613626983256}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9555319680319686,"seconds":4.114583134651184e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.7734375,"distances_sum":2615.451827089306}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570544039294044,"seconds":3.693625330924988e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.78125,"distances_sum":2615.996362752579}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358978,"seconds":4.4424086809158325e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.8828125,"distances_sum":2711.1510572877996}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358978,"seconds":4.4424086809158325e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.8828125,"distances_sum":2711.1510572877996}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7835497835497842,"seconds":2.9802322387695312e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":7.5078125,"distances_sum":1583.6020132124581}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6611328125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6611328125,"f1":0.7835497835497842,"seconds":2.9802322387695312e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":7.5078125,"distances_sum":1583.6020132124581}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9309809981684987,"seconds":3.8016587495803833e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.453125,"distances_sum":2373.2083638213294}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9309809981684987,"seconds":3.8016587495803833e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.453125,"distances_sum":2373.2083638213294}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9501545329670336,"seconds":3.902241587638855e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.703125,"distances_sum":2535.89749868087}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9501545329670336,"seconds":3.902241587638855e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.703125,"distances_sum":2535.89749868087}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9501545329670336,"seconds":3.902241587638855e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.703125,"distances_sum":2535.89749868087}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4326171875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4326171875,"f1":null,"seconds":2.5369226932525635e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":6.375,"distances_sum":977.8557345660162}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4326171875,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.4326171875,"f1":null,"seconds":2.5369226932525635e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":6.375,"distances_sum":977.8557345660162}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9055376914751923,"seconds":3.941357135772705e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.453125,"distances_sum":2198.4078097360148}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8125296578421587,"seconds":3.2801181077957153e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":7.8984375,"distances_sum":1692.065038749863}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8572151806526817,"seconds":3.5241246223449707e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.140625,"distances_sum":1926.1071685195197}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.501953125, conf: {"ssize":9,"bsize":3}, perf: {"precision":1.0,"recall":0.501953125,"f1":0.6498140748140752,"seconds":2.864748239517212e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":6.796875,"distances_sum":1117.8116328663855}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8408203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.9055376914751923,"seconds":3.941357135772705e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.453125,"distances_sum":2198.4078097360148}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9633585164835171,"seconds":4.32133674621582e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.8203125,"distances_sum":2568.5151834239127}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9659626831501834,"seconds":4.364177584648132e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.828125,"distances_sum":2606.5595707699817}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9417353479853486,"seconds":4.449859261512756e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.578125,"distances_sum":2401.071022621274}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9563701923076928,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.7890625,"distances_sum":2530.3605342081396}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659626831501834,"seconds":4.364177584648132e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.828125,"distances_sum":2606.5595707699817}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659626831501834,"seconds":4.364177584648132e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.828125,"distances_sum":2606.5595707699817}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1796875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1796875,"f1":null,"seconds":3.118067979812622e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":4.78125,"distances_sum":485.9217357976583}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8652280011655018,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.1796875,"distances_sum":2098.6185565628725}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.181640625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.181640625,"f1":null,"seconds":3.118067979812622e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":4.734375,"distances_sum":516.9774268788315}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8652280011655018,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.1796875,"distances_sum":2098.6185565628725}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.870644980019981,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.171875,"distances_sum":2172.5238500090627}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.870644980019981,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.171875,"distances_sum":2172.5238500090627}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.78515625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.870644980019981,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.171875,"distances_sum":2172.5238500090627}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8752122877122885,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.84375,"distances_sum":2221.7780925193356}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4091796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4091796875,"f1":null,"seconds":2.766028046607971e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.671875,"distances_sum":990.1747914773418}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2021484375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2021484375,"f1":null,"seconds":3.216788172721863e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.734375,"distances_sum":562.3017015474348}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8752122877122885,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.84375,"distances_sum":2221.7780925193356}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599931318681325,"seconds":4.5746564865112305e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.796875,"distances_sum":2863.4806699512837}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9385734057609065,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.484375,"distances_sum":2759.6932310259}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9599931318681325,"seconds":4.5746564865112305e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.796875,"distances_sum":2863.4806699512837}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9718406593406596,"seconds":4.293397068977356e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.875,"distances_sum":2978.910127466436}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.971468635531136,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8828125,"distances_sum":2986.433471270115}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9631181318681321,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.828125,"distances_sum":2902.626029298976}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9712454212454216,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.859375,"distances_sum":2986.5095586148086}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9718406593406596,"seconds":4.293397068977356e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.875,"distances_sum":2978.910127466436}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9718406593406596,"seconds":4.293397068977356e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.875,"distances_sum":2978.910127466436}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.544921875,"f1":null,"seconds":4.256144165992737e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.125,"distances_sum":1348.719225498728}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7990806068931077,"seconds":4.82611358165741e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.0703125,"distances_sum":1779.356554796948}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8704720626595638,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.515625,"distances_sum":2134.8527770960377}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8704720626595638,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.515625,"distances_sum":2134.8527770960377}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657394688644693,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.90625,"distances_sum":2895.762814918505}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9370306776556784,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8671875,"distances_sum":2636.453905349332}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9499000999001004,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.890625,"distances_sum":2764.2758890863743}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9145776098901106,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.6640625,"distances_sum":2481.4037504310786}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9454300907425914,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9140625,"distances_sum":2710.227009926147}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9087740384615393,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.703125,"distances_sum":2389.9988930998607}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9657394688644693,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.90625,"distances_sum":2895.762814918505}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9775297619047623,"seconds":4.939734935760498e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":9.0,"distances_sum":2953.514430530064}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9788347069597074,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.96875,"distances_sum":2995.267812836466}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9827380952380955,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9765625,"distances_sum":3012.910253807821}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9734031593406596,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9921875,"distances_sum":2937.6885478916247}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9770833333333337,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.953125,"distances_sum":2988.241076775181}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9754292582417584,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.984375,"distances_sum":2951.036853019114}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9827380952380955,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9765625,"distances_sum":3012.910253807821}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9827380952380955,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9765625,"distances_sum":3012.910253807821}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.13671875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.13671875,"f1":null,"seconds":1.8961727619171143e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":4.0703125,"distances_sum":463.6704929220955}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.13671875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.13671875,"f1":null,"seconds":1.8961727619171143e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":4.0703125,"distances_sum":463.6704929220955}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7138671875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7138671875,"f1":0.8219109015984025,"seconds":3.159046173095703e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":7.5078125,"distances_sum":2055.3092965491333}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3515625, conf: {"ssize":6,"bsize":2}, perf: {"precision":null,"recall":0.3515625,"f1":null,"seconds":2.0079314708709717e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":5.0390625,"distances_sum":1033.5950821510871}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7138671875,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.7138671875,"f1":0.8219109015984025,"seconds":3.159046173095703e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":7.5078125,"distances_sum":2055.3092965491333}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9493589743589749,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":8.7109375,"distances_sum":2823.9891730509516}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9493589743589749,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":8.7109375,"distances_sum":2823.9891730509516}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9493589743589749,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":1.1008232831954956e-6,"evaluations":8.7109375,"distances_sum":2823.9891730509516}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1767578125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1767578125,"f1":null,"seconds":2.810731530189514e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":4.890625,"distances_sum":571.6143392013531}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1767578125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1767578125,"f1":null,"seconds":2.810731530189514e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":4.890625,"distances_sum":571.6143392013531}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8602423618048628,"seconds":3.727152943611145e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.921875,"distances_sum":2097.5051874276696}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2705078125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2705078125,"f1":null,"seconds":3.460794687271118e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.0703125,"distances_sum":685.1711197722475}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8602423618048628,"seconds":3.727152943611145e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.921875,"distances_sum":2097.5051874276696}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9315023518148525,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.515625,"distances_sum":2599.163139395085}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9532795329670336,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.84375,"distances_sum":2780.3731311952956}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9532795329670336,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.84375,"distances_sum":2780.3731311952956}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.979241071428572,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.96875,"distances_sum":2995.413465470016}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9737179487179493,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9375,"distances_sum":2952.536372624494}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9683608058608066,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.90625,"distances_sum":2894.4433908820947}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9710565476190479,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8984375,"distances_sum":2952.369472172195}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9676911630036633,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.890625,"distances_sum":2908.7662669496544}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.979241071428572,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.96875,"distances_sum":2995.413465470016}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.979241071428572,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.96875,"distances_sum":2995.413465470016}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.244140625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.244140625,"f1":null,"seconds":3.77558171749115e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":6.421875,"distances_sum":587.3636845316587}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.244140625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.244140625,"f1":null,"seconds":3.4365803003311157e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":6.5390625,"distances_sum":598.3976283609778}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.435546875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.435546875,"f1":null,"seconds":3.505498170852661e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":6.8125,"distances_sum":1097.2381181206827}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.435546875,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.435546875,"f1":null,"seconds":3.505498170852661e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":6.8125,"distances_sum":1097.2381181206827}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.580078125,"f1":null,"seconds":4.416331648826599e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":7.40625,"distances_sum":1495.0705157515006}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8573208041958049,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.2109375,"distances_sum":2119.974625910453}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7153067418692424,"seconds":3.643333911895752e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":7.2734375,"distances_sum":1462.8124511829733}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":7,"bsize":3}, perf: {"precision":null,"recall":0.5615234375,"f1":null,"seconds":4.3157488107681274e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":7.171875,"distances_sum":1442.5425768453367}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.7228991494616501,"seconds":4.455447196960449e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":7.34375,"distances_sum":1512.1737307106753}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8573208041958049,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.2109375,"distances_sum":2119.974625910453}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9495967574092579,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.8125,"distances_sum":2853.6823827400503}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9593978937728942,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.8671875,"distances_sum":2958.9369835725433}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8653991841491849,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.328125,"distances_sum":2191.6657697204064}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9593978937728942,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.8671875,"distances_sum":2958.9369835725433}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9593978937728942,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.8671875,"distances_sum":2958.9369835725433}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4345703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4345703125,"f1":0.5799627455877457,"seconds":3.930181264877319e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":6.6015625,"distances_sum":1074.61695371117}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.595703125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.595703125,"f1":0.7334086052836062,"seconds":4.686415195465088e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.2890625,"distances_sum":1538.8374482010054}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.595703125,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.595703125,"f1":0.7334086052836062,"seconds":4.686415195465088e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.2890625,"distances_sum":1538.8374482010054}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9121222527472536,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.4765625,"distances_sum":2529.2725545107546}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9093692765567775,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.53125,"distances_sum":2527.7991463877447}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.905746857309358,"seconds":8.7786465883255e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.3828125,"distances_sum":2490.54202212209}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.787073690198691,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.609375,"distances_sum":1758.225580488163}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84765625,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.84765625,"f1":0.9121222527472536,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.4765625,"distances_sum":2529.2725545107546}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9671188186813192,"seconds":6.671994924545288e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.921875,"distances_sum":3010.197746778601}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9614271145521148,"seconds":6.640329957008362e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.8984375,"distances_sum":2949.654236475017}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9528331043956049,"seconds":6.359070539474487e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.8515625,"distances_sum":2896.0583500663492}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9574493215118219,"seconds":3.822147846221924e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.875,"distances_sum":2942.642866561058}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9671188186813192,"seconds":6.671994924545288e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.921875,"distances_sum":3010.197746778601}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9671188186813192,"seconds":6.671994924545288e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.921875,"distances_sum":3010.197746778601}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3125,"f1":null,"seconds":2.0060688257217407e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":5.0078125,"distances_sum":872.8075130496748}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3271484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3271484375,"f1":null,"seconds":2.0712614059448242e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":5.21875,"distances_sum":900.7564401767186}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3271484375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3271484375,"f1":null,"seconds":2.0712614059448242e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":5.21875,"distances_sum":900.7564401767186}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7822307900432909,"seconds":3.5334378480911255e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":7.4140625,"distances_sum":1854.843499391253}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8897217365967373,"seconds":4.040077328681946e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.296875,"distances_sum":2396.621830106883}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7878094128094136,"seconds":3.341585397720337e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":7.578125,"distances_sum":1850.6101486623013}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8173828125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8897217365967373,"seconds":4.040077328681946e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.296875,"distances_sum":2396.621830106883}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9392399267399271,"seconds":4.084780812263489e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.6015625,"distances_sum":2805.7632821781417}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9074607683982691,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.2890625,"distances_sum":2491.737525010649}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9148299617049622,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.53125,"distances_sum":2566.241164615818}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9425652472527479,"seconds":4.038214683532715e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.6875,"distances_sum":2825.551264028615}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9250374625374633,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.5859375,"distances_sum":2705.8399283352583}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9425652472527479,"seconds":4.038214683532715e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.6875,"distances_sum":2825.551264028615}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.900390625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9425652472527479,"seconds":4.038214683532715e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.6875,"distances_sum":2825.551264028615}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.6474609375,"f1":null,"seconds":3.557652235031128e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.21875,"distances_sum":1744.8070341807615}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6474609375,"state":{"ssize":1,"bsize":4},"perf":{"precision":null,"recall":0.6474609375,"f1":null,"seconds":3.557652235031128e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.21875,"distances_sum":1744.8070341807615}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9574118589743593,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8515625,"distances_sum":2938.2276763381037}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7944910991786,"seconds":4.021450877189636e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.4296875,"distances_sum":1875.226386326735}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8683830058830067,"seconds":4.289671778678894e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.8984375,"distances_sum":2231.719082268421}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9574118589743593,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8515625,"distances_sum":2938.2276763381037}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786286630036632,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9375,"distances_sum":3125.739601617579}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9718005952380955,"seconds":4.734843969345093e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":3040.324338888944}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9675824175824181,"seconds":4.2244791984558105e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8828125,"distances_sum":3040.4820398073375}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786286630036632,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9375,"distances_sum":3125.739601617579}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786286630036632,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9375,"distances_sum":3125.739601617579}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7973105019980028,"seconds":4.565343260765076e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.8671875,"distances_sum":1768.2140371538574}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8742850899100907,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.296875,"distances_sum":2252.1571302963075}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5859375,"f1":null,"seconds":3.935769200325012e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.390625,"distances_sum":1530.9569538610217}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8742850899100907,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.296875,"distances_sum":2252.1571302963075}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.962485951548452,"seconds":4.388391971588135e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8125,"distances_sum":2983.479680302022}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9057609057609063,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.625,"distances_sum":2468.514353595474}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9516082875457879,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8203125,"distances_sum":2850.435192354038}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9330299908424916,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.640625,"distances_sum":2693.389794746711}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.962485951548452,"seconds":4.388391971588135e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8125,"distances_sum":2983.479680302022}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9716796875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9716796875,"f1":0.9845066391941394,"seconds":4.725530743598938e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.984375,"distances_sum":3118.8601363886014}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9754292582417585,"seconds":6.895512342453003e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9453125,"distances_sum":3042.7634194787997}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731971153846157,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.953125,"distances_sum":3004.515681005088}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9716796875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9845066391941394,"seconds":4.725530743598938e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.984375,"distances_sum":3118.8601363886014}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9716796875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9845066391941394,"seconds":4.725530743598938e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.984375,"distances_sum":3118.8601363886014}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7843651140526148,"seconds":2.9597431421279907e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.3984375,"distances_sum":1928.489341682733}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.14453125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.14453125,"f1":null,"seconds":1.7285346984863281e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":4.25,"distances_sum":396.6456676544687}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4658203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4658203125,"f1":0.6216207403707406,"seconds":2.507120370864868e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":6.1953125,"distances_sum":1271.023588775611}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.866524621212122,"seconds":3.3956021070480347e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.0,"distances_sum":2271.273828116769}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.866524621212122,"seconds":3.3956021070480347e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.0,"distances_sum":2271.273828116769}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9430517399267405,"seconds":3.423541784286499e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.6015625,"distances_sum":2864.214552330889}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9363813270063274,"seconds":3.8016587495803833e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.4375,"distances_sum":2808.893425273159}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9430517399267405,"seconds":3.423541784286499e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.6015625,"distances_sum":2864.214552330889}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9635244963369969,"seconds":3.904104232788086e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.7734375,"distances_sum":2988.046711663878}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524439102564108,"seconds":3.7029385566711426e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.7109375,"distances_sum":2895.4622999789594}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9543211996337001,"seconds":3.95067036151886e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.6953125,"distances_sum":2941.5553152968564}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9551396520146525,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.6875,"distances_sum":2924.9404361948255}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9534111721611725,"seconds":3.647059202194214e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.703125,"distances_sum":2894.0188882002876}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.946102335164836,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.625,"distances_sum":2873.373955016019}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9635244963369969,"seconds":3.904104232788086e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.7734375,"distances_sum":2988.046711663878}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9635244963369969,"seconds":3.904104232788086e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.7734375,"distances_sum":2988.046711663878}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.388671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.388671875,"f1":null,"seconds":2.4046748876571655e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":6.4453125,"distances_sum":951.6272349749971}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.388671875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.388671875,"f1":null,"seconds":2.4046748876571655e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":6.4453125,"distances_sum":951.6272349749971}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9207188644688653,"seconds":4.217028617858887e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.671875,"distances_sum":2566.472400499197}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.875,"f1":0.9286000457875465,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.7109375,"distances_sum":2628.2713689902243}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.875,"f1":0.9286000457875465,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.7109375,"distances_sum":2628.2713689902243}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9654246794871798,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.90625,"distances_sum":2932.863187695903}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9581158424908429,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.859375,"distances_sum":2895.8778861518645}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687328296703301,"seconds":6.4782798290252686e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.9375,"distances_sum":2955.8658000254927}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687328296703301,"seconds":6.4782798290252686e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.9375,"distances_sum":2955.8658000254927}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687328296703301,"seconds":6.4782798290252686e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.9375,"distances_sum":2955.8658000254927}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2138671875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2138671875,"f1":null,"seconds":3.430992364883423e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":6.0703125,"distances_sum":554.3986412986658}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8709342740592748,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.0859375,"distances_sum":2183.3125995934492}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.572265625,"f1":null,"seconds":3.889203071594238e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":7.4375,"distances_sum":1452.5219420937178}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8709342740592748,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.0859375,"distances_sum":2183.3125995934492}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9287316849816857,"seconds":4.176050424575806e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.625,"distances_sum":2657.2757454745474}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9175766941391945,"seconds":3.952533006668091e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.6484375,"distances_sum":2525.7945906058994}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9111778846153854,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.65625,"distances_sum":2464.3075483159073}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9287316849816857,"seconds":4.176050424575806e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.625,"distances_sum":2657.2757454745474}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9651442307692312,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.8671875,"distances_sum":2952.309482014539}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9648122710622715,"seconds":7.2605907917022705e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.90625,"distances_sum":2949.3232430083067}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9570169413919419,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.859375,"distances_sum":2901.497377629863}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.969442536630037,"seconds":4.4461339712142944e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.890625,"distances_sum":2996.038254037023}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9544375763125769,"seconds":6.9160014390945435e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.8046875,"distances_sum":2894.648619470458}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9569253663003666,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.8984375,"distances_sum":2848.3788712621044}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9296989468864474,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.640625,"distances_sum":2656.312114539108}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.969442536630037,"seconds":4.4461339712142944e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.890625,"distances_sum":2996.038254037023}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.969442536630037,"seconds":4.4461339712142944e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":8.890625,"distances_sum":2996.038254037023}}, n: 9
inertia(cfft.distances) = 17.800734848484854
inertia(cdnet.distances) = 26.794827986113898
inertia(crand.distances) = 21.02554507257448
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9244444444444445
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9400000000000001
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9266666666666666
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.94
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9466666666666667
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.931111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8888888888888888
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9022222222222224
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9177777777777777
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 3, 1, 3, 2, 3, 2, 3, 2, 3, 1, 2, 3, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.3432000028270609] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3432000028270609, 0.18392147998462693] ***
*** starting iteration: 2; err: [Inf, 0.3432000028270609, 0.18392147998462693] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3432000028270609, 0.18392147998462693, 0.1697905966681909] ***
*** starting iteration: 3; err: [Inf, 0.3432000028270609, 0.18392147998462693, 0.1697905966681909] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3432000028270609, 0.18392147998462693, 0.1697905966681909, 0.16249972169551885] ***
*** starting iteration: 4; err: [Inf, 0.3432000028270609, 0.18392147998462693, 0.1697905966681909, 0.16249972169551885] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3432000028270609, 0.18392147998462693, 0.1697905966681909, 0.16249972169551885, 0.15973876599396872] ***
*** starting iteration: 5; err: [Inf, 0.3432000028270609, 0.18392147998462693, 0.1697905966681909, 0.16249972169551885, 0.15973876599396872] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3432000028270609, 0.18392147998462693, 0.1697905966681909, 0.16249972169551885, 0.15973876599396872, 0.1584485120346914] ***
*** starting iteration: 6; err: [Inf, 0.3432000028270609, 0.18392147998462693, 0.1697905966681909, 0.16249972169551885, 0.15973876599396872, 0.1584485120346914] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3432000028270609, 0.18392147998462693, 0.1697905966681909, 0.16249972169551885, 0.15973876599396872, 0.1584485120346914, 0.15825935471663483] ***
*** finished computation of 12 references, err: [Inf, 0.3432000028270609, 0.18392147998462693, 0.1697905966681909, 0.16249972169551885, 0.15973876599396872, 0.1584485120346914, 0.15825935471663483] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
acc = 0.96
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 2.4803999989530015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.4803999989530015, 0.6920032103609843] ***
*** finished computation of 3 references, err: [Inf, 2.4803999989530015, 0.6920032103609843] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 31]]
** centroid: 2, normalized-entropy: 0.8944518845341284, [(2, 14), (3, 31)]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.42858061632479905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42858061632479905, 0.21079773392223963] ***
*** starting iteration: 2; err: [Inf, 0.42858061632479905, 0.21079773392223963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42858061632479905, 0.21079773392223963, 0.20260494807345988] ***
*** starting iteration: 3; err: [Inf, 0.42858061632479905, 0.21079773392223963, 0.20260494807345988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42858061632479905, 0.21079773392223963, 0.20260494807345988, 0.1998794663637532] ***
*** starting iteration: 4; err: [Inf, 0.42858061632479905, 0.21079773392223963, 0.20260494807345988, 0.1998794663637532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42858061632479905, 0.21079773392223963, 0.20260494807345988, 0.1998794663637532, 0.1968625626091172] ***
*** starting iteration: 5; err: [Inf, 0.42858061632479905, 0.21079773392223963, 0.20260494807345988, 0.1998794663637532, 0.1968625626091172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42858061632479905, 0.21079773392223963, 0.20260494807345988, 0.1998794663637532, 0.1968625626091172, 0.19055625250262265] ***
*** starting iteration: 6; err: [Inf, 0.42858061632479905, 0.21079773392223963, 0.20260494807345988, 0.1998794663637532, 0.1968625626091172, 0.19055625250262265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42858061632479905, 0.21079773392223963, 0.20260494807345988, 0.1998794663637532, 0.1968625626091172, 0.19055625250262265, 0.19002423602098073] ***
*** finished computation of 7 references, err: [Inf, 0.42858061632479905, 0.21079773392223963, 0.20260494807345988, 0.1998794663637532, 0.1968625626091172, 0.19055625250262265, 0.19002423602098073] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 6]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(2, 14), (3, 6)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3381345537102661] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3381345537102661, 0.18007705156898665] ***
*** starting iteration: 2; err: [Inf, 0.3381345537102661, 0.18007705156898665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3381345537102661, 0.18007705156898665, 0.1721132325111475] ***
*** starting iteration: 3; err: [Inf, 0.3381345537102661, 0.18007705156898665, 0.1721132325111475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3381345537102661, 0.18007705156898665, 0.1721132325111475, 0.17154256681788074] ***
*** finished computation of 7 references, err: [Inf, 0.3381345537102661, 0.18007705156898665, 0.1721132325111475, 0.17154256681788074] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 7]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 4]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47603564594233005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47603564594233005, 0.1767453100417331] ***
*** starting iteration: 2; err: [Inf, 0.47603564594233005, 0.1767453100417331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47603564594233005, 0.1767453100417331, 0.1748236540629261] ***
*** starting iteration: 3; err: [Inf, 0.47603564594233005, 0.1767453100417331, 0.1748236540629261] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47603564594233005, 0.1767453100417331, 0.1748236540629261, 0.1729618018236824] ***
*** starting iteration: 4; err: [Inf, 0.47603564594233005, 0.1767453100417331, 0.1748236540629261, 0.1729618018236824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47603564594233005, 0.1767453100417331, 0.1748236540629261, 0.1729618018236824, 0.17054869461027258] ***
*** starting iteration: 5; err: [Inf, 0.47603564594233005, 0.1767453100417331, 0.1748236540629261, 0.1729618018236824, 0.17054869461027258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47603564594233005, 0.1767453100417331, 0.1748236540629261, 0.1729618018236824, 0.17054869461027258, 0.16932725124307402] ***
*** starting iteration: 6; err: [Inf, 0.47603564594233005, 0.1767453100417331, 0.1748236540629261, 0.1729618018236824, 0.17054869461027258, 0.16932725124307402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47603564594233005, 0.1767453100417331, 0.1748236540629261, 0.1729618018236824, 0.17054869461027258, 0.16932725124307402, 0.1692121154808357] ***
*** finished computation of 7 references, err: [Inf, 0.47603564594233005, 0.1767453100417331, 0.1748236540629261, 0.1729618018236824, 0.17054869461027258, 0.16932725124307402, 0.1692121154808357] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 19, 9]]
** centroid: 1, normalized-entropy: 0.9059282160429994, [(2, 19), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6797000031778048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6797000031778048, 0.24393855106958162] ***
*** starting iteration: 2; err: [Inf, 0.6797000031778048, 0.24393855106958162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6797000031778048, 0.24393855106958162, 0.2313692399694866] ***
*** starting iteration: 3; err: [Inf, 0.6797000031778048, 0.24393855106958162, 0.2313692399694866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6797000031778048, 0.24393855106958162, 0.2313692399694866, 0.22981236858623919] ***
*** starting iteration: 4; err: [Inf, 0.6797000031778048, 0.24393855106958162, 0.2313692399694866, 0.22981236858623919] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6797000031778048, 0.24393855106958162, 0.2313692399694866, 0.22981236858623919, 0.22981236858623919] ***
*** finished computation of 7 references, err: [Inf, 0.6797000031778048, 0.24393855106958162, 0.2313692399694866, 0.22981236858623919, 0.22981236858623919] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 6]]
** centroid: 1, normalized-entropy: 0.8812908992306927, [(2, 14), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6181000056728508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6181000056728508, 0.24381056352249286] ***
*** starting iteration: 2; err: [Inf, 0.6181000056728508, 0.24381056352249286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6181000056728508, 0.24381056352249286, 0.22830205448363075] ***
*** starting iteration: 3; err: [Inf, 0.6181000056728508, 0.24381056352249286, 0.22830205448363075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6181000056728508, 0.24381056352249286, 0.22830205448363075, 0.22674124796406533] ***
*** starting iteration: 4; err: [Inf, 0.6181000056728508, 0.24381056352249286, 0.22830205448363075, 0.22674124796406533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6181000056728508, 0.24381056352249286, 0.22830205448363075, 0.22674124796406533, 0.22674124796406533] ***
*** finished computation of 7 references, err: [Inf, 0.6181000056728508, 0.24381056352249286, 0.22830205448363075, 0.22674124796406533, 0.22674124796406533] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 9]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 2]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.6587000228746422] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6587000228746422, 0.9410506482243174] ***
*** finished computation of 3 references, err: [Inf, 1.6587000228746422, 0.9410506482243174] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 30]]
** centroid: 1, normalized-entropy: 0.9899927915575186, [(2, 38), (3, 30)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [16, 1, 0]]
** centroid: 2, normalized-entropy: 0.32275695889739825, [(1, 16), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.287100010935497] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.287100010935497, 0.6583505626406345] ***
*** finished computation of 3 references, err: [Inf, 3.287100010935497, 0.6583505626406345] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 5]]
** centroid: 2, normalized-entropy: 0.6136190195993708, [(2, 28), (3, 5)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 33]]
** centroid: 3, normalized-entropy: 0.1914332548141934, [(2, 1), (3, 33)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.508152075494147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.508152075494147, 0.7526848208644585] ***
*** finished computation of 3 references, err: [Inf, 2.508152075494147, 0.7526848208644585] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 24]]
** centroid: 1, normalized-entropy: 0.9935704757706079, [(2, 29), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [36, 3, 0]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(1, 36), (2, 3)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8844432117656101] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8844432117656101, 0.37660896403369376] ***
*** finished computation of 3 references, err: [Inf, 0.8844432117656101, 0.37660896403369376] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 37, 10]]
** centroid: 1, normalized-entropy: 0.7467366074830678, [(2, 37), (3, 10)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 2, normalized-entropy: 0.2761954276479391, [(2, 1), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [31, 1, 0]]
** centroid: 3, normalized-entropy: 0.2006223243127146, [(1, 31), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8954703520701354] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8954703520701354, 0.5185142455210479] ***
*** finished computation of 3 references, err: [Inf, 0.8954703520701354, 0.5185142455210479] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 31]]
** centroid: 2, normalized-entropy: 0.5127091420308771, [(2, 4), (3, 31)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 7]]
** centroid: 3, normalized-entropy: 0.7578784625383954, [(2, 25), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.285700018736438] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.285700018736438, 1.3817381437271272] ***
*** starting iteration: 2; err: [Inf, 5.285700018736438, 1.3817381437271272] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.285700018736438, 1.3817381437271272, 0.699306162029277] ***
*** starting iteration: 3; err: [Inf, 5.285700018736438, 1.3817381437271272, 0.699306162029277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.285700018736438, 1.3817381437271272, 0.699306162029277, 0.5812566517056008] ***
*** finished computation of 3 references, err: [Inf, 5.285700018736438, 1.3817381437271272, 0.699306162029277, 0.5812566517056008] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 13]]
** centroid: 1, normalized-entropy: 0.8756633923230399, [(2, 31), (3, 13)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2144999968508217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2144999968508217, 0.7009749242877946] ***
*** starting iteration: 2; err: [Inf, 1.2144999968508217, 0.7009749242877946] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2144999968508217, 0.7009749242877946, 0.4852969755729981] ***
*** starting iteration: 3; err: [Inf, 1.2144999968508217, 0.7009749242877946, 0.4852969755729981] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2144999968508217, 0.7009749242877946, 0.4852969755729981, 0.4830206542302741] ***
*** finished computation of 3 references, err: [Inf, 1.2144999968508217, 0.7009749242877946, 0.4852969755729981, 0.4830206542302741] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 4]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 32), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 7, 26]]
** centroid: 3, normalized-entropy: 0.7455178428108284, [(2, 7), (3, 26)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2442999914312678] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2442999914312678, 0.9469862137177207] ***
*** starting iteration: 2; err: [Inf, 1.2442999914312678, 0.9469862137177207] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2442999914312678, 0.9469862137177207, 0.9416786667354157] ***
*** starting iteration: 3; err: [Inf, 1.2442999914312678, 0.9469862137177207, 0.9416786667354157] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2442999914312678, 0.9469862137177207, 0.9416786667354157, 0.9416786667354157] ***
*** finished computation of 3 references, err: [Inf, 1.2442999914312678, 0.9469862137177207, 0.9416786667354157, 0.9416786667354157] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [14, 2, 0]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(1, 14), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 38]]
** centroid: 3, normalized-entropy: 0.9792415350396869, [(2, 27), (3, 38)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7086655593260098] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7086655593260098, 0.6623038036121045] ***
*** starting iteration: 2; err: [Inf, 1.7086655593260098, 0.6623038036121045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7086655593260098, 0.6623038036121045, 0.6587834609632334] ***
*** starting iteration: 3; err: [Inf, 1.7086655593260098, 0.6623038036121045, 0.6587834609632334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7086655593260098, 0.6623038036121045, 0.6587834609632334, 0.6428726478219042] ***
*** starting iteration: 4; err: [Inf, 1.7086655593260098, 0.6623038036121045, 0.6587834609632334, 0.6428726478219042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7086655593260098, 0.6623038036121045, 0.6587834609632334, 0.6428726478219042, 0.6269884940969768] ***
*** starting iteration: 5; err: [Inf, 1.7086655593260098, 0.6623038036121045, 0.6587834609632334, 0.6428726478219042, 0.6269884940969768] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7086655593260098, 0.6623038036121045, 0.6587834609632334, 0.6428726478219042, 0.6269884940969768, 0.6255250188186721] ***
*** starting iteration: 6; err: [Inf, 1.7086655593260098, 0.6623038036121045, 0.6587834609632334, 0.6428726478219042, 0.6269884940969768, 0.6255250188186721] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7086655593260098, 0.6623038036121045, 0.6587834609632334, 0.6428726478219042, 0.6269884940969768, 0.6255250188186721, 0.6249299813182077] ***
*** finished computation of 3 references, err: [Inf, 1.7086655593260098, 0.6623038036121045, 0.6587834609632334, 0.6428726478219042, 0.6269884940969768, 0.6255250188186721, 0.6249299813182077] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [20, 2, 0]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(1, 20), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 32]]
** centroid: 2, normalized-entropy: 0.9992492479956566, [(2, 30), (3, 32)]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3805320828771339] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3805320828771339, 0.3317387874379075] ***
*** starting iteration: 2; err: [Inf, 0.3805320828771339, 0.3317387874379075] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3805320828771339, 0.3317387874379075, 0.3287945897695309] ***
*** starting iteration: 3; err: [Inf, 0.3805320828771339, 0.3317387874379075, 0.3287945897695309] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3805320828771339, 0.3317387874379075, 0.3287945897695309, 0.32877232243473387] ***
*** finished computation of 3 references, err: [Inf, 0.3805320828771339, 0.3317387874379075, 0.3287945897695309, 0.32877232243473387] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 2]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 32), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 28]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 7), (3, 28)]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.5895858911476104] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5895858911476104, 1.2325580081661058] ***
*** starting iteration: 2; err: [Inf, 3.5895858911476104, 1.2325580081661058] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989] ***
*** starting iteration: 3; err: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989, 0.4167988368240452] ***
*** starting iteration: 4; err: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989, 0.4167988368240452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989, 0.4167988368240452, 0.3914375164530086] ***
*** starting iteration: 5; err: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989, 0.4167988368240452, 0.3914375164530086] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989, 0.4167988368240452, 0.3914375164530086, 0.38617904551255] ***
*** starting iteration: 6; err: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989, 0.4167988368240452, 0.3914375164530086, 0.38617904551255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989, 0.4167988368240452, 0.3914375164530086, 0.38617904551255, 0.3759450626411641] ***
*** starting iteration: 7; err: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989, 0.4167988368240452, 0.3914375164530086, 0.38617904551255, 0.3759450626411641] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989, 0.4167988368240452, 0.3914375164530086, 0.38617904551255, 0.3759450626411641, 0.36922289967121785] ***
*** starting iteration: 8; err: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989, 0.4167988368240452, 0.3914375164530086, 0.38617904551255, 0.3759450626411641, 0.36922289967121785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989, 0.4167988368240452, 0.3914375164530086, 0.38617904551255, 0.3759450626411641, 0.36922289967121785, 0.3663040954798998] ***
*** starting iteration: 9; err: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989, 0.4167988368240452, 0.3914375164530086, 0.38617904551255, 0.3759450626411641, 0.36922289967121785, 0.3663040954798998] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989, 0.4167988368240452, 0.3914375164530086, 0.38617904551255, 0.3759450626411641, 0.36922289967121785, 0.3663040954798998, 0.3663510250061137] ***
*** finished computation of 3 references, err: [Inf, 3.5895858911476104, 1.2325580081661058, 0.4903661518538989, 0.4167988368240452, 0.3914375164530086, 0.38617904551255, 0.3759450626411641, 0.36922289967121785, 0.3663040954798998, 0.3663510250061137] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 12]]
** centroid: 3, normalized-entropy: 0.8721617883411698, [(2, 29), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.061199998744513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.061199998744513, 0.9099196498716143] ***
*** starting iteration: 2; err: [Inf, 1.061199998744513, 0.9099196498716143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.061199998744513, 0.9099196498716143, 0.8570412782238815] ***
*** starting iteration: 3; err: [Inf, 1.061199998744513, 0.9099196498716143, 0.8570412782238815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.061199998744513, 0.9099196498716143, 0.8570412782238815, 0.6983499195184202] ***
*** finished computation of 7 references, err: [Inf, 1.061199998744513, 0.9099196498716143, 0.8570412782238815, 0.6983499195184202] ***
*** center 1: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 31]]
** centroid: 3, normalized-entropy: 0.9486131982385807, [(2, 18), (3, 31)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 4, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.101500005141285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.101500005141285, 0.9212757508033236] ***
*** starting iteration: 2; err: [Inf, 2.101500005141285, 0.9212757508033236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.101500005141285, 0.9212757508033236, 0.8827190565114585] ***
*** starting iteration: 3; err: [Inf, 2.101500005141285, 0.9212757508033236, 0.8827190565114585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.101500005141285, 0.9212757508033236, 0.8827190565114585, 0.7279391067576735] ***
*** finished computation of 7 references, err: [Inf, 2.101500005141285, 0.9212757508033236, 0.8827190565114585, 0.7279391067576735] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 30]]
** centroid: 1, normalized-entropy: 0.9997927658541268, [(2, 29), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7089000028298229] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7089000028298229, 0.33572665328595336] ***
*** starting iteration: 2; err: [Inf, 0.7089000028298229, 0.33572665328595336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7089000028298229, 0.33572665328595336, 0.27805816850136494] ***
*** starting iteration: 3; err: [Inf, 0.7089000028298229, 0.33572665328595336, 0.27805816850136494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7089000028298229, 0.33572665328595336, 0.27805816850136494, 0.2640149229049105] ***
*** finished computation of 7 references, err: [Inf, 0.7089000028298229, 0.33572665328595336, 0.27805816850136494, 0.2640149229049105] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 7: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6350000009185134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6350000009185134, 0.3432252419548408] ***
*** finished computation of 7 references, err: [Inf, 0.6350000009185134, 0.3432252419548408] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 4]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(2, 17), (3, 4)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 3: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 2]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 3), (3, 2)]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5279999981241887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5279999981241887, 0.4257310466692779] ***
*** finished computation of 7 references, err: [Inf, 0.5279999981241887, 0.4257310466692779] ***
*** center 1: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 6, 27]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 6), (3, 27)]
*** center 3: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 33, 3]]
** centroid: 6, normalized-entropy: 0.4138168503036336, [(2, 33), (3, 3)]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5613000040563603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5613000040563603, 0.3818484432953699] ***
*** finished computation of 7 references, err: [Inf, 0.5613000040563603, 0.3818484432953699] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 29, 10]]
** centroid: 4, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5987975769246539] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5987975769246539, 0.3733960751098928] ***
*** starting iteration: 2; err: [Inf, 0.5987975769246539, 0.3733960751098928] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5987975769246539, 0.3733960751098928, 0.36543446898399096] ***
*** starting iteration: 3; err: [Inf, 0.5987975769246539, 0.3733960751098928, 0.36543446898399096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5987975769246539, 0.3733960751098928, 0.36543446898399096, 0.36270973976029836] ***
*** starting iteration: 4; err: [Inf, 0.5987975769246539, 0.3733960751098928, 0.36543446898399096, 0.36270973976029836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5987975769246539, 0.3733960751098928, 0.36543446898399096, 0.36270973976029836, 0.36270973976029836] ***
*** finished computation of 3 references, err: [Inf, 0.5987975769246539, 0.3733960751098928, 0.36543446898399096, 0.36270973976029836, 0.36270973976029836] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 8]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8854306207290198] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8854306207290198, 0.6293925836371672] ***
*** starting iteration: 2; err: [Inf, 0.8854306207290198, 0.6293925836371672] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8854306207290198, 0.6293925836371672, 0.6207113401380773] ***
*** starting iteration: 3; err: [Inf, 0.8854306207290198, 0.6293925836371672, 0.6207113401380773] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8854306207290198, 0.6293925836371672, 0.6207113401380773, 0.595861191294349] ***
*** starting iteration: 4; err: [Inf, 0.8854306207290198, 0.6293925836371672, 0.6207113401380773, 0.595861191294349] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8854306207290198, 0.6293925836371672, 0.6207113401380773, 0.595861191294349, 0.40818816084837534] ***
*** starting iteration: 5; err: [Inf, 0.8854306207290198, 0.6293925836371672, 0.6207113401380773, 0.595861191294349, 0.40818816084837534] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8854306207290198, 0.6293925836371672, 0.6207113401380773, 0.595861191294349, 0.40818816084837534, 0.32881281051336586] ***
*** starting iteration: 6; err: [Inf, 0.8854306207290198, 0.6293925836371672, 0.6207113401380773, 0.595861191294349, 0.40818816084837534, 0.32881281051336586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8854306207290198, 0.6293925836371672, 0.6207113401380773, 0.595861191294349, 0.40818816084837534, 0.32881281051336586, 0.328197149744941] ***
*** finished computation of 3 references, err: [Inf, 0.8854306207290198, 0.6293925836371672, 0.6207113401380773, 0.595861191294349, 0.40818816084837534, 0.32881281051336586, 0.328197149744941] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 28]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 7), (3, 28)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 2]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(2, 32), (3, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.662679908046679] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.662679908046679, 0.4059129681112196] ***
*** starting iteration: 2; err: [Inf, 1.662679908046679, 0.4059129681112196] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.662679908046679, 0.4059129681112196, 0.36658128022922354] ***
*** starting iteration: 3; err: [Inf, 1.662679908046679, 0.4059129681112196, 0.36658128022922354] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.662679908046679, 0.4059129681112196, 0.36658128022922354, 0.36658128022922354] ***
*** finished computation of 3 references, err: [Inf, 1.662679908046679, 0.4059129681112196, 0.36658128022922354, 0.36658128022922354] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 11]]
** centroid: 1, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 27]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38300000207120505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38300000207120505, 0.3188086765855778] ***
*** finished computation of 7 references, err: [Inf, 0.38300000207120505, 0.3188086765855778] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 25]]
** centroid: 1, normalized-entropy: 0.8337649072106652, [(2, 9), (3, 25)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 2, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9047000071379627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9047000071379627, 0.4975710104229861] ***
*** finished computation of 7 references, err: [Inf, 0.9047000071379627, 0.4975710104229861] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 29]]
** centroid: 1, normalized-entropy: 0.8926230133850988, [(2, 13), (3, 29)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 26, 1]]
** centroid: 2, normalized-entropy: 0.22853814395352806, [(2, 26), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.165800015530743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.165800015530743, 0.736712832144658] ***
*** finished computation of 7 references, err: [Inf, 3.165800015530743, 0.736712832144658] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [33, 3, 0]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(1, 33), (2, 3)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 26, 17]]
** centroid: 4, normalized-entropy: 0.9681647320759545, [(2, 26), (3, 17)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5644000015553448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5644000015553448, 0.2730534999450296] ***
*** starting iteration: 2; err: [Inf, 0.5644000015553448, 0.2730534999450296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5644000015553448, 0.2730534999450296, 0.24767915923808087] ***
*** starting iteration: 3; err: [Inf, 0.5644000015553448, 0.2730534999450296, 0.24767915923808087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5644000015553448, 0.2730534999450296, 0.24767915923808087, 0.23746361758396337] ***
*** finished computation of 7 references, err: [Inf, 0.5644000015553448, 0.2730534999450296, 0.24767915923808087, 0.23746361758396337] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 6]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40600000135734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40600000135734, 0.2452035455955934] ***
*** starting iteration: 2; err: [Inf, 0.40600000135734, 0.2452035455955934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40600000135734, 0.2452035455955934, 0.218312788262789] ***
*** starting iteration: 3; err: [Inf, 0.40600000135734, 0.2452035455955934, 0.218312788262789] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40600000135734, 0.2452035455955934, 0.218312788262789, 0.21525169703029537] ***
*** finished computation of 7 references, err: [Inf, 0.40600000135734, 0.2452035455955934, 0.218312788262789, 0.21525169703029537] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 10]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.611200006860448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.611200006860448, 0.32009376636292575] ***
*** starting iteration: 2; err: [Inf, 0.611200006860448, 0.32009376636292575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.611200006860448, 0.32009376636292575, 0.29840889944647375] ***
*** starting iteration: 3; err: [Inf, 0.611200006860448, 0.32009376636292575, 0.29840889944647375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.611200006860448, 0.32009376636292575, 0.29840889944647375, 0.2889293879506146] ***
*** finished computation of 7 references, err: [Inf, 0.611200006860448, 0.32009376636292575, 0.29840889944647375, 0.2889293879506146] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 9, 11]]
** centroid: 5, normalized-entropy: 0.9927744539878083, [(2, 9), (3, 11)]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5661000049923536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5661000049923536, 0.31822333328984503] ***
*** starting iteration: 2; err: [Inf, 0.5661000049923536, 0.31822333328984503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5661000049923536, 0.31822333328984503, 0.29650170310537116] ***
*** starting iteration: 3; err: [Inf, 0.5661000049923536, 0.31822333328984503, 0.29650170310537116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5661000049923536, 0.31822333328984503, 0.29650170310537116, 0.2760237497119619] ***
*** starting iteration: 4; err: [Inf, 0.5661000049923536, 0.31822333328984503, 0.29650170310537116, 0.2760237497119619] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5661000049923536, 0.31822333328984503, 0.29650170310537116, 0.2760237497119619, 0.2637403031900467] ***
*** starting iteration: 5; err: [Inf, 0.5661000049923536, 0.31822333328984503, 0.29650170310537116, 0.2760237497119619, 0.2637403031900467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5661000049923536, 0.31822333328984503, 0.29650170310537116, 0.2760237497119619, 0.2637403031900467, 0.24086744445159994] ***
*** starting iteration: 6; err: [Inf, 0.5661000049923536, 0.31822333328984503, 0.29650170310537116, 0.2760237497119619, 0.2637403031900467, 0.24086744445159994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5661000049923536, 0.31822333328984503, 0.29650170310537116, 0.2760237497119619, 0.2637403031900467, 0.24086744445159994, 0.23087985454457435] ***
*** starting iteration: 7; err: [Inf, 0.5661000049923536, 0.31822333328984503, 0.29650170310537116, 0.2760237497119619, 0.2637403031900467, 0.24086744445159994, 0.23087985454457435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5661000049923536, 0.31822333328984503, 0.29650170310537116, 0.2760237497119619, 0.2637403031900467, 0.24086744445159994, 0.23087985454457435, 0.22829492643076602] ***
*** starting iteration: 8; err: [Inf, 0.5661000049923536, 0.31822333328984503, 0.29650170310537116, 0.2760237497119619, 0.2637403031900467, 0.24086744445159994, 0.23087985454457435, 0.22829492643076602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5661000049923536, 0.31822333328984503, 0.29650170310537116, 0.2760237497119619, 0.2637403031900467, 0.24086744445159994, 0.23087985454457435, 0.22829492643076602, 0.2278510848015598] ***
*** finished computation of 7 references, err: [Inf, 0.5661000049923536, 0.31822333328984503, 0.29650170310537116, 0.2760237497119619, 0.2637403031900467, 0.24086744445159994, 0.23087985454457435, 0.22829492643076602, 0.2278510848015598] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 10]]
** centroid: 5, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4391000069008059] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4391000069008059, 0.25633744740141057] ***
*** starting iteration: 2; err: [Inf, 0.4391000069008059, 0.25633744740141057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4391000069008059, 0.25633744740141057, 0.247790557163715] ***
*** starting iteration: 3; err: [Inf, 0.4391000069008059, 0.25633744740141057, 0.247790557163715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4391000069008059, 0.25633744740141057, 0.247790557163715, 0.24639130134010684] ***
*** starting iteration: 4; err: [Inf, 0.4391000069008059, 0.25633744740141057, 0.247790557163715, 0.24639130134010684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4391000069008059, 0.25633744740141057, 0.247790557163715, 0.24639130134010684, 0.24557337754469774] ***
*** finished computation of 7 references, err: [Inf, 0.4391000069008059, 0.25633744740141057, 0.247790557163715, 0.24639130134010684, 0.24557337754469774] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 10]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(2, 8), (3, 10)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5678000017487128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5678000017487128, 0.3417465644645392] ***
*** starting iteration: 2; err: [Inf, 0.5678000017487128, 0.3417465644645392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5678000017487128, 0.3417465644645392, 0.2846103962350223] ***
*** starting iteration: 3; err: [Inf, 0.5678000017487128, 0.3417465644645392, 0.2846103962350223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5678000017487128, 0.3417465644645392, 0.2846103962350223, 0.2683714889279836] ***
*** starting iteration: 4; err: [Inf, 0.5678000017487128, 0.3417465644645392, 0.2846103962350223, 0.2683714889279836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5678000017487128, 0.3417465644645392, 0.2846103962350223, 0.2683714889279836, 0.25407751997355094] ***
*** starting iteration: 5; err: [Inf, 0.5678000017487128, 0.3417465644645392, 0.2846103962350223, 0.2683714889279836, 0.25407751997355094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5678000017487128, 0.3417465644645392, 0.2846103962350223, 0.2683714889279836, 0.25407751997355094, 0.2506188650980117] ***
*** starting iteration: 6; err: [Inf, 0.5678000017487128, 0.3417465644645392, 0.2846103962350223, 0.2683714889279836, 0.25407751997355094, 0.2506188650980117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5678000017487128, 0.3417465644645392, 0.2846103962350223, 0.2683714889279836, 0.25407751997355094, 0.2506188650980117, 0.24903136600509262] ***
*** starting iteration: 7; err: [Inf, 0.5678000017487128, 0.3417465644645392, 0.2846103962350223, 0.2683714889279836, 0.25407751997355094, 0.2506188650980117, 0.24903136600509262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5678000017487128, 0.3417465644645392, 0.2846103962350223, 0.2683714889279836, 0.25407751997355094, 0.2506188650980117, 0.24903136600509262, 0.24903136600509262] ***
*** finished computation of 7 references, err: [Inf, 0.5678000017487128, 0.3417465644645392, 0.2846103962350223, 0.2683714889279836, 0.25407751997355094, 0.2506188650980117, 0.24903136600509262, 0.24903136600509262] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6780462489620577] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6780462489620577, 0.4020150340007861] ***
*** starting iteration: 2; err: [Inf, 0.6780462489620577, 0.4020150340007861] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6780462489620577, 0.4020150340007861, 0.3819378157578129] ***
*** starting iteration: 3; err: [Inf, 0.6780462489620577, 0.4020150340007861, 0.3819378157578129] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6780462489620577, 0.4020150340007861, 0.3819378157578129, 0.3763566912353734] ***
*** starting iteration: 4; err: [Inf, 0.6780462489620577, 0.4020150340007861, 0.3819378157578129, 0.3763566912353734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6780462489620577, 0.4020150340007861, 0.3819378157578129, 0.3763566912353734, 0.36803860913428155] ***
*** starting iteration: 5; err: [Inf, 0.6780462489620577, 0.4020150340007861, 0.3819378157578129, 0.3763566912353734, 0.36803860913428155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6780462489620577, 0.4020150340007861, 0.3819378157578129, 0.3763566912353734, 0.36803860913428155, 0.3657039501772047] ***
*** starting iteration: 6; err: [Inf, 0.6780462489620577, 0.4020150340007861, 0.3819378157578129, 0.3763566912353734, 0.36803860913428155, 0.3657039501772047] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6780462489620577, 0.4020150340007861, 0.3819378157578129, 0.3763566912353734, 0.36803860913428155, 0.3657039501772047, 0.3638409248157957] ***
*** starting iteration: 7; err: [Inf, 0.6780462489620577, 0.4020150340007861, 0.3819378157578129, 0.3763566912353734, 0.36803860913428155, 0.3657039501772047, 0.3638409248157957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6780462489620577, 0.4020150340007861, 0.3819378157578129, 0.3763566912353734, 0.36803860913428155, 0.3657039501772047, 0.3638409248157957, 0.36209925898275686] ***
*** starting iteration: 8; err: [Inf, 0.6780462489620577, 0.4020150340007861, 0.3819378157578129, 0.3763566912353734, 0.36803860913428155, 0.3657039501772047, 0.3638409248157957, 0.36209925898275686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6780462489620577, 0.4020150340007861, 0.3819378157578129, 0.3763566912353734, 0.36803860913428155, 0.3657039501772047, 0.3638409248157957, 0.36209925898275686, 0.362352167090651] ***
*** finished computation of 3 references, err: [Inf, 0.6780462489620577, 0.4020150340007861, 0.3819378157578129, 0.3763566912353734, 0.36803860913428155, 0.3657039501772047, 0.3638409248157957, 0.36209925898275686, 0.362352167090651] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 1, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 7]]
** centroid: 3, normalized-entropy: 0.710676853856123, [(2, 29), (3, 7)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4690326516743608] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4690326516743608, 0.33189903696731504] ***
*** starting iteration: 2; err: [Inf, 1.4690326516743608, 0.33189903696731504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4690326516743608, 0.33189903696731504, 0.33042516487261947] ***
*** starting iteration: 3; err: [Inf, 1.4690326516743608, 0.33189903696731504, 0.33042516487261947] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4690326516743608, 0.33189903696731504, 0.33042516487261947, 0.32877232243473387] ***
*** starting iteration: 4; err: [Inf, 1.4690326516743608, 0.33189903696731504, 0.33042516487261947, 0.32877232243473387] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4690326516743608, 0.33189903696731504, 0.33042516487261947, 0.32877232243473387, 0.32877232243473387] ***
*** finished computation of 3 references, err: [Inf, 1.4690326516743608, 0.33189903696731504, 0.33042516487261947, 0.32877232243473387, 0.32877232243473387] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 2]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 32), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 28]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 7), (3, 28)]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8684382865465203] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8684382865465203, 0.38617904551255] ***
*** starting iteration: 2; err: [Inf, 0.8684382865465203, 0.38617904551255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8684382865465203, 0.38617904551255, 0.3759450626411641] ***
*** starting iteration: 3; err: [Inf, 0.8684382865465203, 0.38617904551255, 0.3759450626411641] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8684382865465203, 0.38617904551255, 0.3759450626411641, 0.36922289967121785] ***
*** starting iteration: 4; err: [Inf, 0.8684382865465203, 0.38617904551255, 0.3759450626411641, 0.36922289967121785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8684382865465203, 0.38617904551255, 0.3759450626411641, 0.36922289967121785, 0.3663040954798998] ***
*** starting iteration: 5; err: [Inf, 0.8684382865465203, 0.38617904551255, 0.3759450626411641, 0.36922289967121785, 0.3663040954798998] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8684382865465203, 0.38617904551255, 0.3759450626411641, 0.36922289967121785, 0.3663040954798998, 0.3663510250061137] ***
*** finished computation of 3 references, err: [Inf, 0.8684382865465203, 0.38617904551255, 0.3759450626411641, 0.36922289967121785, 0.3663040954798998, 0.3663510250061137] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 12]]
** centroid: 3, normalized-entropy: 0.8721617883411698, [(2, 29), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1706951017962854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1706951017962854, 0.381931384773672] ***
*** starting iteration: 2; err: [Inf, 1.1706951017962854, 0.381931384773672] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1706951017962854, 0.381931384773672, 0.3698869469659446] ***
*** starting iteration: 3; err: [Inf, 1.1706951017962854, 0.381931384773672, 0.3698869469659446] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1706951017962854, 0.381931384773672, 0.3698869469659446, 0.36543446898399096] ***
*** finished computation of 3 references, err: [Inf, 1.1706951017962854, 0.381931384773672, 0.3698869469659446, 0.36543446898399096] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 8]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7163910667122976] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7163910667122976, 0.3330630622613394] ***
*** starting iteration: 2; err: [Inf, 0.7163910667122976, 0.3330630622613394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7163910667122976, 0.3330630622613394, 0.3311618325149418] ***
*** starting iteration: 3; err: [Inf, 0.7163910667122976, 0.3330630622613394, 0.3311618325149418] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7163910667122976, 0.3330630622613394, 0.3311618325149418, 0.3304047060378204] ***
*** finished computation of 3 references, err: [Inf, 0.7163910667122976, 0.3330630622613394, 0.3311618325149418, 0.3304047060378204] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 29]]
** centroid: 1, normalized-entropy: 0.7897492536625221, [(2, 9), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 30, 1]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.758925031835237] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.758925031835237, 0.38617904551255] ***
*** starting iteration: 2; err: [Inf, 0.758925031835237, 0.38617904551255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.758925031835237, 0.38617904551255, 0.3759450626411641] ***
*** starting iteration: 3; err: [Inf, 0.758925031835237, 0.38617904551255, 0.3759450626411641] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.758925031835237, 0.38617904551255, 0.3759450626411641, 0.36922289967121785] ***
*** finished computation of 3 references, err: [Inf, 0.758925031835237, 0.38617904551255, 0.3759450626411641, 0.36922289967121785] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 13]]
** centroid: 3, normalized-entropy: 0.8926230133850988, [(2, 29), (3, 13)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5542999939570563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5542999939570563, 0.532132486209428] ***
*** finished computation of 3 references, err: [Inf, 1.5542999939570563, 0.532132486209428] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9221000154184317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9221000154184317, 0.5022557429267529] ***
*** finished computation of 3 references, err: [Inf, 0.9221000154184317, 0.5022557429267529] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 29]]
** centroid: 1, normalized-entropy: 0.9103480624345157, [(2, 14), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.7112999817173833] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7112999817173833, 0.5417221269562554] ***
*** finished computation of 3 references, err: [Inf, 2.7112999817173833, 0.5417221269562554] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 10]]
** centroid: 1, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 28]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6976000013246167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6976000013246167, 0.28744463612267623] ***
*** starting iteration: 2; err: [Inf, 0.6976000013246167, 0.28744463612267623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6976000013246167, 0.28744463612267623, 0.26420294658399096] ***
*** starting iteration: 3; err: [Inf, 0.6976000013246167, 0.28744463612267623, 0.26420294658399096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6976000013246167, 0.28744463612267623, 0.26420294658399096, 0.24780367916030208] ***
*** starting iteration: 4; err: [Inf, 0.6976000013246167, 0.28744463612267623, 0.26420294658399096, 0.24780367916030208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6976000013246167, 0.28744463612267623, 0.26420294658399096, 0.24780367916030208, 0.24110624262186808] ***
*** starting iteration: 5; err: [Inf, 0.6976000013246167, 0.28744463612267623, 0.26420294658399096, 0.24780367916030208, 0.24110624262186808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6976000013246167, 0.28744463612267623, 0.26420294658399096, 0.24780367916030208, 0.24110624262186808, 0.2393925706461156] ***
*** starting iteration: 6; err: [Inf, 0.6976000013246167, 0.28744463612267623, 0.26420294658399096, 0.24780367916030208, 0.24110624262186808, 0.2393925706461156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6976000013246167, 0.28744463612267623, 0.26420294658399096, 0.24780367916030208, 0.24110624262186808, 0.2393925706461156, 0.23881406405324446] ***
*** finished computation of 7 references, err: [Inf, 0.6976000013246167, 0.28744463612267623, 0.26420294658399096, 0.24780367916030208, 0.24110624262186808, 0.2393925706461156, 0.23881406405324446] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 19, 9]]
** centroid: 6, normalized-entropy: 0.9059282160429994, [(2, 19), (3, 9)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5881000076549091] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5881000076549091, 0.2901262490665059] ***
*** starting iteration: 2; err: [Inf, 0.5881000076549091, 0.2901262490665059] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5881000076549091, 0.2901262490665059, 0.274865702189257] ***
*** starting iteration: 3; err: [Inf, 0.5881000076549091, 0.2901262490665059, 0.274865702189257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5881000076549091, 0.2901262490665059, 0.274865702189257, 0.27451258394651473] ***
*** finished computation of 7 references, err: [Inf, 0.5881000076549091, 0.2901262490665059, 0.274865702189257, 0.27451258394651473] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 2, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 10, 10]]
** centroid: 4, normalized-entropy: 1.0, [(2, 10), (3, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6271000044109263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6271000044109263, 0.242651804462482] ***
*** starting iteration: 2; err: [Inf, 0.6271000044109263, 0.242651804462482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6271000044109263, 0.242651804462482, 0.2247618327500622] ***
*** starting iteration: 3; err: [Inf, 0.6271000044109263, 0.242651804462482, 0.2247618327500622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6271000044109263, 0.242651804462482, 0.2247618327500622, 0.22302230552501467] ***
*** finished computation of 7 references, err: [Inf, 0.6271000044109263, 0.242651804462482, 0.2247618327500622, 0.22302230552501467] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 10]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4920000003710798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4920000003710798, 0.3013504288065856] ***
*** starting iteration: 2; err: [Inf, 0.4920000003710798, 0.3013504288065856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4920000003710798, 0.3013504288065856, 0.2685555437847576] ***
*** starting iteration: 3; err: [Inf, 0.4920000003710798, 0.3013504288065856, 0.2685555437847576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4920000003710798, 0.3013504288065856, 0.2685555437847576, 0.248110885073805] ***
*** finished computation of 7 references, err: [Inf, 0.4920000003710798, 0.3013504288065856, 0.2685555437847576, 0.248110885073805] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 17, 8]]
** centroid: 5, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.8933333333333332, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.98
finished with 18
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.6110972990723093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6110972990723093, 0.2882551552827892] ***
*** starting iteration: 2; err: [Inf, 0.6110972990723093, 0.2882551552827892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6110972990723093, 0.2882551552827892, 0.22600761149355109] ***
*** starting iteration: 3; err: [Inf, 0.6110972990723093, 0.2882551552827892, 0.22600761149355109] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6110972990723093, 0.2882551552827892, 0.22600761149355109, 0.19867303567205194] ***
*** starting iteration: 4; err: [Inf, 0.6110972990723093, 0.2882551552827892, 0.22600761149355109, 0.19867303567205194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6110972990723093, 0.2882551552827892, 0.22600761149355109, 0.19867303567205194, 0.19442926069373254] ***
*** starting iteration: 5; err: [Inf, 0.6110972990723093, 0.2882551552827892, 0.22600761149355109, 0.19867303567205194, 0.19442926069373254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6110972990723093, 0.2882551552827892, 0.22600761149355109, 0.19867303567205194, 0.19442926069373254, 0.19112411393757803] ***
*** starting iteration: 6; err: [Inf, 0.6110972990723093, 0.2882551552827892, 0.22600761149355109, 0.19867303567205194, 0.19442926069373254, 0.19112411393757803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6110972990723093, 0.2882551552827892, 0.22600761149355109, 0.19867303567205194, 0.19442926069373254, 0.19112411393757803, 0.18606197236562874] ***
*** starting iteration: 7; err: [Inf, 0.6110972990723093, 0.2882551552827892, 0.22600761149355109, 0.19867303567205194, 0.19442926069373254, 0.19112411393757803, 0.18606197236562874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6110972990723093, 0.2882551552827892, 0.22600761149355109, 0.19867303567205194, 0.19442926069373254, 0.19112411393757803, 0.18606197236562874, 0.18579958651357809] ***
*** finished computation of 7 references, err: [Inf, 0.6110972990723093, 0.2882551552827892, 0.22600761149355109, 0.19867303567205194, 0.19442926069373254, 0.19112411393757803, 0.18606197236562874, 0.18579958651357809] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 4, 22]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(2, 4), (3, 22)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8505211579247353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8505211579247353, 0.6039509268101225] ***
*** starting iteration: 2; err: [Inf, 0.8505211579247353, 0.6039509268101225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8505211579247353, 0.6039509268101225, 0.6035941243868227] ***
*** finished computation of 7 references, err: [Inf, 0.8505211579247353, 0.6039509268101225, 0.6035941243868227] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 1, 0]]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 38, 30]]
** centroid: 7, normalized-entropy: 0.9899927915575186, [(2, 38), (3, 30)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34260054234135096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34260054234135096, 0.19113159979963676] ***
*** starting iteration: 2; err: [Inf, 0.34260054234135096, 0.19113159979963676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34260054234135096, 0.19113159979963676, 0.18904288906013114] ***
*** starting iteration: 3; err: [Inf, 0.34260054234135096, 0.19113159979963676, 0.18904288906013114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34260054234135096, 0.19113159979963676, 0.18904288906013114, 0.18622726783773666] ***
*** starting iteration: 4; err: [Inf, 0.34260054234135096, 0.19113159979963676, 0.18904288906013114, 0.18622726783773666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34260054234135096, 0.19113159979963676, 0.18904288906013114, 0.18622726783773666, 0.18467914679304281] ***
*** starting iteration: 5; err: [Inf, 0.34260054234135096, 0.19113159979963676, 0.18904288906013114, 0.18622726783773666, 0.18467914679304281] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34260054234135096, 0.19113159979963676, 0.18904288906013114, 0.18622726783773666, 0.18467914679304281, 0.1843400478629872] ***
*** finished computation of 7 references, err: [Inf, 0.34260054234135096, 0.19113159979963676, 0.18904288906013114, 0.18622726783773666, 0.18467914679304281, 0.1843400478629872] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 4: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 10, 10]]
** centroid: 6, normalized-entropy: 1.0, [(2, 10), (3, 10)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5419000048720677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5419000048720677, 0.34450784891810105] ***
*** starting iteration: 2; err: [Inf, 0.5419000048720677, 0.34450784891810105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927] ***
*** starting iteration: 3; err: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225] ***
*** starting iteration: 4; err: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225, 0.32374807556323376] ***
*** starting iteration: 5; err: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225, 0.32374807556323376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225, 0.32374807556323376, 0.32178578093026766] ***
*** starting iteration: 6; err: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225, 0.32374807556323376, 0.32178578093026766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225, 0.32374807556323376, 0.32178578093026766, 0.31633535800791585] ***
*** starting iteration: 7; err: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225, 0.32374807556323376, 0.32178578093026766, 0.31633535800791585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225, 0.32374807556323376, 0.32178578093026766, 0.31633535800791585, 0.3139144628506893] ***
*** starting iteration: 8; err: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225, 0.32374807556323376, 0.32178578093026766, 0.31633535800791585, 0.3139144628506893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225, 0.32374807556323376, 0.32178578093026766, 0.31633535800791585, 0.3139144628506893, 0.3089651431715059] ***
*** starting iteration: 9; err: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225, 0.32374807556323376, 0.32178578093026766, 0.31633535800791585, 0.3139144628506893, 0.3089651431715059] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225, 0.32374807556323376, 0.32178578093026766, 0.31633535800791585, 0.3139144628506893, 0.3089651431715059, 0.3060677535532438] ***
*** starting iteration: 10; err: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225, 0.32374807556323376, 0.32178578093026766, 0.31633535800791585, 0.3139144628506893, 0.3089651431715059, 0.3060677535532438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225, 0.32374807556323376, 0.32178578093026766, 0.31633535800791585, 0.3139144628506893, 0.3089651431715059, 0.3060677535532438, 0.30481119908866827] ***
*** finished computation of 7 references, err: [Inf, 0.5419000048720677, 0.34450784891810105, 0.3316855266291927, 0.32642858796901225, 0.32374807556323376, 0.32178578093026766, 0.31633535800791585, 0.3139144628506893, 0.3089651431715059, 0.3060677535532438, 0.30481119908866827] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 17]]
** centroid: 2, normalized-entropy: 0.6098403047164005, [(2, 3), (3, 17)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.762399997556584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.762399997556584, 0.44039671491160315] ***
*** starting iteration: 2; err: [Inf, 0.762399997556584, 0.44039671491160315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.762399997556584, 0.44039671491160315, 0.43031279404272527] ***
*** starting iteration: 3; err: [Inf, 0.762399997556584, 0.44039671491160315, 0.43031279404272527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.762399997556584, 0.44039671491160315, 0.43031279404272527, 0.42740895380275573] ***
*** starting iteration: 4; err: [Inf, 0.762399997556584, 0.44039671491160315, 0.43031279404272527, 0.42740895380275573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.762399997556584, 0.44039671491160315, 0.43031279404272527, 0.42740895380275573, 0.42455596829328884] ***
*** starting iteration: 5; err: [Inf, 0.762399997556584, 0.44039671491160315, 0.43031279404272527, 0.42740895380275573, 0.42455596829328884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.762399997556584, 0.44039671491160315, 0.43031279404272527, 0.42740895380275573, 0.42455596829328884, 0.42410413572435884] ***
*** finished computation of 7 references, err: [Inf, 0.762399997556584, 0.44039671491160315, 0.43031279404272527, 0.42740895380275573, 0.42455596829328884, 0.42410413572435884] ***
*** center 1: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 8, 29]]
** centroid: 2, normalized-entropy: 0.7531979910695015, [(2, 8), (3, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 31, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4890000027050416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4890000027050416, 0.3466671561404816] ***
*** starting iteration: 2; err: [Inf, 0.4890000027050416, 0.3466671561404816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4890000027050416, 0.3466671561404816, 0.3134105644446942] ***
*** starting iteration: 3; err: [Inf, 0.4890000027050416, 0.3466671561404816, 0.3134105644446942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4890000027050416, 0.3466671561404816, 0.3134105644446942, 0.27032019938972635] ***
*** starting iteration: 4; err: [Inf, 0.4890000027050416, 0.3466671561404816, 0.3134105644446942, 0.27032019938972635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4890000027050416, 0.3466671561404816, 0.3134105644446942, 0.27032019938972635, 0.26357909164821264] ***
*** starting iteration: 5; err: [Inf, 0.4890000027050416, 0.3466671561404816, 0.3134105644446942, 0.27032019938972635, 0.26357909164821264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4890000027050416, 0.3466671561404816, 0.3134105644446942, 0.27032019938972635, 0.26357909164821264, 0.25971061634695786] ***
*** starting iteration: 6; err: [Inf, 0.4890000027050416, 0.3466671561404816, 0.3134105644446942, 0.27032019938972635, 0.26357909164821264, 0.25971061634695786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4890000027050416, 0.3466671561404816, 0.3134105644446942, 0.27032019938972635, 0.26357909164821264, 0.25971061634695786, 0.25971061634695786] ***
*** finished computation of 7 references, err: [Inf, 0.4890000027050416, 0.3466671561404816, 0.3134105644446942, 0.27032019938972635, 0.26357909164821264, 0.25971061634695786, 0.25971061634695786] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 12]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 4), (3, 12)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.8933333333333332, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.98
finished with 19
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.5996994964041775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5996994964041775, 0.2663218200510658] ***
*** finished computation of 7 references, err: [Inf, 0.5996994964041775, 0.2663218200510658] ***
*** center 1: selecting labels [1] (freq >= 2) [from [5, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 21]]
** centroid: 3, normalized-entropy: 0.634309554640566, [(2, 4), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 27, 3]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(2, 27), (3, 3)]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26849306474856505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26849306474856505, 0.18762286426447297] ***
*** finished computation of 7 references, err: [Inf, 0.26849306474856505, 0.18762286426447297] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 10]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 5), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7907041184952993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7907041184952993, 0.3228240473750251] ***
*** finished computation of 7 references, err: [Inf, 0.7907041184952993, 0.3228240473750251] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 28, 15]]
** centroid: 2, normalized-entropy: 0.9330252953592912, [(2, 28), (3, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 1, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.8933333333333332, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.98
finished with 21
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.5034000093790916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5034000093790916, 0.27471739392277916] ***
*** starting iteration: 2; err: [Inf, 0.5034000093790916, 0.27471739392277916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5034000093790916, 0.27471739392277916, 0.2726636309533273] ***
*** starting iteration: 3; err: [Inf, 0.5034000093790916, 0.27471739392277916, 0.2726636309533273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5034000093790916, 0.27471739392277916, 0.2726636309533273, 0.2726636309533273] ***
*** finished computation of 7 references, err: [Inf, 0.5034000093790916, 0.27471739392277916, 0.2726636309533273, 0.2726636309533273] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 6]]
** centroid: 1, normalized-entropy: 0.8997437586982626, [(2, 13), (3, 6)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3842000002523024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3842000002523024, 0.256018350610446] ***
*** starting iteration: 2; err: [Inf, 0.3842000002523024, 0.256018350610446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3842000002523024, 0.256018350610446, 0.25475979826603956] ***
*** starting iteration: 3; err: [Inf, 0.3842000002523024, 0.256018350610446, 0.25475979826603956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3842000002523024, 0.256018350610446, 0.25475979826603956, 0.25475979826603956] ***
*** finished computation of 7 references, err: [Inf, 0.3842000002523024, 0.256018350610446, 0.25475979826603956, 0.25475979826603956] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4575000024722364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4575000024722364, 0.29320346183569923] ***
*** starting iteration: 2; err: [Inf, 0.4575000024722364, 0.29320346183569923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4575000024722364, 0.29320346183569923, 0.2687333428928134] ***
*** starting iteration: 3; err: [Inf, 0.4575000024722364, 0.29320346183569923, 0.2687333428928134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4575000024722364, 0.29320346183569923, 0.2687333428928134, 0.2367184390287818] ***
*** starting iteration: 4; err: [Inf, 0.4575000024722364, 0.29320346183569923, 0.2687333428928134, 0.2367184390287818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4575000024722364, 0.29320346183569923, 0.2687333428928134, 0.2367184390287818, 0.22330150029403545] ***
*** starting iteration: 5; err: [Inf, 0.4575000024722364, 0.29320346183569923, 0.2687333428928134, 0.2367184390287818, 0.22330150029403545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4575000024722364, 0.29320346183569923, 0.2687333428928134, 0.2367184390287818, 0.22330150029403545, 0.2209458208103638] ***
*** starting iteration: 6; err: [Inf, 0.4575000024722364, 0.29320346183569923, 0.2687333428928134, 0.2367184390287818, 0.22330150029403545, 0.2209458208103638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4575000024722364, 0.29320346183569923, 0.2687333428928134, 0.2367184390287818, 0.22330150029403545, 0.2209458208103638, 0.22003371410124278] ***
*** finished computation of 7 references, err: [Inf, 0.4575000024722364, 0.29320346183569923, 0.2687333428928134, 0.2367184390287818, 0.22330150029403545, 0.2209458208103638, 0.22003371410124278] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 11]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2581393092165367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2581393092165367, 0.2081599141695113] ***
*** starting iteration: 2; err: [Inf, 1.2581393092165367, 0.2081599141695113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2581393092165367, 0.2081599141695113, 0.20396474948594828] ***
*** starting iteration: 3; err: [Inf, 1.2581393092165367, 0.2081599141695113, 0.20396474948594828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2581393092165367, 0.2081599141695113, 0.20396474948594828, 0.2006877514958864] ***
*** starting iteration: 4; err: [Inf, 1.2581393092165367, 0.2081599141695113, 0.20396474948594828, 0.2006877514958864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2581393092165367, 0.2081599141695113, 0.20396474948594828, 0.2006877514958864, 0.1949280395792714] ***
*** starting iteration: 5; err: [Inf, 1.2581393092165367, 0.2081599141695113, 0.20396474948594828, 0.2006877514958864, 0.1949280395792714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2581393092165367, 0.2081599141695113, 0.20396474948594828, 0.2006877514958864, 0.1949280395792714, 0.1923341262700305] ***
*** starting iteration: 6; err: [Inf, 1.2581393092165367, 0.2081599141695113, 0.20396474948594828, 0.2006877514958864, 0.1949280395792714, 0.1923341262700305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2581393092165367, 0.2081599141695113, 0.20396474948594828, 0.2006877514958864, 0.1949280395792714, 0.1923341262700305, 0.1923341262700305] ***
*** finished computation of 7 references, err: [Inf, 1.2581393092165367, 0.2081599141695113, 0.20396474948594828, 0.2006877514958864, 0.1949280395792714, 0.1923341262700305, 0.1923341262700305] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 6]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(2, 14), (3, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 1]]
** centroid: 7, normalized-entropy: 1.0, [(2, 1), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2248120119148723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2248120119148723, 0.15631745358189406] ***
*** starting iteration: 2; err: [Inf, 0.2248120119148723, 0.15631745358189406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2248120119148723, 0.15631745358189406, 0.15346392259985275] ***
*** starting iteration: 3; err: [Inf, 0.2248120119148723, 0.15631745358189406, 0.15346392259985275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2248120119148723, 0.15631745358189406, 0.15346392259985275, 0.15223626248641775] ***
*** starting iteration: 4; err: [Inf, 0.2248120119148723, 0.15631745358189406, 0.15346392259985275, 0.15223626248641775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2248120119148723, 0.15631745358189406, 0.15346392259985275, 0.15223626248641775, 0.15217821493262046] ***
*** finished computation of 7 references, err: [Inf, 0.2248120119148723, 0.15631745358189406, 0.15346392259985275, 0.15223626248641775, 0.15217821493262046] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 7, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4294845574721758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4294845574721758, 0.22106538351602567] ***
*** starting iteration: 2; err: [Inf, 0.4294845574721758, 0.22106538351602567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983] ***
*** starting iteration: 3; err: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577] ***
*** starting iteration: 4; err: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577, 0.17674737924263922] ***
*** starting iteration: 5; err: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577, 0.17674737924263922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577, 0.17674737924263922, 0.1694934974206752] ***
*** starting iteration: 6; err: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577, 0.17674737924263922, 0.1694934974206752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577, 0.17674737924263922, 0.1694934974206752, 0.16692263139262636] ***
*** starting iteration: 7; err: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577, 0.17674737924263922, 0.1694934974206752, 0.16692263139262636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577, 0.17674737924263922, 0.1694934974206752, 0.16692263139262636, 0.16585411089144128] ***
*** starting iteration: 8; err: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577, 0.17674737924263922, 0.1694934974206752, 0.16692263139262636, 0.16585411089144128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577, 0.17674737924263922, 0.1694934974206752, 0.16692263139262636, 0.16585411089144128, 0.164479436472732] ***
*** starting iteration: 9; err: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577, 0.17674737924263922, 0.1694934974206752, 0.16692263139262636, 0.16585411089144128, 0.164479436472732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577, 0.17674737924263922, 0.1694934974206752, 0.16692263139262636, 0.16585411089144128, 0.164479436472732, 0.16130239594513202] ***
*** starting iteration: 10; err: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577, 0.17674737924263922, 0.1694934974206752, 0.16692263139262636, 0.16585411089144128, 0.164479436472732, 0.16130239594513202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577, 0.17674737924263922, 0.1694934974206752, 0.16692263139262636, 0.16585411089144128, 0.164479436472732, 0.16130239594513202, 0.15880842861164088] ***
*** finished computation of 7 references, err: [Inf, 0.4294845574721758, 0.22106538351602567, 0.20039680455954983, 0.18443672477612577, 0.17674737924263922, 0.1694934974206752, 0.16692263139262636, 0.16585411089144128, 0.164479436472732, 0.16130239594513202, 0.15880842861164088] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 7]]
** centroid: 3, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 5, normalized-entropy: 0.2761954276479391, [(2, 1), (3, 20)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.8933333333333332, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.98
finished with 22
iteration 5 finished
*** starting iteration: 1; err: [Inf, 1.5266999955419123] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5266999955419123, 0.532132486209428] ***
*** starting iteration: 2; err: [Inf, 1.5266999955419123, 0.532132486209428] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5266999955419123, 0.532132486209428, 0.5125625289066353] ***
*** starting iteration: 3; err: [Inf, 1.5266999955419123, 0.532132486209428, 0.5125625289066353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5266999955419123, 0.532132486209428, 0.5125625289066353, 0.5098341265449293] ***
*** finished computation of 3 references, err: [Inf, 1.5266999955419123, 0.532132486209428, 0.5125625289066353, 0.5098341265449293] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 8]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.470100003922725] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.470100003922725, 0.49882391508910473] ***
*** starting iteration: 2; err: [Inf, 1.470100003922725, 0.49882391508910473] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.470100003922725, 0.49882391508910473, 0.49607265477886986] ***
*** starting iteration: 3; err: [Inf, 1.470100003922725, 0.49882391508910473, 0.49607265477886986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.470100003922725, 0.49882391508910473, 0.49607265477886986, 0.48997289758989654] ***
*** finished computation of 3 references, err: [Inf, 1.470100003922725, 0.49882391508910473, 0.49607265477886986, 0.48997289758989654] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 23]]
** centroid: 2, normalized-entropy: 0.6051865766334207, [(2, 4), (3, 23)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 7]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 35), (3, 7)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3076999957802906] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3076999957802906, 0.5340145145370131] ***
*** starting iteration: 2; err: [Inf, 1.3076999957802906, 0.5340145145370131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3076999957802906, 0.5340145145370131, 0.5340145145370131] ***
*** finished computation of 3 references, err: [Inf, 1.3076999957802906, 0.5340145145370131, 0.5340145145370131] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 27]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 11]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 22)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.8933333333333332, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.98
finished with 23
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.5003343366270674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5003343366270674, 0.17168100695774835] ***
*** starting iteration: 2; err: [Inf, 0.5003343366270674, 0.17168100695774835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5003343366270674, 0.17168100695774835, 0.15985388281727347] ***
*** starting iteration: 3; err: [Inf, 0.5003343366270674, 0.17168100695774835, 0.15985388281727347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5003343366270674, 0.17168100695774835, 0.15985388281727347, 0.15837377646186096] ***
*** finished computation of 7 references, err: [Inf, 0.5003343366270674, 0.17168100695774835, 0.15985388281727347, 0.15837377646186096] ***
*** center 1: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 8]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5304759735934609] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5304759735934609, 0.17671491945246004] ***
*** starting iteration: 2; err: [Inf, 0.5304759735934609, 0.17671491945246004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5304759735934609, 0.17671491945246004, 0.16810247710784984] ***
*** starting iteration: 3; err: [Inf, 0.5304759735934609, 0.17671491945246004, 0.16810247710784984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5304759735934609, 0.17671491945246004, 0.16810247710784984, 0.16783195443061172] ***
*** finished computation of 7 references, err: [Inf, 0.5304759735934609, 0.17671491945246004, 0.16810247710784984, 0.16783195443061172] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 6]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 10, 13]]
** centroid: 5, normalized-entropy: 0.9876925088958032, [(2, 10), (3, 13)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37364900944257173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37364900944257173, 0.19929180116004894] ***
*** starting iteration: 2; err: [Inf, 0.37364900944257173, 0.19929180116004894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37364900944257173, 0.19929180116004894, 0.19443855097858895] ***
*** starting iteration: 3; err: [Inf, 0.37364900944257173, 0.19929180116004894, 0.19443855097858895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37364900944257173, 0.19929180116004894, 0.19443855097858895, 0.19172086682461598] ***
*** finished computation of 7 references, err: [Inf, 0.37364900944257173, 0.19929180116004894, 0.19443855097858895, 0.19172086682461598] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 26]]
** centroid: 1, normalized-entropy: 0.6962122601251459, [(2, 6), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 23)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.8933333333333332, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.98
finished with 25
iteration 7 finished
*** starting iteration: 1; err: [Inf, 1.1476746905681587] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1476746905681587, 0.381931384773672] ***
*** finished computation of 3 references, err: [Inf, 1.1476746905681587, 0.381931384773672] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0667052969357902] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0667052969357902, 0.3485192944154744] ***
*** finished computation of 3 references, err: [Inf, 1.0667052969357902, 0.3485192944154744] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 21]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 36, 9]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9150585519658542] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9150585519658542, 0.38617904551255] ***
*** finished computation of 3 references, err: [Inf, 0.9150585519658542, 0.38617904551255] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 18]]
** centroid: 3, normalized-entropy: 0.9601186626422924, [(2, 29), (3, 18)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1427000037962562] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1427000037962562, 0.5592034890061789] ***
*** finished computation of 3 references, err: [Inf, 1.1427000037962562, 0.5592034890061789] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 1, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1050000116417857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1050000116417857, 0.4887410199845762] ***
*** finished computation of 3 references, err: [Inf, 1.1050000116417857, 0.4887410199845762] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 29]]
** centroid: 1, normalized-entropy: 0.8485481782946159, [(2, 11), (3, 29)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 1]]
** centroid: 3, normalized-entropy: 0.21639693245126485, [(2, 28), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1000999976623524] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1000999976623524, 0.5591456566779827] ***
*** finished computation of 3 references, err: [Inf, 1.1000999976623524, 0.5591456566779827] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 18]]
** centroid: 3, normalized-entropy: 0.9601186626422924, [(2, 29), (3, 18)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 25)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.8933333333333332, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.98
finished with 25
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 25)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.8933333333333332, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.98
finished with 27
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.42616079353761366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42616079353761366, 0.21162924465426944] ***
*** starting iteration: 2; err: [Inf, 0.42616079353761366, 0.21162924465426944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42616079353761366, 0.21162924465426944, 0.19670947563291852] ***
*** starting iteration: 3; err: [Inf, 0.42616079353761366, 0.21162924465426944, 0.19670947563291852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42616079353761366, 0.21162924465426944, 0.19670947563291852, 0.19266853182798843] ***
*** finished computation of 7 references, err: [Inf, 0.42616079353761366, 0.21162924465426944, 0.19670947563291852, 0.19266853182798843] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 6]]
** centroid: 4, normalized-entropy: 0.8812908992306927, [(2, 14), (3, 6)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4366780936568378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4366780936568378, 0.1850564840058665] ***
*** starting iteration: 2; err: [Inf, 0.4366780936568378, 0.1850564840058665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4366780936568378, 0.1850564840058665, 0.17570058649336381] ***
*** starting iteration: 3; err: [Inf, 0.4366780936568378, 0.1850564840058665, 0.17570058649336381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4366780936568378, 0.1850564840058665, 0.17570058649336381, 0.1743178450028966] ***
*** finished computation of 7 references, err: [Inf, 0.4366780936568378, 0.1850564840058665, 0.17570058649336381, 0.1743178450028966] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 13]]
** centroid: 1, normalized-entropy: 0.8524051786494784, [(2, 5), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 3, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 6]]
** centroid: 5, normalized-entropy: 0.8997437586982626, [(2, 13), (3, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4212606408965871] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4212606408965871, 0.18874975467155317] ***
*** starting iteration: 2; err: [Inf, 0.4212606408965871, 0.18874975467155317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4212606408965871, 0.18874975467155317, 0.18583969878893264] ***
*** starting iteration: 3; err: [Inf, 0.4212606408965871, 0.18874975467155317, 0.18583969878893264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4212606408965871, 0.18874975467155317, 0.18583969878893264, 0.18187768444234134] ***
*** finished computation of 7 references, err: [Inf, 0.4212606408965871, 0.18874975467155317, 0.18583969878893264, 0.18187768444234134] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(2, 1), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 20, 6]]
** centroid: 6, normalized-entropy: 0.7793498372920851, [(2, 20), (3, 6)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.644200007619382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.644200007619382, 0.24810060365906345] ***
*** starting iteration: 2; err: [Inf, 0.644200007619382, 0.24810060365906345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.644200007619382, 0.24810060365906345, 0.23241828012605123] ***
*** starting iteration: 3; err: [Inf, 0.644200007619382, 0.24810060365906345, 0.23241828012605123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.644200007619382, 0.24810060365906345, 0.23241828012605123, 0.23084291447364894] ***
*** finished computation of 7 references, err: [Inf, 0.644200007619382, 0.24810060365906345, 0.23241828012605123, 0.23084291447364894] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 9]]
** centroid: 4, normalized-entropy: 0.9927744539878083, [(2, 11), (3, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4626000031189402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4626000031189402, 0.2860330862309326] ***
*** starting iteration: 2; err: [Inf, 0.4626000031189402, 0.2860330862309326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4626000031189402, 0.2860330862309326, 0.2727316710242605] ***
*** starting iteration: 3; err: [Inf, 0.4626000031189402, 0.2860330862309326, 0.2727316710242605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4626000031189402, 0.2860330862309326, 0.2727316710242605, 0.2682321333815515] ***
*** finished computation of 7 references, err: [Inf, 0.4626000031189402, 0.2860330862309326, 0.2727316710242605, 0.2682321333815515] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 19]]
** centroid: 1, normalized-entropy: 0.6665783579949205, [(2, 4), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 21, 4]]
** centroid: 4, normalized-entropy: 0.634309554640566, [(2, 21), (3, 4)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49260000429754014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49260000429754014, 0.25878027178499363] ***
*** starting iteration: 2; err: [Inf, 0.49260000429754014, 0.25878027178499363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49260000429754014, 0.25878027178499363, 0.2423472384351954] ***
*** starting iteration: 3; err: [Inf, 0.49260000429754014, 0.25878027178499363, 0.2423472384351954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49260000429754014, 0.25878027178499363, 0.2423472384351954, 0.23868319616252587] ***
*** finished computation of 7 references, err: [Inf, 0.49260000429754014, 0.25878027178499363, 0.2423472384351954, 0.23868319616252587] ***
*** center 1: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 10]]
** centroid: 3, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.016666666666667, 3.4277777777777776, 1.447222222222222, 0.2416666666666667], [7.650000000000001, 3.2000000000000006, 6.466666666666668, 2.1], [5.166666666666667, 2.733333333333333, 4.3, 1.5333333333333332], [6.45, 3.0199999999999996, 4.720000000000001, 1.53], [6.1499999999999995, 2.8899999999999997, 5.029999999999999, 1.9200000000000004], [5.2, 2.6, 3.3000000000000003, 1.1333333333333333], [6.66, 3.1066666666666674, 5.6000000000000005, 2.1933333333333334], [5.817647058823529, 2.6764705882352935, 4.2, 1.2529411764705882]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 2, 3, 2, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.3999999999999995, 2.4090909090909087, 3.6, 1.0818181818181818], [7.433333333333333, 2.9, 6.333333333333333, 1.9333333333333336], [5.30625, 3.65, 1.5187499999999998, 0.28750000000000003], [6.413333333333333, 2.9466666666666663, 4.633333333333335, 1.4400000000000002], [5.999999999999999, 2.65, 5.0600000000000005, 1.7700000000000002], [4.773333333333334, 3.1333333333333337, 1.4266666666666665, 0.1866666666666667], [5.585714285714286, 2.7928571428571423, 4.171428571428572, 1.3357142857142856], [6.70625, 3.10625, 5.587500000000001, 2.2]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.157142857142857, 3.647619047619048, 1.5190476190476194, 0.280952380952381], [7.4750000000000005, 2.9125, 6.312499999999999, 1.975], [5.664285714285714, 2.564285714285714, 4.028571428571429, 1.2142857142857142], [6.338095238095238, 2.9619047619047616, 5.466666666666666, 2.038095238095238], [6.370588235294118, 2.888235294117647, 4.623529411764705, 1.4705882352941175], [6.000000000000001, 2.7, 4.9625, 1.7875000000000003], [4.599999999999999, 3.033333333333333, 1.3916666666666666, 0.20000000000000004], [7.6000000000000005, 3.733333333333333, 6.3999999999999995, 2.2333333333333334]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 1, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[67, 29, 1, 1, 1, 9, 33, 21, 10, 13, 1, 40, 19, 32, 21, 2, 1, 29, 22, 34, 38, 40, 1, 32, 45, 2, 32, 26, 38, 23, 21, 2, 1, 59, 30, 37, 28, 38, 1, 43, 1, 24, 39, 34, 21, 28, 17, 17, 38, 40, 31, 37, 6, 18, 13, 13, 28, 38, 15, 21, 33, 35, 17, 44, 39, 29, 30, 43, 39, 21, 23, 39, 17, 19, 1, 28, 43, 29, 38, 43, 48, 44, 38, 1, 29, 32, 33, 47, 49, 9, 47, 32, 50, 32, 26, 32, 54, 15, 37, 43, 12, 48, 3, 43, 37, 53, 19, 46, 31, 35, 50, 43, 5, 25, 36, 23, 25, 46, 26, 33, 42, 2, 25, 54, 40, 39, 5, 44, 47, 40, 46, 16, 45, 42, 28, 28, 44, 32, 50, 40, 56, 35, 30, 41, 22, 5, 35, 24, 30, 25, 35, 21, 39, 24, 34, 18, 30, 34, 42, 30, 38, 36, 14, 44, 50, 50, 32, 32, 57, 23, 32, 21, 42, 48, 40, 44, 33, 27, 53, 46, 37, 42, 39, 29, 48, 64, 35, 35, 45, 31, 30, 42, 29, 40, 35, 22, 34, 22, 42, 23, 25, 26, 72, 42, 35, 52, 44, 43, 44, 52, 38, 1, 41, 35, 7, 36, 36, 46, 39, 36, 63, 51, 27, 50, 47, 20, 37, 1, 32, 36, 46, 17, 48, 36, 54, 45, 33, 29, 21, 34, 43, 10, 54, 68, 43, 40, 23, 16, 54, 36, 46, 43, 36, 33, 47, 30, 108, 36, 40, 45, 53, 40, 64, 28, 27, 27, 31, 27, 33, 48, 37, 45, 41, 32, 48, 46, 55, 44, 34, 29, 43, 42, 33, 49, 46, 19, 28, 47, 69, 48, 49, 10, 28, 26, 43, 9, 27, 23, 34, 56]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5840000000000001, speedup = 0.34613595923649304, eval_ratio = 0.042192)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.4383680555555557,"recall":0.4383680555555557,"f1":null,"seconds":6.979703903198242e-5,"exhaustive_search_seconds":0.0004186965525150299,"evaluations":341.0,"distances_sum":1741.8708381809188}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5963541666666667,"recall":0.5963541666666667,"f1":0.5963541666666667,"seconds":0.00010413862764835358,"exhaustive_search_seconds":0.0004186965525150299,"evaluations":382.5390625,"distances_sum":1631.172567466329}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.7005208333333329,"recall":0.7005208333333329,"f1":0.7005208333333329,"seconds":0.00013773515820503235,"exhaustive_search_seconds":0.0004186965525150299,"evaluations":422.4609375,"distances_sum":1588.0412833235332}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.75954861111111,"recall":0.75954861111111,"f1":0.75954861111111,"seconds":0.0001669861376285553,"exhaustive_search_seconds":0.0004186965525150299,"evaluations":461.1171875,"distances_sum":1569.662339136171}
KCenters.DeloneInvIndex> reached performance {"precision":0.8090277777777768,"recall":0.8090277777777768,"f1":0.8090277777777768,"seconds":0.00019695796072483063,"exhaustive_search_seconds":0.0004186965525150299,"evaluations":500.1953125,"distances_sum":1555.7474686615094}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7539999999999998, speedup = 1.6316930775646372, eval_ratio = 0.050393)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
