Julia Version 1.5.0-DEV.150
Commit 0234e009ab (2020-01-25 18:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed InplaceOps ───────── v0.3.0
 Installed Requires ─────────── v1.0.0
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed ArrayLayouts ─────── v0.1.5
 Installed Parameters ───────── v0.12.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed DataStructures ───── v0.17.9
 Installed StaticArrays ─────── v0.12.1
 Installed Rmath ────────────── v0.6.0
 Installed ProgressMeter ────── v1.2.0
 Installed OrderedCollections ─ v1.1.0
 Installed Missings ─────────── v0.4.3
 Installed ArgCheck ─────────── v1.0.1
 Installed StatsFuns ────────── v0.9.3
 Installed SpecialFunctions ─── v0.9.0
 Installed FillArrays ───────── v0.8.4
 Installed DataAPI ──────────── v1.1.0
 Installed MacroTools ───────── v0.5.3
 Installed LazyArrays ───────── v0.14.11
 Installed SortingAlgorithms ── v0.3.1
 Installed StatsBase ────────── v0.32.0
 Installed BinaryProvider ───── v0.5.8
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_JAcmTZ/Project.toml`
 [no changes]
  Updating `/tmp/jl_JAcmTZ/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed Bijectors ─────────────────── v0.5.2
 Installed Tracker ───────────────────── v0.2.6
 Installed ForwardDiff ───────────────── v0.10.9
 Installed Zygote ────────────────────── v0.4.6
 Installed Distributions ─────────────── v0.22.3
 Installed DocStringExtensions ───────── v0.8.1
 Installed UnicodePlots ──────────────── v1.1.0
 Installed OrdinaryDiffEq ────────────── v5.28.1
 Installed DiffResults ───────────────── v1.0.2
 Installed Turing ────────────────────── v0.8.3
 Installed CommonSubexpressions ──────── v0.2.0
 Installed Adapt ─────────────────────── v1.0.0
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed DynamicPPL ────────────────── v0.1.1
 Installed Inflate ───────────────────── v0.1.1
 Installed SimpleTraits ──────────────── v0.9.1
 Installed ArrayInterface ────────────── v2.3.1
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed Compat ────────────────────── v2.2.0
 Installed AxisArrays ────────────────── v0.4.1
 Installed IntervalSets ──────────────── v0.3.2
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed MuladdMacro ───────────────── v0.2.2
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed MappedArrays ──────────────── v0.2.2
 Installed FiniteDiff ────────────────── v2.0.1
 Installed NNlib ─────────────────────── v0.6.4
 Installed Tables ────────────────────── v0.2.11
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed FunctionWrappers ──────────── v1.0.0
 Installed Combinatorics ─────────────── v0.7.0
 Installed NLSolversBase ─────────────── v7.6.0
 Installed QuadGK ────────────────────── v2.3.1
 Installed LightGraphs ───────────────── v1.3.0
 Installed RecipesBase ───────────────── v0.7.0
 Installed IterTools ─────────────────── v1.3.0
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed TreeViews ─────────────────── v0.3.0
 Installed LogDensityProblems ────────── v0.10.1
 Installed FFTW ──────────────────────── v1.2.0
 Installed IterativeSolvers ──────────── v0.8.1
 Installed MCMCChains ────────────────── v1.0.1
 Installed JSON ──────────────────────── v0.21.0
 Installed ZygoteRules ───────────────── v0.2.0
 Installed IRTools ───────────────────── v0.3.0
 Installed NaNMath ───────────────────── v0.3.3
 Installed TableTraits ───────────────── v1.0.0
 Installed SparseDiffTools ───────────── v1.3.3
 Installed DataFrames ────────────────── v0.20.0
 Installed Optim ─────────────────────── v0.20.0
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed Arpack ────────────────────── v0.4.0
 Installed RecursiveFactorization ────── v0.1.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed RecursiveArrayTools ───────── v2.0.4
 Installed DataValueInterfaces ───────── v1.0.0
 Installed DistributionsAD ───────────── v0.2.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed ExponentialUtilities ──────── v1.6.0
 Installed GenericSVD ────────────────── v0.2.2
 Installed PooledArrays ──────────────── v0.5.3
 Installed PositiveFactorizations ────── v0.2.3
 Installed LineSearches ──────────────── v7.0.1
 Installed KernelDensity ─────────────── v0.5.1
 Installed Showoff ───────────────────── v0.3.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed RangeArrays ───────────────── v0.3.2
 Installed OffsetArrays ──────────────── v1.0.2
 Installed DiffEqBase ────────────────── v6.13.1
 Installed TransformVariables ────────── v0.3.9
 Installed Libtask ───────────────────── v0.3.1
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed Ratios ────────────────────── v0.3.1
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed BenchmarkTools ────────────── v0.4.3
 Installed Polynomials ───────────────── v0.6.0
 Installed DiffRules ─────────────────── v1.0.0
 Installed ChainRulesCore ────────────── v0.6.1
 Installed Interpolations ────────────── v0.12.7
 Installed Parsers ───────────────────── v0.3.10
 Installed PDMats ────────────────────── v0.9.11
 Installed Roots ─────────────────────── v0.8.4
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
  Updating `/tmp/jl_oWtVQO/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.22.3
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_oWtVQO/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.6.1
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.13.1
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.22.3
  [ced4e74d] + DistributionsAD v0.2.0
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [6a86dc24] + FiniteDiff v2.0.1
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.0
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.7
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.1
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v1.0.2
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.20.0
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [90014a1f] + PDMats v0.9.11
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.4
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.3.3
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_MTYH8Z/Project.toml`
 [no changes]
  Updating `/tmp/jl_MTYH8Z/Manifest.toml`
 [no changes]
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_vte7DE/Project.toml`
 [no changes]
  Updating `/tmp/jl_vte7DE/Manifest.toml`
 [no changes]
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_K8Bnfm/Project.toml`
 [no changes]
  Updating `/tmp/jl_K8Bnfm/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_oWtVQO/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.22.3
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.129136227
│   t_steps = 0.006176455
└   t_step / t_steps = 20.907822853076723
Sampling  0%|                               |  ETA: 5:31:31[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.000434983580514696
  log_density:                   -11.223412412378313
  hamiltonian_energy:            16.71550215381955
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  7.740202273531214
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  7%|██▎                            |  ETA: 0:00:32[K
  iterations:                    891
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8577115427852587
  log_density:                   -17.652760404073796
  hamiltonian_energy:            21.003403956897525
  hamiltonian_energy_error:      0.2850695816532358
  max_hamiltonian_energy_error:  0.3163750137822028
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.5981360099147521
  nom_step_size:                 0.5981360099147521
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.3530065359892247, 0.9139 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▉                            |  ETA: 0:00:26[K
  iterations:                    1091
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9469813717666364
  log_density:                   -17.169286025880464
  hamiltonian_energy:            23.101822367116284
  hamiltonian_energy_error:      -0.014246801536938136
  max_hamiltonian_energy_error:  -0.5698553387543264
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.9296275169640072
  nom_step_size:                 0.9296275169640072
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.3530065359892247, 0.9139 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:21[K
  iterations:                    1372
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               0.863619518428112
  log_density:                   -15.225383750007971
  hamiltonian_energy:            18.629960786735
  hamiltonian_energy_error:      0.33514964176786677
  max_hamiltonian_energy_error:  0.48733661906891257
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8337023650513045
  nom_step_size:                 0.8337023650513045
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.3530065359892247, 0.9139 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:19[K
  iterations:                    1568
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.8247402248320839
  log_density:                   -11.780990198995006
  hamiltonian_energy:            17.34957417698494
  hamiltonian_energy_error:      -0.398413068391843
  max_hamiltonian_energy_error:  0.7377074826200705
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8997223963876119
  nom_step_size:                 0.8997223963876119
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.3530065359892247, 0.9139 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▊                          |  ETA: 0:00:17[K
  iterations:                    1817
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.3765501187976153
  log_density:                   -18.67245001683385
  hamiltonian_energy:            19.985260640500766
  hamiltonian_energy_error:      1.386925841260652
  max_hamiltonian_energy_error:  1.386925841260652
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8301404799587537
  nom_step_size:                 0.8301404799587537
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.3530065359892247, 0.9139 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▏                         |  ETA: 0:00:15[K
  iterations:                    1992
  n_steps:                       63
  is_accept:                     true
  acceptance_rate:               0.5467268381952205
  log_density:                   -12.594986323912483
  hamiltonian_energy:            17.06908336305612
  hamiltonian_energy_error:      -1.1537621907606628
  max_hamiltonian_energy_error:  2.8662066819332956
  tree_depth:                    5
  numerical_error:               false
  step_size:                     1.5035932695071117
  nom_step_size:                 1.5035932695071117
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▏                        |  ETA: 0:00:13[K
  iterations:                    2376
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7920947548732045
  log_density:                   -16.48960577445148
  hamiltonian_energy:            23.786063463517856
  hamiltonian_energy_error:      0.05468617447375124
  max_hamiltonian_energy_error:  0.5938536016166225
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|███████                        |  ETA: 0:00:11[K
  iterations:                    2689
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.713864622875113
  log_density:                   -10.65259902747003
  hamiltonian_energy:            17.768257148364093
  hamiltonian_energy_error:      -0.05721105237904567
  max_hamiltonian_energy_error:  0.7487518942367366
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████                       |  ETA: 0:00:10[K
  iterations:                    3076
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9544499990875066
  log_density:                   -17.759120638946953
  hamiltonian_energy:            24.44594295377533
  hamiltonian_energy_error:      -0.07367333779058072
  max_hamiltonian_energy_error:  -0.3109854372639873
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▊                      |  ETA: 0:00:09[K
  iterations:                    3393
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9274047548901897
  log_density:                   -20.05920894663563
  hamiltonian_energy:            27.134592490127158
  hamiltonian_energy_error:      0.19467883628167826
  max_hamiltonian_energy_error:  0.19467883628167826
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|█████████▉                     |  ETA: 0:00:08[K
  iterations:                    3811
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9629585188329833
  log_density:                   -13.97210367071815
  hamiltonian_energy:            19.506253537069522
  hamiltonian_energy_error:      -0.15180784693057703
  max_hamiltonian_energy_error:  -0.21917900800085732
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▊                    |  ETA: 0:00:07[K
  iterations:                    4165
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9416975057571939
  log_density:                   -10.865116026907064
  hamiltonian_energy:            15.259545580221449
  hamiltonian_energy_error:      -0.2377885911939046
  max_hamiltonian_energy_error:  -0.264518053679609
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▊                   |  ETA: 0:00:06[K
  iterations:                    4532
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.987123680584352
  log_density:                   -16.521922484323227
  hamiltonian_energy:            20.529026309838358
  hamiltonian_energy_error:      -0.0037903021612883947
  max_hamiltonian_energy_error:  -0.4717199906892269
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▌                  |  ETA: 0:00:06[K
  iterations:                    4823
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7450119331586013
  log_density:                   -13.739598880903241
  hamiltonian_energy:            19.173525743714134
  hamiltonian_energy_error:      0.1701051660463584
  max_hamiltonian_energy_error:  0.5695004737337968
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 44%|█████████████▌                 |  ETA: 0:00:05[K
  iterations:                    5221
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9497759791019679
  log_density:                   -14.836273317939813
  hamiltonian_energy:            20.470320195499074
  hamiltonian_energy_error:      -0.04177534501979707
  max_hamiltonian_energy_error:  0.1275586418310901
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 46%|██████████████▎                |  ETA: 0:00:05[K
  iterations:                    5534
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9528587367131235
  log_density:                   -13.80360637185271
  hamiltonian_energy:            16.938237808656147
  hamiltonian_energy_error:      0.07442140798575636
  max_hamiltonian_energy_error:  0.116381646484502
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▍               |  ETA: 0:00:04[K
  iterations:                    5942
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8766738894863876
  log_density:                   -17.060216708542292
  hamiltonian_energy:            22.938246603860513
  hamiltonian_energy_error:      0.13128162604446558
  max_hamiltonian_energy_error:  0.37583584973491924
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████▏              |  ETA: 0:00:04[K
  iterations:                    6261
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8560267506149769
  log_density:                   -14.1909038960281
  hamiltonian_energy:            17.084350144780434
  hamiltonian_energy_error:      0.23934809086080477
  max_hamiltonian_energy_error:  0.2603405996855557
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▎             |  ETA: 0:00:04[K
  iterations:                    6661
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.742734341469706
  log_density:                   -14.291218051082371
  hamiltonian_energy:            16.581243791974906
  hamiltonian_energy_error:      0.40848940292763913
  max_hamiltonian_energy_error:  0.46320499420757955
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|██████████████████             |  ETA: 0:00:03[K
  iterations:                    6970
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.728712111891075
  log_density:                   -14.437982495661256
  hamiltonian_energy:            21.299548524859997
  hamiltonian_energy_error:      0.11623128522695936
  max_hamiltonian_energy_error:  0.5717769968028854
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|███████████████████            |  ETA: 0:00:03[K
  iterations:                    7356
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9516827293094731
  log_density:                   -10.665222219238185
  hamiltonian_energy:            12.628455582577036
  hamiltonian_energy_error:      -0.017498344868581484
  max_hamiltonian_energy_error:  0.1023198906674434
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|███████████████████▉           |  ETA: 0:00:03[K
  iterations:                    7677
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9225054143477588
  log_density:                   -11.570396177165339
  hamiltonian_energy:            15.507686410605022
  hamiltonian_energy_error:      -0.0885361815896939
  max_hamiltonian_energy_error:  0.17636282073939036
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▉          |  ETA: 0:00:02[K
  iterations:                    8078
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.909782106390489
  log_density:                   -14.587138822003135
  hamiltonian_energy:            19.411294165272363
  hamiltonian_energy_error:      0.06770218915162118
  max_hamiltonian_energy_error:  0.17276564871051647
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▊         |  ETA: 0:00:02[K
  iterations:                    8398
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.856011573664463
  log_density:                   -10.608602365017553
  hamiltonian_energy:            16.32754206087609
  hamiltonian_energy_error:      -0.3231032311239339
  max_hamiltonian_energy_error:  0.4026095569249115
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▊        |  ETA: 0:00:02[K
  iterations:                    8801
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9828445968188693
  log_density:                   -10.402707712561318
  hamiltonian_energy:            13.525178274439927
  hamiltonian_energy_error:      -0.2203923501346452
  max_hamiltonian_energy_error:  -0.2203923501346452
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▋       |  ETA: 0:00:02[K
  iterations:                    9122
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7319692206424631
  log_density:                   -17.40514678694172
  hamiltonian_energy:            19.408483326192798
  hamiltonian_energy_error:      0.7028647264512138
  max_hamiltonian_energy_error:  0.7028647264512138
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▋      |  ETA: 0:00:01[K
  iterations:                    9522
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9421689100859826
  log_density:                   -13.419176609172897
  hamiltonian_energy:            16.904168770849225
  hamiltonian_energy_error:      0.0639571569112789
  max_hamiltonian_energy_error:  0.11466713684144025
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 81%|█████████████████████████      |  ETA: 0:00:01[K
  iterations:                    9677
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.352441825407235
  hamiltonian_energy:            13.908754632677315
  hamiltonian_energy_error:      -0.0533489586196616
  max_hamiltonian_energy_error:  -0.2953317666127315
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▊     |  ETA: 0:00:01[K
  iterations:                    9977
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9919540615232008
  log_density:                   -12.048887696045602
  hamiltonian_energy:            15.49473873663018
  hamiltonian_energy_error:      -0.13751229637846762
  max_hamiltonian_energy_error:  -0.13751229637846762
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▌    |  ETA: 0:00:01[K
  iterations:                    10247
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8105101218718334
  log_density:                   -13.161832094792096
  hamiltonian_energy:            17.037539481683705
  hamiltonian_energy_error:      0.12970828645311272
  max_hamiltonian_energy_error:  0.37843212312687413
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:01[K
  iterations:                    10565
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9650377209653686
  log_density:                   -13.133310894368357
  hamiltonian_energy:            16.40995823463888
  hamiltonian_energy_error:      0.040490147626144335
  max_hamiltonian_energy_error:  0.08863926002142364
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▍  |  ETA: 0:00:01[K
  iterations:                    10963
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9859604473315091
  log_density:                   -15.203394090510853
  hamiltonian_energy:            19.7871173438513
  hamiltonian_energy_error:      0.014626531483383332
  max_hamiltonian_energy_error:  -0.11673178142708096
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▏ |  ETA: 0:00:00[K
  iterations:                    11292
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8905518456266573
  log_density:                   -13.63259874506516
  hamiltonian_energy:            19.512440364900357
  hamiltonian_energy_error:      -0.0958655622404585
  max_hamiltonian_energy_error:  0.34458349829507284
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████▎|  ETA: 0:00:00[K
  iterations:                    11695
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9537961768761648
  log_density:                   -13.667693219126416
  hamiltonian_energy:            19.770239522172687
  hamiltonian_energy_error:      -0.23842296961436205
  max_hamiltonian_energy_error:  -0.3625821935469169
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8962951417324171
  log_density:                   -15.700063983470589
  hamiltonian_energy:            19.14669169533193
  hamiltonian_energy_error:      0.24153744065807814
  max_hamiltonian_energy_error:  0.27894178698933203
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7408906434022478
  nom_step_size:                 0.7408906434022478
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9232179690539604, 0.9717 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.01488287 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9232179690539604, 0.9717 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.741), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.082331186207162
└   average_acceptance_rate = 0.8573938780912178
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.023457672 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            5 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠱⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢄⡀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢇⠀⠀⠀⠀⠀⠀⢰⢇⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠸⡀⠀⠀⠀⠀⠀⡎⠈⢆│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⢇⠀⢀⡄⠀⢰⠁⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠸⡔⠁⠘⢄⡎⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⡔⠊⡸⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⢆⠀⡎⠀⠀⠀⠀⠀⠀⠈⠃⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⡎⠈⠢⠎⠀⢀⠇⠀⢇⠀⠀⢀⣀⢄⠀⠀⠀⡰⠁⠀⠑⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⡜⠀⠀⠈⠒⠉⠁⠀⠀⠑⠤⠔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡆⠀⠀⢠⠃⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠹⡄⢠⠃⢀⣀⠤⠤⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠘⠗⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
