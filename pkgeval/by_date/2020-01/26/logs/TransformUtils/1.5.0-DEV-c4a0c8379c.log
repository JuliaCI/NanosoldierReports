Julia Version 1.5.0-DEV.152
Commit c4a0c8379c (2020-01-26 14:50 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_TnKakC/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_TnKakC/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_TnKakC/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.011164940632885086 0.18907617800399934; 0.011164940632885086 0.0 0.10815757235294261; -0.18907617800399934 -0.10815757235294261 0.0])
dAA = so3([0.0 0.026435076185203882 0.10914165013247912; -0.026435076185203882 0.0 0.11958882015948143; -0.10914165013247912 -0.11958882015948143 0.0])
dAA = so3([0.0 -0.08676503828768267 0.05082299158450546; 0.08676503828768267 0.0 -0.12393250751785019; -0.05082299158450546 0.12393250751785019 0.0])
dAA = Quaternion(0.9920040107747696, [-0.08958778576627277, 0.07466632827961854, -0.04823909897072812])
dAA = SO3([0.9898444357940779 0.0582211905993806 -0.12968533414651726; -0.04724865717078577 0.9951622844102797 0.08613705406427127; 0.13407295522610366 -0.07913482578804501 0.9878067230103442])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9611408135705835 0.024031177188798283 0.27501061618017114; -0.10446989749848544 0.9537774414971191 0.2817705318301852; -0.2555276443078767 -0.299551489086818 0.9192249607034924]), [-1.081575723529426, 1.8907617800399932, 0.11164940632885086])
xj = SE3(SO3([0.9041338414194271 0.17774884684532843 0.38851942582746907; -0.3364227767958452 0.8567285271642388 0.3909423819387802; -0.2633661178912791 -0.4841710216319748 0.834396014946576]), [1.2393250751785019, 0.5082299158450546, 0.8676503828768266])
Dx = SE3(SO3([0.9714433126218522 0.2050584104510321 0.11936891833965296; -0.22025334197881136 0.9664340072324917 0.1322640352163558; -0.08824032926869355 -0.15477841570401418 0.9840006536190452]), [2.181966295395832, -1.4893149441647524, 0.9436505880584483])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
