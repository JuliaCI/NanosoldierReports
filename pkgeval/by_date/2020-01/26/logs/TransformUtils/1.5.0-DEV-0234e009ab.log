Julia Version 1.5.0-DEV.150
Commit 0234e009ab (2020-01-25 18:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_aHFMWl/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_aHFMWl/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_aHFMWl/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.007913070424708301 0.005068730608479608; -0.007913070424708301 0.0 0.04130162699477695; -0.005068730608479608 -0.04130162699477695 0.0])
dAA = so3([0.0 0.10607227220560965 0.06518573609314655; -0.10607227220560965 0.0 -0.06241764976607248; -0.06518573609314655 0.06241764976607248 0.0])
dAA = so3([0.0 -0.057655065009310696 0.17525861780683594; 0.057655065009310696 0.0 0.0653577953289942; -0.17525861780683594 -0.0653577953289942 0.0])
dAA = Quaternion(0.9986334582691295, [-0.04769532715885904, -0.0160751762222365, -0.014069843711717777])
dAA = SO3([0.9938140729909958 -0.01882069244397501 -0.10945030772445224; 0.02112429187645294 0.999578278427698 0.019925601326887366; 0.10902913655425514 -0.02211440325780764 0.9937925339580617])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9520482896338303 0.27244206127046877 0.1392098324688192; -0.2472682960688154 0.9531409873209553 -0.17430045337881137; -0.1801733719630157 0.13152027045110837 0.9748025310266404]), [-0.41301626994776947, 0.05068730608479608, -0.079130704247083])
xj = SE3(SO3([0.9943258396154409 0.07559206474535891 -0.07484627192173395; -0.055839493071606974 0.9697573163183013 0.23759776611035688; 0.0905432255144173 -0.23207022039602446 0.9684757803470285]), [-0.6535779532899421, 1.7525861780683594, 0.5765506500931069])
Dx = SE3(SO3([0.9441400730004248 -0.12601006911463294 -0.3045012069540573; 0.22958154126871894 0.9143879657221284 0.33344709333150113; 0.23641454790987737 -0.38472861945048065 0.8922399065903157]), [-0.7679882938789139, 1.642845839342969, 0.30902954712968883])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
