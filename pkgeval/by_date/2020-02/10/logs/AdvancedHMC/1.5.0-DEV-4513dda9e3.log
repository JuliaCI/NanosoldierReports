Julia Version 1.5.0-DEV.256
Commit 4513dda9e3 (2020-02-10 18:52 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ArgCheck ─────────── v1.0.1
  Installed OpenSpecFun_jll ──── v0.5.3+1
  Installed Missings ─────────── v0.4.3
  Installed ArrayLayouts ─────── v0.1.5
  Installed OrderedCollections ─ v1.1.0
  Installed AdvancedHMC ──────── v0.2.20
  Installed DataStructures ───── v0.17.9
  Installed StatsBase ────────── v0.32.0
  Installed SortingAlgorithms ── v0.3.1
  Installed Parameters ───────── v0.12.0
  Installed ProgressMeter ────── v1.2.0
  Installed BinaryProvider ───── v0.5.8
  Installed MacroTools ───────── v0.5.4
  Installed LazyArrays ───────── v0.14.11
  Installed StaticArrays ─────── v0.12.1
  Installed SpecialFunctions ─── v0.9.0
  Installed InplaceOps ───────── v0.3.0
  Installed Requires ─────────── v1.0.1
  Installed DataAPI ──────────── v1.1.0
  Installed Rmath ────────────── v0.6.0
  Installed FillArrays ───────── v0.8.4
  Installed StatsFuns ────────── v0.9.3
#=#=#                                                                         ########################################                                  56.7%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         ####                                                                       6.9%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      #=#=-#  #                                                                     -#O#- #   #                                                                   ######################################################################## 100.0%
#=#=#                                                                         ###############                                                           21.9%#################################################                         69.4%######################################################################## 100.0%
#=#=#                                                                                                                                                    0.3%##                                                                         4.0%######                                                                     9.0%###########                                                               16.5%##################                                                        25.2%#########################                                                 36.0%###################################                                       49.0%################################################                          66.9%###########################################################               83.3%######################################################################## 100.0%
Status `/tmp/jl_9Ov76S/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.1.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [13072b0f] AxisAlgorithms v1.0.0
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.4.3
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.14.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.2.0
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.1.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.5
  [8197267c] IntervalSets v0.4.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5ab0869b] KernelDensity v0.5.1
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.1
  [c7f686f2] MCMCChains v1.0.2
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v1.0.2
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [429524aa] Optim v0.20.1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.3
  [85a6dd25] PositiveFactorizations v0.2.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [c84ed2f1] Ratios v0.4.0
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [992d4aef] Showoff v0.3.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.9
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [efce3f68] WoodburyMatrices v0.5.0
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.172303996
│   t_steps = 0.008250379
└   t_step / t_steps = 20.88437343302653
Sampling  0%|                               |  ETA: 5:46:16[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               2.676217924236543e-7
  log_density:                   -11.386596246036959
  hamiltonian_energy:            22.662269037087604
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  15.133691075447373
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  7%|██▎                            |  ETA: 0:00:34[K
  iterations:                    878
  n_steps:                       47
  is_accept:                     true
  acceptance_rate:               0.9933847852121033
  log_density:                   -13.305553191055964
  hamiltonian_energy:            18.01529396261141
  hamiltonian_energy_error:      -0.02691559191234205
  max_hamiltonian_energy_error:  -0.07792830365261949
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.42903491527947646
  nom_step_size:                 0.42903491527947646
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.988376538044872, 0.87818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▉                            |  ETA: 0:00:28[K
  iterations:                    1109
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9574523350068294
  log_density:                   -12.672208749095724
  hamiltonian_energy:            21.728642850654403
  hamiltonian_energy_error:      -0.605634549319884
  max_hamiltonian_energy_error:  -0.605634549319884
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715239016231351
  nom_step_size:                 0.715239016231351
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.988376538044872, 0.87818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▎                           |  ETA: 0:00:25[K
  iterations:                    1239
  n_steps:                       19
  is_accept:                     true
  acceptance_rate:               0.9774504095454544
  log_density:                   -16.21680222199153
  hamiltonian_energy:            21.02388451808598
  hamiltonian_energy_error:      -0.09683557100124673
  max_hamiltonian_energy_error:  -0.5426058613527367
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8682275890039712
  nom_step_size:                 0.8682275890039712
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.988376538044872, 0.87818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:25[K
  iterations:                    1322
  n_steps:                       255
  is_accept:                     true
  acceptance_rate:               0.7957249311815843
  log_density:                   -17.896092349069182
  hamiltonian_energy:            23.599599432146892
  hamiltonian_energy_error:      0.358319969938929
  max_hamiltonian_energy_error:  0.9977128526078616
  tree_depth:                    8
  numerical_error:               false
  step_size:                     0.785710655479734
  nom_step_size:                 0.785710655479734
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.988376538044872, 0.87818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|███▉                           |  ETA: 0:00:22[K
  iterations:                    1517
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               0.9643137813834571
  log_density:                   -16.940466809618485
  hamiltonian_energy:            20.938867666938755
  hamiltonian_energy_error:      0.09834737016088724
  max_hamiltonian_energy_error:  -0.5998004024527575
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8649498229738608
  nom_step_size:                 0.8649498229738608
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.988376538044872, 0.87818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:20[K
  iterations:                    1685
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               0.9085228633770326
  log_density:                   -12.350778132550357
  hamiltonian_energy:            16.588801668719576
  hamiltonian_energy_error:      -0.15608506575118142
  max_hamiltonian_energy_error:  0.5046994688359909
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8040445964447216
  nom_step_size:                 0.8040445964447216
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.988376538044872, 0.87818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████                          |  ETA: 0:00:17[K
  iterations:                    1938
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7196004838543822
  log_density:                   -10.584223930370218
  hamiltonian_energy:            14.733426029660567
  hamiltonian_energy_error:      -0.20830662048252968
  max_hamiltonian_energy_error:  0.6728516568627292
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8988824899582006
  nom_step_size:                 0.8988824899582006
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.988376538044872, 0.87818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▋                         |  ETA: 0:00:16[K
  iterations:                    2180
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8771888102154776
  log_density:                   -13.866222612849468
  hamiltonian_energy:            18.402938007950848
  hamiltonian_energy_error:      0.012890741483712276
  max_hamiltonian_energy_error:  0.36319262023319965
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▋                        |  ETA: 0:00:13[K
  iterations:                    2543
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6133625753087623
  log_density:                   -16.84005668745196
  hamiltonian_energy:            21.90163167140503
  hamiltonian_energy_error:      0.5960212183934424
  max_hamiltonian_energy_error:  0.9665268527451083
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▌                       |  ETA: 0:00:12[K
  iterations:                    2880
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5248428640638082
  log_density:                   -14.93389646925747
  hamiltonian_energy:            25.40550990920014
  hamiltonian_energy_error:      0.07511281293174932
  max_hamiltonian_energy_error:  1.2233610787800444
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▋                      |  ETA: 0:00:10[K
  iterations:                    3334
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6076233246112811
  log_density:                   -20.196413943579046
  hamiltonian_energy:            27.625614507784267
  hamiltonian_energy_error:      0.6520540851324448
  max_hamiltonian_energy_error:  0.9367286747861421
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▌                     |  ETA: 0:00:09[K
  iterations:                    3656
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.9719741635691207
  log_density:                   -11.49340858075938
  hamiltonian_energy:            18.303644886703264
  hamiltonian_energy_error:      -0.6947745678264035
  max_hamiltonian_energy_error:  -0.8214007231039275
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▌                    |  ETA: 0:00:08[K
  iterations:                    4049
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.9813243439995998
  log_density:                   -13.128721555403752
  hamiltonian_energy:            18.889911444527037
  hamiltonian_energy_error:      -0.2963929854762668
  max_hamiltonian_energy_error:  -0.4011670510556158
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████▎                   |  ETA: 0:00:07[K
  iterations:                    4379
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9944567893493643
  log_density:                   -14.079402936926584
  hamiltonian_energy:            21.94256436007131
  hamiltonian_energy_error:      -0.5669492649761523
  max_hamiltonian_energy_error:  -0.6113342524648857
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▎                  |  ETA: 0:00:06[K
  iterations:                    4763
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8698836400279345
  log_density:                   -13.564256872264199
  hamiltonian_energy:            16.970690002868107
  hamiltonian_energy_error:      0.15082982910423937
  max_hamiltonian_energy_error:  0.24707918763933634
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████▏                 |  ETA: 0:00:06[K
  iterations:                    5063
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9186506530657358
  log_density:                   -13.679527656062042
  hamiltonian_energy:            17.43931571943686
  hamiltonian_energy_error:      0.05759194710937976
  max_hamiltonian_energy_error:  0.2339256126599203
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|██████████████▏                |  ETA: 0:00:05[K
  iterations:                    5454
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9670526247434722
  log_density:                   -15.358161589187102
  hamiltonian_energy:            18.412268905829478
  hamiltonian_energy_error:      0.10299152639989373
  max_hamiltonian_energy_error:  -0.29625727143368863
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▉                |  ETA: 0:00:05[K
  iterations:                    5780
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8625230233784968
  log_density:                   -14.328605214974509
  hamiltonian_energy:            15.66776160376537
  hamiltonian_energy_error:      0.3206409930714873
  max_hamiltonian_energy_error:  0.3206409930714873
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|████████████████               |  ETA: 0:00:04[K
  iterations:                    6175
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9588970941274547
  log_density:                   -11.756573652956249
  hamiltonian_energy:            14.042527075129705
  hamiltonian_energy_error:      -0.0029717757934708544
  max_hamiltonian_energy_error:  0.13500486085313312
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▊              |  ETA: 0:00:04[K
  iterations:                    6470
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6936740947727892
  log_density:                   -12.852737396578963
  hamiltonian_energy:            15.991834238450206
  hamiltonian_energy_error:      0.36702626183805975
  max_hamiltonian_energy_error:  0.7168109011817627
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▊             |  ETA: 0:00:04[K
  iterations:                    6852
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9979487193726598
  log_density:                   -15.550594233923272
  hamiltonian_energy:            18.78306204058453
  hamiltonian_energy_error:      0.014463051914752612
  max_hamiltonian_energy_error:  -0.33024116268895654
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▌            |  ETA: 0:00:03[K
  iterations:                    7164
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9429687206881542
  log_density:                   -16.350596142188028
  hamiltonian_energy:            19.08045184089155
  hamiltonian_energy_error:      0.21504401770473436
  max_hamiltonian_energy_error:  -0.3830096507514291
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▌           |  ETA: 0:00:03[K
  iterations:                    7549
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9104002502873124
  log_density:                   -14.195018527924477
  hamiltonian_energy:            18.6998155777625
  hamiltonian_energy_error:      0.06536842060990367
  max_hamiltonian_energy_error:  0.15829475491713652
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████▎          |  ETA: 0:00:03[K
  iterations:                    7853
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9921149269511143
  log_density:                   -16.739250613644415
  hamiltonian_energy:            25.74468538308721
  hamiltonian_energy_error:      -0.34202730600863873
  max_hamiltonian_energy_error:  -0.34202730600863873
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▌         |  ETA: 0:00:02[K
  iterations:                    8300
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9359957425825977
  log_density:                   -12.68770000121582
  hamiltonian_energy:            15.513651938953402
  hamiltonian_energy_error:      0.053987560575910365
  max_hamiltonian_energy_error:  0.19904386351800696
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▍        |  ETA: 0:00:02[K
  iterations:                    8654
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7115377289994472
  log_density:                   -13.554635100810465
  hamiltonian_energy:            21.414632491133382
  hamiltonian_energy_error:      -0.057662018198513465
  max_hamiltonian_energy_error:  0.569064318014032
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:02[K
  iterations:                    9084
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8066169621713283
  log_density:                   -13.415607961501127
  hamiltonian_energy:            14.757049392500456
  hamiltonian_energy_error:      0.38222618291355737
  max_hamiltonian_energy_error:  0.3913948902271809
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▌      |  ETA: 0:00:01[K
  iterations:                    9480
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9918091728588292
  log_density:                   -15.463860372901623
  hamiltonian_energy:            20.409072624156074
  hamiltonian_energy_error:      -0.03511008086282885
  max_hamiltonian_energy_error:  -0.1425496211574
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▌     |  ETA: 0:00:01[K
  iterations:                    9848
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9983275214301474
  log_density:                   -13.677093167943292
  hamiltonian_energy:            21.557709344922745
  hamiltonian_energy_error:      -0.6172695250829818
  max_hamiltonian_energy_error:  -0.6172695250829818
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▍    |  ETA: 0:00:01[K
  iterations:                    10192
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9969719793763391
  log_density:                   -11.245442183259787
  hamiltonian_energy:            16.51336413586688
  hamiltonian_energy_error:      -0.5207606120550494
  max_hamiltonian_energy_error:  -0.5207606120550494
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:01[K
  iterations:                    10564
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7744834491325451
  log_density:                   -14.410374352912108
  hamiltonian_energy:            18.068306059007995
  hamiltonian_energy_error:      0.3076837380022859
  max_hamiltonian_energy_error:  0.49070557103567936
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▏  |  ETA: 0:00:01[K
  iterations:                    10893
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8229063340974802
  log_density:                   -10.459620430414653
  hamiltonian_energy:            15.916760452331555
  hamiltonian_energy_error:      -0.2755999389475079
  max_hamiltonian_energy_error:  0.44937504053769217
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████  |  ETA: 0:00:00[K
  iterations:                    11233
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9557028525130996
  log_density:                   -11.184632294432175
  hamiltonian_energy:            14.460747481354735
  hamiltonian_energy_error:      -0.11938449992874922
  max_hamiltonian_energy_error:  -0.14511465773272825
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▉ |  ETA: 0:00:00[K
  iterations:                    11557
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9593899742574187
  log_density:                   -13.41667681988812
  hamiltonian_energy:            20.94870340671355
  hamiltonian_energy_error:      -0.5292197776003604
  max_hamiltonian_energy_error:  -0.5292197776003604
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 99%|██████████████████████████████▉|  ETA: 0:00:00[K
  iterations:                    11934
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.846999513830974
  hamiltonian_energy:            22.714444494089157
  hamiltonian_energy_error:      -1.453985588812973
  max_hamiltonian_energy_error:  -1.453985588812973
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6165039810379892
  log_density:                   -15.540792920581982
  hamiltonian_energy:            26.32305596319453
  hamiltonian_energy_error:      0.043631062167069246
  max_hamiltonian_energy_error:  1.2033759779829083
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7602442242930145
  nom_step_size:                 0.7602442242930145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9450146798634721, 0.8883 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.225939485 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9450146798634721, 0.8883 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.76), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0884200594085376
└   average_acceptance_rate = 0.8519886390567937
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.995563285 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Matrix mode: Test Failed at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:48
  Expression: ≈(mean(samples), zeros(D, n_chains), atol = RNDATOL * n_chains)
   Evaluated: [-0.02020964259461344 -0.045749804818885936 … -0.022439289988664502 -0.014108280745869362; 0.003645197070350799 -0.0067080850303212645 … 0.012467223849851895 0.03977422080000962; … ; -0.04779279486971371 -1.0287632982868096 … -0.02681727884069695 0.0689856247557834; -0.03822700890654822 0.7098069884930642 … 0.009069826982588142 0.3262844579969228] ≈ [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0] (atol=1.25)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:48
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:6
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡆⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠈⠑⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠸⡀⠀⢠⢄⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⢣⡰⠁⠀⠙│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠇⠀⠀⠀⠀⠀⠀⢰⢆⠀⠀⢀⠤⠔⠒⠒⠒⠒⠢⡀⡜⠀⠀⠈⠁⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠱⠔⠁⠀⠀⠀⠀⠀⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⣀⣀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢣⠀⠀⠀⡰⠁⠀⠀⠀⡠⠒⠉⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠣⡣⣀⠴⠓⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠘⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary:                                            | Pass  Fail  Total
AdvancedHMC                                              | 2874     1   2875
  Online v.s. naive v.s. true var/cov estimation         |   12           12
  Preconditioner constructors                            |    2            2
  Stan HMC adaptors                                      |   12           12
  Adapted mass v.s. true variance                        |   20           20
  Initialisation adaptor by metric                       |    2            2
  rand momentum variables from metric via vector of RNGs |    2            2
  Passing random number generator                        |   12           12
  TreeSampler                                            |    5            5
  TerminationCriterion                                   |    2            2
  Termination                                            |   20           20
  BinaryTree                                             |    4            4
  ClassicNoUTurn                                         |    4            4
  PhasePoint                                             |    4            4
  Metric                                                 |   60           60
  step(::Leapfrog) against step(::Leapfrog)              |    2            2
  jitter                                                 |    4            4
  temper                                                 |    7            7
  Eq (2.11) from (Neal, 2011)                            |    4            4
  `gdemo`                                                |    1            1
  HMC and NUTS                                           | 2664         2664
  drop_warmup                                            |    4            4
  Matrix mode                                            |   27     1     28
ERROR: LoadError: Some tests did not pass: 2874 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/runtests.jl:3
ERROR: Package AdvancedHMC errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
