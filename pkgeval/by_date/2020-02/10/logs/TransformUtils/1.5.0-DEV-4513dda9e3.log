Julia Version 1.5.0-DEV.256
Commit 4513dda9e3 (2020-02-10 18:52 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_CiNUAy/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.15314830470905416 -0.13715257900450892; -0.15314830470905416 0.0 -0.13034732062089383; 0.13715257900450892 0.13034732062089383 0.0])
dAA = so3([0.0 0.20159571117190278 0.0619488751333036; -0.20159571117190278 0.0 0.0704319531932673; -0.0619488751333036 -0.0704319531932673 0.0])
dAA = so3([0.0 0.11273329499717817 -0.06509086124172349; -0.11273329499717817 0.0 -0.02572381992784652; 0.06509086124172349 0.02572381992784652 0.0])
dAA = Quaternion(0.9953010173977934, [-0.09518515416124632, -0.016460268660290316, 0.006688105101460469])
dAA = SO3([0.9934710492206887 -0.06947483987690611 0.09049044692354419; 0.07245470002632318 0.9969183553522681 -0.030068408767756915; -0.0881225896376181 0.03642855179399332 0.9954433031618392])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8645471130827834 0.4651448936982117 0.1902590789599911; -0.4917197757363001 0.8611271867580518 0.12911866780603826; -0.10377837640890085 -0.20518332313480714 0.9732059661229424]), [1.3034732062089383, -1.371525790045089, -1.5314830470905416])
xj = SE3(SO3([0.9961303505922142 -0.021113061921646224 -0.08531449610309501; 0.05797063627635388 0.8874500132093985 0.45724378550654254; 0.06605853433695731 -0.46042014798543635 0.8852398304246832]), [0.2572381992784652, -0.6509086124172349, -1.1273329499717817])
Dx = SE3(SO3([0.8258408631480995 -0.406848302781325 -0.3904629653101016; 0.4997109273703372 0.848857236322089 0.17242500227723076; 0.2612964940857031 -0.3375142232078238 0.9043275354156477]), [-1.3008032127272648, 0.050967311846096375, 0.2873107069043077])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
