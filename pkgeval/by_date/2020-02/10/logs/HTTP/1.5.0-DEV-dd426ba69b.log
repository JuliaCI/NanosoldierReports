Julia Version 1.5.0-DEV.255
Commit dd426ba69b (2020-02-09 18:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed IniFile ──────── v0.5.0
  Installed MbedTLS ──────── v0.7.0
  Installed HTTP ─────────── v0.8.8
  Installed BinaryProvider ─ v0.5.8
   Updating `~/.julia/environments/v1.5/Project.toml`
  [cd3eb016] + HTTP v0.8.8
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [b99e7846] + BinaryProvider v0.5.8
  [cd3eb016] + HTTP v0.8.8
  [83e8ac13] + IniFile v0.5.0
  [739be429] + MbedTLS v0.7.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Building MbedTLS → `~/.julia/packages/MbedTLS/a1JFn/deps/build.log`
    Testing HTTP
Status `/tmp/jl_L4RpJf/Manifest.toml`
  [b99e7846] BinaryProvider v0.5.8
  [e1450e63] BufferedStreams v1.0.0
  [34da2185] Compat v2.2.0
  [187b0558] ConstructionBase v1.0.0
  [cd3eb016] HTTP v0.8.8
  [83e8ac13] IniFile v0.5.0
  [682c06a0] JSON v0.21.0
  [739be429] MbedTLS v0.7.0
  [69de0a69] Parsers v0.3.11
  [1986cc42] Unitful v1.0.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Running ascii.jl tests...
Running chunking.jl tests...
Running utils.jl tests...
Running client.jl tests...
Client Streaming Test: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:76
  Expression: a == b
   Evaluated: Dict{String,Any}[Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 0,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 1,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 2,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 3,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 4,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 5,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 6,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 7,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 8,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 9,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6")  …  Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 90,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 91,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 92,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 93,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 94,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 95,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 96,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 97,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 98,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c5-fe6cc88c0e3f9c784acaf616"),"args" => Dict{String,Any}(),"id" => 99,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6")] == Dict{String,Any}[Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 0,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 1,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 2,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 3,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 4,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 5,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 6,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 7,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 8,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 9,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6")  …  Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 90,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 91,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 92,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 93,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 94,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 95,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 96,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 97,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 98,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224c7-c2f5bf681a34c7809cecb1b6"),"args" => Dict{String,Any}(),"id" => 99,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6")]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:76
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:57
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
client transfer-encoding chunked
Client Streaming Test: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:76
  Expression: a == b
   Evaluated: Dict{String,Any}[Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 0,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 1,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 2,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 3,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 4,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 5,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 6,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 7,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 8,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 9,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6")  …  Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 90,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 91,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 92,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 93,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 94,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 95,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 96,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 97,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 98,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-804fd280f32d5718d546b552"),"args" => Dict{String,Any}(),"id" => 99,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6")] == Dict{String,Any}[Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 0,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 1,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 2,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 3,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 4,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 5,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 6,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 7,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 8,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 9,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6")  …  Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 90,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 91,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 92,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 93,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 94,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 95,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 96,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 97,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 98,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e4224dd-23ad8bba0649669cac8c5e88"),"args" => Dict{String,Any}(),"id" => 99,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6")]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:76
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:57
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
client transfer-encoding chunked
Running multipart.jl tests...
Running sniff.jl tests...
Running uri.jl tests...
Running url.jl tests...
Running cookies.jl tests...
Running parser.jl tests...
WARNING: using Messages.status in module Main conflicts with an existing identifier.
Running loopback.jl tests...
📡  GET /echo HTTP/1.1
📡  GET /echo HTTP/1.1
📡  GET /echo HTTP/1.1
📡  GET /echo HTTP/1.1
📡  GET /delay10 HTTP/1.1
📡  PUT /delay10 HTTP/1.1
📡  PUT /abort HTTP/1.1
📡  GET /echo HTTP/1.1
📡  GET /abort HTTP/1.1
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
t = 2.962629795074463
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
t = 0.6546931266784668
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
t = 0.7361478805541992
📡  POST /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  POST /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
Running websockets.jl tests...
Running messages.jl tests...
GET /ip HTTP/1.1
HTTP/1.1 200 OK <= (GET /ip HTTP/1.1)
HEAD /ip HTTP/1.1
HTTP/1.1 200 OK <= (HEAD /ip HTTP/1.1)
OPTIONS /ip HTTP/1.1
HTTP/1.1 200 OK <= (OPTIONS /ip HTTP/1.1)
GET /ip HTTP/1.1
HTTP/1.1 200 OK <= (GET /ip HTTP/1.1)
HEAD /ip HTTP/1.1
HTTP/1.1 200 OK <= (HEAD /ip HTTP/1.1)
OPTIONS /ip HTTP/1.1
HTTP/1.1 200 OK <= (OPTIONS /ip HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x72, 0x67, 0x2f, 0x70, 0x75, 0x74, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x72, 0x67, 0x2f, 0x70, 0x75, 0x74, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x72, 0x67, 0x2f, 0x70, 0x75, 0x74, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x72, 0x67, 0x2f, 0x70, 0x75, 0x74, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
GET /stream/50 HTTP/1.1
HTTP/1.1 200 OK <= (GET /stream/50 HTTP/1.1)
Running handlers.jl tests...
Running server.jl tests...
length(x) = 100018
client:
HTTP/1.1 200 OK
Transfer-Encoding: chunked

f
Body of Request
0


client = "HTTP/1.1 200 OK\r\n\r\nHello"
Testing server port reuse
Starting second server listening on same port
Starting server on same port without port reuse (throws error)
Running async.jl tests...
ConnectionPool[
   ⏸    6↑🔒    6↓    0s httpbin.org:443:51216 ≣16
   ⏸    5↑🔒    4↓🔒   0s httpbin.org:443:52854 ≣16 449 bytes waiting
   🔁    6↑     5↓🔒   0s httpbin.org:443:43222 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:52858 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:52860 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:51226 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:52864 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:51230 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:51248 ≣16
   🔁    6↑🔒    5↓🔒   0s httpbin.org:443:52886 ≣16
   🔁    6↑     4↓🔒   0s httpbin.org:443:52888 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:52890 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:43258 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:52894 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:52896 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:52898 ≣16
]

ConnectionPool[
   🔁    3↑🔒    2↓🔒   0s httpbin.org:80:54626 ≣16
   ⏸    3↑🔒    3↓    0s httpbin.org:80:49738 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:80:54630 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:80:54632 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:80:49744 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:80:49746 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:80:49748 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:80:49750 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:52916 ≣16
   ⏸    6↑🔒    6↓    0s httpbin.org:443:52918 ≣16
   🔁    6↑     5↓🔒   0s httpbin.org:443:52920 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:52922 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:51288 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:43292 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:52928 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:51294 ≣16
]

ConnectionPool[
   🔁    6↑🔒    5↓🔒   0s httpbin.org:443:43340 ≣16
   ⏸    6↑🔒    6↓    0s httpbin.org:443:52976 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:51342 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:52980 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:51346 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:52984 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:43352 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:52990 ≣16
]

ConnectionPool[
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:49838 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:54730 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:54732 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:49844 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:49846 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:49848 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:54740 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:49852 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:53032 ≣16
   🔁    6↑🔒    6↓🔒   0s httpbin.org:443:43400 ≣16
   🔁    5↑🔒    5↓🔒   0s httpbin.org:443:51402 ≣16
   🔁    4↑🔒    4↓🔒   0s httpbin.org:443:53040 ≣16
   🔁    3↑🔒    3↓🔒   0s httpbin.org:443:51406 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:443:51410 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:443:53048 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:443:51418 ≣16
]

ConnectionPool[
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:54794 ≣16 2-byte excess
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:49906 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:49908 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:49910 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:54802 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:49914 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:49916 ≣16 2-byte excess
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:54808 ≣16
]

ConnectionPool[
   🔁   12↑    12↓    0s httpbin.org:80:54794 ≣16
   🔁   14↑    14↓    0s httpbin.org:80:49906 ≣16
   🔁   11↑    11↓    0s httpbin.org:80:49908 ≣16
   🔁   13↑🔒   13↓🔒   0s httpbin.org:80:49910 ≣16
   🔁   11↑🔒   11↓🔒   0s httpbin.org:80:54802 ≣16
   🔁   12↑🔒   12↓🔒   0s httpbin.org:80:49914 ≣16 2-byte excess
   🔁   10↑🔒   10↓🔒   0s httpbin.org:80:49916 ≣16
   🔁   12↑🔒   12↓🔒   0s httpbin.org:80:54808 ≣16 2-byte excess 432 bytes waiting
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:43454 ≣16
   🔁    6↑🔒    6↓🔒   0s httpbin.org:443:51454 ≣16
   🔁    5↑🔒    5↓🔒   0s httpbin.org:443:53092 ≣16
   🔁    4↑🔒    4↓🔒   0s httpbin.org:443:51460 ≣16
   🔁    3↑🔒    3↓🔒   0s httpbin.org:443:53098 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:443:51466 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:443:51468 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:443:51470 ≣16
]

ConnectionPool[
   🔁    3↑🔒    3↓🔒   0s httpbin.org:80:59124 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:59126 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:49952 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:54844 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:49956 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:49958 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:54850 ≣16 2-byte excess
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:59138 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:53130 ≣16
   🔁    5↑🔒    5↓🔒   0s httpbin.org:443:53134 ≣16
   🔁    5↑🔒    5↓🔒   0s httpbin.org:443:51500 ≣16
   🔁    4↑🔒    4↓🔒   0s httpbin.org:443:53138 ≣16
   🔁    3↑🔒    3↓🔒   0s httpbin.org:443:51504 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:443:51508 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:443:53148 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:443:53150 ≣16
]

ConnectionPool[
   🔁    3↑🔒    2↓🔒   0s httpbin.org:80:54878 ≣16
   🔁    3↑🔒    2↓🔒   0s httpbin.org:80:59166 ≣16
   🔁    4↑     2↓🔒   0s httpbin.org:80:49992 ≣16
   🔁    3↑     1↓🔒   0s httpbin.org:80:54884 ≣16
   🔁    3↑     1↓🔒   0s httpbin.org:80:54886 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:80:49998 ≣16
   🔁    2↑     0↓🔒   0s httpbin.org:80:50000 ≣16 2-byte excess
   🔁    1↑     0↓🔒   0s httpbin.org:80:50002 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:43534 ≣16
   ⏸    6↑🔒    6↓    0s httpbin.org:443:53170 ≣16
   🔁    6↑     5↓🔒   0s httpbin.org:443:51536 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:51538 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:51540 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:53178 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:51544 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:43548 ≣16
]

ConnectionPool[
   🔁    3↑🔒    2↓🔒   0s httpbin.org:80:50022 ≣16 2-byte excess
   🔁    3↑🔒    2↓🔒   0s httpbin.org:80:50024 ≣16
   🔁    4↑     2↓🔒   0s httpbin.org:80:54918 ≣16
   🔁    3↑     1↓🔒   0s httpbin.org:80:54920 ≣16
   🔁    3↑     1↓🔒   0s httpbin.org:80:54922 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:80:59210 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:80:59212 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:80:59214 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:53204 ≣16
   ⏸    6↑🔒    6↓    0s httpbin.org:443:51570 ≣16
   🔁    6↑     5↓🔒   0s httpbin.org:443:43574 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:51574 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:43578 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:53214 ≣16
   🔁    2↑     0↓🔒   0s httpbin.org:443:43582 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:51582 ≣16
]

ConnectionPool[
   🔁   14↑    14↓    0s httpbin.org:80:59232 ≣16
   🔁   14↑    12↓🔒   0s httpbin.org:80:59234 ≣16 2-byte excess
   🔁   14↑    14↓    0s httpbin.org:80:59236 ≣16
   🔁   14↑    14↓    0s httpbin.org:80:54952 ≣16
   🔁   12↑    12↓    0s httpbin.org:80:59240 ≣16
   🔁   12↑    12↓    0s httpbin.org:80:54956 ≣16
   🔁   10↑    10↓    0s httpbin.org:80:50068 ≣16
   🔁   10↑    10↓    0s httpbin.org:80:54960 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:43602 ≣16
   🔁    6↑🔒    5↓🔒   0s httpbin.org:443:51602 ≣16
   🔁    6↑     5↓🔒   0s httpbin.org:443:43606 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:53242 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:53244 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:43612 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:53248 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:53250 ≣16
]

Running aws4.jl tests...
Running insert_layers.jl tests...
WARNING: replacing module TestRequest.
WARNING: using TestRequest.TestLayer in module Main conflicts with an existing identifier.
Running mwe.jl tests...
Test Summary:                                                                    | Pass  Fail  Broken  Total
HTTP                                                                             | 4743    10     107   4860
  ascii.jl                                                                       |  648                  648
  Chunking                                                                       |   15                   15
  utils.jl                                                                       |   26                   26
  Custom HTTP Stack                                                              |    1                    1
  Client.jl - http                                                               |   56     1             57
    GET, HEAD, POST, PUT, DELETE, PATCH                                          |    7                    7
    ASync Client Requests                                                        |    2                    2
    Query to URI                                                                 |    1                    1
    Cookie Requests                                                              |    4                    4
    Client Streaming Test                                                        |    4     1              5
    Client Body Posting - Vector{UTF8}, String, IOStream, IOBuffer, BufferStream |    5                    5
    Chunksize                                                                    |    5                    5
    ASync Client Request Body                                                    |    1                    1
    Client Redirect Following - GET                                              |    6                    6
    Client Redirect Following - HEAD                                             |    6                    6
    Client Basic Auth                                                            |    3                    3
    Misc                                                                         |    8                    8
    openraw client method - wss                                                  |    2                    2
    openraw client method - ws                                                   |    2                    2
  Client.jl - https                                                              |   56     1             57
    GET, HEAD, POST, PUT, DELETE, PATCH                                          |    7                    7
    ASync Client Requests                                                        |    2                    2
    Query to URI                                                                 |    1                    1
    Cookie Requests                                                              |    4                    4
    Client Streaming Test                                                        |    4     1              5
    Client Body Posting - Vector{UTF8}, String, IOStream, IOBuffer, BufferStream |    5                    5
    Chunksize                                                                    |    5                    5
    ASync Client Request Body                                                    |    1                    1
    Client Redirect Following - GET                                              |    6                    6
    Client Redirect Following - HEAD                                             |    6                    6
    Client Basic Auth                                                            |    3                    3
    Misc                                                                         |    8                    8
    openraw client method - wss                                                  |    2                    2
    openraw client method - ws                                                   |    2                    2
  Public entry point of HTTP.request and friends (e.g. issue #463)               |  205                  205
  HTTP.Form for multipart/form-data                                              |    4                    4
  sniff.jl                                                                       |   47                   47
  HTTP.URI                                                                       |  128                  128
  HTTP.URL                                                                       |   12                   12
  Cookies                                                                        |   57                   57
  HTTP.parser                                                                    |  727           106    833
  loopback                                                                       |   53                   53
  websockets.jl                                                                  |    8                    8
  HTTP.Messages                                                                  |  141     8            149
    Body Length                                                                  |   13                   13
    Body Bytes                                                                   |    7                    7
    Request                                                                      |    7                    7
    Header Append                                                                |   11                   11
    HTTP Version                                                                 |    6                    6
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Write to file                                                                |   51                   51
  Handlers                                                                       |   31                   31
  HTTP.listen                                                                    |   27                   27
  ASync                                                                          | 2400                 2400
  AWS Signature Version 4                                                        |   96                   96
  HTTP Stack Inserting                                                           |    5                    5
ERROR: LoadError: Some tests did not pass: 4743 passed, 10 failed, 0 errored, 107 broken.
in expression starting at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/runtests.jl:8
ERROR: Package HTTP errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
