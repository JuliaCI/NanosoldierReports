Julia Version 1.5.0-DEV.335
Commit 6f3c5ce0f5 (2020-02-24 18:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed WeakRefStrings ────────────── v0.6.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed TableTraits ───────────────── v1.0.0
  Installed OrderedCollections ────────── v1.1.0
  Installed MacroTools ────────────────── v0.5.4
  Installed FilePathsBase ─────────────── v0.7.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed PooledArrays ──────────────── v0.5.3
  Installed Compat ────────────────────── v2.2.0
  Installed Tables ────────────────────── v1.0.2
  Installed Parsers ───────────────────── v0.3.11
  Installed Missings ──────────────────── v0.4.3
  Installed Reexport ──────────────────── v0.2.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed IterTools ─────────────────── v1.3.0
  Installed DataFrames ────────────────── v0.20.2
  Installed JSON ──────────────────────── v0.21.0
  Installed DataAPI ───────────────────── v1.1.0
  Installed DataStructures ────────────── v0.17.9
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed LightQuery ────────────────── v0.5.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed CSV ───────────────────────── v0.5.24
   Updating `~/.julia/environments/v1.5/Project.toml`
  [a6f99520] + LightQuery v0.5.0
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [336ed68f] + CSV v0.5.24
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v2.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [48062228] + FilePathsBase v0.7.0
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [a6f99520] + LightQuery v0.5.0
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.2
  [ea10d353] + WeakRefStrings v0.6.2
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing LightQuery
#=#=#                                                                         ###                                                                        5.3%######                                                                     8.8%########                                                                  12.3%###########                                                               15.8%############                                                              17.6%#############                                                             19.3%###############                                                           21.1%#################                                                         24.6%##################                                                        26.4%####################                                                      28.1%######################                                                    31.6%##########################                                                36.9%#############################                                             40.4%###############################                                           44.0%################################                                          45.7%###################################                                       49.2%####################################                                      51.0%#######################################                                   54.5%########################################                                  56.3%#########################################                                 58.0%###########################################                               59.8%##############################################                            65.1%##################################################                        70.3%#####################################################                     73.9%#######################################################                   77.4%############################################################              84.4%##############################################################            86.2%################################################################          89.7%#################################################################         91.4%####################################################################      95.0%#####################################################################     96.7%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                                                                                                  0.3%                                                                           0.9%                                                                           1.2%#                                                                          1.8%#                                                                          2.1%#                                                                          2.3%##                                                                         2.9%##                                                                         3.5%##                                                                         3.8%##                                                                         4.1%###                                                                        4.4%###                                                                        5.0%###                                                                        5.3%####                                                                       5.6%####                                                                       6.2%####                                                                       6.8%#####                                                                      7.3%#####                                                                      7.6%#####                                                                      8.2%######                                                                     8.8%######                                                                     9.1%######                                                                     9.7%#######                                                                   10.3%#######                                                                   10.9%########                                                                  11.5%########                                                                  11.8%########                                                                  12.3%#########                                                                 12.6%#########                                                                 13.2%#########                                                                 13.5%##########                                                                14.1%##########                                                                14.4%##########                                                                14.7%##########                                                                15.0%###########                                                               15.3%###########                                                               15.6%###########                                                               16.2%###########                                                               16.5%############                                                              17.1%############                                                              17.6%############                                                              17.9%#############                                                             18.5%#############                                                             19.4%##############                                                            20.3%##############                                                            20.6%###############                                                           21.2%###############                                                           22.1%################                                                          22.6%################                                                          23.5%#################                                                         23.8%#################                                                         24.7%##################                                                        25.3%##################                                                        26.2%###################                                                       27.1%###################                                                       27.6%####################                                                      27.9%####################                                                      28.2%####################                                                      28.5%####################                                                      28.8%#####################                                                     29.4%#####################                                                     29.7%#####################                                                     30.3%######################                                                    30.9%######################                                                    31.8%#######################                                                   32.3%#######################                                                   33.2%########################                                                  33.8%########################                                                  34.4%########################                                                  34.7%#########################                                                 35.0%#########################                                                 35.6%##########################                                                36.2%##########################                                                37.1%###########################                                               37.9%###########################                                               38.2%###########################                                               38.5%###########################                                               38.8%############################                                              39.4%############################                                              40.0%#############################                                             40.3%#############################                                             40.6%#############################                                             41.2%##############################                                            41.8%##############################                                            42.1%##############################                                            42.6%##############################                                            42.9%###############################                                           43.2%###############################                                           43.5%###############################                                           43.8%###############################                                           44.1%################################                                          45.0%################################                                          45.3%################################                                          45.6%#################################                                         45.9%#################################                                         46.2%#################################                                         46.5%#################################                                         46.8%#################################                                         47.1%##################################                                        47.6%##################################                                        47.9%##################################                                        48.5%###################################                                       48.8%###################################                                       49.4%####################################                                      50.3%####################################                                      50.9%#####################################                                     51.5%#####################################                                     51.8%#####################################                                     52.1%#####################################                                     52.6%######################################                                    53.2%######################################                                    53.8%######################################                                    54.1%#######################################                                   54.7%#######################################                                   55.0%########################################                                  55.6%########################################                                  56.5%#########################################                                 57.1%#########################################                                 57.3%#########################################                                 57.6%#########################################                                 57.9%#########################################                                 58.2%##########################################                                58.5%##########################################                                59.1%##########################################                                59.7%###########################################                               60.3%###########################################                               60.9%############################################                              61.5%############################################                              62.3%#############################################                             63.5%##############################################                            64.7%###############################################                           65.3%###############################################                           65.6%###############################################                           66.2%###############################################                           66.5%################################################                          67.3%#################################################                         68.2%#################################################                         68.8%##################################################                        69.7%##################################################                        70.0%##################################################                        70.6%###################################################                       70.9%###################################################                       71.2%###################################################                       71.5%###################################################                       71.8%####################################################                      72.3%####################################################                      72.9%####################################################                      73.2%####################################################                      73.5%#####################################################                     73.8%#####################################################                     74.1%#####################################################                     75.0%######################################################                    75.6%######################################################                    75.9%######################################################                    76.2%#######################################################                   76.5%#######################################################                   77.6%########################################################                  78.2%########################################################                  78.8%#########################################################                 79.7%#########################################################                 80.0%##########################################################                80.6%##########################################################                81.2%###########################################################               82.0%###########################################################               82.6%###########################################################               83.2%############################################################              84.1%#############################################################             85.0%#############################################################             85.6%##############################################################            86.5%##############################################################            86.8%###############################################################           87.6%###############################################################           88.2%###############################################################           88.5%###############################################################           88.8%################################################################          89.1%################################################################          89.4%#################################################################         90.3%#################################################################         90.9%#################################################################         91.5%##################################################################        92.0%##################################################################        92.6%###################################################################       93.2%###################################################################       93.8%###################################################################       94.1%###################################################################       94.4%####################################################################      95.3%#####################################################################     95.9%#####################################################################     96.5%#####################################################################     97.0%######################################################################    97.6%######################################################################    98.2%#######################################################################   98.8%#######################################################################   99.4%#######################################################################   99.7%######################################################################## 100.0%
#=#=#                                                                         #####################################################                     74.2%######################################################################## 100.0%
Status `/tmp/jl_m2qeT3/Manifest.toml`
  [336ed68f] CSV v0.5.24
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v2.2.0
  [187b0558] ConstructionBase v1.0.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [ffbed154] DocStringExtensions v0.8.1
  [e30172f5] Documenter v0.24.5
  [e2ba6199] ExprTools v0.1.0
  [8f5d6c58] EzXML v1.1.0
  [48062228] FilePathsBase v0.7.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [94ce4f54] Libiconv_jll v1.16.0+1
  [a6f99520] LightQuery v0.5.0
  [1914dd2f] MacroTools v0.5.4
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.2
  [f269a46b] TimeZones v1.0.1
  [1986cc42] Unitful v1.0.0
  [ea10d353] WeakRefStrings v0.6.2
  [02c8fc9c] XML2_jll v2.9.9+1
  [83775a58] Zlib_jll v1.2.11+8
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/LightQuery/jtQBU/docs/src/index.md:765-773
│ 
│ ```jldoctest dplyr
│ julia> get_date(day) =
│         @name @> day |>
│         transform(_, date = Date(_.year, _.month, _.day)) |>
│         remove(_, :year, :month, :day);
│ 
│ julia> get_date(first(days))
│ ((`variable`, :TMAX), (`value`, 289), (`date`, 1949-01-01))
│ ```
│ 
│ Subexpression:
│ 
│ get_date(first(days))
│ 
│ Evaluated output:
│ 
│ ((`variable`, :TMAX), (`value`, 289), (`date`, Date("1949-01-01")))
│ 
│ Expected output:
│ 
│ ((`variable`, :TMAX), (`value`, 289), (`date`, 1949-01-01))
│ 
│   diff =
│    Warning: Diff output requires color.
│    ((`variable`, :TMAX), (`value`, 289), (`date`, 1949-01-01))Date("1949-01-01")))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/HmOsT/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/jtQBU/docs/src/index.md:777-794
│ 
│ ```jldoctest dplyr
│ julia> function get_month_variable(line)
│             month_variable = @name (
│                 year = parse(Int, SubString(line, 12, 15)),
│                 month = parse(Int, SubString(line, 16, 17)),
│                 variable = Symbol(SubString(line, 18, 21))
│             )
│             @name @> over(1:31, @_ (
│                 month_variable...,
│                 get_day(line, _)...
│             )) |>
│             when(_, @_ _.value !== missing) |>
│             over(_, get_date)
│         end;
│ 
│ julia> first(get_month_variable(line))
│ ((`variable`, :TMAX), (`value`, 289), (`date`, 1949-01-01))
│ ```
│ 
│ Subexpression:
│ 
│ first(get_month_variable(line))
│ 
│ Evaluated output:
│ 
│ ((`variable`, :TMAX), (`value`, 289), (`date`, Date("1949-01-01")))
│ 
│ Expected output:
│ 
│ ((`variable`, :TMAX), (`value`, 289), (`date`, 1949-01-01))
│ 
│   diff =
│    Warning: Diff output requires color.
│    ((`variable`, :TMAX), (`value`, 289), (`date`, 1949-01-01))Date("1949-01-01")))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/HmOsT/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/jtQBU/docs/src/index.md:841-852
│ 
│ ```jldoctest dplyr
│ julia> spread_variables(day_variables) = @name (
│             date = key(day_variables),
│             over(
│                 value(day_variables),
│                 @_ (Name(_.variable), _.value)
│             )...
│         );
│ 
│ julia> spread_variables(day_variables)
│ ((`date`, 1949-01-01), (`TMAX`, 289), (`TMIN`, 217), (`PRCP`, 0), (`SNOW`, 0), (`SNWD`, 0))
│ ```
│ 
│ Subexpression:
│ 
│ spread_variables(day_variables)
│ 
│ Evaluated output:
│ 
│ ((`date`, Date("1949-01-01")), (`TMAX`, 289), (`TMIN`, 217), (`PRCP`, 0), (`SNOW`, 0), (`SNWD`, 0))
│ 
│ Expected output:
│ 
│ ((`date`, 1949-01-01), (`TMAX`, 289), (`TMIN`, 217), (`PRCP`, 0), (`SNOW`, 0), (`SNWD`, 0))
│ 
│   diff =
│    Warning: Diff output requires color.
│    ((`date`, 1949-01-01), Date("1949-01-01")), (`TMAX`, 289), (`TMIN`, 217), (`PRCP`, 0), (`SNOW`, 0), (`SNWD`, 0))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/HmOsT/src/DocTests.jl:369
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│     [1] error(::String) at ./error.jl:33
│     [2] runner(::Type{Documenter.Builder.Doctest}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/HmOsT/src/Builder.jl:204
│     [3] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/HmOsT/src/Utilities/Selectors.jl:167
│     [4] #2 at /home/pkgeval/.julia/packages/Documenter/HmOsT/src/Documenter.jl:237 [inlined]
│     [5] cd(::Documenter.var"#2#3"{Documenter.Documents.Document}, ::String) at ./file.jl:104
│     [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol,Any,NTuple{5,Symbol},NamedTuple{(:root, :source, :sitename, :doctest, :modules),Tuple{String,String,String,Symbol,Array{Module,1}}}}) at /home/pkgeval/.julia/packages/Documenter/HmOsT/src/Documenter.jl:236
│     [7] (::Documenter.var"#all_doctests#30"{Bool,Array{Module,1}})() at /home/pkgeval/.julia/packages/Documenter/HmOsT/src/Documenter.jl:725
│     [8] macro expansion at /home/pkgeval/.julia/packages/Documenter/HmOsT/src/Documenter.jl:741 [inlined]
│     [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
│     [10] doctest(::String, ::Array{Module,1}; fix::Bool, testset::String) at /home/pkgeval/.julia/packages/Documenter/HmOsT/src/Documenter.jl:741
│     [11] doctest(::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/Documenter/HmOsT/src/Documenter.jl:684
│     [12] doctest(::Module) at /home/pkgeval/.julia/packages/Documenter/HmOsT/src/Documenter.jl:671
│     [13] top-level scope at /home/pkgeval/.julia/packages/LightQuery/jtQBU/test/runtests.jl:4
│     [14] include(::String) at ./client.jl:441
│     [15] top-level scope at none:6
│     [16] eval(::Module, ::Any) at ./boot.jl:331
│     [17] exec_options(::Base.JLOptions) at ./client.jl:264
│     [18] _start() at ./client.jl:490
└ @ Documenter ~/.julia/packages/Documenter/HmOsT/src/Documenter.jl:734
Doctests: LightQuery: Test Failed at /home/pkgeval/.julia/packages/Documenter/HmOsT/src/Documenter.jl:741
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/Documenter/HmOsT/src/Documenter.jl:741 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [3] doctest(::String, ::Array{Module,1}; fix::Bool, testset::String) at /home/pkgeval/.julia/packages/Documenter/HmOsT/src/Documenter.jl:741
Test Summary:        | Fail  Total
Doctests: LightQuery |    1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/LightQuery/jtQBU/test/runtests.jl:4
ERROR: Package LightQuery errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
