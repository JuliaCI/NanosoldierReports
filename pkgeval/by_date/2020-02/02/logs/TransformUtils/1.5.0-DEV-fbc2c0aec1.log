Julia Version 1.5.0-DEV.221
Commit fbc2c0aec1 (2020-02-01 18:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_QQwxVQ/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.1686156269607263 0.07701965117127202; -0.1686156269607263 0.0 0.0888531341441265; -0.07701965117127202 -0.0888531341441265 0.0])
dAA = so3([0.0 -0.02282478724792255 0.019478773829970736; 0.02282478724792255 0.0 0.03466915057075456; -0.019478773829970736 -0.03466915057075456 0.0])
dAA = so3([0.0 -0.158655512188969 -0.06495712436516966; 0.158655512188969 0.0 0.20582646458125647; 0.06495712436516966 -0.20582646458125647 0.0])
dAA = Quaternion(0.9986490363964596, [-0.04458750232820404, 0.02440793692344766, 0.010784681529655046])
dAA = SO3([0.9990532442197955 0.0133206032891215 0.04141469234360871; -0.018340229319888147 0.9922007899836598 0.12329326155267166; -0.03944934983489375 -0.1239360878994308 0.991505721069621])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.997189349780965 -0.05904512977290802 0.04612020526316673; 0.05482904590252834 0.9946217650232427 0.08787104339580687; -0.05106051712267142 -0.08509534177703142 0.9950636192721627]), [-0.888531341441265, 0.7701965117127202, -1.686156269607263])
xj = SE3(SO3([0.9911458406357019 -0.06164894464548426 0.11759817266712035; 0.0342156357197804 0.9743524434679325 0.22241089492280008; -0.12829346383522083 -0.2164179371775074 0.9678347294889729]), [-2.0582646458125646, -0.6495712436516966, 1.58655512188969])
Dx = SE3(SO3([0.996786817629973 0.002997555609336124 0.08004408072731227; -0.013573542640395371 0.9911683753445398 0.13191289041278254; -0.07894174522583669 -0.13257551198179224 0.9880242580440345]), [-1.4113964406760537, -1.6215573504043648, 3.0778512279118333])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
