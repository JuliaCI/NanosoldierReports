Julia Version 1.5.0-DEV.271
Commit 438485e5a9 (2020-02-14 18:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Combinatorics ──────── v1.0.0
  Installed RecipesBase ────────── v0.7.0
  Installed Requires ───────────── v1.0.1
  Installed NaNMath ────────────── v0.3.3
  Installed FillArrays ─────────── v0.8.4
  Installed CodecZlib ──────────── v0.6.0
  Installed FiniteDiff ─────────── v2.2.0
  Installed Gridap ─────────────── v0.7.0
  Installed LightXML ───────────── v0.8.1
  Installed Distances ──────────── v0.8.2
  Installed FastGaussQuadrature ── v0.4.2
  Installed QuadGK ─────────────── v2.3.1
  Installed NLSolversBase ──────── v7.6.1
  Installed DiffRules ──────────── v1.0.1
  Installed DocStringExtensions ── v0.8.1
  Installed ForwardDiff ────────── v0.10.9
  Installed Reexport ───────────── v0.2.0
  Installed JLD2 ───────────────── v0.1.11
  Installed Parsers ────────────── v0.3.11
  Installed Polynomials ────────── v0.6.0
  Installed TranscodingStreams ─── v0.9.5
  Installed FileIO ─────────────── v1.2.2
  Installed LineSearches ───────── v7.0.1
  Installed StaticArrays ───────── v0.12.1
  Installed Parameters ─────────── v0.12.0
  Installed WriteVTK ───────────── v1.4.0
  Installed CommonSubexpressions ─ v0.2.0
  Installed DiffResults ────────── v1.0.2
  Installed OpenSpecFun_jll ────── v0.5.3+1
  Installed NLsolve ────────────── v4.3.0
  Installed JSON ───────────────── v0.21.0
  Installed DataStructures ─────── v0.17.9
  Installed BinaryProvider ─────── v0.5.8
  Installed ArrayInterface ─────── v2.4.1
  Installed SpecialFunctions ───── v0.10.0
  Installed OrderedCollections ─── v1.1.0
  Installed BSON ───────────────── v0.2.5
#=#=#                                                                         #############################################################             85.0%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [56d4f2e9] + Gridap v0.7.0
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [4fba245c] + ArrayInterface v2.4.1
  [fbb218c0] + BSON v0.2.5
  [b99e7846] + BinaryProvider v0.5.8
  [944b1d66] + CodecZlib v0.6.0
  [861a8166] + Combinatorics v1.0.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [864edb3b] + DataStructures v0.17.9
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.8.2
  [ffbed154] + DocStringExtensions v0.8.1
  [442a2c76] + FastGaussQuadrature v0.4.2
  [5789e2e9] + FileIO v1.2.2
  [1a297f60] + FillArrays v0.8.4
  [6a86dc24] + FiniteDiff v2.2.0
  [f6369f11] + ForwardDiff v0.10.9
  [56d4f2e9] + Gridap v0.7.0
  [033835bb] + JLD2 v0.1.11
  [682c06a0] + JSON v0.21.0
  [9c8b4983] + LightXML v0.8.1
  [d3d80556] + LineSearches v7.0.1
  [d41bc354] + NLSolversBase v7.6.1
  [2774e3e8] + NLsolve v4.3.0
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.11
  [f27b6e38] + Polynomials v0.6.0
  [1fd47b50] + QuadGK v2.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [3bb67fe8] + TranscodingStreams v0.9.5
  [64499a7a] + WriteVTK v1.4.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building CodecZlib → `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
   Building LightXML ─→ `~/.julia/packages/LightXML/W8FVT/deps/build.log`
    Testing Gridap
Status `/tmp/jl_h9awNZ/Manifest.toml`
  [4fba245c] ArrayInterface v2.4.1
  [fbb218c0] BSON v0.2.5
  [b99e7846] BinaryProvider v0.5.8
  [944b1d66] CodecZlib v0.6.0
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [864edb3b] DataStructures v0.17.9
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [ffbed154] DocStringExtensions v0.8.1
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.2.2
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [f6369f11] ForwardDiff v0.10.9
  [56d4f2e9] Gridap v0.7.0
  [033835bb] JLD2 v0.1.11
  [682c06a0] JSON v0.21.0
  [9c8b4983] LightXML v0.8.1
  [d3d80556] LineSearches v7.0.1
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.0
  [1fd47b50] QuadGK v2.3.1
  [3cdcf5f2] RecipesBase v0.7.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [3bb67fe8] TranscodingStreams v0.9.5
  [64499a7a] WriteVTK v1.4.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Helpers       |   13     13
214.417845 seconds (12.13 M allocations: 646.589 MiB, 0.32% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  2.429128 seconds (2.21 M allocations: 125.621 MiB, 1.48% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 31.252192 seconds (29.04 M allocations: 1.390 GiB, 3.33% gc time)
Test Summary: | Pass  Total
Algebra       |  679    679
 87.961508 seconds (86.38 M allocations: 4.085 GiB, 3.18% gc time)
Test Summary: | Pass  Total
TensorValues  |  227    227
 16.763683 seconds (13.52 M allocations: 692.760 MiB, 3.50% gc time)
Test Summary: | Pass  Total
Arrays        |  278    278
 30.315812 seconds (24.35 M allocations: 1.184 GiB, 2.98% gc time)
Test Summary: | Pass  Total
Fields        |  580    580
 68.993349 seconds (51.28 M allocations: 2.498 GiB, 2.33% gc time)
Test Summary: | Pass  Total
Polynomials   |  256    256
 27.079154 seconds (21.60 M allocations: 1.079 GiB, 2.76% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 19.784832 seconds (30.38 M allocations: 1.365 GiB, 7.72% gc time)
Test Summary: | Pass  Total
ReferenceFEs  |  893    893
 89.190701 seconds (73.56 M allocations: 3.634 GiB, 3.24% gc time)
Test Summary: | Pass  Total
Geometry      | 1600   1600
155.643176 seconds (119.70 M allocations: 6.058 GiB, 3.57% gc time)
Test Summary: | Pass  Total
FESpaces      |  470    470
249.374838 seconds (186.47 M allocations: 9.390 GiB, 3.38% gc time)
Test Summary: | Pass  Total
MultiField    |  110    110
 86.685653 seconds (54.55 M allocations: 2.754 GiB, 3.29% gc time)
Test Summary: |
Visualization | No tests
 31.046364 seconds (21.75 M allocations: 1.103 GiB, 2.79% gc time)
Test Summary: | Pass  Total
Gridap        |   17     17
533.275090 seconds (320.66 M allocations: 16.193 GiB, 2.81% gc time)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000013 seconds (1 allocation: 32 bytes)
  0.000004 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000000 seconds
  0.000094 seconds (1000 allocations: 31.250 KiB)
  0.000070 seconds
  0.000000 seconds
  0.000051 seconds
  0.000082 seconds
  0.000042 seconds
+++ runing suite for n = 100000 +++
  0.000000 seconds
  0.012363 seconds (100.00 k allocations: 3.052 MiB)
  0.015060 seconds
  0.000000 seconds
  0.003546 seconds
  0.003490 seconds
  0.002929 seconds
WARNING: replacing module ArraysBenchs.
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000007 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000004 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000002 seconds
  0.000011 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 1000 +++
  0.000004 seconds
  0.000005 seconds
  0.000146 seconds (1000 allocations: 31.250 KiB)
  0.000358 seconds (1000 allocations: 31.250 KiB)
  0.000004 seconds
  0.000131 seconds
  0.000193 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 100000 +++
  0.000383 seconds
  0.000523 seconds
  0.007274 seconds (100.00 k allocations: 3.052 MiB)
  0.032267 seconds (100.00 k allocations: 3.052 MiB)
  0.000417 seconds
  0.013991 seconds
  0.020039 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1000 +++
  0.000024 seconds
  0.000022 seconds
  0.000069 seconds
  0.000070 seconds
+++ runing suite for n = 100000 +++
  0.002644 seconds
  0.002262 seconds
  0.007559 seconds
  0.007765 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000017 seconds
  0.000000 seconds
  0.000085 seconds
  0.000000 seconds
+++ runing suite for n = 100000 +++
  0.001641 seconds
  0.000000 seconds
  0.008302 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000003 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1000 +++
  0.000108 seconds
  0.000118 seconds
  0.000164 seconds
+++ runing suite for n = 100000 +++
  0.010828 seconds
  0.011844 seconds
  0.012065 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000003 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000009 seconds
  0.000009 seconds
+++ runing suite for n = 1000 +++
  0.000040 seconds
  0.000005 seconds
  0.000153 seconds
  0.000170 seconds
  0.000039 seconds
  0.000002 seconds
  0.000179 seconds
  0.000176 seconds
  0.000039 seconds
  0.000013 seconds
  0.000198 seconds
  0.000174 seconds
  0.000091 seconds
  0.000002 seconds
  0.000829 seconds
  0.000804 seconds
+++ runing suite for n = 100000 +++
  0.003995 seconds
  0.000497 seconds
  0.015205 seconds
  0.015437 seconds
  0.002323 seconds
  0.000115 seconds
  0.009321 seconds
  0.008526 seconds
  0.002311 seconds
  0.000855 seconds
  0.009295 seconds
  0.009996 seconds
  0.011528 seconds
  0.000134 seconds
  0.081882 seconds
  0.067475 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000003 seconds
  0.000006 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000004 seconds
  0.000004 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1000 +++
  0.000099 seconds
  0.000011 seconds
  0.000243 seconds
  0.000276 seconds (1 allocation: 112 bytes)
  0.000008 seconds
  0.000288 seconds
  0.000277 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 100000 +++
  0.008814 seconds
  0.000999 seconds
  0.027637 seconds
  0.036007 seconds (1 allocation: 112 bytes)
  0.000978 seconds
  0.027246 seconds
  0.014466 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000003 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000002 seconds
  0.000002 seconds
  0.000005 seconds
  0.000002 seconds
  0.000002 seconds
  0.000004 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000003 seconds
+++ runing suite for n = 1000 +++
  0.000122 seconds
  0.000133 seconds
  0.000431 seconds
  0.000123 seconds
  0.000132 seconds
  0.000354 seconds
  0.000139 seconds
  0.000145 seconds
  0.000133 seconds
  0.000141 seconds
  0.001221 seconds
  0.000130 seconds
  0.000294 seconds
+++ runing suite for n = 100000 +++
  0.014139 seconds
  0.015074 seconds
  0.047997 seconds
  0.014765 seconds
  0.015374 seconds
  0.039901 seconds
  0.015447 seconds
  0.016748 seconds
  0.015103 seconds
  0.016208 seconds
  0.016894 seconds
  0.015156 seconds
  0.032708 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000003 seconds
  0.000012 seconds
+++ runing suite for n = 1000 +++
  0.000085 seconds
  0.000267 seconds
  0.001093 seconds
+++ runing suite for n = 100000 +++
  0.008727 seconds
  0.032935 seconds
  0.141256 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000007 seconds
+++ runing suite for n = 1000 +++
  0.000072 seconds
  0.000749 seconds
+++ runing suite for n = 100000 +++
  0.007480 seconds
  0.058321 seconds
+++ runing suite for n = 1 +++
  0.000006 seconds
  0.000001 seconds
  0.000003 seconds
  0.149368 seconds (74.44 k allocations: 3.608 MiB)
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000004 seconds
  0.000010 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000023 seconds
  0.000021 seconds
  0.000048 seconds
  0.000001 seconds
  0.000002 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000030 seconds
  0.000173 seconds
  0.002338 seconds
  0.004754 seconds
  0.000034 seconds
  0.000174 seconds
  0.000002 seconds
+++ runing suite for n = 100000 +++
  0.002396 seconds
  0.014590 seconds
  0.244498 seconds
  0.614362 seconds
  0.004284 seconds
  0.022625 seconds
  0.000165 seconds
+++ runing suite for n = 1 +++
  0.000008 seconds
  0.000009 seconds
  0.000009 seconds
  0.000033 seconds (30 allocations: 1.406 KiB)
+++ runing suite for n = 1 +++
  0.000002 seconds
  0.000004 seconds
  0.000005 seconds
  0.000006 seconds (30 allocations: 1.406 KiB)
+++ runing suite for n = 10 +++
  0.000013 seconds
  0.000050 seconds
  0.000020 seconds
  0.000102 seconds (300 allocations: 14.062 KiB)
+++ runing suite for n = 1000 +++
  0.000901 seconds
  0.001946 seconds
  0.001783 seconds
  0.004119 seconds (30.00 k allocations: 1.373 MiB)
+++ runing suite for n = 100000 +++
  0.137193 seconds
  0.166976 seconds
  0.123053 seconds
  0.577352 seconds (3.00 M allocations: 137.329 MiB, 29.25% gc time)
    Testing Gridap tests passed 
