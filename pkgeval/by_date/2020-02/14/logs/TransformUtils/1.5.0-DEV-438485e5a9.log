Julia Version 1.5.0-DEV.271
Commit 438485e5a9 (2020-02-14 18:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_1lMD3d/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.047043129606390045 0.13347366007592423; 0.047043129606390045 0.0 0.060101091187150985; -0.13347366007592423 -0.060101091187150985 0.0])
dAA = so3([0.0 -0.33985928952818567 0.04814811475275888; 0.33985928952818567 0.0 -0.16753899351919632; -0.04814811475275888 0.16753899351919632 0.0])
dAA = so3([0.0 0.06852708016388344 -0.013992868883077167; -0.06852708016388344 0.0 0.0691792548988909; 0.013992868883077167 -0.0691792548988909 0.0])
dAA = Quaternion(0.9953491594616405, [-0.028456305857497408, -0.0743790586050261, -0.05420373655921135])
dAA = SO3([0.9864825243719766 -0.08471437664541752 -0.14027010906914864; 0.04764683522105313 0.9673040722440134 -0.24910361481433088; 0.15678650516581563 0.2390529359989688 0.9582649349674455])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.6589452721332689 -0.7029369784132211 0.26771390085780544; 0.7496373933522092 0.5844050141834123 -0.31066792220213346; 0.061926624494778926 0.40540150934175906 0.9120387652957007]), [-0.6010109118715098, 1.3347366007592423, 0.47043129606390044])
xj = SE3(SO3([0.8955628558180515 0.2756772483560437 -0.34924092832578496; -0.2299279069144897 0.9587399455100476 0.1671851503732097; 0.3809203708138194 -0.06942457505978099 0.9219977762862723]), [-0.691792548988909, -0.13992868883077167, -0.6852708016388344])
Dx = SE3(SO3([0.4413534657069652 0.8960643035032785 -0.0477062081456386; -0.609469576282436 0.33836387196268936 0.7169774931868674; 0.6585999953648334 -0.28736501898735195 0.6954619989387201]), [-1.2368531041625324, -1.2665113945460535, -0.6202174189768731])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
