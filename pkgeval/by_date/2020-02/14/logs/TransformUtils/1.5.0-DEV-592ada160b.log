Julia Version 1.5.0-DEV.267
Commit 592ada160b (2020-02-13 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_kvIbnI/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.11079725594786366 -0.1925515826365577; -0.11079725594786366 0.0 0.05850501743478759; 0.1925515826365577 -0.05850501743478759 0.0])
dAA = so3([0.0 0.01869315724145462 -0.05437533764843924; -0.01869315724145462 0.0 0.21515968979148128; 0.05437533764843924 -0.21515968979148128 0.0])
dAA = so3([0.0 0.10760623115773554 -0.03731358240822988; -0.10760623115773554 0.0 0.013267305203314615; 0.03731358240822988 -0.013267305203314615 0.0])
dAA = Quaternion(0.9980228664920089, [0.020591931336205814, -0.04991285433803384, 0.032171995504617065])
dAA = SO3([0.9870342556895046 0.044708425838331345 -0.15415749983223065; -0.045180588320093126 0.9989787385057427 0.00044096771477694554; 0.1540197796859742 0.0065296762962368735 0.9880461885928971])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9899325574907174 0.0799813129133916 -0.11677551628889335; -0.008729726631068652 0.8579669815024653 0.5136306557483646; 0.1412703914230943 -0.5074402903162089 0.8500276632386544]), [-0.5850501743478759, -1.925515826365577, -1.1079725594786365])
xj = SE3(SO3([0.9561847118488908 -0.1657185092159421 -0.24134658176510293; 0.1418361988789424 0.9833852615731493 -0.11329571928489512; 0.2561118691393019 0.07409995292815218 0.963802836404842]), [-0.13267305203314614, -0.3731358240822988, -1.0760623115773553])
Dx = SE3(SO3([0.9815012099929034 -0.16216670280364914 -0.10177099431694286; 0.06820620283186263 0.7928563989585071 -0.6055795938816029; 0.17889463009751055 0.5874356910610227 0.7892502899523912]), [0.4387789618072627, 1.3518799554194003, 0.7716479799847138])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
