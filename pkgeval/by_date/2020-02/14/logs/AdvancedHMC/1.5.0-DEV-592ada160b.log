Julia Version 1.5.0-DEV.267
Commit 592ada160b (2020-02-13 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ProgressMeter ────── v1.2.0
  Installed OpenSpecFun_jll ──── v0.5.3+1
  Installed InplaceOps ───────── v0.3.0
  Installed FillArrays ───────── v0.8.4
  Installed OrderedCollections ─ v1.1.0
  Installed AdvancedHMC ──────── v0.2.20
  Installed StatsFuns ────────── v0.9.4
  Installed MacroTools ───────── v0.5.4
  Installed Missings ─────────── v0.4.3
  Installed DataAPI ──────────── v1.1.0
  Installed ArgCheck ─────────── v1.1.0
  Installed Parameters ───────── v0.12.0
  Installed SpecialFunctions ─── v0.10.0
  Installed LazyArrays ───────── v0.14.11
  Installed ArrayLayouts ─────── v0.1.5
  Installed Requires ─────────── v1.0.1
  Installed DataStructures ───── v0.17.9
  Installed StatsBase ────────── v0.32.0
  Installed BinaryProvider ───── v0.5.8
  Installed SortingAlgorithms ── v0.3.1
  Installed Rmath ────────────── v0.6.0
  Installed StaticArrays ─────── v0.12.1
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.1.0
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ###########                                                               15.3%###############################                                           43.8%##########################################################                81.1%######################################################################## 100.0%
#=#=#                                                                         ######################################                                    52.9%######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.1%####                                                                       5.9%#######                                                                   10.9%###########                                                               16.6%#################                                                         24.8%########################                                                  34.5%#############################                                             41.1%#######################################                                   55.2%####################################################                      73.2%######################################################################    97.9%######################################################################## 100.0%
Status `/tmp/jl_MWs0Fx/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.3.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [13072b0f] AxisAlgorithms v1.0.0
  [39de3d68] AxisArrays v0.4.2
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.15.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.1.1
  [ffbed154] DocStringExtensions v0.8.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [26cc04aa] FiniteDifferences v0.9.2
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.5
  [8197267c] IntervalSets v0.4.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5ab0869b] KernelDensity v0.5.1
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.0.1
  [c7f686f2] MCMCChains v1.0.2
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v1.0.2
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [429524aa] Optim v0.20.1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.3
  [85a6dd25] PositiveFactorizations v0.2.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [c84ed2f1] Ratios v0.4.0
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [992d4aef] Showoff v0.3.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.1
  [9f7883ad] Tracker v0.2.6
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.7.1
  [b8865327] UnicodePlots v1.1.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [efce3f68] WoodburyMatrices v0.5.0
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.099825311
│   t_steps = 0.006252677
└   t_step / t_steps = 15.965211540592934
Sampling  0%|                               |  ETA: 5:55:43[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.47298356067062636
  log_density:                   -13.04361298495797
  hamiltonian_energy:            19.09094132250868
  hamiltonian_energy_error:      0.3681168611606864
  max_hamiltonian_energy_error:  1.3451434532265836
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8500000000000001
  nom_step_size:                 0.8500000000000001
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:20[K
  iterations:                    1362
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9893745336341748
  log_density:                   -12.4221769457742
  hamiltonian_energy:            18.007017436089022
  hamiltonian_energy_error:      -0.4207126229580709
  max_hamiltonian_energy_error:  -0.5649812963955902
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.672977201608118
  nom_step_size:                 0.672977201608118
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8777311596009815, 0.9954 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████▏                          |  ETA: 0:00:17[K
  iterations:                    1611
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8336694106090846
  log_density:                   -11.190724356594746
  hamiltonian_energy:            16.03382960026613
  hamiltonian_energy_error:      -0.08800916036133444
  max_hamiltonian_energy_error:  0.3824084914539654
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7633892680544158
  nom_step_size:                 0.7633892680544158
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8777311596009815, 0.9954 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:15[K
  iterations:                    1884
  n_steps:                       51
  is_accept:                     true
  acceptance_rate:               0.9662286630087976
  log_density:                   -13.5955101995176
  hamiltonian_energy:            16.54487034749763
  hamiltonian_energy_error:      0.04417970513202363
  max_hamiltonian_energy_error:  -0.32362238190998127
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.808372486458632
  nom_step_size:                 0.808372486458632
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8777311596009815, 0.9954 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▏                        |  ETA: 0:00:12[K
  iterations:                    2354
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8552616204548755
  log_density:                   -12.559681616242047
  hamiltonian_energy:            13.409805967517231
  hamiltonian_energy_error:      0.2714095910185339
  max_hamiltonian_energy_error:  0.2714095910185339
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▍                       |  ETA: 0:00:10[K
  iterations:                    2832
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.347529421195615
  hamiltonian_energy:            17.62926941911691
  hamiltonian_energy_error:      -0.14049448273289045
  max_hamiltonian_energy_error:  -0.3990449581871154
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▍                      |  ETA: 0:00:08[K
  iterations:                    3265
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7978413967827953
  log_density:                   -13.985617842914724
  hamiltonian_energy:            23.05352640856162
  hamiltonian_energy_error:      -0.12512011466251138
  max_hamiltonian_energy_error:  0.5318130372409264
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|█████████▉                     |  ETA: 0:00:07[K
  iterations:                    3822
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.937452998670522
  log_density:                   -14.879248963022743
  hamiltonian_energy:            22.478978141085534
  hamiltonian_energy_error:      -0.14563728918759722
  max_hamiltonian_energy_error:  0.20049176948440817
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▌                   |  ETA: 0:00:06[K
  iterations:                    4460
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8912935876145985
  log_density:                   -12.286208407238314
  hamiltonian_energy:            19.529628113373363
  hamiltonian_energy_error:      -0.3333023502210608
  max_hamiltonian_energy_error:  -0.3333023502210608
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▊                  |  ETA: 0:00:05[K
  iterations:                    4926
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7230494288086547
  log_density:                   -13.966856679438553
  hamiltonian_energy:            16.236510345610874
  hamiltonian_energy_error:      0.35470988727176156
  max_hamiltonian_energy_error:  0.44283017672544567
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▊                 |  ETA: 0:00:04[K
  iterations:                    5342
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8514757052233726
  log_density:                   -12.72228397348379
  hamiltonian_energy:            15.376421152601186
  hamiltonian_energy_error:      0.194699906756707
  max_hamiltonian_energy_error:  0.3265059408180253
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▉                |  ETA: 0:00:04[K
  iterations:                    5751
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7873096823744029
  log_density:                   -16.38363247054886
  hamiltonian_energy:            22.68604671702896
  hamiltonian_energy_error:      0.20089894413316856
  max_hamiltonian_energy_error:  0.47217731237943283
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████▎              |  ETA: 0:00:03[K
  iterations:                    6268
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8303145182784633
  log_density:                   -13.026664706044386
  hamiltonian_energy:            18.88379692559229
  hamiltonian_energy_error:      -0.001470364517611955
  max_hamiltonian_energy_error:  0.3683261254482453
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▋             |  ETA: 0:00:03[K
  iterations:                    6838
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.998494539962883
  log_density:                   -16.567994648900868
  hamiltonian_energy:            20.046544420350976
  hamiltonian_energy_error:      0.010594140516559492
  max_hamiltonian_energy_error:  -0.4627869337340442
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▍           |  ETA: 0:00:02[K
  iterations:                    7485
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9411074215553183
  log_density:                   -11.771021359642011
  hamiltonian_energy:            14.418116713783725
  hamiltonian_energy_error:      -0.005963783976868697
  max_hamiltonian_energy_error:  0.1513411250162342
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████          |  ETA: 0:00:02[K
  iterations:                    8124
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9476323898774405
  log_density:                   -15.888879445137025
  hamiltonian_energy:            22.48725922004378
  hamiltonian_energy_error:      0.005173866133670657
  max_hamiltonian_energy_error:  0.12527579344440198
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▋        |  ETA: 0:00:02[K
  iterations:                    8747
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.148894310284469
  hamiltonian_energy:            17.816794256919273
  hamiltonian_energy_error:      -0.03131216403540549
  max_hamiltonian_energy_error:  -0.16039774671752838
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████▎      |  ETA: 0:00:01[K
  iterations:                    9376
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7046801358840491
  log_density:                   -14.633272792170452
  hamiltonian_energy:            16.20039287659663
  hamiltonian_energy_error:      0.48626311361719665
  max_hamiltonian_energy_error:  0.48626311361719665
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▊     |  ETA: 0:00:01[K
  iterations:                    9980
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9827135800859941
  log_density:                   -14.469881741166084
  hamiltonian_energy:            19.621516983755544
  hamiltonian_energy_error:      -0.06569783653313621
  max_hamiltonian_energy_error:  -0.12055220504312203
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:01[K
  iterations:                    10543
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.494639574330082
  hamiltonian_energy:            18.855105018907615
  hamiltonian_energy_error:      -0.5179235184719815
  max_hamiltonian_energy_error:  -0.5933701243648528
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|████████████████████████████▉  |  ETA: 0:00:00[K
  iterations:                    11176
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.88772219043057
  log_density:                   -14.196944031823135
  hamiltonian_energy:            16.932111554649843
  hamiltonian_energy_error:      0.22082305742303987
  max_hamiltonian_energy_error:  0.22082305742303987
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████ |  ETA: 0:00:00[K
  iterations:                    11593
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9727008912458608
  log_density:                   -11.50291308739061
  hamiltonian_energy:            14.279134887257245
  hamiltonian_energy_error:      -0.048859774139364376
  max_hamiltonian_energy_error:  0.07460863009715091
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:04[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9937381533561004
  log_density:                   -15.960197024339571
  hamiltonian_energy:            19.85113873330823
  hamiltonian_energy_error:      0.015012097991931483
  max_hamiltonian_energy_error:  -0.24012352039072482
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6893168216730843
  nom_step_size:                 0.6893168216730843
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0062891619010896, 0.9530 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 4.732842499 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0062891619010896, 0.9530 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.689), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0894415191641462
└   average_acceptance_rate = 0.8733145190177235
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.760835078 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⢰⡆⠀⠀⡇⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢣⠀⠀⠀⠀⡇⠸⡀⢸⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⢣⡀⠀⡸⠀⠀⢣⡇⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡎⠀⠀⠀⠈⠢⠇⠀⠀⠈⠁⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⡏⠈⢢⡀⠀⠀⢀⢄⣀⡠⠤⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⢳⠁⠀⠀⠈⠒⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣣⠀⠀⠀⢀⠔⠁⢀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⢧⣠⣊⣁⣀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
