Julia Version 1.5.0-DEV.260
Commit a211abcdfa (2020-02-10 22:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_6eKY5Y/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.014029113899775758 0.1533740396467272; 0.014029113899775758 0.0 -0.08635336549289857; -0.1533740396467272 0.08635336549289857 0.0])
dAA = so3([0.0 -0.053938174797182895 0.13486158420910474; 0.053938174797182895 0.0 0.058136492085291064; -0.13486158420910474 -0.058136492085291064 0.0])
dAA = so3([0.0 0.014564932335158518 0.08812124086770629; -0.014564932335158518 0.0 0.013499483600457813; -0.08812124086770629 -0.013499483600457813 0.0])
dAA = Quaternion(0.9964362474369735, [0.041622356460936476, 0.007331402294925053, 0.07299749842804025])
dAA = SO3([0.9840459064134598 0.16912354366733698 -0.05523478114662102; -0.17257182775796817 0.982841985268896 -0.06511986069525652; 0.04327376035413287 0.07361289948166566 0.9963475913027117])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9349081568727043 -0.1556239513703809 0.3189481524836789; 0.10724310232197908 0.9805955952515165 0.1641072685095984; -0.33829817501316833 -0.11922023457950928 0.9334564159346522]), [0.8635336549289857, 1.5337403964672718, 0.14029113899775758])
xj = SE3(SO3([0.9335971244370713 -0.35348797635168205 0.05867418357015617; 0.3579082178824869 0.9120359165949283 -0.200230353375884; 0.017266059626156946 0.20793445461404841 0.9779903607752708]), [-0.13499483600457812, 0.8812124086770629, -0.14564932335158517])
Dx = SE3(SO3([0.9053696780401703 -0.30301307784119447 -0.29747070568821493; 0.20361468478807024 0.9245596037096856 -0.322072351074792; 0.37262153215305877 0.23102513682583453 0.8987661430708834]), [-0.9067784202309173, -0.4503812322933677, -0.6924763622432069])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
