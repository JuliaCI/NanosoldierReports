Julia Version 1.5.0-DEV.263
Commit d785bdc711 (2020-02-12 15:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed StatsKit ──────────────────── v0.3.0
  Installed OpenSpecFun_jll ───────────── v0.5.3+1
  Installed PositiveFactorizations ────── v0.2.3
  Installed Rmath ─────────────────────── v0.6.0
  Installed Roots ─────────────────────── v0.8.4
  Installed ArrayInterface ────────────── v2.4.1
  Installed Distributions ─────────────── v0.21.12
  Installed WeakRefStrings ────────────── v0.5.8
  Installed Arpack ────────────────────── v0.4.0
  Installed StatsModels ───────────────── v0.6.6
  Installed FFTW ──────────────────────── v1.2.0
  Installed LineSearches ──────────────── v7.0.1
  Installed Tables ────────────────────── v1.0.0
  Installed CSV ───────────────────────── v0.3.1
  Installed GLM ───────────────────────── v1.3.6
  Installed OpenBLAS_jll ──────────────── v0.3.7+5
  Installed AxisAlgorithms ────────────── v1.0.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Polynomials ───────────────── v0.5.3
  Installed DataAPI ───────────────────── v1.1.0
  Installed Bootstrap ─────────────────── v2.2.0
  Installed NLSolversBase ─────────────── v7.6.1
  Installed PooledArrays ──────────────── v0.5.3
  Installed NearestNeighbors ──────────── v0.4.4
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed SpecialFunctions ──────────── v0.9.0
  Installed OffsetArrays ──────────────── v1.0.2
  Installed TimeSeries ────────────────── v0.16.0
  Installed DataStructures ────────────── v0.17.9
  Installed Interpolations ────────────── v0.12.5
  Installed Loess ─────────────────────── v0.5.0
  Installed WoodburyMatrices ──────────── v0.5.0
  Installed Requires ──────────────────── v1.0.1
  Installed AbstractFFTs ──────────────── v0.5.0
  Installed StatsFuns ─────────────────── v0.9.3
  Installed StaticArrays ──────────────── v0.12.1
  Installed BinaryProvider ────────────── v0.5.8
  Installed ForwardDiff ───────────────── v0.10.9
  Installed MultivariateStats ─────────── v0.7.0
  Installed Combinatorics ─────────────── v1.0.0
  Installed PDMats ────────────────────── v0.9.11
  Installed InvertedIndices ───────────── v1.0.0
  Installed Parsers ───────────────────── v0.3.11
  Installed Ratios ────────────────────── v0.4.0
  Installed Parameters ────────────────── v0.12.0
  Installed FFTW_jll ──────────────────── v3.3.9+3
  Installed HypothesisTests ───────────── v0.9.0
  Installed IntelOpenMP_jll ───────────── v2018.0.3+0
  Installed KernelDensity ─────────────── v0.5.1
  Installed Distances ─────────────────── v0.8.2
  Installed StatsBase ─────────────────── v0.32.0
  Installed DataStreams ───────────────── v0.4.2
  Installed DiffRules ─────────────────── v1.0.0
  Installed JSON ──────────────────────── v0.21.0
  Installed QuadGK ────────────────────── v2.3.1
  Installed Missings ──────────────────── v0.4.3
  Installed DataValueInterfaces ───────── v1.0.0
  Installed ShiftedArrays ─────────────── v1.0.0
  Installed FiniteDiff ────────────────── v2.2.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed InternedStrings ───────────── v0.7.0
  Installed FillArrays ────────────────── v0.8.4
  Installed CommonSubexpressions ──────── v0.2.0
  Installed Optim ─────────────────────── v0.20.1
  Installed NaNMath ───────────────────── v0.3.3
  Installed RecipesBase ───────────────── v0.8.0
  Installed DataFrames ────────────────── v0.19.4
  Installed Reexport ──────────────────── v0.2.0
  Installed Compat ────────────────────── v2.2.0
  Installed Arpack_jll ────────────────── v3.5.0+2
  Installed MKL_jll ───────────────────── v2019.0.117+2
  Installed TableTraits ───────────────── v1.0.0
  Installed OrderedCollections ────────── v1.1.0
  Installed DiffResults ───────────────── v1.0.2
  Installed Clustering ────────────────── v0.13.3
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.1%####                                                                       5.6%#######                                                                   10.6%############                                                              16.7%##################                                                        25.0%#########################                                                 35.4%##################################                                        47.9%##############################################                            64.0%#############################################################             85.4%######################################################################## 100.0%
#=#=#                                                                         ################                                                          22.6%#####################################################                     74.5%######################################################################## 100.0%
#=#=#                                                                         ###################################################                       71.3%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [2cb19f9e] + StatsKit v0.3.0
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.4.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [b99e7846] + BinaryProvider v0.5.8
  [e28b5b4c] + Bootstrap v2.2.0
  [336ed68f] + CSV v0.3.1
  [324d7699] + CategoricalArrays v0.7.7
  [aaaa29a8] + Clustering v0.13.3
  [861a8166] + Combinatorics v1.0.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.19.4
  [9a8bc11e] + DataStreams v0.4.2
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [b4f34e82] + Distances v0.8.2
  [31c24e10] + Distributions v0.21.12
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [1a297f60] + FillArrays v0.8.4
  [6a86dc24] + FiniteDiff v2.2.0
  [f6369f11] + ForwardDiff v0.10.9
  [38e38edf] + GLM v1.3.6
  [09f84164] + HypothesisTests v0.9.0
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [7d512f48] + InternedStrings v0.7.0
  [a98d9a8b] + Interpolations v0.12.5
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [d3d80556] + LineSearches v7.0.1
  [4345ca2d] + Loess v0.5.0
  [856f044c] + MKL_jll v2019.0.117+2
  [e1d29d7a] + Missings v0.4.3
  [6f286f6a] + MultivariateStats v0.7.0
  [d41bc354] + NLSolversBase v7.6.1
  [77ba4419] + NaNMath v0.3.3
  [b8a86587] + NearestNeighbors v0.4.4
  [6fe1bfb0] + OffsetArrays v1.0.2
  [4536629a] + OpenBLAS_jll v0.3.7+5
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [429524aa] + Optim v0.20.1
  [bac558e1] + OrderedCollections v1.1.0
  [90014a1f] + PDMats v0.9.11
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.11
  [f27b6e38] + Polynomials v0.5.3
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [c84ed2f1] + Ratios v0.4.0
  [3cdcf5f2] + RecipesBase v0.8.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [f2b01f46] + Roots v0.8.4
  [1277b4bf] + ShiftedArrays v1.0.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2cb19f9e] + StatsKit v0.3.0
  [3eaba693] + StatsModels v0.6.6
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.0
  [9e3dc215] + TimeSeries v0.16.0
  [ea10d353] + WeakRefStrings v0.5.8
  [efce3f68] + WoodburyMatrices v0.5.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
   Building FFTW ─→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
    Testing StatsKit
Status `/tmp/jl_aaDMO1/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [13072b0f] AxisAlgorithms v1.0.0
  [b99e7846] BinaryProvider v0.5.8
  [e28b5b4c] Bootstrap v2.2.0
  [336ed68f] CSV v0.3.1
  [324d7699] CategoricalArrays v0.7.7
  [aaaa29a8] Clustering v0.13.3
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.19.4
  [9a8bc11e] DataStreams v0.4.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.21.12
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [f6369f11] ForwardDiff v0.10.9
  [38e38edf] GLM v1.3.6
  [09f84164] HypothesisTests v0.9.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [7d512f48] InternedStrings v0.7.0
  [a98d9a8b] Interpolations v0.12.5
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5ab0869b] KernelDensity v0.5.1
  [d3d80556] LineSearches v7.0.1
  [4345ca2d] Loess v0.5.0
  [856f044c] MKL_jll v2019.0.117+2
  [e1d29d7a] Missings v0.4.3
  [6f286f6a] MultivariateStats v0.7.0
  [d41bc354] NLSolversBase v7.6.1
  [77ba4419] NaNMath v0.3.3
  [b8a86587] NearestNeighbors v0.4.4
  [6fe1bfb0] OffsetArrays v1.0.2
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [429524aa] Optim v0.20.1
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.5.3
  [2dfb63ee] PooledArrays v0.5.3
  [85a6dd25] PositiveFactorizations v0.2.3
  [1fd47b50] QuadGK v2.3.1
  [c84ed2f1] Ratios v0.4.0
  [3cdcf5f2] RecipesBase v0.8.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [1277b4bf] ShiftedArrays v1.0.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [2cb19f9e] StatsKit v0.3.0
  [3eaba693] StatsModels v0.6.6
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.0
  [9e3dc215] TimeSeries v0.16.0
  [ea10d353] WeakRefStrings v0.5.8
  [efce3f68] WoodburyMatrices v0.5.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
    Testing Bootstrap
#                                                                          1.7%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ##############################                                            42.9%######################################################################## 100.0%
Status `/tmp/jl_GTJhdO/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [b99e7846] BinaryProvider v0.5.8
  [e28b5b4c] Bootstrap v2.2.0
  [336ed68f] CSV v0.3.1
  [324d7699] CategoricalArrays v0.7.7
  [944b1d66] CodecZlib v0.6.0
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.19.4
  [9a8bc11e] DataStreams v0.4.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [31c24e10] Distributions v0.21.12
  [e2ba6199] ExprTools v0.1.0
  [8f5d6c58] EzXML v1.1.0
  [5789e2e9] FileIO v1.2.2
  [1a297f60] FillArrays v0.8.4
  [38e38edf] GLM v1.3.6
  [7d512f48] InternedStrings v0.7.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [94ce4f54] Libiconv_jll v1.16.0+1
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.11
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [1fd47b50] QuadGK v2.3.1
  [df47a6cb] RData v0.7.1
  [ce6b1742] RDatasets v0.6.1
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [1277b4bf] ShiftedArrays v1.0.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [3eaba693] StatsModels v0.6.6
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.0
  [f269a46b] TimeZones v1.0.1
  [3bb67fe8] TranscodingStreams v0.9.5
  [ea10d353] WeakRefStrings v0.5.8
  [02c8fc9c] XML2_jll v2.9.9+1
  [83775a58] Zlib_jll v1.2.11+8
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
ERROR: LoadError: LoadError: UndefVarError: File not defined
Stacktrace:
 [1] getproperty at ./Base.jl:26 [inlined]
 [2] (::RDatasets.var"#1#2"{String,String})(::IOStream) at /home/pkgeval/.julia/packages/RDatasets/1Ih8s/src/dataset.jl:28
 [3] open(::RDatasets.var"#1#2"{String,String}, ::String, ::Vararg{String,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at ./io.jl:298
 [4] open at ./io.jl:296 [inlined]
 [5] dataset(::String, ::String) at /home/pkgeval/.julia/packages/RDatasets/1Ih8s/src/dataset.jl:26
 [6] top-level scope at /home/pkgeval/.julia/packages/Bootstrap/QldPq/test/test-bootsample-non-parametric.jl:14
 [7] include(::String) at ./client.jl:441
 [8] top-level scope at /home/pkgeval/.julia/packages/Bootstrap/QldPq/test/runtests.jl:8
 [9] include(::String) at ./client.jl:441
 [10] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/Bootstrap/QldPq/test/test-bootsample-non-parametric.jl:14
in expression starting at /home/pkgeval/.julia/packages/Bootstrap/QldPq/test/runtests.jl:6
    Testing CategoricalArrays
Status `/tmp/jl_ysHtvg/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [69de0a69] Parsers v0.3.11
  [189a3867] Reexport v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: `eltype(x::CategoricalString)` is deprecated, use `eltype(String(x))` instead.
│   caller = macro expansion at 01_typedef.jl:56 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/dmrjI/test/01_typedef.jl:56
Test Summary: | Pass  Total
01_typedef.jl |   99     99
Test Summary:    | Pass  Total
02_buildorder.jl |    6      6
Test Summary:     | Pass  Total
03_buildfields.jl |    6      6
Test Summary:      | Pass  Total
04_constructors.jl |  121    121
┌ Warning: `eltype(x::CategoricalString)` is deprecated, use `eltype(String(x))` instead.
│   caller = macro expansion at 05_convert.jl:76 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/dmrjI/test/05_convert.jl:76
Test Summary: | Pass  Total
05_convert.jl |  131    131
Test Summary: | Pass  Total
05_copy.jl    |   14     14
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:79
  Expression: sprint(show, pool) == "$(CategoricalPool){$(DateStr),UInt32}([1999-12-01,1991-08-01,1993-10-01])"
   Evaluated: "CategoricalArrays.CategoricalPool{Dates.Date,UInt32}([Dates.Date(\"1999-12-01\"),Dates.Date(\"1991-08-01\"),Dates.Date(\"1993-10-01\")])" == "CategoricalArrays.CategoricalPool{Dates.Date,UInt32}([1999-12-01,1991-08-01,1993-10-01])"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:79
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:80
  Expression: sprint(show, opool) == "$(CategoricalPool){$(DateStr),UInt32}([1991-08-01,1993-10-01,1999-12-01]) with ordered levels"
   Evaluated: "CategoricalArrays.CategoricalPool{Dates.Date,UInt32}([Dates.Date(\"1991-08-01\"),Dates.Date(\"1993-10-01\"),Dates.Date(\"1999-12-01\")]) with ordered levels" == "CategoricalArrays.CategoricalPool{Dates.Date,UInt32}([1991-08-01,1993-10-01,1999-12-01]) with ordered levels"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:80
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:82
  Expression: sprint(show, nv1) == "$(CategoricalValue){$(DateStr),UInt32} 1999-12-01"
   Evaluated: "CategoricalArrays.CategoricalValue{Dates.Date,UInt32} Dates.Date(\"1999-12-01\")" == "CategoricalArrays.CategoricalValue{Dates.Date,UInt32} 1999-12-01"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:82
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:83
  Expression: sprint(show, nv2) == "$(CategoricalValue){$(DateStr),UInt32} 1991-08-01"
   Evaluated: "CategoricalArrays.CategoricalValue{Dates.Date,UInt32} Dates.Date(\"1991-08-01\")" == "CategoricalArrays.CategoricalValue{Dates.Date,UInt32} 1991-08-01"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:83
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:84
  Expression: sprint(show, nv3) == "$(CategoricalValue){$(DateStr),UInt32} 1993-10-01"
   Evaluated: "CategoricalArrays.CategoricalValue{Dates.Date,UInt32} Dates.Date(\"1993-10-01\")" == "CategoricalArrays.CategoricalValue{Dates.Date,UInt32} 1993-10-01"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:84
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:86
  Expression: sprint(show, ov1) == "$(CategoricalValue){$(DateStr),UInt32} 1999-12-01 (3/3)"
   Evaluated: "CategoricalArrays.CategoricalValue{Dates.Date,UInt32} Dates.Date(\"1999-12-01\") (3/3)" == "CategoricalArrays.CategoricalValue{Dates.Date,UInt32} 1999-12-01 (3/3)"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:86
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:87
  Expression: sprint(show, ov2) == "$(CategoricalValue){$(DateStr),UInt32} 1991-08-01 (1/3)"
   Evaluated: "CategoricalArrays.CategoricalValue{Dates.Date,UInt32} Dates.Date(\"1991-08-01\") (1/3)" == "CategoricalArrays.CategoricalValue{Dates.Date,UInt32} 1991-08-01 (1/3)"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:87
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:88
  Expression: sprint(show, ov3) == "$(CategoricalValue){$(DateStr),UInt32} 1993-10-01 (2/3)"
   Evaluated: "CategoricalArrays.CategoricalValue{Dates.Date,UInt32} Dates.Date(\"1993-10-01\") (2/3)" == "CategoricalArrays.CategoricalValue{Dates.Date,UInt32} 1993-10-01 (2/3)"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:88
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:91
  Expression: sprint(show, nv1, context = :typeinfo => typeof(nv1)) == "1999-12-01"
   Evaluated: "Dates.Date(\"1999-12-01\")" == "1999-12-01"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:91
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:92
  Expression: sprint(show, nv2, context = :typeinfo => typeof(nv2)) == "1991-08-01"
   Evaluated: "Dates.Date(\"1991-08-01\")" == "1991-08-01"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:92
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:93
  Expression: sprint(show, nv3, context = :typeinfo => typeof(nv3)) == "1993-10-01"
   Evaluated: "Dates.Date(\"1993-10-01\")" == "1993-10-01"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:93
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:95
  Expression: sprint(show, ov1, context = :typeinfo => typeof(ov1)) == "1999-12-01"
   Evaluated: "Dates.Date(\"1999-12-01\")" == "1999-12-01"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:95
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:96
  Expression: sprint(show, ov2, context = :typeinfo => typeof(ov2)) == "1991-08-01"
   Evaluated: "Dates.Date(\"1991-08-01\")" == "1991-08-01"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:96
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:97
  Expression: sprint(show, ov3, context = :typeinfo => typeof(ov3)) == "1993-10-01"
   Evaluated: "Dates.Date(\"1993-10-01\")" == "1993-10-01"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:97
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:112
  Expression: repr(nv1) == repr(ov1) == "1999-12-01"
   Evaluated: "Dates.Date(\"1999-12-01\")" == "Dates.Date(\"1999-12-01\")" == "1999-12-01"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:112
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:113
  Expression: repr(nv2) == repr(ov2) == "1991-08-01"
   Evaluated: "Dates.Date(\"1991-08-01\")" == "Dates.Date(\"1991-08-01\")" == "1991-08-01"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:113
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
show() for CategoricalPool{Date} and its values: Test Failed at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:114
  Expression: repr(nv3) == repr(ov3) == "1993-10-01"
   Evaluated: "Dates.Date(\"1993-10-01\")" == "Dates.Date(\"1993-10-01\")" == "1993-10-01"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:114
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/06_show.jl:66
Test Summary:                                       | Pass  Fail  Total
06_show.jl                                          |   35    17     52
  show() for CategoricalPool{String} and its values |   23           23
  show() for CategoricalPool{Date} and its values   |    6    17     23
  JSON.lower                                        |    2            2
  JSON.lower                                        |    2            2
  JSON.lower                                        |    2            2
Test Summary:                                       | Pass  Fail  Total
06_show.jl                                          |   35    17     52
  show() for CategoricalPool{String} and its values |   23           23
  show() for CategoricalPool{Date} and its values   |    6    17     23
  JSON.lower                                        |    2            2
  JSON.lower                                        |    2            2
  JSON.lower                                        |    2            2
ERROR: LoadError: Some tests did not pass: 35 passed, 17 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/CategoricalArrays/dmrjI/test/runtests.jl:36
caused by [exception 1]
Some tests did not pass: 35 passed, 17 failed, 0 errored, 0 broken.
    Testing Clustering
Status `/tmp/jl_2jJIE0/Manifest.toml`
  [b99e7846] BinaryProvider v0.5.8
  [aaaa29a8] Clustering v0.13.3
  [944b1d66] CodecZlib v0.6.0
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.9
  [b4f34e82] Distances v0.8.2
  [e1d29d7a] Missings v0.4.3
  [b8a86587] NearestNeighbors v0.4.4
  [bac558e1] OrderedCollections v1.1.0
  [a2af1166] SortingAlgorithms v0.3.1
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [3bb67fe8] TranscodingStreams v0.9.5
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [de0858da] Printf 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [4ec0a83e] Unicode 
Runing tests:
* seeding.jl ...
Test Summary: | Pass  Total
seeding       |   64     64
* kmeans.jl ...
  Iters               objv        objv-change | affected 
-------------------------------------------------------------
      0       1.470563e+00
      1       7.352817e-01      -7.352817e-01 |        0
      2       7.352817e-01       0.000000e+00 |        0
K-means converged with 2 iterations (objv = 0.7352816593329847)
K-means converged with 2 iterations (objv = 0.09164881001248792)
┌ Warning: The clustering cost increased at iteration #1
└ @ Clustering ~/.julia/packages/Clustering/Dlx92/src/kmeans.jl:179
Test Summary:      | Pass  Total
kmeans() (k-means) |   87     87
* kmedoids.jl ...
  Iters               objv        objv-change
-----------------------------------------------------
      0       1.589132e+00
      1       1.623600e+00       3.446832e-02
      2       1.623600e+00       0.000000e+00
K-medoids converged with 2 iterations (objv = 1.6236002870003423)
K-medoids converged with 2 iterations (objv = 1.6236002870003423)
Test Summary:          | Pass  Total
kmedoids() (k-medoids) |   26     26
* affprop.jl ...
  Iters  objv-change | exemplars 
-----------------------------------------------------
      1   1.7243e+00 |        1
      2   1.1599e+00 |        1
      3   1.0111e+00 |        1
      4   8.2884e-01 |        1
      5   6.2996e-01 |        1
      6   4.4970e-01 |        1
      7   3.0568e-01 |        1
      8   1.9999e-01 |        1
      9   1.2694e-01 |        1
     10   7.8624e-02 |        1
Affinity propagation converged with 10 iterations: 1 exemplars.
Affinity propagation converged with 9 iterations: 1 exemplars.
Test Summary:                         | Pass  Total
affinityprop() (affinity propagation) |   78     78
* dbscan.jl ...
Test Summary:                | Pass  Total
dbscan() (DBSCAN clustering) |   19     19
* fuzzycmeans.jl ...
  Iters      center-change
----------------------------
      1       5.244585e-01
      2       1.013155e-01
      3       2.621402e-01
      4       2.313798e-01
      5       3.691017e-02
Fuzzy C-means converged with 5 iterations (δ = 0.036910170483319474)
Fuzzy C-means converged with 6 iterations (δ = 0.052544440650040276)
Test Summary:  | Pass  Total
fuzzy_cmeans() |   36     36
* counts.jl ...
Test Summary:                 | Pass  Total
counts() (contingency matrix) |   22     22
* silhouette.jl ...
Test Summary: | Pass  Broken  Total
silhouettes() |   11       1     12
* varinfo.jl ...
Test Summary:                       | Pass  Total
varinfo() (variational information) |    7      7
* randindex.jl ...
Test Summary:            | Pass  Total
randindex() (Rand index) |   13     13
* hclust.jl ...
Test Summary:                      | Pass  Total
hclust() (hierarchical clustering) | 6665   6665
* mcl.jl ...
[ Info: Starting MCL iterations...
┌ Info: MCL iter. #0: rel.Δ=
└   rel_delta = 0.0
[ Info: MCL converged after 0 iteration(s)
[ Info: Generating MCL clusters...
[ Info: Starting MCL iterations...
[ Info: MCL converged after 0 iteration(s)
[ Info: Generating MCL clusters...
Test Summary: | Pass  Broken  Total
MCL           |   33       1     34
* vmeasure.jl ...
Test Summary: | Pass  Broken  Total
V-measure     |    8       1      9
* mutualinfo.jl ...
Test Summary:                     | Pass  Total
mutualinfo() (mutual information) |    4      4
    Testing Clustering tests passed 
┌ Warning: using test/REQUIRE files is deprecated and current support is lacking in some areas
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1413
    Testing CSV
Status `/tmp/jl_CTGNbG/Manifest.toml`
  [b99e7846] BinaryProvider v0.5.8
  [336ed68f] CSV v0.3.1
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.19.4
  [9a8bc11e] DataStreams v0.4.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [55939f99] DecFP v0.4.10
  [7d512f48] InternedStrings v0.7.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.0
  [ea10d353] WeakRefStrings v0.5.8
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
testing Int
testing Int Custom IO
testing Float64 Custom IO
testing Float64
testing DecFP custom IO
testing DecFP
testing String
testing WeakRefString
testing String Custom IO
testing Date
testing Date Custom IO
testing DateTime
testing DateTime Custom IO
testing Char
testing Bool
testing All types
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = #26 at Source.jl:172 [inlined]
└ @ Core ~/.julia/packages/CSV/tT4Xy/src/Source.jl:172
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = #26 at Source.jl:172 [inlined]
└ @ Core ~/.julia/packages/CSV/tT4Xy/src/Source.jl:172
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = CSV.Source(; fullpath::Base.GenericIOBuffer{Array{UInt8,1}}, options::CSV.Options{Nothing}, header::Array{String,1}, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at Source.jl:210
└ @ CSV ~/.julia/packages/CSV/tT4Xy/src/Source.jl:210
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = CSV.Source(; fullpath::Base.GenericIOBuffer{Array{UInt8,1}}, options::CSV.Options{Nothing}, header::Array{String,1}, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at Source.jl:216
└ @ CSV ~/.julia/packages/CSV/tT4Xy/src/Source.jl:216
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = #26 at Source.jl:172 [inlined]
└ @ Core ~/.julia/packages/CSV/tT4Xy/src/Source.jl:172
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = #26 at Source.jl:172 [inlined]
└ @ Core ~/.julia/packages/CSV/tT4Xy/src/Source.jl:172
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = CSV.Source(; fullpath::String, options::CSV.Options{Nothing}, header::Int64, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at Source.jl:210
└ @ CSV ~/.julia/packages/CSV/tT4Xy/src/Source.jl:210
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = CSV.Source(; fullpath::String, options::CSV.Options{Nothing}, header::Int64, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at Source.jl:216
└ @ CSV ~/.julia/packages/CSV/tT4Xy/src/Source.jl:216
Basic CSV.Source: Error During Test at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/source.jl:1
  Got exception outside of a @test
  MethodError: no method matching streamtypes(::Type{DataFrame})
  Closest candidates are:
    streamtypes(!Matched::Type{Array}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/namedtuples.jl:11
    streamtypes(!Matched::Type{#s16} where #s16<:NamedTuple) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/namedtuples.jl:53
    streamtypes(!Matched::Type{CSV.Sink}) at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Sink.jl:34
  Stacktrace:
   [1] stream!(::CSV.Source{Base.GenericIOBuffer{Array{UInt8,1}},Nothing}, ::DataStreams.Data.Query{0x01,Tuple{DataStreams.Data.QueryColumn{0x01,Float64,1,1,:col1,nothing,()},DataStreams.Data.QueryColumn{0x01,Float64,2,2,:col2,nothing,()},DataStreams.Data.QueryColumn{0x01,Float64,3,3,:col3,nothing,()}},(),nothing,nothing}, ::Type{DataFrame}; append::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/query.jl:574
   [2] stream!(::CSV.Source{Base.GenericIOBuffer{Array{UInt8,1}},Nothing}, ::Type{DataFrame}; append::Bool, transforms::Dict{Int64,Function}, filter::Function, columns::Array{Any,1}, actions::Array{Any,1}, limit::Nothing, offset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/query.jl:538
   [3] read(::CSV.Source{Base.GenericIOBuffer{Array{UInt8,1}},Nothing}, ::Type{DataFrame}; append::Bool, transforms::Dict{Int64,Function}) at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Source.jl:359
   [4] read at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Source.jl:359 [inlined]
   [5] read(::CSV.Source{Base.GenericIOBuffer{Array{UInt8,1}},Nothing}) at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Source.jl:358
   [6] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/source.jl:20
   [7] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [8] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/source.jl:4
   [9] include(::String) at ./client.jl:441
   [10] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/runtests.jl:24
   [11] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [12] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/runtests.jl:21
   [13] include(::String) at ./client.jl:441
   [14] top-level scope at none:6
   [15] eval(::Module, ::Any) at ./boot.jl:331
   [16] exec_options(::Base.JLOptions) at ./client.jl:264
   [17] _start() at ./client.jl:490
  
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = CSV.Source(; fullpath::String, options::CSV.Options{DateFormat{Symbol("yyyy-mm-dd"),Tuple{Dates.DatePart{'y'},Dates.Delim{Char,1},Dates.DatePart{'m'},Dates.Delim{Char,1},Dates.DatePart{'d'}}}}, header::Int64, datarow::Int64, types::Array{DataType,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at Source.jl:210
└ @ CSV ~/.julia/packages/CSV/tT4Xy/src/Source.jl:210
CSV.Source keyword arguments: Error During Test at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/source.jl:116
  Got exception outside of a @test
  MethodError: no method matching streamtypes(::Type{DataFrame})
  Closest candidates are:
    streamtypes(!Matched::Type{Array}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/namedtuples.jl:11
    streamtypes(!Matched::Type{#s16} where #s16<:NamedTuple) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/namedtuples.jl:53
    streamtypes(!Matched::Type{CSV.Sink}) at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Sink.jl:34
  Stacktrace:
   [1] stream!(::CSV.Source{Base.GenericIOBuffer{Array{UInt8,1}},DateFormat{Symbol("yyyy-mm-dd"),Tuple{Dates.DatePart{'y'},Dates.Delim{Char,1},Dates.DatePart{'m'},Dates.Delim{Char,1},Dates.DatePart{'d'}}}}, ::DataStreams.Data.Query{0x01,Tuple{DataStreams.Data.QueryColumn{0x01,Date,1,1,:col1,nothing,()}},(),nothing,nothing}, ::Type{DataFrame}; append::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/query.jl:574
   [2] stream!(::CSV.Source{Base.GenericIOBuffer{Array{UInt8,1}},DateFormat{Symbol("yyyy-mm-dd"),Tuple{Dates.DatePart{'y'},Dates.Delim{Char,1},Dates.DatePart{'m'},Dates.Delim{Char,1},Dates.DatePart{'d'}}}}, ::Type{DataFrame}; append::Bool, transforms::Dict{Int64,Function}, filter::Function, columns::Array{Any,1}, actions::Array{Any,1}, limit::Nothing, offset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/query.jl:538
   [3] read(::CSV.Source{Base.GenericIOBuffer{Array{UInt8,1}},DateFormat{Symbol("yyyy-mm-dd"),Tuple{Dates.DatePart{'y'},Dates.Delim{Char,1},Dates.DatePart{'m'},Dates.Delim{Char,1},Dates.DatePart{'d'}}}}, ::Type{DataFrame}; append::Bool, transforms::Dict{Int64,Function}) at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Source.jl:359
   [4] read at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Source.jl:359 [inlined]
   [5] read(::CSV.Source{Base.GenericIOBuffer{Array{UInt8,1}},DateFormat{Symbol("yyyy-mm-dd"),Tuple{Dates.DatePart{'y'},Dates.Delim{Char,1},Dates.DatePart{'m'},Dates.Delim{Char,1},Dates.DatePart{'d'}}}}) at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Source.jl:358
   [6] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/source.jl:135
   [7] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [8] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/source.jl:119
   [9] include(::String) at ./client.jl:441
   [10] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/runtests.jl:24
   [11] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [12] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/runtests.jl:21
   [13] include(::String) at ./client.jl:441
   [14] top-level scope at none:6
   [15] eval(::Module, ::Any) at ./boot.jl:331
   [16] exec_options(::Base.JLOptions) at ./client.jl:264
   [17] _start() at ./client.jl:490
  
CSV.Source various files: Error During Test at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/source.jl:378
  Got exception outside of a @test
  MethodError: promote_type2(::Type{Union{Missing, WeakRefString{UInt8}}}, ::Type{Missing}) is ambiguous. Candidates:
    promote_type2(T::Type{#s57} where #s57, ::Type{Missing}) in CSV at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/io.jl:191
    promote_type2(::Type{Union{Missing, T}}, ::Type{S}) where {T, S} in CSV at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/io.jl:194
    promote_type2(::Type{S}, ::Type{Union{Missing, T}}) where {T, S} in CSV at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/io.jl:195
  Possible fix, define
    promote_type2(::Type{Union{Missing, T}}, ::Type{Missing}) where T
  Stacktrace:
   [1] CSV.Source(; fullpath::String, options::CSV.Options{Nothing}, header::Int64, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Source.jl:168
   [2] CSV.Source(::String; delim::UInt8, quotechar::UInt8, escapechar::UInt8, missingstring::String, null::Nothing, header::Int64, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, dateformat::Nothing, decimal::UInt8, truestring::String, falsestring::String, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Source.jl:31
   [3] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/source.jl:381
   [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [5] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/source.jl:381
   [6] include(::String) at ./client.jl:441
   [7] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/runtests.jl:24
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/runtests.jl:21
   [10] include(::String) at ./client.jl:441
   [11] top-level scope at none:6
   [12] eval(::Module, ::Any) at ./boot.jl:331
   [13] exec_options(::Base.JLOptions) at ./client.jl:264
   [14] _start() at ./client.jl:490
  
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = CSV.TransposedSource(; fullpath::String, options::CSV.Options{Missing}, header::Int64, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at TransposedSource.jl:263
└ @ CSV ~/.julia/packages/CSV/tT4Xy/src/TransposedSource.jl:263
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = CSV.TransposedSource(; fullpath::String, options::CSV.Options{Missing}, header::Int64, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at TransposedSource.jl:269
└ @ CSV ~/.julia/packages/CSV/tT4Xy/src/TransposedSource.jl:269
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = (::DataStreams.Data.var"#7#8")(::Type{T} where T) at DataStreams.jl:68
└ @ DataStreams.Data ~/.julia/packages/DataStreams/mEqAy/src/DataStreams.jl:68
CSV.TransposedSource: Error During Test at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/source.jl:460
  Got exception outside of a @test
  MethodError: no method matching streamtypes(::Type{DataFrame})
  Closest candidates are:
    streamtypes(!Matched::Type{Array}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/namedtuples.jl:11
    streamtypes(!Matched::Type{#s16} where #s16<:NamedTuple) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/namedtuples.jl:53
    streamtypes(!Matched::Type{CSV.Sink}) at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Sink.jl:34
  Stacktrace:
   [1] stream!(::CSV.TransposedSource{Base.GenericIOBuffer{Array{UInt8,1}},Missing}, ::DataStreams.Data.Query{0x01,Tuple{DataStreams.Data.QueryColumn{0x01,Union{Missing, Int64},1,1,:col1,nothing,()},DataStreams.Data.QueryColumn{0x01,Union{Missing, Int64},2,2,:col2,nothing,()},DataStreams.Data.QueryColumn{0x01,Union{Missing, Int64},3,3,:col3,nothing,()}},(),nothing,nothing}, ::Type{DataFrame}; append::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/query.jl:574
   [2] stream!(::CSV.TransposedSource{Base.GenericIOBuffer{Array{UInt8,1}},Missing}, ::Type{DataFrame}; append::Bool, transforms::Dict{Int64,Function}, filter::Function, columns::Array{Any,1}, actions::Array{Any,1}, limit::Nothing, offset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/query.jl:538
   [3] read(::String, ::Type{T} where T; append::Bool, transforms::Dict{Int64,Function}, transpose::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Source.jl:348
   [4] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/source.jl:463
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [6] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/source.jl:463
   [7] include(::String) at ./client.jl:441
   [8] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/runtests.jl:24
   [9] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [10] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/runtests.jl:21
   [11] include(::String) at ./client.jl:441
   [12] top-level scope at none:6
   [13] eval(::Module, ::Any) at ./boot.jl:331
   [14] exec_options(::Base.JLOptions) at ./client.jl:264
   [15] _start() at ./client.jl:490
  
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = #26 at Source.jl:172 [inlined]
└ @ Core ~/.julia/packages/CSV/tT4Xy/src/Source.jl:172
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = #26 at Source.jl:172 [inlined]
└ @ Core ~/.julia/packages/CSV/tT4Xy/src/Source.jl:172
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = CSV.Source(; fullpath::Base.GenericIOBuffer{SubArray{UInt8,1,Array{UInt8,1},Tuple{UnitRange{Int64}},true}}, options::CSV.Options{Nothing}, header::Int64, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at Source.jl:210
└ @ CSV ~/.julia/packages/CSV/tT4Xy/src/Source.jl:210
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = CSV.Source(; fullpath::Base.GenericIOBuffer{SubArray{UInt8,1,Array{UInt8,1},Tuple{UnitRange{Int64}},true}}, options::CSV.Options{Nothing}, header::Int64, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at Source.jl:216
└ @ CSV ~/.julia/packages/CSV/tT4Xy/src/Source.jl:216
Write to IOBuffer: Error During Test at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/sink.jl:1
  Got exception outside of a @test
  MethodError: no method matching streamtypes(::Type{DataFrame})
  Closest candidates are:
    streamtypes(!Matched::Type{Array}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/namedtuples.jl:11
    streamtypes(!Matched::Type{#s16} where #s16<:NamedTuple) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/namedtuples.jl:53
    streamtypes(!Matched::Type{CSV.Sink}) at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Sink.jl:34
  Stacktrace:
   [1] stream!(::CSV.Source{Base.GenericIOBuffer{Array{UInt8,1}},Nothing}, ::DataStreams.Data.Query{0x01,Tuple{DataStreams.Data.QueryColumn{0x01,Union{Missing, Int64},1,1,:col1,nothing,()},DataStreams.Data.QueryColumn{0x01,Union{Missing, Int64},2,2,:col2,nothing,()},DataStreams.Data.QueryColumn{0x01,Union{Missing, Int64},3,3,:col3,nothing,()}},(),nothing,nothing}, ::Type{DataFrame}; append::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/query.jl:574
   [2] stream!(::CSV.Source{Base.GenericIOBuffer{Array{UInt8,1}},Nothing}, ::Type{DataFrame}; append::Bool, transforms::Dict{Int64,Function}, filter::Function, columns::Array{Any,1}, actions::Array{Any,1}, limit::Nothing, offset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/query.jl:538
   [3] read(::Base.GenericIOBuffer{SubArray{UInt8,1,Array{UInt8,1},Tuple{UnitRange{Int64}},true}}, ::Type{T} where T; append::Bool, transforms::Dict{Int64,Function}, transpose::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Source.jl:348
   [4] read at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Source.jl:347 [inlined] (repeats 2 times)
   [5] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/sink.jl:3
   [6] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [7] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/sink.jl:2
   [8] include(::String) at ./client.jl:441
   [9] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/runtests.jl:25
   [10] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [11] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/runtests.jl:21
   [12] include(::String) at ./client.jl:441
   [13] top-level scope at none:6
   [14] eval(::Module, ::Any) at ./boot.jl:331
   [15] exec_options(::Base.JLOptions) at ./client.jl:264
   [16] _start() at ./client.jl:490
  
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = #26 at Source.jl:172 [inlined]
└ @ Core ~/.julia/packages/CSV/tT4Xy/src/Source.jl:172
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = #26 at Source.jl:172 [inlined]
└ @ Core ~/.julia/packages/CSV/tT4Xy/src/Source.jl:172
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = CSV.Source(; fullpath::MultiStream{Base.GenericIOBuffer{Array{UInt8,1}}}, options::CSV.Options{Nothing}, header::Int64, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at Source.jl:210
└ @ CSV ~/.julia/packages/CSV/tT4Xy/src/Source.jl:210
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = CSV.Source(; fullpath::MultiStream{Base.GenericIOBuffer{Array{UInt8,1}}}, options::CSV.Options{Nothing}, header::Int64, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at Source.jl:216
└ @ CSV ~/.julia/packages/CSV/tT4Xy/src/Source.jl:216
CSV: Error During Test at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/multistream.jl:48
  Test threw exception
  Expression: CSV.read(stream) == CSV.read(IOBuffer("a,b,c\n1,2,3\n4,5,6"))
  MethodError: no method matching streamtypes(::Type{DataFrame})
  Closest candidates are:
    streamtypes(!Matched::Type{Array}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/namedtuples.jl:11
    streamtypes(!Matched::Type{#s16} where #s16<:NamedTuple) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/namedtuples.jl:53
    streamtypes(!Matched::Type{CSV.Sink}) at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Sink.jl:34
  Stacktrace:
   [1] stream!(::CSV.Source{Base.GenericIOBuffer{Array{UInt8,1}},Nothing}, ::DataStreams.Data.Query{0x01,Tuple{DataStreams.Data.QueryColumn{0x01,Union{Missing, Int64},1,1,:a,nothing,()},DataStreams.Data.QueryColumn{0x01,Union{Missing, Int64},2,2,:b,nothing,()},DataStreams.Data.QueryColumn{0x01,Union{Missing, Int64},3,3,:c,nothing,()}},(),nothing,nothing}, ::Type{DataFrame}; append::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/query.jl:574
   [2] stream!(::CSV.Source{Base.GenericIOBuffer{Array{UInt8,1}},Nothing}, ::Type{DataFrame}; append::Bool, transforms::Dict{Int64,Function}, filter::Function, columns::Array{Any,1}, actions::Array{Any,1}, limit::Nothing, offset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataStreams/mEqAy/src/query.jl:538
   [3] read(::MultiStream{Base.GenericIOBuffer{Array{UInt8,1}}}, ::Type{T} where T; append::Bool, transforms::Dict{Int64,Function}, transpose::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Source.jl:348
   [4] read at /home/pkgeval/.julia/packages/CSV/tT4Xy/src/Source.jl:347 [inlined] (repeats 2 times)
   [5] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/multistream.jl:48
   [6] include(::String) at ./client.jl:441
   [7] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/runtests.jl:26
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/runtests.jl:21
  
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = #26 at Source.jl:172 [inlined]
└ @ Core ~/.julia/packages/CSV/tT4Xy/src/Source.jl:172
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = #26 at Source.jl:172 [inlined]
└ @ Core ~/.julia/packages/CSV/tT4Xy/src/Source.jl:172
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = CSV.Source(; fullpath::Base.GenericIOBuffer{Array{UInt8,1}}, options::CSV.Options{Nothing}, header::Int64, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at Source.jl:182
└ @ CSV ~/.julia/packages/CSV/tT4Xy/src/Source.jl:182
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = CSV.Source(; fullpath::Base.GenericIOBuffer{Array{UInt8,1}}, options::CSV.Options{Nothing}, header::Int64, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at Source.jl:210
└ @ CSV ~/.julia/packages/CSV/tT4Xy/src/Source.jl:210
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = CSV.Source(; fullpath::Base.GenericIOBuffer{Array{UInt8,1}}, options::CSV.Options{Nothing}, header::Int64, datarow::Int64, types::Array{Type,1}, allowmissing::Symbol, nullable::Nothing, categorical::Bool, weakrefstrings::Nothing, strings::Symbol, footerskip::Int64, rows_for_type_detect::Int64, rows::Int64, use_mmap::Bool) at Source.jl:216
└ @ CSV ~/.julia/packages/CSV/tT4Xy/src/Source.jl:216
Test Summary:                  | Pass  Error  Total
CSV                            |  526      6    532
  Int                          |   30            30
  Int Custom IO                |   26            26
  Float64 Custom IO            |   43            43
  Float64                      |   57            57
  DecFP Custom IO              |   43            43
  DecFP                        |   40            40
  String                       |   36            36
  WeakRefString                |   29            29
  String Custom IO             |   38            38
  Date                         |   19            19
  Date Custom IO               |   17            17
  DateTime                     |   18            18
  DateTime Custom IO           |   18            18
  Char                         |   27            27
  Bool                         |   23            23
  All types                    |   19            19
  empty fields                 |    1             1
  misformatted CSV lines       |    4             4
  Basic CSV.Source             |    8      1      9
  CSV.Source keyword arguments |   11      1     12
  CSV.Source various files     |           1      1
  CSV.TransposedSource         |           1      1
  Write to IOBuffer            |           1      1
ERROR: LoadError: Some tests did not pass: 526 passed, 0 failed, 6 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/CSV/tT4Xy/test/runtests.jl:19
    Testing DataFrames
Status `/tmp/jl_Gi6Ptp/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.19.4
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [e7dc6d0d] DataValues v0.4.13
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [b964fa9f] LaTeXStrings v1.0.3
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Running tests:
Test Summary: | Pass  Total
make_unique   |    3      3
Test Summary: | Pass  Total
count         |    2      2
Test Summary: | Pass  Total
inner_outer   |    2      2
	[1m[32mPASSED[0m: utils.jl
Test Summary: | Pass  Total
hcat          |   10     10
Test Summary: | Pass  Total
hcat: copying |   26     26
Test Summary:            | Pass  Total
hcat ::AbstractDataFrame |    2      2
Test Summary:            | Pass  Total
hcat ::AbstractDataFrame |    2      2
Test Summary:          | Pass  Total
hcat ::AbstractVectors |   11     11
Test Summary:  | Pass  Total
hcat: copycols |   76     76
Test Summary: | Pass  Total
vcat          |   21     21
Test Summary: | Pass  Total
vcat copy     |    2      2
Test Summary: | Pass  Total
vcat >2 args  |    4      4
Test Summary:       | Pass  Total
vcat mixed coltypes |   18     18
Test Summary:     | Pass  Total
vcat out of order |   20     20
Test Summary:         | Pass  Total
vcat with cols=:union |    6      6
Test Summary:             | Pass  Total
vcat with cols=:intersect |    6      6
Test Summary:          | Pass  Total
vcat with cols::Vector |   15     15
Test Summary: | Pass  Total
vcat errors   |   32     32
Test Summary:  | Pass  Total
vcat with view |    1      1
	[1m[32mPASSED[0m: cat.jl
Test Summary: | Pass  Total
constructors  |   57     57
Test Summary:                 | Pass  Total
completecases and dropmissing |  209    209
Test Summary: | Pass  Total
merge         |   17     17
	[1m[32mPASSED[0m: data.jl
Test Summary:     | Pass  Total
selector mutation |   12     12
Test Summary:                    | Pass  Total
fuzzy matching and ArgumentError |    8      8
Test Summary:  | Pass  Total
Regex indexing |   36     36
Test Summary: | Pass  Total
Not indexing  |   36     36
Test Summary:    | Pass  Total
Between indexing |   20     20
Test Summary: | Pass  Total
All indexing  |   25     25
	[1m[32mPASSED[0m: index.jl
Test Summary: | Pass  Total
equality      |    9      9
Test Summary: | Pass  Total
copying       |    6      6
Test Summary:      | Pass  Total
similar / missings |    2      2
Test Summary: | Pass  Total
hasproperty   |    5      5
Test Summary: | Pass  Total
insertcols!   |   24     24
Test Summary:          | Pass  Total
DataFrame constructors |   19     19
┌ Error: Error adding value to column :first.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1301
┌ Error: Error adding value to column :first.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1301
┌ Error: Error adding value to column :second.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1301
┌ Error: Error adding value to column :second.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1187
┌ Error: Error adding value to column :second.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1187
┌ Error: Error adding value to column :first.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1187
┌ Error: Error adding value to column :first.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1187
┌ Error: Error adding value to column :second.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1187
┌ Error: Error adding value to column :y.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1187
┌ Error: Error adding value to column :a.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1301
┌ Error: Error adding value to column :a.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1187
┌ Error: Error adding value to column :a.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1187
┌ Error: Error adding value to column :a.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1301
┌ Error: Error adding value to column :a.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1187
┌ Error: Error adding value to column :a.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1187
Test Summary:  | Pass  Total
push!(df, row) |   51     51
Test Summary: | Pass  Total
select! Not   |   13     13
Test Summary: | Pass  Total
select Not    |   64     64
Test Summary:   | Pass  Total
select Not view |   76     76
Test Summary: | Pass  Total
select!       |   35     35
Test Summary: | Pass  Total
select        |   66     66
Test Summary: | Pass  Total
select view   |   78     78
Test Summary: | Pass  Total
deleterows!   |   40     40
Test Summary: | Pass  Total
describe      |    6      6
┌ Error: Error adding value to column B.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1144
┌ Error: Error adding value to column B.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1144
┌ Error: Error adding value to column a.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1144
┌ Error: Error adding value to column a.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/dataframe/dataframe.jl:1144
Test Summary: | Pass  Total
append!       |   18     18
Test Summary:     | Pass  Total
test categorical! |   14     14
Test Summary: | Pass  Total
categorical!  |   11     11
Test Summary: | Pass  Total
rename        |   20     20
Test Summary: | Pass  Total
size          |    5      5
Test Summary: | Pass  Total
description   |    8      8
Test Summary:      | Pass  Total
column conversions |   69     69
Test Summary:        | Pass  Total
test disallowmissing |  314    314
Test Summary:     | Pass  Total
test allowmissing |  312    312
Test Summary:    | Pass  Total
test categorical |  432    432
Test Summary: | Pass  Total
similar       |    8      8
Test Summary:                | Pass  Total
passing range to a DataFrame |    1      1
Test Summary:                | Pass  Total
test getindex using ! syntax |   15     15
Test Summary:                | Pass  Total
test corner case of getindex |    2      2
Test Summary:             | Pass  Total
empty data frame getindex |    9      9
Test Summary:               | Pass  Total
handling of end in indexing |   22     22
Test Summary:        | Pass  Total
aliasing in indexing |    5      5
Test Summary: | Pass  Total
permutecols!  |   21     21
Test Summary:                               | Pass  Total
getproperty, setproperty! and propertynames |   10     10
Test Summary:          | Pass  Total
duplicate column names |    1      1
Test Summary:         | Pass  Total
parent, size and axes |   11     11
Test Summary:                | Pass  Total
0-row DataFrame corner cases |    4      4
Test Summary:         |
And and Between tests | No tests
	[1m[32mPASSED[0m: dataframe.jl
Test Summary:         | Pass  Total
the output of unstack |   27     27
Test Summary:                               | Pass  Total
unstack promotion to support missing values |    8      8
┌ Warning: Duplicate entries in unstack at row 3 for key 1 and variable a.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/abstractdataframe/reshape.jl:251
┌ Warning: Duplicate entries in unstack at row 3 for key (1, 1) and variable a.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/abstractdataframe/reshape.jl:331
Test Summary:                         | Pass  Total
duplicate entries in unstack warnings |    9      9
┌ Warning: Missing value in variable variable at row 3. Skipping.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/abstractdataframe/reshape.jl:231
┌ Warning: Missing value in variable variable at row 3. Skipping.
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/abstractdataframe/reshape.jl:323
Test Summary:            | Pass  Total
missing values in colkey |    6      6
Test Summary:             | Pass  Total
stack-unstack correctness |    4      4
Test Summary: | Pass  Total
reshape       |   69     69
Test Summary:           | Pass  Total
column names duplicates |    5      5
	[1m[32mPASSED[0m: reshape.jl
Test Summary: | Pass  Total
constructors  |   28     28
Test Summary:          | Pass  Total
getindex and setindex! |   53     53
Test Summary: | Pass  Total
equality      |   17     17
Test Summary: | Pass  Total
isless        |   13     13
Test Summary: | Pass  Total
hashing       |    6      6
Test Summary: | Pass  Total
grouping      |    6      6
Test Summary:                               | Pass  Total
getproperty, setproperty! and propertynames |    6      6
Test Summary:                    | Pass  Total
keys, values and iteration, size |   31     31
Test Summary:    | Pass  Total
convert and copy |    6      6
Test Summary:            | Pass  Total
parent and parentindices |   34     34
Test Summary:         | Pass  Total
iteration and collect |   10     10
Test Summary:    | Pass  Total
duplicate column |   12     12
Test Summary:        | Pass  Total
conversion and push! |   15     15
Test Summary: | Pass  Total
show          |    7      7
	[1m[32mPASSED[0m: dataframerow.jl
Test Summary: | Pass  Total
LaTeX export  |    4      4
Test Summary:     | Pass  Total
Huge LaTeX export |    2      2
Test Summary: | Pass  Total
HTML output   |   11     11
Test Summary:   | Pass  Total
limit attribute |    2      2
Test Summary: | Pass  Total
printtable    |    1      1
Test Summary:  | Pass  Total
csv/tsv output |    6      6
Test Summary:                     | Pass  Total
empty data frame and DataFrameRow |   12     12
Test Summary: | Pass  Total
consistency   |    8      8
	[1m[32mPASSED[0m: io.jl
Test Summary: | Pass  Total
constructors  |   42     42
Test Summary:                          | Pass  Total
DataFrame keyword argument constructor |   22     22
Test Summary:         | Pass  Total
DataFrame constructor |   21     21
Test Summary:    | Pass  Total
pair constructor |   11     11
Test Summary: | Pass  Total
associative   |    9      9
Test Summary:       | Pass  Total
vector constructors |   58     58
Test Summary: | Pass  Total
recyclers     |    2      2
Test Summary:      | Pass  Total
constructor errors |   11     11
Test Summary: | Pass  Total
column types  |    3      3
Test Summary:      | Pass  Total
Matrix constructor |    4      4
Test Summary:          | Pass  Total
constructor with types |   19     19
	[1m[32mPASSED[0m: constructors.jl
Test Summary:    | Pass  Total
Conversion tests |   44     44
	[1m[32mPASSED[0m: conversions.jl
	[1m[32mPASSED[0m: sort.jl
Test Summary: | Pass  Total
parent        |    2      2
Test Summary: | Pass  Total
consistency   |    2      2
Test Summary:    | Pass  Total
accepted columns |    2      2
Test Summary:                                       | Pass  Total
by, groupby and map(::Function, ::GroupedDataFrame) |  915    915
Test Summary:          | Pass  Total
grouping with missings |  980    980
Test Summary:            | Pass  Total
grouping with three keys | 1426   1426
Test Summary:                           | Pass  Total
by, combine and map with pair interface |  374    374
Test Summary:                      | Pass  Total
combine with aggregation functions |  253    253
Test Summary:                      | Pass  Total
combine with aggregation functions |  253    253
Test Summary:                      | Pass  Total
combine with aggregation functions |  253    253
Test Summary:                      | Pass  Total
combine with aggregation functions |  253    253
Test Summary:      | Pass  Total
iteration protocol |    2      2
Test Summary: | Pass  Total
getindex      |   29     29
Test Summary:  | Pass  Total
== and isequal |   12     12
Test Summary: | Pass  Total
show          |   10     10
Test Summary: | Pass  Total
DataFrame     |   20     20
Test Summary:              | Pass  Total
groupindices and groupvars |    8      8
	[1m[32mPASSED[0m: grouping.jl
Test Summary: | Pass  Total
join types    |   20     20
Test Summary:       | Pass  Total
Test empty inputs 1 |   21     21
Test Summary:       | Pass  Total
Test empty inputs 2 |   21     21
Test Summary: | Pass  Total
issue #960    |    3      3
Test Summary: | Pass  Total
all joins     |   30     30
Test Summary:                    | Pass  Total
all joins with CategoricalArrays |   32     32
Test Summary:                                                     | Pass  Total
maintain CategoricalArray levels ordering on join - non-`on` cols |    6      6
Test Summary:                                                          | Pass  Total
maintain CategoricalArray levels ordering on join - ordering conflicts |   10     10
Test Summary:                                                           | Pass  Total
maintain CategoricalArray levels ordering on join - left is categorical |   12     12
Test Summary:                                   | Pass  Total
join on columns with different left/right names |   18     18
Test Summary:                  | Pass  Total
join with a column of type Any |   16     16
Test Summary:                                       | Pass  Total
joins with categorical columns and no matching rows |   24     24
Test Summary:     | Pass  Total
indicator columns |    4      4
Test Summary:                       | Pass  Total
test checks of merge key uniqueness |   18     18
Test Summary: | Pass  Total
consistency   |    3      3
	[1m[32mPASSED[0m: join.jl
Test Summary: | Pass  Total
SubDataFrame  |    7      7
Test Summary:   | Pass  Total
parent mutation |    4      4
Test Summary:                 | Pass  Total
getproperty and propertynames |   33     33
	[1m[32mPASSED[0m: iteration.jl
Test Summary: | Pass  Total
nonunique     |   18     18
	[1m[32mPASSED[0m: duplicates.jl
Test Summary:                            | Pass  Total
Basic show test with allrows and allcols |    9      9
Test Summary:    | Pass  Total
displaysize test |    4      4
Test Summary:             | Pass  Total
IOContext parameters test |    2      2
Test Summary:          | Pass  Total
SubDataFrame show test |    1      1
Test Summary:                                 | Pass  Total
Test showing StackedVector and RepeatedVector |    3      3
Test Summary:                                            | Pass  Total
Test colors and non-standard values: missing and nothing |    3      3
Test Summary:                  | Pass  Total
Test correct width computation |    1      1
Test Summary:                                                              | Pass  Total
Test showing special types: strings with escapes, categorical and BigFloat |    3      3
Test Summary:                              | Pass  Total
Test using :compact parameter of IOContext |    2      2
Test Summary:                              | Pass  Total
Test of DataFrameRows and DataFrameColumns |    6      6
Test Summary:                          | Pass  Total
Test empty data frame and DataFrameRow |    3      3
Test Summary: | Pass  Total
consistency   |    2      2
	[1m[32mPASSED[0m: show.jl
Test Summary:       | Pass  Total
copy - SubDataFrame |    5      5
Test Summary:     | Pass  Total
view -- DataFrame |   77     77
Test Summary:        | Pass  Total
view -- SubDataFrame |   62     62
Test Summary:                               | Pass  Total
getproperty, setproperty! and propertynames |    8      8
Test Summary: | Pass  Total
index         |   10     10
Test Summary: | Pass  Total
deleterows!   |    1      1
Test Summary: | Pass  Total
parent        |    6      6
Test Summary:    | Pass  Total
duplicate column |    6      6
Test Summary:           | Pass  Total
conversion to DataFrame |   12     12
	[1m[32mPASSED[0m: subdataframe.jl
Row-style: Error During Test at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:73
  Got exception outside of a @test
  MethodError: no method matching eachcolumn(::Tables.CopiedColumns{NamedTuple{(:a, :b),Tuple{Array{Int64,1},Array{Symbol,1}}}})
  Closest candidates are:
    eachcolumn(!Matched::Union{Function, Type}, !Matched::Tables.Schema{names,nothing}, !Matched::Any) where names at /home/pkgeval/.julia/packages/Tables/erUMm/src/utils.jl:109
    eachcolumn(!Matched::Union{Function, Type}, !Matched::Tables.Schema{names,types}, !Matched::Any) where {names, types} at /home/pkgeval/.julia/packages/Tables/erUMm/src/utils.jl:66
  Stacktrace:
   [1] fromcolumns(::Tables.CopiedColumns{NamedTuple{(:a, :b),Tuple{Array{Int64,1},Array{Symbol,1}}}}; copycols::Bool) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:13
   [2] DataFrame(::Array{NamedTuple{(:a, :b),Tuple{Int64,Symbol}},1}; copycols::Bool) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:43
   [3] DataFrame(::Array{NamedTuple{(:a, :b),Tuple{Int64,Symbol}},1}) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:39
   [4] macro expansion at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:80 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:74 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [8] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:57
   [9] include(::String) at ./client.jl:441
   [10] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/runtests.jl:38
   [11] include(::String) at ./client.jl:441
   [12] top-level scope at none:6
   [13] eval(::Module, ::Any) at ./boot.jl:331
   [14] exec_options(::Base.JLOptions) at ./client.jl:264
   [15] _start() at ./client.jl:490
  
Column-style: Error During Test at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:87
  Got exception outside of a @test
  MethodError: no method matching eachcolumn(::NamedTuple{(:a, :b),Tuple{Array{Int64,1},Array{Symbol,1}}})
  Closest candidates are:
    eachcolumn(!Matched::Union{Function, Type}, !Matched::Tables.Schema{names,nothing}, !Matched::Any) where names at /home/pkgeval/.julia/packages/Tables/erUMm/src/utils.jl:109
    eachcolumn(!Matched::Union{Function, Type}, !Matched::Tables.Schema{names,types}, !Matched::Any) where {names, types} at /home/pkgeval/.julia/packages/Tables/erUMm/src/utils.jl:66
  Stacktrace:
   [1] fromcolumns(::NamedTuple{(:a, :b),Tuple{Array{Int64,1},Array{Symbol,1}}}; copycols::Bool) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:17
   [2] DataFrame(::NamedTuple{(:a, :b),Tuple{Array{Int64,1},Array{Symbol,1}}}; copycols::Bool) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:32
   [3] DataFrame(::NamedTuple{(:a, :b),Tuple{Array{Int64,1},Array{Symbol,1}}}) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:23
   [4] macro expansion at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:92 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:88 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [8] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:57
   [9] include(::String) at ./client.jl:441
   [10] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/runtests.jl:38
   [11] include(::String) at ./client.jl:441
   [12] top-level scope at none:6
   [13] eval(::Module, ::Any) at ./boot.jl:331
   [14] exec_options(::Base.JLOptions) at ./client.jl:264
   [15] _start() at ./client.jl:490
  
Extras: Error During Test at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:102
  Test threw exception
  Expression: isequal(df, DataFrame(Tables.rowtable(df)))
  MethodError: no method matching eachcolumn(::Tables.CopiedColumns{NamedTuple{(:a, :b),Tuple{Array{Union{Missing, Int64},1},Array{Any,1}}}})
  Closest candidates are:
    eachcolumn(!Matched::Union{Function, Type}, !Matched::Tables.Schema{names,nothing}, !Matched::Any) where names at /home/pkgeval/.julia/packages/Tables/erUMm/src/utils.jl:109
    eachcolumn(!Matched::Union{Function, Type}, !Matched::Tables.Schema{names,types}, !Matched::Any) where {names, types} at /home/pkgeval/.julia/packages/Tables/erUMm/src/utils.jl:66
  Stacktrace:
   [1] fromcolumns(::Tables.CopiedColumns{NamedTuple{(:a, :b),Tuple{Array{Union{Missing, Int64},1},Array{Any,1}}}}; copycols::Bool) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:13
   [2] DataFrame(::Array{NamedTuple{(:a, :b),Tuple{Union{Missing, Int64},Any}},1}; copycols::Bool) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:43
   [3] DataFrame(::Array{NamedTuple{(:a, :b),Tuple{Union{Missing, Int64},Any}},1}) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:39
   [4] macro expansion at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:102 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:101 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [8] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:57
  
Extras: Error During Test at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:103
  Test threw exception
  Expression: isequal(df, DataFrame(Tables.columntable(df)))
  MethodError: no method matching eachcolumn(::NamedTuple{(:a, :b),Tuple{Array{Union{Missing, Int64},1},Array{Any,1}}})
  Closest candidates are:
    eachcolumn(!Matched::Union{Function, Type}, !Matched::Tables.Schema{names,nothing}, !Matched::Any) where names at /home/pkgeval/.julia/packages/Tables/erUMm/src/utils.jl:109
    eachcolumn(!Matched::Union{Function, Type}, !Matched::Tables.Schema{names,types}, !Matched::Any) where {names, types} at /home/pkgeval/.julia/packages/Tables/erUMm/src/utils.jl:66
  Stacktrace:
   [1] fromcolumns(::NamedTuple{(:a, :b),Tuple{Array{Union{Missing, Int64},1},Array{Any,1}}}; copycols::Bool) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:17
   [2] DataFrame(::NamedTuple{(:a, :b),Tuple{Array{Union{Missing, Int64},1},Array{Any,1}}}; copycols::Bool) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:32
   [3] DataFrame(::NamedTuple{(:a, :b),Tuple{Array{Union{Missing, Int64},1},Array{Any,1}}}) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:23
   [4] macro expansion at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:103 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:101 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [8] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:57
  
Extras: Test Failed at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:109
  Expression: dn |> DataFrame
    Expected: ArgumentError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:109 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:101 [inlined]
 [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [5] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:57
Extras: Error During Test at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:112
  Test threw exception
  Expression: DataFrame([(a = 0,), (a = 1,)]) == DataFrame(a = 0:1)
  MethodError: no method matching eachcolumn(::Tables.CopiedColumns{NamedTuple{(:a,),Tuple{Array{Int64,1}}}})
  Closest candidates are:
    eachcolumn(!Matched::Union{Function, Type}, !Matched::Tables.Schema{names,nothing}, !Matched::Any) where names at /home/pkgeval/.julia/packages/Tables/erUMm/src/utils.jl:109
    eachcolumn(!Matched::Union{Function, Type}, !Matched::Tables.Schema{names,types}, !Matched::Any) where {names, types} at /home/pkgeval/.julia/packages/Tables/erUMm/src/utils.jl:66
  Stacktrace:
   [1] fromcolumns(::Tables.CopiedColumns{NamedTuple{(:a,),Tuple{Array{Int64,1}}}}; copycols::Bool) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:13
   [2] DataFrame(::Array{NamedTuple{(:a,),Tuple{Int64}},1}; copycols::Bool) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:43
   [3] DataFrame(::Array{NamedTuple{(:a,),Tuple{Int64}},1}) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:39
   [4] macro expansion at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:112 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:101 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [8] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:57
  
Extras: Error During Test at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:99
  Got exception outside of a @test
  MethodError: no method matching eachcolumn(::Tables.CopiedColumns{NamedTuple{(:a, :b, :c),Tuple{Array{Int64,1},Array{Symbol,1},Array{Missing,1}}}})
  Closest candidates are:
    eachcolumn(!Matched::Union{Function, Type}, !Matched::Tables.Schema{names,nothing}, !Matched::Any) where names at /home/pkgeval/.julia/packages/Tables/erUMm/src/utils.jl:109
    eachcolumn(!Matched::Union{Function, Type}, !Matched::Tables.Schema{names,types}, !Matched::Any) where {names, types} at /home/pkgeval/.julia/packages/Tables/erUMm/src/utils.jl:66
  Stacktrace:
   [1] fromcolumns(::Tables.CopiedColumns{NamedTuple{(:a, :b, :c),Tuple{Array{Int64,1},Array{Symbol,1},Array{Missing,1}}}}; copycols::Bool) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:13
   [2] DataFrame(::Main.TestTables.NamedTupleIterator{NamedTuple{(:a, :b, :c),Tuple{Int64,Symbol,Missing}}}; copycols::Bool) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:32
   [3] DataFrame(::Main.TestTables.NamedTupleIterator{NamedTuple{(:a, :b, :c),Tuple{Int64,Symbol,Missing}}}) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:23
   [4] macro expansion at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:116 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:101 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [8] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:57
   [9] include(::String) at ./client.jl:441
   [10] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/runtests.jl:38
   [11] include(::String) at ./client.jl:441
   [12] top-level scope at none:6
   [13] eval(::Module, ::Any) at ./boot.jl:331
   [14] exec_options(::Base.JLOptions) at ./client.jl:264
   [15] _start() at ./client.jl:490
  
Test Summary:  | Pass  Fail  Error  Total
Tables         |   18     1      6     25
  basics       |    9                   9
  Row-style    |    6            1      7
  Column-style |    2            1      3
  Extras       |    1     1      4      6
	[1m[31mFAILED[0m: tables.jl
LoadError: Some tests did not pass: 18 passed, 1 failed, 6 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tables.jl:56
TableTraits: Error During Test at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tabletraits.jl:15
  Got exception outside of a @test
  MethodError: no method matching eachcolumn(::Tables.CopiedColumns{NamedTuple{(:a, :b, :c),Tuple{Array{Int64,1},Array{Float64,1},Array{String,1}}}})
  Closest candidates are:
    eachcolumn(!Matched::Union{Function, Type}, !Matched::Tables.Schema{names,nothing}, !Matched::Any) where names at /home/pkgeval/.julia/packages/Tables/erUMm/src/utils.jl:109
    eachcolumn(!Matched::Union{Function, Type}, !Matched::Tables.Schema{names,types}, !Matched::Any) where {names, types} at /home/pkgeval/.julia/packages/Tables/erUMm/src/utils.jl:66
  Stacktrace:
   [1] fromcolumns(::Tables.CopiedColumns{NamedTuple{(:a, :b, :c),Tuple{Array{Int64,1},Array{Float64,1},Array{String,1}}}}; copycols::Bool) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:13
   [2] DataFrame(::Main.TestTableTraits.ColumnSource; copycols::Bool) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:32
   [3] DataFrame(::Main.TestTableTraits.ColumnSource) at /home/pkgeval/.julia/packages/DataFrames/yH0f6/src/other/tables.jl:23
   [4] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tabletraits.jl:27
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [6] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tabletraits.jl:16
   [7] include(::String) at ./client.jl:441
   [8] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/runtests.jl:38
   [9] include(::String) at ./client.jl:441
   [10] top-level scope at none:6
   [11] eval(::Module, ::Any) at ./boot.jl:331
   [12] exec_options(::Base.JLOptions) at ./client.jl:264
   [13] _start() at ./client.jl:490
  
Test Summary: | Pass  Error  Total
TableTraits   |    6      1      7
	[1m[31mFAILED[0m: tabletraits.jl
LoadError: Some tests did not pass: 6 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/tabletraits.jl:15
Test Summary:      | Pass  Total
getindex DataFrame |   89     89
Test Summary:       | Pass  Total
getindex df[!, col] |   13     13
Test Summary:  | Pass  Total
view DataFrame |  129    129
Test Summary:         | Pass  Total
getindex SubDataFrame |  133    133
Test Summary:     | Pass  Total
view SubDataFrame |  128    128
Test Summary:         | Pass  Total
getindex DataFrameRow |   16     16
Test Summary:     | Pass  Total
view DataFrameRow |   17     17
Test Summary:                             | Pass  Total
additional tests of post-! getindex rules |  179    179
┌ Warning: in the future column names in source and target will have to match
│   caller = top-level scope at indexing.jl:879
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/indexing.jl:879
┌ Warning: implicit vector broadcasting in setindex! is deprecated
│   caller = setindex!(::DataFrame, ::DataFrame, ::UnitRange{Int64}, ::UnitRange{Int64}) at deprecated.jl:1603
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/deprecated.jl:1603
Test Summary:          | Pass  Total
setindex! on DataFrame |   43     43
┌ Warning: in the future column names in source and target will have to match
│   caller = setindex!(::SubDataFrame{DataFrame,DataFrames.Index,Base.OneTo{Int64}}, ::DataFrame, ::UnitRange{Int64}, ::UnitRange{Int64}) at subdataframe.jl:152
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/subdataframe/subdataframe.jl:152
┌ Warning: in the future column names in source and target will have to match
│   caller = setindex!(::SubDataFrame{DataFrame,DataFrames.SubIndex{DataFrames.Index,UnitRange{Int64},UnitRange{Int64}},Base.OneTo{Int64}}, ::DataFrame, ::UnitRange{Int64}, ::UnitRange{Int64}) at subdataframe.jl:152
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/subdataframe/subdataframe.jl:152
┌ Warning: in the future column names in source and target will have to match
│   caller = setindex!(::SubDataFrame{DataFrame,DataFrames.Index,UnitRange{Int64}}, ::DataFrame, ::UnitRange{Int64}, ::UnitRange{Int64}) at subdataframe.jl:152
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/subdataframe/subdataframe.jl:152
┌ Warning: in the future column names in source and target will have to match
│   caller = setindex!(::SubDataFrame{DataFrame,DataFrames.SubIndex{DataFrames.Index,UnitRange{Int64},UnitRange{Int64}},UnitRange{Int64}}, ::DataFrame, ::UnitRange{Int64}, ::UnitRange{Int64}) at subdataframe.jl:152
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/subdataframe/subdataframe.jl:152
Test Summary:             | Pass  Total
setindex! on SubDataFrame |  124    124
Test Summary:             | Pass  Total
setindex! on DataFrameRow |   28     28
	[1m[32mPASSED[0m: indexing.jl
Test Summary:  | Pass  Total
CartesianIndex |   24     24
Test Summary:                             | Pass  Total
broadcasting of AbstractDataFrame objects |   28     28
Test Summary:                                    | Pass  Total
broadcasting of AbstractDataFrame objects errors |   10     10
Test Summary:          | Pass  Total
broadcasting expansion |    5      5
Test Summary:                                          | Pass  Total
broadcasting of AbstractDataFrame objects corner cases |   34     34
Test Summary:                                                               | Pass  Total
normal data frame and data frame row in broadcasted assignment - one column |   79     79
Test Summary:                                                                 | Pass  Total
normal data frame and data frame view in broadcasted assignment - two columns |   72     72
Test Summary:                                       | Pass  Total
assignment to a whole data frame and data frame row |    8      8
Test Summary:                                               | Pass  Total
extending data frame in broadcasted assignment - one column |   20     20
Test Summary:                | Pass  Total
empty data frame corner case |   99     99
test categorical values: Test Failed at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:720
  Expression: length(levels(df.c5)) == 1
   Evaluated: 3 == 1
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:720
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:690
test categorical values: Test Failed at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:720
  Expression: length(levels(df.c5)) == 1
   Evaluated: 2 == 1
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:720
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:690
test categorical values: Test Failed at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:720
  Expression: length(levels(df.c5)) == 1
   Evaluated: 2 == 1
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:720
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:690
test categorical values: Test Failed at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:720
  Expression: length(levels(df.c5)) == 1
   Evaluated: 3 == 1
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:720
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:690
test categorical values: Test Failed at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:720
  Expression: length(levels(df.c5)) == 1
   Evaluated: 2 == 1
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:720
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:690
test categorical values: Test Failed at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:720
  Expression: length(levels(df.c5)) == 1
   Evaluated: 2 == 1
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:720
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:690
Test Summary:           | Pass  Fail  Total
test categorical values |  120     6    126
	[1m[31mFAILED[0m: broadcasting.jl
LoadError: Some tests did not pass: 120 passed, 6 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/broadcasting.jl:689
┌ Warning: sort(df, cols=cols) is deprecated, use sort(df, cols) instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: sort!(df, cols=cols) is deprecated, use sort!(df, cols) instead
│   caller = ip:0x0
└ @ Core :-1
Test Summary: | Pass  Total
identifier    |    6      6
┌ Warning: Unable to validate reserved words against parser. 
│   Expected if Julia was not built from source. = "Expected if Julia was not built from source."
└ @ Main.TestDeprecated ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:48
Test Summary:  |
reserved words | No tests
┌ Warning: combine(gd) is deprecated, use DataFrame(gd) instead
│   caller = top-level scope at deprecated.jl:57
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:57
┌ Warning: `DataFrame` constructor with `categorical` positional argument is deprecated. Instead use `DataFrame(columns, names)` constructor.
│   caller = top-level scope at deprecated.jl:60
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:60
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:61
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:61
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:62
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:62
┌ Warning: `DataFrame` constructor with `categorical` positional argument is deprecated. Instead use `DataFrame(columns, names)` constructor.
│   caller = top-level scope at deprecated.jl:63
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:63
Test Summary:           | Pass  Total
categorical constructor |    3      3
┌ Warning: `DataFrame(t::Type, nrows::Integer, ncols::Integer)` is deprecated, use `DataFrame([Vector{t}(undef, nrows) for i = 1:ncols])` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:70
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:70
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:71
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:71
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:72
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:72
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:73
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:73
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:74
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:74
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:75
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:75
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:86
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:86
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:87
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:87
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:88
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:88
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:89
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:89
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:90
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:90
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:91
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:91
┌ Warning: `DataFrame` constructor with `categorical` positional argument is deprecated. Instead use `DataFrame(columns, names)` constructor.
│   caller = top-level scope at deprecated.jl:99
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:99
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:103
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:103
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:104
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:104
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:105
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:105
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:106
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:106
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:107
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:107
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:108
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:108
Test Summary:          | Pass  Total
DataFrame constructors |   42     42
┌ Warning: `colwise(f, d::AbstractDataFrame)` is deprecated, use `[f(col) for col = eachcol(d)]` instead.
│   caller = top-level scope at deprecated.jl:132
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:132
┌ Warning: `colwise(f, d::AbstractDataFrame)` is deprecated, use `[f(col) for col = eachcol(d)]` instead.
│   caller = top-level scope at deprecated.jl:138
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:138
┌ Warning: `colwise(f, gd::GroupedDataFrame)` is deprecated, use `[[f(col) for col = eachcol(d)] for d = gd]` instead.
│   caller = top-level scope at deprecated.jl:147
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:147
┌ Warning: `colwise(fns::Union{AbstractVector, Tuple}, d::AbstractDataFrame)` is deprecated, use `[f(col) for f = fns, col = eachcol(d)]` instead.
│   caller = top-level scope at deprecated.jl:151
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:151
┌ Warning: `colwise(fns::Union{AbstractVector, Tuple}, d::AbstractDataFrame)` is deprecated, use `[f(col) for f = fns, col = eachcol(d)]` instead.
│   caller = top-level scope at deprecated.jl:157
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:157
┌ Warning: `colwise(fns::Union{AbstractVector, Tuple}, d::AbstractDataFrame)` is deprecated, use `[f(col) for f = fns, col = eachcol(d)]` instead.
│   caller = top-level scope at deprecated.jl:163
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:163
┌ Warning: `colwise(fns::Union{AbstractVector, Tuple}, d::AbstractDataFrame)` is deprecated, use `[f(col) for f = fns, col = eachcol(d)]` instead.
│   caller = top-level scope at deprecated.jl:169
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:169
┌ Warning: `colwise(fns::Union{AbstractVector, Tuple}, gd::GroupedDataFrame)` is deprecated, use `[[f(col) for f = fns, col = eachcol(d)] for d = gd]` instead.
│   caller = top-level scope at deprecated.jl:174
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:174
┌ Warning: `colwise(fns::Union{AbstractVector, Tuple}, d::AbstractDataFrame)` is deprecated, use `[f(col) for f = fns, col = eachcol(d)]` instead.
│   caller = top-level scope at deprecated.jl:178
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:178
┌ Warning: `colwise(fns::Union{AbstractVector, Tuple}, d::AbstractDataFrame)` is deprecated, use `[f(col) for f = fns, col = eachcol(d)]` instead.
│   caller = top-level scope at deprecated.jl:184
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:184
┌ Warning: `colwise(fns::Union{AbstractVector, Tuple}, d::AbstractDataFrame)` is deprecated, use `[f(col) for f = fns, col = eachcol(d)]` instead.
│   caller = top-level scope at deprecated.jl:190
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:190
┌ Warning: `colwise(fns::Union{AbstractVector, Tuple}, d::AbstractDataFrame)` is deprecated, use `[f(col) for f = fns, col = eachcol(d)]` instead.
│   caller = top-level scope at deprecated.jl:197
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:197
┌ Warning: `colwise(f, gd::GroupedDataFrame)` is deprecated, use `[[f(col) for col = eachcol(d)] for d = gd]` instead.
│   caller = top-level scope at deprecated.jl:202
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:202
Test Summary: | Pass  Total
colwise       |   29     29
┌ Warning: `empty!(df::DataFrame)` is deprecated, use `select!(df, Int[])` instead.
│   caller = top-level scope at deprecated.jl:212
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:212
Test Summary: | Pass  Total
empty!        |    5      5
┌ Warning: `deletecols(df::DataFrame, inds; copycols::Bool = true)` is deprecated, use `select(df, Not(inds), copycols = copycols)` instead.
│   caller = top-level scope at deprecated.jl:220
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:220
┌ Warning: `deletecols!(df::DataFrame, inds)` is deprecated, use `select!(df, Not(inds))` instead.
│   caller = top-level scope at deprecated.jl:221
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:221
┌ Warning: `deletecols(df::DataFrame, inds; copycols::Bool = true)` is deprecated, use `select(df, Not(inds), copycols = copycols)` instead.
│   caller = top-level scope at deprecated.jl:225
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:225
┌ Warning: `deletecols!(df::DataFrame, inds)` is deprecated, use `select!(df, Not(inds))` instead.
│   caller = top-level scope at deprecated.jl:226
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:226
┌ Warning: `deletecols(df::DataFrame, inds; copycols::Bool = true)` is deprecated, use `select(df, Not(inds), copycols = copycols)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at deprecated.jl:230
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:230
┌ Warning: `deletecols(df::DataFrame, inds; copycols::Bool = true)` is deprecated, use `select(df, Not(inds), copycols = copycols)` instead.
│   caller = top-level scope at deprecated.jl:231
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:231
┌ Warning: `deletecols(df::DataFrame, inds; copycols::Bool = true)` is deprecated, use `select(df, Not(inds), copycols = copycols)` instead.
│   caller = top-level scope at deprecated.jl:232
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:232
Test Summary:              | Pass  Total
deletecols and deletecols! |    7      7
┌ Warning: `haskey(df::AbstractDataFrame, key::Integer)` is deprecated, use `key in 1:ncol(df)` instead.
│   caller = top-level scope at deprecated.jl:237
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:237
┌ Warning: `haskey(df::AbstractDataFrame, key::Integer)` is deprecated, use `key in 1:ncol(df)` instead.
│   caller = top-level scope at deprecated.jl:238
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:238
┌ Warning: `haskey(df::AbstractDataFrame, key::Integer)` is deprecated, use `key in 1:ncol(df)` instead.
│   caller = top-level scope at deprecated.jl:239
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:239
┌ Warning: `haskey(df::AbstractDataFrame, key::Integer)` is deprecated, use `key in 1:ncol(df)` instead.
│   caller = top-level scope at deprecated.jl:240
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:240
┌ Warning: `haskey(df::AbstractDataFrame, key::Symbol)` is deprecated, use `hasproperty(df, key)` instead.
│   caller = top-level scope at deprecated.jl:241
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:241
┌ Warning: `haskey(df::AbstractDataFrame, key::Symbol)` is deprecated, use `hasproperty(df, key)` instead.
│   caller = top-level scope at deprecated.jl:242
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:242
┌ Warning: `haskey(df::AbstractDataFrame, key::Any)` is deprecated, use `key in 1:ncol(df) || key in names(df)` instead.
│   caller = top-level scope at deprecated.jl:243
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:243
Test Summary: | Pass  Total
haskey        |    7      7
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:249 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:249
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:250 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:250
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:251 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:251
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:252 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:252
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:253 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:253
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:254 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:254
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:255 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:255
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:256 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:256
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:257 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:257
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:258 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:258
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:259 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:259
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:260 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:260
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:261 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:261
┌ Warning: `getindex(df::DataFrame, ::Colon)` is deprecated, use `df[:, :]` instead.
│   caller = macro expansion at deprecated.jl:262 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:262
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:263 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:263
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:264 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:264
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:265 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:265
┌ Warning: `getindex(df::DataFrame, ::Colon)` is deprecated, use `df[:, :]` instead.
│   caller = macro expansion at deprecated.jl:266 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:266
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:267 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:267
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:268 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:268
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:269 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:269
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:270 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:270
┌ Warning: `getindex(df::DataFrame, ::Colon)` is deprecated, use `df[:, :]` instead.
│   caller = macro expansion at deprecated.jl:271 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:271
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:272 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:272
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:273 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:273
┌ Warning: `getindex(df::DataFrame, ::Colon)` is deprecated, use `df[:, :]` instead.
│   caller = macro expansion at deprecated.jl:274 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:274
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:275 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:275
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:276 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:276
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:281 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:281
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:282 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:282
┌ Warning: `getindex(df::DataFrame, ::Colon)` is deprecated, use `df[:, :]` instead.
│   caller = macro expansion at deprecated.jl:283 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:283
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:284 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:284
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:285 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:285
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:286 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:286
┌ Warning: `view(adf::AbstractDataFrame, colind::ColumnIndex)` is deprecated, use `view(adf, :, colind)` instead.
│   caller = macro expansion at deprecated.jl:290 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:290
┌ Warning: `view(adf::AbstractDataFrame, colind::ColumnIndex)` is deprecated, use `view(adf, :, colind)` instead.
│   caller = macro expansion at deprecated.jl:291 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:291
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:292 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:292
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:293 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:293
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:293 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:293
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:294 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:294
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:295 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:295
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:295 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:295
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:296 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:296
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:297 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:297
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:297 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:297
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:298 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:298
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:299 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:299
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:300 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:300
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:301 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:301
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:302 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:302
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:303 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:303
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:304 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:304
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:305 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:305
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:306 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:306
┌ Warning: `getindex(sdf::SubDataFrame, colind::ColumnIndex)` is deprecated, use `sdf[!, colind]` instead.
│   caller = macro expansion at deprecated.jl:311 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:311
┌ Warning: `getindex(sdf::SubDataFrame, colind::ColumnIndex)` is deprecated, use `sdf[!, colind]` instead.
│   caller = macro expansion at deprecated.jl:312 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:312
┌ Warning: `getindex(sdf::SubDataFrame, colinds::Union{AbstractVector, Regex, Not})` is deprecated, use `sdf[!, colinds]` instead.
│   caller = macro expansion at deprecated.jl:313 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:313
┌ Warning: `getindex(sdf::SubDataFrame, colinds::Union{AbstractVector, Regex, Not})` is deprecated, use `sdf[!, colinds]` instead.
│   caller = macro expansion at deprecated.jl:314 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:314
┌ Warning: `getindex(sdf::SubDataFrame, colinds::Union{AbstractVector, Regex, Not})` is deprecated, use `sdf[!, colinds]` instead.
│   caller = macro expansion at deprecated.jl:315 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:315
┌ Warning: `getindex(sdf::SubDataFrame, colinds::Union{AbstractVector, Regex, Not})` is deprecated, use `sdf[!, colinds]` instead.
│   caller = macro expansion at deprecated.jl:316 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:316
┌ Warning: `getindex(sdf::SubDataFrame, colinds::Union{AbstractVector, Regex, Not})` is deprecated, use `sdf[!, colinds]` instead.
│   caller = macro expansion at deprecated.jl:317 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:317
┌ Warning: `getindex(sdf::SubDataFrame, colinds::Union{AbstractVector, Regex, Not})` is deprecated, use `sdf[!, colinds]` instead.
│   caller = macro expansion at deprecated.jl:318 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:318
┌ Warning: `getindex(sdf::SubDataFrame, ::Colon)` is deprecated, use `sdf[!, :]` instead.
│   caller = macro expansion at deprecated.jl:319 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:319
┌ Warning: `getindex(sdf::SubDataFrame, ::Colon)` is deprecated, use `sdf[!, :]` instead.
│   caller = macro expansion at deprecated.jl:320 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:320
┌ Warning: `getindex(sdf::SubDataFrame, colinds::Union{AbstractVector, Regex, Not})` is deprecated, use `sdf[!, colinds]` instead.
│   caller = macro expansion at deprecated.jl:321 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:321
┌ Warning: `getindex(sdf::SubDataFrame, colinds::Union{AbstractVector, Regex, Not})` is deprecated, use `sdf[!, colinds]` instead.
│   caller = macro expansion at deprecated.jl:322 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:322
┌ Warning: `getindex(sdf::SubDataFrame, colinds::Union{AbstractVector, Regex, Not})` is deprecated, use `sdf[!, colinds]` instead.
│   caller = macro expansion at deprecated.jl:323 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:323
┌ Warning: `getindex(sdf::SubDataFrame, colinds::Union{AbstractVector, Regex, Not})` is deprecated, use `sdf[!, colinds]` instead.
│   caller = macro expansion at deprecated.jl:324 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:324
┌ Warning: `getindex(sdf::SubDataFrame, ::Colon)` is deprecated, use `sdf[!, :]` instead.
│   caller = macro expansion at deprecated.jl:325 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:325
┌ Warning: `getindex(sdf::SubDataFrame, colinds::Union{AbstractVector, Regex, Not})` is deprecated, use `sdf[!, colinds]` instead.
│   caller = macro expansion at deprecated.jl:326 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:326
┌ Warning: `getindex(sdf::SubDataFrame, colinds::Union{AbstractVector, Regex, Not})` is deprecated, use `sdf[!, colinds]` instead.
│   caller = macro expansion at deprecated.jl:327 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:327
┌ Warning: `view(adf::AbstractDataFrame, colind::ColumnIndex)` is deprecated, use `view(adf, :, colind)` instead.
│   caller = macro expansion at deprecated.jl:332 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:332
┌ Warning: `view(adf::AbstractDataFrame, colind::ColumnIndex)` is deprecated, use `view(adf, :, colind)` instead.
│   caller = macro expansion at deprecated.jl:333 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:333
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:334 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:334
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:335 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:335
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:336 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:336
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:337 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:337
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:338 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:338
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:339 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:339
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:340 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:340
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:341 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:341
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:342 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:342
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:343 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:343
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:344 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:344
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:345 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:345
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:346 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:346
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:347 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:347
┌ Warning: `view(adf::AbstractDataFrame, colinds)` is deprecated, use `view(adf, :, colinds)` instead.
│   caller = macro expansion at deprecated.jl:348 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:348
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= Ref(v)` broadcasting assignment
│   caller = macro expansion at deprecated.jl:356 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:356
┌ Warning: `setindex!(df::DataFrame, new_df::DataFrame, row_ind::Integer, col_inds::AbstractVector{<:ColumnIndex})` is deprecated, use `begin
│     foreach((((i, c),)->begin
│                 df[row_ind, c] = new_df[1, i]
│             end), enumerate(col_inds))
│     df
│ end` instead.
│   caller = setindex! at deprecated.jl:1576 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/src/deprecated.jl:1576
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= Ref(v)` broadcasting assignment
│   caller = macro expansion at deprecated.jl:357 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:357
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= Ref(v)` broadcasting assignment
│   caller = macro expansion at deprecated.jl:358 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:358
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= Ref(v)` broadcasting assignment
│   caller = macro expansion at deprecated.jl:361 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:361
┌ Warning: `setindex!(df::DataFrame, v::Any, row_ind::Integer, col_inds::AbstractVector{<:ColumnIndex})` is deprecated, use `begin
│     df[row_ind, col_inds] .= Ref(v)
│     df
│ end` instead.
│   caller = setindex! at deprecated.jl:1576 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/src/deprecated.jl:1576
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= Ref(v)` broadcasting assignment
│   caller = macro expansion at deprecated.jl:362 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:362
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= Ref(v)` broadcasting assignment to change the columns in place
│   caller = setindex! at deprecated.jl:1576 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/src/deprecated.jl:1576
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= Ref(v)` broadcasting assignment
│   caller = macro expansion at deprecated.jl:363 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:363
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= Ref(v)` broadcasting assignment to change the columns in place
│   caller = setindex! at deprecated.jl:1544 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/src/deprecated.jl:1544
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= Ref(v)` broadcasting assignment
│   caller = macro expansion at deprecated.jl:366 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:366
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= v` broadcasting assignment to change the columns in place
│   caller = setindex! at deprecated.jl:1576 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/src/deprecated.jl:1576
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= Ref(v)` broadcasting assignment
│   caller = macro expansion at deprecated.jl:367 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:367
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= v` broadcasting assignment to change the columns in place
│   caller = setindex! at deprecated.jl:1513 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/src/deprecated.jl:1513
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, ::Colon, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:370 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:370
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[:, col_inds] .= Ref(v)` broadcasting assignment to change the columns in place
│   caller = macro expansion at deprecated.jl:373 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:373
┌ Warning: Implicit broadcasting to an existing column in DataFrame assignment is deprecated.Use an explicit broadcast with `df[:, col_ind] .= v`
│   caller = setindex! at deprecated.jl:1584 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/src/deprecated.jl:1584
┌ Warning: Implicit broadcasting to an existing column in DataFrame assignment is deprecated.Use an explicit broadcast with `df[:, col_ind] .= v`
│   caller = macro expansion at deprecated.jl:374 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:374
┌ Warning: `setindex!(df::DataFrame, new_df::DataFrame, row_ind::Integer, col_inds::AbstractVector{<:ColumnIndex})` is deprecated, use `begin
│     foreach((((i, c),)->begin
│                 df[row_ind, c] = new_df[1, i]
│             end), enumerate(col_inds))
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:377 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:377
┌ Warning: in the future column names in source and target will have to match
│   caller = macro expansion at deprecated.jl:378 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:378
┌ Warning: in the future column names in source and target will have to match
│   caller = macro expansion at deprecated.jl:379 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:379
┌ Warning: `setindex!(df::DataFrame, v::Any, row_ind::Integer, col_inds::AbstractVector{<:ColumnIndex})` is deprecated, use `begin
│     df[row_ind, col_inds] .= Ref(v)
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:382 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:382
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= Ref(v)` broadcasting assignment to change the columns in place
│   caller = macro expansion at deprecated.jl:383 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:383
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= Ref(v)` broadcasting assignment to change the columns in place
│   caller = setindex! at deprecated.jl:1544 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/src/deprecated.jl:1544
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= v` broadcasting assignment to change the columns in place
│   caller = macro expansion at deprecated.jl:387 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:387
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[row_inds, col_inds] .= v` broadcasting assignment to change the columns in place
│   caller = setindex! at deprecated.jl:1513 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/src/deprecated.jl:1513
┌ Warning: `setindex!(df::DataFrame, new_df::DataFrame, row_ind::Integer, col_inds::AbstractVector{<:ColumnIndex})` is deprecated, use `begin
│     foreach((((i, c),)->begin
│                 df[row_ind, c] = new_df[1, i]
│             end), enumerate(col_inds))
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:392 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:392
┌ Warning: `setindex!(df::DataFrame, new_df::DataFrame, row_ind::Integer, col_inds::AbstractVector{Bool})` is deprecated, use `begin
│     foreach((((i, c),)->begin
│                 df[row_ind, c] = new_df[1, i]
│             end), enumerate(findall(col_inds)))
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:396 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:396
┌ Warning: Implicit broadcasting to a new column in DataFrame assignment is deprecated.Use `df[!, col_ind] .= v`  when `df` has some columns
│   caller = macro expansion at deprecated.jl:403 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:403
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:410 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:410
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:411 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:411
┌ Warning: Implicit broadcasting to a new column in DataFrame assignment is deprecated.Use `df[!, col_ind] .= v`  when `df` has some columns
│   caller = macro expansion at deprecated.jl:414 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:414
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:415 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:415
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:423 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:423
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:424 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:424
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:425 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:425
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:425 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:425
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:426 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:426
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:426 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:426
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:427 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:427
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:427 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:427
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:428 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:428
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:428 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:428
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:429 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:429
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:429 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:429
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:430 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:430
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:430 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:430
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:431 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:431
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:431 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:431
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:432 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:432
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:432 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:432
┌ Warning: `getindex(df::DataFrame, ::Colon)` is deprecated, use `df[:, :]` instead.
│   caller = macro expansion at deprecated.jl:433 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:433
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:433 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:433
┌ Warning: `getindex(df::DataFrame, ::Colon)` is deprecated, use `df[:, :]` instead.
│   caller = macro expansion at deprecated.jl:434 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:434
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:434 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:434
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:435 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:435
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:435 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:435
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:436 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:436
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:436 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:436
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:441 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:441
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:442 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:442
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:443 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:443
┌ Warning: In the future setindex! will disallow adding columnsto a DataFrame using integer index. Use a Symbol to specify a column name instead.
│   caller = setindex!(::DataFrame, ::Array{Int64,1}, ::Int64) at deprecated.jl:67
└ @ DataFrames ./deprecated.jl:67
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:444 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:444
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:459 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:459
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = macro expansion at deprecated.jl:459 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:459
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:460 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:460
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = macro expansion at deprecated.jl:460 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:460
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:462 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:462
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:463 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:463
┌ Warning: `setindex!(df::DataFrame, new_df::DataFrame, col_inds::AbstractVector{<:ColumnIndex})` is deprecated, use `foreach((((j, colind),)->begin
│             df[!, colind] = new_df[!, j]
│         end), enumerate(col_inds))` instead.
│   caller = macro expansion at deprecated.jl:465 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:465
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:466 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:466
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:467 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:467
┌ Warning: `getindex(sdf::SubDataFrame, colind::ColumnIndex)` is deprecated, use `sdf[!, colind]` instead.
│   caller = macro expansion at deprecated.jl:459 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:459
┌ Warning: `getindex(sdf::SubDataFrame, colinds::Union{AbstractVector, Regex, Not})` is deprecated, use `sdf[!, colinds]` instead.
│   caller = macro expansion at deprecated.jl:460 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:460
┌ Warning: in the future column names in source and target will have to match
│   caller = setindex! at subdataframe.jl:145 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/src/subdataframe/subdataframe.jl:145
┌ Warning: implicit broadcasting in setindex! is deprecated; use `df[:, col_inds] .= Ref(v)` broadcasting assignment to change the columns in place
│   caller = macro expansion at deprecated.jl:475 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:475
┌ Warning: Implicit broadcasting to an existing column in DataFrame assignment is deprecated.Use an explicit broadcast with `df[:, col_ind] .= v`
│   caller = setindex!(::DataFrame, ::Float64, ::UnitRange{Int64}) at deprecated.jl:1456
└ @ DataFrames ~/.julia/packages/DataFrames/yH0f6/src/deprecated.jl:1456
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[:, col_inds] .= Ref(v)` broadcasting assignment to change the columns in place
│   caller = macro expansion at deprecated.jl:480 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:480
┌ Warning: implicit broadcasting in setindex! is deprecated; use `df[:, col_inds] .= Ref(v)` broadcasting assignment to change the columns in place
│   caller = setindex! at deprecated.jl:1584 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/src/deprecated.jl:1584
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_inds::AbstractVector{<:ColumnIndex})` is deprecated, use `begin
│     foreach((c->begin
│                 df[!, c] = copy(v)
│             end), col_inds)
│     df
│ end` instead.
│   caller = macro expansion at deprecated.jl:487 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:487
┌ Warning: implicit vector broadcasting in setindex! is deprecated; use `df[:, col_inds] .= Ref(v)` broadcasting assignment to change the columns in place
│   caller = macro expansion at deprecated.jl:496 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/test/deprecated.jl:496
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_inds::AbstractVector{<:ColumnIndex})` is deprecated, use `begin
│     foreach((c->begin
│                 df[!, c] = copy(v)
│             end), col_inds)
│     df
│ end` instead.
│   caller = setindex! at deprecated.jl:1584 [inlined]
└ @ Core ~/.julia/packages/DataFrames/yH0f6/src/deprecated.jl:1584
Test Summary:                                        | Pass  Total
df[col] and df[col] for getindex, view, and setindex |  132    132
	[1m[32mPASSED[0m: deprecated.jl
ERROR: LoadError: "Tests failed"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/runtests.jl:53
 [2] include(::String) at ./client.jl:441
 [3] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/DataFrames/yH0f6/test/runtests.jl:52
    Testing Distances
Status `/tmp/jl_ipqaXN/Manifest.toml`
  [b4f34e82] Distances v0.8.2
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
Test Summary:                            | Pass  Total
PreMetric, SemiMetric, Metric on Float64 |  401    401
Test Summary:                        | Pass  Total
PreMetric, SemiMetric, Metric on F64 |  401    401
Test Summary:      | Pass  Total
individual metrics |  153    153
Test Summary: | Pass  Total
NaN behavior  |    3      3
Test Summary: | Pass  Total
empty vector  |   46     46
Test Summary:              | Pass  Total
DimensionMismatch throwing |   15     15
Test Summary:         | Pass  Total
Different input types |   52     52
Test Summary: | Pass  Total
mahalanobis   |    8      8
Test Summary: | Pass  Total
haversine     |   12     12
Test Summary:             | Pass  Total
bhattacharyya / hellinger |   20     20
Test Summary:                  | Pass  Total
column-wise metrics on Float64 |   93     93
Test Summary:              | Pass  Total
column-wise metrics on F64 |   93     93
┌ Warning: implicit `dims=2` argument now has to be passed explicitly to specify that distances between columns should be computed
│   caller = ip:0x0
└ @ Core :-1
Test Summary:               | Pass  Total
pairwise metrics on Float64 |  174    174
Test Summary:           | Pass  Total
pairwise metrics on F64 |  174    174
Test Summary:       | Pass  Total
Euclidean precision |    8      8
Test Summary:      | Pass  Total
Bregman Divergence |    4      4
    Testing Distances tests passed 
    Testing Distributions
Status `/tmp/jl_yQ7v5A/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [b99e7846] BinaryProvider v0.5.8
  [49dc2e85] Calculus v0.5.1
  [bbf7d656] CommonSubexpressions v0.2.0
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.9
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [31c24e10] Distributions v0.21.12
  [1a297f60] FillArrays v0.8.4
  [26cc04aa] FiniteDifferences v0.9.2
  [f6369f11] ForwardDiff v0.10.9
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.11
  [69de0a69] Parsers v0.3.11
  [1fd47b50] QuadGK v2.3.1
  [79098fc4] Rmath v0.6.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Running tests:
    [Discrete]
    ------------
    testing Truncated(BetaBinomial(10, 0.2, 0.25),3,5)
    testing Truncated(BetaBinomial(10, 2, 2.5),3,5)
    testing Truncated(BetaBinomial(10, 60, 40),3,5)
    testing Truncated(Binomial(5, 0.4),3,5)
    testing Truncated(Binomial(6, 0.8),3,5)
    testing Truncated(Binomial(100, 0.1),3,5)
    testing Truncated(Binomial(100, 0.9),3,5)
    testing Truncated(Binomial(10, 0.0),3,5)
    testing Truncated(Binomial(10, 1.0),3,5)
    testing Truncated(DiscreteUniform(6),3,5)
    testing Truncated(DiscreteUniform(7),3,5)
    testing Truncated(DiscreteUniform(2, 8),3,5)
    testing Truncated(Geometric(),3,5)
    testing Truncated(Geometric(0.02),3,5)
    testing Truncated(Geometric(0.1),3,5)
    testing Truncated(Geometric(0.5),3,5)
    testing Truncated(Geometric(0.9),3,5)
    testing Truncated(NegativeBinomial(),3,5)
    testing Truncated(NegativeBinomial(6),3,5)
    testing Truncated(NegativeBinomial(1, 0.5),3,5)
    testing Truncated(NegativeBinomial(5, 0.6),3,5)
    testing Truncated(NegativeBinomial(0.5, 0.5),3,5)
    testing Truncated(Poisson(),3,5)
    testing Truncated(Poisson(0.5),3,5)
    testing Truncated(Poisson(2.0),3,5)
    testing Truncated(Poisson(10.0),3,5)
    testing Truncated(Poisson(80.0),3,5)

    [Continuous]
    ------------
    testing Truncated(BetaPrime(),3,5)
    testing Truncated(BetaPrime(3.0),3,5)
    testing Truncated(BetaPrime(3.0, 5.0),3,5)
    testing Truncated(BetaPrime(5.0, 3.0),3,5)
    testing Truncated(Cauchy(),3,5)
    testing Truncated(Cauchy(2.0),3,5)
    testing Truncated(Cauchy(0.0, 1.0),3,5)
    testing Truncated(Cauchy(10.0, 1.0),3,5)
    testing Truncated(Cauchy(2.0, 10.0),3,5)
    testing Truncated(Chi(1),3,5)
    testing Truncated(Chi(2),3,5)
    testing Truncated(Chi(3),3,5)
    testing Truncated(Chi(12),3,5)
    testing Truncated(Chisq(1),3,5)
    testing Truncated(Chisq(8),3,5)
    testing Truncated(Chisq(20),3,5)
    testing Truncated(Erlang(),3,5)
    testing Truncated(Erlang(3),3,5)
    testing Truncated(Erlang(3, 1.0),3,5)
    testing Truncated(Erlang(5, 2.0),3,5)
    testing Truncated(Exponential(),3,5)
    testing Truncated(Exponential(2.0),3,5)
    testing Truncated(Exponential(6.5),3,5)
    testing Truncated(FDist(6.0, 8.0),3,5)
    testing Truncated(FDist(8.0, 6.0),3,5)
    testing Truncated(FDist(30, 40),3,5)
    testing Truncated(Frechet(),3,5)
    testing Truncated(Frechet(0.5),3,5)
    testing Truncated(Frechet(3.0),3,5)
    testing Truncated(Frechet(20.0),3,5)
    testing Truncated(Frechet(60.0),3,5)
    testing Truncated(Frechet(0.5, 2.0),3,5)
    testing Truncated(Frechet(3.0, 2.0),3,5)
    testing Truncated(Gamma(),3,5)
    testing Truncated(Gamma(2.0),3,5)
    testing Truncated(Gamma(1.0, 1.0),3,5)
    testing Truncated(Gamma(3.0, 1.0),3,5)
    testing Truncated(Gamma(3.0, 2.0),3,5)
    testing Truncated(GeneralizedExtremeValue(1.0, 1.0, 1.0),3,5)
    testing Truncated(GeneralizedExtremeValue(0.0, 1.0, 0.0),3,5)
    testing Truncated(GeneralizedExtremeValue(0.0, 1.0, 1.1),3,5)
    testing Truncated(GeneralizedExtremeValue(0.0, 1.0, 0.6),3,5)
    testing Truncated(GeneralizedExtremeValue(0.0, 1.0, 0.3),3,5)
    testing Truncated(GeneralizedExtremeValue(-1.0, 0.5, 0.6),3,5)
    testing Truncated(GeneralizedPareto(),3,5)
    testing Truncated(GeneralizedPareto(1.0, 1.0),3,5)
    testing Truncated(GeneralizedPareto(0.1, 2.0),3,5)
    testing Truncated(GeneralizedPareto(1.0, 1.0, 1.0),3,5)
    testing Truncated(GeneralizedPareto(-1.5, 0.5, 2.0),3,5)
    testing Truncated(Gumbel(),3,5)
    testing Truncated(Gumbel(3.0),3,5)
    testing Truncated(Gumbel(3.0, 5.0),3,5)
    testing Truncated(Gumbel(5.0, 3.0),3,5)
    testing Truncated(InverseGamma(),3,5)
    testing Truncated(InverseGamma(2.0),3,5)
    testing Truncated(InverseGamma(1.0, 1.0),3,5)
    testing Truncated(InverseGamma(1.0, 2.0),3,5)
    testing Truncated(InverseGamma(2.0, 1.0),3,5)
    testing Truncated(InverseGamma(2.0, 3.0),3,5)
    testing Truncated(InverseGaussian(),3,5)
    testing Truncated(InverseGaussian(0.8),3,5)
    testing Truncated(InverseGaussian(2.0),3,5)
    testing Truncated(InverseGaussian(1.0, 1.0),3,5)
    testing Truncated(InverseGaussian(2.0, 1.5),3,5)
    testing Truncated(InverseGaussian(2.0, 7.0),3,5)
    testing Truncated(Laplace(),3,5)
    testing Truncated(Laplace(2.0),3,5)
    testing Truncated(Laplace(0.0, 1.0),3,5)
    testing Truncated(Laplace(5.0, 1.0),3,5)
    testing Truncated(Laplace(5.0, 1.5),3,5)
    testing Truncated(Levy(),3,5)
    testing Truncated(Levy(2),3,5)
    testing Truncated(Levy(2, 8),3,5)
    testing Truncated(Levy(3.0, 3),3,5)
    testing Truncated(Logistic(),3,5)
    testing Truncated(Logistic(2.0),3,5)
    testing Truncated(Logistic(0.0, 1.0),3,5)
    testing Truncated(Logistic(5.0, 1.0),3,5)
    testing Truncated(Logistic(2.0, 1.5),3,5)
    testing Truncated(Logistic(5.0, 1.5),3,5)
    testing Truncated(LogNormal(),3,5)
    testing Truncated(LogNormal(1.0),3,5)
    testing Truncated(LogNormal(0.0, 2.0),3,5)
    testing Truncated(LogNormal(1.0, 2.0),3,5)
    testing Truncated(LogNormal(3.0, 0.5),3,5)
    testing Truncated(LogNormal(3.0, 1.0),3,5)
    testing Truncated(LogNormal(3.0, 2.0),3,5)
    testing Truncated(NoncentralChisq(2, 2),3,5)
    testing Truncated(NoncentralChisq(2, 5),3,5)
    testing Truncated(NoncentralF(2, 2, 2),3,5)
    testing Truncated(NoncentralF(8, 10, 5),3,5)
    testing Truncated(NoncentralT(2, 2),3,5)
    testing Truncated(NoncentralT(10, 2),3,5)
    testing Truncated(Normal(),3,5)
    testing Truncated(Normal(2.0),3,5)
    testing Truncated(Normal(-3.0, 2.0),3,5)
    testing Truncated(Normal(1.0, 10.0),3,5)
    testing Truncated(NormalCanon(),3,5)
    testing Truncated(NormalCanon(0.0, 1.0),3,5)
    testing Truncated(NormalCanon(-1.0, 2.5),3,5)
    testing Truncated(NormalCanon(2.0, 0.8),3,5)
    testing Truncated(Pareto(),3,5)
    testing Truncated(Pareto(2.0),3,5)
    testing Truncated(Pareto(2.0, 1.5),3,5)
    testing Truncated(Pareto(3.0, 2.0),3,5)
    testing Truncated(Rayleigh(),3,5)
    testing Truncated(Rayleigh(3.0),3,5)
    testing Truncated(Rayleigh(8.0),3,5)
    testing Truncated(StudentizedRange(2.0, 2.0),3,5)
    testing Truncated(StudentizedRange(5.0, 10.0),3,5)
    testing Truncated(StudentizedRange(10.0, 5.0),3,5)
    testing Truncated(SymTriangularDist(3.0, 2.0),3,5)
    testing Truncated(SymTriangularDist(10.0, 8.0),3,5)
    testing Truncated(TDist(1.2),3,5)
    testing Truncated(TDist(5.0),3,5)
    testing Truncated(TDist(28.0),3,5)
    testing Truncated(TriangularDist(0, 5),3,5)
    testing Truncated(TriangularDist(-4, 14, 3),3,5)
    testing Truncated(TriangularDist(2, 2000, 500),3,5)
    testing Truncated(truncated(Normal(27, 3), 0, Inf),3,5)
    testing Truncated(Uniform(3.0, 17.0),3,5)
    testing Truncated(Weibull(),3,5)
    testing Truncated(Weibull(0.5),3,5)
    testing Truncated(Weibull(5.0),3,5)
    testing Truncated(Weibull(20.0, 1.0),3,5)
    testing Truncated(Weibull(1.0, 2.0),3,5)
    testing Truncated(Weibull(5.0, 2.0),3,5)

Test Summary: | Pass  Total
Test truncate | 5078   5078
Test Summary:    | Pass  Total
Test truncnormal |   16     16
Test Summary:              | Pass  Total
Test truncated_exponential |    8      8
Test Summary: | Pass  Total
Test normal   |  136    136
Test Summary: | Pass  Total
Test mvnormal | 5624   5624
Test Summary:    | Pass  Total
Test mvlognormal | 1415   1415
Test Summary: | Pass  Total
Test types    |   30     30
Test Summary: | Pass  Total
Test utils    |   14     14
    testing CategoricalDirectSampler
    testing AliasTable
    testing BinomialGeomSampler
    testing BinomialTPESampler
    testing BinomialPolySampler
    testing BinomialAliasSampler
    testing PoissonCountSampler
    testing PoissonADSampler
    testing PoissBinAliasSampler
    testing ExponentialSampler
    testing GammaGDSampler
    testing GammaMTSampler
    testing GammaGSSampler
    testing GammaIPSampler
Test Summary: | Pass  Total
Test samplers |    2      2
    testing DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}}(support=Base.OneTo(2), p=[0.5, 0.5]) as Categorical
    testing DiscreteNonParametric{Int64,Float32,Base.OneTo{Int64},Array{Float32,1}}(support=Base.OneTo(2), p=Float32[0.5, 0.5]) as Categorical
    testing DiscreteNonParametric{Int64,Rational{Int64},Base.OneTo{Int64},Array{Rational{Int64},1}}(support=Base.OneTo(2), p=Rational{Int64}[1//2, 1//2]) as Categorical
    testing DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}}(support=Base.OneTo(4), p=[0.1, 0.3, 0.2, 0.4]) as Categorical
    testing DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}}(support=Base.OneTo(3), p=[0.15, 0.25, 0.6]) as Categorical
    testing DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}}(support=Base.OneTo(4), p=[0.25, 0.25, 0.25, 0.25]) as Categorical
Test Summary:    | Pass  Total
Test categorical |  350    350
    [Discrete]
    ------------
    testing Bernoulli()
    testing Bernoulli(0.25)
    testing Bernoulli(0.75)
    testing Bernoulli(0.0)
    testing Bernoulli(1.0)
    testing BetaBinomial(2, 0.2, 0.25)
    testing BetaBinomial(10, 0.2, 0.25)
    testing BetaBinomial(10, 2, 2.5)
    testing BetaBinomial(10, 60, 40)
    testing Binomial()
    testing Binomial(3)
    testing Binomial(5, 0.4)
    testing Binomial(6, 0.8)
    testing Binomial(100, 0.1)
    testing Binomial(100, 0.9)
    testing Binomial(10, 0.0)
    testing Binomial(10, 1.0)
    testing DiscreteUniform()
    testing DiscreteUniform(6)
    testing DiscreteUniform(7)
    testing DiscreteUniform(0, 4)
    testing DiscreteUniform(2, 8)
    testing Geometric()
    testing Geometric(0.02)
    testing Geometric(0.1)
    testing Geometric(0.5)
    testing Geometric(0.9)
    testing Hypergeometric(2, 2, 2)
    testing Hypergeometric(3, 2, 2)
    testing Hypergeometric(3, 2, 0)
    testing Hypergeometric(3, 2, 5)
    testing Hypergeometric(4, 5, 6)
    testing Hypergeometric(60, 80, 100)
    testing NegativeBinomial()
    testing NegativeBinomial(6)
    testing NegativeBinomial(1, 0.5)
    testing NegativeBinomial(5, 0.6)
    testing NegativeBinomial(0.5, 0.5)
    testing Poisson()
    testing Poisson(0.0)
    testing Poisson(0.5)
    testing Poisson(2.0)
    testing Poisson(10.0)
    testing Poisson(80.0)
    testing Skellam()
    testing Skellam(2.0)
    testing Skellam(2.0, 3.0)
    testing Skellam(3.2, 1.8)
    testing FisherNoncentralHypergeometric(8, 6, 10, 1)
    testing FisherNoncentralHypergeometric(8, 6, 10, 10)
    testing FisherNoncentralHypergeometric(8, 6, 10, 0.1)
    testing FisherNoncentralHypergeometric(80, 60, 100, 1)
    testing FisherNoncentralHypergeometric(80, 60, 100, 10)
    testing FisherNoncentralHypergeometric(80, 60, 100, 0.1)
    testing WalleniusNoncentralHypergeometric(8, 6, 10, 1)
    testing WalleniusNoncentralHypergeometric(8, 6, 10, 10)
    testing WalleniusNoncentralHypergeometric(8, 6, 10, 0.1)
    testing WalleniusNoncentralHypergeometric(40, 30, 50, 1)
    testing WalleniusNoncentralHypergeometric(40, 30, 50, 0.5)
    testing WalleniusNoncentralHypergeometric(40, 30, 50, 2)

    [Continuous]
    ------------
    testing Arcsine()
    testing Arcsine(2.0)
    testing Arcsine(1.0, 2.5)
    testing Arcsine(-1.0, 1.0)
    testing Beta(2.0, 2.0)
    testing Beta(3.0, 4.0)
    testing Beta(17.0, 13.0)
    testing BetaPrime()
    testing BetaPrime(3.0)
    testing BetaPrime(3.0, 5.0)
    testing BetaPrime(5.0, 3.0)
    testing Cauchy()
    testing Cauchy(2.0)
    testing Cauchy(0.0, 1.0)
    testing Cauchy(10.0, 1.0)
    testing Cauchy(2.0, 10.0)
    testing Chi(1)
    testing Chi(2)
    testing Chi(3)
    testing Chi(12)
    testing Chisq(1)
    testing Chisq(8)
    testing Chisq(20)
    testing Cosine()
    testing Cosine(1.5)
    testing Cosine(2.0, 2.8)
    testing Erlang()
    testing Erlang(3)
    testing Erlang(3, 1.0)
    testing Erlang(5, 2.0)
    testing Exponential()
    testing Exponential(2.0)
    testing Exponential(6.5)
    testing FDist(6.0, 8.0)
    testing FDist(8.0, 6.0)
    testing FDist(30, 40)
    testing Frechet()
    testing Frechet(0.5)
    testing Frechet(3.0)
    testing Frechet(20.0)
    testing Frechet(60.0)
    testing Frechet(0.5, 2.0)
    testing Frechet(3.0, 2.0)
    testing Gamma()
    testing Gamma(2.0)
    testing Gamma(1.0, 1.0)
    testing Gamma(3.0, 1.0)
    testing Gamma(3.0, 2.0)
    testing GeneralizedExtremeValue(1.0, 1.0, 1.0)
    testing GeneralizedExtremeValue(0.0, 1.0, 0.0)
    testing GeneralizedExtremeValue(0.0, 1.0, 1.1)
    testing GeneralizedExtremeValue(0.0, 1.0, 0.6)
    testing GeneralizedExtremeValue(0.0, 1.0, 0.3)
    testing GeneralizedExtremeValue(1.0, 1.0, -1.0)
    testing GeneralizedExtremeValue(-1.0, 0.5, 0.6)
    testing GeneralizedPareto()
    testing GeneralizedPareto(1.0, 1.0)
    testing GeneralizedPareto(0.1, 2.0)
    testing GeneralizedPareto(1.0, 1.0, 1.0)
    testing GeneralizedPareto(-1.5, 0.5, 2.0)
    testing Gumbel()
    testing Gumbel(3.0)
    testing Gumbel(3.0, 5.0)
    testing Gumbel(5.0, 3.0)
    testing InverseGamma()
    testing InverseGamma(2.0)
    testing InverseGamma(1.0, 1.0)
    testing InverseGamma(1.0, 2.0)
    testing InverseGamma(2.0, 1.0)
    testing InverseGamma(2.0, 3.0)
    testing InverseGaussian()
    testing InverseGaussian(0.8)
    testing InverseGaussian(2.0)
    testing InverseGaussian(1.0, 1.0)
    testing InverseGaussian(2.0, 1.5)
    testing InverseGaussian(2.0, 7.0)
    testing Laplace()
    testing Laplace(2.0)
    testing Laplace(0.0, 1.0)
    testing Laplace(5.0, 1.0)
    testing Laplace(5.0, 1.5)
    testing Levy()
    testing Levy(2)
    testing Levy(2, 8)
    testing Levy(3.0, 3)
    testing Logistic()
    testing Logistic(2.0)
    testing Logistic(0.0, 1.0)
    testing Logistic(5.0, 1.0)
    testing Logistic(2.0, 1.5)
    testing Logistic(5.0, 1.5)
    testing LogNormal()
    testing LogNormal(1.0)
    testing LogNormal(0.0, 2.0)
    testing LogNormal(1.0, 2.0)
    testing LogNormal(3.0, 0.5)
    testing LogNormal(3.0, 1.0)
    testing LogNormal(3.0, 2.0)
    testing NoncentralBeta(2, 2, 0)
    testing NoncentralBeta(2, 6, 5)
    testing NoncentralChisq(2, 2)
    testing NoncentralChisq(2, 5)
    testing NoncentralF(2, 2, 2)
    testing NoncentralF(8, 10, 5)
    testing NoncentralT(2, 2)
    testing NoncentralT(10, 2)
    testing Normal()
    testing Normal(2.0)
    testing Normal(-3.0, 2.0)
    testing Normal(1.0, 10.0)
    testing NormalInverseGaussian(1.7, 1.8, 1.2, 2.3)
    testing NormalCanon()
    testing NormalCanon(0.0, 1.0)
    testing NormalCanon(-1.0, 2.5)
    testing NormalCanon(2.0, 0.8)
    testing Pareto()
    testing Pareto(2.0)
    testing Pareto(2.0, 1.5)
    testing Pareto(3.0, 2.0)
    testing Rayleigh()
    testing Rayleigh(3.0)
    testing Rayleigh(8.0)
    testing StudentizedRange(2.0, 2.0)
    testing StudentizedRange(5.0, 10.0)
    testing StudentizedRange(10.0, 5.0)
    testing SymTriangularDist()
    testing SymTriangularDist(3.0)
    testing SymTriangularDist(3.0, 0.5)
    testing SymTriangularDist(3.0, 2.0)
    testing SymTriangularDist(10.0, 8.0)
    testing TDist(1.2)
    testing TDist(5.0)
    testing TDist(28.0)
    testing TriangularDist(0, 5)
    testing TriangularDist(-7, 2)
    testing TriangularDist(-4, 14, 3)
    testing TriangularDist(2, 2000, 500)
    testing TriangularDist(1, 3, 2)
    testing truncated(Normal(0, 1), -2, 2)
    testing truncated(Normal(3, 10), 7, 8)
    testing truncated(Normal(27, 3), 0, Inf)
    testing truncated(Normal(-5, 1), -Inf, -10)
    testing truncated(Normal(1.8, 1.2), -Inf, 0)
    testing Uniform()
    testing Uniform(0.0, 2.0)
    testing Uniform(3.0, 17.0)
    testing Uniform(3.0, 3.1)
    testing VonMises()
    testing VonMises(4.0)
    testing VonMises(1.1, 2.5)
    testing Weibull()
    testing Weibull(0.5)
    testing Weibull(5.0)
    testing Weibull(20.0, 1.0)
    testing Weibull(1.0, 2.0)
    testing Weibull(5.0, 2.0)

Test Summary:    |    Pass    Total
Test univariates | 2973203  2973203
Test Summary:   |  Pass  Total
Test continuous | 96189  96189
Test Summary:  | Pass  Total
Test edgecases |   12     12
Test Summary: | Pass  Total
Test fit      |  606    606
Test Summary:    | Pass  Total
Test multinomial |  958    958
┌ Warning: Assignment to `d` in soft scope is ambiguous because a global variable by the same name exists: `d` will be treated as a new local. Disambiguate by using `local d` to suppress this warning or `global d` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/KjaXI/test/binomial.jl:11
┌ Warning: Assignment to `rng` in soft scope is ambiguous because a global variable by the same name exists: `rng` will be treated as a new local. Disambiguate by using `local rng` to suppress this warning or `global rng` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/KjaXI/test/binomial.jl:19
Test Summary: | Pass  Total
Test binomial | 3410   3410
┌ Warning: Assignment to `d` in soft scope is ambiguous because a global variable by the same name exists: `d` will be treated as a new local. Disambiguate by using `local d` to suppress this warning or `global d` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/KjaXI/test/poissonbinomial.jl:9
   testing PoissonBinomial p=0.8, n=6
   testing PoissonBinomial p=0.5, n=10
   testing PoissonBinomial p=0.04, n=20
┌ Warning: Assignment to `p` in soft scope is ambiguous because a global variable by the same name exists: `p` will be treated as a new local. Disambiguate by using `local p` to suppress this warning or `global p` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/KjaXI/test/poissonbinomial.jl:46
┌ Warning: Assignment to `d` in soft scope is ambiguous because a global variable by the same name exists: `d` will be treated as a new local. Disambiguate by using `local d` to suppress this warning or `global d` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/KjaXI/test/poissonbinomial.jl:50
┌ Warning: Assignment to `m` in soft scope is ambiguous because a global variable by the same name exists: `m` will be treated as a new local. Disambiguate by using `local m` to suppress this warning or `global m` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/KjaXI/test/poissonbinomial.jl:68
   testing PoissonBinomial [10 × 0.1, 10 × 0.5, 10 × 0.9]
   testing PoissonBinomial [1 × 0.99, 10 × 0.1, 100 × 0.05]
   testing PoissonBinomial [5 × 0.01, 1 × 0.99, 3 × 0.999]
   testing PoissonBinomial [10 × 0.0, 7 × 0.9, 10 × 0.5]
Test Summary:        | Pass  Total
Test poissonbinomial |  413    413
Test Summary:  | Pass  Total
Test dirichlet |  864    864
Test Summary:             | Pass  Total
Test dirichletmultinomial |   82     82
Test Summary:    | Pass  Total
Test logitnormal |  241    241
┌ Warning: Assignment to `d` in soft scope is ambiguous because a global variable by the same name exists: `d` will be treated as a new local. Disambiguate by using `local d` to suppress this warning or `global d` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/KjaXI/test/mvtdist.jl:27
┌ Warning: Assignment to `d` in soft scope is ambiguous because a global variable by the same name exists: `d` will be treated as a new local. Disambiguate by using `local d` to suppress this warning or `global d` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/KjaXI/test/mvtdist.jl:56
Test Summary: | Pass  Total
Test mvtdist  |   54     54
Test Summary:   | Pass  Total
Test kolmogorov |    9      9
Test Summary:  | Pass  Total
Test edgeworth | 1485   1485
Test Summary: | Pass  Total
Test wisharts |  156    156
Test Summary:   | Pass  Total
Test matrixbeta |   36     36
Test Summary:    | Pass  Total
Test matrixfdist |   39     39
Test Summary:     | Pass  Total
Test matrixnormal |   68     68
Test Summary:    | Pass  Total
Test matrixtdist |   58     58
Test Summary:       |  Pass  Total
Test vonmisesfisher | 24220  24220
Test Summary:   | Pass  Total
Test conversion |    3      3
Test Summary:    | Pass  Total
Test convolution |  289    289
Test Summary: |  Pass  Total
Test mixture  | 38134  38134
Test Summary:   | Pass  Total
Test gradlogpdf |   14     14
Test Summary:    | Pass  Total
Test noncentralt |    5      5
Test Summary:      | Pass  Total
Test locationscale |  308    308
Test Summary:        | Pass  Total
Test quantile_newton |    2      2
Test Summary:   | Pass  Total
Test semicircle |   28     28
Test Summary: | Pass  Total
Test qq       |    6      6
Test Summary:             | Pass  Total
Test pgeneralizedgaussian |  212    212
Test Summary: | Pass  Total
Test product  |   16     16
Test Summary:              | Pass  Total
Test discretenonparametric |  232    232
Test Summary:    | Pass  Total
Test functionals |    2      2
Test Summary: | Pass  Total
Test chernoff |  141    141
Test Summary:          | Pass  Total
Test univariate_bounds |  156    156
Test Summary:         | Pass  Total
Test negativebinomial | 3302   3302
Potentially stale exports: 
61-element Array{Tuple{Method,Method},1}:
 ((::Type{DiffResults.DiffResult})(value::Number, derivs::Tuple{Vararg{Number,N} where N}) in DiffResults at /home/pkgeval/.julia/packages/DiffResults/qEJ0G/src/DiffResults.jl:47, (::Type{DiffResults.DiffResult})(value::Number, derivs::Tuple{Vararg{AbstractArray,N} where N}) in DiffResults at /home/pkgeval/.julia/packages/DiffResults/qEJ0G/src/DiffResults.jl:50)
 ((::Type{Dual{T,V,N} where N})(x) where {T, V} in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:74, (::Type{T})(x::AbstractChar) where T<:Union{AbstractChar, Number} in Base at char.jl:50)
 ((::Type{SArray{S,T,N,L} where L})(x::Tuple) where {S<:Tuple, T, N} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SArray.jl:33, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SizedArray{S,T,N,M} where M})(x::Tuple) where {S, T, N} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SizedArray.jl:57, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SArray{Tuple{S1,S2},T,2,L} where L where T where S2})(x::Tuple{Vararg{Any,L}}) where {S1, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SMatrix.jl:20, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SHermitianCompact{N,T,L}})(a::Tuple) where {N, T, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SHermitianCompact.jl:63, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{Fill{T,N,Axes} where Axes})(x, sz::Axes) where {T, N, Axes<:Tuple{Vararg{AbstractUnitRange,N}}} in FillArrays at /home/pkgeval/.julia/packages/FillArrays/Aj0C4/src/FillArrays.jl:66, (::Type{Fill{T,N,Axes} where Axes})(x, sz::SZ) where {T, N, SZ<:Tuple{Vararg{Integer,N}}} in FillArrays at /home/pkgeval/.julia/packages/FillArrays/Aj0C4/src/FillArrays.jl:69)
 ((::Type{SArray{S,T,N,L}})(x::Tuple{Vararg{T,L}}) where {S, T, N, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SArray.jl:22, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SHermitianCompact{N,T,L} where L where T})(a::Tuple) where N in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SHermitianCompact.jl:80, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{FA})(x::Tuple{Vararg{Any,N}}) where {N, FA<:FieldArray} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/FieldArray.jl:99, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 (StatsBase.TestStat(v) in StatsBase at /home/pkgeval/.julia/packages/StatsBase/DyWPR/src/statmodels.jl:414, (::Type{T})(z::Complex) where T<:Real in Base at complex.jl:37)
 ((::Type{MArray{Tuple{S},T,1,S} where T})(x::Tuple{Vararg{Any,S}}) where S in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/MVector.jl:21, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SHermitianCompact{N,T,L} where L where T})(a::Tuple{Vararg{T,M}}) where {N, T, M} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SHermitianCompact.jl:81, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SHermitianCompact})(a::StaticArray{Tuple{N,N},T,2}) where {N, T} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SHermitianCompact.jl:82, (::Type{SSC})(a::SSC) where SSC<:SHermitianCompact in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SHermitianCompact.jl:85)
 ((::Type{Scalar{T} where T})(a::AbstractArray{T,0} where T) in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/Scalar.jl:11, (::Type{SA})(a::StaticArray) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:5)
 ((::Type{MArray{Tuple{S},T,1,S} where T where S})(x::Tuple{Vararg{Any,S}}) where S in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/MVector.jl:19, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SSC})(a::AbstractArray{T,1} where T) where SSC<:SHermitianCompact in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SHermitianCompact.jl:87, (::Type{SA})(a::StaticArray) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:5)
 ((::Type{Dual{T,V,N}})(x::Number) where {T, V, N} in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:73, (::Type{T})(z::Complex) where T<:Real in Base at complex.jl:37)
 ((::Type{SArray{S,T,N,L} where L where N where T})(x::T) where {S<:Tuple, T<:Tuple} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SArray.jl:47, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{Dual})(args...) in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:68, (::Type{T})(x::AbstractChar) where T<:Union{AbstractChar, Number} in Base at char.jl:50)
 ((::Type{SizedArray{S,T,N,M}})(x::Tuple{Vararg{Any,L}}) where {S, T, N, M, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SizedArray.jl:45, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{MArray{S,T,N,L}})(x::Tuple{Vararg{T,L}}) where {S, T, N, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/MArray.jl:24, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{MArray{S,T,N,L} where L where N})(x::Tuple) where {S, T} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/MArray.jl:47, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SArray{S,T,N,L} where L where N})(x::Tuple) where {S<:Tuple, T} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SArray.jl:40, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SizedArray{Tuple{S1,S2},T,2,M} where M where T})(x::Tuple{Vararg{T,L}}) where {S1, S2, T, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SizedArray.jl:83, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 (StatsBase.TestStat(v) in StatsBase at /home/pkgeval/.julia/packages/StatsBase/DyWPR/src/statmodels.jl:414, (::Type{T})(x::AbstractChar) where T<:Union{AbstractChar, Number} in Base at char.jl:50)
 ((::Type{Dual{T,V,N} where N})(x) where {T, V} in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:74, (::Type{T})(x::T) where T<:Number in Core at boot.jl:715)
 ((::Type{Dual{T,V,N}})(x) where {T, V, N} in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:72, (::Type{T})(x::Base.TwicePrecision) where T<:Number in Base at twiceprecision.jl:243)
 ((::Type{SArray{Tuple{S},T,1,S} where T})(x::T) where {S, T<:Tuple} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SVector.jl:20, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{MArray{Tuple{S},T,1,S} where T})(x::Tuple{Vararg{T,S}}) where {S, T} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/MVector.jl:20, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 (StatsBase.TestStat(v) in StatsBase at /home/pkgeval/.julia/packages/StatsBase/DyWPR/src/statmodels.jl:414, (::Type{T})(x::Base.TwicePrecision) where T<:Number in Base at twiceprecision.jl:243)
 ((::Type{Dual{T,V,N}})(x) where {T, V, N} in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:72, (::Type{T})(x::AbstractChar) where T<:Union{AbstractChar, Number} in Base at char.jl:50)
 ((::Type{SArray{Tuple{S},T,1,S} where T where S})(x::Tuple{Vararg{Any,S}}) where S in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SVector.jl:18, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{MArray{S,T,N,L} where L})(x::Tuple) where {S, T, N} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/MArray.jl:40, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{MArray{S,T,N,L}})(x::Tuple{Vararg{Any,L}}) where {S, T, N, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/MArray.jl:29, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{MArray{Tuple{S1,S2},T,2,L} where L})(x::Tuple{Vararg{T,L}} where T) where {S1, S2, T, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/MMatrix.jl:41, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SArray{Tuple{S1,S2},T,2,L} where T})(x::Tuple{Vararg{Any,L}}) where {S1, S2, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SMatrix.jl:41, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SArray{Tuple{S1,S2},T,2,L} where L})(x::Tuple{Vararg{Any,L}}) where {S1, S2, T, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SMatrix.jl:49, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{DiffResults.DiffResult})(value::Number, derivs::Tuple{Vararg{Number,N} where N}) in DiffResults at /home/pkgeval/.julia/packages/DiffResults/qEJ0G/src/DiffResults.jl:47, (::Type{DiffResults.DiffResult})(value::Number, derivs::Tuple{Vararg{StaticArray,N} where N}) in DiffResults at /home/pkgeval/.julia/packages/DiffResults/qEJ0G/src/DiffResults.jl:48)
 ((::Type{Dual{T,V,N} where N})(x) where {T, V} in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:74, (::Type{T})(z::Complex) where T<:Real in Base at complex.jl:37)
 ((::Type{SizedArray{Tuple{S},T,1,M} where M where T})(x::Tuple{Vararg{T,L}}) where {S, T, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SizedArray.jl:79, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SArray{S,T,N,L}})(x::Tuple{Vararg{Any,L}}) where {S, T, N, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SArray.jl:27, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{Dual{T,V,N} where N where V})(value) where T in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:64, (::Type{T})(x::AbstractChar) where T<:Union{AbstractChar, Number} in Base at char.jl:50)
 ((::Type{Dual{T,V,N}})(x) where {T, V, N} in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:72, (::Type{T})(z::Complex) where T<:Real in Base at complex.jl:37)
 ((::Type{MArray{Tuple{S1,S2},T,2,L} where L where T})(x::Tuple{Vararg{T,L}} where T) where {S1, S2, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/MMatrix.jl:33, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SArray{Tuple{S},T,1,S} where T})(x::Tuple{Vararg{T,S}}) where {S, T} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SVector.jl:19, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{Dual{T,V,N} where N where V})(value) where T in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:64, (::Type{T})(x::Base.TwicePrecision) where T<:Number in Base at twiceprecision.jl:243)
 ((::Type{SHermitianCompact{N,T,L} where L})(a::Tuple) where {N, T} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SHermitianCompact.jl:76, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{Dual})(args...) in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:68, (::Type{T})(x::T) where T<:Number in Core at boot.jl:715)
 ((::Type{Dual})(args...) in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:68, (::Type{T})(z::Complex) where T<:Real in Base at complex.jl:37)
 ((::Type{Dual{T,V,N} where N})(x) where {T, V} in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:74, (::Type{T})(x::Base.TwicePrecision) where T<:Number in Base at twiceprecision.jl:243)
 ((::Type{SHermitianCompact})(a::StaticArray{Tuple{N,N},T,2}) where {N, T} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SHermitianCompact.jl:82, (::Type{SSC})(a::SHermitianCompact) where SSC<:SHermitianCompact in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SHermitianCompact.jl:84)
 ((::Type{Dual{T,V,N} where N where V})(value) where T in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:64, (::Type{T})(z::Complex) where T<:Real in Base at complex.jl:37)
 ((::Type{SArray{Tuple{S1,S2},T,2,L} where L where T})(x::Tuple{Vararg{Any,L}}) where {S1, S2, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SMatrix.jl:33, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{Dual})(args...) in ForwardDiff at /home/pkgeval/.julia/packages/ForwardDiff/vt5F1/src/dual.jl:68, (::Type{T})(x::Base.TwicePrecision) where T<:Number in Base at twiceprecision.jl:243)
 ((::Type{Scalar{T} where T})(a::AbstractArray) in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/Scalar.jl:10, (::Type{SA})(a::StaticArray) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:5)
 ((::Type{Scalar{T} where T})(x::Tuple{T}) where T in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/Scalar.jl:9, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{MArray{Tuple{S1,S2},T,2,L} where L where T where S2})(x::Tuple{Vararg{T,L}} where T) where {S1, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/MMatrix.jl:21, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{MArray{S,T,N,L} where L where N where T})(x::T) where {S, T<:Tuple} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/MArray.jl:54, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SizedArray{S,T,N,M} where M where N})(x::Tuple) where {S, T} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SizedArray.jl:58, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
 ((::Type{SizedArray{S,T,N,M} where M where N where T})(x::Tuple{Vararg{T,L}}) where {S, T, L} in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/SizedArray.jl:59, (::Type{SA})(x::Tuple{Tuple{Tuple{#s162} where #s162<:Tuple}}) where SA<:StaticArray in StaticArrays at /home/pkgeval/.julia/packages/StaticArrays/1g9bq/src/convert.jl:1)
    Testing Distributions tests passed 
    Testing GLM
┌ Error: Pkg.Resolve.ResolverError("empty intersection between CSV@0.3.1 and project compatibility 0.5", nothing)
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1365
Status `/tmp/jl_yVQQCc/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [b99e7846] BinaryProvider v0.5.8
  [336ed68f] CSV v0.5.23
  [324d7699] CategoricalArrays v0.7.7
  [944b1d66] CodecZlib v0.6.0
  [34da2185] Compat v3.5.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [31c24e10] Distributions v0.22.4
  [e2ba6199] ExprTools v0.1.0
  [8f5d6c58] EzXML v1.1.0
  [5789e2e9] FileIO v1.2.2
  [48062228] FilePathsBase v0.7.0
  [1a297f60] FillArrays v0.8.4
  [38e38edf] GLM v1.3.6
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [94ce4f54] Libiconv_jll v1.16.0+1
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.11
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [1fd47b50] QuadGK v2.3.1
  [df47a6cb] RData v0.6.3
  [ce6b1742] RDatasets v0.6.6
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [1277b4bf] ShiftedArrays v1.0.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [3eaba693] StatsModels v0.6.7
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [f269a46b] TimeZones v1.0.1
  [3bb67fe8] TranscodingStreams v0.9.5
  [ea10d353] WeakRefStrings v0.6.2
  [02c8fc9c] XML2_jll v2.9.9+1
  [83775a58] Zlib_jll v1.2.11+8
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
lm            |   18     18
Test Summary: | Pass  Total
rankdeficient |    6      6
Test Summary: | Pass  Total
Poisson GLM   |    8      8
Test Summary:           | Pass  Total
Binomial with LogitLink |    8      8
Test Summary:            | Pass  Total
Bernoulli with LogitLink |    8      8
Test Summary:        | Pass  Total
Bernoulli ProbitLink |    8      8
Test Summary:         | Pass  Total
Bernoulli CauchitLink |    7      7
Test Summary:         | Pass  Total
Bernoulli CloglogLink |    8      8
Test Summary: | Pass  Total
Offset        |   10     10
Test Summary:         | Pass  Total
Normal LogLink offset |    5      5
Test Summary: | Pass  Total
Gamma         |   11     11
Test Summary:   | Pass  Total
InverseGaussian |   11     11
Test Summary: | Pass  Total
Gamma LogLink |   10     10
Test Summary:      | Pass  Total
Gamma IdentityLink |   10     10
Test Summary:                 | Pass  Total
Aggregated Binomial LogitLink |   16     16
Test Summary:                 | Pass  Total
Binomial LogitLink aggregated |    8      8
Test Summary:             | Pass  Total
Gamma InverseLink Weights |    8      8
Test Summary:           | Pass  Total
Poisson LogLink Weights |    7      7
Test Summary:                    | Pass  Total
NegativeBinomial LogLink Fixed θ |    8      8
Test Summary:                                 | Pass  Total
NegativeBinomial NegativeBinomialLink Fixed θ |    8      8
Test Summary:                               | Pass  Total
NegativeBinomial LogLink, θ to be estimated |    7      7
Test Summary:                                            | Pass  Total
NegativeBinomial NegativeBinomialLink, θ to be estimated |    7      7
Test Summary: | Pass  Total
Sparse GLM    |    3      3
Test Summary: | Pass  Total
Predict       |   13     13
Test Summary:               | Pass  Total
F test for model comparison |   24     24
Test Summary:         | Pass  Total
F test rounding error |    1      1
Test Summary: | Pass  Total
coeftable     |    8      8
Test Summary: | Pass  Total
Issue 84      |    3      3
Test Summary: | Pass  Total
Issue 117     |    1      1
Test Summary: |
Issue 118     | No tests
Test Summary: |
Issue 153     | No tests
Test Summary: | Pass  Total
Issue 224     |    1      1
Test Summary: | Pass  Total
Issue #228    |    1      1
Test Summary: | Pass  Total
Issue #263    |    4      4
Test Summary:               | Pass  Total
Issue #286 (separable data) |    4      4
    Testing GLM tests passed 
    Testing HypothesisTests
Status `/tmp/jl_Odtsk5/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [b99e7846] BinaryProvider v0.5.8
  [861a8166] Combinatorics v1.0.0
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.9
  [31c24e10] Distributions v0.21.12
  [1a297f60] FillArrays v0.8.4
  [09f84164] HypothesisTests v0.9.0
  [e1d29d7a] Missings v0.4.3
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.11
  [f27b6e38] Polynomials v0.5.3
  [1fd47b50] QuadGK v2.3.1
  [3cdcf5f2] RecipesBase v0.8.0
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary:    | Pass  Total
Anderson-Darling |   28     28
Test Summary:           | Pass  Total
Augmented Dickey-Fuller |   56     56
Test Summary:   | Pass  Total
Bartlett's test |    5      5
Test Summary: | Pass  Total
Binomial      |  117    117
Test Summary: | Pass  Total
SignTest      |   41     41
Test Summary:            | Pass  Total
Box-Pierce and Ljung-Box |   22     22
Test Summary:   | Pass  Total
Breusch-Godfrey |   25     25
Test Summary: | Pass  Total
Circular      |    9      9
Test Summary: | Pass  Total
Common        |    4      4
┌ Warning: Exact p-values outside [0,1]. Approximate p-values reported instead.
└ @ HypothesisTests ~/.julia/packages/HypothesisTests/wSEbN/src/durbin_watson.jl:196
┌ Warning: Exact p-values outside [0,1]. Approximate p-values reported instead.
└ @ HypothesisTests ~/.julia/packages/HypothesisTests/wSEbN/src/durbin_watson.jl:196
┌ Warning: Exact p-values outside [0,1]. Approximate p-values reported instead.
└ @ HypothesisTests ~/.julia/packages/HypothesisTests/wSEbN/src/durbin_watson.jl:196
┌ Warning: Exact p-values outside [0,1]. Approximate p-values reported instead.
└ @ HypothesisTests ~/.julia/packages/HypothesisTests/wSEbN/src/durbin_watson.jl:196
Test Summary: | Pass  Total
Durbin-Watson |   48     48
Test Summary: | Pass  Total
Fisher        |  114    114
Test Summary: | Pass  Total
Jarque-Bera   |   12     12
Test Summary:               | Pass  Total
Hotelling utility functions |    7      7
Test Summary:             | Pass  Total
One sample Hotelling's T² |   12     12
Test Summary:             | Pass  Total
Two sample Hotelling's T² |   12     12
┌ Warning: This test is inaccurate with ties
└ @ HypothesisTests ~/.julia/packages/HypothesisTests/wSEbN/src/kolmogorov_smirnov.jl:112
┌ Warning: This test is inaccurate with ties
└ @ HypothesisTests ~/.julia/packages/HypothesisTests/wSEbN/src/kolmogorov_smirnov.jl:167
┌ Warning: This test is inaccurate with ties
└ @ HypothesisTests ~/.julia/packages/HypothesisTests/wSEbN/src/kolmogorov_smirnov.jl:68
Test Summary:      | Pass  Total
Kolmogorov-Smirnov |   51     51
┌ Warning: This test is only asymptotically correct and might be inaccurate for the given group size
└ @ HypothesisTests ~/.julia/packages/HypothesisTests/wSEbN/src/kruskal_wallis.jl:73
Test Summary:  | Pass  Total
Kruskal-Wallis |   19     19
Test Summary: | Pass  Total
Mann-Whitney  |   25     25
Test Summary:       | Pass  Total
Partial correlation |   11     11
Test Summary: | Pass  Total
Permutation   |    8      8
Test Summary:    | Pass  Total
Power Divergence |   41     41
Show: Test Failed at /home/pkgeval/.julia/packages/HypothesisTests/wSEbN/test/show.jl:8
  Expression: sprint(show, m, context = :compact => true) == "Pearson's Chi-square Test\n-------------------------\nPopulation details:\n    parameter of interest:   Multinomial Probabilities\n    value under h_0:         [0.255231, 0.19671, 0.11594, 0.0893561, 0.193574, 0.14919]\n    point estimate:          [0.276387, 0.175553, 0.118607, 0.0866884, 0.16975, 0.173014]\n    95% confidence interval: Tuple{Float64,Float64}[(0.2545, 0.2994), (0.1573, 0.1955), (0.1033, 0.1358), (0.0736, 0.1019), (0.1517, 0.1894), (0.1548, 0.1928)]\n\nTest summary:\n    outcome with 95% confidence: reject h_0\n    one-sided p-value:           <1e-6\n\nDetails:\n    Sample size:        2757\n    statistic:          30.070149095754687\n    degrees of freedom: 2\n    residuals:          [2.19886, -2.50467, 0.41137, -0.468583, -2.84324, 3.23867]\n    std. residuals:     [4.50205, -4.50205, 0.699452, -0.699452, -5.31595, 5.31595]\n"
   Evaluated: "Pearson's Chi-square Test\n-------------------------\nPopulation details:\n    parameter of interest:   Multinomial Probabilities\n    value under h_0:         [0.255231, 0.19671, 0.11594, 0.0893561, 0.193574, 0.14919]\n    point estimate:          [0.276387, 0.175553, 0.118607, 0.0866884, 0.16975, 0.173014]\n    95% confidence interval: [(0.2545, 0.2994), (0.1573, 0.1955), (0.1033, 0.1358), (0.0736, 0.1019), (0.1517, 0.1894), (0.1548, 0.1928)]\n\nTest summary:\n    outcome with 95% confidence: reject h_0\n    one-sided p-value:           <1e-6\n\nDetails:\n    Sample size:        2757\n    statistic:          30.070149095754687\n    degrees of freedom: 2\n    residuals:          [2.19886, -2.50467, 0.41137, -0.468583, -2.84324, 3.23867]\n    std. residuals:     [4.50205, -4.50205, 0.699452, -0.699452, -5.31595, 5.31595]\n" == "Pearson's Chi-square Test\n-------------------------\nPopulation details:\n    parameter of interest:   Multinomial Probabilities\n    value under h_0:         [0.255231, 0.19671, 0.11594, 0.0893561, 0.193574, 0.14919]\n    point estimate:          [0.276387, 0.175553, 0.118607, 0.0866884, 0.16975, 0.173014]\n    95% confidence interval: Tuple{Float64,Float64}[(0.2545, 0.2994), (0.1573, 0.1955), (0.1033, 0.1358), (0.0736, 0.1019), (0.1517, 0.1894), (0.1548, 0.1928)]\n\nTest summary:\n    outcome with 95% confidence: reject h_0\n    one-sided p-value:           <1e-6\n\nDetails:\n    Sample size:        2757\n    statistic:          30.070149095754687\n    degrees of freedom: 2\n    residuals:          [2.19886, -2.50467, 0.41137, -0.468583, -2.84324, 3.23867]\n    std. residuals:     [4.50205, -4.50205, 0.699452, -0.699452, -5.31595, 5.31595]\n"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HypothesisTests/wSEbN/test/show.jl:8
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/HypothesisTests/wSEbN/test/show.jl:5
Show: Test Failed at /home/pkgeval/.julia/packages/HypothesisTests/wSEbN/test/show.jl:33
  Expression: sprint(show, m, context = :compact => true) == "Pearson's Chi-square Test\n-------------------------\nPopulation details:\n    parameter of interest:   Multinomial Probabilities\n    value under h_0:         [0.333333, 0.333333, 0.333333]\n    point estimate:          [0.333333, 0.25, 0.416667]\n    95% confidence interval: Tuple{Float64,Float64}[(0.2167, 0.481), (0.1333, 0.3976), (0.3, 0.5643)]\n\nTest summary:\n    outcome with 95% confidence: fail to reject h_0\n    one-sided p-value:           0.2865\n\nDetails:\n    Sample size:        60\n    statistic:          2.5\n    degrees of freedom: 2\n    residuals:          [0.0, -1.11803, 1.11803]\n    std. residuals:     [0.0, -1.36931, 1.36931]\n"
   Evaluated: "Pearson's Chi-square Test\n-------------------------\nPopulation details:\n    parameter of interest:   Multinomial Probabilities\n    value under h_0:         [0.333333, 0.333333, 0.333333]\n    point estimate:          [0.333333, 0.25, 0.416667]\n    95% confidence interval: [(0.2167, 0.481), (0.1333, 0.3976), (0.3, 0.5643)]\n\nTest summary:\n    outcome with 95% confidence: fail to reject h_0\n    one-sided p-value:           0.2865\n\nDetails:\n    Sample size:        60\n    statistic:          2.5\n    degrees of freedom: 2\n    residuals:          [0.0, -1.11803, 1.11803]\n    std. residuals:     [0.0, -1.36931, 1.36931]\n" == "Pearson's Chi-square Test\n-------------------------\nPopulation details:\n    parameter of interest:   Multinomial Probabilities\n    value under h_0:         [0.333333, 0.333333, 0.333333]\n    point estimate:          [0.333333, 0.25, 0.416667]\n    95% confidence interval: Tuple{Float64,Float64}[(0.2167, 0.481), (0.1333, 0.3976), (0.3, 0.5643)]\n\nTest summary:\n    outcome with 95% confidence: fail to reject h_0\n    one-sided p-value:           0.2865\n\nDetails:\n    Sample size:        60\n    statistic:          2.5\n    degrees of freedom: 2\n    residuals:          [0.0, -1.11803, 1.11803]\n    std. residuals:     [0.0, -1.36931, 1.36931]\n"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HypothesisTests/wSEbN/test/show.jl:33
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/HypothesisTests/wSEbN/test/show.jl:5
Test Summary: | Pass  Fail  Total
Show          |    1     2      3
ERROR: LoadError: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/HypothesisTests/wSEbN/test/show.jl:3
in expression starting at /home/pkgeval/.julia/packages/HypothesisTests/wSEbN/test/runtests.jl:33
    Testing KernelDensity
Status `/tmp/jl_apd0gu/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [13072b0f] AxisAlgorithms v1.0.0
  [b99e7846] BinaryProvider v0.5.8
  [bbf7d656] CommonSubexpressions v0.2.0
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.9
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [31c24e10] Distributions v0.21.12
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [f6369f11] ForwardDiff v0.10.9
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.5
  [5ab0869b] KernelDensity v0.5.1
  [d3d80556] LineSearches v7.0.1
  [856f044c] MKL_jll v2019.0.117+2
  [e1d29d7a] Missings v0.4.3
  [d41bc354] NLSolversBase v7.6.1
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v1.0.2
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [429524aa] Optim v0.20.1
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [85a6dd25] PositiveFactorizations v0.2.3
  [1fd47b50] QuadGK v2.3.1
  [c84ed2f1] Ratios v0.4.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [efce3f68] WoodburyMatrices v0.5.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Running tests:
 * univariate.jl
 * bivariate.jl
 * interp.jl
    Testing KernelDensity tests passed 
    Testing Loess
Status `/tmp/jl_qlQNTI/Manifest.toml`
  [b4f34e82] Distances v0.8.2
  [4345ca2d] Loess v0.5.0
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
    Testing Loess tests passed 
    Testing MultivariateStats
Status `/tmp/jl_2HT6Cp/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.9
  [e1d29d7a] Missings v0.4.3
  [6f286f6a] MultivariateStats v0.7.0
  [4536629a] OpenBLAS_jll v0.3.7+5
  [bac558e1] OrderedCollections v1.1.0
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
ERROR: LoadError: LoadError: ArgumentError: Package Random not found in current path:
- Run `import Pkg; Pkg.add("Random")` to install the Random package.

Stacktrace:
 [1] require(::Module, ::Symbol) at ./loading.jl:892
 [2] include(::String) at ./client.jl:441
 [3] top-level scope at /home/pkgeval/.julia/packages/MultivariateStats/BYMwD/test/runtests.jl:14
 [4] include(::String) at ./client.jl:441
 [5] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/MultivariateStats/BYMwD/test/lreg.jl:4
in expression starting at /home/pkgeval/.julia/packages/MultivariateStats/BYMwD/test/runtests.jl:13
    Testing StatsBase
Status `/tmp/jl_e4zERn/Manifest.toml`
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.9
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [de0858da] Printf 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [4ec0a83e] Unicode 
Running tests:
 * ambiguous.jl ...
Skipping StatsBase.findat
Skipping StatsBase.wmean!
Skipping Base.active_repl
Skipping Base.active_repl_backend
Test Summary: | Broken  Total
Ambiguities   |      1      1
 * weights.jl ...
Test Summary:     | Pass  Total
StatsBase.Weights | 3547   3547
 * moments.jl ...
Test Summary:     | Pass  Total
StatsBase.Moments |  356    356
 * scalarstats.jl ...
 * deviation.jl ...
 * cov.jl ...
Test Summary:        | Pass  Total
StatsBase.Covariance |  392    392
 * counts.jl ...
Test Summary: | Pass  Total
views         |    1      1
 * ranking.jl ...
 * empirical.jl ...
Test Summary: | Pass  Total
ECDF          |    6      6
 * hist.jl ...
Test Summary:       | Pass  Total
StatsBase.Histogram |  104    104
 * rankcorr.jl ...
 * signalcorr.jl ...
 * misc.jl ...
 * robust.jl ...
 * sampling.jl ...
Test Summary:  | Pass  Total
sampling pairs |    4      4
 * wsampling.jl ...
 * statmodels.jl ...
 * partialcor.jl ...
 * transformations.jl ...
Test Summary:   | Pass  Total
Transformations |   39     39
    Testing StatsBase tests passed 
    Testing TimeSeries
Status `/tmp/jl_MNh7rM/Manifest.toml`
  [b99e7846] BinaryProvider v0.5.8
  [336ed68f] CSV v0.3.1
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.19.4
  [9a8bc11e] DataStreams v0.4.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [cd3eb016] HTTP v0.8.8
  [83e8ac13] IniFile v0.5.0
  [7d512f48] InternedStrings v0.7.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [945b72a4] MarketData v0.11.0
  [739be429] MbedTLS v0.7.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [3cdcf5f2] RecipesBase v0.8.0
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.0
  [9e3dc215] TimeSeries v0.16.0
  [ea10d353] WeakRefStrings v0.5.8
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
[ Info: Running tests:
[ Info: 	* timearray ...
