Julia Version 1.5.0-DEV.360
Commit 012b270df6 (2020-02-28 07:57 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_6m3jH5/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.08729837124587697 0.024268691893224562; -0.08729837124587697 0.0 0.07136818995430154; -0.024268691893224562 -0.07136818995430154 0.0])
dAA = so3([0.0 0.07858300721453253 -0.011451117667598038; -0.07858300721453253 0.0 -0.012236484758248544; 0.011451117667598038 0.012236484758248544 0.0])
dAA = so3([0.0 0.05252129048874293 0.02776778612952094; -0.05252129048874293 0.0 0.10981772145557821; -0.02776778612952094 -0.10981772145557821 0.0])
dAA = Quaternion(0.9973691294089004, [-0.07008756171572413, -0.013657302265227144, 0.012491256530584718])
dAA = SO3([0.9788303774262769 -0.1928588373141116 -0.06853146063948917; 0.2024264991571084 0.9616803618401378 0.1849172628231855; 0.030242431557829557 -0.19487521782122763 0.9803616908124263])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9803586256101725 0.1947025648048996 -0.03143050190702617; -0.19557538287325588 0.9803006850105037 -0.02758326633878889; 0.025440809847822855 0.033188525522099645 0.9991252608997312]), [-0.7136818995430154, 0.24268691893224562, -0.8729837124587697])
xj = SE3(SO3([0.9957640875338992 -0.0545555777982083 -0.07401061348809805; 0.07672204249323454 0.9366254512904797 0.3418281617868422; 0.05067159138459452 -0.3460584530480492 0.9368436032233682]), [-1.098177214555782, 0.2776778612952094, -0.5252129048874293])
Dx = SE3(SO3([0.9624900957723703 -0.24546891981481905 -0.11557605697132552; 0.27077020799889656 0.8960672907754815 0.3517767827224005; 0.017213657378008403 -0.36987622227879763 0.9289215629925047]), [-0.37493909454315266, -0.029018578897954395, 0.3585863150971341])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
