Julia Version 1.5.0-DEV.373
Commit e39e945a81 (2020-02-29 18:45 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ───────────────────── v1.0.1
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed InplaceOps ─────────────────── v0.3.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed Parameters ─────────────────── v0.12.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed LazyArrays ─────────────────── v0.15.0
  Installed DataAPI ────────────────────── v1.1.0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+2
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed ProgressMeter ──────────────── v1.2.0
  Installed MacroTools ─────────────────── v0.5.4
  Installed DataStructures ─────────────── v0.17.10
  Installed FillArrays ─────────────────── v0.8.5
  Installed Missings ───────────────────── v0.4.3
  Installed Rmath ──────────────────────── v0.6.1
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed OrderedCollections ─────────── v1.1.0
  Installed StaticArrays ───────────────── v0.12.1
  Installed StatsBase ──────────────────── v0.32.1
#=#=#                                                                         ###                                                                        4.7%#########                                                                 13.6%#################                                                         24.7%############################                                              39.2%###########################################                               60.6%###############################################################           87.6%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#########                                                                 13.7%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [e66e0078] + CompilerSupportLibraries_jll v0.2.0+1
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.10
  [1a297f60] + FillArrays v0.8.5
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.0
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+2
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.1
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing AdvancedHMC
#=#=#                                                                         ################                                                          22.6%#####################################################                     74.2%######################################################################## 100.0%
#=#=#                                                                         ###################################################                       71.3%######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.1%####                                                                       6.4%########                                                                  11.9%#############                                                             19.2%##################                                                        26.2%#############################                                             41.4%##########################################                                59.2%#########################################################                 79.3%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
Status `/tmp/jl_jz5pm9/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.4.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [5b7e9947] AdvancedMH v0.4.1
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.7.0
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.6.0
  [e66e0078] CompilerSupportLibraries_jll v0.2.0+1
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.10
  [2b5f629d] DiffEqBase v6.18.1
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.22.5
  [ced4e74d] DistributionsAD v0.4.1
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.4.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+4
  [1a297f60] FillArrays v0.8.5
  [6a86dc24] FiniteDiff v2.2.1
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5078a376] LazyArrays v0.15.0
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [c7f686f2] MCMCChains v3.0.3
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.6.5
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.7+6
  [efe28fd5] OpenSpecFun_jll v0.5.3+2
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.29.0
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.12
  [f27b6e38] Polynomials v0.6.1
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v0.8.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v0.8.4
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.1
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.9.0
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.8
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.178383762
│   t_steps = 0.008424123
└   t_step / t_steps = 21.17535107215315
Sampling  0%|                               |  ETA: 5:11:20[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.4969792377951327
  log_density:                   -11.134180945158212
  hamiltonian_energy:            17.912116815164392
  hamiltonian_energy_error:      0.10759084751797232
  max_hamiltonian_energy_error:  1.3534235173662488
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9
  nom_step_size:                 0.9
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  6%|██                             |  ETA: 0:00:32[K
  iterations:                    772
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9418580122947423
  log_density:                   -18.061542001746947
  hamiltonian_energy:            20.6169328981152
  hamiltonian_energy_error:      0.15431904561053145
  max_hamiltonian_energy_error:  -0.5541145894511459
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.640019065179851
  nom_step_size:                 0.640019065179851
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0093647831702401, 0.6750 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▌                            |  ETA: 0:00:27[K
  iterations:                    958
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               0.8676956834247176
  log_density:                   -14.867385795281006
  hamiltonian_energy:            18.588931772317018
  hamiltonian_energy_error:      0.22133852233116613
  max_hamiltonian_energy_error:  0.415055411130016
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8709063185495055
  nom_step_size:                 0.8709063185495055
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8487894039534581, 0.9813 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▎                           |  ETA: 0:00:21[K
  iterations:                    1239
  n_steps:                       243
  is_accept:                     true
  acceptance_rate:               0.70389436774174
  log_density:                   -16.87558229571892
  hamiltonian_energy:            24.92569067976128
  hamiltonian_energy_error:      0.24050814089582673
  max_hamiltonian_energy_error:  0.9504543158256773
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.7979093310228497
  nom_step_size:                 0.7979093310228497
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8487894039534581, 0.9813 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▊                           |  ETA: 0:00:18[K
  iterations:                    1467
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7802784974970672
  log_density:                   -15.259050866415619
  hamiltonian_energy:            20.163141665498358
  hamiltonian_energy_error:      0.24377169459549464
  max_hamiltonian_energy_error:  0.6100373010626825
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8073283819709601
  nom_step_size:                 0.8073283819709601
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8487894039534581, 0.9813 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:16[K
  iterations:                    1715
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5979639321067384
  log_density:                   -11.24634177280297
  hamiltonian_energy:            16.71101461952129
  hamiltonian_energy_error:      0.04364584710136299
  max_hamiltonian_energy_error:  1.073876904799576
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9268878612222513
  nom_step_size:                 0.9268878612222513
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8487894039534581, 0.9813 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:15[K
  iterations:                    1871
  n_steps:                       67
  is_accept:                     true
  acceptance_rate:               0.8192150830024365
  log_density:                   -15.070010699011304
  hamiltonian_energy:            19.240859978673946
  hamiltonian_energy_error:      0.22315364888186906
  max_hamiltonian_energy_error:  0.5976470154433287
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.7946082145256856
  nom_step_size:                 0.7946082145256856
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8487894039534581, 0.9813 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▋                         |  ETA: 0:00:13[K
  iterations:                    2190
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8519992283675124
  log_density:                   -15.430253343855954
  hamiltonian_energy:            18.998834906058768
  hamiltonian_energy_error:      0.2959106680441934
  max_hamiltonian_energy_error:  0.3066231602014078
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▌                        |  ETA: 0:00:11[K
  iterations:                    2528
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8900197153904554
  log_density:                   -14.83673721152294
  hamiltonian_energy:            19.28036379906298
  hamiltonian_energy_error:      0.02493858669186011
  max_hamiltonian_energy_error:  -0.4121958873386795
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▋                       |  ETA: 0:00:09[K
  iterations:                    2944
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.704742081361673
  log_density:                   -17.135384334469293
  hamiltonian_energy:            19.479921512251188
  hamiltonian_energy_error:      0.703818824130451
  max_hamiltonian_energy_error:  0.703818824130451
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▌                      |  ETA: 0:00:08[K
  iterations:                    3296
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9963723564228956
  log_density:                   -15.868512022617526
  hamiltonian_energy:            21.448409822852483
  hamiltonian_energy_error:      -0.26767449408488986
  max_hamiltonian_energy_error:  -0.6113142234423599
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▌                     |  ETA: 0:00:07[K
  iterations:                    3675
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9984496906465327
  log_density:                   -13.295342957412505
  hamiltonian_energy:            20.349190166195374
  hamiltonian_energy_error:      -0.5309441816282963
  max_hamiltonian_energy_error:  -0.5309441816282963
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▍                    |  ETA: 0:00:07[K
  iterations:                    4033
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9666569735715304
  log_density:                   -12.558501936452515
  hamiltonian_energy:            16.424029058139098
  hamiltonian_energy_error:      -0.1976238136483417
  max_hamiltonian_energy_error:  -0.3571474254175513
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▍                   |  ETA: 0:00:06[K
  iterations:                    4410
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.292740798419878
  hamiltonian_energy:            16.03119823246307
  hamiltonian_energy_error:      -0.5177308952801845
  max_hamiltonian_energy_error:  -0.6036575485802054
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▍                  |  ETA: 0:00:05[K
  iterations:                    4773
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8235848761508942
  log_density:                   -17.247379134636994
  hamiltonian_energy:            23.115244789646482
  hamiltonian_energy_error:      0.25189994873612775
  max_hamiltonian_energy_error:  0.46391425817235543
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▍                 |  ETA: 0:00:05[K
  iterations:                    5177
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7770908886670943
  log_density:                   -12.097136384075744
  hamiltonian_energy:            17.067405157491947
  hamiltonian_energy_error:      0.006823081232973038
  max_hamiltonian_energy_error:  0.42089566377290666
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 46%|██████████████▎                |  ETA: 0:00:04[K
  iterations:                    5512
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9950129402581557
  log_density:                   -15.54620884473627
  hamiltonian_energy:            20.49740194453243
  hamiltonian_energy_error:      -0.10769541350338585
  max_hamiltonian_energy_error:  -0.3288647676487031
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▍               |  ETA: 0:00:04[K
  iterations:                    5958
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8979644727829983
  log_density:                   -17.176778508268875
  hamiltonian_energy:            24.339523137812048
  hamiltonian_energy_error:      0.05292962131399648
  max_hamiltonian_energy_error:  0.16456692652377924
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▊              |  ETA: 0:00:03[K
  iterations:                    6492
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.886634363269127
  log_density:                   -20.079045191880482
  hamiltonian_energy:            23.325957863601683
  hamiltonian_energy_error:      0.41566228836795815
  max_hamiltonian_energy_error:  -0.5578891762531484
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▎            |  ETA: 0:00:03[K
  iterations:                    7046
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8930485738090519
  log_density:                   -13.488818713434346
  hamiltonian_energy:            21.147394254552136
  hamiltonian_energy_error:      -0.4829218801086128
  max_hamiltonian_energy_error:  -0.843378814830654
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▌           |  ETA: 0:00:02[K
  iterations:                    7566
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9310697994852136
  log_density:                   -14.485017998637346
  hamiltonian_energy:            18.86418667471021
  hamiltonian_energy_error:      0.03489504803251364
  max_hamiltonian_energy_error:  0.22249166317492453
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▉          |  ETA: 0:00:02[K
  iterations:                    8083
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8211967442529529
  log_density:                   -17.007333443618794
  hamiltonian_energy:            21.029745972931547
  hamiltonian_energy_error:      0.3952827426874741
  max_hamiltonian_energy_error:  0.4615603834440023
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▏        |  ETA: 0:00:02[K
  iterations:                    8585
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.975986454036116
  log_density:                   -12.854380558565406
  hamiltonian_energy:            16.720545214715717
  hamiltonian_energy_error:      -0.06713735393558551
  max_hamiltonian_energy_error:  0.07870847082723387
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▍       |  ETA: 0:00:01[K
  iterations:                    9034
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9505962852094115
  log_density:                   -14.452912278724867
  hamiltonian_energy:            16.91107659754207
  hamiltonian_energy_error:      0.1718354729505478
  max_hamiltonian_energy_error:  0.17492516583245532
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▌      |  ETA: 0:00:01[K
  iterations:                    9474
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8810573468030809
  log_density:                   -18.695229767960775
  hamiltonian_energy:            26.651963898921665
  hamiltonian_energy_error:      -0.08210903217468157
  max_hamiltonian_energy_error:  -0.5868999977782074
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▍     |  ETA: 0:00:01[K
  iterations:                    9805
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9412626102691963
  log_density:                   -16.390241617194096
  hamiltonian_energy:            21.675785135270278
  hamiltonian_energy_error:      0.07020761359021321
  max_hamiltonian_energy_error:  -0.18819510651075788
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▌    |  ETA: 0:00:01[K
  iterations:                    10239
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7139109372413969
  log_density:                   -15.434244156769518
  hamiltonian_energy:            20.12634342034747
  hamiltonian_energy_error:      0.3670884910757515
  max_hamiltonian_energy_error:  0.6176214406841325
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▌   |  ETA: 0:00:01[K
  iterations:                    10659
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8655343370032053
  log_density:                   -13.368023855861534
  hamiltonian_energy:            19.24502001079424
  hamiltonian_energy_error:      -0.07633419125310681
  max_hamiltonian_energy_error:  0.34074655940763066
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|█████████████████████████████  |  ETA: 0:00:00[K
  iterations:                    11216
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.22734561987479
  hamiltonian_energy:            16.801169610265504
  hamiltonian_energy_error:      -0.30528392620807665
  max_hamiltonian_energy_error:  -0.585793186992241
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████▏|  ETA: 0:00:00[K
  iterations:                    11640
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5575944524625434
  log_density:                   -17.890884077979187
  hamiltonian_energy:            19.809494529519153
  hamiltonian_energy_error:      0.8605940821047184
  max_hamiltonian_energy_error:  0.8605940821047184
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5764426960579696
  log_density:                   -19.841151942858893
  hamiltonian_energy:            24.264429783059875
  hamiltonian_energy_error:      0.8385482889626701
  max_hamiltonian_energy_error:  0.8385482889626701
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7440145978409872
  nom_step_size:                 0.7440145978409872
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0122088869661843, 0.9203 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.143358932 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0122088869661843, 0.9203 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.744), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0987853027649583
└   average_acceptance_rate = 0.8546611544913046
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.620215458 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⢠⢆⠀⠀⠀⠀⠀⠀⠀⢀⠜⠉⠉⠣⡀⢠⠃⠈⠢│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠃⠀⠀⠀⠀⠀⠀⡎⠀⠱⢄⠀⠀⠀⢀⠔⠃⠀⠀⠀⠀⠈⠃⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠤⠎⠀⠀⠀⡀⠀⠀⠀⡸⠀⠀⠀⠀⠉⠒⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⡜⠱⡀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⢰⠁⠀⠱⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⢀⣀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢣⠀⠀⠀⢀⠎⢀⣀⡠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠣⣣⣀⠔⡞⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠑⠤⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
