Julia Version 1.5.0-DEV.360
Commit 012b270df6 (2020-02-28 07:57 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed DataAPI ───────────────────── v1.1.0
  Installed Missings ──────────────────── v0.4.3
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Parsers ───────────────────── v0.3.12
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Tables ────────────────────── v1.0.2
  Installed StatsBase ─────────────────── v0.32.1
  Installed MappedArrays ──────────────── v0.2.2
  Installed Reexport ──────────────────── v0.2.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed MLDataPattern ─────────────── v0.5.0
  Installed Compat ────────────────────── v3.6.0
  Installed JSON ──────────────────────── v0.21.0
  Installed DataStructures ────────────── v0.17.10
  Installed SimilaritySearch ──────────── v0.3.19
  Installed OrderedCollections ────────── v1.1.0
  Installed TableTraits ───────────────── v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed MLDataUtils ───────────────── v0.5.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed DataFrames ────────────────── v0.20.2
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.6.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.10
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.12
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.2
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_LXyhDN/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.6.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.10
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.12
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.2
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9326678744951884
[ Info: 0.8321307849884033
[ Info: 0.5567020623385907
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3276126202692588
mean(cdnet.distances) = 0.4044984113673369
mean(crand.distances) = 0.34094751516977945
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.630859375,"f1":0.7600021506271514,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.6171875,"distances_sum":1575.024785489912}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4482421875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4482421875,"f1":null,"seconds":4.423782229423523e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":6.3828125,"distances_sum":1090.1999971828368}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.630859375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.630859375,"f1":0.7600021506271514,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.6171875,"distances_sum":1575.024785489912}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9502148892773896,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8671875,"distances_sum":2477.860288668201}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9502148892773896,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8671875,"distances_sum":2477.860288668201}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9732886904761909,"seconds":6.921589374542236e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.96875,"distances_sum":2636.7579618025006}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9542467948717953,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.90625,"distances_sum":2487.2235331899788}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9732886904761909,"seconds":6.921589374542236e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.96875,"distances_sum":2636.7579618025006}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9732886904761909,"seconds":6.921589374542236e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.96875,"distances_sum":2636.7579618025006}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.53515625,"f1":null,"seconds":4.3977051973342896e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":6.234375,"distances_sum":1295.236780306374}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.17578125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.17578125,"f1":null,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":4.8359375,"distances_sum":451.4820928856425}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.53515625,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.53515625,"f1":null,"seconds":4.3977051973342896e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":6.234375,"distances_sum":1295.236780306374}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.8391114094239104,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":7.9609375,"distances_sum":1815.1110171568089}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.734375,"f1":0.8391114094239104,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":7.9609375,"distances_sum":1815.1110171568089}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.942130265567766,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.6328125,"distances_sum":2491.7075714340813}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.942130265567766,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.6328125,"distances_sum":2491.7075714340813}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.942130265567766,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.6328125,"distances_sum":2491.7075714340813}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8839405386280395,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.4453125,"distances_sum":1998.290255564504}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6123046875, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.6123046875,"f1":null,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":7.625,"distances_sum":1424.6754151016205}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8017578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8017578125,"f1":0.8839405386280395,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.4453125,"distances_sum":1998.290255564504}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9179429945054954,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.546875,"distances_sum":2153.0163535908164}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.920066391941393,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.5703125,"distances_sum":2173.562332362121}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8603515625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8603515625,"f1":0.920066391941393,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.5703125,"distances_sum":2173.562332362121}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9680689102564107,"seconds":6.366521120071411e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.9140625,"distances_sum":2511.7306192462493}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.944167811355312,"seconds":6.429851055145264e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.7578125,"distances_sum":2345.847919448448}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":11,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9650698260073263,"seconds":6.463378667831421e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.890625,"distances_sum":2485.77146618845}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9626201923076928,"seconds":6.292015314102173e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.859375,"distances_sum":2484.5898132016164}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9680288461538465,"seconds":6.508082151412964e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.9296875,"distances_sum":2531.737686348813}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9236549908424916,"seconds":6.277114152908325e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.671875,"distances_sum":2225.8993284674275}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9680689102564107,"seconds":6.366521120071411e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.9140625,"distances_sum":2511.7306192462493}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9680689102564107,"seconds":6.366521120071411e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.9140625,"distances_sum":2511.7306192462493}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.875138403263404,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.3828125,"distances_sum":1922.0207717571873}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.791015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.791015625,"f1":0.875138403263404,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.3828125,"distances_sum":1922.0207717571873}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.958373397435898,"seconds":6.485730409622192e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8828125,"distances_sum":2449.2795253948216}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.965127060439561,"seconds":6.506219506263733e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8984375,"distances_sum":2479.9855641568256}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.965127060439561,"seconds":6.506219506263733e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8984375,"distances_sum":2479.9855641568256}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9800995879120882,"seconds":6.59748911857605e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9609375,"distances_sum":2595.2430833909007}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9797619047619052,"seconds":6.6980719566345215e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.953125,"distances_sum":2610.2094079530757}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9800995879120882,"seconds":6.59748911857605e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9609375,"distances_sum":2595.2430833909007}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9800995879120882,"seconds":6.59748911857605e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9609375,"distances_sum":2595.2430833909007}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2109375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2109375,"f1":null,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.078125,"distances_sum":480.35459786473405}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.232421875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.232421875,"f1":null,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.4375,"distances_sum":505.19791282638573}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.232421875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.232421875,"f1":null,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.4375,"distances_sum":505.19791282638573}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8139870546120553,"seconds":5.114823579788208e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.203125,"distances_sum":1637.0090618886545}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.70703125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.70703125,"f1":0.8152678918303926,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.171875,"distances_sum":1654.2946672180015}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.70703125,"state":{"ssize":6,"bsize":4},"perf":{"precision":1.0,"recall":0.70703125,"f1":0.8152678918303926,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.171875,"distances_sum":1654.2946672180015}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8913607226107235,"seconds":0.0001608189195394516,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.46875,"distances_sum":1947.542744889369}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8752903346653356,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3203125,"distances_sum":1880.1596578385165}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9380494505494512,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.734375,"distances_sum":2222.9826360285733}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9380494505494512,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.734375,"distances_sum":2222.9826360285733}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.890625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9380494505494512,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.734375,"distances_sum":2222.9826360285733}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1513671875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1513671875,"f1":null,"seconds":2.462416887283325e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":4.359375,"distances_sum":381.0495978569452}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.63671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.63671875,"f1":0.7656824078699085,"seconds":4.410743713378906e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.46875,"distances_sum":1539.2253481678522}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.31640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.31640625,"f1":0.46832958707958655,"seconds":2.808868885040283e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":4.6640625,"distances_sum":768.1984619111975}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.63671875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.63671875,"f1":0.7656824078699085,"seconds":4.410743713378906e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.46875,"distances_sum":1539.2253481678522}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9064100829725834,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.59375,"distances_sum":2094.237330265419}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8452453796203806,"seconds":4.86522912979126e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.15625,"distances_sum":1824.7975433727497}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9030167748917757,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.609375,"distances_sum":2088.4864804630092}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8439206626706633,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.9453125,"distances_sum":1836.2972228075994}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9064100829725834,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.59375,"distances_sum":2094.237330265419}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9495077838827841,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.828125,"distances_sum":2365.153978837123}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9252206127206134,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7109375,"distances_sum":2250.582216591807}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9148325632700639,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.65625,"distances_sum":2147.232724547625}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684924450549455,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8984375,"distances_sum":2512.855776802684}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9629693223443226,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.796875,"distances_sum":2501.494421936375}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.936243964368965,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.71875,"distances_sum":2319.5003699491253}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9497252747252755,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.828125,"distances_sum":2384.0401120405268}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684924450549455,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8984375,"distances_sum":2512.855776802684}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684924450549455,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8984375,"distances_sum":2512.855776802684}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8706621503496513,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.2578125,"distances_sum":1812.8458926615383}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7255859375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.7255859375,"f1":0.8315913253413261,"seconds":4.7478824853897095e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.9375,"distances_sum":1654.171819929097}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7822265625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7822265625,"f1":0.8706621503496513,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.2578125,"distances_sum":1812.8458926615383}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9356143856143861,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8125,"distances_sum":2198.0678044020906}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9356143856143861,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8125,"distances_sum":2198.0678044020906}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9528903388278394,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.828125,"distances_sum":2337.193327581565}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9592490842490846,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2380.0520998660054}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9592490842490846,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2380.0520998660054}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9592490842490846,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2380.0520998660054}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3671875,"f1":null,"seconds":3.3620744943618774e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":5.6015625,"distances_sum":605.1885293536045}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2900390625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2900390625,"f1":null,"seconds":3.3155083656311035e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":5.515625,"distances_sum":490.6400687906285}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7725918179043186,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.3984375,"distances_sum":1133.9165989107387}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.646484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.646484375,"f1":0.7725918179043186,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.3984375,"distances_sum":1133.9165989107387}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9055975274725283,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.390625,"distances_sum":1573.9082274543546}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9492819680319685,"seconds":8.8568776845932e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.6953125,"distances_sum":1820.5803128101725}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9492819680319685,"seconds":8.8568776845932e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.6953125,"distances_sum":1820.5803128101725}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9543383699633703,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.765625,"distances_sum":1811.4136303725227}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9543383699633703,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.765625,"distances_sum":1811.4136303725227}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9543383699633703,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.765625,"distances_sum":1811.4136303725227}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.855744776057277,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.1875,"distances_sum":1503.598055937697}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3505859375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3505859375,"f1":null,"seconds":4.0084123611450195e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":5.65625,"distances_sum":641.7564313194341}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.855744776057277,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.1875,"distances_sum":1503.598055937697}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8614161879786889,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.21875,"distances_sum":1499.431534938593}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8614161879786889,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.21875,"distances_sum":1499.431534938593}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.767578125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8614161879786889,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.21875,"distances_sum":1499.431534938593}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8563897907647916,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.5703125,"distances_sum":1478.426798898382}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8563897907647916,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.5703125,"distances_sum":1478.426798898382}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9413836163836172,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8359375,"distances_sum":1889.1594387583316}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9413836163836172,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8359375,"distances_sum":1889.1594387583316}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9590086996337001,"seconds":6.4820051193237305e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8359375,"distances_sum":2008.2581770823833}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9582417582417584,"seconds":6.748363375663757e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.828125,"distances_sum":1991.8952494083278}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9722298534798537,"seconds":6.416812539100647e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8671875,"distances_sum":2076.9827134248885}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9486320970695975,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.859375,"distances_sum":1922.1128126563444}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9722298534798537,"seconds":6.416812539100647e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8671875,"distances_sum":2076.9827134248885}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9722298534798537,"seconds":6.416812539100647e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8671875,"distances_sum":2076.9827134248885}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8515812312687323,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.4140625,"distances_sum":1590.7735812944989}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":4.353001713752747e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.7421875,"distances_sum":779.1287784945855}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8515812312687323,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.4140625,"distances_sum":1590.7735812944989}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9245509698634703,"seconds":6.0014426708221436e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.7421875,"distances_sum":1881.1518002714847}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9395604395604399,"seconds":6.44288957118988e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.7578125,"distances_sum":1973.8134117149687}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9395604395604399,"seconds":6.44288957118988e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.7578125,"distances_sum":1973.8134117149687}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9719322344322349,"seconds":6.746500730514526e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9140625,"distances_sum":2139.278543800706}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9561469780219787,"seconds":6.899237632751465e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8203125,"distances_sum":2076.9599571835315}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681032509157514,"seconds":6.398186087608337e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9296875,"distances_sum":2114.550773034772}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9693681318681322,"seconds":6.640329957008362e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9296875,"distances_sum":2125.0871268459455}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9719322344322349,"seconds":6.746500730514526e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9140625,"distances_sum":2139.278543800706}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9719322344322349,"seconds":6.746500730514526e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9140625,"distances_sum":2139.278543800706}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.27734375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.27734375,"f1":null,"seconds":3.984197974205017e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.9453125,"distances_sum":616.8980357984765}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.27734375,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.27734375,"f1":null,"seconds":3.984197974205017e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.9453125,"distances_sum":616.8980357984765}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":4.325062036514282e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.1328125,"distances_sum":829.5794035997066}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.439453125, conf: {"ssize":7,"bsize":2}, perf: {"precision":null,"recall":0.439453125,"f1":null,"seconds":4.2710453271865845e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.609375,"distances_sum":877.3724151404075}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.439453125,"state":{"ssize":7,"bsize":2},"perf":{"precision":null,"recall":0.439453125,"f1":null,"seconds":4.2710453271865845e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.609375,"distances_sum":877.3724151404075}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7213206931956937,"seconds":4.7031790018081665e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.328125,"distances_sum":1187.5975483881518}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5400390625,"f1":0.6857982295482301,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.1015625,"distances_sum":1133.7484728474524}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8943827006327015,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.71875,"distances_sum":1749.095408395657}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.58203125,"f1":0.7217242826617832,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.2421875,"distances_sum":1203.0107287816434}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.786363636363637,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.8125,"distances_sum":1384.104115072335}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8173828125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8943827006327015,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.71875,"distances_sum":1749.095408395657}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8173828125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8943827006327015,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.71875,"distances_sum":1749.095408395657}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":5.7578125,"distances_sum":817.0058285783899}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":4.349276423454285e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":5.6953125,"distances_sum":769.485568212274}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.404296875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.404296875,"f1":null,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":5.7578125,"distances_sum":817.0058285783899}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6376953125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6376953125,"f1":0.7660240800865806,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.1484375,"distances_sum":1223.3424823011342}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8983839077589084,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.4609375,"distances_sum":1761.525561242844}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8956907675657683,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.3515625,"distances_sum":1766.5704188695183}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.828125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.828125,"f1":0.8983839077589084,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.4609375,"distances_sum":1761.525561242844}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9629864926739928,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.765625,"distances_sum":2141.506403058217}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9148611804861811,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.515625,"distances_sum":1835.6777710794881}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9554201007326013,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.796875,"distances_sum":2052.896672416805}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9629864926739928,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.765625,"distances_sum":2141.506403058217}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9629864926739928,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.765625,"distances_sum":2141.506403058217}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5654296875,"f1":null,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":7.4140625,"distances_sum":1077.4949052008005}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7950336122211131,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":7.9921875,"distances_sum":1295.4595475394892}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6748046875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6748046875,"f1":0.7950336122211131,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":7.9921875,"distances_sum":1295.4595475394892}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9216491841491848,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.7421875,"distances_sum":1821.4174104683573}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.857146499334,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.28125,"distances_sum":1546.3279934230097}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9197916666666672,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.6953125,"distances_sum":1818.1575766093}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.865234375,"f1":0.9216491841491848,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.7421875,"distances_sum":1821.4174104683573}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9554544413919419,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.796875,"distances_sum":2031.4299024495165}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":11,"bsize":11}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9631353021978025,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.8671875,"distances_sum":2044.6106593140987}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9550995879120883,"seconds":6.241723895072937e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.8046875,"distances_sum":2018.9505277477049}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9309669497169503,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.6796875,"distances_sum":1914.2475953786577}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9333078379953385,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.7578125,"distances_sum":1880.8049107910049}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9547676282051285,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.859375,"distances_sum":2005.6854974684209}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":11,"bsize":11},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9631353021978025,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.8671875,"distances_sum":2044.6106593140987}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":11,"bsize":11},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9631353021978025,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":1.7583370208740234e-6,"evaluations":8.8671875,"distances_sum":2044.6106593140987}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7870565198690207,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.3671875,"distances_sum":1467.654607119439}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.251953125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.251953125,"f1":null,"seconds":3.7960708141326904e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.6875,"distances_sum":622.8859236873932}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8457454004329011,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.734375,"distances_sum":1720.6178900244704}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8457454004329011,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.734375,"distances_sum":1720.6178900244704}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8533154345654353,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.7734375,"distances_sum":1709.688334897004}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8884391650016659,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.3671875,"distances_sum":1937.9087043973161}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9377518315018321,"seconds":6.282702088356018e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6875,"distances_sum":2138.1809147681543}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8694258866133875,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0,"distances_sum":1751.9111446598533}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9377518315018321,"seconds":6.282702088356018e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6875,"distances_sum":2138.1809147681543}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.962505723443224,"seconds":6.4373016357421875e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8359375,"distances_sum":2332.498245593216}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9458047161172166,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7265625,"distances_sum":2250.8648136152524}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9633070054945059,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.859375,"distances_sum":2313.5716933964495}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591575091575096,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8046875,"distances_sum":2293.720803551033}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9633070054945059,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.859375,"distances_sum":2313.5716933964495}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9633070054945059,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.859375,"distances_sum":2313.5716933964495}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2587890625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2587890625,"f1":null,"seconds":4.202127456665039e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":5.84375,"distances_sum":529.3103833382338}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2587890625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2587890625,"f1":null,"seconds":4.202127456665039e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":5.84375,"distances_sum":529.3103833382338}}, n: 9
mean(cfft.distances) = 0.33152900124325463
mean(cdnet.distances) = 0.3944757926050381
mean(crand.distances) = 0.40758703814189334
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9066666666666666
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8888888888888888
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9199999999999999
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9288888888888889
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9466666666666667
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8288888888888889
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9355555555555556
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9244444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9333333333333332
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666666
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.931111111111111
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8666666666666667
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9088888888888889
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9066666666666666
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9133333333333334
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8622222222222223
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9133333333333334
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.5285758327444394] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 9, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 13, 5]]
** centroid: 12, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.2784908825976287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2784908825976287, 0.17743034606908556] ***
*** starting iteration: 2; err: [Inf, 0.2784908825976287, 0.17743034606908556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2784908825976287, 0.17743034606908556, 0.1666108684728968] ***
*** starting iteration: 3; err: [Inf, 0.2784908825976287, 0.17743034606908556, 0.1666108684728968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2784908825976287, 0.17743034606908556, 0.1666108684728968, 0.16142173327628645] ***
*** starting iteration: 4; err: [Inf, 0.2784908825976287, 0.17743034606908556, 0.1666108684728968, 0.16142173327628645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2784908825976287, 0.17743034606908556, 0.1666108684728968, 0.16142173327628645, 0.15900640098822746] ***
*** starting iteration: 5; err: [Inf, 0.2784908825976287, 0.17743034606908556, 0.1666108684728968, 0.16142173327628645, 0.15900640098822746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2784908825976287, 0.17743034606908556, 0.1666108684728968, 0.16142173327628645, 0.15900640098822746, 0.15717010589053593] ***
*** starting iteration: 6; err: [Inf, 0.2784908825976287, 0.17743034606908556, 0.1666108684728968, 0.16142173327628645, 0.15900640098822746, 0.15717010589053593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2784908825976287, 0.17743034606908556, 0.1666108684728968, 0.16142173327628645, 0.15900640098822746, 0.15717010589053593, 0.15592442205463825] ***
*** starting iteration: 7; err: [Inf, 0.2784908825976287, 0.17743034606908556, 0.1666108684728968, 0.16142173327628645, 0.15900640098822746, 0.15717010589053593, 0.15592442205463825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2784908825976287, 0.17743034606908556, 0.1666108684728968, 0.16142173327628645, 0.15900640098822746, 0.15717010589053593, 0.15592442205463825, 0.1554683535604517] ***
*** finished computation of 7 references, err: [Inf, 0.2784908825976287, 0.17743034606908556, 0.1666108684728968, 0.16142173327628645, 0.15900640098822746, 0.15717010589053593, 0.15592442205463825, 0.1554683535604517] ***
*** center 1: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 63, 27]]
** centroid: 2, normalized-entropy: 0.8812908992306927, [(2, 63), (3, 27)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 109, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 33, 0]]
** centroid: 4, normalized-entropy: 0.9852281360342514, [(1, 44), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [38, 9, 0]]
** centroid: 5, normalized-entropy: 0.7045767128725937, [(1, 38), (2, 9)]
*** center 6: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [122, 39, 0]]
** centroid: 7, normalized-entropy: 0.7987389792431896, [(1, 122), (2, 39)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21694299465288286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21694299465288286, 0.18472083639618808] ***
*** starting iteration: 2; err: [Inf, 0.21694299465288286, 0.18472083639618808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21694299465288286, 0.18472083639618808, 0.16983563891602219] ***
*** starting iteration: 3; err: [Inf, 0.21694299465288286, 0.18472083639618808, 0.16983563891602219] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21694299465288286, 0.18472083639618808, 0.16983563891602219, 0.1618727021061744] ***
*** starting iteration: 4; err: [Inf, 0.21694299465288286, 0.18472083639618808, 0.16983563891602219, 0.1618727021061744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21694299465288286, 0.18472083639618808, 0.16983563891602219, 0.1618727021061744, 0.15846473714015608] ***
*** starting iteration: 5; err: [Inf, 0.21694299465288286, 0.18472083639618808, 0.16983563891602219, 0.1618727021061744, 0.15846473714015608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21694299465288286, 0.18472083639618808, 0.16983563891602219, 0.1618727021061744, 0.15846473714015608, 0.15608272278846158] ***
*** starting iteration: 6; err: [Inf, 0.21694299465288286, 0.18472083639618808, 0.16983563891602219, 0.1618727021061744, 0.15846473714015608, 0.15608272278846158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21694299465288286, 0.18472083639618808, 0.16983563891602219, 0.1618727021061744, 0.15846473714015608, 0.15608272278846158, 0.154974192174953] ***
*** starting iteration: 7; err: [Inf, 0.21694299465288286, 0.18472083639618808, 0.16983563891602219, 0.1618727021061744, 0.15846473714015608, 0.15608272278846158, 0.154974192174953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21694299465288286, 0.18472083639618808, 0.16983563891602219, 0.1618727021061744, 0.15846473714015608, 0.15608272278846158, 0.154974192174953, 0.15395221646702004] ***
*** starting iteration: 8; err: [Inf, 0.21694299465288286, 0.18472083639618808, 0.16983563891602219, 0.1618727021061744, 0.15846473714015608, 0.15608272278846158, 0.154974192174953, 0.15395221646702004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21694299465288286, 0.18472083639618808, 0.16983563891602219, 0.1618727021061744, 0.15846473714015608, 0.15608272278846158, 0.154974192174953, 0.15395221646702004, 0.15322757554010139] ***
*** finished computation of 7 references, err: [Inf, 0.21694299465288286, 0.18472083639618808, 0.16983563891602219, 0.1618727021061744, 0.15846473714015608, 0.15608272278846158, 0.154974192174953, 0.15395221646702004, 0.15322757554010139] ***
*** center 1: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 73, 29]]
** centroid: 2, normalized-entropy: 0.8612621884720756, [(2, 73), (3, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [106, 40, 0]]
** centroid: 5, normalized-entropy: 0.847107490529376, [(1, 106), (2, 40)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [19, 73, 0]]
** centroid: 6, normalized-entropy: 0.7347813522127804, [(1, 19), (2, 73)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [16, 62, 0]]
** centroid: 7, normalized-entropy: 0.7320666900931937, [(1, 16), (2, 62)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21657392725130653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21657392725130653, 0.15858896988593432] ***
*** starting iteration: 2; err: [Inf, 0.21657392725130653, 0.15858896988593432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21657392725130653, 0.15858896988593432, 0.1538665530465912] ***
*** starting iteration: 3; err: [Inf, 0.21657392725130653, 0.15858896988593432, 0.1538665530465912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21657392725130653, 0.15858896988593432, 0.1538665530465912, 0.15145282318321304] ***
*** starting iteration: 4; err: [Inf, 0.21657392725130653, 0.15858896988593432, 0.1538665530465912, 0.15145282318321304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21657392725130653, 0.15858896988593432, 0.1538665530465912, 0.15145282318321304, 0.15046928021107345] ***
*** finished computation of 7 references, err: [Inf, 0.21657392725130653, 0.15858896988593432, 0.1538665530465912, 0.15145282318321304, 0.15046928021107345] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [81, 31, 0]]
** centroid: 1, normalized-entropy: 0.8510340662036064, [(1, 81), (2, 31)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 84, 24]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(2, 84), (3, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [5, 121, 0]]
** centroid: 4, normalized-entropy: 0.24083474743116462, [(1, 5), (2, 121)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [51, 22, 0]]
** centroid: 5, normalized-entropy: 0.8829589691462253, [(1, 51), (2, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [109, 3, 0]]
** centroid: 7, normalized-entropy: 0.17800689613931453, [(1, 109), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19923410364692365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19923410364692365, 0.15985067423528154] ***
*** starting iteration: 2; err: [Inf, 0.19923410364692365, 0.15985067423528154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19923410364692365, 0.15985067423528154, 0.15303610724693462] ***
*** starting iteration: 3; err: [Inf, 0.19923410364692365, 0.15985067423528154, 0.15303610724693462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19923410364692365, 0.15985067423528154, 0.15303610724693462, 0.15053051867516706] ***
*** starting iteration: 4; err: [Inf, 0.19923410364692365, 0.15985067423528154, 0.15303610724693462, 0.15053051867516706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19923410364692365, 0.15985067423528154, 0.15303610724693462, 0.15053051867516706, 0.1496966852884818] ***
*** finished computation of 7 references, err: [Inf, 0.19923410364692365, 0.15985067423528154, 0.15303610724693462, 0.15053051867516706, 0.1496966852884818] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [38, 53, 0]]
** centroid: 1, normalized-entropy: 0.9803107984107206, [(1, 38), (2, 53)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [44, 2, 0]]
** centroid: 2, normalized-entropy: 0.2580186686648155, [(1, 44), (2, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [113, 19, 0]]
** centroid: 4, normalized-entropy: 0.5944634715679662, [(1, 113), (2, 19)]
*** center 5: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [10, 102, 0]]
** centroid: 6, normalized-entropy: 0.4340811200043348, [(1, 10), (2, 102)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 77, 27]]
** centroid: 7, normalized-entropy: 0.826165427834159, [(2, 77), (3, 27)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.20250585908681082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20250585908681082, 0.1879222650036238] ***
*** starting iteration: 2; err: [Inf, 0.20250585908681082, 0.1879222650036238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20250585908681082, 0.1879222650036238, 0.17812155909219135] ***
*** starting iteration: 3; err: [Inf, 0.20250585908681082, 0.1879222650036238, 0.17812155909219135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20250585908681082, 0.1879222650036238, 0.17812155909219135, 0.1680591604358208] ***
*** starting iteration: 4; err: [Inf, 0.20250585908681082, 0.1879222650036238, 0.17812155909219135, 0.1680591604358208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20250585908681082, 0.1879222650036238, 0.17812155909219135, 0.1680591604358208, 0.16038095629515722] ***
*** starting iteration: 5; err: [Inf, 0.20250585908681082, 0.1879222650036238, 0.17812155909219135, 0.1680591604358208, 0.16038095629515722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20250585908681082, 0.1879222650036238, 0.17812155909219135, 0.1680591604358208, 0.16038095629515722, 0.15516293454689087] ***
*** starting iteration: 6; err: [Inf, 0.20250585908681082, 0.1879222650036238, 0.17812155909219135, 0.1680591604358208, 0.16038095629515722, 0.15516293454689087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20250585908681082, 0.1879222650036238, 0.17812155909219135, 0.1680591604358208, 0.16038095629515722, 0.15516293454689087, 0.15339600091808472] ***
*** starting iteration: 7; err: [Inf, 0.20250585908681082, 0.1879222650036238, 0.17812155909219135, 0.1680591604358208, 0.16038095629515722, 0.15516293454689087, 0.15339600091808472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20250585908681082, 0.1879222650036238, 0.17812155909219135, 0.1680591604358208, 0.16038095629515722, 0.15516293454689087, 0.15339600091808472, 0.1525666581402565] ***
*** finished computation of 7 references, err: [Inf, 0.20250585908681082, 0.1879222650036238, 0.17812155909219135, 0.1680591604358208, 0.16038095629515722, 0.15516293454689087, 0.15339600091808472, 0.1525666581402565] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 104, 29]]
** centroid: 1, normalized-entropy: 0.7565818374156769, [(2, 104), (3, 29)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [37, 60, 0]]
** centroid: 2, normalized-entropy: 0.9590550044058676, [(1, 37), (2, 60)]
*** center 3: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [44, 45, 0]]
** centroid: 4, normalized-entropy: 0.9999089303498087, [(1, 44), (2, 45)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 30, 0]]
** centroid: 5, normalized-entropy: 0.9740248644357521, [(1, 44), (2, 30)]
*** center 6: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [84, 9, 0]]
** centroid: 7, normalized-entropy: 0.45868581620054033, [(1, 84), (2, 9)]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22795727852497366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22795727852497366, 0.15878665002518105] ***
*** starting iteration: 2; err: [Inf, 0.22795727852497366, 0.15878665002518105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22795727852497366, 0.15878665002518105, 0.1562185082263474] ***
*** starting iteration: 3; err: [Inf, 0.22795727852497366, 0.15878665002518105, 0.1562185082263474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22795727852497366, 0.15878665002518105, 0.1562185082263474, 0.15455617808082003] ***
*** starting iteration: 4; err: [Inf, 0.22795727852497366, 0.15878665002518105, 0.1562185082263474, 0.15455617808082003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22795727852497366, 0.15878665002518105, 0.1562185082263474, 0.15455617808082003, 0.15299405693879414] ***
*** starting iteration: 5; err: [Inf, 0.22795727852497366, 0.15878665002518105, 0.1562185082263474, 0.15455617808082003, 0.15299405693879414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22795727852497366, 0.15878665002518105, 0.1562185082263474, 0.15455617808082003, 0.15299405693879414, 0.15166401132107662] ***
*** starting iteration: 6; err: [Inf, 0.22795727852497366, 0.15878665002518105, 0.1562185082263474, 0.15455617808082003, 0.15299405693879414, 0.15166401132107662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22795727852497366, 0.15878665002518105, 0.1562185082263474, 0.15455617808082003, 0.15299405693879414, 0.15166401132107662, 0.1511189664736379] ***
*** finished computation of 7 references, err: [Inf, 0.22795727852497366, 0.15878665002518105, 0.1562185082263474, 0.15455617808082003, 0.15299405693879414, 0.15166401132107662, 0.1511189664736379] ***
*** center 1: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [97, 11, 0]]
** centroid: 2, normalized-entropy: 0.4748384883008607, [(1, 97), (2, 11)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [18, 113, 0]]
** centroid: 3, normalized-entropy: 0.577401071927696, [(1, 18), (2, 113)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [83, 15, 0]]
** centroid: 4, normalized-entropy: 0.6174482957894681, [(1, 83), (2, 15)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [54, 35, 0]]
** centroid: 5, normalized-entropy: 0.9668701645630143, [(1, 54), (2, 35)]
*** center 6: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 87, 24]]
** centroid: 7, normalized-entropy: 0.7531979910695015, [(2, 87), (3, 24)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.29591250658040874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29591250658040874, 0.2375800609840332] ***
*** finished computation of 3 references, err: [Inf, 0.29591250658040874, 0.2375800609840332] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [241, 21, 0]]
** centroid: 1, normalized-entropy: 0.40271691027876805, [(1, 241), (2, 21)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 184, 27]]
** centroid: 2, normalized-entropy: 0.5518225893095359, [(2, 184), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [145, 48, 0]]
** centroid: 3, normalized-entropy: 0.8092186015852774, [(1, 145), (2, 48)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.292941199519254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.292941199519254, 0.2646169030404967] ***
*** finished computation of 3 references, err: [Inf, 0.292941199519254, 0.2646169030404967] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [204, 24, 0]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(1, 204), (2, 24)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [62, 157, 29]]
** centroid: 2, normalized-entropy: 0.8073448546352671, [(1, 62), (2, 157), (3, 29)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [124, 67, 0]]
** centroid: 3, normalized-entropy: 0.934767475948611, [(1, 124), (2, 67)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5872505693912864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5872505693912864, 0.2783023799717918] ***
*** finished computation of 3 references, err: [Inf, 0.5872505693912864, 0.2783023799717918] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [279, 90, 0]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(1, 279), (2, 90)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [103, 114, 0]]
** centroid: 2, normalized-entropy: 0.9981456291511519, [(1, 103), (2, 114)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 57, 24]]
** centroid: 3, normalized-entropy: 0.876716288999464, [(2, 57), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.33333830334324466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33333830334324466, 0.3057489666204016] ***
*** finished computation of 3 references, err: [Inf, 0.33333830334324466, 0.3057489666204016] ***
*** center 1: selecting labels [1] (freq >= 1) [from [167, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [123, 63, 0]]
** centroid: 2, normalized-entropy: 0.9235785996175947, [(1, 123), (2, 63)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [96, 190, 27]]
** centroid: 3, normalized-entropy: 0.7981663945682412, [(1, 96), (2, 190), (3, 27)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.350794133027901] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.350794133027901, 0.33912211005342774] ***
*** finished computation of 3 references, err: [Inf, 0.350794133027901, 0.33912211005342774] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [155, 38, 0]]
** centroid: 1, normalized-entropy: 0.7156667350485826, [(1, 155), (2, 38)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [159, 10, 0]]
** centroid: 2, normalized-entropy: 0.3241476561692486, [(1, 159), (2, 10)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [76, 200, 29]]
** centroid: 3, normalized-entropy: 0.7707019574827316, [(1, 76), (2, 200), (3, 29)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4320131552641628] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4320131552641628, 0.3118175405721324] ***
*** finished computation of 3 references, err: [Inf, 0.4320131552641628, 0.3118175405721324] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [228, 34, 0]]
** centroid: 1, normalized-entropy: 0.5568097960715243, [(1, 228), (2, 34)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 178, 24]]
** centroid: 2, normalized-entropy: 0.5259359840917625, [(2, 178), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [154, 49, 0]]
** centroid: 3, normalized-entropy: 0.7973265101474423, [(1, 154), (2, 49)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2587741410944264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2587741410944264, 0.23019998552775509] ***
*** starting iteration: 2; err: [Inf, 0.2587741410944264, 0.23019998552775509] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2587741410944264, 0.23019998552775509, 0.2177077436528809] ***
*** starting iteration: 3; err: [Inf, 0.2587741410944264, 0.23019998552775509, 0.2177077436528809] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2587741410944264, 0.23019998552775509, 0.2177077436528809, 0.20968160617330275] ***
*** starting iteration: 4; err: [Inf, 0.2587741410944264, 0.23019998552775509, 0.2177077436528809, 0.20968160617330275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2587741410944264, 0.23019998552775509, 0.2177077436528809, 0.20968160617330275, 0.20477025524514528] ***
*** starting iteration: 5; err: [Inf, 0.2587741410944264, 0.23019998552775509, 0.2177077436528809, 0.20968160617330275, 0.20477025524514528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2587741410944264, 0.23019998552775509, 0.2177077436528809, 0.20968160617330275, 0.20477025524514528, 0.2006821881493067] ***
*** starting iteration: 6; err: [Inf, 0.2587741410944264, 0.23019998552775509, 0.2177077436528809, 0.20968160617330275, 0.20477025524514528, 0.2006821881493067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2587741410944264, 0.23019998552775509, 0.2177077436528809, 0.20968160617330275, 0.20477025524514528, 0.2006821881493067, 0.19877507731838673] ***
*** starting iteration: 7; err: [Inf, 0.2587741410944264, 0.23019998552775509, 0.2177077436528809, 0.20968160617330275, 0.20477025524514528, 0.2006821881493067, 0.19877507731838673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2587741410944264, 0.23019998552775509, 0.2177077436528809, 0.20968160617330275, 0.20477025524514528, 0.2006821881493067, 0.19877507731838673, 0.1976446584202685] ***
*** starting iteration: 8; err: [Inf, 0.2587741410944264, 0.23019998552775509, 0.2177077436528809, 0.20968160617330275, 0.20477025524514528, 0.2006821881493067, 0.19877507731838673, 0.1976446584202685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2587741410944264, 0.23019998552775509, 0.2177077436528809, 0.20968160617330275, 0.20477025524514528, 0.2006821881493067, 0.19877507731838673, 0.1976446584202685, 0.1967542056139704] ***
*** finished computation of 7 references, err: [Inf, 0.2587741410944264, 0.23019998552775509, 0.2177077436528809, 0.20968160617330275, 0.20477025524514528, 0.2006821881493067, 0.19877507731838673, 0.1976446584202685, 0.1967542056139704] ***
*** center 1: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [44, 39, 0]]
** centroid: 2, normalized-entropy: 0.9973806632063373, [(1, 44), (2, 39)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 56, 25]]
** centroid: 3, normalized-entropy: 0.8915996278279094, [(2, 56), (3, 25)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [30, 34, 0]]
** centroid: 4, normalized-entropy: 0.9971803988942641, [(1, 30), (2, 34)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 96, 2]]
** centroid: 5, normalized-entropy: 0.14372616993938164, [(2, 96), (3, 2)]
*** center 6: selecting labels [1] (freq >= 1) [from [119, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [97, 28, 0]]
** centroid: 7, normalized-entropy: 0.7674044165839727, [(1, 97), (2, 28)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2237208056598036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2237208056598036, 0.20776955814643958] ***
*** starting iteration: 2; err: [Inf, 0.2237208056598036, 0.20776955814643958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2237208056598036, 0.20776955814643958, 0.1996973844599733] ***
*** starting iteration: 3; err: [Inf, 0.2237208056598036, 0.20776955814643958, 0.1996973844599733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2237208056598036, 0.20776955814643958, 0.1996973844599733, 0.1966438814034236] ***
*** starting iteration: 4; err: [Inf, 0.2237208056598036, 0.20776955814643958, 0.1996973844599733, 0.1966438814034236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2237208056598036, 0.20776955814643958, 0.1996973844599733, 0.1966438814034236, 0.19455398540145186] ***
*** starting iteration: 5; err: [Inf, 0.2237208056598036, 0.20776955814643958, 0.1996973844599733, 0.1966438814034236, 0.19455398540145186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2237208056598036, 0.20776955814643958, 0.1996973844599733, 0.1966438814034236, 0.19455398540145186, 0.19271604254188343] ***
*** starting iteration: 6; err: [Inf, 0.2237208056598036, 0.20776955814643958, 0.1996973844599733, 0.1966438814034236, 0.19455398540145186, 0.19271604254188343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2237208056598036, 0.20776955814643958, 0.1996973844599733, 0.1966438814034236, 0.19455398540145186, 0.19271604254188343, 0.19084012303976106] ***
*** starting iteration: 7; err: [Inf, 0.2237208056598036, 0.20776955814643958, 0.1996973844599733, 0.1966438814034236, 0.19455398540145186, 0.19271604254188343, 0.19084012303976106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2237208056598036, 0.20776955814643958, 0.1996973844599733, 0.1966438814034236, 0.19455398540145186, 0.19271604254188343, 0.19084012303976106, 0.18998240105070544] ***
*** finished computation of 7 references, err: [Inf, 0.2237208056598036, 0.20776955814643958, 0.1996973844599733, 0.1966438814034236, 0.19455398540145186, 0.19271604254188343, 0.19084012303976106, 0.18998240105070544] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 84, 29]]
** centroid: 1, normalized-entropy: 0.8216292954053165, [(2, 84), (3, 29)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [87, 7, 0]]
** centroid: 2, normalized-entropy: 0.3823806751537801, [(1, 87), (2, 7)]
*** center 3: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [47, 21, 0]]
** centroid: 5, normalized-entropy: 0.8918107543797084, [(1, 47), (2, 21)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [56, 50, 0]]
** centroid: 6, normalized-entropy: 0.9976875760352552, [(1, 56), (2, 50)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [8, 86, 0]]
** centroid: 7, normalized-entropy: 0.4199210973757179, [(1, 8), (2, 86)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.32247626026352305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32247626026352305, 0.22913794027644208] ***
*** starting iteration: 2; err: [Inf, 0.32247626026352305, 0.22913794027644208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32247626026352305, 0.22913794027644208, 0.207991532538075] ***
*** starting iteration: 3; err: [Inf, 0.32247626026352305, 0.22913794027644208, 0.207991532538075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32247626026352305, 0.22913794027644208, 0.207991532538075, 0.1997188795399831] ***
*** starting iteration: 4; err: [Inf, 0.32247626026352305, 0.22913794027644208, 0.207991532538075, 0.1997188795399831] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32247626026352305, 0.22913794027644208, 0.207991532538075, 0.1997188795399831, 0.19613158543394513] ***
*** starting iteration: 5; err: [Inf, 0.32247626026352305, 0.22913794027644208, 0.207991532538075, 0.1997188795399831, 0.19613158543394513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32247626026352305, 0.22913794027644208, 0.207991532538075, 0.1997188795399831, 0.19613158543394513, 0.19431970411537403] ***
*** starting iteration: 6; err: [Inf, 0.32247626026352305, 0.22913794027644208, 0.207991532538075, 0.1997188795399831, 0.19613158543394513, 0.19431970411537403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32247626026352305, 0.22913794027644208, 0.207991532538075, 0.1997188795399831, 0.19613158543394513, 0.19431970411537403, 0.1933237814199252] ***
*** finished computation of 7 references, err: [Inf, 0.32247626026352305, 0.22913794027644208, 0.207991532538075, 0.1997188795399831, 0.19613158543394513, 0.19431970411537403, 0.1933237814199252] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 86, 24]]
** centroid: 1, normalized-entropy: 0.7568336324184036, [(2, 86), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [73, 64, 0]]
** centroid: 4, normalized-entropy: 0.9968846902726344, [(1, 73), (2, 64)]
*** center 5: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [36, 85, 0]]
** centroid: 6, normalized-entropy: 0.8782390255090747, [(1, 36), (2, 85)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [41, 26, 0]]
** centroid: 7, normalized-entropy: 0.9635359835770286, [(1, 41), (2, 26)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36155731342285424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36155731342285424, 0.29431508113448324] ***
*** finished computation of 3 references, err: [Inf, 0.36155731342285424, 0.29431508113448324] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [219, 19, 0]]
** centroid: 1, normalized-entropy: 0.4015867178958213, [(1, 219), (2, 19)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 195, 27]]
** centroid: 2, normalized-entropy: 0.5340042729285396, [(2, 195), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [167, 39, 0]]
** centroid: 3, normalized-entropy: 0.7000475981599447, [(1, 167), (2, 39)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4269072254889294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4269072254889294, 0.3682081698037885] ***
*** finished computation of 3 references, err: [Inf, 0.4269072254889294, 0.3682081698037885] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [236, 55, 0]]
** centroid: 1, normalized-entropy: 0.6993820649246042, [(1, 236), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [103, 82, 0]]
** centroid: 2, normalized-entropy: 0.9906851433349372, [(1, 103), (2, 82)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [51, 111, 29]]
** centroid: 3, normalized-entropy: 0.8685478208494316, [(1, 51), (2, 111), (3, 29)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40204409000532204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40204409000532204, 0.30514079770017444] ***
*** finished computation of 3 references, err: [Inf, 0.40204409000532204, 0.30514079770017444] ***
*** center 1: selecting labels [1] (freq >= 1) [from [150, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [130, 88, 0]]
** centroid: 2, normalized-entropy: 0.973056810401783, [(1, 130), (2, 88)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [102, 173, 24]]
** centroid: 3, normalized-entropy: 0.8064070011928268, [(1, 102), (2, 173), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.23130913663675795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23130913663675795, 0.16176938658926981] ***
*** starting iteration: 2; err: [Inf, 0.23130913663675795, 0.16176938658926981] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23130913663675795, 0.16176938658926981, 0.15273653758919095] ***
*** starting iteration: 3; err: [Inf, 0.23130913663675795, 0.16176938658926981, 0.15273653758919095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23130913663675795, 0.16176938658926981, 0.15273653758919095, 0.15017297491710913] ***
*** starting iteration: 4; err: [Inf, 0.23130913663675795, 0.16176938658926981, 0.15273653758919095, 0.15017297491710913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23130913663675795, 0.16176938658926981, 0.15273653758919095, 0.15017297491710913, 0.14833290052219844] ***
*** starting iteration: 5; err: [Inf, 0.23130913663675795, 0.16176938658926981, 0.15273653758919095, 0.15017297491710913, 0.14833290052219844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23130913663675795, 0.16176938658926981, 0.15273653758919095, 0.15017297491710913, 0.14833290052219844, 0.14749695194532741] ***
*** finished computation of 7 references, err: [Inf, 0.23130913663675795, 0.16176938658926981, 0.15273653758919095, 0.15017297491710913, 0.14833290052219844, 0.14749695194532741] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 91, 27]]
** centroid: 1, normalized-entropy: 0.7759373305779853, [(2, 91), (3, 27)]
*** center 2: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [36, 60, 0]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(1, 36), (2, 60)]
*** center 4: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [44, 20, 0]]
** centroid: 5, normalized-entropy: 0.8960382325345574, [(1, 44), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [13, 82, 0]]
** centroid: 6, normalized-entropy: 0.5759084429149787, [(1, 13), (2, 82)]
*** center 7: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19889071876548978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19889071876548978, 0.16808393407358915] ***
*** starting iteration: 2; err: [Inf, 0.19889071876548978, 0.16808393407358915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19889071876548978, 0.16808393407358915, 0.161281494799697] ***
*** starting iteration: 3; err: [Inf, 0.19889071876548978, 0.16808393407358915, 0.161281494799697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19889071876548978, 0.16808393407358915, 0.161281494799697, 0.15842210347282476] ***
*** starting iteration: 4; err: [Inf, 0.19889071876548978, 0.16808393407358915, 0.161281494799697, 0.15842210347282476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19889071876548978, 0.16808393407358915, 0.161281494799697, 0.15842210347282476, 0.157356225316988] ***
*** starting iteration: 5; err: [Inf, 0.19889071876548978, 0.16808393407358915, 0.161281494799697, 0.15842210347282476, 0.157356225316988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19889071876548978, 0.16808393407358915, 0.161281494799697, 0.15842210347282476, 0.157356225316988, 0.15653408750646639] ***
*** finished computation of 7 references, err: [Inf, 0.19889071876548978, 0.16808393407358915, 0.161281494799697, 0.15842210347282476, 0.157356225316988, 0.15653408750646639] ***
*** center 1: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 69, 29]]
** centroid: 3, normalized-entropy: 0.8762441668050731, [(2, 69), (3, 29)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [87, 48, 0]]
** centroid: 4, normalized-entropy: 0.9389320105807949, [(1, 87), (2, 48)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [22, 49, 0]]
** centroid: 5, normalized-entropy: 0.893010810044601, [(1, 22), (2, 49)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [19, 82, 0]]
** centroid: 6, normalized-entropy: 0.6975195309289136, [(1, 19), (2, 82)]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3106507248066455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3106507248066455, 0.20051486434965118] ***
*** starting iteration: 2; err: [Inf, 0.3106507248066455, 0.20051486434965118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3106507248066455, 0.20051486434965118, 0.16722205443785287] ***
*** starting iteration: 3; err: [Inf, 0.3106507248066455, 0.20051486434965118, 0.16722205443785287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3106507248066455, 0.20051486434965118, 0.16722205443785287, 0.15588379354178458] ***
*** starting iteration: 4; err: [Inf, 0.3106507248066455, 0.20051486434965118, 0.16722205443785287, 0.15588379354178458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3106507248066455, 0.20051486434965118, 0.16722205443785287, 0.15588379354178458, 0.15196502501231576] ***
*** starting iteration: 5; err: [Inf, 0.3106507248066455, 0.20051486434965118, 0.16722205443785287, 0.15588379354178458, 0.15196502501231576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3106507248066455, 0.20051486434965118, 0.16722205443785287, 0.15588379354178458, 0.15196502501231576, 0.14944067132111913] ***
*** starting iteration: 6; err: [Inf, 0.3106507248066455, 0.20051486434965118, 0.16722205443785287, 0.15588379354178458, 0.15196502501231576, 0.14944067132111913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3106507248066455, 0.20051486434965118, 0.16722205443785287, 0.15588379354178458, 0.15196502501231576, 0.14944067132111913, 0.14754497630970562] ***
*** starting iteration: 7; err: [Inf, 0.3106507248066455, 0.20051486434965118, 0.16722205443785287, 0.15588379354178458, 0.15196502501231576, 0.14944067132111913, 0.14754497630970562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3106507248066455, 0.20051486434965118, 0.16722205443785287, 0.15588379354178458, 0.15196502501231576, 0.14944067132111913, 0.14754497630970562, 0.146569042032336] ***
*** finished computation of 7 references, err: [Inf, 0.3106507248066455, 0.20051486434965118, 0.16722205443785287, 0.15588379354178458, 0.15196502501231576, 0.14944067132111913, 0.14754497630970562, 0.146569042032336] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 70, 24]]
** centroid: 1, normalized-entropy: 0.8196004346196011, [(2, 70), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [59, 4, 0]]
** centroid: 2, normalized-entropy: 0.3411538931451763, [(1, 59), (2, 4)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [10, 97, 0]]
** centroid: 3, normalized-entropy: 0.447907858914932, [(1, 10), (2, 97)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 71, 0]]
** centroid: 4, normalized-entropy: 0.9429819088696832, [(1, 40), (2, 71)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [79, 19, 0]]
** centroid: 5, normalized-entropy: 0.7095128863456239, [(1, 79), (2, 19)]
*** center 6: selecting labels [1] (freq >= 2) [from [122, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32650763929371274] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32650763929371274, 0.2755362755554664] ***
*** starting iteration: 2; err: [Inf, 0.32650763929371274, 0.2755362755554664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32650763929371274, 0.2755362755554664, 0.2406596552116332] ***
*** starting iteration: 3; err: [Inf, 0.32650763929371274, 0.2755362755554664, 0.2406596552116332] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32650763929371274, 0.2755362755554664, 0.2406596552116332, 0.23167606157756918] ***
*** starting iteration: 4; err: [Inf, 0.32650763929371274, 0.2755362755554664, 0.2406596552116332, 0.23167606157756918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32650763929371274, 0.2755362755554664, 0.2406596552116332, 0.23167606157756918, 0.23130991540614282] ***
*** finished computation of 3 references, err: [Inf, 0.32650763929371274, 0.2755362755554664, 0.2406596552116332, 0.23167606157756918, 0.23130991540614282] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [183, 22, 0]]
** centroid: 1, normalized-entropy: 0.4917700213786152, [(1, 183), (2, 22)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 215, 27]]
** centroid: 2, normalized-entropy: 0.5046342074392738, [(2, 215), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [203, 16, 0]]
** centroid: 3, normalized-entropy: 0.37723824138843, [(1, 203), (2, 16)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3185506441729559] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3185506441729559, 0.2496916238599732] ***
*** starting iteration: 2; err: [Inf, 0.3185506441729559, 0.2496916238599732] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3185506441729559, 0.2496916238599732, 0.24268686566208636] ***
*** starting iteration: 3; err: [Inf, 0.3185506441729559, 0.2496916238599732, 0.24268686566208636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3185506441729559, 0.2496916238599732, 0.24268686566208636, 0.24166996893717319] ***
*** starting iteration: 4; err: [Inf, 0.3185506441729559, 0.2496916238599732, 0.24268686566208636, 0.24166996893717319] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3185506441729559, 0.2496916238599732, 0.24268686566208636, 0.24166996893717319, 0.24154715306744134] ***
*** finished computation of 3 references, err: [Inf, 0.3185506441729559, 0.2496916238599732, 0.24268686566208636, 0.24166996893717319, 0.24154715306744134] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [69, 159, 29]]
** centroid: 1, normalized-entropy: 0.8158571862883922, [(1, 69), (2, 159), (3, 29)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [122, 89, 0]]
** centroid: 2, normalized-entropy: 0.9822829302300214, [(1, 122), (2, 89)]
*** center 3: selecting labels [1] (freq >= 1) [from [199, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3303215389001718] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3303215389001718, 0.252615292044147] ***
*** starting iteration: 2; err: [Inf, 0.3303215389001718, 0.252615292044147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3303215389001718, 0.252615292044147, 0.246019939598774] ***
*** starting iteration: 3; err: [Inf, 0.3303215389001718, 0.252615292044147, 0.246019939598774] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3303215389001718, 0.252615292044147, 0.246019939598774, 0.24449445814106507] ***
*** starting iteration: 4; err: [Inf, 0.3303215389001718, 0.252615292044147, 0.246019939598774, 0.24449445814106507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3303215389001718, 0.252615292044147, 0.246019939598774, 0.24449445814106507, 0.2435551540063194] ***
*** finished computation of 3 references, err: [Inf, 0.3303215389001718, 0.252615292044147, 0.246019939598774, 0.24449445814106507, 0.2435551540063194] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 204, 24]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(2, 204), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [222, 8, 0]]
** centroid: 2, normalized-entropy: 0.2178364755977513, [(1, 222), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [160, 49, 0]]
** centroid: 3, normalized-entropy: 0.785687947661633, [(1, 160), (2, 49)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.29935833504954884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29935833504954884, 0.24125461413471908] ***
*** starting iteration: 2; err: [Inf, 0.29935833504954884, 0.24125461413471908] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29935833504954884, 0.24125461413471908, 0.2389835465990298] ***
*** starting iteration: 3; err: [Inf, 0.29935833504954884, 0.24125461413471908, 0.2389835465990298] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29935833504954884, 0.24125461413471908, 0.2389835465990298, 0.2379783788953234] ***
*** finished computation of 3 references, err: [Inf, 0.29935833504954884, 0.24125461413471908, 0.2389835465990298, 0.2379783788953234] ***
*** center 1: selecting labels [1] (freq >= 1) [from [195, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [122, 93, 0]]
** centroid: 2, normalized-entropy: 0.9868359909116974, [(1, 122), (2, 93)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [69, 160, 27]]
** centroid: 3, normalized-entropy: 0.8049809799159837, [(1, 69), (2, 160), (3, 27)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3484486481024726] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3484486481024726, 0.2461201802588653] ***
*** starting iteration: 2; err: [Inf, 0.3484486481024726, 0.2461201802588653] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3484486481024726, 0.2461201802588653, 0.2405438871071234] ***
*** starting iteration: 3; err: [Inf, 0.3484486481024726, 0.2461201802588653, 0.2405438871071234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3484486481024726, 0.2461201802588653, 0.2405438871071234, 0.23963079287780858] ***
*** finished computation of 3 references, err: [Inf, 0.3484486481024726, 0.2461201802588653, 0.2405438871071234, 0.23963079287780858] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [145, 64, 0]]
** centroid: 1, normalized-entropy: 0.8887619165202822, [(1, 145), (2, 64)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [245, 14, 0]]
** centroid: 2, normalized-entropy: 0.30337483608641397, [(1, 245), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 170, 29]]
** centroid: 3, normalized-entropy: 0.599047193397373, [(2, 170), (3, 29)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.490687824241158] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.490687824241158, 0.27328869574067965] ***
*** starting iteration: 2; err: [Inf, 0.490687824241158, 0.27328869574067965] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.490687824241158, 0.27328869574067965, 0.23834960569936162] ***
*** starting iteration: 3; err: [Inf, 0.490687824241158, 0.27328869574067965, 0.23834960569936162] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.490687824241158, 0.27328869574067965, 0.23834960569936162, 0.23270694053602003] ***
*** finished computation of 3 references, err: [Inf, 0.490687824241158, 0.27328869574067965, 0.23834960569936162, 0.23270694053602003] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [129, 79, 0]]
** centroid: 1, normalized-entropy: 0.9579060880661358, [(1, 129), (2, 79)]
*** center 2: selecting labels [1] (freq >= 1) [from [183, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [70, 182, 24]]
** centroid: 3, normalized-entropy: 0.7599622361108171, [(1, 70), (2, 182), (3, 24)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4143155934203447] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4143155934203447, 0.3375543440166335] ***
*** finished computation of 3 references, err: [Inf, 0.4143155934203447, 0.3375543440166335] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [165, 11, 0]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(1, 165), (2, 11)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [59, 183, 27]]
** centroid: 2, normalized-entropy: 0.7514687719358966, [(1, 59), (2, 183), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [162, 59, 0]]
** centroid: 3, normalized-entropy: 0.837080657221034, [(1, 162), (2, 59)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.46931351690498674] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46931351690498674, 0.34880585929398417] ***
*** finished computation of 3 references, err: [Inf, 0.46931351690498674, 0.34880585929398417] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [45, 74, 23]]
** centroid: 1, normalized-entropy: 0.9090241615921647, [(1, 45), (2, 74), (3, 23)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [88, 164, 6]]
** centroid: 2, normalized-entropy: 0.6757266114656937, [(1, 88), (2, 164), (3, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [257, 10, 0]]
** centroid: 3, normalized-entropy: 0.23049072535159787, [(1, 257), (2, 10)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34650179160957123] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34650179160957123, 0.29821549773193906] ***
*** finished computation of 3 references, err: [Inf, 0.34650179160957123, 0.29821549773193906] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [126, 116, 0]]
** centroid: 1, normalized-entropy: 0.9987679240688597, [(1, 126), (2, 116)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [55, 145, 24]]
** centroid: 2, normalized-entropy: 0.787949016651727, [(1, 55), (2, 145), (3, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [201, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3871282628407372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3871282628407372, 0.30842931264754125] ***
*** finished computation of 3 references, err: [Inf, 0.3871282628407372, 0.30842931264754125] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [111, 185, 27]]
** centroid: 1, normalized-entropy: 0.8134958031970982, [(1, 111), (2, 185), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [111, 68, 0]]
** centroid: 2, normalized-entropy: 0.9579630712872461, [(1, 111), (2, 68)]
*** center 3: selecting labels [1] (freq >= 1) [from [164, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4362082853382719] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4362082853382719, 0.30555858776445266] ***
*** finished computation of 3 references, err: [Inf, 0.4362082853382719, 0.30555858776445266] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [242, 20, 0]]
** centroid: 1, normalized-entropy: 0.38913496597180475, [(1, 242), (2, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [148, 47, 0]]
** centroid: 2, normalized-entropy: 0.7967417284063618, [(1, 148), (2, 47)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 181, 29]]
** centroid: 3, normalized-entropy: 0.5792285918529808, [(2, 181), (3, 29)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39628237999928206] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39628237999928206, 0.3053902537161219] ***
*** finished computation of 3 references, err: [Inf, 0.39628237999928206, 0.3053902537161219] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [123, 194, 24]]
** centroid: 1, normalized-entropy: 0.7968876809609149, [(1, 123), (2, 194), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [98, 67, 0]]
** centroid: 2, normalized-entropy: 0.9743856052521117, [(1, 98), (2, 67)]
*** center 3: selecting labels [1] (freq >= 1) [from [161, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.23373982906635213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23373982906635213, 0.1898121506300148] ***
*** starting iteration: 2; err: [Inf, 0.23373982906635213, 0.1898121506300148] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23373982906635213, 0.1898121506300148, 0.1878009198734106] ***
*** starting iteration: 3; err: [Inf, 0.23373982906635213, 0.1898121506300148, 0.1878009198734106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23373982906635213, 0.1898121506300148, 0.1878009198734106, 0.18709411642160378] ***
*** finished computation of 7 references, err: [Inf, 0.23373982906635213, 0.1898121506300148, 0.1878009198734106, 0.18709411642160378] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [16, 75, 0]]
** centroid: 1, normalized-entropy: 0.6708561590207726, [(1, 16), (2, 75)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [65, 20, 0]]
** centroid: 2, normalized-entropy: 0.787126586201269, [(1, 65), (2, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 88, 27]]
** centroid: 4, normalized-entropy: 0.7862557466096292, [(2, 88), (3, 27)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [37, 70, 0]]
** centroid: 5, normalized-entropy: 0.9302559049579806, [(1, 37), (2, 70)]
*** center 6: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23819900751867887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23819900751867887, 0.1950932715166321] ***
*** starting iteration: 2; err: [Inf, 0.23819900751867887, 0.1950932715166321] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23819900751867887, 0.1950932715166321, 0.19292596804667153] ***
*** starting iteration: 3; err: [Inf, 0.23819900751867887, 0.1950932715166321, 0.19292596804667153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23819900751867887, 0.1950932715166321, 0.19292596804667153, 0.19294526620950925] ***
*** finished computation of 7 references, err: [Inf, 0.23819900751867887, 0.1950932715166321, 0.19292596804667153, 0.19294526620950925] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [71, 40, 0]]
** centroid: 1, normalized-entropy: 0.9429819088696832, [(1, 71), (2, 40)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [64, 6, 0]]
** centroid: 2, normalized-entropy: 0.4220005168831531, [(1, 64), (2, 6)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 82, 29]]
** centroid: 3, normalized-entropy: 0.8286436750223362, [(2, 82), (3, 29)]
*** center 4: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [64, 26, 0]]
** centroid: 5, normalized-entropy: 0.8672816222000259, [(1, 64), (2, 26)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [4, 94, 0]]
** centroid: 6, normalized-entropy: 0.2460225782203316, [(1, 4), (2, 94)]
*** center 7: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25768957463842906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25768957463842906, 0.19163271832954268] ***
*** starting iteration: 2; err: [Inf, 0.25768957463842906, 0.19163271832954268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25768957463842906, 0.19163271832954268, 0.18650188046120766] ***
*** starting iteration: 3; err: [Inf, 0.25768957463842906, 0.19163271832954268, 0.18650188046120766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25768957463842906, 0.19163271832954268, 0.18650188046120766, 0.18592821310429292] ***
*** finished computation of 7 references, err: [Inf, 0.25768957463842906, 0.19163271832954268, 0.18650188046120766, 0.18592821310429292] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [46, 74, 0]]
** centroid: 1, normalized-entropy: 0.9603622703154779, [(1, 46), (2, 74)]
*** center 2: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [54, 27, 0]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(1, 54), (2, 27)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 73, 24]]
** centroid: 5, normalized-entropy: 0.8071675554288905, [(2, 73), (3, 24)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [18, 87, 0]]
** centroid: 6, normalized-entropy: 0.6609623351442084, [(1, 18), (2, 87)]
*** center 7: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18990120590404347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18990120590404347, 0.15335323192548375] ***
*** starting iteration: 2; err: [Inf, 0.18990120590404347, 0.15335323192548375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18990120590404347, 0.15335323192548375, 0.14888108275864306] ***
*** starting iteration: 3; err: [Inf, 0.18990120590404347, 0.15335323192548375, 0.14888108275864306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18990120590404347, 0.15335323192548375, 0.14888108275864306, 0.1475064166808954] ***
*** starting iteration: 4; err: [Inf, 0.18990120590404347, 0.15335323192548375, 0.14888108275864306, 0.1475064166808954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18990120590404347, 0.15335323192548375, 0.14888108275864306, 0.1475064166808954, 0.14714271099797474] ***
*** finished computation of 7 references, err: [Inf, 0.18990120590404347, 0.15335323192548375, 0.14888108275864306, 0.1475064166808954, 0.14714271099797474] ***
*** center 1: selecting labels [1] (freq >= 2) [from [120, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 77, 27]]
** centroid: 2, normalized-entropy: 0.826165427834159, [(2, 77), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [62, 27, 0]]
** centroid: 3, normalized-entropy: 0.8853723770068483, [(1, 62), (2, 27)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [21, 61, 0]]
** centroid: 4, normalized-entropy: 0.8208002549877175, [(1, 21), (2, 61)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [11, 88, 0]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(1, 11), (2, 88)]
*** center 6: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19454141936091793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19454141936091793, 0.1543692399117945] ***
*** starting iteration: 2; err: [Inf, 0.19454141936091793, 0.1543692399117945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19454141936091793, 0.1543692399117945, 0.1502853057317916] ***
*** starting iteration: 3; err: [Inf, 0.19454141936091793, 0.1543692399117945, 0.1502853057317916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19454141936091793, 0.1543692399117945, 0.1502853057317916, 0.14975567822270597] ***
*** finished computation of 7 references, err: [Inf, 0.19454141936091793, 0.1543692399117945, 0.1502853057317916, 0.14975567822270597] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 99, 29]]
** centroid: 1, normalized-entropy: 0.7719706699485864, [(2, 99), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [59, 41, 0]]
** centroid: 4, normalized-entropy: 0.9765004687578239, [(1, 59), (2, 41)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [68, 23, 0]]
** centroid: 5, normalized-entropy: 0.8156034512499668, [(1, 68), (2, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [87, 1, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [4, 84, 0]]
** centroid: 7, normalized-entropy: 0.2667649878030262, [(1, 4), (2, 84)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19991828620048432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19991828620048432, 0.15350279093313698] ***
*** starting iteration: 2; err: [Inf, 0.19991828620048432, 0.15350279093313698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19991828620048432, 0.15350279093313698, 0.14946622804443965] ***
*** starting iteration: 3; err: [Inf, 0.19991828620048432, 0.15350279093313698, 0.14946622804443965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19991828620048432, 0.15350279093313698, 0.14946622804443965, 0.14813820982835013] ***
*** starting iteration: 4; err: [Inf, 0.19991828620048432, 0.15350279093313698, 0.14946622804443965, 0.14813820982835013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19991828620048432, 0.15350279093313698, 0.14946622804443965, 0.14813820982835013, 0.14744366534791517] ***
*** finished computation of 7 references, err: [Inf, 0.19991828620048432, 0.15350279093313698, 0.14946622804443965, 0.14813820982835013, 0.14744366534791517] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 86, 23]]
** centroid: 1, normalized-entropy: 0.7434073165779199, [(2, 86), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [54, 34, 0]]
** centroid: 4, normalized-entropy: 0.9624127354629922, [(1, 54), (2, 34)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [55, 40, 0]]
** centroid: 5, normalized-entropy: 0.9819407868640977, [(1, 55), (2, 40)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 101, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18112452741287224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18112452741287224, 0.1518605243255225] ***
*** starting iteration: 2; err: [Inf, 0.18112452741287224, 0.1518605243255225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18112452741287224, 0.1518605243255225, 0.1479188361601602] ***
*** starting iteration: 3; err: [Inf, 0.18112452741287224, 0.1518605243255225, 0.1479188361601602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18112452741287224, 0.1518605243255225, 0.1479188361601602, 0.14653703717196043] ***
*** starting iteration: 4; err: [Inf, 0.18112452741287224, 0.1518605243255225, 0.1479188361601602, 0.14653703717196043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18112452741287224, 0.1518605243255225, 0.1479188361601602, 0.14653703717196043, 0.14592523946249913] ***
*** finished computation of 7 references, err: [Inf, 0.18112452741287224, 0.1518605243255225, 0.1479188361601602, 0.14653703717196043, 0.14592523946249913] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [24, 79, 0]]
** centroid: 1, normalized-entropy: 0.7832211182191516, [(1, 24), (2, 79)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [65, 13, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 65), (2, 13)]
*** center 3: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 64, 27]]
** centroid: 4, normalized-entropy: 0.8772236230732716, [(2, 64), (3, 27)]
*** center 5: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 97, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18809296015085936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18809296015085936, 0.15312835587554427] ***
*** starting iteration: 2; err: [Inf, 0.18809296015085936, 0.15312835587554427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18809296015085936, 0.15312835587554427, 0.14936129284695884] ***
*** starting iteration: 3; err: [Inf, 0.18809296015085936, 0.15312835587554427, 0.14936129284695884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18809296015085936, 0.15312835587554427, 0.14936129284695884, 0.14853743164740066] ***
*** finished computation of 7 references, err: [Inf, 0.18809296015085936, 0.15312835587554427, 0.14936129284695884, 0.14853743164740066] ***
*** center 1: selecting labels [1] (freq >= 1) [from [117, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 62, 29]]
** centroid: 2, normalized-entropy: 0.9029416720373132, [(2, 62), (3, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [55, 2, 0]]
** centroid: 3, normalized-entropy: 0.2192973081321754, [(1, 55), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [92, 5, 0]]
** centroid: 4, normalized-entropy: 0.29292995113885967, [(1, 92), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [24, 89, 0]]
** centroid: 5, normalized-entropy: 0.7460251980495494, [(1, 24), (2, 89)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [6, 90, 0]]
** centroid: 6, normalized-entropy: 0.3372900666170139, [(1, 6), (2, 90)]
*** center 7: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1831225984586009] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1831225984586009, 0.14779604749539044] ***
*** starting iteration: 2; err: [Inf, 0.1831225984586009, 0.14779604749539044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1831225984586009, 0.14779604749539044, 0.14516903086240102] ***
*** starting iteration: 3; err: [Inf, 0.1831225984586009, 0.14779604749539044, 0.14516903086240102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1831225984586009, 0.14779604749539044, 0.14516903086240102, 0.14477619491349988] ***
*** finished computation of 7 references, err: [Inf, 0.1831225984586009, 0.14779604749539044, 0.14516903086240102, 0.14477619491349988] ***
*** center 1: selecting labels [1] (freq >= 1) [from [121, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [45, 21, 0]]
** centroid: 2, normalized-entropy: 0.9023932827949788, [(1, 45), (2, 21)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 64, 24]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 64), (3, 24)]
*** center 4: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [39, 69, 0]]
** centroid: 5, normalized-entropy: 0.943601631299382, [(1, 39), (2, 69)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 107, 0]]
** centroid: 6, normalized-entropy: 0.13206535647488304, [(1, 2), (2, 107)]
*** center 7: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.9309848770926615, 0.9279998561435687, 0.9249818680956405, 0.9159968351585118, 0.9060137982293671, 0.9030167892443343, 0.9010357663052274, 0.8939927951904, 0.884989780199361, 0.8820017622412832, 0.881986777196358, 0.8810547074020127, 0.8790467113820407, 0.8439966913020805, 0.8230356104607601, 0.7820245395095694]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9309848770926615
finished with 16
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9309848770926615, 0.9279998561435687, 0.9249818680956405, 0.9159968351585118, 0.9060137982293671, 0.9030167892443343, 0.9010357663052274, 0.8939927951904, 0.884989780199361, 0.8820017622412832, 0.881986777196358, 0.8810547074020127, 0.8790467113820407, 0.8439966913020805, 0.8230356104607601, 0.7820245395095694]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9309848770926615
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.1842913687440312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1842913687440312, 0.15479951754615112] ***
*** starting iteration: 2; err: [Inf, 0.1842913687440312, 0.15479951754615112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1842913687440312, 0.15479951754615112, 0.14927118820104715] ***
*** starting iteration: 3; err: [Inf, 0.1842913687440312, 0.15479951754615112, 0.14927118820104715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1842913687440312, 0.15479951754615112, 0.14927118820104715, 0.1468930456028026] ***
*** starting iteration: 4; err: [Inf, 0.1842913687440312, 0.15479951754615112, 0.14927118820104715, 0.1468930456028026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1842913687440312, 0.15479951754615112, 0.14927118820104715, 0.1468930456028026, 0.14614098330654832] ***
*** finished computation of 7 references, err: [Inf, 0.1842913687440312, 0.15479951754615112, 0.14927118820104715, 0.1468930456028026, 0.14614098330654832] ***
*** center 1: selecting labels [1] (freq >= 2) [from [122, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 63, 27]]
** centroid: 2, normalized-entropy: 0.8812908992306927, [(2, 63), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [63, 19, 0]]
** centroid: 3, normalized-entropy: 0.7809756883263416, [(1, 63), (2, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [96, 2, 0]]
** centroid: 4, normalized-entropy: 0.14372616993938164, [(1, 96), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [4, 84, 0]]
** centroid: 5, normalized-entropy: 0.2667649878030262, [(1, 4), (2, 84)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [19, 85, 0]]
** centroid: 6, normalized-entropy: 0.6859315226878925, [(1, 19), (2, 85)]
*** center 7: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21603216423417093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21603216423417093, 0.1557367128547633] ***
*** starting iteration: 2; err: [Inf, 0.21603216423417093, 0.1557367128547633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21603216423417093, 0.1557367128547633, 0.15263822162174795] ***
*** starting iteration: 3; err: [Inf, 0.21603216423417093, 0.1557367128547633, 0.15263822162174795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21603216423417093, 0.1557367128547633, 0.15263822162174795, 0.15222335036430715] ***
*** finished computation of 7 references, err: [Inf, 0.21603216423417093, 0.1557367128547633, 0.15263822162174795, 0.15222335036430715] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [59, 5, 0]]
** centroid: 1, normalized-entropy: 0.3955378064564774, [(1, 59), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [86, 26, 0]]
** centroid: 2, normalized-entropy: 0.7817281222714539, [(1, 86), (2, 26)]
*** center 3: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 79, 29]]
** centroid: 4, normalized-entropy: 0.8393307617496655, [(2, 79), (3, 29)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [49, 53, 0]]
** centroid: 5, normalized-entropy: 0.998890376741155, [(1, 49), (2, 53)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [4, 85, 0]]
** centroid: 6, normalized-entropy: 0.2645173683629748, [(1, 4), (2, 85)]
*** center 7: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20489115950705922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20489115950705922, 0.15544960571025712] ***
*** starting iteration: 2; err: [Inf, 0.20489115950705922, 0.15544960571025712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20489115950705922, 0.15544960571025712, 0.1503028409818056] ***
*** starting iteration: 3; err: [Inf, 0.20489115950705922, 0.15544960571025712, 0.1503028409818056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20489115950705922, 0.15544960571025712, 0.1503028409818056, 0.14967004292347152] ***
*** finished computation of 7 references, err: [Inf, 0.20489115950705922, 0.15544960571025712, 0.1503028409818056, 0.14967004292347152] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [11, 113, 0]]
** centroid: 1, normalized-entropy: 0.4321481607261778, [(1, 11), (2, 113)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [53, 38, 0]]
** centroid: 2, normalized-entropy: 0.9803107984107206, [(1, 53), (2, 38)]
*** center 3: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 32, 0]]
** centroid: 4, normalized-entropy: 0.928675181093665, [(1, 61), (2, 32)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 77, 24]]
** centroid: 5, normalized-entropy: 0.7910662980902586, [(2, 77), (3, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [89, 1, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 17)
[0.9390078701455947, 0.9309848770926615, 0.9279998561435687, 0.9249818680956405, 0.9159968351585118, 0.9060137982293671, 0.9030167892443343, 0.9010357663052274, 0.8939927951904, 0.884989780199361, 0.8820017622412832, 0.881986777196358, 0.8810547074020127, 0.8790467113820407, 0.8439966913020805, 0.8230356104607601, 0.7820245395095694]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9390078701455947
finished with 17
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9390078701455947, 0.9309848770926615, 0.9279998561435687, 0.9249818680956405, 0.9159968351585118, 0.9060137982293671, 0.9030167892443343, 0.9010357663052274, 0.8939927951904, 0.884989780199361, 0.8820017622412832, 0.881986777196358, 0.8810547074020127, 0.8790467113820407, 0.8439966913020805, 0.8230356104607601, 0.7820245395095694]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9390078701455947
finished with 18
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.3397873691087393] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3397873691087393, 0.2986807929653976] ***
*** finished computation of 3 references, err: [Inf, 0.3397873691087393, 0.2986807929653976] ***
*** center 1: selecting labels [1] (freq >= 2) [from [187, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [128, 63, 0]]
** centroid: 2, normalized-entropy: 0.9147658166195459, [(1, 128), (2, 63)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [71, 190, 27]]
** centroid: 3, normalized-entropy: 0.7659921559442971, [(1, 71), (2, 190), (3, 27)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4186477690817847] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4186477690817847, 0.34551499792230855] ***
*** finished computation of 3 references, err: [Inf, 0.4186477690817847, 0.34551499792230855] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [125, 174, 29]]
** centroid: 1, normalized-entropy: 0.8359827021333496, [(1, 125), (2, 174), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [151, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [114, 74, 0]]
** centroid: 3, normalized-entropy: 0.9670941140642181, [(1, 114), (2, 74)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6693193471028485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6693193471028485, 0.3368244120792515] ***
*** finished computation of 3 references, err: [Inf, 0.6693193471028485, 0.3368244120792515] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [254, 42, 0]]
** centroid: 1, normalized-entropy: 0.5891721419909833, [(1, 254), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [128, 163, 0]]
** centroid: 2, normalized-entropy: 0.9895396413974054, [(1, 128), (2, 163)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 56, 24]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 56), (3, 24)]
finished with 5 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 18)
[0.9390078701455947, 0.9309848770926615, 0.9279998561435687, 0.9249818680956405, 0.9159968351585118, 0.9060137982293671, 0.9030167892443343, 0.9010357663052274, 0.8939927951904, 0.884989780199361, 0.8820197442951935, 0.8820017622412832, 0.881986777196358, 0.8810547074020127, 0.8790467113820407, 0.8439966913020805, 0.8230356104607601, 0.7820245395095694]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9390078701455947
finished with 20
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.233418467618223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.233418467618223, 0.1925732527171505] ***
*** finished computation of 7 references, err: [Inf, 0.233418467618223, 0.1925732527171505] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [38, 76, 0]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(1, 38), (2, 76)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [43, 4, 0]]
** centroid: 2, normalized-entropy: 0.4199210973757179, [(1, 43), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 57, 27]]
** centroid: 4, normalized-entropy: 0.9059282160429994, [(2, 57), (3, 27)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [91, 11, 0]]
** centroid: 5, normalized-entropy: 0.493375733509813, [(1, 91), (2, 11)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [105, 8, 0]]
** centroid: 6, normalized-entropy: 0.36888887962808253, [(1, 105), (2, 8)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 97, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23531179486828363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23531179486828363, 0.19231411057902775] ***
*** finished computation of 7 references, err: [Inf, 0.23531179486828363, 0.19231411057902775] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 110, 29]]
** centroid: 1, normalized-entropy: 0.738861811238528, [(2, 110), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [49, 26, 0]]
** centroid: 4, normalized-entropy: 0.9310558233850329, [(1, 49), (2, 26)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [82, 17, 0]]
** centroid: 5, normalized-entropy: 0.6616179061408356, [(1, 82), (2, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [95, 6, 0]]
** centroid: 6, normalized-entropy: 0.3250821976451909, [(1, 95), (2, 6)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 89, 0]]
** centroid: 7, normalized-entropy: 0.20731018585948177, [(1, 3), (2, 89)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24069047525296103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24069047525296103, 0.19787375233380466] ***
*** finished computation of 7 references, err: [Inf, 0.24069047525296103, 0.19787375233380466] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 117, 24]]
** centroid: 1, normalized-entropy: 0.6581912658132184, [(2, 117), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 31, 0]]
** centroid: 4, normalized-entropy: 0.9782176659354249, [(1, 44), (2, 31)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [79, 22, 0]]
** centroid: 5, normalized-entropy: 0.756170148929897, [(1, 79), (2, 22)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [90, 22, 0]]
** centroid: 6, normalized-entropy: 0.7147274731317893, [(1, 90), (2, 22)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [6, 69, 0]]
** centroid: 7, normalized-entropy: 0.4021791902022729, [(1, 6), (2, 69)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2028654334722674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2028654334722674, 0.15148660790751334] ***
*** finished computation of 7 references, err: [Inf, 0.2028654334722674, 0.15148660790751334] ***
*** center 1: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 69, 27]]
** centroid: 2, normalized-entropy: 0.8571484374283717, [(2, 69), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [56, 17, 0]]
** centroid: 3, normalized-entropy: 0.7829924501610913, [(1, 56), (2, 17)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [112, 2, 0]]
** centroid: 4, normalized-entropy: 0.1274185117923586, [(1, 112), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [36, 77, 0]]
** centroid: 5, normalized-entropy: 0.9028350359954473, [(1, 36), (2, 77)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 88, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19290294090210497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19290294090210497, 0.1555687799683955] ***
*** finished computation of 7 references, err: [Inf, 0.19290294090210497, 0.1555687799683955] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 114, 25]]
** centroid: 1, normalized-entropy: 0.6797621780533731, [(2, 114), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [75, 2, 0]]
** centroid: 3, normalized-entropy: 0.17378132267943294, [(1, 75), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [55, 19, 0]]
** centroid: 4, normalized-entropy: 0.8218127305034848, [(1, 55), (2, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [81, 20, 0]]
** centroid: 5, normalized-entropy: 0.7179499765002912, [(1, 81), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [98, 5, 0]]
** centroid: 6, normalized-entropy: 0.28017814662275986, [(1, 98), (2, 5)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 88, 4]]
** centroid: 7, normalized-entropy: 0.2580186686648155, [(2, 88), (3, 4)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2060764082518966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2060764082518966, 0.15767546165231866] ***
*** finished computation of 7 references, err: [Inf, 0.2060764082518966, 0.15767546165231866] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [76, 65, 0]]
** centroid: 1, normalized-entropy: 0.9956052611323962, [(1, 76), (2, 65)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [50, 7, 0]]
** centroid: 2, normalized-entropy: 0.5373760853377334, [(1, 50), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 71, 24]]
** centroid: 3, normalized-entropy: 0.8154224977821039, [(2, 71), (3, 24)]
*** center 4: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [64, 21, 0]]
** centroid: 5, normalized-entropy: 0.806583102274714, [(1, 64), (2, 21)]
*** center 6: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [5, 97, 0]]
** centroid: 7, normalized-entropy: 0.28221763445592507, [(1, 5), (2, 97)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 20)
[0.9390078701455947, 0.9379828930727134, 0.9309848770926615, 0.9279998561435687, 0.9249818680956405, 0.9159968351585118, 0.9060137982293671, 0.9030167892443343, 0.9010357663052274, 0.8969957981934029, 0.8939927951904, 0.884989780199361, 0.8820197442951935, 0.8820017622412832, 0.881986777196358, 0.8810547074020127, 0.8790467113820407, 0.8439966913020805, 0.8230356104607601, 0.7820245395095694]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9390078701455947
finished with 21
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.2719021324675206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2719021324675206, 0.2254242541858585] ***
*** starting iteration: 2; err: [Inf, 0.2719021324675206, 0.2254242541858585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2719021324675206, 0.2254242541858585, 0.20366689614118175] ***
*** starting iteration: 3; err: [Inf, 0.2719021324675206, 0.2254242541858585, 0.20366689614118175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2719021324675206, 0.2254242541858585, 0.20366689614118175, 0.1937551059404964] ***
*** starting iteration: 4; err: [Inf, 0.2719021324675206, 0.2254242541858585, 0.20366689614118175, 0.1937551059404964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2719021324675206, 0.2254242541858585, 0.20366689614118175, 0.1937551059404964, 0.18900932067817822] ***
*** starting iteration: 5; err: [Inf, 0.2719021324675206, 0.2254242541858585, 0.20366689614118175, 0.1937551059404964, 0.18900932067817822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2719021324675206, 0.2254242541858585, 0.20366689614118175, 0.1937551059404964, 0.18900932067817822, 0.18739614279118474] ***
*** starting iteration: 6; err: [Inf, 0.2719021324675206, 0.2254242541858585, 0.20366689614118175, 0.1937551059404964, 0.18900932067817822, 0.18739614279118474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2719021324675206, 0.2254242541858585, 0.20366689614118175, 0.1937551059404964, 0.18900932067817822, 0.18739614279118474, 0.18655057461210736] ***
*** finished computation of 7 references, err: [Inf, 0.2719021324675206, 0.2254242541858585, 0.20366689614118175, 0.1937551059404964, 0.18900932067817822, 0.18739614279118474, 0.18655057461210736] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 65, 27]]
** centroid: 1, normalized-entropy: 0.8731720603476306, [(2, 65), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [70, 26, 0]]
** centroid: 2, normalized-entropy: 0.842657877202239, [(1, 70), (2, 26)]
*** center 3: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [15, 83, 0]]
** centroid: 5, normalized-entropy: 0.6174482957894681, [(1, 15), (2, 83)]
*** center 6: selecting labels [1] (freq >= 2) [from [115, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [7, 79, 0]]
** centroid: 7, normalized-entropy: 0.40707680632541937, [(1, 7), (2, 79)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36195233508991986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36195233508991986, 0.22436999587964887] ***
*** starting iteration: 2; err: [Inf, 0.36195233508991986, 0.22436999587964887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36195233508991986, 0.22436999587964887, 0.20803958657260488] ***
*** starting iteration: 3; err: [Inf, 0.36195233508991986, 0.22436999587964887, 0.20803958657260488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36195233508991986, 0.22436999587964887, 0.20803958657260488, 0.1994330547847736] ***
*** starting iteration: 4; err: [Inf, 0.36195233508991986, 0.22436999587964887, 0.20803958657260488, 0.1994330547847736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36195233508991986, 0.22436999587964887, 0.20803958657260488, 0.1994330547847736, 0.197977628651029] ***
*** starting iteration: 5; err: [Inf, 0.36195233508991986, 0.22436999587964887, 0.20803958657260488, 0.1994330547847736, 0.197977628651029] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36195233508991986, 0.22436999587964887, 0.20803958657260488, 0.1994330547847736, 0.197977628651029, 0.19681589486778364] ***
*** starting iteration: 6; err: [Inf, 0.36195233508991986, 0.22436999587964887, 0.20803958657260488, 0.1994330547847736, 0.197977628651029, 0.19681589486778364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36195233508991986, 0.22436999587964887, 0.20803958657260488, 0.1994330547847736, 0.197977628651029, 0.19681589486778364, 0.19539595134954235] ***
*** starting iteration: 7; err: [Inf, 0.36195233508991986, 0.22436999587964887, 0.20803958657260488, 0.1994330547847736, 0.197977628651029, 0.19681589486778364, 0.19539595134954235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36195233508991986, 0.22436999587964887, 0.20803958657260488, 0.1994330547847736, 0.197977628651029, 0.19681589486778364, 0.19539595134954235, 0.19477816999958328] ***
*** finished computation of 7 references, err: [Inf, 0.36195233508991986, 0.22436999587964887, 0.20803958657260488, 0.1994330547847736, 0.197977628651029, 0.19681589486778364, 0.19539595134954235, 0.19477816999958328] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [104, 29, 0]]
** centroid: 1, normalized-entropy: 0.7565818374156769, [(1, 104), (2, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 88, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 81, 29]]
** centroid: 4, normalized-entropy: 0.8321842672305305, [(2, 81), (3, 29)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [68, 18, 0]]
** centroid: 5, normalized-entropy: 0.7401470427139037, [(1, 68), (2, 18)]
*** center 6: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [55, 32, 0]]
** centroid: 7, normalized-entropy: 0.9489804585630239, [(1, 55), (2, 32)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30078216822401826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30078216822401826, 0.19971315446449373] ***
*** starting iteration: 2; err: [Inf, 0.30078216822401826, 0.19971315446449373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30078216822401826, 0.19971315446449373, 0.1918774450217364] ***
*** starting iteration: 3; err: [Inf, 0.30078216822401826, 0.19971315446449373, 0.1918774450217364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30078216822401826, 0.19971315446449373, 0.1918774450217364, 0.1902232401581227] ***
*** starting iteration: 4; err: [Inf, 0.30078216822401826, 0.19971315446449373, 0.1918774450217364, 0.1902232401581227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30078216822401826, 0.19971315446449373, 0.1918774450217364, 0.1902232401581227, 0.19000024394609727] ***
*** finished computation of 7 references, err: [Inf, 0.30078216822401826, 0.19971315446449373, 0.1918774450217364, 0.1902232401581227, 0.19000024394609727] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [83, 23, 0]]
** centroid: 1, normalized-entropy: 0.7546167018169155, [(1, 83), (2, 23)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 103, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [95, 3, 0]]
** centroid: 3, normalized-entropy: 0.19745300438456026, [(1, 95), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [49, 27, 0]]
** centroid: 4, normalized-entropy: 0.9386808697586004, [(1, 49), (2, 27)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 85, 24]]
** centroid: 5, normalized-entropy: 0.7605024019419504, [(2, 85), (3, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [60, 20, 0]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(1, 60), (2, 20)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 21)
[0.9390078701455947, 0.9379828930727134, 0.9309848770926615, 0.9279998561435687, 0.9249818680956405, 0.9159968351585118, 0.9060137982293671, 0.9030167892443343, 0.9019678360995727, 0.9010357663052274, 0.8969957981934029, 0.8939927951904, 0.884989780199361, 0.8820197442951935, 0.8820017622412832, 0.881986777196358, 0.8810547074020127, 0.8790467113820407, 0.8439966913020805, 0.8230356104607601, 0.7820245395095694]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9390078701455947
finished with 22
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.22282634182433197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22282634182433197, 0.19376064404389365] ***
*** starting iteration: 2; err: [Inf, 0.22282634182433197, 0.19376064404389365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22282634182433197, 0.19376064404389365, 0.19166625331941847] ***
*** starting iteration: 3; err: [Inf, 0.22282634182433197, 0.19376064404389365, 0.19166625331941847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22282634182433197, 0.19376064404389365, 0.19166625331941847, 0.19131285628980702] ***
*** finished computation of 7 references, err: [Inf, 0.22282634182433197, 0.19376064404389365, 0.19166625331941847, 0.19131285628980702] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [9, 70, 0]]
** centroid: 1, normalized-entropy: 0.511639783631173, [(1, 9), (2, 70)]
*** center 2: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [75, 24, 0]]
** centroid: 3, normalized-entropy: 0.7990485210442682, [(1, 75), (2, 24)]
*** center 4: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 50, 27]]
** centroid: 6, normalized-entropy: 0.9346466439786693, [(2, 50), (3, 27)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 109, 0]]
** centroid: 7, normalized-entropy: 0.07470433715479614, [(1, 1), (2, 109)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21843381171607631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21843381171607631, 0.1920045638956811] ***
*** starting iteration: 2; err: [Inf, 0.21843381171607631, 0.1920045638956811] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21843381171607631, 0.1920045638956811, 0.18872816515234725] ***
*** starting iteration: 3; err: [Inf, 0.21843381171607631, 0.1920045638956811, 0.18872816515234725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21843381171607631, 0.1920045638956811, 0.18872816515234725, 0.1882842374962756] ***
*** finished computation of 7 references, err: [Inf, 0.21843381171607631, 0.1920045638956811, 0.18872816515234725, 0.1882842374962756] ***
*** center 1: selecting labels [1] (freq >= 1) [from [115, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 63, 29]]
** centroid: 2, normalized-entropy: 0.8991045208483789, [(2, 63), (3, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [57, 19, 0]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(1, 57), (2, 19)]
*** center 4: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [6, 93, 0]]
** centroid: 5, normalized-entropy: 0.32984607020714635, [(1, 6), (2, 93)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [29, 73, 0]]
** centroid: 6, normalized-entropy: 0.8612621884720756, [(1, 29), (2, 73)]
*** center 7: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23607705397925144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23607705397925144, 0.19746943629127572] ***
*** starting iteration: 2; err: [Inf, 0.23607705397925144, 0.19746943629127572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23607705397925144, 0.19746943629127572, 0.19048730029153457] ***
*** starting iteration: 3; err: [Inf, 0.23607705397925144, 0.19746943629127572, 0.19048730029153457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23607705397925144, 0.19746943629127572, 0.19048730029153457, 0.18810182852695684] ***
*** starting iteration: 4; err: [Inf, 0.23607705397925144, 0.19746943629127572, 0.19048730029153457, 0.18810182852695684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23607705397925144, 0.19746943629127572, 0.19048730029153457, 0.18810182852695684, 0.18744850561380208] ***
*** finished computation of 7 references, err: [Inf, 0.23607705397925144, 0.19746943629127572, 0.19048730029153457, 0.18810182852695684, 0.18744850561380208] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [33, 94, 0]]
** centroid: 1, normalized-entropy: 0.8265086395554186, [(1, 33), (2, 94)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [51, 17, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 51), (2, 17)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 57, 24]]
** centroid: 3, normalized-entropy: 0.876716288999464, [(2, 57), (3, 24)]
*** center 4: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [91, 2, 0]]
** centroid: 6, normalized-entropy: 0.14981136747274781, [(1, 91), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 91, 0]]
** centroid: 7, normalized-entropy: 0.08650421412134586, [(1, 1), (2, 91)]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 22)
[0.9390078701455947, 0.9379828930727134, 0.9309848770926615, 0.9279998561435687, 0.9249938561315806, 0.9249818680956405, 0.9159968351585118, 0.9060137982293671, 0.9030167892443343, 0.9019678360995727, 0.9010357663052274, 0.8969957981934029, 0.8939927951904, 0.884989780199361, 0.8820197442951935, 0.8820017622412832, 0.881986777196358, 0.8810547074020127, 0.8790467113820407, 0.8439966913020805, 0.8230356104607601, 0.7820245395095694]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9390078701455947
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.20197414268832653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20197414268832653, 0.15493360783904792] ***
*** starting iteration: 2; err: [Inf, 0.20197414268832653, 0.15493360783904792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20197414268832653, 0.15493360783904792, 0.15161468749679624] ***
*** starting iteration: 3; err: [Inf, 0.20197414268832653, 0.15493360783904792, 0.15161468749679624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20197414268832653, 0.15493360783904792, 0.15161468749679624, 0.15125513012241573] ***
*** finished computation of 7 references, err: [Inf, 0.20197414268832653, 0.15493360783904792, 0.15161468749679624, 0.15125513012241573] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [15, 146, 0]]
** centroid: 1, normalized-entropy: 0.44695573196175803, [(1, 15), (2, 146)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [86, 54, 0]]
** centroid: 2, normalized-entropy: 0.9619780596506257, [(1, 86), (2, 54)]
*** center 3: selecting labels [1] (freq >= 2) [from [132, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 133, 40]]
** centroid: 4, normalized-entropy: 0.780121362219657, [(2, 133), (3, 40)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [90, 20, 0]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(1, 90), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [127, 28, 0]]
** centroid: 6, normalized-entropy: 0.6814863856763151, [(1, 127), (2, 28)]
*** center 7: selecting labels [1] (freq >= 2) [from [129, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20307640211097897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20307640211097897, 0.1542243515830487] ***
*** starting iteration: 2; err: [Inf, 0.20307640211097897, 0.1542243515830487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20307640211097897, 0.1542243515830487, 0.14981032759323717] ***
*** starting iteration: 3; err: [Inf, 0.20307640211097897, 0.1542243515830487, 0.14981032759323717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20307640211097897, 0.1542243515830487, 0.14981032759323717, 0.149164732074365] ***
*** finished computation of 7 references, err: [Inf, 0.20307640211097897, 0.1542243515830487, 0.14981032759323717, 0.149164732074365] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [46, 42, 0]]
** centroid: 1, normalized-entropy: 0.9985090989176322, [(1, 46), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [48, 5, 0]]
** centroid: 2, normalized-entropy: 0.4507913883546652, [(1, 48), (2, 5)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 62, 15]]
** centroid: 3, normalized-entropy: 0.7114160189012126, [(2, 62), (3, 15)]
*** center 4: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [57, 15, 0]]
** centroid: 5, normalized-entropy: 0.7382848661434506, [(1, 57), (2, 15)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 59, 0]]
** centroid: 6, normalized-entropy: 0.4441260450795996, [(1, 6), (2, 59)]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18836709898337722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18836709898337722, 0.1481366680962965] ***
*** starting iteration: 2; err: [Inf, 0.18836709898337722, 0.1481366680962965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18836709898337722, 0.1481366680962965, 0.14532308331038804] ***
*** starting iteration: 3; err: [Inf, 0.18836709898337722, 0.1481366680962965, 0.14532308331038804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18836709898337722, 0.1481366680962965, 0.14532308331038804, 0.145250698922202] ***
*** finished computation of 7 references, err: [Inf, 0.18836709898337722, 0.1481366680962965, 0.14532308331038804, 0.145250698922202] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [9, 66, 0]]
** centroid: 1, normalized-entropy: 0.5293608652873645, [(1, 9), (2, 66)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [43, 15, 0]]
** centroid: 2, normalized-entropy: 0.8246578332945033, [(1, 43), (2, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 67, 20]]
** centroid: 4, normalized-entropy: 0.7778108790853029, [(2, 67), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [35, 41, 0]]
** centroid: 5, normalized-entropy: 0.9954993847275952, [(1, 35), (2, 41)]
*** center 6: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19639795455522835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19639795455522835, 0.1548666622117162] ***
*** starting iteration: 2; err: [Inf, 0.19639795455522835, 0.1548666622117162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19639795455522835, 0.1548666622117162, 0.15047392588481306] ***
*** starting iteration: 3; err: [Inf, 0.19639795455522835, 0.1548666622117162, 0.15047392588481306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19639795455522835, 0.1548666622117162, 0.15047392588481306, 0.14917534574959426] ***
*** starting iteration: 4; err: [Inf, 0.19639795455522835, 0.1548666622117162, 0.15047392588481306, 0.14917534574959426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19639795455522835, 0.1548666622117162, 0.15047392588481306, 0.14917534574959426, 0.14854045325051993] ***
*** finished computation of 7 references, err: [Inf, 0.19639795455522835, 0.1548666622117162, 0.15047392588481306, 0.14917534574959426, 0.14854045325051993] ***
*** center 1: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 56, 20]]
** centroid: 2, normalized-entropy: 0.8314743880097292, [(2, 56), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [34, 25, 0]]
** centroid: 3, normalized-entropy: 0.9831491282282879, [(1, 34), (2, 25)]
*** center 4: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [26, 60, 0]]
** centroid: 5, normalized-entropy: 0.8841151220488478, [(1, 26), (2, 60)]
*** center 6: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [4, 60, 0]]
** centroid: 7, normalized-entropy: 0.3372900666170139, [(1, 4), (2, 60)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2014650974953547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014650974953547, 0.15423489216901362] ***
*** starting iteration: 2; err: [Inf, 0.2014650974953547, 0.15423489216901362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014650974953547, 0.15423489216901362, 0.1511447865506634] ***
*** starting iteration: 3; err: [Inf, 0.2014650974953547, 0.15423489216901362, 0.1511447865506634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014650974953547, 0.15423489216901362, 0.1511447865506634, 0.15088147657131776] ***
*** finished computation of 7 references, err: [Inf, 0.2014650974953547, 0.15423489216901362, 0.1511447865506634, 0.15088147657131776] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [50, 5, 0]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(1, 50), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 22, 0]]
** centroid: 2, normalized-entropy: 0.8249658680139929, [(1, 63), (2, 22)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 55, 20]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(2, 55), (3, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [41, 47, 0]]
** centroid: 5, normalized-entropy: 0.99664402524877, [(1, 41), (2, 47)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 63, 0]]
** centroid: 6, normalized-entropy: 0.19823496409776642, [(1, 2), (2, 63)]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20452079141512514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20452079141512514, 0.15461463273130358] ***
*** starting iteration: 2; err: [Inf, 0.20452079141512514, 0.15461463273130358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20452079141512514, 0.15461463273130358, 0.15068737071193755] ***
*** starting iteration: 3; err: [Inf, 0.20452079141512514, 0.15461463273130358, 0.15068737071193755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20452079141512514, 0.15461463273130358, 0.15068737071193755, 0.15028527148626744] ***
*** finished computation of 7 references, err: [Inf, 0.20452079141512514, 0.15461463273130358, 0.15068737071193755, 0.15028527148626744] ***
*** center 1: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 59, 24]]
** centroid: 2, normalized-entropy: 0.8676293117125105, [(2, 59), (3, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [40, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [83, 20, 0]]
** centroid: 4, normalized-entropy: 0.7101234912653349, [(1, 83), (2, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [22, 53, 0]]
** centroid: 5, normalized-entropy: 0.8729882944709463, [(1, 22), (2, 53)]
*** center 6: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 55, 0]]
** centroid: 7, normalized-entropy: 0.29367630985136944, [(1, 3), (2, 55)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21314885623380542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21314885623380542, 0.15414866924844683] ***
*** starting iteration: 2; err: [Inf, 0.21314885623380542, 0.15414866924844683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21314885623380542, 0.15414866924844683, 0.15013579540047794] ***
*** starting iteration: 3; err: [Inf, 0.21314885623380542, 0.15414866924844683, 0.15013579540047794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21314885623380542, 0.15414866924844683, 0.15013579540047794, 0.1495976935811341] ***
*** finished computation of 7 references, err: [Inf, 0.21314885623380542, 0.15414866924844683, 0.15013579540047794, 0.1495976935811341] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [6, 75, 0]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(1, 6), (2, 75)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [50, 33, 0]]
** centroid: 2, normalized-entropy: 0.9695235828220429, [(1, 50), (2, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 68, 20]]
** centroid: 4, normalized-entropy: 0.7732266742876346, [(2, 68), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [51, 15, 0]]
** centroid: 5, normalized-entropy: 0.7732266742876346, [(1, 51), (2, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [67, 1, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1993738162908703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993738162908703, 0.1605664409082383] ***
*** starting iteration: 2; err: [Inf, 0.1993738162908703, 0.1605664409082383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993738162908703, 0.1605664409082383, 0.15544649754092096] ***
*** starting iteration: 3; err: [Inf, 0.1993738162908703, 0.1605664409082383, 0.15544649754092096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993738162908703, 0.1605664409082383, 0.15544649754092096, 0.15281434849649667] ***
*** starting iteration: 4; err: [Inf, 0.1993738162908703, 0.1605664409082383, 0.15544649754092096, 0.15281434849649667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993738162908703, 0.1605664409082383, 0.15544649754092096, 0.15281434849649667, 0.15141333613544702] ***
*** starting iteration: 5; err: [Inf, 0.1993738162908703, 0.1605664409082383, 0.15544649754092096, 0.15281434849649667, 0.15141333613544702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993738162908703, 0.1605664409082383, 0.15544649754092096, 0.15281434849649667, 0.15141333613544702, 0.15086657339707016] ***
*** finished computation of 7 references, err: [Inf, 0.1993738162908703, 0.1605664409082383, 0.15544649754092096, 0.15281434849649667, 0.15141333613544702, 0.15086657339707016] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 61, 3]]
** centroid: 1, normalized-entropy: 0.2729708579140699, [(2, 61), (3, 3)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [51, 23, 0]]
** centroid: 2, normalized-entropy: 0.8941071841443881, [(1, 51), (2, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 54, 19]]
** centroid: 4, normalized-entropy: 0.8271595195340525, [(2, 54), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [29, 45, 0]]
** centroid: 5, normalized-entropy: 0.966009606256856, [(1, 29), (2, 45)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [76, 11, 0]]
** centroid: 6, normalized-entropy: 0.5475844288749033, [(1, 76), (2, 11)]
*** center 7: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19675756852328777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19675756852328777, 0.15694438430387528] ***
*** starting iteration: 2; err: [Inf, 0.19675756852328777, 0.15694438430387528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19675756852328777, 0.15694438430387528, 0.15103184093907476] ***
*** starting iteration: 3; err: [Inf, 0.19675756852328777, 0.15694438430387528, 0.15103184093907476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19675756852328777, 0.15694438430387528, 0.15103184093907476, 0.1494066432453692] ***
*** starting iteration: 4; err: [Inf, 0.19675756852328777, 0.15694438430387528, 0.15103184093907476, 0.1494066432453692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19675756852328777, 0.15694438430387528, 0.15103184093907476, 0.1494066432453692, 0.14848910808051005] ***
*** finished computation of 7 references, err: [Inf, 0.19675756852328777, 0.15694438430387528, 0.15103184093907476, 0.1494066432453692, 0.14848910808051005] ***
*** center 1: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 47, 17]]
** centroid: 3, normalized-entropy: 0.8351164948421137, [(2, 47), (3, 17)]
*** center 4: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [36, 32, 0]]
** centroid: 5, normalized-entropy: 0.9975025463691153, [(1, 36), (2, 32)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [10, 40, 0]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(1, 10), (2, 40)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 63, 0]]
** centroid: 7, normalized-entropy: 0.2667649878030262, [(1, 3), (2, 63)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19086185986176132] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19086185986176132, 0.15684312907606363] ***
*** starting iteration: 2; err: [Inf, 0.19086185986176132, 0.15684312907606363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19086185986176132, 0.15684312907606363, 0.15277714122924954] ***
*** starting iteration: 3; err: [Inf, 0.19086185986176132, 0.15684312907606363, 0.15277714122924954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19086185986176132, 0.15684312907606363, 0.15277714122924954, 0.1518377221506089] ***
*** finished computation of 7 references, err: [Inf, 0.19086185986176132, 0.15684312907606363, 0.15277714122924954, 0.1518377221506089] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [4, 96, 0]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(1, 4), (2, 96)]
*** center 2: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [44, 23, 0]]
** centroid: 3, normalized-entropy: 0.9279262619599757, [(1, 44), (2, 23)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [47, 19, 0]]
** centroid: 4, normalized-entropy: 0.8659653498997099, [(1, 47), (2, 19)]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 50, 24]]
** centroid: 7, normalized-entropy: 0.9090221560878149, [(2, 50), (3, 24)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19060988176614047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19060988176614047, 0.14997212771419435] ***
*** starting iteration: 2; err: [Inf, 0.19060988176614047, 0.14997212771419435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19060988176614047, 0.14997212771419435, 0.14775563784968107] ***
*** starting iteration: 3; err: [Inf, 0.19060988176614047, 0.14997212771419435, 0.14775563784968107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19060988176614047, 0.14997212771419435, 0.14775563784968107, 0.14742562736943365] ***
*** finished computation of 7 references, err: [Inf, 0.19060988176614047, 0.14997212771419435, 0.14775563784968107, 0.14742562736943365] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [60, 11, 0]]
** centroid: 1, normalized-entropy: 0.6220403090607189, [(1, 60), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 13, 0]]
** centroid: 2, normalized-entropy: 0.6705250693158382, [(1, 61), (2, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 44, 19]]
** centroid: 4, normalized-entropy: 0.8832225588099292, [(2, 44), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [29, 54, 0]]
** centroid: 5, normalized-entropy: 0.9335289015212996, [(1, 29), (2, 54)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 70, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19980799244716763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19980799244716763, 0.15566130899172276] ***
*** starting iteration: 2; err: [Inf, 0.19980799244716763, 0.15566130899172276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19980799244716763, 0.15566130899172276, 0.15035301259346306] ***
*** starting iteration: 3; err: [Inf, 0.19980799244716763, 0.15566130899172276, 0.15035301259346306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19980799244716763, 0.15566130899172276, 0.15035301259346306, 0.14990324761345983] ***
*** finished computation of 7 references, err: [Inf, 0.19980799244716763, 0.15566130899172276, 0.15035301259346306, 0.14990324761345983] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [36, 44, 0]]
** centroid: 1, normalized-entropy: 0.9927744539878083, [(1, 36), (2, 44)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [38, 3, 0]]
** centroid: 2, normalized-entropy: 0.3776463213737003, [(1, 38), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 62, 20]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 62), (3, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [64, 12, 0]]
** centroid: 5, normalized-entropy: 0.6292492238560344, [(1, 64), (2, 12)]
*** center 6: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 66, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2111289427075535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2111289427075535, 0.1530030798325315] ***
*** starting iteration: 2; err: [Inf, 0.2111289427075535, 0.1530030798325315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2111289427075535, 0.1530030798325315, 0.1494869123378303] ***
*** starting iteration: 3; err: [Inf, 0.2111289427075535, 0.1530030798325315, 0.1494869123378303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2111289427075535, 0.1530030798325315, 0.1494869123378303, 0.14937146833725273] ***
*** finished computation of 7 references, err: [Inf, 0.2111289427075535, 0.1530030798325315, 0.1494869123378303, 0.14937146833725273] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 62, 21]]
** centroid: 1, normalized-entropy: 0.8160172973428256, [(2, 62), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [44, 2, 0]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(1, 44), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [65, 25, 0]]
** centroid: 4, normalized-entropy: 0.8524051786494784, [(1, 65), (2, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [33, 43, 0]]
** centroid: 5, normalized-entropy: 0.9874750082985965, [(1, 33), (2, 43)]
*** center 6: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 75, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18707334252912552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18707334252912552, 0.15553201064653693] ***
*** starting iteration: 2; err: [Inf, 0.18707334252912552, 0.15553201064653693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18707334252912552, 0.15553201064653693, 0.15183071775501594] ***
*** starting iteration: 3; err: [Inf, 0.18707334252912552, 0.15553201064653693, 0.15183071775501594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18707334252912552, 0.15553201064653693, 0.15183071775501594, 0.15136906963121147] ***
*** finished computation of 7 references, err: [Inf, 0.18707334252912552, 0.15553201064653693, 0.15183071775501594, 0.15136906963121147] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 87, 0]]
** centroid: 1, normalized-entropy: 0.1551032721030341, [(1, 2), (2, 87)]
*** center 2: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [51, 25, 0]]
** centroid: 3, normalized-entropy: 0.9138472873262908, [(1, 51), (2, 25)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [37, 26, 0]]
** centroid: 4, normalized-entropy: 0.9778956822310348, [(1, 37), (2, 26)]
*** center 5: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [76, 1, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 44, 16]]
** centroid: 7, normalized-entropy: 0.8366407419411671, [(2, 44), (3, 16)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18472212030552326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18472212030552326, 0.15759675870276987] ***
*** starting iteration: 2; err: [Inf, 0.18472212030552326, 0.15759675870276987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18472212030552326, 0.15759675870276987, 0.15266764924675227] ***
*** starting iteration: 3; err: [Inf, 0.18472212030552326, 0.15759675870276987, 0.15266764924675227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18472212030552326, 0.15759675870276987, 0.15266764924675227, 0.15077580250706524] ***
*** starting iteration: 4; err: [Inf, 0.18472212030552326, 0.15759675870276987, 0.15266764924675227, 0.15077580250706524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18472212030552326, 0.15759675870276987, 0.15266764924675227, 0.15077580250706524, 0.15026898353546858] ***
*** finished computation of 7 references, err: [Inf, 0.18472212030552326, 0.15759675870276987, 0.15266764924675227, 0.15077580250706524, 0.15026898353546858] ***
*** center 1: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 44, 22]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 44), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [41, 12, 0]]
** centroid: 3, normalized-entropy: 0.7717094696953635, [(1, 41), (2, 12)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [49, 10, 0]]
** centroid: 4, normalized-entropy: 0.656540281386946, [(1, 49), (2, 10)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [9, 60, 0]]
** centroid: 5, normalized-entropy: 0.5586293734521991, [(1, 9), (2, 60)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [22, 66, 0]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(1, 22), (2, 66)]
*** center 7: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19059990336932242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19059990336932242, 0.15447731661051511] ***
*** starting iteration: 2; err: [Inf, 0.19059990336932242, 0.15447731661051511] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19059990336932242, 0.15447731661051511, 0.15073882239311934] ***
*** starting iteration: 3; err: [Inf, 0.19059990336932242, 0.15447731661051511, 0.15073882239311934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19059990336932242, 0.15447731661051511, 0.15073882239311934, 0.14974277487024665] ***
*** finished computation of 7 references, err: [Inf, 0.19059990336932242, 0.15447731661051511, 0.15073882239311934, 0.14974277487024665] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [3, 70, 0]]
** centroid: 1, normalized-entropy: 0.24729443986205674, [(1, 3), (2, 70)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [45, 11, 0]]
** centroid: 2, normalized-entropy: 0.7147274731317893, [(1, 45), (2, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 86, 17]]
** centroid: 4, normalized-entropy: 0.646251622274129, [(2, 86), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [83, 8, 0]]
** centroid: 5, normalized-entropy: 0.4294619720471057, [(1, 83), (2, 8)]
*** center 6: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [41, 5, 0]]
** centroid: 7, normalized-entropy: 0.49596907206183377, [(1, 41), (2, 5)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20383736706152558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20383736706152558, 0.16056224028021096] ***
*** starting iteration: 2; err: [Inf, 0.20383736706152558, 0.16056224028021096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20383736706152558, 0.16056224028021096, 0.15546502266079187] ***
*** starting iteration: 3; err: [Inf, 0.20383736706152558, 0.16056224028021096, 0.15546502266079187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20383736706152558, 0.16056224028021096, 0.15546502266079187, 0.15443265972379594] ***
*** starting iteration: 4; err: [Inf, 0.20383736706152558, 0.16056224028021096, 0.15546502266079187, 0.15443265972379594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20383736706152558, 0.16056224028021096, 0.15546502266079187, 0.15443265972379594, 0.15365867962129415] ***
*** finished computation of 7 references, err: [Inf, 0.20383736706152558, 0.16056224028021096, 0.15546502266079187, 0.15443265972379594, 0.15365867962129415] ***
*** center 1: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 54, 19]]
** centroid: 2, normalized-entropy: 0.8271595195340525, [(2, 54), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [35, 22, 0]]
** centroid: 3, normalized-entropy: 0.9621461334087003, [(1, 35), (2, 22)]
*** center 4: selecting labels [1] (freq >= 2) [from [59, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [7, 59, 0]]
** centroid: 5, normalized-entropy: 0.48791799258948565, [(1, 7), (2, 59)]
*** center 6: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [21, 56, 0]]
** centroid: 7, normalized-entropy: 0.8453509366224364, [(1, 21), (2, 56)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18611158989183604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18611158989183604, 0.15258535917568952] ***
*** starting iteration: 2; err: [Inf, 0.18611158989183604, 0.15258535917568952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18611158989183604, 0.15258535917568952, 0.14840476149134338] ***
*** starting iteration: 3; err: [Inf, 0.18611158989183604, 0.15258535917568952, 0.14840476149134338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18611158989183604, 0.15258535917568952, 0.14840476149134338, 0.14749289184622466] ***
*** finished computation of 7 references, err: [Inf, 0.18611158989183604, 0.15258535917568952, 0.14840476149134338, 0.14749289184622466] ***
*** center 1: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [45, 12, 0]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(1, 45), (2, 12)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 47, 13]]
** centroid: 3, normalized-entropy: 0.7540340561971327, [(2, 47), (3, 13)]
*** center 4: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [12, 68, 0]]
** centroid: 5, normalized-entropy: 0.6098403047164005, [(1, 12), (2, 68)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [10, 60, 0]]
** centroid: 6, normalized-entropy: 0.5916727785823274, [(1, 10), (2, 60)]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1959459055941552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1959459055941552, 0.15621315177343786] ***
*** starting iteration: 2; err: [Inf, 0.1959459055941552, 0.15621315177343786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1959459055941552, 0.15621315177343786, 0.15225699058175088] ***
*** starting iteration: 3; err: [Inf, 0.1959459055941552, 0.15621315177343786, 0.15225699058175088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1959459055941552, 0.15621315177343786, 0.15225699058175088, 0.15149908858537675] ***
*** finished computation of 7 references, err: [Inf, 0.1959459055941552, 0.15621315177343786, 0.15225699058175088, 0.15149908858537675] ***
*** center 1: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 42, 19]]
** centroid: 2, normalized-entropy: 0.8948692308065576, [(2, 42), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [57, 24, 0]]
** centroid: 3, normalized-entropy: 0.876716288999464, [(1, 57), (2, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [67, 3, 0]]
** centroid: 4, normalized-entropy: 0.25524211319019174, [(1, 67), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [14, 66, 0]]
** centroid: 5, normalized-entropy: 0.6690158350565576, [(1, 14), (2, 66)]
*** center 6: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 57, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1970078713390976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1970078713390976, 0.14849658465757967] ***
*** starting iteration: 2; err: [Inf, 0.1970078713390976, 0.14849658465757967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1970078713390976, 0.14849658465757967, 0.1451828732881695] ***
*** starting iteration: 3; err: [Inf, 0.1970078713390976, 0.14849658465757967, 0.1451828732881695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1970078713390976, 0.14849658465757967, 0.1451828732881695, 0.14507274729013442] ***
*** finished computation of 7 references, err: [Inf, 0.1970078713390976, 0.14849658465757967, 0.1451828732881695, 0.14507274729013442] ***
*** center 1: selecting labels [1] (freq >= 2) [from [82, 1, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [38, 17, 0]]
** centroid: 2, normalized-entropy: 0.8921212805771683, [(1, 38), (2, 17)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 49, 20]]
** centroid: 3, normalized-entropy: 0.868533960265235, [(2, 49), (3, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [22, 60, 0]]
** centroid: 5, normalized-entropy: 0.8390040613676978, [(1, 22), (2, 60)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 59, 0]]
** centroid: 6, normalized-entropy: 0.20818094555717087, [(1, 2), (2, 59)]
*** center 7: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19056930156052113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19056930156052113, 0.15459913114644588] ***
*** starting iteration: 2; err: [Inf, 0.19056930156052113, 0.15459913114644588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19056930156052113, 0.15459913114644588, 0.15093360245041548] ***
*** starting iteration: 3; err: [Inf, 0.19056930156052113, 0.15459913114644588, 0.15093360245041548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19056930156052113, 0.15459913114644588, 0.15093360245041548, 0.150158145819325] ***
*** finished computation of 7 references, err: [Inf, 0.19056930156052113, 0.15459913114644588, 0.15093360245041548, 0.150158145819325] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [62, 6, 0]]
** centroid: 1, normalized-entropy: 0.43055186701043935, [(1, 62), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [70, 2, 0]]
** centroid: 2, normalized-entropy: 0.18312206830137262, [(1, 70), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 38, 15]]
** centroid: 3, normalized-entropy: 0.8595316914502928, [(2, 38), (3, 15)]
*** center 4: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [12, 74, 0]]
** centroid: 5, normalized-entropy: 0.5830194167347007, [(1, 12), (2, 74)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [52, 7, 0]]
** centroid: 6, normalized-entropy: 0.5254506799086205, [(1, 52), (2, 7)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 78, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18389070217683912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18389070217683912, 0.15138936805538833] ***
*** starting iteration: 2; err: [Inf, 0.18389070217683912, 0.15138936805538833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18389070217683912, 0.15138936805538833, 0.14834825712814928] ***
*** starting iteration: 3; err: [Inf, 0.18389070217683912, 0.15138936805538833, 0.14834825712814928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18389070217683912, 0.15138936805538833, 0.14834825712814928, 0.14817098900862039] ***
*** finished computation of 7 references, err: [Inf, 0.18389070217683912, 0.15138936805538833, 0.14834825712814928, 0.14817098900862039] ***
*** center 1: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [34, 23, 0]]
** centroid: 2, normalized-entropy: 0.9729661265889024, [(1, 34), (2, 23)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 49, 16]]
** centroid: 3, normalized-entropy: 0.8051250074646822, [(2, 49), (3, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [13, 72, 0]]
** centroid: 5, normalized-entropy: 0.617151919200282, [(1, 13), (2, 72)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [11, 53, 0]]
** centroid: 6, normalized-entropy: 0.6619760641115651, [(1, 11), (2, 53)]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19463559144549072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19463559144549072, 0.147929234623909] ***
*** starting iteration: 2; err: [Inf, 0.19463559144549072, 0.147929234623909] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19463559144549072, 0.147929234623909, 0.1452479589395225] ***
*** starting iteration: 3; err: [Inf, 0.19463559144549072, 0.147929234623909, 0.1452479589395225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19463559144549072, 0.147929234623909, 0.1452479589395225, 0.14489007754810154] ***
*** finished computation of 7 references, err: [Inf, 0.19463559144549072, 0.147929234623909, 0.1452479589395225, 0.14489007754810154] ***
*** center 1: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [37, 22, 0]]
** centroid: 2, normalized-entropy: 0.9528588097297789, [(1, 37), (2, 22)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 60, 15]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 60), (3, 15)]
*** center 4: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [26, 47, 0]]
** centroid: 5, normalized-entropy: 0.9394532068181357, [(1, 26), (2, 47)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 71, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2063255490884185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2063255490884185, 0.1554612326542847] ***
*** starting iteration: 2; err: [Inf, 0.2063255490884185, 0.1554612326542847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2063255490884185, 0.1554612326542847, 0.15196776124089956] ***
*** starting iteration: 3; err: [Inf, 0.2063255490884185, 0.1554612326542847, 0.15196776124089956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2063255490884185, 0.1554612326542847, 0.15196776124089956, 0.15162388854753225] ***
*** finished computation of 7 references, err: [Inf, 0.2063255490884185, 0.1554612326542847, 0.15196776124089956, 0.15162388854753225] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [42, 35, 0]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(1, 42), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [46, 6, 0]]
** centroid: 2, normalized-entropy: 0.5159469300074472, [(1, 46), (2, 6)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 57, 23]]
** centroid: 3, normalized-entropy: 0.8654698974285927, [(2, 57), (3, 23)]
*** center 4: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [44, 25, 0]]
** centroid: 5, normalized-entropy: 0.9445911819316588, [(1, 44), (2, 25)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 69, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19066652019880712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19066652019880712, 0.1583458870826289] ***
*** starting iteration: 2; err: [Inf, 0.19066652019880712, 0.1583458870826289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19066652019880712, 0.1583458870826289, 0.15378660553507506] ***
*** starting iteration: 3; err: [Inf, 0.19066652019880712, 0.1583458870826289, 0.15378660553507506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19066652019880712, 0.1583458870826289, 0.15378660553507506, 0.15161701279133558] ***
*** starting iteration: 4; err: [Inf, 0.19066652019880712, 0.1583458870826289, 0.15378660553507506, 0.15161701279133558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19066652019880712, 0.1583458870826289, 0.15378660553507506, 0.15161701279133558, 0.15015079100057482] ***
*** starting iteration: 5; err: [Inf, 0.19066652019880712, 0.1583458870826289, 0.15378660553507506, 0.15161701279133558, 0.15015079100057482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19066652019880712, 0.1583458870826289, 0.15378660553507506, 0.15161701279133558, 0.15015079100057482, 0.1499291265811771] ***
*** finished computation of 7 references, err: [Inf, 0.19066652019880712, 0.1583458870826289, 0.15378660553507506, 0.15161701279133558, 0.15015079100057482, 0.1499291265811771] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 74, 17]]
** centroid: 1, normalized-entropy: 0.6947570868163001, [(2, 74), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [44, 3, 0]]
** centroid: 3, normalized-entropy: 0.3424637724817958, [(1, 44), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [39, 29, 0]]
** centroid: 4, normalized-entropy: 0.9843432030984676, [(1, 39), (2, 29)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [67, 15, 0]]
** centroid: 5, normalized-entropy: 0.6864381668766382, [(1, 67), (2, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [6, 74, 0]]
** centroid: 7, normalized-entropy: 0.3843115441264972, [(1, 6), (2, 74)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19780380028299988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19780380028299988, 0.15215220108814537] ***
*** starting iteration: 2; err: [Inf, 0.19780380028299988, 0.15215220108814537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19780380028299988, 0.15215220108814537, 0.1481304629324004] ***
*** starting iteration: 3; err: [Inf, 0.19780380028299988, 0.15215220108814537, 0.1481304629324004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19780380028299988, 0.15215220108814537, 0.1481304629324004, 0.1474766790419817] ***
*** finished computation of 7 references, err: [Inf, 0.19780380028299988, 0.15215220108814537, 0.1481304629324004, 0.1474766790419817] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [37, 38, 0]]
** centroid: 1, normalized-entropy: 0.999871756640849, [(1, 37), (2, 38)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [50, 6, 0]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(1, 50), (2, 6)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 49, 21]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 49), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [69, 9, 0]]
** centroid: 5, normalized-entropy: 0.5159469300074472, [(1, 69), (2, 9)]
*** center 6: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 84, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20671271772217006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20671271772217006, 0.15301394318044187] ***
*** starting iteration: 2; err: [Inf, 0.20671271772217006, 0.15301394318044187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20671271772217006, 0.15301394318044187, 0.14935207340493797] ***
*** starting iteration: 3; err: [Inf, 0.20671271772217006, 0.15301394318044187, 0.14935207340493797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20671271772217006, 0.15301394318044187, 0.14935207340493797, 0.1484188144132495] ***
*** finished computation of 7 references, err: [Inf, 0.20671271772217006, 0.15301394318044187, 0.14935207340493797, 0.1484188144132495] ***
*** center 1: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 47, 20]]
** centroid: 2, normalized-entropy: 0.8794587736429037, [(2, 47), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [43, 5, 0]]
** centroid: 3, normalized-entropy: 0.4820661480830933, [(1, 43), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [73, 14, 0]]
** centroid: 4, normalized-entropy: 0.6365048555378351, [(1, 73), (2, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [27, 60, 0]]
** centroid: 5, normalized-entropy: 0.8935711016541908, [(1, 27), (2, 60)]
*** center 6: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 66, 0]]
** centroid: 7, normalized-entropy: 0.2580186686648155, [(1, 3), (2, 66)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19778956246189774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19778956246189774, 0.15184420565422624] ***
*** starting iteration: 2; err: [Inf, 0.19778956246189774, 0.15184420565422624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19778956246189774, 0.15184420565422624, 0.14833699758839794] ***
*** starting iteration: 3; err: [Inf, 0.19778956246189774, 0.15184420565422624, 0.14833699758839794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19778956246189774, 0.15184420565422624, 0.14833699758839794, 0.14745325190015138] ***
*** finished computation of 7 references, err: [Inf, 0.19778956246189774, 0.15184420565422624, 0.14833699758839794, 0.14745325190015138] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 59, 19]]
** centroid: 1, normalized-entropy: 0.8009591077369054, [(2, 59), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [37, 7, 0]]
** centroid: 3, normalized-entropy: 0.6321302781219708, [(1, 37), (2, 7)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [60, 20, 0]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(1, 60), (2, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [48, 32, 0]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(1, 48), (2, 32)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 72, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19407255397364498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407255397364498, 0.15559651673957706] ***
*** starting iteration: 2; err: [Inf, 0.19407255397364498, 0.15559651673957706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407255397364498, 0.15559651673957706, 0.15074710271134972] ***
*** starting iteration: 3; err: [Inf, 0.19407255397364498, 0.15559651673957706, 0.15074710271134972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407255397364498, 0.15559651673957706, 0.15074710271134972, 0.14980319824814797] ***
*** finished computation of 7 references, err: [Inf, 0.19407255397364498, 0.15559651673957706, 0.15074710271134972, 0.14980319824814797] ***
*** center 1: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 44, 15]]
** centroid: 2, normalized-entropy: 0.8179252501386403, [(2, 44), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [43, 18, 0]]
** centroid: 3, normalized-entropy: 0.8751957887407251, [(1, 43), (2, 18)]
*** center 4: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [9, 73, 0]]
** centroid: 5, normalized-entropy: 0.49917983618854633, [(1, 9), (2, 73)]
*** center 6: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [19, 60, 0]]
** centroid: 7, normalized-entropy: 0.7958812735955936, [(1, 19), (2, 60)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20163236868195236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20163236868195236, 0.15542537142243237] ***
*** starting iteration: 2; err: [Inf, 0.20163236868195236, 0.15542537142243237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20163236868195236, 0.15542537142243237, 0.15164684120938182] ***
*** starting iteration: 3; err: [Inf, 0.20163236868195236, 0.15542537142243237, 0.15164684120938182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20163236868195236, 0.15542537142243237, 0.15164684120938182, 0.15111750306934119] ***
*** finished computation of 7 references, err: [Inf, 0.20163236868195236, 0.15542537142243237, 0.15164684120938182, 0.15111750306934119] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 23]]
** centroid: 1, normalized-entropy: 0.987380023288353, [(2, 30), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [54, 7, 0]]
** centroid: 3, normalized-entropy: 0.5140912790181233, [(1, 54), (2, 7)]
*** center 4: selecting labels [1] (freq >= 2) [from [85, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [74, 5, 0]]
** centroid: 5, normalized-entropy: 0.340373285759646, [(1, 74), (2, 5)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 78, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 65, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1839039747947827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1839039747947827, 0.1488862634645775] ***
*** starting iteration: 2; err: [Inf, 0.1839039747947827, 0.1488862634645775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1839039747947827, 0.1488862634645775, 0.14659587232209742] ***
*** starting iteration: 3; err: [Inf, 0.1839039747947827, 0.1488862634645775, 0.14659587232209742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1839039747947827, 0.1488862634645775, 0.14659587232209742, 0.14631642980128526] ***
*** finished computation of 7 references, err: [Inf, 0.1839039747947827, 0.1488862634645775, 0.14659587232209742, 0.14631642980128526] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [18, 67, 0]]
** centroid: 1, normalized-entropy: 0.7448423974714387, [(1, 18), (2, 67)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [48, 6, 0]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(1, 48), (2, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 47, 26]]
** centroid: 4, normalized-entropy: 0.9394532068181357, [(2, 47), (3, 26)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [70, 4, 0]]
** centroid: 5, normalized-entropy: 0.30337483608641397, [(1, 70), (2, 4)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 77, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
finished with 9 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 381,3 => 40,1 => 579), Dict(2 => 384,3 => 37,1 => 579))
[ Info: ===== scores for single classifier: {"micro_f1":0.91,"precision":0.91,"recall":0.91,"macro_recall":0.9394160189982729,"macro_f1":0.8480372326360247,"accuracy":0.91,"class_f1":{"2":0.887218045112782,"3":0.7115384615384616,"1":0.9453551912568305},"class_precision":{"2":0.855072463768116,"3":0.5522388059701493,"1":1.0},"class_recall":{"2":0.921875,"3":1.0,"1":0.8963730569948186}}
[ Info: ===== scores for 1: {"micro_f1":0.9469999999999998,"precision":0.947,"recall":0.947,"macro_recall":0.9592553612550373,"macro_f1":0.9454336005089287,"accuracy":0.947,"class_f1":{"2":0.929427430093209,"3":0.9487179487179488,"1":0.9581554227156277},"class_precision":{"2":0.9509536784741145,"3":0.9024390243902439,"1":0.9476351351351351},"class_recall":{"2":0.9088541666666666,"3":1.0,"1":0.9689119170984456}}
[ Info: ===== scores for 5: {"micro_f1":0.958,"precision":0.958,"recall":0.958,"macro_recall":0.9702657239493381,"macro_f1":0.9464123233016194,"accuracy":0.958,"class_f1":{"2":0.9455958549222799,"3":0.9249999999999999,"1":0.9686411149825784},"class_precision":{"2":0.9407216494845361,"3":0.8604651162790697,"1":0.9771528998242531},"class_recall":{"2":0.9505208333333334,"3":1.0,"1":0.9602763385146805}}
[ Info: ===== scores for 7: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9757574122049509,"macro_f1":0.9515037329201297,"accuracy":0.965,"class_f1":{"2":0.9548387096774194,"3":0.9249999999999999,"1":0.9746724890829694},"class_precision":{"2":0.9462915601023018,"3":0.8604651162790697,"1":0.9858657243816255},"class_recall":{"2":0.9635416666666666,"3":1.0,"1":0.9637305699481865}}
[ Info: ===== scores for 9: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9754650618883133,"macro_f1":0.9514795050026449,"accuracy":0.965,"class_f1":{"2":0.9547218628719276,"3":0.9249999999999999,"1":0.9747166521360069},"class_precision":{"2":0.9485861182519281,"3":0.8604651162790697,"1":0.9841549295774648},"class_recall":{"2":0.9609375,"3":1.0,"1":0.9654576856649395}}
[ Info: ===== scores for 11: {"micro_f1":0.964,"precision":0.964,"recall":0.964,"macro_recall":0.9748893566493955,"macro_f1":0.9507701205406063,"accuracy":0.964,"class_f1":{"2":0.9534883720930233,"3":0.9249999999999999,"1":0.9738219895287958},"class_precision":{"2":0.9461538461538461,"3":0.8604651162790697,"1":0.9841269841269841},"class_recall":{"2":0.9609375,"3":1.0,"1":0.9637305699481865}}
(score = 0.947, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.947, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.947, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.947, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.956, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.956, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.958, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.962, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.962, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.958, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.961, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.961, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.965, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.965,"k":7,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9757574122049509,"macro_f1":0.9515037329201297,"accuracy":0.965,"class_f1":{"2":0.9548387096774194,"3":0.9249999999999999,"1":0.9746724890829694},"class_precision":{"2":0.9462915601023018,"3":0.8604651162790697,"1":0.9858657243816255},"class_recall":{"2":0.9635416666666666,"3":1.0,"1":0.9637305699481865}}
Test Summary: | Pass  Total
AKNC          |    8      8
[726, 2, 1, 3, 1, 1, 2, 4, 1, 3, 6, 3, 1, 4, 4, 5, 1, 7, 2, 2, 4, 6, 5, 2, 4, 2, 9, 1, 2, 3, 9, 21, 16, 7, 16, 12, 2, 3, 8, 4, 19, 7, 36, 7, 10, 4, 4, 16, 5, 16, 9, 4, 4, 35, 3, 14, 3, 4, 11, 5, 34, 56, 1, 5, 11, 17, 4, 50, 179, 8, 36, 28, 5, 8, 15, 14, 16, 31, 6, 1, 19, 29, 60, 15, 16, 29, 6, 23, 32, 12, 6, 39, 16, 5, 20, 27, 13, 9, 8, 7, 28, 7, 5, 17, 4, 51, 7, 42, 5, 25, 7, 62, 11, 64, 36, 56, 38, 8, 46, 3, 2, 9, 4, 102, 8, 22, 37, 16, 3, 20, 7, 14, 64, 1, 54, 84, 53, 141, 10, 19, 72, 5, 5, 51, 18, 7, 13, 3, 12, 18, 14, 7, 6, 5, 14, 10, 184, 34, 8, 3, 6, 5, 61, 55, 13, 5, 32, 122, 31, 42, 11, 18, 34, 6, 12, 3, 11, 6, 90, 36, 561, 21, 20, 4, 15, 46, 19, 8, 30, 50, 21, 12, 108, 36, 76, 15, 129, 5, 6, 4, 55, 24, 38, 9, 33, 15, 209, 9, 2, 13, 18, 4, 236, 78, 214, 4, 66, 89, 17, 225, 15, 97, 11, 28, 67, 4, 7, 12, 1, 21, 1, 24, 35, 23, 13, 29, 13, 79, 6, 4, 36, 6, 104, 26, 4, 29, 138, 11, 38, 12, 21, 2, 35, 8, 56, 61, 9, 39, 13, 18, 118, 36, 15, 9, 7, 45, 319, 15, 58, 95, 6, 121, 71, 14, 5, 4, 75, 71, 8, 42, 4, 13, 26, 6, 54, 8, 125, 5, 3, 25, 91, 96, 73, 35, 65, 114, 20, 20, 52, 4]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6380000000000001, speedup = 0.2712018065226101, eval_ratio = 0.076227)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.3750000000000001,"f1":null,"seconds":0.00015482120215892792,"exhaustive_search_seconds":0.00034457072615623474,"evaluations":460.390625,"distances_sum":1732.9134156528053}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5384424603174601,"recall":0.5381944444444443,"f1":0.5383029513888887,"seconds":0.0002451520413160324,"exhaustive_search_seconds":0.00034457072615623474,"evaluations":580.6640625,"distances_sum":1672.733918325267}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6440972222222218,"recall":0.6440972222222218,"f1":0.6440972222222218,"seconds":0.00032908469438552856,"exhaustive_search_seconds":0.00034457072615623474,"evaluations":696.1484375,"distances_sum":1621.7723637886518}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7222222222222217,"recall":0.7222222222222217,"f1":0.7222222222222217,"seconds":0.0007550939917564392,"exhaustive_search_seconds":0.00034457072615623474,"evaluations":820.265625,"distances_sum":1593.495343557832}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7786458333333327,"recall":0.7786458333333327,"f1":0.7786458333333327,"seconds":0.0004739426076412201,"exhaustive_search_seconds":0.00034457072615623474,"evaluations":926.953125,"distances_sum":1575.380719736839}
KCenters.DeloneInvIndex> reached performance {"precision":0.8307291666666659,"recall":0.8307291666666659,"f1":0.8307291666666659,"seconds":0.0005651116371154785,"exhaustive_search_seconds":0.00034457072615623474,"evaluations":1032.5,"distances_sum":1562.9350407023303}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8199999999999997, speedup = 0.6275383557137303, eval_ratio = 0.102725)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
